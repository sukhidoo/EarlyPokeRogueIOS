var sy=Object.defineProperty;var r=(R,e)=>sy(R,"name",{value:e,configurable:!0});import{S as A,U as E,i as _,af as sO,g as T,y as DA,u as nR,e as SA,ag as nI,ah as S_,z as pm,A as He,b as ay,ai as ny,Y as ue,j as ry,a1 as xR,h as nE,a5 as UE,N as VA,n as sS,P as wR,aj as x4,ak as gm,a8 as tH,m as iy,al as Cy,w as T_,W as Z4,t as WL,am as _O,an as LH,ao as Uy,ap as RC,a6 as mm,o as oy,a9 as My,J as we,T as ym,B as WE,f as We,a as Kt,p as UT,c as Dy,aq as Vm,G as ly,F as _y,ar as Gy,r as _N,M as OC,_ as s_,as as nN,at as Py,au as Hy,a7 as b4,av as Qr,aw as uy,ax as cy,d as wm,ay as By,D as Pe,v as gI,az as Ky,aA as fy,aB as Fy}from"./index-C8_KmSui.js";var k4=(R=>(R[R.MOVE=0]="MOVE",R[R.LEGENDARY=1]="LEGENDARY",R[R.SHINY=2]="SHINY",R))(k4||{}),t=(R=>(R[R.UNKNOWN=-1]="UNKNOWN",R[R.NORMAL=0]="NORMAL",R[R.FIGHTING=1]="FIGHTING",R[R.FLYING=2]="FLYING",R[R.POISON=3]="POISON",R[R.GROUND=4]="GROUND",R[R.ROCK=5]="ROCK",R[R.BUG=6]="BUG",R[R.GHOST=7]="GHOST",R[R.STEEL=8]="STEEL",R[R.FIRE=9]="FIRE",R[R.WATER=10]="WATER",R[R.GRASS=11]="GRASS",R[R.ELECTRIC=12]="ELECTRIC",R[R.PSYCHIC=13]="PSYCHIC",R[R.ICE=14]="ICE",R[R.DRAGON=15]="DRAGON",R[R.DARK=16]="DARK",R[R.FAIRY=17]="FAIRY",R[R.STELLAR=18]="STELLAR",R))(t||{}),mA=(R=>(R[R.GENDERLESS=-1]="GENDERLESS",R[R.MALE=0]="MALE",R[R.FEMALE=1]="FEMALE",R))(mA||{});function $s(R){switch(R){case 0:return"♂";case 1:return"♀"}return""}r($s,"getGenderSymbol");function aS(R,e){switch(R){case 0:return e?"#006090":"#40c8f8";case 1:return e?"#984038":"#f89890"}return"#ffffff"}r(aS,"getGenderColor");var MA=(R=>(R[R.POKEBALL=0]="POKEBALL",R[R.GREAT_BALL=1]="GREAT_BALL",R[R.ULTRA_BALL=2]="ULTRA_BALL",R[R.ROGUE_BALL=3]="ROGUE_BALL",R[R.MASTER_BALL=4]="MASTER_BALL",R[R.LUXURY_BALL=5]="LUXURY_BALL",R))(MA||{}),Z=(R=>(R[R.NONE=0]="NONE",R[R.SUNNY=1]="SUNNY",R[R.RAIN=2]="RAIN",R[R.SANDSTORM=3]="SANDSTORM",R[R.HAIL=4]="HAIL",R[R.SNOW=5]="SNOW",R[R.FOG=6]="FOG",R[R.HEAVY_RAIN=7]="HEAVY_RAIN",R[R.HARSH_SUN=8]="HARSH_SUN",R[R.STRONG_WINDS=9]="STRONG_WINDS",R))(Z||{}),ZA=(R=>(R[R.HARDY=0]="HARDY",R[R.LONELY=1]="LONELY",R[R.BRAVE=2]="BRAVE",R[R.ADAMANT=3]="ADAMANT",R[R.NAUGHTY=4]="NAUGHTY",R[R.BOLD=5]="BOLD",R[R.DOCILE=6]="DOCILE",R[R.RELAXED=7]="RELAXED",R[R.IMPISH=8]="IMPISH",R[R.LAX=9]="LAX",R[R.TIMID=10]="TIMID",R[R.HASTY=11]="HASTY",R[R.SERIOUS=12]="SERIOUS",R[R.JOLLY=13]="JOLLY",R[R.NAIVE=14]="NAIVE",R[R.MODEST=15]="MODEST",R[R.MILD=16]="MILD",R[R.QUIET=17]="QUIET",R[R.BASHFUL=18]="BASHFUL",R[R.RASH=19]="RASH",R[R.CALM=20]="CALM",R[R.GENTLE=21]="GENTLE",R[R.SASSY=22]="SASSY",R[R.CAREFUL=23]="CAREFUL",R[R.QUIRKY=24]="QUIRKY",R))(ZA||{}),s=(R=>(R[R.TOWN=0]="TOWN",R[R.PLAINS=1]="PLAINS",R[R.GRASS=2]="GRASS",R[R.TALL_GRASS=3]="TALL_GRASS",R[R.METROPOLIS=4]="METROPOLIS",R[R.FOREST=5]="FOREST",R[R.SEA=6]="SEA",R[R.SWAMP=7]="SWAMP",R[R.BEACH=8]="BEACH",R[R.LAKE=9]="LAKE",R[R.SEABED=10]="SEABED",R[R.MOUNTAIN=11]="MOUNTAIN",R[R.BADLANDS=12]="BADLANDS",R[R.CAVE=13]="CAVE",R[R.DESERT=14]="DESERT",R[R.ICE_CAVE=15]="ICE_CAVE",R[R.MEADOW=16]="MEADOW",R[R.POWER_PLANT=17]="POWER_PLANT",R[R.VOLCANO=18]="VOLCANO",R[R.GRAVEYARD=19]="GRAVEYARD",R[R.DOJO=20]="DOJO",R[R.FACTORY=21]="FACTORY",R[R.RUINS=22]="RUINS",R[R.WASTELAND=23]="WASTELAND",R[R.ABYSS=24]="ABYSS",R[R.SPACE=25]="SPACE",R[R.CONSTRUCTION_SITE=26]="CONSTRUCTION_SITE",R[R.JUNGLE=27]="JUNGLE",R[R.FAIRY_CAVE=28]="FAIRY_CAVE",R[R.TEMPLE=29]="TEMPLE",R[R.SLUM=30]="SLUM",R[R.SNOWY_FOREST=31]="SNOWY_FOREST",R[R.ISLAND=40]="ISLAND",R[R.LABORATORY=41]="LABORATORY",R[R.END=50]="END",R))(s||{}),eA=(R=>(R.MEGA="mega",R.MEGA_X="mega-x",R.MEGA_Y="mega-y",R.PRIMAL="primal",R.ORIGIN="origin",R.INCARNATE="incarnate",R.THERIAN="therian",R.GIGANTAMAX="gigantamax",R.GIGANTAMAX_SINGLE="gigantamax-single",R.GIGANTAMAX_RAPID="gigantamax-rapid",R.ETERNAMAX="eternamax",R))(eA||{}),a=(R=>(R[R.ALL=-1]="ALL",R[R.DAWN=0]="DAWN",R[R.DAY=1]="DAY",R[R.DUSK=2]="DUSK",R[R.NIGHT=3]="NIGHT",R))(a||{});const Yy=5,Wy=3,i7=3,hy=6;function X4(R){switch(R){case 1:return 25;case 2:return 50;case 3:return 75;case 4:return 100;case 5:return 150;case 6:return 200;case 7:return 300;case 8:case 9:return 450;default:return 600}}r(X4,"getStarterValueFriendshipCap");const FR={[A.BULBASAUR]:3,[A.CHARMANDER]:3,[A.SQUIRTLE]:3,[A.CATERPIE]:2,[A.WEEDLE]:1,[A.PIDGEY]:1,[A.RATTATA]:1,[A.SPEAROW]:1,[A.EKANS]:2,[A.PIKACHU]:4,[A.SANDSHREW]:2,[A.NIDORAN_F]:3,[A.NIDORAN_M]:3,[A.VULPIX]:3,[A.ZUBAT]:3,[A.ODDISH]:3,[A.PARAS]:2,[A.VENONAT]:2,[A.DIGLETT]:2,[A.MEOWTH]:3,[A.PSYDUCK]:2,[A.MANKEY]:4,[A.GROWLITHE]:4,[A.POLIWAG]:2,[A.ABRA]:4,[A.MACHOP]:3,[A.BELLSPROUT]:2,[A.TENTACOOL]:3,[A.GEODUDE]:3,[A.PONYTA]:2,[A.SLOWPOKE]:3,[A.MAGNEMITE]:4,[A.FARFETCHD]:2,[A.DODUO]:3,[A.SEEL]:1,[A.GRIMER]:2,[A.SHELLDER]:5,[A.GASTLY]:4,[A.ONIX]:3,[A.DROWZEE]:2,[A.KRABBY]:3,[A.VOLTORB]:2,[A.EXEGGCUTE]:3,[A.CUBONE]:3,[A.LICKITUNG]:3,[A.KOFFING]:2,[A.RHYHORN]:4,[A.TANGELA]:3,[A.KANGASKHAN]:4,[A.HORSEA]:3,[A.GOLDEEN]:2,[A.STARYU]:3,[A.SCYTHER]:5,[A.PINSIR]:4,[A.TAUROS]:4,[A.MAGIKARP]:4,[A.LAPRAS]:4,[A.DITTO]:2,[A.EEVEE]:3,[A.PORYGON]:4,[A.OMANYTE]:3,[A.KABUTO]:3,[A.AERODACTYL]:5,[A.ARTICUNO]:5,[A.ZAPDOS]:6,[A.MOLTRES]:6,[A.DRATINI]:4,[A.MEWTWO]:8,[A.MEW]:5,[A.CHIKORITA]:2,[A.CYNDAQUIL]:3,[A.TOTODILE]:3,[A.SENTRET]:1,[A.HOOTHOOT]:2,[A.LEDYBA]:1,[A.SPINARAK]:1,[A.CHINCHOU]:2,[A.PICHU]:4,[A.CLEFFA]:2,[A.IGGLYBUFF]:1,[A.TOGEPI]:3,[A.NATU]:2,[A.MAREEP]:2,[A.HOPPIP]:2,[A.AIPOM]:2,[A.SUNKERN]:1,[A.YANMA]:3,[A.WOOPER]:2,[A.MURKROW]:3,[A.MISDREAVUS]:3,[A.UNOWN]:1,[A.GIRAFARIG]:3,[A.PINECO]:2,[A.DUNSPARCE]:3,[A.GLIGAR]:3,[A.SNUBBULL]:2,[A.QWILFISH]:3,[A.SHUCKLE]:3,[A.HERACROSS]:5,[A.SNEASEL]:4,[A.TEDDIURSA]:4,[A.SLUGMA]:2,[A.SWINUB]:3,[A.CORSOLA]:2,[A.REMORAID]:2,[A.DELIBIRD]:2,[A.SKARMORY]:4,[A.HOUNDOUR]:3,[A.PHANPY]:3,[A.STANTLER]:3,[A.SMEARGLE]:1,[A.TYROGUE]:3,[A.SMOOCHUM]:3,[A.ELEKID]:3,[A.MAGBY]:3,[A.MILTANK]:4,[A.RAIKOU]:6,[A.ENTEI]:6,[A.SUICUNE]:6,[A.LARVITAR]:4,[A.LUGIA]:8,[A.HO_OH]:8,[A.CELEBI]:5,[A.TREECKO]:3,[A.TORCHIC]:4,[A.MUDKIP]:3,[A.POOCHYENA]:2,[A.ZIGZAGOON]:2,[A.WURMPLE]:1,[A.LOTAD]:3,[A.SEEDOT]:2,[A.TAILLOW]:3,[A.WINGULL]:2,[A.RALTS]:4,[A.SURSKIT]:2,[A.SHROOMISH]:3,[A.SLAKOTH]:4,[A.NINCADA]:4,[A.WHISMUR]:2,[A.MAKUHITA]:3,[A.AZURILL]:4,[A.NOSEPASS]:2,[A.SKITTY]:1,[A.SABLEYE]:2,[A.MAWILE]:2,[A.ARON]:3,[A.MEDITITE]:3,[A.ELECTRIKE]:2,[A.PLUSLE]:2,[A.MINUN]:2,[A.VOLBEAT]:2,[A.ILLUMISE]:2,[A.GULPIN]:1,[A.CARVANHA]:3,[A.WAILMER]:2,[A.NUMEL]:2,[A.TORKOAL]:3,[A.SPOINK]:2,[A.SPINDA]:1,[A.TRAPINCH]:3,[A.CACNEA]:2,[A.SWABLU]:2,[A.ZANGOOSE]:4,[A.SEVIPER]:3,[A.LUNATONE]:3,[A.SOLROCK]:3,[A.BARBOACH]:2,[A.CORPHISH]:3,[A.BALTOY]:2,[A.LILEEP]:3,[A.ANORITH]:3,[A.FEEBAS]:4,[A.CASTFORM]:1,[A.KECLEON]:2,[A.SHUPPET]:2,[A.DUSKULL]:3,[A.TROPIUS]:3,[A.ABSOL]:4,[A.WYNAUT]:2,[A.SNORUNT]:2,[A.SPHEAL]:2,[A.CLAMPERL]:3,[A.RELICANTH]:3,[A.LUVDISC]:1,[A.BAGON]:4,[A.BELDUM]:4,[A.REGIROCK]:6,[A.REGICE]:5,[A.REGISTEEL]:6,[A.LATIAS]:7,[A.LATIOS]:7,[A.KYOGRE]:9,[A.GROUDON]:9,[A.RAYQUAZA]:9,[A.JIRACHI]:7,[A.DEOXYS]:7,[A.TURTWIG]:3,[A.CHIMCHAR]:3,[A.PIPLUP]:3,[A.STARLY]:3,[A.BIDOOF]:2,[A.KRICKETOT]:1,[A.SHINX]:2,[A.BUDEW]:3,[A.CRANIDOS]:2,[A.SHIELDON]:3,[A.BURMY]:2,[A.COMBEE]:2,[A.PACHIRISU]:2,[A.BUIZEL]:2,[A.CHERUBI]:1,[A.SHELLOS]:3,[A.DRIFLOON]:2,[A.BUNEARY]:2,[A.GLAMEOW]:2,[A.CHINGLING]:2,[A.STUNKY]:2,[A.BRONZOR]:3,[A.BONSLY]:2,[A.MIME_JR]:2,[A.HAPPINY]:2,[A.CHATOT]:2,[A.SPIRITOMB]:4,[A.GIBLE]:4,[A.MUNCHLAX]:4,[A.RIOLU]:3,[A.HIPPOPOTAS]:3,[A.SKORUPI]:3,[A.CROAGUNK]:2,[A.CARNIVINE]:2,[A.FINNEON]:1,[A.MANTYKE]:2,[A.SNOVER]:2,[A.ROTOM]:4,[A.UXIE]:5,[A.MESPRIT]:5,[A.AZELF]:6,[A.DIALGA]:8,[A.PALKIA]:8,[A.HEATRAN]:7,[A.REGIGIGAS]:7,[A.GIRATINA]:8,[A.CRESSELIA]:6,[A.PHIONE]:4,[A.MANAPHY]:7,[A.DARKRAI]:7,[A.SHAYMIN]:6,[A.ARCEUS]:9,[A.VICTINI]:6,[A.SNIVY]:3,[A.TEPIG]:3,[A.OSHAWOTT]:3,[A.PATRAT]:1,[A.LILLIPUP]:3,[A.PURRLOIN]:2,[A.PANSAGE]:2,[A.PANSEAR]:2,[A.PANPOUR]:2,[A.MUNNA]:2,[A.PIDOVE]:1,[A.BLITZLE]:2,[A.ROGGENROLA]:3,[A.WOOBAT]:3,[A.DRILBUR]:4,[A.AUDINO]:3,[A.TIMBURR]:4,[A.TYMPOLE]:3,[A.THROH]:4,[A.SAWK]:4,[A.SEWADDLE]:2,[A.VENIPEDE]:3,[A.COTTONEE]:3,[A.PETILIL]:3,[A.BASCULIN]:4,[A.SANDILE]:4,[A.DARUMAKA]:4,[A.MARACTUS]:2,[A.DWEBBLE]:2,[A.SCRAGGY]:3,[A.SIGILYPH]:4,[A.YAMASK]:3,[A.TIRTOUGA]:3,[A.ARCHEN]:3,[A.TRUBBISH]:2,[A.ZORUA]:3,[A.MINCCINO]:3,[A.GOTHITA]:3,[A.SOLOSIS]:3,[A.DUCKLETT]:2,[A.VANILLITE]:3,[A.DEERLING]:2,[A.EMOLGA]:2,[A.KARRABLAST]:3,[A.FOONGUS]:3,[A.FRILLISH]:3,[A.ALOMOMOLA]:4,[A.JOLTIK]:3,[A.FERROSEED]:3,[A.KLINK]:3,[A.TYNAMO]:2,[A.ELGYEM]:2,[A.LITWICK]:3,[A.AXEW]:4,[A.CUBCHOO]:2,[A.CRYOGONAL]:4,[A.SHELMET]:2,[A.STUNFISK]:3,[A.MIENFOO]:3,[A.DRUDDIGON]:4,[A.GOLETT]:3,[A.PAWNIARD]:4,[A.BOUFFALANT]:4,[A.RUFFLET]:3,[A.VULLABY]:3,[A.HEATMOR]:3,[A.DURANT]:4,[A.DEINO]:4,[A.LARVESTA]:4,[A.COBALION]:6,[A.TERRAKION]:6,[A.VIRIZION]:6,[A.TORNADUS]:7,[A.THUNDURUS]:7,[A.RESHIRAM]:8,[A.ZEKROM]:8,[A.LANDORUS]:7,[A.KYUREM]:8,[A.KELDEO]:6,[A.MELOETTA]:7,[A.GENESECT]:6,[A.CHESPIN]:3,[A.FENNEKIN]:3,[A.FROAKIE]:4,[A.BUNNELBY]:3,[A.FLETCHLING]:3,[A.SCATTERBUG]:2,[A.LITLEO]:2,[A.FLABEBE]:3,[A.SKIDDO]:2,[A.PANCHAM]:3,[A.FURFROU]:3,[A.ESPURR]:2,[A.HONEDGE]:4,[A.SPRITZEE]:2,[A.SWIRLIX]:3,[A.INKAY]:3,[A.BINACLE]:3,[A.SKRELP]:2,[A.CLAUNCHER]:3,[A.HELIOPTILE]:3,[A.TYRUNT]:3,[A.AMAURA]:2,[A.HAWLUCHA]:4,[A.DEDENNE]:2,[A.CARBINK]:2,[A.GOOMY]:4,[A.KLEFKI]:3,[A.PHANTUMP]:2,[A.PUMPKABOO]:2,[A.BERGMITE]:3,[A.NOIBAT]:3,[A.XERNEAS]:8,[A.YVELTAL]:8,[A.ZYGARDE]:8,[A.DIANCIE]:7,[A.HOOPA]:7,[A.VOLCANION]:7,[A.ETERNAL_FLOETTE]:4,[A.ROWLET]:3,[A.LITTEN]:3,[A.POPPLIO]:4,[A.PIKIPEK]:2,[A.YUNGOOS]:2,[A.GRUBBIN]:3,[A.CRABRAWLER]:3,[A.ORICORIO]:3,[A.CUTIEFLY]:3,[A.ROCKRUFF]:3,[A.WISHIWASHI]:2,[A.MAREANIE]:2,[A.MUDBRAY]:3,[A.DEWPIDER]:3,[A.FOMANTIS]:2,[A.MORELULL]:2,[A.SALANDIT]:3,[A.STUFFUL]:3,[A.BOUNSWEET]:3,[A.COMFEY]:4,[A.ORANGURU]:4,[A.PASSIMIAN]:4,[A.WIMPOD]:3,[A.SANDYGAST]:3,[A.PYUKUMUKU]:2,[A.TYPE_NULL]:5,[A.MINIOR]:4,[A.KOMALA]:3,[A.TURTONATOR]:4,[A.TOGEDEMARU]:3,[A.MIMIKYU]:4,[A.BRUXISH]:4,[A.DRAMPA]:4,[A.DHELMISE]:4,[A.JANGMO_O]:4,[A.TAPU_KOKO]:6,[A.TAPU_LELE]:7,[A.TAPU_BULU]:6,[A.TAPU_FINI]:5,[A.COSMOG]:7,[A.NIHILEGO]:6,[A.BUZZWOLE]:6,[A.PHEROMOSA]:7,[A.XURKITREE]:6,[A.CELESTEELA]:6,[A.KARTANA]:8,[A.GUZZLORD]:6,[A.NECROZMA]:8,[A.MAGEARNA]:7,[A.MARSHADOW]:8,[A.POIPOLE]:8,[A.STAKATAKA]:6,[A.BLACEPHALON]:7,[A.ZERAORA]:6,[A.MELTAN]:6,[A.ALOLA_RATTATA]:1,[A.ALOLA_SANDSHREW]:2,[A.ALOLA_VULPIX]:3,[A.ALOLA_DIGLETT]:2,[A.ALOLA_MEOWTH]:3,[A.ALOLA_GEODUDE]:3,[A.ALOLA_GRIMER]:3,[A.GROOKEY]:3,[A.SCORBUNNY]:4,[A.SOBBLE]:3,[A.SKWOVET]:2,[A.ROOKIDEE]:3,[A.BLIPBUG]:2,[A.NICKIT]:1,[A.GOSSIFLEUR]:2,[A.WOOLOO]:2,[A.CHEWTLE]:3,[A.YAMPER]:2,[A.ROLYCOLY]:3,[A.APPLIN]:3,[A.SILICOBRA]:3,[A.CRAMORANT]:3,[A.ARROKUDA]:3,[A.TOXEL]:3,[A.SIZZLIPEDE]:3,[A.CLOBBOPUS]:2,[A.SINISTEA]:3,[A.HATENNA]:3,[A.IMPIDIMP]:3,[A.MILCERY]:3,[A.FALINKS]:4,[A.PINCURCHIN]:3,[A.SNOM]:3,[A.STONJOURNER]:3,[A.EISCUE]:3,[A.INDEEDEE]:4,[A.MORPEKO]:3,[A.CUFANT]:3,[A.DRACOZOLT]:5,[A.ARCTOZOLT]:4,[A.DRACOVISH]:5,[A.ARCTOVISH]:4,[A.DURALUDON]:5,[A.DREEPY]:4,[A.ZACIAN]:9,[A.ZAMAZENTA]:8,[A.ETERNATUS]:10,[A.KUBFU]:6,[A.ZARUDE]:5,[A.REGIELEKI]:6,[A.REGIDRAGO]:6,[A.GLASTRIER]:6,[A.SPECTRIER]:8,[A.CALYREX]:8,[A.ENAMORUS]:7,[A.GALAR_MEOWTH]:3,[A.GALAR_PONYTA]:2,[A.GALAR_SLOWPOKE]:3,[A.GALAR_FARFETCHD]:3,[A.GALAR_ARTICUNO]:6,[A.GALAR_ZAPDOS]:6,[A.GALAR_MOLTRES]:6,[A.GALAR_CORSOLA]:3,[A.GALAR_ZIGZAGOON]:3,[A.GALAR_DARUMAKA]:4,[A.GALAR_YAMASK]:3,[A.GALAR_STUNFISK]:2,[A.HISUI_GROWLITHE]:4,[A.HISUI_VOLTORB]:3,[A.HISUI_QWILFISH]:4,[A.HISUI_SNEASEL]:5,[A.HISUI_ZORUA]:3,[A.SPRIGATITO]:4,[A.FUECOCO]:4,[A.QUAXLY]:4,[A.LECHONK]:2,[A.TAROUNTULA]:1,[A.NYMBLE]:3,[A.PAWMI]:3,[A.TANDEMAUS]:4,[A.FIDOUGH]:2,[A.SMOLIV]:3,[A.SQUAWKABILLY]:2,[A.NACLI]:4,[A.CHARCADET]:4,[A.TADBULB]:3,[A.WATTREL]:3,[A.MASCHIFF]:3,[A.SHROODLE]:2,[A.BRAMBLIN]:3,[A.TOEDSCOOL]:3,[A.KLAWF]:3,[A.CAPSAKID]:3,[A.RELLOR]:2,[A.FLITTLE]:3,[A.TINKATINK]:4,[A.WIGLETT]:2,[A.BOMBIRDIER]:3,[A.FINIZEN]:3,[A.VAROOM]:4,[A.CYCLIZAR]:4,[A.ORTHWORM]:4,[A.GLIMMET]:4,[A.GREAVARD]:3,[A.FLAMIGO]:4,[A.CETODDLE]:3,[A.VELUZA]:4,[A.DONDOZO]:4,[A.TATSUGIRI]:4,[A.GREAT_TUSK]:7,[A.SCREAM_TAIL]:5,[A.BRUTE_BONNET]:5,[A.FLUTTER_MANE]:7,[A.SLITHER_WING]:6,[A.SANDY_SHOCKS]:6,[A.IRON_TREADS]:6,[A.IRON_BUNDLE]:6,[A.IRON_HANDS]:6,[A.IRON_JUGULIS]:6,[A.IRON_MOTH]:6,[A.IRON_THORNS]:5,[A.FRIGIBAX]:4,[A.GIMMIGHOUL]:4,[A.WO_CHIEN]:5,[A.CHIEN_PAO]:7,[A.TING_LU]:6,[A.CHI_YU]:7,[A.ROARING_MOON]:7,[A.IRON_VALIANT]:6,[A.KORAIDON]:9,[A.MIRAIDON]:9,[A.WALKING_WAKE]:7,[A.IRON_LEAVES]:6,[A.POLTCHAGEIST]:4,[A.OKIDOGI]:6,[A.MUNKIDORI]:6,[A.FEZANDIPITI]:5,[A.OGERPON]:7,[A.GOUGING_FIRE]:7,[A.RAGING_BOLT]:7,[A.IRON_BOULDER]:7,[A.IRON_CROWN]:7,[A.TERAPAGOS]:9,[A.PECHARUNT]:6,[A.PALDEA_TAUROS]:5,[A.PALDEA_WOOPER]:3,[A.BLOODMOON_URSALUNA]:5},NH=[{passive:40,costReduction:[25,60],egg:30},{passive:40,costReduction:[25,60],egg:30},{passive:35,costReduction:[20,50],egg:25},{passive:30,costReduction:[15,40],egg:20},{passive:25,costReduction:[12,35],egg:18},{passive:20,costReduction:[10,30],egg:15},{passive:15,costReduction:[8,20],egg:12},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10}];function C7(R){return NH[R-1].passive}r(C7,"getPassiveCandyCount");function U7(R){return NH[R-1].costReduction}r(U7,"getValueReductionCandyCounts");function o7(R){return NH[R-1].egg}r(o7,"getSameSpeciesEggCandyCounts");var Q4=(R=>(R[R.NONE=0]="NONE",R[R.SHORT=1]="SHORT",R[R.MEDIUM=2]="MEDIUM",R[R.LONG=3]="LONG",R[R.VERY_LONG=4]="VERY_LONG",R[R.NEVER=5]="NEVER",R))(Q4||{}),uL=(R=>(R[R.NONE=0]="NONE",R[R.LINKING_CORD=1]="LINKING_CORD",R[R.SUN_STONE=2]="SUN_STONE",R[R.MOON_STONE=3]="MOON_STONE",R[R.LEAF_STONE=4]="LEAF_STONE",R[R.FIRE_STONE=5]="FIRE_STONE",R[R.WATER_STONE=6]="WATER_STONE",R[R.THUNDER_STONE=7]="THUNDER_STONE",R[R.ICE_STONE=8]="ICE_STONE",R[R.DUSK_STONE=9]="DUSK_STONE",R[R.DAWN_STONE=10]="DAWN_STONE",R[R.SHINY_STONE=11]="SHINY_STONE",R[R.CRACKED_POT=12]="CRACKED_POT",R[R.SWEET_APPLE=13]="SWEET_APPLE",R[R.TART_APPLE=14]="TART_APPLE",R[R.STRAWBERRY_SWEET=15]="STRAWBERRY_SWEET",R[R.UNREMARKABLE_TEACUP=16]="UNREMARKABLE_TEACUP",R[R.UPGRADE=17]="UPGRADE",R[R.DUBIOUS_DISC=18]="DUBIOUS_DISC",R[R.DRAGON_SCALE=19]="DRAGON_SCALE",R[R.PRISM_SCALE=20]="PRISM_SCALE",R[R.RAZOR_CLAW=21]="RAZOR_CLAW",R[R.RAZOR_FANG=22]="RAZOR_FANG",R[R.REAPER_CLOTH=23]="REAPER_CLOTH",R[R.ELECTIRIZER=24]="ELECTIRIZER",R[R.MAGMARIZER=25]="MAGMARIZER",R[R.PROTECTOR=26]="PROTECTOR",R[R.SACHET=27]="SACHET",R[R.WHIPPED_DREAM=28]="WHIPPED_DREAM",R[R.SYRUPY_APPLE=29]="SYRUPY_APPLE",R[R.CHIPPED_POT=30]="CHIPPED_POT",R[R.GALARICA_CUFF=31]="GALARICA_CUFF",R[R.GALARICA_WREATH=32]="GALARICA_WREATH",R[R.AUSPICIOUS_ARMOR=33]="AUSPICIOUS_ARMOR",R[R.MALICIOUS_ARMOR=34]="MALICIOUS_ARMOR",R[R.MASTERPIECE_TEACUP=35]="MASTERPIECE_TEACUP",R[R.SUN_FLUTE=36]="SUN_FLUTE",R[R.MOON_FLUTE=37]="MOON_FLUTE",R[R.BLACK_AUGURITE=51]="BLACK_AUGURITE",R[R.PEAT_BLOCK=52]="PEAT_BLOCK",R[R.METAL_ALLOY=53]="METAL_ALLOY",R[R.SCROLL_OF_DARKNESS=54]="SCROLL_OF_DARKNESS",R[R.SCROLL_OF_WATERS=55]="SCROLL_OF_WATERS",R[R.LEADERS_CREST=56]="LEADERS_CREST",R))(uL||{});const fH=class fH{constructor(e,I,L,N,S,n,i){this.description="",_.isInitialized||sO(),this.speciesId=e,this.preFormKey=I,this.evoFormKey=L,this.level=N,this.item=S||0,this.condition=n,this.wildDelay=i??0;const C=[];if(this.level>1&&C.push(_.t("pokemonEvolutions:level")+` ${this.level}`),this.item){const o=_.t(`modifierType:EvolutionItem.${uL[this.item].toUpperCase()}`),l=this.item>50?_.t("pokemonEvolutions:ULTRA"):_.t("pokemonEvolutions:GREAT");C.push(_.t("pokemonEvolutions:using")+o+` (${l})`)}this.condition&&C.push(this.condition.description),this.description=C.filter(o=>o!=="").map((o,l)=>l>0?o[0].toLowerCase()+o.slice(1):o).join(_.t("pokemonEvolutions:connector"))}};r(fH,"SpeciesFormEvolution");let sE=fH;const FH=class FH extends sE{constructor(e,I,L,N,S){super(e,null,null,I,L,N,S)}};r(FH,"SpeciesEvolution");let g=FH;const YH=class YH extends sE{constructor(e,I){super(I.speciesId,I.preFormKey,I.evoFormKey,I.level,I.item,I.condition,I.wildDelay),this.primarySpeciesId=e}};r(YH,"FusionSpeciesFormEvolution");let ft=YH;const WH=class WH{constructor(e,I){this.predicate=e,this.enforceFunc=I,this.description=""}};r(WH,"SpeciesEvolutionCondition");let ve=WH;const hH=class hH extends ve{constructor(e){super(I=>I.gender===e,I=>I.gender=e),this.gender=e,this.description=_.t("pokemonEvolutions:gender",{gender:_.t(`pokemonEvolutions:${mA[e]}`)})}};r(hH,"GenderEvolutionCondition");let VR=hH;const dH=class dH extends ve{constructor(e){e==="day"?(super(()=>T.arena.getTimeOfDay()===a.DAWN||T.arena.getTimeOfDay()===a.DAY),this.timesOfDay=[a.DAWN,a.DAY]):e==="night"?(super(()=>T.arena.getTimeOfDay()===a.DUSK||T.arena.getTimeOfDay()===a.NIGHT),this.timesOfDay=[a.DUSK,a.NIGHT]):(super(()=>!1),this.timesOfDay=[]),this.description=_.t("pokemonEvolutions:timeOfDay",{tod:_.t(`pokemonEvolutions:${e}`)})}};r(dH,"TimeOfDayEvolutionCondition");let zE=dH;const pH=class pH extends ve{constructor(e){super(L=>L.moveset.filter(N=>N.moveId===e).length>0),this.move=e;const I=E[this.move].split("_").filter(L=>L).map((L,N)=>N?`${L[0]}${L.slice(1).toLowerCase()}`:L.toLowerCase()).join("");this.description=_.t("pokemonEvolutions:move",{move:_.t(`move:${I}.name`)})}};r(pH,"MoveEvolutionCondition");let GR=pH;const gH=class gH extends ve{constructor(e){super(I=>I.friendship>=e),this.amount=e,this.description=_.t("pokemonEvolutions:friendship")}};r(gH,"FriendshipEvolutionCondition");let PR=gH;const mH=class mH extends ve{constructor(e,I){I==="day"?(super(L=>L.friendship>=e&&(T.arena.getTimeOfDay()===a.DAWN||T.arena.getTimeOfDay()===a.DAY)),this.timesOfDay=[a.DAWN,a.DAY]):I==="night"?(super(L=>L.friendship>=e&&(T.arena.getTimeOfDay()===a.DUSK||T.arena.getTimeOfDay()===a.NIGHT)),this.timesOfDay=[a.DUSK,a.NIGHT]):(super(L=>!1),this.timesOfDay=[]),this.amount=e,this.description=_.t("pokemonEvolutions:friendshipTimeOfDay",{tod:_.t(`pokemonEvolutions:${I}`)})}};r(mH,"FriendshipTimeOfDayEvolutionCondition");let DI=mH;const yH=class yH extends ve{constructor(e,I){super(L=>L.friendship>=e&&!!L.getMoveset().find(N=>(N==null?void 0:N.getMove().type)===I)),this.amount=e,this.type=I,this.description=_.t("pokemonEvolutions:friendshipMoveType",{type:_.t(`pokemonInfo:Type.${t[this.type]}`)})}};r(yH,"FriendshipMoveTypeEvolutionCondition");let IC=yH;const VH=class VH extends ve{constructor(){super(()=>T.getPlayerParty().length<6&&T.pokeballCounts[MA.POKEBALL]>0),this.description=_.t("pokemonEvolutions:shedinja")}};r(VH,"ShedinjaEvolutionCondition");let w_=VH;const wH=class wH extends ve{constructor(e){super(()=>!!T.getPlayerParty().find(I=>I.getTypes(!1,!1,!0).indexOf(e)>-1)),this.type=e,this.description=_.t("pokemonEvolutions:partyType",{type:_.t(`pokemonInfo:Type.${t[this.type]}`)})}};r(wH,"PartyTypeEvolutionCondition");let v_=wH;const vH=class vH extends ve{constructor(e){super(()=>!!T.gameData.dexData[e].caughtAttr),this.species=e,this.description=_.t("pokemonEvolutions:caught",{species:_.t(`pokemon:${A[this.species].toLowerCase()}`)})}};r(vH,"CaughtEvolutionCondition");let PT=vH;const xH=class xH extends ve{constructor(e){super(()=>{var I;return e.indexOf(((I=T.arena.weather)==null?void 0:I.weatherType)||Z.NONE)>-1}),this.weatherTypes=e,this.description=_.t("pokemonEvolutions:weather")}};r(xH,"WeatherEvolutionCondition");let tC=xH;const ZH=class ZH extends ve{constructor(e){super(I=>I.moveset.filter(L=>(L==null?void 0:L.getMove().type)===e).length>0),this.type=e,this.description=_.t("pokemonEvolutions:moveType",{type:_.t(`pokemonInfo:Type.${t[this.type]}`)})}};r(ZH,"MoveTypeEvolutionCondition");let LC=ZH;const bH=class bH extends ve{constructor(){super(e=>e.evoCounter+e.getHeldItems().filter(I=>I.is("DamageMoneyRewardModifier")).length+T.findModifiers(I=>I.is("MoneyMultiplierModifier")||I.is("ExtraModifierModifier")||I.is("TempExtraModifierModifier")).length>9),this.description=_.t("pokemonEvolutions:treasure")}};r(bH,"TreasureEvolutionCondition");let NC=bH;const kH=class kH extends ve{constructor(e){super(L=>{var N;return((N=L.getMoveset(!0).find(S=>S&&[E.LOW_SWEEP,E.MACH_PUNCH,E.RAPID_SPIN].includes(S.moveId)))==null?void 0:N.moveId)===e}),this.move=e;const I=E[this.move].split("_").filter(L=>L).map((L,N)=>N?`${L[0]}${L.slice(1).toLowerCase()}`:L.toLowerCase()).join("");this.description=_.t("pokemonEvolutions:move",{move:_.t(`move:${I}.name`)})}};r(kH,"TyrogueEvolutionCondition");let HT=kH;const XH=class XH extends ve{constructor(e){super(I=>e.indexOf(I.getNature())>-1),this.natures=e,this.description=_.t("pokemonEvolutions:nature")}};r(XH,"NatureEvolutionCondition");let x_=XH;const QH=class QH extends ve{constructor(e,I){I==="day"?(super(N=>N.moveset.filter(S=>S.moveId===e).length>0&&(T.arena.getTimeOfDay()===a.DAWN||T.arena.getTimeOfDay()===a.DAY)),this.move=e,this.timesOfDay=[a.DAWN,a.DAY]):I==="night"?(super(N=>N.moveset.filter(S=>S.moveId===e).length>0&&(T.arena.getTimeOfDay()===a.DUSK||T.arena.getTimeOfDay()===a.NIGHT)),this.move=e,this.timesOfDay=[a.DUSK,a.NIGHT]):(super(()=>!1),this.timesOfDay=[]);const L=E[this.move].split("_").filter(N=>N).map((N,S)=>S?`${N[0]}${N.slice(1).toLowerCase()}`:N.toLowerCase()).join("");this.description=_.t("pokemonEvolutions:moveTimeOfDay",{move:_.t(`move:${L}.name`),tod:_.t(`pokemonEvolutions:${I}`)})}};r(QH,"MoveTimeOfDayEvolutionCondition");let SC=QH;const JH=class JH extends ve{constructor(e){super(()=>e.filter(I=>I===T.arena.biomeType).length>0),this.biomes=e,this.description=_.t("pokemonEvolutions:biome")}};r(JH,"BiomeEvolutionCondition");let qO=JH;const $H=class $H extends ve{constructor(){super(I=>{let L=!1;return I.moveset.filter(N=>N.moveId===E.HYPER_DRILL).length>0&&T.executeWithSeedOffset(()=>L=!DA(4),I.id),L});const e=E[E.HYPER_DRILL].split("_").filter(I=>I).map((I,L)=>L?`${I[0]}${I.slice(1).toLowerCase()}`:I.toLowerCase()).join("");this.description=_.t("pokemonEvolutions:move",{move:_.t(`move:${e}.name`)})}};r($H,"DunsparceEvolutionCondition");let Z_=$H;const qH=class qH extends ve{constructor(){super(e=>{let I=!1;return T.executeWithSeedOffset(()=>I=!DA(4),e.id),I})}};r(qH,"TandemausEvolutionCondition");let b_=qH;const lE={[A.BULBASAUR]:[new g(A.IVYSAUR,16,null,null)],[A.IVYSAUR]:[new g(A.VENUSAUR,32,null,null)],[A.CHARMANDER]:[new g(A.CHARMELEON,16,null,null)],[A.CHARMELEON]:[new g(A.CHARIZARD,36,null,null)],[A.SQUIRTLE]:[new g(A.WARTORTLE,16,null,null)],[A.WARTORTLE]:[new g(A.BLASTOISE,36,null,null)],[A.CATERPIE]:[new g(A.METAPOD,7,null,null)],[A.METAPOD]:[new g(A.BUTTERFREE,10,null,null)],[A.WEEDLE]:[new g(A.KAKUNA,7,null,null)],[A.KAKUNA]:[new g(A.BEEDRILL,10,null,null)],[A.PIDGEY]:[new g(A.PIDGEOTTO,18,null,null)],[A.PIDGEOTTO]:[new g(A.PIDGEOT,36,null,null)],[A.RATTATA]:[new g(A.RATICATE,20,null,null)],[A.SPEAROW]:[new g(A.FEAROW,20,null,null)],[A.EKANS]:[new g(A.ARBOK,22,null,null)],[A.SANDSHREW]:[new g(A.SANDSLASH,22,null,null)],[A.NIDORAN_F]:[new g(A.NIDORINA,16,null,null)],[A.NIDORAN_M]:[new g(A.NIDORINO,16,null,null)],[A.ZUBAT]:[new g(A.GOLBAT,22,null,null)],[A.ODDISH]:[new g(A.GLOOM,21,null,null)],[A.PARAS]:[new g(A.PARASECT,24,null,null)],[A.VENONAT]:[new g(A.VENOMOTH,31,null,null)],[A.DIGLETT]:[new g(A.DUGTRIO,26,null,null)],[A.MEOWTH]:[new sE(A.PERSIAN,"","",28,null,null)],[A.PSYDUCK]:[new g(A.GOLDUCK,33,null,null)],[A.MANKEY]:[new g(A.PRIMEAPE,28,null,null)],[A.POLIWAG]:[new g(A.POLIWHIRL,25,null,null)],[A.ABRA]:[new g(A.KADABRA,16,null,null)],[A.MACHOP]:[new g(A.MACHOKE,28,null,null)],[A.BELLSPROUT]:[new g(A.WEEPINBELL,21,null,null)],[A.TENTACOOL]:[new g(A.TENTACRUEL,30,null,null)],[A.GEODUDE]:[new g(A.GRAVELER,25,null,null)],[A.PONYTA]:[new g(A.RAPIDASH,40,null,null)],[A.SLOWPOKE]:[new g(A.SLOWBRO,37,null,null),new g(A.SLOWKING,1,1,null,4)],[A.MAGNEMITE]:[new g(A.MAGNETON,30,null,null)],[A.DODUO]:[new g(A.DODRIO,31,null,null)],[A.SEEL]:[new g(A.DEWGONG,34,null,null)],[A.GRIMER]:[new g(A.MUK,38,null,null)],[A.GASTLY]:[new g(A.HAUNTER,25,null,null)],[A.DROWZEE]:[new g(A.HYPNO,26,null,null)],[A.KRABBY]:[new g(A.KINGLER,28,null,null)],[A.VOLTORB]:[new g(A.ELECTRODE,30,null,null)],[A.CUBONE]:[new g(A.ALOLA_MAROWAK,28,null,new zE("night")),new g(A.MAROWAK,28,null,new zE("day"))],[A.TYROGUE]:[new g(A.HITMONLEE,20,null,new HT(E.LOW_SWEEP)),new g(A.HITMONCHAN,20,null,new HT(E.MACH_PUNCH)),new g(A.HITMONTOP,20,null,new HT(E.RAPID_SPIN))],[A.KOFFING]:[new g(A.GALAR_WEEZING,35,null,new zE("night")),new g(A.WEEZING,35,null,new zE("day"))],[A.RHYHORN]:[new g(A.RHYDON,42,null,null)],[A.HORSEA]:[new g(A.SEADRA,32,null,null)],[A.GOLDEEN]:[new g(A.SEAKING,33,null,null)],[A.SMOOCHUM]:[new g(A.JYNX,30,null,null)],[A.ELEKID]:[new g(A.ELECTABUZZ,30,null,null)],[A.MAGBY]:[new g(A.MAGMAR,30,null,null)],[A.MAGIKARP]:[new g(A.GYARADOS,20,null,null)],[A.OMANYTE]:[new g(A.OMASTAR,40,null,null)],[A.KABUTO]:[new g(A.KABUTOPS,40,null,null)],[A.DRATINI]:[new g(A.DRAGONAIR,30,null,null)],[A.DRAGONAIR]:[new g(A.DRAGONITE,55,null,null)],[A.CHIKORITA]:[new g(A.BAYLEEF,16,null,null)],[A.BAYLEEF]:[new g(A.MEGANIUM,32,null,null)],[A.CYNDAQUIL]:[new g(A.QUILAVA,14,null,null)],[A.QUILAVA]:[new g(A.HISUI_TYPHLOSION,36,null,new zE("night")),new g(A.TYPHLOSION,36,null,new zE("day"))],[A.TOTODILE]:[new g(A.CROCONAW,18,null,null)],[A.CROCONAW]:[new g(A.FERALIGATR,30,null,null)],[A.SENTRET]:[new g(A.FURRET,15,null,null)],[A.HOOTHOOT]:[new g(A.NOCTOWL,20,null,null)],[A.LEDYBA]:[new g(A.LEDIAN,18,null,null)],[A.SPINARAK]:[new g(A.ARIADOS,22,null,null)],[A.CHINCHOU]:[new g(A.LANTURN,27,null,null)],[A.NATU]:[new g(A.XATU,25,null,null)],[A.MAREEP]:[new g(A.FLAAFFY,15,null,null)],[A.FLAAFFY]:[new g(A.AMPHAROS,30,null,null)],[A.MARILL]:[new g(A.AZUMARILL,18,null,null)],[A.HOPPIP]:[new g(A.SKIPLOOM,18,null,null)],[A.SKIPLOOM]:[new g(A.JUMPLUFF,27,null,null)],[A.WOOPER]:[new g(A.QUAGSIRE,20,null,null)],[A.WYNAUT]:[new g(A.WOBBUFFET,15,null,null)],[A.PINECO]:[new g(A.FORRETRESS,31,null,null)],[A.SNUBBULL]:[new g(A.GRANBULL,23,null,null)],[A.TEDDIURSA]:[new g(A.URSARING,30,null,null)],[A.SLUGMA]:[new g(A.MAGCARGO,38,null,null)],[A.SWINUB]:[new g(A.PILOSWINE,33,null,null)],[A.REMORAID]:[new g(A.OCTILLERY,25,null,null)],[A.HOUNDOUR]:[new g(A.HOUNDOOM,24,null,null)],[A.PHANPY]:[new g(A.DONPHAN,25,null,null)],[A.LARVITAR]:[new g(A.PUPITAR,30,null,null)],[A.PUPITAR]:[new g(A.TYRANITAR,55,null,null)],[A.TREECKO]:[new g(A.GROVYLE,16,null,null)],[A.GROVYLE]:[new g(A.SCEPTILE,36,null,null)],[A.TORCHIC]:[new g(A.COMBUSKEN,16,null,null)],[A.COMBUSKEN]:[new g(A.BLAZIKEN,36,null,null)],[A.MUDKIP]:[new g(A.MARSHTOMP,16,null,null)],[A.MARSHTOMP]:[new g(A.SWAMPERT,36,null,null)],[A.POOCHYENA]:[new g(A.MIGHTYENA,18,null,null)],[A.ZIGZAGOON]:[new g(A.LINOONE,20,null,null)],[A.WURMPLE]:[new g(A.SILCOON,7,null,new zE("day")),new g(A.CASCOON,7,null,new zE("night"))],[A.SILCOON]:[new g(A.BEAUTIFLY,10,null,null)],[A.CASCOON]:[new g(A.DUSTOX,10,null,null)],[A.LOTAD]:[new g(A.LOMBRE,14,null,null)],[A.SEEDOT]:[new g(A.NUZLEAF,14,null,null)],[A.TAILLOW]:[new g(A.SWELLOW,22,null,null)],[A.WINGULL]:[new g(A.PELIPPER,25,null,null)],[A.RALTS]:[new g(A.KIRLIA,20,null,null)],[A.KIRLIA]:[new g(A.GARDEVOIR,30,null,new VR(mA.FEMALE)),new g(A.GALLADE,30,null,new VR(mA.MALE))],[A.SURSKIT]:[new g(A.MASQUERAIN,22,null,null)],[A.SHROOMISH]:[new g(A.BRELOOM,23,null,null)],[A.SLAKOTH]:[new g(A.VIGOROTH,18,null,null)],[A.VIGOROTH]:[new g(A.SLAKING,36,null,null)],[A.NINCADA]:[new g(A.NINJASK,20,null,null),new g(A.SHEDINJA,20,null,new w_)],[A.WHISMUR]:[new g(A.LOUDRED,20,null,null)],[A.LOUDRED]:[new g(A.EXPLOUD,40,null,null)],[A.MAKUHITA]:[new g(A.HARIYAMA,24,null,null)],[A.ARON]:[new g(A.LAIRON,32,null,null)],[A.LAIRON]:[new g(A.AGGRON,42,null,null)],[A.MEDITITE]:[new g(A.MEDICHAM,37,null,null)],[A.ELECTRIKE]:[new g(A.MANECTRIC,26,null,null)],[A.GULPIN]:[new g(A.SWALOT,26,null,null)],[A.CARVANHA]:[new g(A.SHARPEDO,30,null,null)],[A.WAILMER]:[new g(A.WAILORD,40,null,null)],[A.NUMEL]:[new g(A.CAMERUPT,33,null,null)],[A.SPOINK]:[new g(A.GRUMPIG,32,null,null)],[A.TRAPINCH]:[new g(A.VIBRAVA,35,null,null)],[A.VIBRAVA]:[new g(A.FLYGON,45,null,null)],[A.CACNEA]:[new g(A.CACTURNE,32,null,null)],[A.SWABLU]:[new g(A.ALTARIA,35,null,null)],[A.BARBOACH]:[new g(A.WHISCASH,30,null,null)],[A.CORPHISH]:[new g(A.CRAWDAUNT,30,null,null)],[A.BALTOY]:[new g(A.CLAYDOL,36,null,null)],[A.LILEEP]:[new g(A.CRADILY,40,null,null)],[A.ANORITH]:[new g(A.ARMALDO,40,null,null)],[A.SHUPPET]:[new g(A.BANETTE,37,null,null)],[A.DUSKULL]:[new g(A.DUSCLOPS,37,null,null)],[A.SNORUNT]:[new g(A.GLALIE,42,null,new VR(mA.MALE)),new g(A.FROSLASS,42,null,new VR(mA.FEMALE))],[A.SPHEAL]:[new g(A.SEALEO,32,null,null)],[A.SEALEO]:[new g(A.WALREIN,44,null,null)],[A.BAGON]:[new g(A.SHELGON,30,null,null)],[A.SHELGON]:[new g(A.SALAMENCE,50,null,null)],[A.BELDUM]:[new g(A.METANG,20,null,null)],[A.METANG]:[new g(A.METAGROSS,45,null,null)],[A.TURTWIG]:[new g(A.GROTLE,18,null,null)],[A.GROTLE]:[new g(A.TORTERRA,32,null,null)],[A.CHIMCHAR]:[new g(A.MONFERNO,14,null,null)],[A.MONFERNO]:[new g(A.INFERNAPE,36,null,null)],[A.PIPLUP]:[new g(A.PRINPLUP,16,null,null)],[A.PRINPLUP]:[new g(A.EMPOLEON,36,null,null)],[A.STARLY]:[new g(A.STARAVIA,14,null,null)],[A.STARAVIA]:[new g(A.STARAPTOR,34,null,null)],[A.BIDOOF]:[new g(A.BIBAREL,15,null,null)],[A.KRICKETOT]:[new g(A.KRICKETUNE,10,null,null)],[A.SHINX]:[new g(A.LUXIO,15,null,null)],[A.LUXIO]:[new g(A.LUXRAY,30,null,null)],[A.CRANIDOS]:[new g(A.RAMPARDOS,30,null,null)],[A.SHIELDON]:[new g(A.BASTIODON,30,null,null)],[A.BURMY]:[new g(A.MOTHIM,20,null,new VR(mA.MALE)),new g(A.WORMADAM,20,null,new VR(mA.FEMALE))],[A.COMBEE]:[new g(A.VESPIQUEN,21,null,new VR(mA.FEMALE))],[A.BUIZEL]:[new g(A.FLOATZEL,26,null,null)],[A.CHERUBI]:[new g(A.CHERRIM,25,null,null)],[A.SHELLOS]:[new g(A.GASTRODON,30,null,null)],[A.DRIFLOON]:[new g(A.DRIFBLIM,28,null,null)],[A.GLAMEOW]:[new g(A.PURUGLY,38,null,null)],[A.STUNKY]:[new g(A.SKUNTANK,34,null,null)],[A.BRONZOR]:[new g(A.BRONZONG,33,null,null)],[A.GIBLE]:[new g(A.GABITE,24,null,null)],[A.GABITE]:[new g(A.GARCHOMP,48,null,null)],[A.HIPPOPOTAS]:[new g(A.HIPPOWDON,34,null,null)],[A.SKORUPI]:[new g(A.DRAPION,40,null,null)],[A.CROAGUNK]:[new g(A.TOXICROAK,37,null,null)],[A.FINNEON]:[new g(A.LUMINEON,31,null,null)],[A.MANTYKE]:[new g(A.MANTINE,32,null,new PT(A.REMORAID),2)],[A.SNOVER]:[new g(A.ABOMASNOW,40,null,null)],[A.SNIVY]:[new g(A.SERVINE,17,null,null)],[A.SERVINE]:[new g(A.SERPERIOR,36,null,null)],[A.TEPIG]:[new g(A.PIGNITE,17,null,null)],[A.PIGNITE]:[new g(A.EMBOAR,36,null,null)],[A.OSHAWOTT]:[new g(A.DEWOTT,17,null,null)],[A.DEWOTT]:[new g(A.HISUI_SAMUROTT,36,null,new zE("night")),new g(A.SAMUROTT,36,null,new zE("day"))],[A.PATRAT]:[new g(A.WATCHOG,20,null,null)],[A.LILLIPUP]:[new g(A.HERDIER,16,null,null)],[A.HERDIER]:[new g(A.STOUTLAND,32,null,null)],[A.PURRLOIN]:[new g(A.LIEPARD,20,null,null)],[A.PIDOVE]:[new g(A.TRANQUILL,21,null,null)],[A.TRANQUILL]:[new g(A.UNFEZANT,32,null,null)],[A.BLITZLE]:[new g(A.ZEBSTRIKA,27,null,null)],[A.ROGGENROLA]:[new g(A.BOLDORE,25,null,null)],[A.DRILBUR]:[new g(A.EXCADRILL,31,null,null)],[A.TIMBURR]:[new g(A.GURDURR,25,null,null)],[A.TYMPOLE]:[new g(A.PALPITOAD,25,null,null)],[A.PALPITOAD]:[new g(A.SEISMITOAD,36,null,null)],[A.SEWADDLE]:[new g(A.SWADLOON,20,null,null)],[A.VENIPEDE]:[new g(A.WHIRLIPEDE,22,null,null)],[A.WHIRLIPEDE]:[new g(A.SCOLIPEDE,30,null,null)],[A.SANDILE]:[new g(A.KROKOROK,29,null,null)],[A.KROKOROK]:[new g(A.KROOKODILE,40,null,null)],[A.DARUMAKA]:[new g(A.DARMANITAN,35,null,null)],[A.DWEBBLE]:[new g(A.CRUSTLE,34,null,null)],[A.SCRAGGY]:[new g(A.SCRAFTY,39,null,null)],[A.YAMASK]:[new g(A.COFAGRIGUS,34,null,null)],[A.TIRTOUGA]:[new g(A.CARRACOSTA,37,null,null)],[A.ARCHEN]:[new g(A.ARCHEOPS,37,null,null)],[A.TRUBBISH]:[new g(A.GARBODOR,36,null,null)],[A.ZORUA]:[new g(A.ZOROARK,30,null,null)],[A.GOTHITA]:[new g(A.GOTHORITA,32,null,null)],[A.GOTHORITA]:[new g(A.GOTHITELLE,41,null,null)],[A.SOLOSIS]:[new g(A.DUOSION,32,null,null)],[A.DUOSION]:[new g(A.REUNICLUS,41,null,null)],[A.DUCKLETT]:[new g(A.SWANNA,35,null,null)],[A.VANILLITE]:[new g(A.VANILLISH,35,null,null)],[A.VANILLISH]:[new g(A.VANILLUXE,47,null,null)],[A.DEERLING]:[new g(A.SAWSBUCK,34,null,null)],[A.FOONGUS]:[new g(A.AMOONGUSS,39,null,null)],[A.FRILLISH]:[new g(A.JELLICENT,40,null,null)],[A.JOLTIK]:[new g(A.GALVANTULA,36,null,null)],[A.FERROSEED]:[new g(A.FERROTHORN,40,null,null)],[A.KLINK]:[new g(A.KLANG,38,null,null)],[A.KLANG]:[new g(A.KLINKLANG,49,null,null)],[A.TYNAMO]:[new g(A.EELEKTRIK,39,null,null)],[A.ELGYEM]:[new g(A.BEHEEYEM,42,null,null)],[A.LITWICK]:[new g(A.LAMPENT,41,null,null)],[A.AXEW]:[new g(A.FRAXURE,38,null,null)],[A.FRAXURE]:[new g(A.HAXORUS,48,null,null)],[A.CUBCHOO]:[new g(A.BEARTIC,37,null,null)],[A.MIENFOO]:[new g(A.MIENSHAO,50,null,null)],[A.GOLETT]:[new g(A.GOLURK,43,null,null)],[A.PAWNIARD]:[new g(A.BISHARP,52,null,null)],[A.BISHARP]:[new g(A.KINGAMBIT,1,56,null,4)],[A.RUFFLET]:[new g(A.HISUI_BRAVIARY,54,null,new zE("night")),new g(A.BRAVIARY,54,null,new zE("day"))],[A.VULLABY]:[new g(A.MANDIBUZZ,54,null,null)],[A.DEINO]:[new g(A.ZWEILOUS,50,null,null)],[A.ZWEILOUS]:[new g(A.HYDREIGON,64,null,null)],[A.LARVESTA]:[new g(A.VOLCARONA,59,null,null)],[A.CHESPIN]:[new g(A.QUILLADIN,16,null,null)],[A.QUILLADIN]:[new g(A.CHESNAUGHT,36,null,null)],[A.FENNEKIN]:[new g(A.BRAIXEN,16,null,null)],[A.BRAIXEN]:[new g(A.DELPHOX,36,null,null)],[A.FROAKIE]:[new g(A.FROGADIER,16,null,null)],[A.FROGADIER]:[new g(A.GRENINJA,36,null,null)],[A.BUNNELBY]:[new g(A.DIGGERSBY,20,null,null)],[A.FLETCHLING]:[new g(A.FLETCHINDER,17,null,null)],[A.FLETCHINDER]:[new g(A.TALONFLAME,35,null,null)],[A.SCATTERBUG]:[new g(A.SPEWPA,9,null,null)],[A.SPEWPA]:[new g(A.VIVILLON,12,null,null)],[A.LITLEO]:[new g(A.PYROAR,35,null,null)],[A.FLABEBE]:[new g(A.FLOETTE,19,null,null)],[A.SKIDDO]:[new g(A.GOGOAT,32,null,null)],[A.PANCHAM]:[new g(A.PANGORO,32,null,new v_(t.DARK),2)],[A.ESPURR]:[new sE(A.MEOWSTIC,"","female",25,null,new VR(mA.FEMALE)),new sE(A.MEOWSTIC,"","",25,null,new VR(mA.MALE))],[A.HONEDGE]:[new g(A.DOUBLADE,35,null,null)],[A.INKAY]:[new g(A.MALAMAR,30,null,null)],[A.BINACLE]:[new g(A.BARBARACLE,39,null,null)],[A.SKRELP]:[new g(A.DRAGALGE,48,null,null)],[A.CLAUNCHER]:[new g(A.CLAWITZER,37,null,null)],[A.TYRUNT]:[new g(A.TYRANTRUM,39,null,new zE("day"))],[A.AMAURA]:[new g(A.AURORUS,39,null,new zE("night"))],[A.GOOMY]:[new g(A.HISUI_SLIGGOO,40,null,new zE("night")),new g(A.SLIGGOO,40,null,new zE("day"))],[A.SLIGGOO]:[new g(A.GOODRA,50,null,new tC([Z.RAIN,Z.FOG,Z.HEAVY_RAIN]),3)],[A.BERGMITE]:[new g(A.HISUI_AVALUGG,37,null,new zE("night")),new g(A.AVALUGG,37,null,new zE("day"))],[A.NOIBAT]:[new g(A.NOIVERN,48,null,null)],[A.ROWLET]:[new g(A.DARTRIX,17,null,null)],[A.DARTRIX]:[new g(A.HISUI_DECIDUEYE,36,null,new zE("night")),new g(A.DECIDUEYE,34,null,new zE("day"))],[A.LITTEN]:[new g(A.TORRACAT,17,null,null)],[A.TORRACAT]:[new g(A.INCINEROAR,34,null,null)],[A.POPPLIO]:[new g(A.BRIONNE,17,null,null)],[A.BRIONNE]:[new g(A.PRIMARINA,34,null,null)],[A.PIKIPEK]:[new g(A.TRUMBEAK,14,null,null)],[A.TRUMBEAK]:[new g(A.TOUCANNON,28,null,null)],[A.YUNGOOS]:[new g(A.GUMSHOOS,20,null,new zE("day"))],[A.GRUBBIN]:[new g(A.CHARJABUG,20,null,null)],[A.CUTIEFLY]:[new g(A.RIBOMBEE,25,null,null)],[A.MAREANIE]:[new g(A.TOXAPEX,38,null,null)],[A.MUDBRAY]:[new g(A.MUDSDALE,30,null,null)],[A.DEWPIDER]:[new g(A.ARAQUANID,22,null,null)],[A.FOMANTIS]:[new g(A.LURANTIS,34,null,new zE("day"))],[A.MORELULL]:[new g(A.SHIINOTIC,24,null,null)],[A.SALANDIT]:[new g(A.SALAZZLE,33,null,new VR(mA.FEMALE))],[A.STUFFUL]:[new g(A.BEWEAR,27,null,null)],[A.BOUNSWEET]:[new g(A.STEENEE,18,null,null)],[A.WIMPOD]:[new g(A.GOLISOPOD,30,null,null)],[A.SANDYGAST]:[new g(A.PALOSSAND,42,null,null)],[A.JANGMO_O]:[new g(A.HAKAMO_O,35,null,null)],[A.HAKAMO_O]:[new g(A.KOMMO_O,45,null,null)],[A.COSMOG]:[new g(A.COSMOEM,23,null,null)],[A.COSMOEM]:[new g(A.SOLGALEO,1,36,null,4),new g(A.LUNALA,1,37,null,4)],[A.MELTAN]:[new g(A.MELMETAL,48,null,null)],[A.ALOLA_RATTATA]:[new g(A.ALOLA_RATICATE,20,null,new zE("night"))],[A.ALOLA_DIGLETT]:[new g(A.ALOLA_DUGTRIO,26,null,null)],[A.ALOLA_GEODUDE]:[new g(A.ALOLA_GRAVELER,25,null,null)],[A.ALOLA_GRIMER]:[new g(A.ALOLA_MUK,38,null,null)],[A.GROOKEY]:[new g(A.THWACKEY,16,null,null)],[A.THWACKEY]:[new g(A.RILLABOOM,35,null,null)],[A.SCORBUNNY]:[new g(A.RABOOT,16,null,null)],[A.RABOOT]:[new g(A.CINDERACE,35,null,null)],[A.SOBBLE]:[new g(A.DRIZZILE,16,null,null)],[A.DRIZZILE]:[new g(A.INTELEON,35,null,null)],[A.SKWOVET]:[new g(A.GREEDENT,24,null,null)],[A.ROOKIDEE]:[new g(A.CORVISQUIRE,18,null,null)],[A.CORVISQUIRE]:[new g(A.CORVIKNIGHT,38,null,null)],[A.BLIPBUG]:[new g(A.DOTTLER,10,null,null)],[A.DOTTLER]:[new g(A.ORBEETLE,30,null,null)],[A.NICKIT]:[new g(A.THIEVUL,18,null,null)],[A.GOSSIFLEUR]:[new g(A.ELDEGOSS,20,null,null)],[A.WOOLOO]:[new g(A.DUBWOOL,24,null,null)],[A.CHEWTLE]:[new g(A.DREDNAW,22,null,null)],[A.YAMPER]:[new g(A.BOLTUND,25,null,null)],[A.ROLYCOLY]:[new g(A.CARKOL,18,null,null)],[A.CARKOL]:[new g(A.COALOSSAL,34,null,null)],[A.SILICOBRA]:[new g(A.SANDACONDA,36,null,null)],[A.ARROKUDA]:[new g(A.BARRASKEWDA,26,null,null)],[A.TOXEL]:[new sE(A.TOXTRICITY,"","lowkey",30,null,new x_([ZA.LONELY,ZA.BOLD,ZA.RELAXED,ZA.TIMID,ZA.SERIOUS,ZA.MODEST,ZA.MILD,ZA.QUIET,ZA.BASHFUL,ZA.CALM,ZA.GENTLE,ZA.CAREFUL])),new sE(A.TOXTRICITY,"","amped",30,null,null)],[A.SIZZLIPEDE]:[new g(A.CENTISKORCH,28,null,null)],[A.HATENNA]:[new g(A.HATTREM,32,null,null)],[A.HATTREM]:[new g(A.HATTERENE,42,null,null)],[A.IMPIDIMP]:[new g(A.MORGREM,32,null,null)],[A.MORGREM]:[new g(A.GRIMMSNARL,42,null,null)],[A.CUFANT]:[new g(A.COPPERAJAH,34,null,null)],[A.DREEPY]:[new g(A.DRAKLOAK,50,null,null)],[A.DRAKLOAK]:[new g(A.DRAGAPULT,60,null,null)],[A.GALAR_MEOWTH]:[new g(A.PERRSERKER,28,null,null)],[A.GALAR_PONYTA]:[new g(A.GALAR_RAPIDASH,40,null,null)],[A.GALAR_FARFETCHD]:[new g(A.SIRFETCHD,30,null,null,3)],[A.GALAR_SLOWPOKE]:[new g(A.GALAR_SLOWBRO,1,31,null,4),new g(A.GALAR_SLOWKING,1,32,null,4)],[A.GALAR_MR_MIME]:[new g(A.MR_RIME,42,null,null)],[A.GALAR_CORSOLA]:[new g(A.CURSOLA,38,null,null)],[A.GALAR_ZIGZAGOON]:[new g(A.GALAR_LINOONE,20,null,null)],[A.GALAR_LINOONE]:[new g(A.OBSTAGOON,35,null,new zE("night"))],[A.GALAR_YAMASK]:[new g(A.RUNERIGUS,34,null,null)],[A.HISUI_ZORUA]:[new g(A.HISUI_ZOROARK,30,null,null)],[A.HISUI_SLIGGOO]:[new g(A.HISUI_GOODRA,50,null,new tC([Z.RAIN,Z.FOG,Z.HEAVY_RAIN]),3)],[A.SPRIGATITO]:[new g(A.FLORAGATO,16,null,null)],[A.FLORAGATO]:[new g(A.MEOWSCARADA,36,null,null)],[A.FUECOCO]:[new g(A.CROCALOR,16,null,null)],[A.CROCALOR]:[new g(A.SKELEDIRGE,36,null,null)],[A.QUAXLY]:[new g(A.QUAXWELL,16,null,null)],[A.QUAXWELL]:[new g(A.QUAQUAVAL,36,null,null)],[A.LECHONK]:[new sE(A.OINKOLOGNE,"","female",18,null,new VR(mA.FEMALE)),new sE(A.OINKOLOGNE,"","",18,null,new VR(mA.MALE))],[A.TAROUNTULA]:[new g(A.SPIDOPS,15,null,null)],[A.NYMBLE]:[new g(A.LOKIX,24,null,null)],[A.PAWMI]:[new g(A.PAWMO,18,null,null)],[A.PAWMO]:[new g(A.PAWMOT,32,null,null)],[A.TANDEMAUS]:[new sE(A.MAUSHOLD,"","three",25,null,new b_),new sE(A.MAUSHOLD,"","four",25,null,null)],[A.FIDOUGH]:[new g(A.DACHSBUN,26,null,null)],[A.SMOLIV]:[new g(A.DOLLIV,25,null,null)],[A.DOLLIV]:[new g(A.ARBOLIVA,35,null,null)],[A.NACLI]:[new g(A.NACLSTACK,24,null,null)],[A.NACLSTACK]:[new g(A.GARGANACL,38,null,null)],[A.WATTREL]:[new g(A.KILOWATTREL,25,null,null)],[A.MASCHIFF]:[new g(A.MABOSSTIFF,30,null,null)],[A.SHROODLE]:[new g(A.GRAFAIAI,28,null,null)],[A.BRAMBLIN]:[new g(A.BRAMBLEGHAST,30,null,null)],[A.TOEDSCOOL]:[new g(A.TOEDSCRUEL,30,null,null)],[A.RELLOR]:[new g(A.RABSCA,29,null,null)],[A.FLITTLE]:[new g(A.ESPATHRA,35,null,null)],[A.TINKATINK]:[new g(A.TINKATUFF,24,null,null)],[A.TINKATUFF]:[new g(A.TINKATON,38,null,null)],[A.WIGLETT]:[new g(A.WUGTRIO,26,null,null)],[A.FINIZEN]:[new g(A.PALAFIN,38,null,null)],[A.VAROOM]:[new g(A.REVAVROOM,40,null,null)],[A.GLIMMET]:[new g(A.GLIMMORA,35,null,null)],[A.GREAVARD]:[new g(A.HOUNDSTONE,30,null,new zE("night"))],[A.FRIGIBAX]:[new g(A.ARCTIBAX,35,null,null)],[A.ARCTIBAX]:[new g(A.BAXCALIBUR,54,null,null)],[A.PALDEA_WOOPER]:[new g(A.CLODSIRE,20,null,null)],[A.PIKACHU]:[new sE(A.ALOLA_RAICHU,"","",1,11,null,3),new sE(A.ALOLA_RAICHU,"partner","",1,11,null,3),new sE(A.RAICHU,"","",1,7,null,3),new sE(A.RAICHU,"partner","",1,7,null,3)],[A.NIDORINA]:[new g(A.NIDOQUEEN,1,3,null,3)],[A.NIDORINO]:[new g(A.NIDOKING,1,3,null,3)],[A.CLEFAIRY]:[new g(A.CLEFABLE,1,3,null,3)],[A.VULPIX]:[new g(A.NINETALES,1,5,null,3)],[A.JIGGLYPUFF]:[new g(A.WIGGLYTUFF,1,3,null,3)],[A.GLOOM]:[new g(A.VILEPLUME,1,4,null,3),new g(A.BELLOSSOM,1,2,null,3)],[A.GROWLITHE]:[new g(A.ARCANINE,1,5,null,3)],[A.POLIWHIRL]:[new g(A.POLIWRATH,1,6,null,3),new g(A.POLITOED,1,1,null,4)],[A.WEEPINBELL]:[new g(A.VICTREEBEL,1,4,null,3)],[A.MAGNETON]:[new g(A.MAGNEZONE,1,7,null,3)],[A.SHELLDER]:[new g(A.CLOYSTER,1,6,null,3)],[A.EXEGGCUTE]:[new g(A.ALOLA_EXEGGUTOR,1,2,null,3),new g(A.EXEGGUTOR,1,4,null,3)],[A.TANGELA]:[new g(A.TANGROWTH,34,null,new GR(E.ANCIENT_POWER),3)],[A.LICKITUNG]:[new g(A.LICKILICKY,32,null,new GR(E.ROLLOUT),3)],[A.STARYU]:[new g(A.STARMIE,1,6,null,3)],[A.EEVEE]:[new sE(A.SYLVEON,"","",1,null,new IC(120,t.FAIRY),3),new sE(A.SYLVEON,"partner","",1,null,new IC(120,t.FAIRY),3),new sE(A.ESPEON,"","",1,null,new DI(120,"day"),3),new sE(A.ESPEON,"partner","",1,null,new DI(120,"day"),3),new sE(A.UMBREON,"","",1,null,new DI(120,"night"),3),new sE(A.UMBREON,"partner","",1,null,new DI(120,"night"),3),new sE(A.VAPOREON,"","",1,6,null,3),new sE(A.VAPOREON,"partner","",1,6,null,3),new sE(A.JOLTEON,"","",1,7,null,3),new sE(A.JOLTEON,"partner","",1,7,null,3),new sE(A.FLAREON,"","",1,5,null,3),new sE(A.FLAREON,"partner","",1,5,null,3),new sE(A.LEAFEON,"","",1,4,null,3),new sE(A.LEAFEON,"partner","",1,4,null,3),new sE(A.GLACEON,"","",1,8,null,3),new sE(A.GLACEON,"partner","",1,8,null,3)],[A.TOGETIC]:[new g(A.TOGEKISS,1,11,null,4)],[A.AIPOM]:[new g(A.AMBIPOM,32,null,new GR(E.DOUBLE_HIT),3)],[A.SUNKERN]:[new g(A.SUNFLORA,1,2,null,3)],[A.YANMA]:[new g(A.YANMEGA,33,null,new GR(E.ANCIENT_POWER),3)],[A.MURKROW]:[new g(A.HONCHKROW,1,9,null,4)],[A.MISDREAVUS]:[new g(A.MISMAGIUS,1,9,null,4)],[A.GIRAFARIG]:[new g(A.FARIGIRAF,32,null,new GR(E.TWIN_BEAM),3)],[A.DUNSPARCE]:[new sE(A.DUDUNSPARCE,"","three-segment",32,null,new Z_,3),new sE(A.DUDUNSPARCE,"","two-segment",32,null,new GR(E.HYPER_DRILL),3)],[A.GLIGAR]:[new g(A.GLISCOR,1,22,new zE("night"),4)],[A.SNEASEL]:[new g(A.WEAVILE,1,21,new zE("night"),4)],[A.URSARING]:[new g(A.URSALUNA,1,52,null,4)],[A.PILOSWINE]:[new g(A.MAMOSWINE,1,null,new GR(E.ANCIENT_POWER),4)],[A.STANTLER]:[new g(A.WYRDEER,25,null,new GR(E.PSYSHIELD_BASH),4)],[A.LOMBRE]:[new g(A.LUDICOLO,1,6,null,3)],[A.NUZLEAF]:[new g(A.SHIFTRY,1,4,null,3)],[A.NOSEPASS]:[new g(A.PROBOPASS,1,7,null,3)],[A.SKITTY]:[new g(A.DELCATTY,1,3,null,3)],[A.ROSELIA]:[new g(A.ROSERADE,1,11,null,4)],[A.BONSLY]:[new g(A.SUDOWOODO,1,null,new GR(E.MIMIC),2)],[A.MIME_JR]:[new g(A.GALAR_MR_MIME,1,null,new SC(E.MIMIC,"night"),2),new g(A.MR_MIME,1,null,new SC(E.MIMIC,"day"),2)],[A.PANSAGE]:[new g(A.SIMISAGE,1,4,null,3)],[A.PANSEAR]:[new g(A.SIMISEAR,1,5,null,3)],[A.PANPOUR]:[new g(A.SIMIPOUR,1,6,null,3)],[A.MUNNA]:[new g(A.MUSHARNA,1,3,null,3)],[A.COTTONEE]:[new g(A.WHIMSICOTT,1,2,null,3)],[A.PETILIL]:[new g(A.HISUI_LILLIGANT,1,11,null,3),new g(A.LILLIGANT,1,2,null,3)],[A.BASCULIN]:[new sE(A.BASCULEGION,"white-striped","female",40,null,new VR(mA.FEMALE),4),new sE(A.BASCULEGION,"white-striped","male",40,null,new VR(mA.MALE),4)],[A.MINCCINO]:[new g(A.CINCCINO,1,11,null,3)],[A.EELEKTRIK]:[new g(A.EELEKTROSS,1,7,null,4)],[A.LAMPENT]:[new g(A.CHANDELURE,1,9,null,4)],[A.FLOETTE]:[new g(A.FLORGES,1,11,null,3)],[A.DOUBLADE]:[new g(A.AEGISLASH,1,9,null,3)],[A.HELIOPTILE]:[new g(A.HELIOLISK,1,2,null,3)],[A.CHARJABUG]:[new g(A.VIKAVOLT,1,7,null,3)],[A.CRABRAWLER]:[new g(A.CRABOMINABLE,1,8,null,3)],[A.ROCKRUFF]:[new sE(A.LYCANROC,"own-tempo","dusk",25,null,null),new sE(A.LYCANROC,"","midday",25,null,new zE("day")),new sE(A.LYCANROC,"","midnight",25,null,new zE("night"))],[A.STEENEE]:[new g(A.TSAREENA,28,null,new GR(E.STOMP),3)],[A.POIPOLE]:[new g(A.NAGANADEL,1,null,new GR(E.DRAGON_PULSE),3)],[A.ALOLA_SANDSHREW]:[new g(A.ALOLA_SANDSLASH,1,8,null,3)],[A.ALOLA_VULPIX]:[new g(A.ALOLA_NINETALES,1,8,null,3)],[A.APPLIN]:[new g(A.DIPPLIN,1,29,null,3),new g(A.FLAPPLE,1,14,null,3),new g(A.APPLETUN,1,13,null,3)],[A.CLOBBOPUS]:[new g(A.GRAPPLOCT,35,null,new GR(E.TAUNT))],[A.SINISTEA]:[new sE(A.POLTEAGEIST,"phony","phony",1,12,null,3),new sE(A.POLTEAGEIST,"antique","antique",1,30,null,3)],[A.MILCERY]:[new sE(A.ALCREMIE,"","vanilla-cream",1,15,new qO([s.TOWN,s.PLAINS,s.GRASS,s.TALL_GRASS,s.METROPOLIS]),3),new sE(A.ALCREMIE,"","ruby-cream",1,15,new qO([s.BADLANDS,s.VOLCANO,s.GRAVEYARD,s.FACTORY,s.SLUM]),3),new sE(A.ALCREMIE,"","matcha-cream",1,15,new qO([s.FOREST,s.SWAMP,s.MEADOW,s.JUNGLE]),3),new sE(A.ALCREMIE,"","mint-cream",1,15,new qO([s.SEA,s.BEACH,s.LAKE,s.SEABED]),3),new sE(A.ALCREMIE,"","lemon-cream",1,15,new qO([s.DESERT,s.POWER_PLANT,s.DOJO,s.RUINS,s.CONSTRUCTION_SITE]),3),new sE(A.ALCREMIE,"","salted-cream",1,15,new qO([s.MOUNTAIN,s.CAVE,s.ICE_CAVE,s.FAIRY_CAVE,s.SNOWY_FOREST]),3),new sE(A.ALCREMIE,"","ruby-swirl",1,15,new qO([s.WASTELAND,s.LABORATORY]),3),new sE(A.ALCREMIE,"","caramel-swirl",1,15,new qO([s.TEMPLE,s.ISLAND]),3),new sE(A.ALCREMIE,"","rainbow-swirl",1,15,new qO([s.ABYSS,s.SPACE,s.END]),3)],[A.DURALUDON]:[new sE(A.ARCHALUDON,"","",1,53,null,4)],[A.KUBFU]:[new sE(A.URSHIFU,"","single-strike",1,54,null,4),new sE(A.URSHIFU,"","rapid-strike",1,55,null,4)],[A.GALAR_DARUMAKA]:[new g(A.GALAR_DARMANITAN,1,8,null,3)],[A.HISUI_GROWLITHE]:[new g(A.HISUI_ARCANINE,1,5,null,3)],[A.HISUI_VOLTORB]:[new g(A.HISUI_ELECTRODE,1,4,null,3)],[A.HISUI_QWILFISH]:[new g(A.OVERQWIL,28,null,new GR(E.BARB_BARRAGE),3)],[A.HISUI_SNEASEL]:[new g(A.SNEASLER,1,21,new zE("day"),4)],[A.CHARCADET]:[new g(A.ARMAROUGE,1,33,null,3),new g(A.CERULEDGE,1,34,null,3)],[A.TADBULB]:[new g(A.BELLIBOLT,1,7,null,3)],[A.CAPSAKID]:[new g(A.SCOVILLAIN,1,5,null,3)],[A.CETODDLE]:[new g(A.CETITAN,1,8,null,3)],[A.POLTCHAGEIST]:[new sE(A.SINISTCHA,"counterfeit","unremarkable",1,16,null,3),new sE(A.SINISTCHA,"artisan","masterpiece",1,35,null,3)],[A.DIPPLIN]:[new g(A.HYDRAPPLE,1,null,new GR(E.DRAGON_CHEER),4)],[A.KADABRA]:[new g(A.ALAKAZAM,1,1,null,4)],[A.MACHOKE]:[new g(A.MACHAMP,1,1,null,4)],[A.GRAVELER]:[new g(A.GOLEM,1,1,null,4)],[A.HAUNTER]:[new g(A.GENGAR,1,1,null,4)],[A.ONIX]:[new g(A.STEELIX,1,1,new LC(t.STEEL),4)],[A.RHYDON]:[new g(A.RHYPERIOR,1,26,null,4)],[A.SEADRA]:[new g(A.KINGDRA,1,19,null,4)],[A.SCYTHER]:[new g(A.SCIZOR,1,1,new LC(t.STEEL),4),new g(A.KLEAVOR,1,51,null,4)],[A.ELECTABUZZ]:[new g(A.ELECTIVIRE,1,24,null,4)],[A.MAGMAR]:[new g(A.MAGMORTAR,1,25,null,4)],[A.PORYGON]:[new g(A.PORYGON2,1,17,null,3)],[A.PORYGON2]:[new g(A.PORYGON_Z,1,18,null,4)],[A.FEEBAS]:[new g(A.MILOTIC,1,20,null,4)],[A.DUSCLOPS]:[new g(A.DUSKNOIR,1,23,null,4)],[A.CLAMPERL]:[new g(A.HUNTAIL,1,1,new ve(R=>R.getHeldItems().some(e=>e.is("SpeciesStatBoosterModifier")&&e.type.key==="DEEP_SEA_TOOTH")),4),new g(A.GOREBYSS,1,1,new ve(R=>R.getHeldItems().some(e=>e.is("SpeciesStatBoosterModifier")&&e.type.key==="DEEP_SEA_SCALE")),4)],[A.BOLDORE]:[new g(A.GIGALITH,1,1,null,4)],[A.GURDURR]:[new g(A.CONKELDURR,1,1,null,4)],[A.KARRABLAST]:[new g(A.ESCAVALIER,1,1,new PT(A.SHELMET),4)],[A.SHELMET]:[new g(A.ACCELGOR,1,1,new PT(A.KARRABLAST),4)],[A.SPRITZEE]:[new g(A.AROMATISSE,1,27,null,4)],[A.SWIRLIX]:[new g(A.SLURPUFF,1,28,null,4)],[A.PHANTUMP]:[new g(A.TREVENANT,1,1,null,4)],[A.PUMPKABOO]:[new g(A.GOURGEIST,1,1,null,4)],[A.ALOLA_GRAVELER]:[new g(A.ALOLA_GOLEM,1,1,null,4)],[A.PRIMEAPE]:[new g(A.ANNIHILAPE,35,null,new GR(E.RAGE_FIST),4)],[A.GOLBAT]:[new g(A.CROBAT,1,null,new PR(120),4)],[A.CHANSEY]:[new g(A.BLISSEY,1,null,new PR(200),3)],[A.PICHU]:[new sE(A.PIKACHU,"spiky","partner",1,null,new PR(90),1),new sE(A.PIKACHU,"","",1,null,new PR(90),1)],[A.CLEFFA]:[new g(A.CLEFAIRY,1,null,new PR(160),1)],[A.IGGLYBUFF]:[new g(A.JIGGLYPUFF,1,null,new PR(70),1)],[A.TOGEPI]:[new g(A.TOGETIC,1,null,new PR(70),1)],[A.AZURILL]:[new g(A.MARILL,1,null,new PR(70),1)],[A.BUDEW]:[new g(A.ROSELIA,1,null,new DI(70,"day"),1)],[A.BUNEARY]:[new g(A.LOPUNNY,1,null,new PR(70),2)],[A.CHINGLING]:[new g(A.CHIMECHO,1,null,new DI(90,"night"),2)],[A.HAPPINY]:[new g(A.CHANSEY,1,null,new PR(160),1)],[A.MUNCHLAX]:[new g(A.SNORLAX,1,null,new PR(120),3)],[A.RIOLU]:[new g(A.LUCARIO,1,null,new DI(120,"day"),3)],[A.WOOBAT]:[new g(A.SWOOBAT,1,null,new PR(90),2)],[A.SWADLOON]:[new g(A.LEAVANNY,1,null,new PR(120),3)],[A.TYPE_NULL]:[new g(A.SILVALLY,1,null,new PR(100),3)],[A.ALOLA_MEOWTH]:[new g(A.ALOLA_PERSIAN,1,null,new PR(120),3)],[A.SNOM]:[new g(A.FROSMOTH,1,null,new DI(90,"night"),2)],[A.GIMMIGHOUL]:[new sE(A.GHOLDENGO,"chest","",1,null,new NC,4),new sE(A.GHOLDENGO,"roaming","",1,null,new NC,4)]},Fe={};function dy(){const R=[eA.MEGA,"",eA.MEGA_X,"",eA.MEGA_Y].map(I=>I);Object.keys(lE).forEach(I=>{const L=lE[I];for(const N of L)N.evoFormKey&&R.indexOf(N.evoFormKey)>-1||(Fe[N.speciesId]=Number.parseInt(I))})}r(dy,"initPokemonPrevolutions");const vm={};function py(){Object.keys(Fe).forEach(e=>{const I=Fe[e];FR.hasOwnProperty(I)?vm[e]=I:vm[e]=Fe[I]})}r(py,"initPokemonStarters");var U=(R=>(R[R.UNKNOWN=0]="UNKNOWN",R[R.ACE_TRAINER=1]="ACE_TRAINER",R[R.ARTIST=2]="ARTIST",R[R.BACKERS=3]="BACKERS",R[R.BACKPACKER=4]="BACKPACKER",R[R.BAKER=5]="BAKER",R[R.BEAUTY=6]="BEAUTY",R[R.BIKER=7]="BIKER",R[R.BLACK_BELT=8]="BLACK_BELT",R[R.BREEDER=9]="BREEDER",R[R.CLERK=10]="CLERK",R[R.CYCLIST=11]="CYCLIST",R[R.DANCER=12]="DANCER",R[R.DEPOT_AGENT=13]="DEPOT_AGENT",R[R.DOCTOR=14]="DOCTOR",R[R.FIREBREATHER=15]="FIREBREATHER",R[R.FISHERMAN=16]="FISHERMAN",R[R.GUITARIST=17]="GUITARIST",R[R.HARLEQUIN=18]="HARLEQUIN",R[R.HIKER=19]="HIKER",R[R.HOOLIGANS=20]="HOOLIGANS",R[R.HOOPSTER=21]="HOOPSTER",R[R.INFIELDER=22]="INFIELDER",R[R.JANITOR=23]="JANITOR",R[R.LINEBACKER=24]="LINEBACKER",R[R.MAID=25]="MAID",R[R.MUSICIAN=26]="MUSICIAN",R[R.HEX_MANIAC=27]="HEX_MANIAC",R[R.NURSERY_AIDE=28]="NURSERY_AIDE",R[R.OFFICER=29]="OFFICER",R[R.PARASOL_LADY=30]="PARASOL_LADY",R[R.PILOT=31]="PILOT",R[R.POKEFAN=32]="POKEFAN",R[R.PRESCHOOLER=33]="PRESCHOOLER",R[R.PSYCHIC=34]="PSYCHIC",R[R.RANGER=35]="RANGER",R[R.RICH=36]="RICH",R[R.RICH_KID=37]="RICH_KID",R[R.ROUGHNECK=38]="ROUGHNECK",R[R.SAILOR=39]="SAILOR",R[R.SCIENTIST=40]="SCIENTIST",R[R.SMASHER=41]="SMASHER",R[R.SNOW_WORKER=42]="SNOW_WORKER",R[R.STRIKER=43]="STRIKER",R[R.SCHOOL_KID=44]="SCHOOL_KID",R[R.SWIMMER=45]="SWIMMER",R[R.TWINS=46]="TWINS",R[R.VETERAN=47]="VETERAN",R[R.WAITER=48]="WAITER",R[R.WORKER=49]="WORKER",R[R.YOUNGSTER=50]="YOUNGSTER",R[R.ROCKET_GRUNT=51]="ROCKET_GRUNT",R[R.ARCHER=52]="ARCHER",R[R.ARIANA=53]="ARIANA",R[R.PROTON=54]="PROTON",R[R.PETREL=55]="PETREL",R[R.MAGMA_GRUNT=56]="MAGMA_GRUNT",R[R.TABITHA=57]="TABITHA",R[R.COURTNEY=58]="COURTNEY",R[R.AQUA_GRUNT=59]="AQUA_GRUNT",R[R.MATT=60]="MATT",R[R.SHELLY=61]="SHELLY",R[R.GALACTIC_GRUNT=62]="GALACTIC_GRUNT",R[R.JUPITER=63]="JUPITER",R[R.MARS=64]="MARS",R[R.SATURN=65]="SATURN",R[R.PLASMA_GRUNT=66]="PLASMA_GRUNT",R[R.ZINZOLIN=67]="ZINZOLIN",R[R.COLRESS=68]="COLRESS",R[R.FLARE_GRUNT=69]="FLARE_GRUNT",R[R.BRYONY=70]="BRYONY",R[R.XEROSIC=71]="XEROSIC",R[R.AETHER_GRUNT=72]="AETHER_GRUNT",R[R.FABA=73]="FABA",R[R.SKULL_GRUNT=74]="SKULL_GRUNT",R[R.PLUMERIA=75]="PLUMERIA",R[R.MACRO_GRUNT=76]="MACRO_GRUNT",R[R.OLEANA=77]="OLEANA",R[R.STAR_GRUNT=78]="STAR_GRUNT",R[R.GIACOMO=79]="GIACOMO",R[R.MELA=80]="MELA",R[R.ATTICUS=81]="ATTICUS",R[R.ORTEGA=82]="ORTEGA",R[R.ERI=83]="ERI",R[R.ROCKET_BOSS_GIOVANNI_1=84]="ROCKET_BOSS_GIOVANNI_1",R[R.ROCKET_BOSS_GIOVANNI_2=85]="ROCKET_BOSS_GIOVANNI_2",R[R.MAXIE=86]="MAXIE",R[R.MAXIE_2=87]="MAXIE_2",R[R.ARCHIE=88]="ARCHIE",R[R.ARCHIE_2=89]="ARCHIE_2",R[R.CYRUS=90]="CYRUS",R[R.CYRUS_2=91]="CYRUS_2",R[R.GHETSIS=92]="GHETSIS",R[R.GHETSIS_2=93]="GHETSIS_2",R[R.LYSANDRE=94]="LYSANDRE",R[R.LYSANDRE_2=95]="LYSANDRE_2",R[R.LUSAMINE=96]="LUSAMINE",R[R.LUSAMINE_2=97]="LUSAMINE_2",R[R.GUZMA=98]="GUZMA",R[R.GUZMA_2=99]="GUZMA_2",R[R.ROSE=100]="ROSE",R[R.ROSE_2=101]="ROSE_2",R[R.PENNY=102]="PENNY",R[R.PENNY_2=103]="PENNY_2",R[R.BUCK=104]="BUCK",R[R.CHERYL=105]="CHERYL",R[R.MARLEY=106]="MARLEY",R[R.MIRA=107]="MIRA",R[R.RILEY=108]="RILEY",R[R.VICTOR=109]="VICTOR",R[R.VICTORIA=110]="VICTORIA",R[R.VIVI=111]="VIVI",R[R.VICKY=112]="VICKY",R[R.VITO=113]="VITO",R[R.BUG_TYPE_SUPERFAN=114]="BUG_TYPE_SUPERFAN",R[R.EXPERT_POKEMON_BREEDER=115]="EXPERT_POKEMON_BREEDER",R[R.FUTURE_SELF_M=116]="FUTURE_SELF_M",R[R.FUTURE_SELF_F=117]="FUTURE_SELF_F",R[R.BROCK=200]="BROCK",R[R.MISTY=201]="MISTY",R[R.LT_SURGE=202]="LT_SURGE",R[R.ERIKA=203]="ERIKA",R[R.JANINE=204]="JANINE",R[R.SABRINA=205]="SABRINA",R[R.BLAINE=206]="BLAINE",R[R.GIOVANNI=207]="GIOVANNI",R[R.FALKNER=208]="FALKNER",R[R.BUGSY=209]="BUGSY",R[R.WHITNEY=210]="WHITNEY",R[R.MORTY=211]="MORTY",R[R.CHUCK=212]="CHUCK",R[R.JASMINE=213]="JASMINE",R[R.PRYCE=214]="PRYCE",R[R.CLAIR=215]="CLAIR",R[R.ROXANNE=216]="ROXANNE",R[R.BRAWLY=217]="BRAWLY",R[R.WATTSON=218]="WATTSON",R[R.FLANNERY=219]="FLANNERY",R[R.NORMAN=220]="NORMAN",R[R.WINONA=221]="WINONA",R[R.TATE=222]="TATE",R[R.LIZA=223]="LIZA",R[R.JUAN=224]="JUAN",R[R.ROARK=225]="ROARK",R[R.GARDENIA=226]="GARDENIA",R[R.MAYLENE=227]="MAYLENE",R[R.CRASHER_WAKE=228]="CRASHER_WAKE",R[R.FANTINA=229]="FANTINA",R[R.BYRON=230]="BYRON",R[R.CANDICE=231]="CANDICE",R[R.VOLKNER=232]="VOLKNER",R[R.CILAN=233]="CILAN",R[R.CHILI=234]="CHILI",R[R.CRESS=235]="CRESS",R[R.CHEREN=236]="CHEREN",R[R.LENORA=237]="LENORA",R[R.ROXIE=238]="ROXIE",R[R.BURGH=239]="BURGH",R[R.ELESA=240]="ELESA",R[R.CLAY=241]="CLAY",R[R.SKYLA=242]="SKYLA",R[R.BRYCEN=243]="BRYCEN",R[R.DRAYDEN=244]="DRAYDEN",R[R.MARLON=245]="MARLON",R[R.VIOLA=246]="VIOLA",R[R.GRANT=247]="GRANT",R[R.KORRINA=248]="KORRINA",R[R.RAMOS=249]="RAMOS",R[R.CLEMONT=250]="CLEMONT",R[R.VALERIE=251]="VALERIE",R[R.OLYMPIA=252]="OLYMPIA",R[R.WULFRIC=253]="WULFRIC",R[R.MILO=254]="MILO",R[R.NESSA=255]="NESSA",R[R.KABU=256]="KABU",R[R.BEA=257]="BEA",R[R.ALLISTER=258]="ALLISTER",R[R.OPAL=259]="OPAL",R[R.BEDE=260]="BEDE",R[R.GORDIE=261]="GORDIE",R[R.MELONY=262]="MELONY",R[R.PIERS=263]="PIERS",R[R.MARNIE=264]="MARNIE",R[R.RAIHAN=265]="RAIHAN",R[R.KATY=266]="KATY",R[R.BRASSIUS=267]="BRASSIUS",R[R.IONO=268]="IONO",R[R.KOFU=269]="KOFU",R[R.LARRY=270]="LARRY",R[R.RYME=271]="RYME",R[R.TULIP=272]="TULIP",R[R.GRUSHA=273]="GRUSHA",R[R.LORELEI=300]="LORELEI",R[R.BRUNO=301]="BRUNO",R[R.AGATHA=302]="AGATHA",R[R.LANCE=303]="LANCE",R[R.WILL=304]="WILL",R[R.KOGA=305]="KOGA",R[R.KAREN=306]="KAREN",R[R.SIDNEY=307]="SIDNEY",R[R.PHOEBE=308]="PHOEBE",R[R.GLACIA=309]="GLACIA",R[R.DRAKE=310]="DRAKE",R[R.AARON=311]="AARON",R[R.BERTHA=312]="BERTHA",R[R.FLINT=313]="FLINT",R[R.LUCIAN=314]="LUCIAN",R[R.SHAUNTAL=315]="SHAUNTAL",R[R.MARSHAL=316]="MARSHAL",R[R.GRIMSLEY=317]="GRIMSLEY",R[R.CAITLIN=318]="CAITLIN",R[R.MALVA=319]="MALVA",R[R.SIEBOLD=320]="SIEBOLD",R[R.WIKSTROM=321]="WIKSTROM",R[R.DRASNA=322]="DRASNA",R[R.HALA=323]="HALA",R[R.MOLAYNE=324]="MOLAYNE",R[R.OLIVIA=325]="OLIVIA",R[R.ACEROLA=326]="ACEROLA",R[R.KAHILI=327]="KAHILI",R[R.MARNIE_ELITE=328]="MARNIE_ELITE",R[R.NESSA_ELITE=329]="NESSA_ELITE",R[R.BEA_ELITE=330]="BEA_ELITE",R[R.ALLISTER_ELITE=331]="ALLISTER_ELITE",R[R.RAIHAN_ELITE=332]="RAIHAN_ELITE",R[R.RIKA=333]="RIKA",R[R.POPPY=334]="POPPY",R[R.LARRY_ELITE=335]="LARRY_ELITE",R[R.HASSEL=336]="HASSEL",R[R.CRISPIN=337]="CRISPIN",R[R.AMARYS=338]="AMARYS",R[R.LACEY=339]="LACEY",R[R.DRAYTON=340]="DRAYTON",R[R.BLUE=350]="BLUE",R[R.RED=351]="RED",R[R.LANCE_CHAMPION=352]="LANCE_CHAMPION",R[R.STEVEN=353]="STEVEN",R[R.WALLACE=354]="WALLACE",R[R.CYNTHIA=355]="CYNTHIA",R[R.ALDER=356]="ALDER",R[R.IRIS=357]="IRIS",R[R.DIANTHA=358]="DIANTHA",R[R.KUKUI=359]="KUKUI",R[R.HAU=360]="HAU",R[R.LEON=361]="LEON",R[R.MUSTARD=362]="MUSTARD",R[R.GEETA=363]="GEETA",R[R.NEMONA=364]="NEMONA",R[R.KIERAN=365]="KIERAN",R[R.RIVAL=375]="RIVAL",R[R.RIVAL_2=376]="RIVAL_2",R[R.RIVAL_3=377]="RIVAL_3",R[R.RIVAL_4=378]="RIVAL_4",R[R.RIVAL_5=379]="RIVAL_5",R[R.RIVAL_6=380]="RIVAL_6",R))(U||{});function J4(R){if(R===-1)return _.t("biome:unknownLocation");switch(R){case s.GRASS:return _.t("biome:GRASS");case s.RUINS:return _.t("biome:RUINS");case s.END:return _.t("biome:END");default:return _.t(`biome:${s[R].toUpperCase()}`)}}r(J4,"getBiomeName");const a_={[s.TOWN]:s.PLAINS,[s.PLAINS]:[s.GRASS,s.METROPOLIS,s.LAKE],[s.GRASS]:s.TALL_GRASS,[s.TALL_GRASS]:[s.FOREST,s.CAVE],[s.SLUM]:[s.CONSTRUCTION_SITE,[s.SWAMP,2]],[s.FOREST]:[s.JUNGLE,s.MEADOW],[s.SEA]:[s.SEABED,s.ICE_CAVE],[s.SWAMP]:[s.GRAVEYARD,s.TALL_GRASS],[s.BEACH]:[s.SEA,[s.ISLAND,2]],[s.LAKE]:[s.BEACH,s.SWAMP,s.CONSTRUCTION_SITE],[s.SEABED]:[s.CAVE,[s.VOLCANO,3]],[s.MOUNTAIN]:[s.VOLCANO,[s.WASTELAND,2],[s.SPACE,3]],[s.BADLANDS]:[s.DESERT,s.MOUNTAIN],[s.CAVE]:[s.BADLANDS,s.LAKE,[s.LABORATORY,2]],[s.DESERT]:[s.RUINS,[s.CONSTRUCTION_SITE,2]],[s.ICE_CAVE]:s.SNOWY_FOREST,[s.MEADOW]:[s.PLAINS,s.FAIRY_CAVE],[s.POWER_PLANT]:s.FACTORY,[s.VOLCANO]:[s.BEACH,[s.ICE_CAVE,3]],[s.GRAVEYARD]:s.ABYSS,[s.DOJO]:[s.PLAINS,[s.JUNGLE,2],[s.TEMPLE,2]],[s.FACTORY]:[s.PLAINS,[s.LABORATORY,2]],[s.RUINS]:[s.MOUNTAIN,[s.FOREST,2]],[s.WASTELAND]:s.BADLANDS,[s.ABYSS]:[s.CAVE,[s.SPACE,2],[s.WASTELAND,2]],[s.SPACE]:s.RUINS,[s.CONSTRUCTION_SITE]:[s.POWER_PLANT,[s.DOJO,2]],[s.JUNGLE]:[s.TEMPLE],[s.FAIRY_CAVE]:[s.ICE_CAVE,[s.SPACE,2]],[s.TEMPLE]:[s.DESERT,[s.SWAMP,2],[s.RUINS,2]],[s.METROPOLIS]:s.SLUM,[s.SNOWY_FOREST]:[s.FOREST,[s.MOUNTAIN,2],[s.LAKE,2]],[s.ISLAND]:s.SEA,[s.LABORATORY]:s.CONSTRUCTION_SITE},st={};var ne=(R=>(R[R.COMMON=0]="COMMON",R[R.UNCOMMON=1]="UNCOMMON",R[R.RARE=2]="RARE",R[R.SUPER_RARE=3]="SUPER_RARE",R[R.ULTRA_RARE=4]="ULTRA_RARE",R[R.BOSS=5]="BOSS",R[R.BOSS_RARE=6]="BOSS_RARE",R[R.BOSS_SUPER_RARE=7]="BOSS_SUPER_RARE",R[R.BOSS_ULTRA_RARE=8]="BOSS_ULTRA_RARE",R))(ne||{});const $4=[],xm={},rO={[s.TOWN]:{0:{[a.DAWN]:[{1:[A.CATERPIE],7:[A.METAPOD]},A.SENTRET,A.LEDYBA,A.HOPPIP,A.SUNKERN,A.STARLY,A.PIDOVE,A.COTTONEE,{1:[A.SCATTERBUG],9:[A.SPEWPA]},A.YUNGOOS,A.SKWOVET],[a.DAY]:[{1:[A.CATERPIE],7:[A.METAPOD]},A.SENTRET,A.HOPPIP,A.SUNKERN,A.SILCOON,A.STARLY,A.PIDOVE,A.COTTONEE,{1:[A.SCATTERBUG],9:[A.SPEWPA]},A.YUNGOOS,A.SKWOVET],[a.DUSK]:[{1:[A.WEEDLE],7:[A.KAKUNA]},A.POOCHYENA,A.PATRAT,A.PURRLOIN,A.BLIPBUG],[a.NIGHT]:[{1:[A.WEEDLE],7:[A.KAKUNA]},A.HOOTHOOT,A.SPINARAK,A.POOCHYENA,A.CASCOON,A.PATRAT,A.PURRLOIN,A.BLIPBUG],[a.ALL]:[A.PIDGEY,A.RATTATA,A.SPEAROW,A.ZIGZAGOON,A.WURMPLE,A.TAILLOW,A.BIDOOF,A.LILLIPUP,A.FLETCHLING,A.WOOLOO,A.LECHONK]},1:{[a.DAWN]:[A.BELLSPROUT,A.POOCHYENA,A.LOTAD,A.SKITTY,A.COMBEE,A.CHERUBI,A.PATRAT,A.MINCCINO,A.PAWMI],[a.DAY]:[A.NIDORAN_F,A.NIDORAN_M,A.BELLSPROUT,A.POOCHYENA,A.LOTAD,A.SKITTY,A.COMBEE,A.CHERUBI,A.PATRAT,A.MINCCINO,A.PAWMI],[a.DUSK]:[A.EKANS,A.ODDISH,A.MEOWTH,A.SPINARAK,A.SEEDOT,A.SHROOMISH,A.KRICKETOT,A.VENIPEDE],[a.NIGHT]:[A.EKANS,A.ODDISH,A.PARAS,A.VENONAT,A.MEOWTH,A.SEEDOT,A.SHROOMISH,A.KRICKETOT,A.VENIPEDE],[a.ALL]:[A.NINCADA,A.WHISMUR,A.FIDOUGH]},2:{[a.DAWN]:[A.TANDEMAUS],[a.DAY]:[A.TANDEMAUS],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ABRA,A.SURSKIT,A.ROOKIDEE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.EEVEE,A.RALTS]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DITTO]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.PLAINS]:{0:{[a.DAWN]:[{1:[A.SENTRET],15:[A.FURRET]},{1:[A.YUNGOOS],30:[A.GUMSHOOS]},{1:[A.SKWOVET],24:[A.GREEDENT]}],[a.DAY]:[{1:[A.SENTRET],15:[A.FURRET]},{1:[A.YUNGOOS],30:[A.GUMSHOOS]},{1:[A.SKWOVET],24:[A.GREEDENT]}],[a.DUSK]:[{1:[A.MEOWTH],28:[A.PERSIAN]},{1:[A.POOCHYENA],18:[A.MIGHTYENA]}],[a.NIGHT]:[{1:[A.ZUBAT],22:[A.GOLBAT]},{1:[A.MEOWTH],28:[A.PERSIAN]},{1:[A.POOCHYENA],18:[A.MIGHTYENA]}],[a.ALL]:[{1:[A.ZIGZAGOON],20:[A.LINOONE]},{1:[A.BIDOOF],15:[A.BIBAREL]},{1:[A.LECHONK],18:[A.OINKOLOGNE]}]},1:{[a.DAWN]:[{1:[A.DODUO],31:[A.DODRIO]},{1:[A.POOCHYENA],18:[A.MIGHTYENA]},{1:[A.STARLY],14:[A.STARAVIA],34:[A.STARAPTOR]},{1:[A.PIDOVE],21:[A.TRANQUILL],32:[A.UNFEZANT]},{1:[A.PAWMI],18:[A.PAWMO],32:[A.PAWMOT]}],[a.DAY]:[{1:[A.DODUO],31:[A.DODRIO]},{1:[A.POOCHYENA],18:[A.MIGHTYENA]},{1:[A.STARLY],14:[A.STARAVIA],34:[A.STARAPTOR]},{1:[A.PIDOVE],21:[A.TRANQUILL],32:[A.UNFEZANT]},{1:[A.ROCKRUFF],25:[A.LYCANROC]},{1:[A.PAWMI],18:[A.PAWMO],32:[A.PAWMOT]}],[a.DUSK]:[{1:[A.MANKEY],28:[A.PRIMEAPE],75:[A.ANNIHILAPE]}],[a.NIGHT]:[{1:[A.MANKEY],28:[A.PRIMEAPE],75:[A.ANNIHILAPE]}],[a.ALL]:[{1:[A.PIDGEY],18:[A.PIDGEOTTO],36:[A.PIDGEOT]},{1:[A.SPEAROW],20:[A.FEAROW]},A.PIKACHU,{1:[A.FLETCHLING],17:[A.FLETCHINDER],35:[A.TALONFLAME]}]},2:{[a.DAWN]:[A.PALDEA_TAUROS],[a.DAY]:[A.PALDEA_TAUROS],[a.DUSK]:[{1:[A.SHINX],15:[A.LUXIO],30:[A.LUXRAY]}],[a.NIGHT]:[{1:[A.SHINX],15:[A.LUXIO],30:[A.LUXRAY]}],[a.ALL]:[{1:[A.ABRA],16:[A.KADABRA]},{1:[A.BUNEARY],20:[A.LOPUNNY]},{1:[A.ROOKIDEE],18:[A.CORVISQUIRE],38:[A.CORVIKNIGHT]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.FARFETCHD,A.LICKITUNG,A.CHANSEY,A.EEVEE,A.SNORLAX,{1:[A.DUNSPARCE],62:[A.DUDUNSPARCE]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DITTO,A.LATIAS,A.LATIOS]},5:{[a.DAWN]:[A.DODRIO,A.FURRET,A.GUMSHOOS,A.GREEDENT],[a.DAY]:[A.DODRIO,A.FURRET,A.GUMSHOOS,A.GREEDENT],[a.DUSK]:[A.PERSIAN,A.MIGHTYENA],[a.NIGHT]:[A.PERSIAN,A.MIGHTYENA],[a.ALL]:[A.LINOONE,A.BIBAREL,A.LOPUNNY,A.OINKOLOGNE]},6:{[a.DAWN]:[A.PAWMOT,A.PALDEA_TAUROS],[a.DAY]:[A.LYCANROC,A.PAWMOT,A.PALDEA_TAUROS],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.FARFETCHD,A.SNORLAX,A.LICKILICKY,A.DUDUNSPARCE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.LATIAS,A.LATIOS]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.GRASS]:{0:{[a.DAWN]:[{1:[A.HOPPIP],18:[A.SKIPLOOM]},A.SUNKERN,A.COTTONEE,A.PETILIL],[a.DAY]:[{1:[A.HOPPIP],18:[A.SKIPLOOM]},A.SUNKERN,A.COTTONEE,A.PETILIL],[a.DUSK]:[{1:[A.SEEDOT],14:[A.NUZLEAF]},{1:[A.SHROOMISH],23:[A.BRELOOM]}],[a.NIGHT]:[{1:[A.SEEDOT],14:[A.NUZLEAF]},{1:[A.SHROOMISH],23:[A.BRELOOM]}],[a.ALL]:[]},1:{[a.DAWN]:[{1:[A.COMBEE],21:[A.VESPIQUEN]},{1:[A.CHERUBI],25:[A.CHERRIM]}],[a.DAY]:[{1:[A.COMBEE],21:[A.VESPIQUEN]},{1:[A.CHERUBI],25:[A.CHERRIM]}],[a.DUSK]:[{1:[A.FOONGUS],39:[A.AMOONGUSS]}],[a.NIGHT]:[{1:[A.FOONGUS],39:[A.AMOONGUSS]}],[a.ALL]:[]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.BULBASAUR],16:[A.IVYSAUR],32:[A.VENUSAUR]},A.GROWLITHE,{1:[A.TURTWIG],18:[A.GROTLE],32:[A.TORTERRA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SUDOWOODO]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.VIRIZION]},5:{[a.DAWN]:[A.JUMPLUFF,A.SUNFLORA,A.WHIMSICOTT],[a.DAY]:[A.JUMPLUFF,A.SUNFLORA,A.WHIMSICOTT],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.VENUSAUR,A.SUDOWOODO,A.TORTERRA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.VIRIZION]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.TALL_GRASS]:{0:{[a.DAWN]:[{1:[A.BOUNSWEET],18:[A.STEENEE],58:[A.TSAREENA]}],[a.DAY]:[{1:[A.NIDORAN_F],16:[A.NIDORINA]},{1:[A.NIDORAN_M],16:[A.NIDORINO]},{1:[A.BOUNSWEET],18:[A.STEENEE],58:[A.TSAREENA]}],[a.DUSK]:[{1:[A.ODDISH],21:[A.GLOOM]},{1:[A.KRICKETOT],10:[A.KRICKETUNE]}],[a.NIGHT]:[{1:[A.ODDISH],21:[A.GLOOM]},{1:[A.KRICKETOT],10:[A.KRICKETUNE]}],[a.ALL]:[{1:[A.NINCADA],20:[A.NINJASK]},{1:[A.FOMANTIS],44:[A.LURANTIS]},{1:[A.NYMBLE],24:[A.LOKIX]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[{1:[A.PARAS],24:[A.PARASECT]},{1:[A.VENONAT],31:[A.VENOMOTH]},{1:[A.SPINARAK],22:[A.ARIADOS]}],[a.ALL]:[A.VULPIX]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.PINSIR,{1:[A.CHIKORITA],16:[A.BAYLEEF],32:[A.MEGANIUM]},{1:[A.GIRAFARIG],62:[A.FARIGIRAF]},A.ZANGOOSE,A.KECLEON,A.TROPIUS]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SCYTHER,A.SHEDINJA,A.ROTOM]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},5:{[a.DAWN]:[A.TSAREENA],[a.DAY]:[A.NIDOQUEEN,A.NIDOKING,A.TSAREENA],[a.DUSK]:[A.VILEPLUME,A.KRICKETUNE],[a.NIGHT]:[A.VILEPLUME,A.KRICKETUNE],[a.ALL]:[A.NINJASK,A.ZANGOOSE,A.KECLEON,A.LURANTIS,A.LOKIX]},6:{[a.DAWN]:[A.BELLOSSOM],[a.DAY]:[A.BELLOSSOM],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.PINSIR,A.MEGANIUM,A.FARIGIRAF]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ROTOM]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.METROPOLIS]:{0:{[a.DAWN]:[{1:[A.YAMPER],25:[A.BOLTUND]}],[a.DAY]:[{1:[A.YAMPER],25:[A.BOLTUND]}],[a.DUSK]:[{1:[A.PATRAT],20:[A.WATCHOG]}],[a.NIGHT]:[{1:[A.HOUNDOUR],24:[A.HOUNDOOM]},{1:[A.PATRAT],20:[A.WATCHOG]}],[a.ALL]:[{1:[A.RATTATA],20:[A.RATICATE]},{1:[A.ZIGZAGOON],20:[A.LINOONE]},{1:[A.LILLIPUP],16:[A.HERDIER],32:[A.STOUTLAND]}]},1:{[a.DAWN]:[{1:[A.PATRAT],20:[A.WATCHOG]},A.INDEEDEE],[a.DAY]:[{1:[A.PATRAT],20:[A.WATCHOG]},A.INDEEDEE],[a.DUSK]:[{1:[A.ESPURR],25:[A.MEOWSTIC]}],[a.NIGHT]:[{1:[A.ESPURR],25:[A.MEOWSTIC]}],[a.ALL]:[A.PIKACHU,{1:[A.GLAMEOW],38:[A.PURUGLY]},A.FURFROU,{1:[A.FIDOUGH],26:[A.DACHSBUN]},A.SQUAWKABILLY]},2:{[a.DAWN]:[{1:[A.TANDEMAUS],25:[A.MAUSHOLD]}],[a.DAY]:[{1:[A.TANDEMAUS],25:[A.MAUSHOLD]}],[a.DUSK]:[A.MORPEKO],[a.NIGHT]:[A.MORPEKO],[a.ALL]:[{1:[A.VAROOM],40:[A.REVAVROOM]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DITTO,A.EEVEE,A.SMEARGLE]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CASTFORM]},5:{[a.DAWN]:[A.BOLTUND],[a.DAY]:[A.BOLTUND],[a.DUSK]:[A.MEOWSTIC],[a.NIGHT]:[A.MEOWSTIC],[a.ALL]:[A.STOUTLAND,A.FURFROU,A.DACHSBUN]},6:{[a.DAWN]:[A.MAUSHOLD],[a.DAY]:[A.MAUSHOLD],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CASTFORM,A.REVAVROOM]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.FOREST]:{0:{[a.DAWN]:[A.BUTTERFREE,{1:[A.BELLSPROUT],21:[A.WEEPINBELL]},{1:[A.COMBEE],21:[A.VESPIQUEN]},A.PETILIL,{1:[A.DEERLING],34:[A.SAWSBUCK]},A.VIVILLON],[a.DAY]:[A.BUTTERFREE,{1:[A.BELLSPROUT],21:[A.WEEPINBELL]},A.BEAUTIFLY,{1:[A.COMBEE],21:[A.VESPIQUEN]},A.PETILIL,{1:[A.DEERLING],34:[A.SAWSBUCK]},A.VIVILLON],[a.DUSK]:[A.BEEDRILL,{1:[A.PINECO],31:[A.FORRETRESS]},{1:[A.SEEDOT],14:[A.NUZLEAF]},{1:[A.SHROOMISH],23:[A.BRELOOM]},{1:[A.VENIPEDE],22:[A.WHIRLIPEDE],30:[A.SCOLIPEDE]}],[a.NIGHT]:[A.BEEDRILL,{1:[A.VENONAT],31:[A.VENOMOTH]},{1:[A.SPINARAK],22:[A.ARIADOS]},{1:[A.PINECO],31:[A.FORRETRESS]},A.DUSTOX,{1:[A.SEEDOT],14:[A.NUZLEAF]},{1:[A.SHROOMISH],23:[A.BRELOOM]},{1:[A.VENIPEDE],22:[A.WHIRLIPEDE],30:[A.SCOLIPEDE]}],[a.ALL]:[{1:[A.TAROUNTULA],15:[A.SPIDOPS]},{1:[A.NYMBLE],24:[A.LOKIX]},{1:[A.SHROODLE],28:[A.GRAFAIAI]}]},1:{[a.DAWN]:[A.ROSELIA,A.MOTHIM,{1:[A.SEWADDLE],20:[A.SWADLOON],30:[A.LEAVANNY]}],[a.DAY]:[A.ROSELIA,A.MOTHIM,{1:[A.SEWADDLE],20:[A.SWADLOON],30:[A.LEAVANNY]}],[a.DUSK]:[{1:[A.SPINARAK],22:[A.ARIADOS]},{1:[A.DOTTLER],30:[A.ORBEETLE]}],[a.NIGHT]:[{1:[A.HOOTHOOT],20:[A.NOCTOWL]},{1:[A.ROCKRUFF],25:[A.LYCANROC]},{1:[A.DOTTLER],30:[A.ORBEETLE]}],[a.ALL]:[{1:[A.EKANS],22:[A.ARBOK]},{1:[A.TEDDIURSA],30:[A.URSARING]},{1:[A.BURMY],20:[A.WORMADAM]},{1:[A.PANSAGE],30:[A.SIMISAGE]}]},2:{[a.DAWN]:[A.EXEGGCUTE,A.STANTLER],[a.DAY]:[A.EXEGGCUTE,A.STANTLER],[a.DUSK]:[A.SCYTHER],[a.NIGHT]:[A.SCYTHER],[a.ALL]:[A.HERACROSS,{1:[A.TREECKO],16:[A.GROVYLE],36:[A.SCEPTILE]},A.TROPIUS,A.KARRABLAST,A.SHELMET,{1:[A.CHESPIN],16:[A.QUILLADIN],36:[A.CHESNAUGHT]},{1:[A.ROWLET],17:[A.DARTRIX],34:[A.DECIDUEYE]},A.SQUAWKABILLY,{1:[A.TOEDSCOOL],30:[A.TOEDSCRUEL]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[A.BLOODMOON_URSALUNA],[a.ALL]:[A.DURANT]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KARTANA,A.WO_CHIEN]},5:{[a.DAWN]:[A.VICTREEBEL,A.MOTHIM,A.VESPIQUEN,A.LILLIGANT,A.SAWSBUCK],[a.DAY]:[A.VICTREEBEL,A.BEAUTIFLY,A.MOTHIM,A.VESPIQUEN,A.LILLIGANT,A.SAWSBUCK],[a.DUSK]:[A.ARIADOS,A.FORRETRESS,A.SHIFTRY,A.BRELOOM,A.SCOLIPEDE,A.ORBEETLE],[a.NIGHT]:[A.VENOMOTH,A.NOCTOWL,A.ARIADOS,A.FORRETRESS,A.DUSTOX,A.SHIFTRY,A.BRELOOM,A.SCOLIPEDE,A.ORBEETLE],[a.ALL]:[A.WORMADAM,A.SIMISAGE,A.SPIDOPS,A.LOKIX,A.GRAFAIAI]},6:{[a.DAWN]:[A.STANTLER],[a.DAY]:[A.STANTLER],[a.DUSK]:[],[a.NIGHT]:[A.LYCANROC,A.BLOODMOON_URSALUNA],[a.ALL]:[A.HERACROSS,A.SCEPTILE,A.ESCAVALIER,A.ACCELGOR,A.DURANT,A.CHESNAUGHT,A.DECIDUEYE,A.TOEDSCRUEL]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KARTANA,A.WO_CHIEN]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CALYREX]}},[s.SEA]:{0:{[a.DAWN]:[{1:[A.SLOWPOKE],37:[A.SLOWBRO]},{1:[A.WINGULL],25:[A.PELIPPER]},A.CRAMORANT,{1:[A.FINIZEN],38:[A.PALAFIN]}],[a.DAY]:[{1:[A.SLOWPOKE],37:[A.SLOWBRO]},{1:[A.WINGULL],25:[A.PELIPPER]},A.CRAMORANT,{1:[A.FINIZEN],38:[A.PALAFIN]}],[a.DUSK]:[{1:[A.INKAY],30:[A.MALAMAR]}],[a.NIGHT]:[{1:[A.FINNEON],31:[A.LUMINEON]},{1:[A.INKAY],30:[A.MALAMAR]}],[a.ALL]:[{1:[A.TENTACOOL],30:[A.TENTACRUEL]},{1:[A.MAGIKARP],20:[A.GYARADOS]},{1:[A.BUIZEL],26:[A.FLOATZEL]}]},1:{[a.DAWN]:[{1:[A.STARYU],30:[A.STARMIE]}],[a.DAY]:[{1:[A.STARYU],30:[A.STARMIE]}],[a.DUSK]:[{1:[A.SLOWPOKE],37:[A.SLOWBRO]},A.SHELLDER,{1:[A.CARVANHA],30:[A.SHARPEDO]}],[a.NIGHT]:[{1:[A.SLOWPOKE],37:[A.SLOWBRO]},A.SHELLDER,{1:[A.CHINCHOU],27:[A.LANTURN]},{1:[A.CARVANHA],30:[A.SHARPEDO]}],[a.ALL]:[{1:[A.POLIWAG],25:[A.POLIWHIRL]},{1:[A.HORSEA],32:[A.SEADRA]},{1:[A.GOLDEEN],33:[A.SEAKING]},{1:[A.WAILMER],40:[A.WAILORD]},{1:[A.PANPOUR],30:[A.SIMIPOUR]},{1:[A.WATTREL],25:[A.KILOWATTREL]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.LAPRAS,{1:[A.PIPLUP],16:[A.PRINPLUP],36:[A.EMPOLEON]},{1:[A.POPPLIO],17:[A.BRIONNE],34:[A.PRIMARINA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KINGDRA,A.ROTOM,{1:[A.TIRTOUGA],37:[A.CARRACOSTA]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},5:{[a.DAWN]:[A.PELIPPER,A.CRAMORANT,A.PALAFIN],[a.DAY]:[A.PELIPPER,A.CRAMORANT,A.PALAFIN],[a.DUSK]:[A.SHARPEDO,A.MALAMAR],[a.NIGHT]:[A.SHARPEDO,A.LUMINEON,A.MALAMAR],[a.ALL]:[A.TENTACRUEL,A.FLOATZEL,A.SIMIPOUR,A.KILOWATTREL]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KINGDRA,A.EMPOLEON,A.PRIMARINA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ROTOM]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.LUGIA]}},[s.SWAMP]:{0:{[a.DAWN]:[{1:[A.WOOPER],20:[A.QUAGSIRE]},{1:[A.LOTAD],14:[A.LOMBRE]}],[a.DAY]:[{1:[A.WOOPER],20:[A.QUAGSIRE]},{1:[A.LOTAD],14:[A.LOMBRE]}],[a.DUSK]:[{1:[A.EKANS],22:[A.ARBOK]},{1:[A.PALDEA_WOOPER],20:[A.CLODSIRE]}],[a.NIGHT]:[{1:[A.EKANS],22:[A.ARBOK]},{1:[A.PALDEA_WOOPER],20:[A.CLODSIRE]}],[a.ALL]:[{1:[A.POLIWAG],25:[A.POLIWHIRL]},{1:[A.GULPIN],26:[A.SWALOT]},{1:[A.SHELLOS],30:[A.GASTRODON]},{1:[A.TYMPOLE],25:[A.PALPITOAD],36:[A.SEISMITOAD]}]},1:{[a.DAWN]:[{1:[A.EKANS],22:[A.ARBOK]}],[a.DAY]:[{1:[A.EKANS],22:[A.ARBOK]}],[a.DUSK]:[{1:[A.CROAGUNK],37:[A.TOXICROAK]}],[a.NIGHT]:[{1:[A.CROAGUNK],37:[A.TOXICROAK]}],[a.ALL]:[{1:[A.PSYDUCK],33:[A.GOLDUCK]},{1:[A.BARBOACH],30:[A.WHISCASH]},{1:[A.SKORUPI],40:[A.DRAPION]},A.STUNFISK,{1:[A.MAREANIE],38:[A.TOXAPEX]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.TOTODILE],18:[A.CROCONAW],30:[A.FERALIGATR]},{1:[A.MUDKIP],16:[A.MARSHTOMP],36:[A.SWAMPERT]}]},3:{[a.DAWN]:[{1:[A.GALAR_SLOWPOKE],40:[A.GALAR_SLOWBRO]},{1:[A.HISUI_SLIGGOO],80:[A.HISUI_GOODRA]}],[a.DAY]:[{1:[A.GALAR_SLOWPOKE],40:[A.GALAR_SLOWBRO]},{1:[A.HISUI_SLIGGOO],80:[A.HISUI_GOODRA]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.POLITOED,A.GALAR_STUNFISK]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.AZELF,A.POIPOLE]},5:{[a.DAWN]:[A.QUAGSIRE,A.LUDICOLO],[a.DAY]:[A.QUAGSIRE,A.LUDICOLO],[a.DUSK]:[A.ARBOK,A.CLODSIRE],[a.NIGHT]:[A.ARBOK,A.CLODSIRE],[a.ALL]:[A.POLIWRATH,A.SWALOT,A.WHISCASH,A.GASTRODON,A.SEISMITOAD,A.STUNFISK,A.TOXAPEX]},6:{[a.DAWN]:[A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.HISUI_GOODRA],[a.DAY]:[A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.HISUI_GOODRA],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.FERALIGATR,A.POLITOED,A.SWAMPERT,A.GALAR_STUNFISK]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.AZELF,A.NAGANADEL]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.BEACH]:{0:{[a.DAWN]:[{1:[A.STARYU],30:[A.STARMIE]}],[a.DAY]:[{1:[A.STARYU],30:[A.STARMIE]}],[a.DUSK]:[A.SHELLDER],[a.NIGHT]:[A.SHELLDER],[a.ALL]:[{1:[A.KRABBY],28:[A.KINGLER]},{1:[A.CORPHISH],30:[A.CRAWDAUNT]},{1:[A.DWEBBLE],34:[A.CRUSTLE]},{1:[A.BINACLE],39:[A.BARBARACLE]},{1:[A.MAREANIE],38:[A.TOXAPEX]},{1:[A.WIGLETT],26:[A.WUGTRIO]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.BURMY],20:[A.WORMADAM]},{1:[A.CLAUNCHER],37:[A.CLAWITZER]},{1:[A.SANDYGAST],42:[A.PALOSSAND]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.QUAXLY],16:[A.QUAXWELL],36:[A.QUAQUAVAL]},A.TATSUGIRI]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.TIRTOUGA],37:[A.CARRACOSTA]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CRESSELIA,A.KELDEO,A.TAPU_FINI]},5:{[a.DAWN]:[A.STARMIE],[a.DAY]:[A.STARMIE],[a.DUSK]:[A.CLOYSTER],[a.NIGHT]:[A.CLOYSTER],[a.ALL]:[A.KINGLER,A.CRAWDAUNT,A.WORMADAM,A.CRUSTLE,A.BARBARACLE,A.CLAWITZER,A.TOXAPEX,A.PALOSSAND]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CARRACOSTA,A.QUAQUAVAL]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CRESSELIA,A.KELDEO,A.TAPU_FINI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.LAKE]:{0:{[a.DAWN]:[{1:[A.LOTAD],14:[A.LOMBRE]},{1:[A.DUCKLETT],35:[A.SWANNA]}],[a.DAY]:[{1:[A.LOTAD],14:[A.LOMBRE]},{1:[A.DUCKLETT],35:[A.SWANNA]}],[a.DUSK]:[{1:[A.MARILL],18:[A.AZUMARILL]}],[a.NIGHT]:[{1:[A.MARILL],18:[A.AZUMARILL]}],[a.ALL]:[{1:[A.PSYDUCK],33:[A.GOLDUCK]},{1:[A.GOLDEEN],33:[A.SEAKING]},{1:[A.MAGIKARP],20:[A.GYARADOS]},{1:[A.CHEWTLE],22:[A.DREDNAW]}]},1:{[a.DAWN]:[{1:[A.DEWPIDER],22:[A.ARAQUANID]}],[a.DAY]:[{1:[A.DEWPIDER],22:[A.ARAQUANID]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.SLOWPOKE],37:[A.SLOWBRO]},{1:[A.WOOPER],20:[A.QUAGSIRE]},{1:[A.SURSKIT],22:[A.MASQUERAIN]},A.WISHIWASHI,A.FLAMIGO]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.SQUIRTLE],16:[A.WARTORTLE],36:[A.BLASTOISE]},{1:[A.OSHAWOTT],17:[A.DEWOTT],36:[A.SAMUROTT]},{1:[A.FROAKIE],16:[A.FROGADIER],36:[A.GRENINJA]},{1:[A.SOBBLE],16:[A.DRIZZILE],35:[A.INTELEON]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.VAPOREON,A.SLOWKING]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SUICUNE,A.MESPRIT]},5:{[a.DAWN]:[A.SWANNA,A.ARAQUANID],[a.DAY]:[A.SWANNA,A.ARAQUANID],[a.DUSK]:[A.AZUMARILL],[a.NIGHT]:[A.AZUMARILL],[a.ALL]:[A.GOLDUCK,A.SLOWBRO,A.SEAKING,A.GYARADOS,A.MASQUERAIN,A.WISHIWASHI,A.DREDNAW]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.BLASTOISE,A.VAPOREON,A.SLOWKING,A.SAMUROTT,A.GRENINJA,A.INTELEON]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SUICUNE,A.MESPRIT]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.SEABED]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.CHINCHOU],27:[A.LANTURN]},A.REMORAID,A.CLAMPERL,A.BASCULIN,{1:[A.FRILLISH],40:[A.JELLICENT]},{1:[A.ARROKUDA],26:[A.BARRASKEWDA]},A.VELUZA]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.TENTACOOL],30:[A.TENTACRUEL]},A.SHELLDER,{1:[A.WAILMER],40:[A.WAILORD]},A.LUVDISC,{1:[A.SHELLOS],30:[A.GASTRODON]},{1:[A.SKRELP],48:[A.DRAGALGE]},A.PINCURCHIN,A.DONDOZO]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.QWILFISH,A.CORSOLA,A.OCTILLERY,{1:[A.MANTYKE],52:[A.MANTINE]},A.ALOMOMOLA,{1:[A.TYNAMO],39:[A.EELEKTRIK]},A.DHELMISE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.OMANYTE],40:[A.OMASTAR]},{1:[A.KABUTO],40:[A.KABUTOPS]},A.RELICANTH,A.PYUKUMUKU,{1:[A.GALAR_CORSOLA],38:[A.CURSOLA]},A.ARCTOVISH,A.HISUI_QWILFISH]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.FEEBAS,A.NIHILEGO]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.LANTURN,A.QWILFISH,A.CORSOLA,A.OCTILLERY,A.MANTINE,A.WAILORD,A.HUNTAIL,A.GOREBYSS,A.LUVDISC,A.JELLICENT,A.ALOMOMOLA,A.DRAGALGE,A.BARRASKEWDA,A.DONDOZO]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.OMASTAR,A.KABUTOPS,A.RELICANTH,A.EELEKTROSS,A.PYUKUMUKU,A.DHELMISE,A.CURSOLA,A.ARCTOVISH,A.BASCULEGION,A.OVERQWIL]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MILOTIC,A.NIHILEGO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KYOGRE]}},[s.MOUNTAIN]:{0:{[a.DAWN]:[{1:[A.TAILLOW],22:[A.SWELLOW]},{1:[A.SWABLU],35:[A.ALTARIA]},{1:[A.STARLY],14:[A.STARAVIA],34:[A.STARAPTOR]},{1:[A.PIDOVE],21:[A.TRANQUILL],32:[A.UNFEZANT]},{1:[A.FLETCHLING],17:[A.FLETCHINDER],35:[A.TALONFLAME]}],[a.DAY]:[{1:[A.TAILLOW],22:[A.SWELLOW]},{1:[A.SWABLU],35:[A.ALTARIA]},{1:[A.STARLY],14:[A.STARAVIA],34:[A.STARAPTOR]},{1:[A.PIDOVE],21:[A.TRANQUILL],32:[A.UNFEZANT]},{1:[A.FLETCHLING],17:[A.FLETCHINDER],35:[A.TALONFLAME]}],[a.DUSK]:[{1:[A.RHYHORN],42:[A.RHYDON]},{1:[A.ARON],32:[A.LAIRON],42:[A.AGGRON]},{1:[A.ROGGENROLA],25:[A.BOLDORE]}],[a.NIGHT]:[{1:[A.RHYHORN],42:[A.RHYDON]},{1:[A.ARON],32:[A.LAIRON],42:[A.AGGRON]},{1:[A.ROGGENROLA],25:[A.BOLDORE]}],[a.ALL]:[{1:[A.PIDGEY],18:[A.PIDGEOTTO],36:[A.PIDGEOT]},{1:[A.SPEAROW],20:[A.FEAROW]},{1:[A.SKIDDO],32:[A.GOGOAT]}]},1:{[a.DAWN]:[{1:[A.RHYHORN],42:[A.RHYDON]},{1:[A.ARON],32:[A.LAIRON],42:[A.AGGRON]},{1:[A.ROGGENROLA],25:[A.BOLDORE]},{1:[A.RUFFLET],54:[A.BRAVIARY]},{1:[A.ROOKIDEE],18:[A.CORVISQUIRE],38:[A.CORVIKNIGHT]},{1:[A.FLITTLE],35:[A.ESPATHRA]},A.BOMBIRDIER],[a.DAY]:[{1:[A.RHYHORN],42:[A.RHYDON]},{1:[A.ARON],32:[A.LAIRON],42:[A.AGGRON]},{1:[A.ROGGENROLA],25:[A.BOLDORE]},{1:[A.RUFFLET],54:[A.BRAVIARY]},{1:[A.ROOKIDEE],18:[A.CORVISQUIRE],38:[A.CORVIKNIGHT]},{1:[A.FLITTLE],35:[A.ESPATHRA]},A.BOMBIRDIER],[a.DUSK]:[{1:[A.VULLABY],54:[A.MANDIBUZZ]}],[a.NIGHT]:[{1:[A.VULLABY],54:[A.MANDIBUZZ]}],[a.ALL]:[{1:[A.MACHOP],28:[A.MACHOKE]},{1:[A.GEODUDE],25:[A.GRAVELER]},{1:[A.NATU],25:[A.XATU]},{1:[A.SLUGMA],38:[A.MAGCARGO]},{1:[A.NACLI],24:[A.NACLSTACK],38:[A.GARGANACL]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[A.MURKROW],[a.ALL]:[A.SKARMORY,{1:[A.TORCHIC],16:[A.COMBUSKEN],36:[A.BLAZIKEN]},{1:[A.SPOINK],32:[A.GRUMPIG]},A.HAWLUCHA,A.KLAWF]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.LARVITAR],30:[A.PUPITAR]},{1:[A.CRANIDOS],30:[A.RAMPARDOS]},{1:[A.SHIELDON],30:[A.BASTIODON]},{1:[A.GIBLE],24:[A.GABITE],48:[A.GARCHOMP]},A.ROTOM,A.ARCHEOPS,{1:[A.AXEW],38:[A.FRAXURE]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TORNADUS,A.TING_LU,A.OGERPON]},5:{[a.DAWN]:[A.SWELLOW,A.ALTARIA,A.STARAPTOR,A.UNFEZANT,A.BRAVIARY,A.TALONFLAME,A.CORVIKNIGHT,A.ESPATHRA],[a.DAY]:[A.SWELLOW,A.ALTARIA,A.STARAPTOR,A.UNFEZANT,A.BRAVIARY,A.TALONFLAME,A.CORVIKNIGHT,A.ESPATHRA],[a.DUSK]:[A.MANDIBUZZ],[a.NIGHT]:[A.MANDIBUZZ],[a.ALL]:[A.PIDGEOT,A.FEAROW,A.SKARMORY,A.AGGRON,A.GOGOAT,A.GARGANACL]},6:{[a.DAWN]:[A.HISUI_BRAVIARY],[a.DAY]:[A.HISUI_BRAVIARY],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.BLAZIKEN,A.RAMPARDOS,A.BASTIODON,A.HAWLUCHA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ROTOM,A.TORNADUS,A.TING_LU,A.OGERPON]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HO_OH]}},[s.BADLANDS]:{0:{[a.DAWN]:[{1:[A.PHANPY],25:[A.DONPHAN]}],[a.DAY]:[{1:[A.PHANPY],25:[A.DONPHAN]}],[a.DUSK]:[],[a.NIGHT]:[{1:[A.CUBONE],28:[A.MAROWAK]}],[a.ALL]:[{1:[A.DIGLETT],26:[A.DUGTRIO]},{1:[A.GEODUDE],25:[A.GRAVELER]},{1:[A.RHYHORN],42:[A.RHYDON]},{1:[A.DRILBUR],31:[A.EXCADRILL]},{1:[A.MUDBRAY],30:[A.MUDSDALE]}]},1:{[a.DAWN]:[{1:[A.SIZZLIPEDE],28:[A.CENTISKORCH]},{1:[A.CAPSAKID],30:[A.SCOVILLAIN]}],[a.DAY]:[{1:[A.SIZZLIPEDE],28:[A.CENTISKORCH]},{1:[A.CAPSAKID],30:[A.SCOVILLAIN]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.SANDSHREW],22:[A.SANDSLASH]},{1:[A.NUMEL],33:[A.CAMERUPT]},{1:[A.ROGGENROLA],25:[A.BOLDORE]},{1:[A.CUFANT],34:[A.COPPERAJAH]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ONIX,A.GLIGAR,{1:[A.POLTCHAGEIST],30:[A.SINISTCHA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.LANDORUS,A.OKIDOGI]},5:{[a.DAWN]:[A.DONPHAN,A.CENTISKORCH,A.SCOVILLAIN],[a.DAY]:[A.DONPHAN,A.CENTISKORCH,A.SCOVILLAIN],[a.DUSK]:[],[a.NIGHT]:[A.MAROWAK],[a.ALL]:[A.DUGTRIO,A.GOLEM,A.RHYPERIOR,A.GLISCOR,A.EXCADRILL,A.MUDSDALE,A.COPPERAJAH]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.STEELIX,A.SINISTCHA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.LANDORUS,A.OKIDOGI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GROUDON]}},[s.CAVE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.ZUBAT],22:[A.GOLBAT]},{1:[A.PARAS],24:[A.PARASECT]},{1:[A.TEDDIURSA],30:[A.URSARING]},{1:[A.WHISMUR],20:[A.LOUDRED],40:[A.EXPLOUD]},{1:[A.ROGGENROLA],25:[A.BOLDORE]},{1:[A.WOOBAT],20:[A.SWOOBAT]},{1:[A.BUNNELBY],20:[A.DIGGERSBY]},{1:[A.NACLI],24:[A.NACLSTACK],38:[A.GARGANACL]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[A.ROCKRUFF],25:[A.LYCANROC]}],[a.NIGHT]:[],[a.ALL]:[{1:[A.GEODUDE],25:[A.GRAVELER]},{1:[A.MAKUHITA],24:[A.HARIYAMA]},A.NOSEPASS,{1:[A.NOIBAT],48:[A.NOIVERN]},{1:[A.WIMPOD],30:[A.GOLISOPOD]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ONIX,{1:[A.FERROSEED],40:[A.FERROTHORN]},A.CARBINK,{1:[A.GLIMMET],35:[A.GLIMMORA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SHUCKLE]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.UXIE]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.PARASECT,A.ONIX,A.CROBAT,A.URSARING,A.EXPLOUD,A.PROBOPASS,A.GIGALITH,A.SWOOBAT,A.DIGGERSBY,A.NOIVERN,A.GOLISOPOD,A.GARGANACL]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[A.LYCANROC],[a.NIGHT]:[],[a.ALL]:[A.SHUCKLE,A.FERROTHORN,A.GLIMMORA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.UXIE]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TERAPAGOS]}},[s.DESERT]:{0:{[a.DAWN]:[A.TRAPINCH,{1:[A.HIPPOPOTAS],34:[A.HIPPOWDON]},{1:[A.RELLOR],29:[A.RABSCA]}],[a.DAY]:[A.TRAPINCH,{1:[A.HIPPOPOTAS],34:[A.HIPPOWDON]},{1:[A.RELLOR],29:[A.RABSCA]}],[a.DUSK]:[{1:[A.CACNEA],32:[A.CACTURNE]},{1:[A.SANDILE],29:[A.KROKOROK],40:[A.KROOKODILE]}],[a.NIGHT]:[{1:[A.CACNEA],32:[A.CACTURNE]},{1:[A.SANDILE],29:[A.KROKOROK],40:[A.KROOKODILE]}],[a.ALL]:[{1:[A.SANDSHREW],22:[A.SANDSLASH]},{1:[A.SKORUPI],40:[A.DRAPION]},{1:[A.SILICOBRA],36:[A.SANDACONDA]}]},1:{[a.DAWN]:[{1:[A.SANDILE],29:[A.KROKOROK],40:[A.KROOKODILE]},A.HELIOPTILE],[a.DAY]:[{1:[A.SANDILE],29:[A.KROKOROK],40:[A.KROOKODILE]},A.HELIOPTILE],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MARACTUS,{1:[A.BRAMBLIN],30:[A.BRAMBLEGHAST]},A.ORTHWORM]},2:{[a.DAWN]:[{1:[A.VIBRAVA],45:[A.FLYGON]}],[a.DAY]:[{1:[A.VIBRAVA],45:[A.FLYGON]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.DARUMAKA],35:[A.DARMANITAN]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.LILEEP],40:[A.CRADILY]},{1:[A.ANORITH],40:[A.ARMALDO]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.REGIROCK,A.TAPU_BULU,A.PHEROMOSA]},5:{[a.DAWN]:[A.HIPPOWDON,A.HELIOLISK,A.RABSCA],[a.DAY]:[A.HIPPOWDON,A.HELIOLISK,A.RABSCA],[a.DUSK]:[A.CACTURNE,A.KROOKODILE],[a.NIGHT]:[A.CACTURNE,A.KROOKODILE],[a.ALL]:[A.SANDSLASH,A.DRAPION,A.DARMANITAN,A.MARACTUS,A.SANDACONDA,A.BRAMBLEGHAST]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CRADILY,A.ARMALDO]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.REGIROCK,A.TAPU_BULU,A.PHEROMOSA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.ICE_CAVE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.SEEL],34:[A.DEWGONG]},{1:[A.SWINUB],33:[A.PILOSWINE]},{1:[A.SNOVER],40:[A.ABOMASNOW]},{1:[A.VANILLITE],35:[A.VANILLISH],47:[A.VANILLUXE]},{1:[A.CUBCHOO],37:[A.BEARTIC]},{1:[A.BERGMITE],37:[A.AVALUGG]},A.CRABRAWLER,{1:[A.SNOM],20:[A.FROSMOTH]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SNEASEL,{1:[A.SNORUNT],42:[A.GLALIE]},{1:[A.SPHEAL],32:[A.SEALEO],44:[A.WALREIN]},A.EISCUE,{1:[A.CETODDLE],30:[A.CETITAN]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.JYNX,A.LAPRAS,A.FROSLASS,A.CRYOGONAL]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DELIBIRD,A.ROTOM,{1:[A.AMAURA],59:[A.AURORUS]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ARTICUNO,A.REGICE]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DEWGONG,A.GLALIE,A.WALREIN,A.WEAVILE,A.MAMOSWINE,A.FROSLASS,A.VANILLUXE,A.BEARTIC,A.CRYOGONAL,A.AVALUGG,A.CRABOMINABLE,A.CETITAN]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.JYNX,A.LAPRAS,A.GLACEON,A.AURORUS]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ARTICUNO,A.REGICE,A.ROTOM]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KYUREM]}},[s.MEADOW]:{0:{[a.DAWN]:[{1:[A.LEDYBA],18:[A.LEDIAN]},A.ROSELIA,A.COTTONEE,A.MINCCINO],[a.DAY]:[A.ROSELIA,A.COTTONEE,A.MINCCINO],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.BLITZLE],27:[A.ZEBSTRIKA]},{1:[A.FLABEBE],19:[A.FLOETTE]},{1:[A.CUTIEFLY],25:[A.RIBOMBEE]},{1:[A.GOSSIFLEUR],20:[A.ELDEGOSS]},{1:[A.WOOLOO],24:[A.DUBWOOL]}]},1:{[a.DAWN]:[{1:[A.PONYTA],40:[A.RAPIDASH]},{1:[A.SNUBBULL],23:[A.GRANBULL]},{1:[A.SKITTY],30:[A.DELCATTY]},A.BOUFFALANT,{1:[A.SMOLIV],25:[A.DOLLIV],35:[A.ARBOLIVA]}],[a.DAY]:[{1:[A.PONYTA],40:[A.RAPIDASH]},{1:[A.SNUBBULL],23:[A.GRANBULL]},{1:[A.SKITTY],30:[A.DELCATTY]},A.BOUFFALANT,{1:[A.SMOLIV],25:[A.DOLLIV],35:[A.ARBOLIVA]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.JIGGLYPUFF],30:[A.WIGGLYTUFF]},{1:[A.MAREEP],15:[A.FLAAFFY],30:[A.AMPHAROS]},{1:[A.RALTS],20:[A.KIRLIA],30:[A.GARDEVOIR]},{1:[A.GLAMEOW],38:[A.PURUGLY]},A.ORICORIO]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[A.VOLBEAT,A.ILLUMISE],[a.ALL]:[A.TAUROS,A.EEVEE,A.MILTANK,A.SPINDA,{1:[A.APPLIN],30:[A.DIPPLIN]},{1:[A.SPRIGATITO],16:[A.FLORAGATO],36:[A.MEOWSCARADA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CHANSEY,A.SYLVEON]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MELOETTA]},5:{[a.DAWN]:[A.LEDIAN,A.GRANBULL,A.DELCATTY,A.ROSERADE,A.CINCCINO,A.BOUFFALANT,A.ARBOLIVA],[a.DAY]:[A.GRANBULL,A.DELCATTY,A.ROSERADE,A.CINCCINO,A.BOUFFALANT,A.ARBOLIVA],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TAUROS,A.MILTANK,A.GARDEVOIR,A.PURUGLY,A.ZEBSTRIKA,A.FLORGES,A.RIBOMBEE,A.DUBWOOL]},6:{[a.DAWN]:[A.HISUI_LILLIGANT],[a.DAY]:[A.HISUI_LILLIGANT],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.BLISSEY,A.SYLVEON,A.FLAPPLE,A.APPLETUN,A.MEOWSCARADA,A.HYDRAPPLE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MELOETTA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SHAYMIN]}},[s.POWER_PLANT]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.PIKACHU,{1:[A.MAGNEMITE],30:[A.MAGNETON]},{1:[A.VOLTORB],30:[A.ELECTRODE]},{1:[A.ELECTRIKE],26:[A.MANECTRIC]},{1:[A.SHINX],15:[A.LUXIO],30:[A.LUXRAY]},A.DEDENNE,{1:[A.GRUBBIN],20:[A.CHARJABUG]},{1:[A.PAWMI],18:[A.PAWMO],32:[A.PAWMOT]},{1:[A.TADBULB],30:[A.BELLIBOLT]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ELECTABUZZ,A.PLUSLE,A.MINUN,A.PACHIRISU,A.EMOLGA,A.TOGEDEMARU]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.MAREEP],15:[A.FLAAFFY]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.JOLTEON,A.HISUI_VOLTORB]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.RAIKOU,A.THUNDURUS,A.XURKITREE,A.ZERAORA,A.REGIELEKI]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.RAICHU,A.MANECTRIC,A.LUXRAY,A.MAGNEZONE,A.ELECTIVIRE,A.DEDENNE,A.VIKAVOLT,A.TOGEDEMARU,A.PAWMOT,A.BELLIBOLT]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.JOLTEON,A.AMPHAROS,A.HISUI_ELECTRODE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ZAPDOS,A.RAIKOU,A.THUNDURUS,A.XURKITREE,A.ZERAORA,A.REGIELEKI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ZEKROM]}},[s.VOLCANO]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.VULPIX,A.GROWLITHE,{1:[A.PONYTA],40:[A.RAPIDASH]},{1:[A.SLUGMA],38:[A.MAGCARGO]},{1:[A.NUMEL],33:[A.CAMERUPT]},{1:[A.SALANDIT],33:[A.SALAZZLE]},{1:[A.ROLYCOLY],18:[A.CARKOL],34:[A.COALOSSAL]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MAGMAR,A.TORKOAL,{1:[A.PANSEAR],30:[A.SIMISEAR]},A.HEATMOR,A.TURTONATOR]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.CHARMANDER],16:[A.CHARMELEON],36:[A.CHARIZARD]},{1:[A.CYNDAQUIL],14:[A.QUILAVA],36:[A.TYPHLOSION]},{1:[A.CHIMCHAR],14:[A.MONFERNO],36:[A.INFERNAPE]},{1:[A.TEPIG],17:[A.PIGNITE],36:[A.EMBOAR]},{1:[A.FENNEKIN],16:[A.BRAIXEN],36:[A.DELPHOX]},{1:[A.LITTEN],17:[A.TORRACAT],34:[A.INCINEROAR]},{1:[A.SCORBUNNY],16:[A.RABOOT],35:[A.CINDERACE]},{1:[A.CHARCADET],30:[A.ARMAROUGE]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.FLAREON,A.ROTOM,{1:[A.LARVESTA],59:[A.VOLCARONA]},A.HISUI_GROWLITHE]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ENTEI,A.HEATRAN,A.VOLCANION,A.CHI_YU]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.NINETALES,A.ARCANINE,A.RAPIDASH,A.MAGCARGO,A.CAMERUPT,A.TORKOAL,A.MAGMORTAR,A.SIMISEAR,A.HEATMOR,A.SALAZZLE,A.TURTONATOR,A.COALOSSAL]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CHARIZARD,A.FLAREON,A.TYPHLOSION,A.INFERNAPE,A.EMBOAR,A.VOLCARONA,A.DELPHOX,A.INCINEROAR,A.CINDERACE,A.ARMAROUGE,A.HISUI_ARCANINE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MOLTRES,A.ENTEI,A.ROTOM,A.HEATRAN,A.VOLCANION,A.CHI_YU]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.RESHIRAM]}},[s.GRAVEYARD]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.GASTLY],25:[A.HAUNTER]},{1:[A.SHUPPET],37:[A.BANETTE]},{1:[A.DUSKULL],37:[A.DUSCLOPS]},{1:[A.DRIFLOON],28:[A.DRIFBLIM]},{1:[A.LITWICK],41:[A.LAMPENT]},A.PHANTUMP,A.PUMPKABOO,{1:[A.GREAVARD],60:[A.HOUNDSTONE]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.CUBONE],28:[A.MAROWAK]},{1:[A.YAMASK],34:[A.COFAGRIGUS]},{1:[A.SINISTEA],30:[A.POLTEAGEIST]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MISDREAVUS,A.MIMIKYU,{1:[A.FUECOCO],16:[A.CROCALOR],36:[A.SKELEDIRGE]},A.CERULEDGE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SPIRITOMB]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MARSHADOW,A.SPECTRIER]},5:{[a.DAWN]:[A.MAROWAK],[a.DAY]:[A.MAROWAK],[a.DUSK]:[A.MAROWAK],[a.NIGHT]:[],[a.ALL]:[A.GENGAR,A.BANETTE,A.DRIFBLIM,A.MISMAGIUS,A.DUSKNOIR,A.CHANDELURE,A.TREVENANT,A.GOURGEIST,A.MIMIKYU,A.POLTEAGEIST,A.HOUNDSTONE]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.SKELEDIRGE,A.CERULEDGE,A.HISUI_TYPHLOSION]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MARSHADOW,A.SPECTRIER]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GIRATINA]}},[s.DOJO]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.MANKEY],28:[A.PRIMEAPE],75:[A.ANNIHILAPE]},{1:[A.MAKUHITA],24:[A.HARIYAMA]},{1:[A.MEDITITE],37:[A.MEDICHAM]},{1:[A.STUFFUL],27:[A.BEWEAR]},{1:[A.CLOBBOPUS],55:[A.GRAPPLOCT]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.CROAGUNK],37:[A.TOXICROAK]},{1:[A.SCRAGGY],39:[A.SCRAFTY]},{1:[A.MIENFOO],50:[A.MIENSHAO]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HITMONLEE,A.HITMONCHAN,A.LUCARIO,A.THROH,A.SAWK,{1:[A.PANCHAM],52:[A.PANGORO]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HITMONTOP,A.GALLADE,A.GALAR_FARFETCHD]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TERRAKION,A.KUBFU,A.GALAR_ZAPDOS]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HITMONLEE,A.HITMONCHAN,A.HARIYAMA,A.MEDICHAM,A.LUCARIO,A.TOXICROAK,A.THROH,A.SAWK,A.SCRAFTY,A.MIENSHAO,A.BEWEAR,A.GRAPPLOCT,A.ANNIHILAPE]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HITMONTOP,A.GALLADE,A.PANGORO,A.SIRFETCHD,A.HISUI_DECIDUEYE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TERRAKION,A.URSHIFU]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ZAMAZENTA,A.GALAR_ZAPDOS]}},[s.FACTORY]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.MACHOP],28:[A.MACHOKE]},{1:[A.MAGNEMITE],30:[A.MAGNETON]},{1:[A.VOLTORB],30:[A.ELECTRODE]},{1:[A.TIMBURR],25:[A.GURDURR]},{1:[A.KLINK],38:[A.KLANG],49:[A.KLINKLANG]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.BRONZOR],33:[A.BRONZONG]},A.KLEFKI]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.PORYGON],30:[A.PORYGON2]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.BELDUM],20:[A.METANG],45:[A.METAGROSS]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GENESECT,A.MAGEARNA]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KLINKLANG,A.KLEFKI]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GENESECT,A.MAGEARNA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.RUINS]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.DROWZEE],26:[A.HYPNO]},{1:[A.NATU],25:[A.XATU]},A.UNOWN,{1:[A.SPOINK],32:[A.GRUMPIG]},{1:[A.BALTOY],36:[A.CLAYDOL]},{1:[A.ELGYEM],42:[A.BEHEEYEM]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.ABRA],16:[A.KADABRA]},A.SIGILYPH,{1:[A.TINKATINK],24:[A.TINKATUFF],38:[A.TINKATON]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MR_MIME,A.WOBBUFFET,{1:[A.GOTHITA],32:[A.GOTHORITA],41:[A.GOTHITELLE]},A.STONJOURNER]},3:{[a.DAWN]:[],[a.DAY]:[A.ESPEON],[a.DUSK]:[{1:[A.GALAR_YAMASK],34:[A.RUNERIGUS]}],[a.NIGHT]:[{1:[A.GALAR_YAMASK],34:[A.RUNERIGUS]}],[a.ALL]:[{1:[A.ARCHEN],37:[A.ARCHEOPS]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.REGISTEEL,A.FEZANDIPITI]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ALAKAZAM,A.HYPNO,A.XATU,A.GRUMPIG,A.CLAYDOL,A.SIGILYPH,A.GOTHITELLE,A.BEHEEYEM,A.TINKATON]},6:{[a.DAWN]:[],[a.DAY]:[A.ESPEON],[a.DUSK]:[A.RUNERIGUS],[a.NIGHT]:[A.RUNERIGUS],[a.ALL]:[A.MR_MIME,A.WOBBUFFET,A.ARCHEOPS]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.REGISTEEL,A.FEZANDIPITI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KORAIDON]}},[s.WASTELAND]:{0:{[a.DAWN]:[{1:[A.BAGON],30:[A.SHELGON],50:[A.SALAMENCE]},{1:[A.GOOMY],40:[A.SLIGGOO],80:[A.GOODRA]},{1:[A.JANGMO_O],35:[A.HAKAMO_O],45:[A.KOMMO_O]}],[a.DAY]:[{1:[A.BAGON],30:[A.SHELGON],50:[A.SALAMENCE]},{1:[A.GOOMY],40:[A.SLIGGOO],80:[A.GOODRA]},{1:[A.JANGMO_O],35:[A.HAKAMO_O],45:[A.KOMMO_O]}],[a.DUSK]:[{1:[A.LARVITAR],30:[A.PUPITAR],55:[A.TYRANITAR]}],[a.NIGHT]:[{1:[A.LARVITAR],30:[A.PUPITAR],55:[A.TYRANITAR]}],[a.ALL]:[{1:[A.VIBRAVA],45:[A.FLYGON]},{1:[A.GIBLE],24:[A.GABITE],48:[A.GARCHOMP]},{1:[A.AXEW],38:[A.FRAXURE],48:[A.HAXORUS]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[A.DEINO],50:[A.ZWEILOUS],64:[A.HYDREIGON]}],[a.NIGHT]:[{1:[A.DEINO],50:[A.ZWEILOUS],64:[A.HYDREIGON]}],[a.ALL]:[{1:[A.SWABLU],35:[A.ALTARIA]},A.DRAMPA,A.CYCLIZAR]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[A.DREEPY],50:[A.DRAKLOAK],60:[A.DRAGAPULT]}],[a.NIGHT]:[{1:[A.DREEPY],50:[A.DRAKLOAK],60:[A.DRAGAPULT]}],[a.ALL]:[{1:[A.DRATINI],30:[A.DRAGONAIR],55:[A.DRAGONITE]},{1:[A.FRIGIBAX],35:[A.ARCTIBAX],54:[A.BAXCALIBUR]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.AERODACTYL,A.DRUDDIGON,{1:[A.TYRUNT],59:[A.TYRANTRUM]},A.DRACOZOLT,A.DRACOVISH]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.REGIDRAGO]},5:{[a.DAWN]:[A.SALAMENCE,A.GOODRA,A.KOMMO_O],[a.DAY]:[A.SALAMENCE,A.GOODRA,A.KOMMO_O],[a.DUSK]:[A.TYRANITAR,A.DRAGAPULT],[a.NIGHT]:[A.TYRANITAR,A.DRAGAPULT],[a.ALL]:[A.DRAGONITE,A.FLYGON,A.GARCHOMP,A.HAXORUS,A.DRAMPA,A.BAXCALIBUR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.AERODACTYL,A.DRUDDIGON,A.TYRANTRUM,A.DRACOZOLT,A.DRACOVISH]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.REGIDRAGO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DIALGA]}},[s.ABYSS]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MURKROW,{1:[A.HOUNDOUR],24:[A.HOUNDOOM]},A.SABLEYE,{1:[A.PURRLOIN],20:[A.LIEPARD]},{1:[A.PAWNIARD],52:[A.BISHARP],64:[A.KINGAMBIT]},{1:[A.NICKIT],18:[A.THIEVUL]},{1:[A.IMPIDIMP],32:[A.MORGREM],42:[A.GRIMMSNARL]},{1:[A.MASCHIFF],30:[A.MABOSSTIFF]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ABSOL,A.SPIRITOMB,{1:[A.ZORUA],30:[A.ZOROARK]},{1:[A.DEINO],50:[A.ZWEILOUS],64:[A.HYDREIGON]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.UMBREON]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DARKRAI,A.GALAR_MOLTRES]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HOUNDOOM,A.SABLEYE,A.ABSOL,A.HONCHKROW,A.SPIRITOMB,A.LIEPARD,A.ZOROARK,A.HYDREIGON,A.THIEVUL,A.GRIMMSNARL,A.MABOSSTIFF,A.KINGAMBIT]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.UMBREON,A.HISUI_SAMUROTT]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DARKRAI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.PALKIA,A.YVELTAL,A.GALAR_MOLTRES]}},[s.SPACE]:{0:{[a.DAWN]:[],[a.DAY]:[A.SOLROCK],[a.DUSK]:[],[a.NIGHT]:[A.LUNATONE],[a.ALL]:[A.CLEFAIRY,{1:[A.BRONZOR],33:[A.BRONZONG]},{1:[A.MUNNA],30:[A.MUSHARNA]},A.MINIOR]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.BALTOY],36:[A.CLAYDOL]},{1:[A.ELGYEM],42:[A.BEHEEYEM]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.BELDUM],20:[A.METANG],45:[A.METAGROSS]},A.SIGILYPH,{1:[A.SOLOSIS],32:[A.DUOSION],41:[A.REUNICLUS]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.PORYGON],30:[A.PORYGON2]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.COSMOG],43:[A.COSMOEM]},A.CELESTEELA]},5:{[a.DAWN]:[],[a.DAY]:[A.SOLROCK],[a.DUSK]:[],[a.NIGHT]:[A.LUNATONE],[a.ALL]:[A.CLEFABLE,A.BRONZONG,A.MUSHARNA,A.REUNICLUS,A.MINIOR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.METAGROSS,A.PORYGON_Z]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CELESTEELA]},8:{[a.DAWN]:[],[a.DAY]:[A.SOLGALEO],[a.DUSK]:[],[a.NIGHT]:[A.LUNALA],[a.ALL]:[A.RAYQUAZA,A.NECROZMA]}},[s.CONSTRUCTION_SITE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.MACHOP],28:[A.MACHOKE]},{1:[A.MAGNEMITE],30:[A.MAGNETON]},{1:[A.DRILBUR],31:[A.EXCADRILL]},{1:[A.TIMBURR],25:[A.GURDURR]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.GRIMER],38:[A.MUK]},{1:[A.KOFFING],35:[A.WEEZING]},{1:[A.RHYHORN],42:[A.RHYDON]},{1:[A.SCRAGGY],39:[A.SCRAFTY]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[A.GALAR_MEOWTH],28:[A.PERRSERKER]}],[a.NIGHT]:[],[a.ALL]:[A.ONIX,A.HITMONLEE,A.HITMONCHAN,A.DURALUDON]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DITTO,A.HITMONTOP]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.COBALION,A.STAKATAKA]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MACHAMP,A.CONKELDURR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[A.PERRSERKER],[a.NIGHT]:[],[a.ALL]:[A.ARCHALUDON]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.COBALION,A.STAKATAKA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.JUNGLE]:{0:{[a.DAWN]:[A.VESPIQUEN,{1:[A.CHERUBI],25:[A.CHERRIM]},{1:[A.SEWADDLE],20:[A.SWADLOON],30:[A.LEAVANNY]}],[a.DAY]:[A.VESPIQUEN,{1:[A.CHERUBI],25:[A.CHERRIM]},{1:[A.SEWADDLE],20:[A.SWADLOON],30:[A.LEAVANNY]}],[a.DUSK]:[A.SHROOMISH,{1:[A.PURRLOIN],20:[A.LIEPARD]},{1:[A.FOONGUS],39:[A.AMOONGUSS]}],[a.NIGHT]:[{1:[A.SPINARAK],22:[A.ARIADOS]},A.SHROOMISH,{1:[A.PURRLOIN],20:[A.LIEPARD]},{1:[A.FOONGUS],39:[A.AMOONGUSS]}],[a.ALL]:[A.AIPOM,{1:[A.BLITZLE],27:[A.ZEBSTRIKA]},{1:[A.PIKIPEK],14:[A.TRUMBEAK],28:[A.TOUCANNON]}]},1:{[a.DAWN]:[A.EXEGGCUTE,A.TROPIUS,A.COMBEE,A.KOMALA],[a.DAY]:[A.EXEGGCUTE,A.TROPIUS,A.COMBEE,A.KOMALA],[a.DUSK]:[A.TANGELA,{1:[A.SPINARAK],22:[A.ARIADOS]},{1:[A.PANCHAM],52:[A.PANGORO]}],[a.NIGHT]:[A.TANGELA,{1:[A.PANCHAM],52:[A.PANGORO]}],[a.ALL]:[{1:[A.PANSAGE],30:[A.SIMISAGE]},{1:[A.PANSEAR],30:[A.SIMISEAR]},{1:[A.PANPOUR],30:[A.SIMIPOUR]},{1:[A.JOLTIK],36:[A.GALVANTULA]},{1:[A.LITLEO],35:[A.PYROAR]},{1:[A.FOMANTIS],44:[A.LURANTIS]},A.FALINKS]},2:{[a.DAWN]:[{1:[A.FOONGUS],39:[A.AMOONGUSS]},A.PASSIMIAN,{1:[A.GALAR_PONYTA],40:[A.GALAR_RAPIDASH]}],[a.DAY]:[{1:[A.FOONGUS],39:[A.AMOONGUSS]},A.PASSIMIAN],[a.DUSK]:[A.ORANGURU],[a.NIGHT]:[A.ORANGURU],[a.ALL]:[A.SCYTHER,A.YANMA,{1:[A.SLAKOTH],18:[A.VIGOROTH],36:[A.SLAKING]},A.SEVIPER,A.CARNIVINE,{1:[A.SNIVY],17:[A.SERVINE],36:[A.SERPERIOR]},{1:[A.GROOKEY],16:[A.THWACKEY],35:[A.RILLABOOM]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KANGASKHAN,A.CHATOT,A.KLEAVOR]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TAPU_LELE,A.BUZZWOLE,A.ZARUDE,A.MUNKIDORI]},5:{[a.DAWN]:[A.EXEGGUTOR,A.TROPIUS,A.CHERRIM,A.LEAVANNY,A.KOMALA],[a.DAY]:[A.EXEGGUTOR,A.TROPIUS,A.CHERRIM,A.LEAVANNY,A.KOMALA],[a.DUSK]:[A.BRELOOM,A.TANGROWTH,A.AMOONGUSS,A.PANGORO],[a.NIGHT]:[A.BRELOOM,A.TANGROWTH,A.AMOONGUSS,A.PANGORO],[a.ALL]:[A.SEVIPER,A.AMBIPOM,A.CARNIVINE,A.YANMEGA,A.GALVANTULA,A.PYROAR,A.TOUCANNON,A.LURANTIS,A.FALINKS]},6:{[a.DAWN]:[A.AMOONGUSS,A.GALAR_RAPIDASH],[a.DAY]:[A.AMOONGUSS],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KANGASKHAN,A.SCIZOR,A.SLAKING,A.LEAFEON,A.SERPERIOR,A.RILLABOOM]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TAPU_LELE,A.BUZZWOLE,A.ZARUDE,A.MUNKIDORI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.KLEAVOR]}},[s.FAIRY_CAVE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.JIGGLYPUFF],30:[A.WIGGLYTUFF]},{1:[A.MARILL],18:[A.AZUMARILL]},A.MAWILE,{1:[A.SPRITZEE],40:[A.AROMATISSE]},{1:[A.SWIRLIX],40:[A.SLURPUFF]},{1:[A.CUTIEFLY],25:[A.RIBOMBEE]},{1:[A.MORELULL],24:[A.SHIINOTIC]},{1:[A.MILCERY],30:[A.ALCREMIE]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CLEFAIRY,A.TOGETIC,{1:[A.RALTS],20:[A.KIRLIA],30:[A.GARDEVOIR]},A.CARBINK,A.COMFEY,{1:[A.HATENNA],32:[A.HATTREM],42:[A.HATTERENE]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.AUDINO,A.ETERNAL_FLOETTE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DIANCIE,A.ENAMORUS]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.WIGGLYTUFF,A.MAWILE,A.TOGEKISS,A.AUDINO,A.AROMATISSE,A.SLURPUFF,A.CARBINK,A.RIBOMBEE,A.SHIINOTIC,A.COMFEY,A.HATTERENE,A.ALCREMIE]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ETERNAL_FLOETTE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DIANCIE,A.ENAMORUS]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.XERNEAS]}},[s.TEMPLE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.GASTLY],25:[A.HAUNTER]},{1:[A.NATU],25:[A.XATU]},{1:[A.DUSKULL],37:[A.DUSCLOPS]},{1:[A.YAMASK],34:[A.COFAGRIGUS]},{1:[A.GOLETT],43:[A.GOLURK]},{1:[A.HONEDGE],35:[A.DOUBLADE]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.CUBONE],28:[A.MAROWAK]},{1:[A.BALTOY],36:[A.CLAYDOL]},{1:[A.CHINGLING],20:[A.CHIMECHO]},{1:[A.SKORUPI],40:[A.DRAPION]},{1:[A.LITWICK],41:[A.LAMPENT]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.GIMMIGHOUL],40:[A.GHOLDENGO]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HOOPA,A.TAPU_KOKO]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.CHIMECHO,A.COFAGRIGUS,A.GOLURK,A.AEGISLASH]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GHOLDENGO]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.HOOPA,A.TAPU_KOKO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.REGIGIGAS]}},[s.SLUM]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[A.PATRAT],20:[A.WATCHOG]}],[a.NIGHT]:[{1:[A.PATRAT],20:[A.WATCHOG]}],[a.ALL]:[{1:[A.RATTATA],20:[A.RATICATE]},{1:[A.GRIMER],38:[A.MUK]},{1:[A.KOFFING],35:[A.WEEZING]},{1:[A.TRUBBISH],36:[A.GARBODOR]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[A.STUNKY],34:[A.SKUNTANK]}],[a.NIGHT]:[{1:[A.STUNKY],34:[A.SKUNTANK]}],[a.ALL]:[{1:[A.BURMY],20:[A.WORMADAM]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[A.TOXTRICITY,{1:[A.GALAR_LINOONE],65:[A.OBSTAGOON]},A.GALAR_ZIGZAGOON],[a.NIGHT]:[A.TOXTRICITY,{1:[A.GALAR_LINOONE],65:[A.OBSTAGOON]},A.GALAR_ZIGZAGOON],[a.ALL]:[{1:[A.VAROOM],40:[A.REVAVROOM]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GUZZLORD]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[A.SKUNTANK,A.WATCHOG],[a.NIGHT]:[A.SKUNTANK,A.WATCHOG],[a.ALL]:[A.MUK,A.WEEZING,A.WORMADAM,A.GARBODOR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[A.TOXTRICITY,A.OBSTAGOON],[a.NIGHT]:[A.TOXTRICITY,A.OBSTAGOON],[a.ALL]:[A.REVAVROOM,A.GALAR_WEEZING]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GUZZLORD]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.SNOWY_FOREST]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[A.SNEASEL,{1:[A.TEDDIURSA],30:[A.URSARING]},{1:[A.SNOM],20:[A.FROSMOTH]}],[a.NIGHT]:[A.SNEASEL,{1:[A.TEDDIURSA],30:[A.URSARING]},{1:[A.SNOM],20:[A.FROSMOTH]}],[a.ALL]:[{1:[A.SWINUB],33:[A.PILOSWINE]},{1:[A.SNOVER],40:[A.ABOMASNOW]},A.EISCUE]},1:{[a.DAWN]:[A.SNEASEL,{1:[A.TEDDIURSA],30:[A.URSARING]},A.STANTLER],[a.DAY]:[A.SNEASEL,{1:[A.TEDDIURSA],30:[A.URSARING]},A.STANTLER],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},2:{[a.DAWN]:[{1:[A.GALAR_DARUMAKA],30:[A.GALAR_DARMANITAN]}],[a.DAY]:[{1:[A.GALAR_DARUMAKA],30:[A.GALAR_DARMANITAN]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DELIBIRD,{1:[A.ALOLA_SANDSHREW],30:[A.ALOLA_SANDSLASH]},{1:[A.ALOLA_VULPIX],30:[A.ALOLA_NINETALES]}]},3:{[a.DAWN]:[A.HISUI_SNEASEL],[a.DAY]:[A.HISUI_SNEASEL],[a.DUSK]:[{1:[A.HISUI_ZORUA],30:[A.HISUI_ZOROARK]}],[a.NIGHT]:[{1:[A.HISUI_ZORUA],30:[A.HISUI_ZOROARK]}],[a.ALL]:[{1:[A.GALAR_MR_MIME],42:[A.MR_RIME]},A.ARCTOZOLT,A.HISUI_AVALUGG]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GLASTRIER,A.CHIEN_PAO,A.GALAR_ARTICUNO]},5:{[a.DAWN]:[A.WYRDEER],[a.DAY]:[A.WYRDEER],[a.DUSK]:[A.FROSMOTH],[a.NIGHT]:[A.FROSMOTH],[a.ALL]:[A.ABOMASNOW,A.URSALUNA]},6:{[a.DAWN]:[A.SNEASLER,A.GALAR_DARMANITAN],[a.DAY]:[A.SNEASLER,A.GALAR_DARMANITAN],[a.DUSK]:[A.HISUI_ZOROARK],[a.NIGHT]:[A.HISUI_ZOROARK],[a.ALL]:[A.MR_RIME,A.ARCTOZOLT,A.ALOLA_SANDSLASH,A.ALOLA_NINETALES]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GLASTRIER,A.CHIEN_PAO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ZACIAN,A.GALAR_ARTICUNO]}},[s.ISLAND]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[A.ALOLA_RATTATA],30:[A.ALOLA_RATICATE]},{1:[A.ALOLA_MEOWTH],30:[A.ALOLA_PERSIAN]}],[a.NIGHT]:[{1:[A.ALOLA_RATTATA],30:[A.ALOLA_RATICATE]},{1:[A.ALOLA_MEOWTH],30:[A.ALOLA_PERSIAN]}],[a.ALL]:[A.ORICORIO,{1:[A.ALOLA_SANDSHREW],30:[A.ALOLA_SANDSLASH]},{1:[A.ALOLA_VULPIX],30:[A.ALOLA_NINETALES]},{1:[A.ALOLA_DIGLETT],26:[A.ALOLA_DUGTRIO]},{1:[A.ALOLA_GEODUDE],25:[A.ALOLA_GRAVELER],40:[A.ALOLA_GOLEM]},{1:[A.ALOLA_GRIMER],38:[A.ALOLA_MUK]}]},1:{[a.DAWN]:[A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR],[a.DAY]:[A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR],[a.DUSK]:[A.ALOLA_MAROWAK],[a.NIGHT]:[A.ALOLA_MAROWAK],[a.ALL]:[A.BRUXISH]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.BLACEPHALON]},5:{[a.DAWN]:[A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR],[a.DAY]:[A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR],[a.DUSK]:[A.ALOLA_RATICATE,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK],[a.NIGHT]:[A.ALOLA_RATICATE,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK],[a.ALL]:[A.ORICORIO,A.BRUXISH,A.ALOLA_SANDSLASH,A.ALOLA_NINETALES,A.ALOLA_DUGTRIO,A.ALOLA_GOLEM,A.ALOLA_MUK]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.BLACEPHALON]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[s.LABORATORY]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.MAGNEMITE],30:[A.MAGNETON]},{1:[A.GRIMER],38:[A.MUK]},{1:[A.VOLTORB],30:[A.ELECTRODE]},{1:[A.BRONZOR],33:[A.BRONZONG]},{1:[A.KLINK],38:[A.KLANG],49:[A.KLINKLANG]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[A.SOLOSIS],32:[A.DUOSION],41:[A.REUNICLUS]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.DITTO,{1:[A.PORYGON],30:[A.PORYGON2]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ROTOM]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.TYPE_NULL]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MUK,A.ELECTRODE,A.BRONZONG,A.MAGNEZONE,A.PORYGON_Z,A.REUNICLUS,A.KLINKLANG]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ROTOM,A.ZYGARDE,A.SILVALLY]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.MEWTWO,A.MIRAIDON]}},[s.END]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ROARING_MOON,A.IRON_VALIANT]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.WALKING_WAKE,A.IRON_LEAVES,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[A.ETERNATUS]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}}},UN={[s.TOWN]:{0:[U.YOUNGSTER],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]},[s.PLAINS]:{0:[U.BREEDER,U.TWINS],1:[U.ACE_TRAINER,U.CYCLIST],2:[U.BLACK_BELT],3:[],4:[],5:[U.CILAN,U.CHILI,U.CRESS,U.CHEREN],6:[],7:[],8:[]},[s.GRASS]:{0:[U.BREEDER,U.SCHOOL_KID],1:[U.ACE_TRAINER,U.POKEFAN],2:[U.BLACK_BELT],3:[],4:[],5:[U.ERIKA],6:[],7:[],8:[]},[s.TALL_GRASS]:{0:[],1:[U.ACE_TRAINER,U.BREEDER,U.RANGER],2:[],3:[],4:[],5:[U.GARDENIA,U.VIOLA,U.BRASSIUS],6:[],7:[],8:[]},[s.METROPOLIS]:{0:[U.BEAUTY,U.CLERK,U.CYCLIST,U.OFFICER,U.WAITER],1:[U.BREEDER,U.DEPOT_AGENT,U.GUITARIST],2:[U.ARTIST,U.RICH_KID],3:[],4:[],5:[U.WHITNEY,U.NORMAN,U.IONO,U.LARRY],6:[],7:[],8:[]},[s.FOREST]:{0:[U.RANGER],1:[],2:[],3:[],4:[],5:[U.BUGSY,U.BURGH,U.KATY],6:[],7:[],8:[]},[s.SEA]:{0:[U.SAILOR,U.SWIMMER],1:[],2:[],3:[],4:[],5:[U.MARLON],6:[],7:[],8:[]},[s.SWAMP]:{0:[U.PARASOL_LADY],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.JANINE,U.ROXIE],6:[],7:[],8:[]},[s.BEACH]:{0:[U.FISHERMAN,U.SAILOR],1:[U.ACE_TRAINER,U.BREEDER],2:[U.BLACK_BELT],3:[],4:[],5:[U.MISTY,U.KOFU],6:[],7:[],8:[]},[s.LAKE]:{0:[U.BREEDER,U.FISHERMAN,U.PARASOL_LADY],1:[U.ACE_TRAINER],2:[U.BLACK_BELT],3:[],4:[],5:[U.CRASHER_WAKE],6:[],7:[],8:[]},[s.SEABED]:{0:[],1:[],2:[],3:[],4:[],5:[U.JUAN],6:[],7:[],8:[]},[s.MOUNTAIN]:{0:[U.BACKPACKER,U.BLACK_BELT,U.HIKER],1:[U.ACE_TRAINER,U.PILOT],2:[],3:[],4:[],5:[U.FALKNER,U.WINONA,U.SKYLA],6:[],7:[],8:[]},[s.BADLANDS]:{0:[U.BACKPACKER,U.HIKER],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.CLAY,U.GRANT],6:[],7:[],8:[]},[s.CAVE]:{0:[U.BACKPACKER,U.HIKER],1:[U.ACE_TRAINER,U.BLACK_BELT],2:[],3:[],4:[],5:[U.BROCK,U.ROXANNE,U.ROARK],6:[],7:[],8:[]},[s.DESERT]:{0:[U.BACKPACKER,U.SCIENTIST],1:[],2:[],3:[],4:[],5:[U.GORDIE],6:[],7:[],8:[]},[s.ICE_CAVE]:{0:[U.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[U.PRYCE,U.BRYCEN,U.WULFRIC,U.GRUSHA],6:[],7:[],8:[]},[s.MEADOW]:{0:[U.BEAUTY,U.MUSICIAN,U.PARASOL_LADY],1:[U.ACE_TRAINER,U.BAKER,U.BREEDER,U.POKEFAN],2:[],3:[],4:[],5:[U.LENORA,U.MILO],6:[],7:[],8:[]},[s.POWER_PLANT]:{0:[U.GUITARIST,U.WORKER],1:[],2:[],3:[],4:[],5:[U.VOLKNER,U.ELESA,U.CLEMONT],6:[],7:[],8:[]},[s.VOLCANO]:{0:[U.FIREBREATHER],1:[],2:[],3:[],4:[],5:[U.BLAINE,U.FLANNERY,U.KABU],6:[],7:[],8:[]},[s.GRAVEYARD]:{0:[U.PSYCHIC],1:[U.HEX_MANIAC],2:[],3:[],4:[],5:[U.MORTY,U.ALLISTER,U.RYME],6:[],7:[],8:[]},[s.DOJO]:{0:[U.BLACK_BELT],1:[],2:[],3:[],4:[],5:[U.BRAWLY,U.MAYLENE,U.KORRINA,U.BEA],6:[],7:[],8:[]},[s.FACTORY]:{0:[U.WORKER],1:[],2:[],3:[],4:[],5:[U.JASMINE,U.BYRON],6:[],7:[],8:[]},[s.RUINS]:{0:[U.PSYCHIC,U.SCIENTIST],1:[U.ACE_TRAINER,U.BLACK_BELT,U.HEX_MANIAC],2:[],3:[],4:[],5:[U.SABRINA,U.TATE,U.LIZA,U.TULIP],6:[],7:[],8:[]},[s.WASTELAND]:{0:[U.VETERAN],1:[],2:[],3:[],4:[],5:[U.CLAIR,U.DRAYDEN,U.RAIHAN],6:[],7:[],8:[]},[s.ABYSS]:{0:[],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.MARNIE],6:[],7:[],8:[]},[s.SPACE]:{0:[],1:[],2:[],3:[],4:[],5:[U.OLYMPIA],6:[],7:[],8:[]},[s.CONSTRUCTION_SITE]:{0:[U.OFFICER,U.WORKER],1:[],2:[],3:[],4:[],5:[U.LT_SURGE,U.CHUCK,U.WATTSON],6:[],7:[],8:[]},[s.JUNGLE]:{0:[U.BACKPACKER,U.RANGER],1:[],2:[],3:[],4:[],5:[U.RAMOS],6:[],7:[],8:[]},[s.FAIRY_CAVE]:{0:[U.BEAUTY],1:[U.ACE_TRAINER,U.BREEDER],2:[],3:[],4:[],5:[U.VALERIE,U.OPAL,U.BEDE],6:[],7:[],8:[]},[s.TEMPLE]:{0:[],1:[U.ACE_TRAINER],2:[],3:[],4:[],5:[U.FANTINA],6:[],7:[],8:[]},[s.SLUM]:{0:[U.BIKER,U.OFFICER,U.ROUGHNECK],1:[U.BAKER,U.HOOLIGANS],2:[],3:[],4:[],5:[U.PIERS],6:[],7:[],8:[]},[s.SNOWY_FOREST]:{0:[U.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[U.CANDICE,U.MELONY],6:[],7:[],8:[]},[s.ISLAND]:{0:[U.RICH_KID],1:[U.RICH],2:[],3:[],4:[],5:[U.NESSA],6:[],7:[],8:[]},[s.LABORATORY]:{0:[],1:[],2:[],3:[],4:[],5:[U.GIOVANNI],6:[],7:[],8:[]},[s.END]:{0:[],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]}};function gy(){const R=[[A.BULBASAUR,t.GRASS,t.POISON,[[s.GRASS,2]]],[A.IVYSAUR,t.GRASS,t.POISON,[[s.GRASS,2]]],[A.VENUSAUR,t.GRASS,t.POISON,[[s.GRASS,2],[s.GRASS,6]]],[A.CHARMANDER,t.FIRE,-1,[[s.VOLCANO,2]]],[A.CHARMELEON,t.FIRE,-1,[[s.VOLCANO,2]]],[A.CHARIZARD,t.FIRE,t.FLYING,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.SQUIRTLE,t.WATER,-1,[[s.LAKE,2]]],[A.WARTORTLE,t.WATER,-1,[[s.LAKE,2]]],[A.BLASTOISE,t.WATER,-1,[[s.LAKE,2],[s.LAKE,6]]],[A.CATERPIE,t.BUG,-1,[[s.TOWN,0,[a.DAWN,a.DAY]]]],[A.METAPOD,t.BUG,-1,[[s.TOWN,0,[a.DAWN,a.DAY]]]],[A.BUTTERFREE,t.BUG,t.FLYING,[[s.FOREST,0,[a.DAWN,a.DAY]]]],[A.WEEDLE,t.BUG,t.POISON,[[s.TOWN,0,[a.DUSK,a.NIGHT]]]],[A.KAKUNA,t.BUG,t.POISON,[[s.TOWN,0,[a.DUSK,a.NIGHT]]]],[A.BEEDRILL,t.BUG,t.POISON,[[s.FOREST,0,[a.DUSK,a.NIGHT]]]],[A.PIDGEY,t.NORMAL,t.FLYING,[[s.TOWN,0],[s.PLAINS,1],[s.MOUNTAIN,0]]],[A.PIDGEOTTO,t.NORMAL,t.FLYING,[[s.PLAINS,1],[s.MOUNTAIN,0]]],[A.PIDGEOT,t.NORMAL,t.FLYING,[[s.PLAINS,1],[s.MOUNTAIN,0],[s.MOUNTAIN,5]]],[A.RATTATA,t.NORMAL,-1,[[s.TOWN,0],[s.METROPOLIS,0],[s.SLUM,0]]],[A.RATICATE,t.NORMAL,-1,[[s.METROPOLIS,0],[s.SLUM,0]]],[A.SPEAROW,t.NORMAL,t.FLYING,[[s.TOWN,0],[s.PLAINS,1],[s.MOUNTAIN,0]]],[A.FEAROW,t.NORMAL,t.FLYING,[[s.PLAINS,1],[s.MOUNTAIN,0],[s.MOUNTAIN,5]]],[A.EKANS,t.POISON,-1,[[s.TOWN,1,[a.DUSK,a.NIGHT]],[s.FOREST,1],[s.SWAMP,1,[a.DAWN,a.DAY]],[s.SWAMP,0,[a.DUSK,a.NIGHT]]]],[A.ARBOK,t.POISON,-1,[[s.FOREST,1],[s.SWAMP,1,[a.DAWN,a.DAY]],[s.SWAMP,0,[a.DUSK,a.NIGHT]],[s.SWAMP,5,[a.DUSK,a.NIGHT]]]],[A.PIKACHU,t.ELECTRIC,-1,[[s.PLAINS,1],[s.METROPOLIS,1],[s.POWER_PLANT,0]]],[A.RAICHU,t.ELECTRIC,-1,[[s.POWER_PLANT,5]]],[A.SANDSHREW,t.GROUND,-1,[[s.BADLANDS,1],[s.DESERT,0]]],[A.SANDSLASH,t.GROUND,-1,[[s.BADLANDS,1],[s.DESERT,0],[s.DESERT,5]]],[A.NIDORAN_F,t.POISON,-1,[[s.TOWN,1,a.DAY],[s.TALL_GRASS,0,a.DAY]]],[A.NIDORINA,t.POISON,-1,[[s.TALL_GRASS,0,a.DAY]]],[A.NIDOQUEEN,t.POISON,t.GROUND,[[s.TALL_GRASS,5,a.DAY]]],[A.NIDORAN_M,t.POISON,-1,[[s.TOWN,1,a.DAY],[s.TALL_GRASS,0,a.DAY]]],[A.NIDORINO,t.POISON,-1,[[s.TALL_GRASS,0,a.DAY]]],[A.NIDOKING,t.POISON,t.GROUND,[[s.TALL_GRASS,5,a.DAY]]],[A.CLEFAIRY,t.FAIRY,-1,[[s.FAIRY_CAVE,1],[s.SPACE,0]]],[A.CLEFABLE,t.FAIRY,-1,[[s.SPACE,5]]],[A.VULPIX,t.FIRE,-1,[[s.TALL_GRASS,1],[s.VOLCANO,0]]],[A.NINETALES,t.FIRE,-1,[[s.VOLCANO,5]]],[A.JIGGLYPUFF,t.NORMAL,t.FAIRY,[[s.MEADOW,1],[s.FAIRY_CAVE,0]]],[A.WIGGLYTUFF,t.NORMAL,t.FAIRY,[[s.MEADOW,1],[s.FAIRY_CAVE,0],[s.FAIRY_CAVE,5]]],[A.ZUBAT,t.POISON,t.FLYING,[[s.PLAINS,0,a.NIGHT],[s.CAVE,0]]],[A.GOLBAT,t.POISON,t.FLYING,[[s.PLAINS,0,a.NIGHT],[s.CAVE,0]]],[A.ODDISH,t.GRASS,t.POISON,[[s.TOWN,1,[a.DUSK,a.NIGHT]],[s.TALL_GRASS,0,[a.DUSK,a.NIGHT]]]],[A.GLOOM,t.GRASS,t.POISON,[[s.TALL_GRASS,0,[a.DUSK,a.NIGHT]]]],[A.VILEPLUME,t.GRASS,t.POISON,[[s.TALL_GRASS,5,[a.DUSK,a.NIGHT]]]],[A.PARAS,t.BUG,t.GRASS,[[s.TOWN,1,a.NIGHT],[s.TALL_GRASS,1,a.NIGHT],[s.CAVE,0]]],[A.PARASECT,t.BUG,t.GRASS,[[s.TALL_GRASS,1,a.NIGHT],[s.CAVE,0],[s.CAVE,5]]],[A.VENONAT,t.BUG,t.POISON,[[s.TOWN,1,a.NIGHT],[s.TALL_GRASS,1,a.NIGHT],[s.FOREST,0,a.NIGHT]]],[A.VENOMOTH,t.BUG,t.POISON,[[s.TALL_GRASS,1,a.NIGHT],[s.FOREST,0,a.NIGHT],[s.FOREST,5,a.NIGHT]]],[A.DIGLETT,t.GROUND,-1,[[s.BADLANDS,0]]],[A.DUGTRIO,t.GROUND,-1,[[s.BADLANDS,0],[s.BADLANDS,5]]],[A.MEOWTH,t.NORMAL,-1,[[s.TOWN,1,[a.DUSK,a.NIGHT]],[s.PLAINS,0,[a.DUSK,a.NIGHT]]]],[A.PERSIAN,t.NORMAL,-1,[[s.PLAINS,0,[a.DUSK,a.NIGHT]],[s.PLAINS,5,[a.DUSK,a.NIGHT]]]],[A.PSYDUCK,t.WATER,-1,[[s.SWAMP,1],[s.LAKE,0]]],[A.GOLDUCK,t.WATER,-1,[[s.SWAMP,1],[s.LAKE,0],[s.LAKE,5]]],[A.MANKEY,t.FIGHTING,-1,[[s.PLAINS,1,[a.DUSK,a.NIGHT]],[s.DOJO,0]]],[A.PRIMEAPE,t.FIGHTING,-1,[[s.PLAINS,1,[a.DUSK,a.NIGHT]],[s.DOJO,0]]],[A.GROWLITHE,t.FIRE,-1,[[s.GRASS,2],[s.VOLCANO,0]]],[A.ARCANINE,t.FIRE,-1,[[s.VOLCANO,5]]],[A.POLIWAG,t.WATER,-1,[[s.SEA,1],[s.SWAMP,0]]],[A.POLIWHIRL,t.WATER,-1,[[s.SEA,1],[s.SWAMP,0]]],[A.POLIWRATH,t.WATER,t.FIGHTING,[[s.SWAMP,5]]],[A.ABRA,t.PSYCHIC,-1,[[s.TOWN,2],[s.PLAINS,2],[s.RUINS,1]]],[A.KADABRA,t.PSYCHIC,-1,[[s.PLAINS,2],[s.RUINS,1]]],[A.ALAKAZAM,t.PSYCHIC,-1,[[s.RUINS,5]]],[A.MACHOP,t.FIGHTING,-1,[[s.MOUNTAIN,1],[s.FACTORY,0],[s.CONSTRUCTION_SITE,0]]],[A.MACHOKE,t.FIGHTING,-1,[[s.MOUNTAIN,1],[s.FACTORY,0],[s.CONSTRUCTION_SITE,0]]],[A.MACHAMP,t.FIGHTING,-1,[[s.CONSTRUCTION_SITE,5]]],[A.BELLSPROUT,t.GRASS,t.POISON,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.FOREST,0,[a.DAWN,a.DAY]]]],[A.WEEPINBELL,t.GRASS,t.POISON,[[s.FOREST,0,[a.DAWN,a.DAY]]]],[A.VICTREEBEL,t.GRASS,t.POISON,[[s.FOREST,5,[a.DAWN,a.DAY]]]],[A.TENTACOOL,t.WATER,t.POISON,[[s.SEA,0],[s.SEABED,1]]],[A.TENTACRUEL,t.WATER,t.POISON,[[s.SEA,0],[s.SEA,5],[s.SEABED,1]]],[A.GEODUDE,t.ROCK,t.GROUND,[[s.MOUNTAIN,1],[s.BADLANDS,0],[s.CAVE,1]]],[A.GRAVELER,t.ROCK,t.GROUND,[[s.MOUNTAIN,1],[s.BADLANDS,0],[s.CAVE,1]]],[A.GOLEM,t.ROCK,t.GROUND,[[s.BADLANDS,5]]],[A.PONYTA,t.FIRE,-1,[[s.MEADOW,1,[a.DAWN,a.DAY]],[s.VOLCANO,0]]],[A.RAPIDASH,t.FIRE,-1,[[s.MEADOW,1,[a.DAWN,a.DAY]],[s.VOLCANO,0],[s.VOLCANO,5]]],[A.SLOWPOKE,t.WATER,t.PSYCHIC,[[s.SEA,0,[a.DAWN,a.DAY]],[s.SEA,1,[a.DUSK,a.NIGHT]],[s.LAKE,1]]],[A.SLOWBRO,t.WATER,t.PSYCHIC,[[s.SEA,0,[a.DAWN,a.DAY]],[s.SEA,1,[a.DUSK,a.NIGHT]],[s.LAKE,1],[s.LAKE,5]]],[A.MAGNEMITE,t.ELECTRIC,t.STEEL,[[s.POWER_PLANT,0],[s.FACTORY,0],[s.CONSTRUCTION_SITE,0],[s.LABORATORY,0]]],[A.MAGNETON,t.ELECTRIC,t.STEEL,[[s.POWER_PLANT,0],[s.FACTORY,0],[s.CONSTRUCTION_SITE,0],[s.LABORATORY,0]]],[A.FARFETCHD,t.NORMAL,t.FLYING,[[s.PLAINS,3],[s.PLAINS,6]]],[A.DODUO,t.NORMAL,t.FLYING,[[s.PLAINS,1,[a.DAWN,a.DAY]]]],[A.DODRIO,t.NORMAL,t.FLYING,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.PLAINS,5,[a.DAWN,a.DAY]]]],[A.SEEL,t.WATER,-1,[[s.ICE_CAVE,0]]],[A.DEWGONG,t.WATER,t.ICE,[[s.ICE_CAVE,0],[s.ICE_CAVE,5]]],[A.GRIMER,t.POISON,-1,[[s.SLUM,0],[s.CONSTRUCTION_SITE,1],[s.LABORATORY,0]]],[A.MUK,t.POISON,-1,[[s.CONSTRUCTION_SITE,1],[s.SLUM,0],[s.SLUM,5],[s.LABORATORY,0],[s.LABORATORY,5]]],[A.SHELLDER,t.WATER,-1,[[s.SEA,1,[a.DUSK,a.NIGHT]],[s.BEACH,0,[a.DUSK,a.NIGHT]],[s.SEABED,1]]],[A.CLOYSTER,t.WATER,t.ICE,[[s.BEACH,5,[a.DUSK,a.NIGHT]]]],[A.GASTLY,t.GHOST,t.POISON,[[s.GRAVEYARD,0],[s.TEMPLE,0]]],[A.HAUNTER,t.GHOST,t.POISON,[[s.GRAVEYARD,0],[s.TEMPLE,0]]],[A.GENGAR,t.GHOST,t.POISON,[[s.GRAVEYARD,5]]],[A.ONIX,t.ROCK,t.GROUND,[[s.BADLANDS,2],[s.CAVE,2],[s.CAVE,5],[s.CONSTRUCTION_SITE,2]]],[A.DROWZEE,t.PSYCHIC,-1,[[s.RUINS,0]]],[A.HYPNO,t.PSYCHIC,-1,[[s.RUINS,0],[s.RUINS,5]]],[A.KRABBY,t.WATER,-1,[[s.BEACH,0]]],[A.KINGLER,t.WATER,-1,[[s.BEACH,0],[s.BEACH,5]]],[A.VOLTORB,t.ELECTRIC,-1,[[s.POWER_PLANT,0],[s.FACTORY,0],[s.LABORATORY,0]]],[A.ELECTRODE,t.ELECTRIC,-1,[[s.POWER_PLANT,0],[s.FACTORY,0],[s.LABORATORY,0],[s.LABORATORY,5]]],[A.EXEGGCUTE,t.GRASS,t.PSYCHIC,[[s.FOREST,2,[a.DAWN,a.DAY]],[s.JUNGLE,1,[a.DAWN,a.DAY]]]],[A.EXEGGUTOR,t.GRASS,t.PSYCHIC,[[s.JUNGLE,5,[a.DAWN,a.DAY]]]],[A.CUBONE,t.GROUND,-1,[[s.BADLANDS,0,a.NIGHT],[s.GRAVEYARD,1],[s.TEMPLE,1]]],[A.MAROWAK,t.GROUND,-1,[[s.BADLANDS,0,a.NIGHT],[s.GRAVEYARD,1],[s.TEMPLE,1],[s.BADLANDS,5,a.NIGHT],[s.GRAVEYARD,5,[a.DAWN,a.DAY,a.DUSK]]]],[A.HITMONLEE,t.FIGHTING,-1,[[s.DOJO,2],[s.DOJO,5],[s.CONSTRUCTION_SITE,2]]],[A.HITMONCHAN,t.FIGHTING,-1,[[s.DOJO,2],[s.DOJO,5],[s.CONSTRUCTION_SITE,2]]],[A.LICKITUNG,t.NORMAL,-1,[[s.PLAINS,3]]],[A.KOFFING,t.POISON,-1,[[s.SLUM,0],[s.CONSTRUCTION_SITE,1]]],[A.WEEZING,t.POISON,-1,[[s.SLUM,0],[s.SLUM,5],[s.CONSTRUCTION_SITE,1]]],[A.RHYHORN,t.GROUND,t.ROCK,[[s.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.BADLANDS,0],[s.CONSTRUCTION_SITE,1]]],[A.RHYDON,t.GROUND,t.ROCK,[[s.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.BADLANDS,0],[s.CONSTRUCTION_SITE,1]]],[A.CHANSEY,t.NORMAL,-1,[[s.PLAINS,3],[s.MEADOW,3]]],[A.TANGELA,t.GRASS,-1,[[s.JUNGLE,1,[a.DUSK,a.NIGHT]]]],[A.KANGASKHAN,t.NORMAL,-1,[[s.JUNGLE,3],[s.JUNGLE,6]]],[A.HORSEA,t.WATER,-1,[[s.SEA,1]]],[A.SEADRA,t.WATER,-1,[[s.SEA,1]]],[A.GOLDEEN,t.WATER,-1,[[s.LAKE,0],[s.SEA,1]]],[A.SEAKING,t.WATER,-1,[[s.LAKE,0],[s.LAKE,5],[s.SEA,1]]],[A.STARYU,t.WATER,-1,[[s.BEACH,0,[a.DAWN,a.DAY]],[s.SEA,1,[a.DAWN,a.DAY]]]],[A.STARMIE,t.WATER,t.PSYCHIC,[[s.BEACH,0,[a.DAWN,a.DAY]],[s.BEACH,5,[a.DAWN,a.DAY]],[s.SEA,1,[a.DAWN,a.DAY]]]],[A.MR_MIME,t.PSYCHIC,t.FAIRY,[[s.RUINS,2],[s.RUINS,6]]],[A.SCYTHER,t.BUG,t.FLYING,[[s.TALL_GRASS,3],[s.FOREST,2,[a.DUSK,a.NIGHT]],[s.JUNGLE,2]]],[A.JYNX,t.ICE,t.PSYCHIC,[[s.ICE_CAVE,2],[s.ICE_CAVE,6]]],[A.ELECTABUZZ,t.ELECTRIC,-1,[[s.POWER_PLANT,1]]],[A.MAGMAR,t.FIRE,-1,[[s.VOLCANO,1]]],[A.PINSIR,t.BUG,-1,[[s.TALL_GRASS,2],[s.TALL_GRASS,6]]],[A.TAUROS,t.NORMAL,-1,[[s.MEADOW,2],[s.MEADOW,5]]],[A.MAGIKARP,t.WATER,-1,[[s.SEA,0],[s.LAKE,0]]],[A.GYARADOS,t.WATER,t.FLYING,[[s.SEA,0],[s.LAKE,0],[s.LAKE,5]]],[A.LAPRAS,t.WATER,t.ICE,[[s.SEA,2],[s.ICE_CAVE,2],[s.ICE_CAVE,6]]],[A.DITTO,t.NORMAL,-1,[[s.TOWN,4],[s.PLAINS,4],[s.METROPOLIS,3],[s.CONSTRUCTION_SITE,3],[s.LABORATORY,2]]],[A.EEVEE,t.NORMAL,-1,[[s.TOWN,3],[s.PLAINS,3],[s.METROPOLIS,3],[s.MEADOW,2]]],[A.VAPOREON,t.WATER,-1,[[s.LAKE,3],[s.LAKE,6]]],[A.JOLTEON,t.ELECTRIC,-1,[[s.POWER_PLANT,3],[s.POWER_PLANT,6]]],[A.FLAREON,t.FIRE,-1,[[s.VOLCANO,3],[s.VOLCANO,6]]],[A.PORYGON,t.NORMAL,-1,[[s.FACTORY,2],[s.SPACE,3],[s.LABORATORY,2]]],[A.OMANYTE,t.ROCK,t.WATER,[[s.SEABED,3]]],[A.OMASTAR,t.ROCK,t.WATER,[[s.SEABED,3],[s.SEABED,6]]],[A.KABUTO,t.ROCK,t.WATER,[[s.SEABED,3]]],[A.KABUTOPS,t.ROCK,t.WATER,[[s.SEABED,3],[s.SEABED,6]]],[A.AERODACTYL,t.ROCK,t.FLYING,[[s.WASTELAND,3],[s.WASTELAND,6]]],[A.SNORLAX,t.NORMAL,-1,[[s.PLAINS,3],[s.PLAINS,6]]],[A.ARTICUNO,t.ICE,t.FLYING,[[s.ICE_CAVE,4],[s.ICE_CAVE,7]]],[A.ZAPDOS,t.ELECTRIC,t.FLYING,[[s.POWER_PLANT,7]]],[A.MOLTRES,t.FIRE,t.FLYING,[[s.VOLCANO,7]]],[A.DRATINI,t.DRAGON,-1,[[s.WASTELAND,2]]],[A.DRAGONAIR,t.DRAGON,-1,[[s.WASTELAND,2]]],[A.DRAGONITE,t.DRAGON,t.FLYING,[[s.WASTELAND,2],[s.WASTELAND,5]]],[A.MEWTWO,t.PSYCHIC,-1,[[s.LABORATORY,8]]],[A.MEW,t.PSYCHIC,-1,[]],[A.CHIKORITA,t.GRASS,-1,[[s.TALL_GRASS,2]]],[A.BAYLEEF,t.GRASS,-1,[[s.TALL_GRASS,2]]],[A.MEGANIUM,t.GRASS,-1,[[s.TALL_GRASS,2],[s.TALL_GRASS,6]]],[A.CYNDAQUIL,t.FIRE,-1,[[s.VOLCANO,2]]],[A.QUILAVA,t.FIRE,-1,[[s.VOLCANO,2]]],[A.TYPHLOSION,t.FIRE,-1,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.TOTODILE,t.WATER,-1,[[s.SWAMP,2]]],[A.CROCONAW,t.WATER,-1,[[s.SWAMP,2]]],[A.FERALIGATR,t.WATER,-1,[[s.SWAMP,2],[s.SWAMP,6]]],[A.SENTRET,t.NORMAL,-1,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.PLAINS,0,[a.DAWN,a.DAY]]]],[A.FURRET,t.NORMAL,-1,[[s.PLAINS,0,[a.DAWN,a.DAY]],[s.PLAINS,5,[a.DAWN,a.DAY]]]],[A.HOOTHOOT,t.NORMAL,t.FLYING,[[s.TOWN,0,a.NIGHT],[s.FOREST,1,a.NIGHT]]],[A.NOCTOWL,t.NORMAL,t.FLYING,[[s.FOREST,1,a.NIGHT],[s.FOREST,5,a.NIGHT]]],[A.LEDYBA,t.BUG,t.FLYING,[[s.TOWN,0,a.DAWN],[s.MEADOW,0,a.DAWN]]],[A.LEDIAN,t.BUG,t.FLYING,[[s.MEADOW,0,a.DAWN],[s.MEADOW,5,a.DAWN]]],[A.SPINARAK,t.BUG,t.POISON,[[s.TOWN,1,a.DUSK],[s.TOWN,0,a.NIGHT],[s.TALL_GRASS,1,a.NIGHT],[s.FOREST,1,a.DUSK],[s.FOREST,0,a.NIGHT],[s.JUNGLE,1,a.DUSK],[s.JUNGLE,0,a.NIGHT]]],[A.ARIADOS,t.BUG,t.POISON,[[s.TALL_GRASS,1,a.NIGHT],[s.FOREST,1,a.DUSK],[s.FOREST,0,a.NIGHT],[s.FOREST,5,[a.DUSK,a.NIGHT]],[s.JUNGLE,1,a.DUSK],[s.JUNGLE,0,a.NIGHT]]],[A.CROBAT,t.POISON,t.FLYING,[[s.CAVE,5]]],[A.CHINCHOU,t.WATER,t.ELECTRIC,[[s.SEA,1,a.NIGHT],[s.SEABED,0]]],[A.LANTURN,t.WATER,t.ELECTRIC,[[s.SEA,1,a.NIGHT],[s.SEABED,0],[s.SEABED,5]]],[A.PICHU,t.ELECTRIC,-1,[]],[A.CLEFFA,t.FAIRY,-1,[]],[A.IGGLYBUFF,t.NORMAL,t.FAIRY,[]],[A.TOGEPI,t.FAIRY,-1,[]],[A.TOGETIC,t.FAIRY,t.FLYING,[[s.FAIRY_CAVE,1]]],[A.NATU,t.PSYCHIC,t.FLYING,[[s.MOUNTAIN,1],[s.RUINS,0],[s.TEMPLE,0]]],[A.XATU,t.PSYCHIC,t.FLYING,[[s.MOUNTAIN,1],[s.RUINS,0],[s.RUINS,5],[s.TEMPLE,0]]],[A.MAREEP,t.ELECTRIC,-1,[[s.MEADOW,1],[s.POWER_PLANT,2]]],[A.FLAAFFY,t.ELECTRIC,-1,[[s.MEADOW,1],[s.POWER_PLANT,2]]],[A.AMPHAROS,t.ELECTRIC,-1,[[s.MEADOW,1],[s.POWER_PLANT,6]]],[A.BELLOSSOM,t.GRASS,-1,[[s.TALL_GRASS,6,[a.DAWN,a.DAY]]]],[A.MARILL,t.WATER,t.FAIRY,[[s.LAKE,0,[a.DUSK,a.NIGHT]],[s.FAIRY_CAVE,0]]],[A.AZUMARILL,t.WATER,t.FAIRY,[[s.LAKE,0,[a.DUSK,a.NIGHT]],[s.LAKE,5,[a.DUSK,a.NIGHT]],[s.FAIRY_CAVE,0]]],[A.SUDOWOODO,t.ROCK,-1,[[s.GRASS,3],[s.GRASS,6]]],[A.POLITOED,t.WATER,-1,[[s.SWAMP,3],[s.SWAMP,6]]],[A.HOPPIP,t.GRASS,t.FLYING,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.GRASS,0,[a.DAWN,a.DAY]]]],[A.SKIPLOOM,t.GRASS,t.FLYING,[[s.GRASS,0,[a.DAWN,a.DAY]]]],[A.JUMPLUFF,t.GRASS,t.FLYING,[[s.GRASS,5,[a.DAWN,a.DAY]]]],[A.AIPOM,t.NORMAL,-1,[[s.JUNGLE,0]]],[A.SUNKERN,t.GRASS,-1,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.GRASS,0,[a.DAWN,a.DAY]]]],[A.SUNFLORA,t.GRASS,-1,[[s.GRASS,5,[a.DAWN,a.DAY]]]],[A.YANMA,t.BUG,t.FLYING,[[s.JUNGLE,2]]],[A.WOOPER,t.WATER,t.GROUND,[[s.LAKE,1],[s.SWAMP,0,[a.DAWN,a.DAY]]]],[A.QUAGSIRE,t.WATER,t.GROUND,[[s.LAKE,1],[s.SWAMP,0,[a.DAWN,a.DAY]],[s.SWAMP,5,[a.DAWN,a.DAY]]]],[A.ESPEON,t.PSYCHIC,-1,[[s.RUINS,3,a.DAY],[s.RUINS,6,a.DAY]]],[A.UMBREON,t.DARK,-1,[[s.ABYSS,3],[s.ABYSS,6]]],[A.MURKROW,t.DARK,t.FLYING,[[s.MOUNTAIN,2,a.NIGHT],[s.ABYSS,0]]],[A.SLOWKING,t.WATER,t.PSYCHIC,[[s.LAKE,3],[s.LAKE,6]]],[A.MISDREAVUS,t.GHOST,-1,[[s.GRAVEYARD,2]]],[A.UNOWN,t.PSYCHIC,-1,[[s.RUINS,0]]],[A.WOBBUFFET,t.PSYCHIC,-1,[[s.RUINS,2],[s.RUINS,6]]],[A.GIRAFARIG,t.NORMAL,t.PSYCHIC,[[s.TALL_GRASS,2]]],[A.PINECO,t.BUG,-1,[[s.FOREST,0,[a.DUSK,a.NIGHT]]]],[A.FORRETRESS,t.BUG,t.STEEL,[[s.FOREST,0,[a.DUSK,a.NIGHT]],[s.FOREST,5,[a.DUSK,a.NIGHT]]]],[A.DUNSPARCE,t.NORMAL,-1,[[s.PLAINS,3]]],[A.GLIGAR,t.GROUND,t.FLYING,[[s.BADLANDS,2]]],[A.STEELIX,t.STEEL,t.GROUND,[[s.BADLANDS,6]]],[A.SNUBBULL,t.FAIRY,-1,[[s.MEADOW,1,[a.DAWN,a.DAY]]]],[A.GRANBULL,t.FAIRY,-1,[[s.MEADOW,1,[a.DAWN,a.DAY]],[s.MEADOW,5,[a.DAWN,a.DAY]]]],[A.QWILFISH,t.WATER,t.POISON,[[s.SEABED,2],[s.SEABED,5]]],[A.SCIZOR,t.BUG,t.STEEL,[[s.JUNGLE,6]]],[A.SHUCKLE,t.BUG,t.ROCK,[[s.CAVE,3],[s.CAVE,6]]],[A.HERACROSS,t.BUG,t.FIGHTING,[[s.FOREST,2],[s.FOREST,6]]],[A.SNEASEL,t.DARK,t.ICE,[[s.ICE_CAVE,1],[s.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[s.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[A.TEDDIURSA,t.NORMAL,-1,[[s.FOREST,1],[s.CAVE,0],[s.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[s.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[A.URSARING,t.NORMAL,-1,[[s.FOREST,1],[s.CAVE,0],[s.CAVE,5],[s.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[s.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[A.SLUGMA,t.FIRE,-1,[[s.MOUNTAIN,1],[s.VOLCANO,0]]],[A.MAGCARGO,t.FIRE,t.ROCK,[[s.MOUNTAIN,1],[s.VOLCANO,0],[s.VOLCANO,5]]],[A.SWINUB,t.ICE,t.GROUND,[[s.ICE_CAVE,0],[s.SNOWY_FOREST,0]]],[A.PILOSWINE,t.ICE,t.GROUND,[[s.ICE_CAVE,0],[s.SNOWY_FOREST,0]]],[A.CORSOLA,t.WATER,t.ROCK,[[s.SEABED,2],[s.SEABED,5]]],[A.REMORAID,t.WATER,-1,[[s.SEABED,0]]],[A.OCTILLERY,t.WATER,-1,[[s.SEABED,2],[s.SEABED,5]]],[A.DELIBIRD,t.ICE,t.FLYING,[[s.ICE_CAVE,3],[s.SNOWY_FOREST,2]]],[A.MANTINE,t.WATER,t.FLYING,[[s.SEABED,2],[s.SEABED,5]]],[A.SKARMORY,t.STEEL,t.FLYING,[[s.MOUNTAIN,2],[s.MOUNTAIN,5]]],[A.HOUNDOUR,t.DARK,t.FIRE,[[s.METROPOLIS,0,a.NIGHT],[s.ABYSS,0]]],[A.HOUNDOOM,t.DARK,t.FIRE,[[s.METROPOLIS,0,a.NIGHT],[s.ABYSS,0],[s.ABYSS,5]]],[A.KINGDRA,t.WATER,t.DRAGON,[[s.SEA,3],[s.SEA,6]]],[A.PHANPY,t.GROUND,-1,[[s.BADLANDS,0,[a.DAWN,a.DAY]]]],[A.DONPHAN,t.GROUND,-1,[[s.BADLANDS,0,[a.DAWN,a.DAY]],[s.BADLANDS,5,[a.DAWN,a.DAY]]]],[A.PORYGON2,t.NORMAL,-1,[[s.FACTORY,2],[s.SPACE,3],[s.LABORATORY,2]]],[A.STANTLER,t.NORMAL,-1,[[s.FOREST,2,[a.DAWN,a.DAY]],[s.FOREST,6,[a.DAWN,a.DAY]],[s.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[A.SMEARGLE,t.NORMAL,-1,[[s.METROPOLIS,3]]],[A.TYROGUE,t.FIGHTING,-1,[]],[A.HITMONTOP,t.FIGHTING,-1,[[s.DOJO,3],[s.DOJO,6],[s.CONSTRUCTION_SITE,3]]],[A.SMOOCHUM,t.ICE,t.PSYCHIC,[]],[A.ELEKID,t.ELECTRIC,-1,[]],[A.MAGBY,t.FIRE,-1,[]],[A.MILTANK,t.NORMAL,-1,[[s.MEADOW,2],[s.MEADOW,5]]],[A.BLISSEY,t.NORMAL,-1,[[s.MEADOW,6]]],[A.RAIKOU,t.ELECTRIC,-1,[[s.POWER_PLANT,4],[s.POWER_PLANT,7]]],[A.ENTEI,t.FIRE,-1,[[s.VOLCANO,4],[s.VOLCANO,7]]],[A.SUICUNE,t.WATER,-1,[[s.LAKE,4],[s.LAKE,7]]],[A.LARVITAR,t.ROCK,t.GROUND,[[s.MOUNTAIN,3],[s.WASTELAND,0,[a.DUSK,a.NIGHT]]]],[A.PUPITAR,t.ROCK,t.GROUND,[[s.MOUNTAIN,3],[s.WASTELAND,0,[a.DUSK,a.NIGHT]]]],[A.TYRANITAR,t.ROCK,t.DARK,[[s.WASTELAND,0,[a.DUSK,a.NIGHT]],[s.WASTELAND,5,[a.DUSK,a.NIGHT]]]],[A.LUGIA,t.PSYCHIC,t.FLYING,[[s.SEA,8]]],[A.HO_OH,t.FIRE,t.FLYING,[[s.MOUNTAIN,8]]],[A.CELEBI,t.PSYCHIC,t.GRASS,[]],[A.TREECKO,t.GRASS,-1,[[s.FOREST,2]]],[A.GROVYLE,t.GRASS,-1,[[s.FOREST,2]]],[A.SCEPTILE,t.GRASS,-1,[[s.FOREST,2],[s.FOREST,6]]],[A.TORCHIC,t.FIRE,-1,[[s.MOUNTAIN,2]]],[A.COMBUSKEN,t.FIRE,t.FIGHTING,[[s.MOUNTAIN,2]]],[A.BLAZIKEN,t.FIRE,t.FIGHTING,[[s.MOUNTAIN,2],[s.MOUNTAIN,6]]],[A.MUDKIP,t.WATER,-1,[[s.SWAMP,2]]],[A.MARSHTOMP,t.WATER,t.GROUND,[[s.SWAMP,2]]],[A.SWAMPERT,t.WATER,t.GROUND,[[s.SWAMP,2],[s.SWAMP,6]]],[A.POOCHYENA,t.DARK,-1,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.TOWN,0,[a.DUSK,a.NIGHT]],[s.PLAINS,1,[a.DAWN,a.DAY]],[s.PLAINS,0,[a.DUSK,a.NIGHT]]]],[A.MIGHTYENA,t.DARK,-1,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.PLAINS,0,[a.DUSK,a.NIGHT]],[s.PLAINS,5,[a.DUSK,a.NIGHT]]]],[A.ZIGZAGOON,t.NORMAL,-1,[[s.TOWN,0],[s.PLAINS,0],[s.METROPOLIS,0]]],[A.LINOONE,t.NORMAL,-1,[[s.PLAINS,0],[s.PLAINS,5],[s.METROPOLIS,0]]],[A.WURMPLE,t.BUG,-1,[[s.TOWN,0]]],[A.SILCOON,t.BUG,-1,[[s.TOWN,0,a.DAY]]],[A.BEAUTIFLY,t.BUG,t.FLYING,[[s.FOREST,0,a.DAY],[s.FOREST,5,a.DAY]]],[A.CASCOON,t.BUG,-1,[[s.TOWN,0,a.NIGHT]]],[A.DUSTOX,t.BUG,t.POISON,[[s.FOREST,0,a.NIGHT],[s.FOREST,5,a.NIGHT]]],[A.LOTAD,t.WATER,t.GRASS,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.LAKE,0,[a.DAWN,a.DAY]],[s.SWAMP,0,[a.DAWN,a.DAY]]]],[A.LOMBRE,t.WATER,t.GRASS,[[s.LAKE,0,[a.DAWN,a.DAY]],[s.SWAMP,0,[a.DAWN,a.DAY]]]],[A.LUDICOLO,t.WATER,t.GRASS,[[s.SWAMP,5,[a.DAWN,a.DAY]]]],[A.SEEDOT,t.GRASS,-1,[[s.TOWN,1,[a.DUSK,a.NIGHT]],[s.GRASS,0,[a.DUSK,a.NIGHT]],[s.FOREST,0,[a.DUSK,a.NIGHT]]]],[A.NUZLEAF,t.GRASS,t.DARK,[[s.GRASS,0,[a.DUSK,a.NIGHT]],[s.FOREST,0,[a.DUSK,a.NIGHT]]]],[A.SHIFTRY,t.GRASS,t.DARK,[[s.FOREST,5,[a.DUSK,a.NIGHT]]]],[A.TAILLOW,t.NORMAL,t.FLYING,[[s.TOWN,0],[s.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[A.SWELLOW,t.NORMAL,t.FLYING,[[s.MOUNTAIN,0,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[A.WINGULL,t.WATER,t.FLYING,[[s.SEA,0,[a.DAWN,a.DAY]]]],[A.PELIPPER,t.WATER,t.FLYING,[[s.SEA,0,[a.DAWN,a.DAY]],[s.SEA,5,[a.DAWN,a.DAY]]]],[A.RALTS,t.PSYCHIC,t.FAIRY,[[s.TOWN,3],[s.MEADOW,1],[s.FAIRY_CAVE,1]]],[A.KIRLIA,t.PSYCHIC,t.FAIRY,[[s.MEADOW,1],[s.FAIRY_CAVE,1]]],[A.GARDEVOIR,t.PSYCHIC,t.FAIRY,[[s.MEADOW,1],[s.MEADOW,5],[s.FAIRY_CAVE,1]]],[A.SURSKIT,t.BUG,t.WATER,[[s.TOWN,2],[s.LAKE,1]]],[A.MASQUERAIN,t.BUG,t.FLYING,[[s.LAKE,1],[s.LAKE,5]]],[A.SHROOMISH,t.GRASS,-1,[[s.TOWN,1,[a.DUSK,a.NIGHT]],[s.GRASS,0,[a.DUSK,a.NIGHT]],[s.FOREST,0,[a.DUSK,a.NIGHT]],[s.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[A.BRELOOM,t.GRASS,t.FIGHTING,[[s.GRASS,0,[a.DUSK,a.NIGHT]],[s.FOREST,0,[a.DUSK,a.NIGHT]],[s.FOREST,5,[a.DUSK,a.NIGHT]],[s.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[A.SLAKOTH,t.NORMAL,-1,[[s.JUNGLE,2]]],[A.VIGOROTH,t.NORMAL,-1,[[s.JUNGLE,2]]],[A.SLAKING,t.NORMAL,-1,[[s.JUNGLE,2],[s.JUNGLE,6]]],[A.NINCADA,t.BUG,t.GROUND,[[s.TOWN,1],[s.TALL_GRASS,0]]],[A.NINJASK,t.BUG,t.FLYING,[[s.TALL_GRASS,0],[s.TALL_GRASS,5]]],[A.SHEDINJA,t.BUG,t.GHOST,[[s.TALL_GRASS,3]]],[A.WHISMUR,t.NORMAL,-1,[[s.TOWN,1],[s.CAVE,0]]],[A.LOUDRED,t.NORMAL,-1,[[s.CAVE,0]]],[A.EXPLOUD,t.NORMAL,-1,[[s.CAVE,0],[s.CAVE,5]]],[A.MAKUHITA,t.FIGHTING,-1,[[s.CAVE,1],[s.DOJO,0]]],[A.HARIYAMA,t.FIGHTING,-1,[[s.CAVE,1],[s.DOJO,0],[s.DOJO,5]]],[A.AZURILL,t.NORMAL,t.FAIRY,[]],[A.NOSEPASS,t.ROCK,-1,[[s.CAVE,1]]],[A.SKITTY,t.NORMAL,-1,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.MEADOW,1,[a.DAWN,a.DAY]]]],[A.DELCATTY,t.NORMAL,-1,[[s.MEADOW,1,[a.DAWN,a.DAY]],[s.MEADOW,5,[a.DAWN,a.DAY]]]],[A.SABLEYE,t.DARK,t.GHOST,[[s.ABYSS,0],[s.ABYSS,5]]],[A.MAWILE,t.STEEL,t.FAIRY,[[s.FAIRY_CAVE,0],[s.FAIRY_CAVE,5]]],[A.ARON,t.STEEL,t.ROCK,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DUSK,a.NIGHT]]]],[A.LAIRON,t.STEEL,t.ROCK,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DUSK,a.NIGHT]]]],[A.AGGRON,t.STEEL,t.ROCK,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[s.MOUNTAIN,5]]],[A.MEDITITE,t.FIGHTING,t.PSYCHIC,[[s.DOJO,0]]],[A.MEDICHAM,t.FIGHTING,t.PSYCHIC,[[s.DOJO,0],[s.DOJO,5]]],[A.ELECTRIKE,t.ELECTRIC,-1,[[s.POWER_PLANT,0]]],[A.MANECTRIC,t.ELECTRIC,-1,[[s.POWER_PLANT,0],[s.POWER_PLANT,5]]],[A.PLUSLE,t.ELECTRIC,-1,[[s.POWER_PLANT,1]]],[A.MINUN,t.ELECTRIC,-1,[[s.POWER_PLANT,1]]],[A.VOLBEAT,t.BUG,-1,[[s.MEADOW,2,a.NIGHT]]],[A.ILLUMISE,t.BUG,-1,[[s.MEADOW,2,a.NIGHT]]],[A.ROSELIA,t.GRASS,t.POISON,[[s.FOREST,1,[a.DAWN,a.DAY]],[s.MEADOW,0,[a.DAWN,a.DAY]]]],[A.GULPIN,t.POISON,-1,[[s.SWAMP,0]]],[A.SWALOT,t.POISON,-1,[[s.SWAMP,0],[s.SWAMP,5]]],[A.CARVANHA,t.WATER,t.DARK,[[s.SEA,1,[a.DUSK,a.NIGHT]]]],[A.SHARPEDO,t.WATER,t.DARK,[[s.SEA,1,[a.DUSK,a.NIGHT]],[s.SEA,5,[a.DUSK,a.NIGHT]]]],[A.WAILMER,t.WATER,-1,[[s.SEA,1],[s.SEABED,1]]],[A.WAILORD,t.WATER,-1,[[s.SEA,1],[s.SEABED,1],[s.SEABED,5]]],[A.NUMEL,t.FIRE,t.GROUND,[[s.BADLANDS,1],[s.VOLCANO,0]]],[A.CAMERUPT,t.FIRE,t.GROUND,[[s.BADLANDS,1],[s.VOLCANO,0],[s.VOLCANO,5]]],[A.TORKOAL,t.FIRE,-1,[[s.VOLCANO,1],[s.VOLCANO,5]]],[A.SPOINK,t.PSYCHIC,-1,[[s.MOUNTAIN,2],[s.RUINS,0]]],[A.GRUMPIG,t.PSYCHIC,-1,[[s.MOUNTAIN,2],[s.RUINS,0],[s.RUINS,5]]],[A.SPINDA,t.NORMAL,-1,[[s.MEADOW,2]]],[A.TRAPINCH,t.GROUND,-1,[[s.DESERT,0,[a.DAWN,a.DAY]]]],[A.VIBRAVA,t.GROUND,t.DRAGON,[[s.DESERT,2,[a.DAWN,a.DAY]],[s.WASTELAND,0]]],[A.FLYGON,t.GROUND,t.DRAGON,[[s.DESERT,2,[a.DAWN,a.DAY]],[s.WASTELAND,0],[s.WASTELAND,5]]],[A.CACNEA,t.GRASS,-1,[[s.DESERT,0,[a.DUSK,a.NIGHT]]]],[A.CACTURNE,t.GRASS,t.DARK,[[s.DESERT,0,[a.DUSK,a.NIGHT]],[s.DESERT,5,[a.DUSK,a.NIGHT]]]],[A.SWABLU,t.NORMAL,t.FLYING,[[s.MOUNTAIN,0,[a.DAWN,a.DAY]],[s.WASTELAND,1]]],[A.ALTARIA,t.DRAGON,t.FLYING,[[s.MOUNTAIN,0,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]],[s.WASTELAND,1]]],[A.ZANGOOSE,t.NORMAL,-1,[[s.TALL_GRASS,2],[s.TALL_GRASS,5]]],[A.SEVIPER,t.POISON,-1,[[s.JUNGLE,2],[s.JUNGLE,5]]],[A.LUNATONE,t.ROCK,t.PSYCHIC,[[s.SPACE,0,a.NIGHT],[s.SPACE,5,a.NIGHT]]],[A.SOLROCK,t.ROCK,t.PSYCHIC,[[s.SPACE,0,a.DAY],[s.SPACE,5,a.DAY]]],[A.BARBOACH,t.WATER,t.GROUND,[[s.SWAMP,1]]],[A.WHISCASH,t.WATER,t.GROUND,[[s.SWAMP,1],[s.SWAMP,5]]],[A.CORPHISH,t.WATER,-1,[[s.BEACH,0]]],[A.CRAWDAUNT,t.WATER,t.DARK,[[s.BEACH,0],[s.BEACH,5]]],[A.BALTOY,t.GROUND,t.PSYCHIC,[[s.RUINS,0],[s.SPACE,1],[s.TEMPLE,1]]],[A.CLAYDOL,t.GROUND,t.PSYCHIC,[[s.RUINS,0],[s.RUINS,5],[s.SPACE,1],[s.TEMPLE,1]]],[A.LILEEP,t.ROCK,t.GRASS,[[s.DESERT,3]]],[A.CRADILY,t.ROCK,t.GRASS,[[s.DESERT,3],[s.DESERT,6]]],[A.ANORITH,t.ROCK,t.BUG,[[s.DESERT,3]]],[A.ARMALDO,t.ROCK,t.BUG,[[s.DESERT,3],[s.DESERT,6]]],[A.FEEBAS,t.WATER,-1,[[s.SEABED,4]]],[A.MILOTIC,t.WATER,-1,[[s.SEABED,7]]],[A.CASTFORM,t.NORMAL,-1,[[s.METROPOLIS,4],[s.METROPOLIS,6]]],[A.KECLEON,t.NORMAL,-1,[[s.TALL_GRASS,2],[s.TALL_GRASS,5]]],[A.SHUPPET,t.GHOST,-1,[[s.GRAVEYARD,0]]],[A.BANETTE,t.GHOST,-1,[[s.GRAVEYARD,0],[s.GRAVEYARD,5]]],[A.DUSKULL,t.GHOST,-1,[[s.GRAVEYARD,0],[s.TEMPLE,0]]],[A.DUSCLOPS,t.GHOST,-1,[[s.GRAVEYARD,0],[s.TEMPLE,0]]],[A.TROPIUS,t.GRASS,t.FLYING,[[s.TALL_GRASS,2],[s.FOREST,2],[s.JUNGLE,1,[a.DAWN,a.DAY]],[s.JUNGLE,5,[a.DAWN,a.DAY]]]],[A.CHIMECHO,t.PSYCHIC,-1,[[s.TEMPLE,1],[s.TEMPLE,5]]],[A.ABSOL,t.DARK,-1,[[s.ABYSS,2],[s.ABYSS,5]]],[A.WYNAUT,t.PSYCHIC,-1,[]],[A.SNORUNT,t.ICE,-1,[[s.ICE_CAVE,1]]],[A.GLALIE,t.ICE,-1,[[s.ICE_CAVE,1],[s.ICE_CAVE,5]]],[A.SPHEAL,t.ICE,t.WATER,[[s.ICE_CAVE,1]]],[A.SEALEO,t.ICE,t.WATER,[[s.ICE_CAVE,1]]],[A.WALREIN,t.ICE,t.WATER,[[s.ICE_CAVE,1],[s.ICE_CAVE,5]]],[A.CLAMPERL,t.WATER,-1,[[s.SEABED,0]]],[A.HUNTAIL,t.WATER,-1,[[s.SEABED,5]]],[A.GOREBYSS,t.WATER,-1,[[s.SEABED,5]]],[A.RELICANTH,t.WATER,t.ROCK,[[s.SEABED,3],[s.SEABED,6]]],[A.LUVDISC,t.WATER,-1,[[s.SEABED,1],[s.SEABED,5]]],[A.BAGON,t.DRAGON,-1,[[s.WASTELAND,0,[a.DAWN,a.DAY]]]],[A.SHELGON,t.DRAGON,-1,[[s.WASTELAND,0,[a.DAWN,a.DAY]]]],[A.SALAMENCE,t.DRAGON,t.FLYING,[[s.WASTELAND,0,[a.DAWN,a.DAY]],[s.WASTELAND,5,[a.DAWN,a.DAY]]]],[A.BELDUM,t.STEEL,t.PSYCHIC,[[s.FACTORY,3],[s.SPACE,2]]],[A.METANG,t.STEEL,t.PSYCHIC,[[s.FACTORY,3],[s.SPACE,2]]],[A.METAGROSS,t.STEEL,t.PSYCHIC,[[s.FACTORY,3],[s.SPACE,2],[s.SPACE,6]]],[A.REGIROCK,t.ROCK,-1,[[s.DESERT,4],[s.DESERT,7]]],[A.REGICE,t.ICE,-1,[[s.ICE_CAVE,4],[s.ICE_CAVE,7]]],[A.REGISTEEL,t.STEEL,-1,[[s.RUINS,4],[s.RUINS,7]]],[A.LATIAS,t.DRAGON,t.PSYCHIC,[[s.PLAINS,4],[s.PLAINS,7]]],[A.LATIOS,t.DRAGON,t.PSYCHIC,[[s.PLAINS,4],[s.PLAINS,7]]],[A.KYOGRE,t.WATER,-1,[[s.SEABED,8]]],[A.GROUDON,t.GROUND,-1,[[s.BADLANDS,8]]],[A.RAYQUAZA,t.DRAGON,t.FLYING,[[s.SPACE,8]]],[A.JIRACHI,t.STEEL,t.PSYCHIC,[]],[A.DEOXYS,t.PSYCHIC,-1,[]],[A.TURTWIG,t.GRASS,-1,[[s.GRASS,2]]],[A.GROTLE,t.GRASS,-1,[[s.GRASS,2]]],[A.TORTERRA,t.GRASS,t.GROUND,[[s.GRASS,2],[s.GRASS,6]]],[A.CHIMCHAR,t.FIRE,-1,[[s.VOLCANO,2]]],[A.MONFERNO,t.FIRE,t.FIGHTING,[[s.VOLCANO,2]]],[A.INFERNAPE,t.FIRE,t.FIGHTING,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.PIPLUP,t.WATER,-1,[[s.SEA,2]]],[A.PRINPLUP,t.WATER,-1,[[s.SEA,2]]],[A.EMPOLEON,t.WATER,t.STEEL,[[s.SEA,2],[s.SEA,6]]],[A.STARLY,t.NORMAL,t.FLYING,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.PLAINS,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[A.STARAVIA,t.NORMAL,t.FLYING,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[A.STARAPTOR,t.NORMAL,t.FLYING,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[A.BIDOOF,t.NORMAL,-1,[[s.TOWN,0],[s.PLAINS,0]]],[A.BIBAREL,t.NORMAL,t.WATER,[[s.PLAINS,0],[s.PLAINS,5]]],[A.KRICKETOT,t.BUG,-1,[[s.TOWN,1,[a.DUSK,a.NIGHT]],[s.TALL_GRASS,0,[a.DUSK,a.NIGHT]]]],[A.KRICKETUNE,t.BUG,-1,[[s.TALL_GRASS,0,[a.DUSK,a.NIGHT]],[s.TALL_GRASS,5,[a.DUSK,a.NIGHT]]]],[A.SHINX,t.ELECTRIC,-1,[[s.PLAINS,2,[a.DUSK,a.NIGHT]],[s.POWER_PLANT,0]]],[A.LUXIO,t.ELECTRIC,-1,[[s.PLAINS,2,[a.DUSK,a.NIGHT]],[s.POWER_PLANT,0]]],[A.LUXRAY,t.ELECTRIC,-1,[[s.PLAINS,2,[a.DUSK,a.NIGHT]],[s.POWER_PLANT,0],[s.POWER_PLANT,5]]],[A.BUDEW,t.GRASS,t.POISON,[]],[A.ROSERADE,t.GRASS,t.POISON,[[s.MEADOW,5,[a.DAWN,a.DAY]]]],[A.CRANIDOS,t.ROCK,-1,[[s.MOUNTAIN,3]]],[A.RAMPARDOS,t.ROCK,-1,[[s.MOUNTAIN,3],[s.MOUNTAIN,6]]],[A.SHIELDON,t.ROCK,t.STEEL,[[s.MOUNTAIN,3]]],[A.BASTIODON,t.ROCK,t.STEEL,[[s.MOUNTAIN,3],[s.MOUNTAIN,6]]],[A.BURMY,t.BUG,-1,[[s.FOREST,1],[s.BEACH,1],[s.SLUM,1]]],[A.WORMADAM,t.BUG,t.GRASS,[[s.FOREST,1],[s.FOREST,5],[s.BEACH,1],[s.BEACH,5],[s.SLUM,1],[s.SLUM,5]]],[A.MOTHIM,t.BUG,t.FLYING,[[s.FOREST,1,[a.DAWN,a.DAY]],[s.FOREST,5,[a.DAWN,a.DAY]]]],[A.COMBEE,t.BUG,t.FLYING,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.GRASS,1,[a.DAWN,a.DAY]],[s.FOREST,0,[a.DAWN,a.DAY]],[s.JUNGLE,1,[a.DAWN,a.DAY]]]],[A.VESPIQUEN,t.BUG,t.FLYING,[[s.GRASS,1,[a.DAWN,a.DAY]],[s.FOREST,0,[a.DAWN,a.DAY]],[s.FOREST,5,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DAWN,a.DAY]]]],[A.PACHIRISU,t.ELECTRIC,-1,[[s.POWER_PLANT,1]]],[A.BUIZEL,t.WATER,-1,[[s.SEA,0]]],[A.FLOATZEL,t.WATER,-1,[[s.SEA,0],[s.SEA,5]]],[A.CHERUBI,t.GRASS,-1,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.GRASS,1,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DAWN,a.DAY]]]],[A.CHERRIM,t.GRASS,-1,[[s.GRASS,1,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DAWN,a.DAY]],[s.JUNGLE,5,[a.DAWN,a.DAY]]]],[A.SHELLOS,t.WATER,-1,[[s.SWAMP,0],[s.SEABED,1]]],[A.GASTRODON,t.WATER,t.GROUND,[[s.SWAMP,0],[s.SWAMP,5],[s.SEABED,1]]],[A.AMBIPOM,t.NORMAL,-1,[[s.JUNGLE,5]]],[A.DRIFLOON,t.GHOST,t.FLYING,[[s.GRAVEYARD,0]]],[A.DRIFBLIM,t.GHOST,t.FLYING,[[s.GRAVEYARD,0],[s.GRAVEYARD,5]]],[A.BUNEARY,t.NORMAL,-1,[[s.PLAINS,2]]],[A.LOPUNNY,t.NORMAL,-1,[[s.PLAINS,2],[s.PLAINS,5]]],[A.MISMAGIUS,t.GHOST,-1,[[s.GRAVEYARD,5]]],[A.HONCHKROW,t.DARK,t.FLYING,[[s.ABYSS,5]]],[A.GLAMEOW,t.NORMAL,-1,[[s.METROPOLIS,1],[s.MEADOW,1]]],[A.PURUGLY,t.NORMAL,-1,[[s.METROPOLIS,1],[s.MEADOW,1],[s.MEADOW,5]]],[A.CHINGLING,t.PSYCHIC,-1,[[s.TEMPLE,1]]],[A.STUNKY,t.POISON,t.DARK,[[s.SLUM,1,[a.DUSK,a.NIGHT]]]],[A.SKUNTANK,t.POISON,t.DARK,[[s.SLUM,1,[a.DUSK,a.NIGHT]],[s.SLUM,5,[a.DUSK,a.NIGHT]]]],[A.BRONZOR,t.STEEL,t.PSYCHIC,[[s.FACTORY,1],[s.SPACE,0],[s.LABORATORY,0]]],[A.BRONZONG,t.STEEL,t.PSYCHIC,[[s.FACTORY,1],[s.SPACE,0],[s.SPACE,5],[s.LABORATORY,0],[s.LABORATORY,5]]],[A.BONSLY,t.ROCK,-1,[]],[A.MIME_JR,t.PSYCHIC,t.FAIRY,[]],[A.HAPPINY,t.NORMAL,-1,[]],[A.CHATOT,t.NORMAL,t.FLYING,[[s.JUNGLE,3]]],[A.SPIRITOMB,t.GHOST,t.DARK,[[s.GRAVEYARD,3],[s.ABYSS,2],[s.ABYSS,5]]],[A.GIBLE,t.DRAGON,t.GROUND,[[s.MOUNTAIN,3],[s.WASTELAND,0]]],[A.GABITE,t.DRAGON,t.GROUND,[[s.MOUNTAIN,3],[s.WASTELAND,0]]],[A.GARCHOMP,t.DRAGON,t.GROUND,[[s.MOUNTAIN,3],[s.WASTELAND,0],[s.WASTELAND,5]]],[A.MUNCHLAX,t.NORMAL,-1,[]],[A.RIOLU,t.FIGHTING,-1,[]],[A.LUCARIO,t.FIGHTING,t.STEEL,[[s.DOJO,2],[s.DOJO,5]]],[A.HIPPOPOTAS,t.GROUND,-1,[[s.DESERT,0,[a.DAWN,a.DAY]]]],[A.HIPPOWDON,t.GROUND,-1,[[s.DESERT,0,[a.DAWN,a.DAY]],[s.DESERT,5,[a.DAWN,a.DAY]]]],[A.SKORUPI,t.POISON,t.BUG,[[s.SWAMP,1],[s.DESERT,0],[s.TEMPLE,1]]],[A.DRAPION,t.POISON,t.DARK,[[s.SWAMP,1],[s.DESERT,0],[s.DESERT,5],[s.TEMPLE,1]]],[A.CROAGUNK,t.POISON,t.FIGHTING,[[s.SWAMP,1,[a.DUSK,a.NIGHT]],[s.DOJO,1]]],[A.TOXICROAK,t.POISON,t.FIGHTING,[[s.SWAMP,1,[a.DUSK,a.NIGHT]],[s.DOJO,1],[s.DOJO,5]]],[A.CARNIVINE,t.GRASS,-1,[[s.JUNGLE,2],[s.JUNGLE,5]]],[A.FINNEON,t.WATER,-1,[[s.SEA,0,a.NIGHT]]],[A.LUMINEON,t.WATER,-1,[[s.SEA,0,a.NIGHT],[s.SEA,5,a.NIGHT]]],[A.MANTYKE,t.WATER,t.FLYING,[[s.SEABED,2]]],[A.SNOVER,t.GRASS,t.ICE,[[s.ICE_CAVE,0],[s.SNOWY_FOREST,0]]],[A.ABOMASNOW,t.GRASS,t.ICE,[[s.ICE_CAVE,0],[s.SNOWY_FOREST,0],[s.SNOWY_FOREST,5]]],[A.WEAVILE,t.DARK,t.ICE,[[s.ICE_CAVE,5]]],[A.MAGNEZONE,t.ELECTRIC,t.STEEL,[[s.POWER_PLANT,5],[s.LABORATORY,5]]],[A.LICKILICKY,t.NORMAL,-1,[[s.PLAINS,6]]],[A.RHYPERIOR,t.GROUND,t.ROCK,[[s.BADLANDS,5]]],[A.TANGROWTH,t.GRASS,-1,[[s.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[A.ELECTIVIRE,t.ELECTRIC,-1,[[s.POWER_PLANT,5]]],[A.MAGMORTAR,t.FIRE,-1,[[s.VOLCANO,5]]],[A.TOGEKISS,t.FAIRY,t.FLYING,[[s.FAIRY_CAVE,5]]],[A.YANMEGA,t.BUG,t.FLYING,[[s.JUNGLE,5]]],[A.LEAFEON,t.GRASS,-1,[[s.JUNGLE,6]]],[A.GLACEON,t.ICE,-1,[[s.ICE_CAVE,6]]],[A.GLISCOR,t.GROUND,t.FLYING,[[s.BADLANDS,5]]],[A.MAMOSWINE,t.ICE,t.GROUND,[[s.ICE_CAVE,5]]],[A.PORYGON_Z,t.NORMAL,-1,[[s.SPACE,6],[s.LABORATORY,5]]],[A.GALLADE,t.PSYCHIC,t.FIGHTING,[[s.DOJO,3],[s.DOJO,6]]],[A.PROBOPASS,t.ROCK,t.STEEL,[[s.CAVE,5]]],[A.DUSKNOIR,t.GHOST,-1,[[s.GRAVEYARD,5]]],[A.FROSLASS,t.ICE,t.GHOST,[[s.ICE_CAVE,2],[s.ICE_CAVE,5]]],[A.ROTOM,t.ELECTRIC,t.GHOST,[[s.LABORATORY,3],[s.LABORATORY,7],[s.VOLCANO,3],[s.VOLCANO,7],[s.SEA,3],[s.SEA,7],[s.ICE_CAVE,3],[s.ICE_CAVE,7],[s.MOUNTAIN,3],[s.MOUNTAIN,7],[s.TALL_GRASS,3],[s.TALL_GRASS,7]]],[A.UXIE,t.PSYCHIC,-1,[[s.CAVE,4],[s.CAVE,7]]],[A.MESPRIT,t.PSYCHIC,-1,[[s.LAKE,4],[s.LAKE,7]]],[A.AZELF,t.PSYCHIC,-1,[[s.SWAMP,4],[s.SWAMP,7]]],[A.DIALGA,t.STEEL,t.DRAGON,[[s.WASTELAND,8]]],[A.PALKIA,t.WATER,t.DRAGON,[[s.ABYSS,8]]],[A.HEATRAN,t.FIRE,t.STEEL,[[s.VOLCANO,4],[s.VOLCANO,7]]],[A.REGIGIGAS,t.NORMAL,-1,[[s.TEMPLE,8]]],[A.GIRATINA,t.GHOST,t.DRAGON,[[s.GRAVEYARD,8]]],[A.CRESSELIA,t.PSYCHIC,-1,[[s.BEACH,4],[s.BEACH,7]]],[A.PHIONE,t.WATER,-1,[]],[A.MANAPHY,t.WATER,-1,[]],[A.DARKRAI,t.DARK,-1,[[s.ABYSS,4],[s.ABYSS,7]]],[A.SHAYMIN,t.GRASS,-1,[[s.MEADOW,8]]],[A.ARCEUS,t.NORMAL,-1,[]],[A.VICTINI,t.PSYCHIC,t.FIRE,[]],[A.SNIVY,t.GRASS,-1,[[s.JUNGLE,2]]],[A.SERVINE,t.GRASS,-1,[[s.JUNGLE,2]]],[A.SERPERIOR,t.GRASS,-1,[[s.JUNGLE,2],[s.JUNGLE,6]]],[A.TEPIG,t.FIRE,-1,[[s.VOLCANO,2]]],[A.PIGNITE,t.FIRE,t.FIGHTING,[[s.VOLCANO,2]]],[A.EMBOAR,t.FIRE,t.FIGHTING,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.OSHAWOTT,t.WATER,-1,[[s.LAKE,2]]],[A.DEWOTT,t.WATER,-1,[[s.LAKE,2]]],[A.SAMUROTT,t.WATER,-1,[[s.LAKE,2],[s.LAKE,6]]],[A.PATRAT,t.NORMAL,-1,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.TOWN,0,[a.DUSK,a.NIGHT]],[s.METROPOLIS,1,[a.DAWN,a.DAY]],[s.METROPOLIS,0,[a.DUSK,a.NIGHT]],[s.SLUM,0,[a.DUSK,a.NIGHT]]]],[A.WATCHOG,t.NORMAL,-1,[[s.METROPOLIS,1,[a.DAWN,a.DAY]],[s.METROPOLIS,0,[a.DUSK,a.NIGHT]],[s.SLUM,0,[a.DUSK,a.NIGHT]],[s.SLUM,5,[a.DUSK,a.NIGHT]]]],[A.LILLIPUP,t.NORMAL,-1,[[s.TOWN,0],[s.METROPOLIS,0]]],[A.HERDIER,t.NORMAL,-1,[[s.METROPOLIS,0]]],[A.STOUTLAND,t.NORMAL,-1,[[s.METROPOLIS,0],[s.METROPOLIS,5]]],[A.PURRLOIN,t.DARK,-1,[[s.TOWN,0,[a.DUSK,a.NIGHT]],[s.ABYSS,0],[s.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[A.LIEPARD,t.DARK,-1,[[s.ABYSS,0],[s.ABYSS,5],[s.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[A.PANSAGE,t.GRASS,-1,[[s.FOREST,1],[s.JUNGLE,1]]],[A.SIMISAGE,t.GRASS,-1,[[s.FOREST,1],[s.FOREST,5],[s.JUNGLE,1]]],[A.PANSEAR,t.FIRE,-1,[[s.VOLCANO,1],[s.JUNGLE,1]]],[A.SIMISEAR,t.FIRE,-1,[[s.VOLCANO,1],[s.VOLCANO,5],[s.JUNGLE,1]]],[A.PANPOUR,t.WATER,-1,[[s.SEA,1],[s.JUNGLE,1]]],[A.SIMIPOUR,t.WATER,-1,[[s.SEA,1],[s.SEA,5],[s.JUNGLE,1]]],[A.MUNNA,t.PSYCHIC,-1,[[s.SPACE,0]]],[A.MUSHARNA,t.PSYCHIC,-1,[[s.SPACE,0],[s.SPACE,5]]],[A.PIDOVE,t.NORMAL,t.FLYING,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.PLAINS,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[A.TRANQUILL,t.NORMAL,t.FLYING,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[A.UNFEZANT,t.NORMAL,t.FLYING,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[A.BLITZLE,t.ELECTRIC,-1,[[s.MEADOW,0],[s.JUNGLE,0]]],[A.ZEBSTRIKA,t.ELECTRIC,-1,[[s.MEADOW,0],[s.MEADOW,5],[s.JUNGLE,0]]],[A.ROGGENROLA,t.ROCK,-1,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[s.BADLANDS,1],[s.CAVE,0]]],[A.BOLDORE,t.ROCK,-1,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[s.BADLANDS,1],[s.CAVE,0]]],[A.GIGALITH,t.ROCK,-1,[[s.CAVE,5]]],[A.WOOBAT,t.PSYCHIC,t.FLYING,[[s.CAVE,0]]],[A.SWOOBAT,t.PSYCHIC,t.FLYING,[[s.CAVE,0],[s.CAVE,5]]],[A.DRILBUR,t.GROUND,-1,[[s.BADLANDS,0],[s.CONSTRUCTION_SITE,0]]],[A.EXCADRILL,t.GROUND,t.STEEL,[[s.BADLANDS,0],[s.BADLANDS,5],[s.CONSTRUCTION_SITE,0]]],[A.AUDINO,t.NORMAL,-1,[[s.FAIRY_CAVE,2],[s.FAIRY_CAVE,5]]],[A.TIMBURR,t.FIGHTING,-1,[[s.FACTORY,0],[s.CONSTRUCTION_SITE,0]]],[A.GURDURR,t.FIGHTING,-1,[[s.FACTORY,0],[s.CONSTRUCTION_SITE,0]]],[A.CONKELDURR,t.FIGHTING,-1,[[s.CONSTRUCTION_SITE,5]]],[A.TYMPOLE,t.WATER,-1,[[s.SWAMP,0]]],[A.PALPITOAD,t.WATER,t.GROUND,[[s.SWAMP,0]]],[A.SEISMITOAD,t.WATER,t.GROUND,[[s.SWAMP,0],[s.SWAMP,5]]],[A.THROH,t.FIGHTING,-1,[[s.DOJO,2],[s.DOJO,5]]],[A.SAWK,t.FIGHTING,-1,[[s.DOJO,2],[s.DOJO,5]]],[A.SEWADDLE,t.BUG,t.GRASS,[[s.FOREST,1,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DAWN,a.DAY]]]],[A.SWADLOON,t.BUG,t.GRASS,[[s.FOREST,1,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DAWN,a.DAY]]]],[A.LEAVANNY,t.BUG,t.GRASS,[[s.FOREST,1,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DAWN,a.DAY]],[s.JUNGLE,5,[a.DAWN,a.DAY]]]],[A.VENIPEDE,t.BUG,t.POISON,[[s.TOWN,1,[a.DUSK,a.NIGHT]],[s.FOREST,0,[a.DUSK,a.NIGHT]]]],[A.WHIRLIPEDE,t.BUG,t.POISON,[[s.FOREST,0,[a.DUSK,a.NIGHT]]]],[A.SCOLIPEDE,t.BUG,t.POISON,[[s.FOREST,0,[a.DUSK,a.NIGHT]],[s.FOREST,5,[a.DUSK,a.NIGHT]]]],[A.COTTONEE,t.GRASS,t.FAIRY,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.GRASS,0,[a.DAWN,a.DAY]],[s.MEADOW,0,[a.DAWN,a.DAY]]]],[A.WHIMSICOTT,t.GRASS,t.FAIRY,[[s.GRASS,5,[a.DAWN,a.DAY]]]],[A.PETILIL,t.GRASS,-1,[[s.GRASS,0,[a.DAWN,a.DAY]],[s.FOREST,0,[a.DAWN,a.DAY]]]],[A.LILLIGANT,t.GRASS,-1,[[s.FOREST,5,[a.DAWN,a.DAY]]]],[A.BASCULIN,t.WATER,-1,[[s.SEABED,0]]],[A.SANDILE,t.GROUND,t.DARK,[[s.DESERT,1,[a.DAWN,a.DAY]],[s.DESERT,0,[a.DUSK,a.NIGHT]]]],[A.KROKOROK,t.GROUND,t.DARK,[[s.DESERT,1,[a.DAWN,a.DAY]],[s.DESERT,0,[a.DUSK,a.NIGHT]]]],[A.KROOKODILE,t.GROUND,t.DARK,[[s.DESERT,1,[a.DAWN,a.DAY]],[s.DESERT,0,[a.DUSK,a.NIGHT]],[s.DESERT,5,[a.DUSK,a.NIGHT]]]],[A.DARUMAKA,t.FIRE,-1,[[s.DESERT,2]]],[A.DARMANITAN,t.FIRE,-1,[[s.DESERT,2],[s.DESERT,5]]],[A.MARACTUS,t.GRASS,-1,[[s.DESERT,1],[s.DESERT,5]]],[A.DWEBBLE,t.BUG,t.ROCK,[[s.BEACH,0]]],[A.CRUSTLE,t.BUG,t.ROCK,[[s.BEACH,0],[s.BEACH,5]]],[A.SCRAGGY,t.DARK,t.FIGHTING,[[s.DOJO,1],[s.CONSTRUCTION_SITE,1]]],[A.SCRAFTY,t.DARK,t.FIGHTING,[[s.DOJO,1],[s.DOJO,5],[s.CONSTRUCTION_SITE,1]]],[A.SIGILYPH,t.PSYCHIC,t.FLYING,[[s.RUINS,1],[s.RUINS,5],[s.SPACE,2]]],[A.YAMASK,t.GHOST,-1,[[s.GRAVEYARD,1],[s.TEMPLE,0]]],[A.COFAGRIGUS,t.GHOST,-1,[[s.GRAVEYARD,1],[s.TEMPLE,0],[s.TEMPLE,5]]],[A.TIRTOUGA,t.WATER,t.ROCK,[[s.SEA,3],[s.BEACH,3]]],[A.CARRACOSTA,t.WATER,t.ROCK,[[s.SEA,3],[s.BEACH,3],[s.BEACH,6]]],[A.ARCHEN,t.ROCK,t.FLYING,[[s.RUINS,3]]],[A.ARCHEOPS,t.ROCK,t.FLYING,[[s.MOUNTAIN,3],[s.RUINS,3],[s.RUINS,6]]],[A.TRUBBISH,t.POISON,-1,[[s.SLUM,0]]],[A.GARBODOR,t.POISON,-1,[[s.SLUM,0],[s.SLUM,5]]],[A.ZORUA,t.DARK,-1,[[s.ABYSS,2]]],[A.ZOROARK,t.DARK,-1,[[s.ABYSS,2],[s.ABYSS,5]]],[A.MINCCINO,t.NORMAL,-1,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.MEADOW,0,[a.DAWN,a.DAY]]]],[A.CINCCINO,t.NORMAL,-1,[[s.MEADOW,5,[a.DAWN,a.DAY]]]],[A.GOTHITA,t.PSYCHIC,-1,[[s.RUINS,2]]],[A.GOTHORITA,t.PSYCHIC,-1,[[s.RUINS,2]]],[A.GOTHITELLE,t.PSYCHIC,-1,[[s.RUINS,2],[s.RUINS,5]]],[A.SOLOSIS,t.PSYCHIC,-1,[[s.SPACE,2],[s.LABORATORY,1]]],[A.DUOSION,t.PSYCHIC,-1,[[s.SPACE,2],[s.LABORATORY,1]]],[A.REUNICLUS,t.PSYCHIC,-1,[[s.SPACE,2],[s.SPACE,5],[s.LABORATORY,1],[s.LABORATORY,5]]],[A.DUCKLETT,t.WATER,t.FLYING,[[s.LAKE,0,[a.DAWN,a.DAY]]]],[A.SWANNA,t.WATER,t.FLYING,[[s.LAKE,0,[a.DAWN,a.DAY]],[s.LAKE,5,[a.DAWN,a.DAY]]]],[A.VANILLITE,t.ICE,-1,[[s.ICE_CAVE,0]]],[A.VANILLISH,t.ICE,-1,[[s.ICE_CAVE,0]]],[A.VANILLUXE,t.ICE,-1,[[s.ICE_CAVE,0],[s.ICE_CAVE,5]]],[A.DEERLING,t.NORMAL,t.GRASS,[[s.FOREST,0,[a.DAWN,a.DAY]]]],[A.SAWSBUCK,t.NORMAL,t.GRASS,[[s.FOREST,0,[a.DAWN,a.DAY]],[s.FOREST,5,[a.DAWN,a.DAY]]]],[A.EMOLGA,t.ELECTRIC,t.FLYING,[[s.POWER_PLANT,1]]],[A.KARRABLAST,t.BUG,-1,[[s.FOREST,2]]],[A.ESCAVALIER,t.BUG,t.STEEL,[[s.FOREST,6]]],[A.FOONGUS,t.GRASS,t.POISON,[[s.GRASS,1,[a.DUSK,a.NIGHT]],[s.JUNGLE,2,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[A.AMOONGUSS,t.GRASS,t.POISON,[[s.GRASS,1,[a.DUSK,a.NIGHT]],[s.JUNGLE,2,[a.DAWN,a.DAY]],[s.JUNGLE,0,[a.DUSK,a.NIGHT]],[s.JUNGLE,6,[a.DAWN,a.DAY]],[s.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[A.FRILLISH,t.WATER,t.GHOST,[[s.SEABED,0]]],[A.JELLICENT,t.WATER,t.GHOST,[[s.SEABED,0],[s.SEABED,5]]],[A.ALOMOMOLA,t.WATER,-1,[[s.SEABED,2],[s.SEABED,5]]],[A.JOLTIK,t.BUG,t.ELECTRIC,[[s.JUNGLE,1]]],[A.GALVANTULA,t.BUG,t.ELECTRIC,[[s.JUNGLE,1],[s.JUNGLE,5]]],[A.FERROSEED,t.GRASS,t.STEEL,[[s.CAVE,2]]],[A.FERROTHORN,t.GRASS,t.STEEL,[[s.CAVE,2],[s.CAVE,6]]],[A.KLINK,t.STEEL,-1,[[s.FACTORY,0],[s.LABORATORY,0]]],[A.KLANG,t.STEEL,-1,[[s.FACTORY,0],[s.LABORATORY,0]]],[A.KLINKLANG,t.STEEL,-1,[[s.FACTORY,0],[s.FACTORY,5],[s.LABORATORY,0],[s.LABORATORY,5]]],[A.TYNAMO,t.ELECTRIC,-1,[[s.SEABED,2]]],[A.EELEKTRIK,t.ELECTRIC,-1,[[s.SEABED,2]]],[A.EELEKTROSS,t.ELECTRIC,-1,[[s.SEABED,6]]],[A.ELGYEM,t.PSYCHIC,-1,[[s.RUINS,0],[s.SPACE,1]]],[A.BEHEEYEM,t.PSYCHIC,-1,[[s.RUINS,0],[s.RUINS,5],[s.SPACE,1]]],[A.LITWICK,t.GHOST,t.FIRE,[[s.GRAVEYARD,0],[s.TEMPLE,1]]],[A.LAMPENT,t.GHOST,t.FIRE,[[s.GRAVEYARD,0],[s.TEMPLE,1]]],[A.CHANDELURE,t.GHOST,t.FIRE,[[s.GRAVEYARD,5]]],[A.AXEW,t.DRAGON,-1,[[s.MOUNTAIN,3],[s.WASTELAND,0]]],[A.FRAXURE,t.DRAGON,-1,[[s.MOUNTAIN,3],[s.WASTELAND,0]]],[A.HAXORUS,t.DRAGON,-1,[[s.WASTELAND,0],[s.WASTELAND,5]]],[A.CUBCHOO,t.ICE,-1,[[s.ICE_CAVE,0]]],[A.BEARTIC,t.ICE,-1,[[s.ICE_CAVE,0],[s.ICE_CAVE,5]]],[A.CRYOGONAL,t.ICE,-1,[[s.ICE_CAVE,2],[s.ICE_CAVE,5]]],[A.SHELMET,t.BUG,-1,[[s.FOREST,2]]],[A.ACCELGOR,t.BUG,-1,[[s.FOREST,6]]],[A.STUNFISK,t.GROUND,t.ELECTRIC,[[s.SWAMP,1],[s.SWAMP,5]]],[A.MIENFOO,t.FIGHTING,-1,[[s.DOJO,1]]],[A.MIENSHAO,t.FIGHTING,-1,[[s.DOJO,1],[s.DOJO,5]]],[A.DRUDDIGON,t.DRAGON,-1,[[s.WASTELAND,3],[s.WASTELAND,6]]],[A.GOLETT,t.GROUND,t.GHOST,[[s.TEMPLE,0]]],[A.GOLURK,t.GROUND,t.GHOST,[[s.TEMPLE,0],[s.TEMPLE,5]]],[A.PAWNIARD,t.DARK,t.STEEL,[[s.ABYSS,0]]],[A.BISHARP,t.DARK,t.STEEL,[[s.ABYSS,0]]],[A.BOUFFALANT,t.NORMAL,-1,[[s.MEADOW,1,[a.DAWN,a.DAY]],[s.MEADOW,5,[a.DAWN,a.DAY]]]],[A.RUFFLET,t.NORMAL,t.FLYING,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[A.BRAVIARY,t.NORMAL,t.FLYING,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[A.VULLABY,t.DARK,t.FLYING,[[s.MOUNTAIN,1,[a.DUSK,a.NIGHT]]]],[A.MANDIBUZZ,t.DARK,t.FLYING,[[s.MOUNTAIN,1,[a.DUSK,a.NIGHT]],[s.MOUNTAIN,5,[a.DUSK,a.NIGHT]]]],[A.HEATMOR,t.FIRE,-1,[[s.VOLCANO,1],[s.VOLCANO,5]]],[A.DURANT,t.BUG,t.STEEL,[[s.FOREST,3],[s.FOREST,6]]],[A.DEINO,t.DARK,t.DRAGON,[[s.WASTELAND,1,[a.DUSK,a.NIGHT]],[s.ABYSS,2]]],[A.ZWEILOUS,t.DARK,t.DRAGON,[[s.WASTELAND,1,[a.DUSK,a.NIGHT]],[s.ABYSS,2]]],[A.HYDREIGON,t.DARK,t.DRAGON,[[s.WASTELAND,1,[a.DUSK,a.NIGHT]],[s.ABYSS,2],[s.ABYSS,5]]],[A.LARVESTA,t.BUG,t.FIRE,[[s.VOLCANO,3]]],[A.VOLCARONA,t.BUG,t.FIRE,[[s.VOLCANO,3],[s.VOLCANO,6]]],[A.COBALION,t.STEEL,t.FIGHTING,[[s.CONSTRUCTION_SITE,4],[s.CONSTRUCTION_SITE,7]]],[A.TERRAKION,t.ROCK,t.FIGHTING,[[s.DOJO,4],[s.DOJO,7]]],[A.VIRIZION,t.GRASS,t.FIGHTING,[[s.GRASS,4],[s.GRASS,7]]],[A.TORNADUS,t.FLYING,-1,[[s.MOUNTAIN,4],[s.MOUNTAIN,7]]],[A.THUNDURUS,t.ELECTRIC,t.FLYING,[[s.POWER_PLANT,4],[s.POWER_PLANT,7]]],[A.RESHIRAM,t.DRAGON,t.FIRE,[[s.VOLCANO,8]]],[A.ZEKROM,t.DRAGON,t.ELECTRIC,[[s.POWER_PLANT,8]]],[A.LANDORUS,t.GROUND,t.FLYING,[[s.BADLANDS,4],[s.BADLANDS,7]]],[A.KYUREM,t.DRAGON,t.ICE,[[s.ICE_CAVE,8]]],[A.KELDEO,t.WATER,t.FIGHTING,[[s.BEACH,4],[s.BEACH,7]]],[A.MELOETTA,t.NORMAL,t.PSYCHIC,[[s.MEADOW,4],[s.MEADOW,7]]],[A.GENESECT,t.BUG,t.STEEL,[[s.FACTORY,4],[s.FACTORY,7]]],[A.CHESPIN,t.GRASS,-1,[[s.FOREST,2]]],[A.QUILLADIN,t.GRASS,-1,[[s.FOREST,2]]],[A.CHESNAUGHT,t.GRASS,t.FIGHTING,[[s.FOREST,2],[s.FOREST,6]]],[A.FENNEKIN,t.FIRE,-1,[[s.VOLCANO,2]]],[A.BRAIXEN,t.FIRE,-1,[[s.VOLCANO,2]]],[A.DELPHOX,t.FIRE,t.PSYCHIC,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.FROAKIE,t.WATER,-1,[[s.LAKE,2]]],[A.FROGADIER,t.WATER,-1,[[s.LAKE,2]]],[A.GRENINJA,t.WATER,t.DARK,[[s.LAKE,2],[s.LAKE,6]]],[A.BUNNELBY,t.NORMAL,-1,[[s.CAVE,0]]],[A.DIGGERSBY,t.NORMAL,t.GROUND,[[s.CAVE,0],[s.CAVE,5]]],[A.FLETCHLING,t.NORMAL,t.FLYING,[[s.TOWN,0],[s.PLAINS,1],[s.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[A.FLETCHINDER,t.FIRE,t.FLYING,[[s.PLAINS,1],[s.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[A.TALONFLAME,t.FIRE,t.FLYING,[[s.PLAINS,1],[s.MOUNTAIN,0,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[A.SCATTERBUG,t.BUG,-1,[[s.TOWN,0,[a.DAWN,a.DAY]]]],[A.SPEWPA,t.BUG,-1,[[s.TOWN,0,[a.DAWN,a.DAY]]]],[A.VIVILLON,t.BUG,t.FLYING,[[s.FOREST,0,[a.DAWN,a.DAY]]]],[A.LITLEO,t.FIRE,t.NORMAL,[[s.JUNGLE,1]]],[A.PYROAR,t.FIRE,t.NORMAL,[[s.JUNGLE,1],[s.JUNGLE,5]]],[A.FLABEBE,t.FAIRY,-1,[[s.MEADOW,0]]],[A.FLOETTE,t.FAIRY,-1,[[s.MEADOW,0]]],[A.FLORGES,t.FAIRY,-1,[[s.MEADOW,5]]],[A.SKIDDO,t.GRASS,-1,[[s.MOUNTAIN,0]]],[A.GOGOAT,t.GRASS,-1,[[s.MOUNTAIN,0],[s.MOUNTAIN,5]]],[A.PANCHAM,t.FIGHTING,-1,[[s.DOJO,2],[s.JUNGLE,1,[a.DUSK,a.NIGHT]]]],[A.PANGORO,t.FIGHTING,t.DARK,[[s.DOJO,2],[s.DOJO,6],[s.JUNGLE,1,[a.DUSK,a.NIGHT]],[s.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[A.FURFROU,t.NORMAL,-1,[[s.METROPOLIS,1],[s.METROPOLIS,5]]],[A.ESPURR,t.PSYCHIC,-1,[[s.METROPOLIS,1,[a.DUSK,a.NIGHT]]]],[A.MEOWSTIC,t.PSYCHIC,-1,[[s.METROPOLIS,1,[a.DUSK,a.NIGHT]],[s.METROPOLIS,5,[a.DUSK,a.NIGHT]]]],[A.HONEDGE,t.STEEL,t.GHOST,[[s.TEMPLE,0]]],[A.DOUBLADE,t.STEEL,t.GHOST,[[s.TEMPLE,0]]],[A.AEGISLASH,t.STEEL,t.GHOST,[[s.TEMPLE,5]]],[A.SPRITZEE,t.FAIRY,-1,[[s.FAIRY_CAVE,0]]],[A.AROMATISSE,t.FAIRY,-1,[[s.FAIRY_CAVE,0],[s.FAIRY_CAVE,5]]],[A.SWIRLIX,t.FAIRY,-1,[[s.FAIRY_CAVE,0]]],[A.SLURPUFF,t.FAIRY,-1,[[s.FAIRY_CAVE,0],[s.FAIRY_CAVE,5]]],[A.INKAY,t.DARK,t.PSYCHIC,[[s.SEA,0,[a.DUSK,a.NIGHT]]]],[A.MALAMAR,t.DARK,t.PSYCHIC,[[s.SEA,0,[a.DUSK,a.NIGHT]],[s.SEA,5,[a.DUSK,a.NIGHT]]]],[A.BINACLE,t.ROCK,t.WATER,[[s.BEACH,0]]],[A.BARBARACLE,t.ROCK,t.WATER,[[s.BEACH,0],[s.BEACH,5]]],[A.SKRELP,t.POISON,t.WATER,[[s.SEABED,1]]],[A.DRAGALGE,t.POISON,t.DRAGON,[[s.SEABED,1],[s.SEABED,5]]],[A.CLAUNCHER,t.WATER,-1,[[s.BEACH,1]]],[A.CLAWITZER,t.WATER,-1,[[s.BEACH,1],[s.BEACH,5]]],[A.HELIOPTILE,t.ELECTRIC,t.NORMAL,[[s.DESERT,1,[a.DAWN,a.DAY]]]],[A.HELIOLISK,t.ELECTRIC,t.NORMAL,[[s.DESERT,5,[a.DAWN,a.DAY]]]],[A.TYRUNT,t.ROCK,t.DRAGON,[[s.WASTELAND,3]]],[A.TYRANTRUM,t.ROCK,t.DRAGON,[[s.WASTELAND,3],[s.WASTELAND,6]]],[A.AMAURA,t.ROCK,t.ICE,[[s.ICE_CAVE,3]]],[A.AURORUS,t.ROCK,t.ICE,[[s.ICE_CAVE,3],[s.ICE_CAVE,6]]],[A.SYLVEON,t.FAIRY,-1,[[s.MEADOW,3],[s.MEADOW,6]]],[A.HAWLUCHA,t.FIGHTING,t.FLYING,[[s.MOUNTAIN,2],[s.MOUNTAIN,6]]],[A.DEDENNE,t.ELECTRIC,t.FAIRY,[[s.POWER_PLANT,0],[s.POWER_PLANT,5]]],[A.CARBINK,t.ROCK,t.FAIRY,[[s.CAVE,2],[s.FAIRY_CAVE,1],[s.FAIRY_CAVE,5]]],[A.GOOMY,t.DRAGON,-1,[[s.WASTELAND,0,[a.DAWN,a.DAY]]]],[A.SLIGGOO,t.DRAGON,-1,[[s.WASTELAND,0,[a.DAWN,a.DAY]]]],[A.GOODRA,t.DRAGON,-1,[[s.WASTELAND,0,[a.DAWN,a.DAY]],[s.WASTELAND,5,[a.DAWN,a.DAY]]]],[A.KLEFKI,t.STEEL,t.FAIRY,[[s.FACTORY,1],[s.FACTORY,5]]],[A.PHANTUMP,t.GHOST,t.GRASS,[[s.GRAVEYARD,0]]],[A.TREVENANT,t.GHOST,t.GRASS,[[s.GRAVEYARD,5]]],[A.PUMPKABOO,t.GHOST,t.GRASS,[[s.GRAVEYARD,0]]],[A.GOURGEIST,t.GHOST,t.GRASS,[[s.GRAVEYARD,5]]],[A.BERGMITE,t.ICE,-1,[[s.ICE_CAVE,0]]],[A.AVALUGG,t.ICE,-1,[[s.ICE_CAVE,0],[s.ICE_CAVE,5]]],[A.NOIBAT,t.FLYING,t.DRAGON,[[s.CAVE,1]]],[A.NOIVERN,t.FLYING,t.DRAGON,[[s.CAVE,1],[s.CAVE,5]]],[A.XERNEAS,t.FAIRY,-1,[[s.FAIRY_CAVE,8]]],[A.YVELTAL,t.DARK,t.FLYING,[[s.ABYSS,8]]],[A.ZYGARDE,t.DRAGON,t.GROUND,[[s.LABORATORY,7]]],[A.DIANCIE,t.ROCK,t.FAIRY,[[s.FAIRY_CAVE,4],[s.FAIRY_CAVE,7]]],[A.HOOPA,t.PSYCHIC,t.GHOST,[[s.TEMPLE,4],[s.TEMPLE,7]]],[A.VOLCANION,t.FIRE,t.WATER,[[s.VOLCANO,4],[s.VOLCANO,7]]],[A.ROWLET,t.GRASS,t.FLYING,[[s.FOREST,2]]],[A.DARTRIX,t.GRASS,t.FLYING,[[s.FOREST,2]]],[A.DECIDUEYE,t.GRASS,t.GHOST,[[s.FOREST,2],[s.FOREST,6]]],[A.LITTEN,t.FIRE,-1,[[s.VOLCANO,2]]],[A.TORRACAT,t.FIRE,-1,[[s.VOLCANO,2]]],[A.INCINEROAR,t.FIRE,t.DARK,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.POPPLIO,t.WATER,-1,[[s.SEA,2]]],[A.BRIONNE,t.WATER,-1,[[s.SEA,2]]],[A.PRIMARINA,t.WATER,t.FAIRY,[[s.SEA,2],[s.SEA,6]]],[A.PIKIPEK,t.NORMAL,t.FLYING,[[s.JUNGLE,0]]],[A.TRUMBEAK,t.NORMAL,t.FLYING,[[s.JUNGLE,0]]],[A.TOUCANNON,t.NORMAL,t.FLYING,[[s.JUNGLE,0],[s.JUNGLE,5]]],[A.YUNGOOS,t.NORMAL,-1,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.PLAINS,0,[a.DAWN,a.DAY]]]],[A.GUMSHOOS,t.NORMAL,-1,[[s.PLAINS,0,[a.DAWN,a.DAY]],[s.PLAINS,5,[a.DAWN,a.DAY]]]],[A.GRUBBIN,t.BUG,-1,[[s.POWER_PLANT,0]]],[A.CHARJABUG,t.BUG,t.ELECTRIC,[[s.POWER_PLANT,0]]],[A.VIKAVOLT,t.BUG,t.ELECTRIC,[[s.POWER_PLANT,5]]],[A.CRABRAWLER,t.FIGHTING,-1,[[s.ICE_CAVE,0]]],[A.CRABOMINABLE,t.FIGHTING,t.ICE,[[s.ICE_CAVE,5]]],[A.ORICORIO,t.FIRE,t.FLYING,[[s.MEADOW,1],[s.ISLAND,0],[s.ISLAND,5]]],[A.CUTIEFLY,t.BUG,t.FAIRY,[[s.MEADOW,0],[s.FAIRY_CAVE,0]]],[A.RIBOMBEE,t.BUG,t.FAIRY,[[s.MEADOW,0],[s.MEADOW,5],[s.FAIRY_CAVE,0],[s.FAIRY_CAVE,5]]],[A.ROCKRUFF,t.ROCK,-1,[[s.PLAINS,1,a.DAY],[s.FOREST,1,a.NIGHT],[s.CAVE,1,a.DUSK]]],[A.LYCANROC,t.ROCK,-1,[[s.PLAINS,1,a.DAY],[s.PLAINS,6,a.DAY],[s.FOREST,1,a.NIGHT],[s.FOREST,6,a.NIGHT],[s.CAVE,1,a.DUSK],[s.CAVE,6,a.DUSK]]],[A.WISHIWASHI,t.WATER,-1,[[s.LAKE,1],[s.LAKE,5]]],[A.MAREANIE,t.POISON,t.WATER,[[s.BEACH,0],[s.SWAMP,1]]],[A.TOXAPEX,t.POISON,t.WATER,[[s.BEACH,0],[s.BEACH,5],[s.SWAMP,1],[s.SWAMP,5]]],[A.MUDBRAY,t.GROUND,-1,[[s.BADLANDS,0]]],[A.MUDSDALE,t.GROUND,-1,[[s.BADLANDS,0],[s.BADLANDS,5]]],[A.DEWPIDER,t.WATER,t.BUG,[[s.LAKE,1,[a.DAWN,a.DAY]]]],[A.ARAQUANID,t.WATER,t.BUG,[[s.LAKE,1,[a.DAWN,a.DAY]],[s.LAKE,5,[a.DAWN,a.DAY]]]],[A.FOMANTIS,t.GRASS,-1,[[s.TALL_GRASS,0],[s.JUNGLE,1]]],[A.LURANTIS,t.GRASS,-1,[[s.TALL_GRASS,0],[s.TALL_GRASS,5],[s.JUNGLE,1],[s.JUNGLE,5]]],[A.MORELULL,t.GRASS,t.FAIRY,[[s.FAIRY_CAVE,0]]],[A.SHIINOTIC,t.GRASS,t.FAIRY,[[s.FAIRY_CAVE,0],[s.FAIRY_CAVE,5]]],[A.SALANDIT,t.POISON,t.FIRE,[[s.VOLCANO,0]]],[A.SALAZZLE,t.POISON,t.FIRE,[[s.VOLCANO,0],[s.VOLCANO,5]]],[A.STUFFUL,t.NORMAL,t.FIGHTING,[[s.DOJO,0]]],[A.BEWEAR,t.NORMAL,t.FIGHTING,[[s.DOJO,0],[s.DOJO,5]]],[A.BOUNSWEET,t.GRASS,-1,[[s.TALL_GRASS,0,[a.DAWN,a.DAY]]]],[A.STEENEE,t.GRASS,-1,[[s.TALL_GRASS,0,[a.DAWN,a.DAY]]]],[A.TSAREENA,t.GRASS,-1,[[s.TALL_GRASS,0,[a.DAWN,a.DAY]],[s.TALL_GRASS,5,[a.DAWN,a.DAY]]]],[A.COMFEY,t.FAIRY,-1,[[s.FAIRY_CAVE,1],[s.FAIRY_CAVE,5]]],[A.ORANGURU,t.NORMAL,t.PSYCHIC,[[s.JUNGLE,2,[a.DUSK,a.NIGHT]]]],[A.PASSIMIAN,t.FIGHTING,-1,[[s.JUNGLE,2,[a.DAWN,a.DAY]]]],[A.WIMPOD,t.BUG,t.WATER,[[s.CAVE,1]]],[A.GOLISOPOD,t.BUG,t.WATER,[[s.CAVE,1],[s.CAVE,5]]],[A.SANDYGAST,t.GHOST,t.GROUND,[[s.BEACH,1]]],[A.PALOSSAND,t.GHOST,t.GROUND,[[s.BEACH,1],[s.BEACH,5]]],[A.PYUKUMUKU,t.WATER,-1,[[s.SEABED,3],[s.SEABED,6]]],[A.TYPE_NULL,t.NORMAL,-1,[[s.LABORATORY,4]]],[A.SILVALLY,t.NORMAL,-1,[[s.LABORATORY,7]]],[A.MINIOR,t.ROCK,t.FLYING,[[s.SPACE,0],[s.SPACE,5]]],[A.KOMALA,t.NORMAL,-1,[[s.JUNGLE,1,[a.DAWN,a.DAY]],[s.JUNGLE,5,[a.DAWN,a.DAY]]]],[A.TURTONATOR,t.FIRE,t.DRAGON,[[s.VOLCANO,1],[s.VOLCANO,5]]],[A.TOGEDEMARU,t.ELECTRIC,t.STEEL,[[s.POWER_PLANT,1],[s.POWER_PLANT,5]]],[A.MIMIKYU,t.GHOST,t.FAIRY,[[s.GRAVEYARD,2],[s.GRAVEYARD,5]]],[A.BRUXISH,t.WATER,t.PSYCHIC,[[s.ISLAND,1],[s.ISLAND,5]]],[A.DRAMPA,t.NORMAL,t.DRAGON,[[s.WASTELAND,1],[s.WASTELAND,5]]],[A.DHELMISE,t.GHOST,t.GRASS,[[s.SEABED,2],[s.SEABED,6]]],[A.JANGMO_O,t.DRAGON,-1,[[s.WASTELAND,0,[a.DAWN,a.DAY]]]],[A.HAKAMO_O,t.DRAGON,t.FIGHTING,[[s.WASTELAND,0,[a.DAWN,a.DAY]]]],[A.KOMMO_O,t.DRAGON,t.FIGHTING,[[s.WASTELAND,0,[a.DAWN,a.DAY]],[s.WASTELAND,5,[a.DAWN,a.DAY]]]],[A.TAPU_KOKO,t.ELECTRIC,t.FAIRY,[[s.TEMPLE,4],[s.TEMPLE,7]]],[A.TAPU_LELE,t.PSYCHIC,t.FAIRY,[[s.JUNGLE,4],[s.JUNGLE,7]]],[A.TAPU_BULU,t.GRASS,t.FAIRY,[[s.DESERT,4],[s.DESERT,7]]],[A.TAPU_FINI,t.WATER,t.FAIRY,[[s.BEACH,4],[s.BEACH,7]]],[A.COSMOG,t.PSYCHIC,-1,[[s.SPACE,4]]],[A.COSMOEM,t.PSYCHIC,-1,[[s.SPACE,4]]],[A.SOLGALEO,t.PSYCHIC,t.STEEL,[[s.SPACE,8,a.DAY]]],[A.LUNALA,t.PSYCHIC,t.GHOST,[[s.SPACE,8,a.NIGHT]]],[A.NIHILEGO,t.ROCK,t.POISON,[[s.SEABED,4],[s.SEABED,7]]],[A.BUZZWOLE,t.BUG,t.FIGHTING,[[s.JUNGLE,4],[s.JUNGLE,7]]],[A.PHEROMOSA,t.BUG,t.FIGHTING,[[s.DESERT,4],[s.DESERT,7]]],[A.XURKITREE,t.ELECTRIC,-1,[[s.POWER_PLANT,4],[s.POWER_PLANT,7]]],[A.CELESTEELA,t.STEEL,t.FLYING,[[s.SPACE,4],[s.SPACE,7]]],[A.KARTANA,t.GRASS,t.STEEL,[[s.FOREST,4],[s.FOREST,7]]],[A.GUZZLORD,t.DARK,t.DRAGON,[[s.SLUM,4],[s.SLUM,7]]],[A.NECROZMA,t.PSYCHIC,-1,[[s.SPACE,8]]],[A.MAGEARNA,t.STEEL,t.FAIRY,[[s.FACTORY,4],[s.FACTORY,7]]],[A.MARSHADOW,t.FIGHTING,t.GHOST,[[s.GRAVEYARD,4],[s.GRAVEYARD,7]]],[A.POIPOLE,t.POISON,-1,[[s.SWAMP,4]]],[A.NAGANADEL,t.POISON,t.DRAGON,[[s.SWAMP,7]]],[A.STAKATAKA,t.ROCK,t.STEEL,[[s.CONSTRUCTION_SITE,4],[s.CONSTRUCTION_SITE,7]]],[A.BLACEPHALON,t.FIRE,t.GHOST,[[s.ISLAND,4],[s.ISLAND,7]]],[A.ZERAORA,t.ELECTRIC,-1,[[s.POWER_PLANT,4],[s.POWER_PLANT,7]]],[A.MELTAN,t.STEEL,-1,[]],[A.MELMETAL,t.STEEL,-1,[]],[A.GROOKEY,t.GRASS,-1,[[s.JUNGLE,2]]],[A.THWACKEY,t.GRASS,-1,[[s.JUNGLE,2]]],[A.RILLABOOM,t.GRASS,-1,[[s.JUNGLE,2],[s.JUNGLE,6]]],[A.SCORBUNNY,t.FIRE,-1,[[s.VOLCANO,2]]],[A.RABOOT,t.FIRE,-1,[[s.VOLCANO,2]]],[A.CINDERACE,t.FIRE,-1,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.SOBBLE,t.WATER,-1,[[s.LAKE,2]]],[A.DRIZZILE,t.WATER,-1,[[s.LAKE,2]]],[A.INTELEON,t.WATER,-1,[[s.LAKE,2],[s.LAKE,6]]],[A.SKWOVET,t.NORMAL,-1,[[s.TOWN,0,[a.DAWN,a.DAY]],[s.PLAINS,0,[a.DAWN,a.DAY]]]],[A.GREEDENT,t.NORMAL,-1,[[s.PLAINS,0,[a.DAWN,a.DAY]],[s.PLAINS,5,[a.DAWN,a.DAY]]]],[A.ROOKIDEE,t.FLYING,-1,[[s.TOWN,2],[s.PLAINS,2],[s.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[A.CORVISQUIRE,t.FLYING,-1,[[s.PLAINS,2],[s.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[A.CORVIKNIGHT,t.FLYING,t.STEEL,[[s.PLAINS,2],[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[A.BLIPBUG,t.BUG,-1,[[s.TOWN,0,[a.DUSK,a.NIGHT]]]],[A.DOTTLER,t.BUG,t.PSYCHIC,[[s.FOREST,1,[a.DUSK,a.NIGHT]]]],[A.ORBEETLE,t.BUG,t.PSYCHIC,[[s.FOREST,1,[a.DUSK,a.NIGHT]],[s.FOREST,5,[a.DUSK,a.NIGHT]]]],[A.NICKIT,t.DARK,-1,[[s.ABYSS,0]]],[A.THIEVUL,t.DARK,-1,[[s.ABYSS,0],[s.ABYSS,5]]],[A.GOSSIFLEUR,t.GRASS,-1,[[s.MEADOW,0]]],[A.ELDEGOSS,t.GRASS,-1,[[s.MEADOW,0]]],[A.WOOLOO,t.NORMAL,-1,[[s.TOWN,0],[s.MEADOW,0]]],[A.DUBWOOL,t.NORMAL,-1,[[s.MEADOW,0],[s.MEADOW,5]]],[A.CHEWTLE,t.WATER,-1,[[s.LAKE,0]]],[A.DREDNAW,t.WATER,t.ROCK,[[s.LAKE,0],[s.LAKE,5]]],[A.YAMPER,t.ELECTRIC,-1,[[s.METROPOLIS,0,[a.DAWN,a.DAY]]]],[A.BOLTUND,t.ELECTRIC,-1,[[s.METROPOLIS,0,[a.DAWN,a.DAY]],[s.METROPOLIS,5,[a.DAWN,a.DAY]]]],[A.ROLYCOLY,t.ROCK,-1,[[s.VOLCANO,0]]],[A.CARKOL,t.ROCK,t.FIRE,[[s.VOLCANO,0]]],[A.COALOSSAL,t.ROCK,t.FIRE,[[s.VOLCANO,0],[s.VOLCANO,5]]],[A.APPLIN,t.GRASS,t.DRAGON,[[s.MEADOW,2]]],[A.FLAPPLE,t.GRASS,t.DRAGON,[[s.MEADOW,6]]],[A.APPLETUN,t.GRASS,t.DRAGON,[[s.MEADOW,6]]],[A.SILICOBRA,t.GROUND,-1,[[s.DESERT,0]]],[A.SANDACONDA,t.GROUND,-1,[[s.DESERT,0],[s.DESERT,5]]],[A.CRAMORANT,t.FLYING,t.WATER,[[s.SEA,0,[a.DAWN,a.DAY]],[s.SEA,5,[a.DAWN,a.DAY]]]],[A.ARROKUDA,t.WATER,-1,[[s.SEABED,0]]],[A.BARRASKEWDA,t.WATER,-1,[[s.SEABED,0],[s.SEABED,5]]],[A.TOXEL,t.ELECTRIC,t.POISON,[]],[A.TOXTRICITY,t.ELECTRIC,t.POISON,[[s.SLUM,2,[a.DUSK,a.NIGHT]],[s.SLUM,6,[a.DUSK,a.NIGHT]]]],[A.SIZZLIPEDE,t.FIRE,t.BUG,[[s.BADLANDS,1,[a.DAWN,a.DAY]]]],[A.CENTISKORCH,t.FIRE,t.BUG,[[s.BADLANDS,1,[a.DAWN,a.DAY]],[s.BADLANDS,5,[a.DAWN,a.DAY]]]],[A.CLOBBOPUS,t.FIGHTING,-1,[[s.DOJO,0]]],[A.GRAPPLOCT,t.FIGHTING,-1,[[s.DOJO,0],[s.DOJO,5]]],[A.SINISTEA,t.GHOST,-1,[[s.GRAVEYARD,1]]],[A.POLTEAGEIST,t.GHOST,-1,[[s.GRAVEYARD,1],[s.GRAVEYARD,5]]],[A.HATENNA,t.PSYCHIC,-1,[[s.FAIRY_CAVE,1]]],[A.HATTREM,t.PSYCHIC,-1,[[s.FAIRY_CAVE,1]]],[A.HATTERENE,t.PSYCHIC,t.FAIRY,[[s.FAIRY_CAVE,1],[s.FAIRY_CAVE,5]]],[A.IMPIDIMP,t.DARK,t.FAIRY,[[s.ABYSS,0]]],[A.MORGREM,t.DARK,t.FAIRY,[[s.ABYSS,0]]],[A.GRIMMSNARL,t.DARK,t.FAIRY,[[s.ABYSS,0],[s.ABYSS,5]]],[A.OBSTAGOON,t.DARK,t.NORMAL,[[s.SLUM,2,[a.DUSK,a.NIGHT]],[s.SLUM,6,[a.DUSK,a.NIGHT]]]],[A.PERRSERKER,t.STEEL,-1,[[s.CONSTRUCTION_SITE,2,a.DUSK],[s.CONSTRUCTION_SITE,6,a.DUSK]]],[A.CURSOLA,t.GHOST,-1,[[s.SEABED,3],[s.SEABED,6]]],[A.SIRFETCHD,t.FIGHTING,-1,[[s.DOJO,6]]],[A.MR_RIME,t.ICE,t.PSYCHIC,[[s.SNOWY_FOREST,3],[s.SNOWY_FOREST,6]]],[A.RUNERIGUS,t.GROUND,t.GHOST,[[s.RUINS,3,[a.DUSK,a.NIGHT]],[s.RUINS,6,[a.DUSK,a.NIGHT]]]],[A.MILCERY,t.FAIRY,-1,[[s.FAIRY_CAVE,0]]],[A.ALCREMIE,t.FAIRY,-1,[[s.FAIRY_CAVE,0],[s.FAIRY_CAVE,5]]],[A.FALINKS,t.FIGHTING,-1,[[s.JUNGLE,1],[s.JUNGLE,5]]],[A.PINCURCHIN,t.ELECTRIC,-1,[[s.SEABED,1]]],[A.SNOM,t.ICE,t.BUG,[[s.ICE_CAVE,0],[s.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]]]],[A.FROSMOTH,t.ICE,t.BUG,[[s.ICE_CAVE,0],[s.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[s.SNOWY_FOREST,5,[a.DUSK,a.NIGHT]]]],[A.STONJOURNER,t.ROCK,-1,[[s.RUINS,2]]],[A.EISCUE,t.ICE,-1,[[s.ICE_CAVE,1],[s.SNOWY_FOREST,0]]],[A.INDEEDEE,t.PSYCHIC,t.NORMAL,[[s.METROPOLIS,1,[a.DAWN,a.DAY]]]],[A.MORPEKO,t.ELECTRIC,t.DARK,[[s.METROPOLIS,2,[a.DUSK,a.NIGHT]]]],[A.CUFANT,t.STEEL,-1,[[s.BADLANDS,1]]],[A.COPPERAJAH,t.STEEL,-1,[[s.BADLANDS,1],[s.BADLANDS,5]]],[A.DRACOZOLT,t.ELECTRIC,t.DRAGON,[[s.WASTELAND,3],[s.WASTELAND,6]]],[A.ARCTOZOLT,t.ELECTRIC,t.ICE,[[s.SNOWY_FOREST,3],[s.SNOWY_FOREST,6]]],[A.DRACOVISH,t.WATER,t.DRAGON,[[s.WASTELAND,3],[s.WASTELAND,6]]],[A.ARCTOVISH,t.WATER,t.ICE,[[s.SEABED,3],[s.SEABED,6]]],[A.DURALUDON,t.STEEL,t.DRAGON,[[s.CONSTRUCTION_SITE,2]]],[A.DREEPY,t.DRAGON,t.GHOST,[[s.WASTELAND,2,[a.DUSK,a.NIGHT]]]],[A.DRAKLOAK,t.DRAGON,t.GHOST,[[s.WASTELAND,2,[a.DUSK,a.NIGHT]]]],[A.DRAGAPULT,t.DRAGON,t.GHOST,[[s.WASTELAND,2,[a.DUSK,a.NIGHT]],[s.WASTELAND,5,[a.DUSK,a.NIGHT]]]],[A.ZACIAN,t.FAIRY,-1,[[s.SNOWY_FOREST,8]]],[A.ZAMAZENTA,t.FIGHTING,-1,[[s.DOJO,8]]],[A.ETERNATUS,t.POISON,t.DRAGON,[[s.END,5]]],[A.KUBFU,t.FIGHTING,-1,[[s.DOJO,4]]],[A.URSHIFU,t.FIGHTING,t.DARK,[[s.DOJO,7]]],[A.ZARUDE,t.DARK,t.GRASS,[[s.JUNGLE,4],[s.JUNGLE,7]]],[A.REGIELEKI,t.ELECTRIC,-1,[[s.POWER_PLANT,4],[s.POWER_PLANT,7]]],[A.REGIDRAGO,t.DRAGON,-1,[[s.WASTELAND,4],[s.WASTELAND,7]]],[A.GLASTRIER,t.ICE,-1,[[s.SNOWY_FOREST,4],[s.SNOWY_FOREST,7]]],[A.SPECTRIER,t.GHOST,-1,[[s.GRAVEYARD,4],[s.GRAVEYARD,7]]],[A.CALYREX,t.PSYCHIC,t.GRASS,[[s.FOREST,8]]],[A.WYRDEER,t.NORMAL,t.PSYCHIC,[[s.SNOWY_FOREST,5,[a.DAWN,a.DAY]]]],[A.KLEAVOR,t.BUG,t.ROCK,[[s.JUNGLE,3],[s.JUNGLE,8]]],[A.URSALUNA,t.GROUND,t.NORMAL,[[s.SNOWY_FOREST,5]]],[A.BASCULEGION,t.WATER,t.GHOST,[[s.SEABED,6]]],[A.SNEASLER,t.FIGHTING,t.POISON,[[s.SNOWY_FOREST,6,[a.DAWN,a.DAY]]]],[A.OVERQWIL,t.DARK,t.POISON,[[s.SEABED,6]]],[A.ENAMORUS,t.FAIRY,t.FLYING,[[s.FAIRY_CAVE,4],[s.FAIRY_CAVE,7]]],[A.SPRIGATITO,t.GRASS,-1,[[s.MEADOW,2]]],[A.FLORAGATO,t.GRASS,-1,[[s.MEADOW,2]]],[A.MEOWSCARADA,t.GRASS,t.DARK,[[s.MEADOW,2],[s.MEADOW,6]]],[A.FUECOCO,t.FIRE,-1,[[s.GRAVEYARD,2]]],[A.CROCALOR,t.FIRE,-1,[[s.GRAVEYARD,2]]],[A.SKELEDIRGE,t.FIRE,t.GHOST,[[s.GRAVEYARD,2],[s.GRAVEYARD,6]]],[A.QUAXLY,t.WATER,-1,[[s.BEACH,2]]],[A.QUAXWELL,t.WATER,-1,[[s.BEACH,2]]],[A.QUAQUAVAL,t.WATER,t.FIGHTING,[[s.BEACH,2],[s.BEACH,6]]],[A.LECHONK,t.NORMAL,-1,[[s.TOWN,0],[s.PLAINS,0]]],[A.OINKOLOGNE,t.NORMAL,-1,[[s.PLAINS,0],[s.PLAINS,5]]],[A.TAROUNTULA,t.BUG,-1,[[s.FOREST,0]]],[A.SPIDOPS,t.BUG,-1,[[s.FOREST,0],[s.FOREST,5]]],[A.NYMBLE,t.BUG,-1,[[s.TALL_GRASS,0],[s.FOREST,0]]],[A.LOKIX,t.BUG,t.DARK,[[s.TALL_GRASS,0],[s.TALL_GRASS,5],[s.FOREST,0],[s.FOREST,5]]],[A.PAWMI,t.ELECTRIC,-1,[[s.TOWN,1,[a.DAWN,a.DAY]],[s.PLAINS,1,[a.DAWN,a.DAY]],[s.POWER_PLANT,0]]],[A.PAWMO,t.ELECTRIC,t.FIGHTING,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.POWER_PLANT,0]]],[A.PAWMOT,t.ELECTRIC,t.FIGHTING,[[s.PLAINS,1,[a.DAWN,a.DAY]],[s.PLAINS,6,[a.DAWN,a.DAY]],[s.POWER_PLANT,0],[s.POWER_PLANT,5]]],[A.TANDEMAUS,t.NORMAL,-1,[[s.TOWN,2,[a.DAWN,a.DAY]],[s.METROPOLIS,2,[a.DAWN,a.DAY]]]],[A.MAUSHOLD,t.NORMAL,-1,[[s.METROPOLIS,2,[a.DAWN,a.DAY]],[s.METROPOLIS,6,[a.DAWN,a.DAY]]]],[A.FIDOUGH,t.FAIRY,-1,[[s.TOWN,1],[s.METROPOLIS,1]]],[A.DACHSBUN,t.FAIRY,-1,[[s.METROPOLIS,1],[s.METROPOLIS,5]]],[A.SMOLIV,t.GRASS,t.NORMAL,[[s.MEADOW,1,[a.DAWN,a.DAY]]]],[A.DOLLIV,t.GRASS,t.NORMAL,[[s.MEADOW,1,[a.DAWN,a.DAY]]]],[A.ARBOLIVA,t.GRASS,t.NORMAL,[[s.MEADOW,1,[a.DAWN,a.DAY]],[s.MEADOW,5,[a.DAWN,a.DAY]]]],[A.SQUAWKABILLY,t.NORMAL,t.FLYING,[[s.METROPOLIS,1],[s.FOREST,2]]],[A.NACLI,t.ROCK,-1,[[s.MOUNTAIN,1],[s.CAVE,0]]],[A.NACLSTACK,t.ROCK,-1,[[s.MOUNTAIN,1],[s.CAVE,0]]],[A.GARGANACL,t.ROCK,-1,[[s.MOUNTAIN,1],[s.MOUNTAIN,5],[s.CAVE,0],[s.CAVE,5]]],[A.CHARCADET,t.FIRE,-1,[[s.VOLCANO,2]]],[A.ARMAROUGE,t.FIRE,t.PSYCHIC,[[s.VOLCANO,2],[s.VOLCANO,6]]],[A.CERULEDGE,t.FIRE,t.GHOST,[[s.GRAVEYARD,2],[s.GRAVEYARD,6]]],[A.TADBULB,t.ELECTRIC,-1,[[s.POWER_PLANT,0]]],[A.BELLIBOLT,t.ELECTRIC,-1,[[s.POWER_PLANT,0],[s.POWER_PLANT,5]]],[A.WATTREL,t.ELECTRIC,t.FLYING,[[s.SEA,1]]],[A.KILOWATTREL,t.ELECTRIC,t.FLYING,[[s.SEA,1],[s.SEA,5]]],[A.MASCHIFF,t.DARK,-1,[[s.ABYSS,0]]],[A.MABOSSTIFF,t.DARK,-1,[[s.ABYSS,0],[s.ABYSS,5]]],[A.SHROODLE,t.POISON,t.NORMAL,[[s.FOREST,0]]],[A.GRAFAIAI,t.POISON,t.NORMAL,[[s.FOREST,0],[s.FOREST,5]]],[A.BRAMBLIN,t.GRASS,t.GHOST,[[s.DESERT,1]]],[A.BRAMBLEGHAST,t.GRASS,t.GHOST,[[s.DESERT,1],[s.DESERT,5]]],[A.TOEDSCOOL,t.GROUND,t.GRASS,[[s.FOREST,2]]],[A.TOEDSCRUEL,t.GROUND,t.GRASS,[[s.FOREST,2],[s.FOREST,6]]],[A.KLAWF,t.ROCK,-1,[[s.MOUNTAIN,2]]],[A.CAPSAKID,t.GRASS,-1,[[s.BADLANDS,1,[a.DAWN,a.DAY]]]],[A.SCOVILLAIN,t.GRASS,t.FIRE,[[s.BADLANDS,1,[a.DAWN,a.DAY]],[s.BADLANDS,5,[a.DAWN,a.DAY]]]],[A.RELLOR,t.BUG,-1,[[s.DESERT,0,[a.DAWN,a.DAY]]]],[A.RABSCA,t.BUG,t.PSYCHIC,[[s.DESERT,0,[a.DAWN,a.DAY]],[s.DESERT,5,[a.DAWN,a.DAY]]]],[A.FLITTLE,t.PSYCHIC,-1,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[A.ESPATHRA,t.PSYCHIC,-1,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]],[s.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[A.TINKATINK,t.FAIRY,t.STEEL,[[s.RUINS,1]]],[A.TINKATUFF,t.FAIRY,t.STEEL,[[s.RUINS,1]]],[A.TINKATON,t.FAIRY,t.STEEL,[[s.RUINS,1],[s.RUINS,5]]],[A.WIGLETT,t.WATER,-1,[[s.BEACH,0]]],[A.WUGTRIO,t.WATER,-1,[[s.BEACH,0]]],[A.BOMBIRDIER,t.FLYING,t.DARK,[[s.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[A.FINIZEN,t.WATER,-1,[[s.SEA,0,[a.DAWN,a.DAY]]]],[A.PALAFIN,t.WATER,-1,[[s.SEA,0,[a.DAWN,a.DAY]],[s.SEA,5,[a.DAWN,a.DAY]]]],[A.VAROOM,t.STEEL,t.POISON,[[s.METROPOLIS,2],[s.SLUM,2]]],[A.REVAVROOM,t.STEEL,t.POISON,[[s.METROPOLIS,2],[s.METROPOLIS,6],[s.SLUM,2],[s.SLUM,6]]],[A.CYCLIZAR,t.DRAGON,t.NORMAL,[[s.WASTELAND,1]]],[A.ORTHWORM,t.STEEL,-1,[[s.DESERT,1]]],[A.GLIMMET,t.ROCK,t.POISON,[[s.CAVE,2]]],[A.GLIMMORA,t.ROCK,t.POISON,[[s.CAVE,2],[s.CAVE,6]]],[A.GREAVARD,t.GHOST,-1,[[s.GRAVEYARD,0]]],[A.HOUNDSTONE,t.GHOST,-1,[[s.GRAVEYARD,0],[s.GRAVEYARD,5]]],[A.FLAMIGO,t.FLYING,t.FIGHTING,[[s.LAKE,1]]],[A.CETODDLE,t.ICE,-1,[[s.ICE_CAVE,1]]],[A.CETITAN,t.ICE,-1,[[s.ICE_CAVE,1],[s.ICE_CAVE,5]]],[A.VELUZA,t.WATER,t.PSYCHIC,[[s.SEABED,0]]],[A.DONDOZO,t.WATER,-1,[[s.SEABED,1],[s.SEABED,5]]],[A.TATSUGIRI,t.DRAGON,t.WATER,[[s.BEACH,2]]],[A.ANNIHILAPE,t.FIGHTING,t.GHOST,[[s.PLAINS,1,[a.DUSK,a.NIGHT]],[s.DOJO,0],[s.DOJO,5]]],[A.CLODSIRE,t.POISON,t.GROUND,[[s.SWAMP,0,[a.DUSK,a.NIGHT]],[s.SWAMP,5,[a.DUSK,a.NIGHT]]]],[A.FARIGIRAF,t.NORMAL,t.PSYCHIC,[[s.TALL_GRASS,2],[s.TALL_GRASS,6]]],[A.DUDUNSPARCE,t.NORMAL,-1,[[s.PLAINS,3],[s.PLAINS,6]]],[A.KINGAMBIT,t.DARK,t.STEEL,[[s.ABYSS,0],[s.ABYSS,5]]],[A.GREAT_TUSK,t.GROUND,t.FIGHTING,[[s.END,0]]],[A.SCREAM_TAIL,t.FAIRY,t.PSYCHIC,[[s.END,0]]],[A.BRUTE_BONNET,t.GRASS,t.DARK,[[s.END,0]]],[A.FLUTTER_MANE,t.GHOST,t.FAIRY,[[s.END,0]]],[A.SLITHER_WING,t.BUG,t.FIGHTING,[[s.END,0]]],[A.SANDY_SHOCKS,t.ELECTRIC,t.GROUND,[[s.END,0]]],[A.IRON_TREADS,t.GROUND,t.STEEL,[[s.END,0]]],[A.IRON_BUNDLE,t.ICE,t.WATER,[[s.END,0]]],[A.IRON_HANDS,t.FIGHTING,t.ELECTRIC,[[s.END,0]]],[A.IRON_JUGULIS,t.DARK,t.FLYING,[[s.END,0]]],[A.IRON_MOTH,t.FIRE,t.POISON,[[s.END,0]]],[A.IRON_THORNS,t.ROCK,t.ELECTRIC,[[s.END,0]]],[A.FRIGIBAX,t.DRAGON,t.ICE,[[s.WASTELAND,2]]],[A.ARCTIBAX,t.DRAGON,t.ICE,[[s.WASTELAND,2]]],[A.BAXCALIBUR,t.DRAGON,t.ICE,[[s.WASTELAND,2],[s.WASTELAND,5]]],[A.GIMMIGHOUL,t.GHOST,-1,[[s.TEMPLE,2]]],[A.GHOLDENGO,t.STEEL,t.GHOST,[[s.TEMPLE,2],[s.TEMPLE,6]]],[A.WO_CHIEN,t.DARK,t.GRASS,[[s.FOREST,4],[s.FOREST,7]]],[A.CHIEN_PAO,t.DARK,t.ICE,[[s.SNOWY_FOREST,4],[s.SNOWY_FOREST,7]]],[A.TING_LU,t.DARK,t.GROUND,[[s.MOUNTAIN,4],[s.MOUNTAIN,7]]],[A.CHI_YU,t.DARK,t.FIRE,[[s.VOLCANO,4],[s.VOLCANO,7]]],[A.ROARING_MOON,t.DRAGON,t.DARK,[[s.END,1]]],[A.IRON_VALIANT,t.FAIRY,t.FIGHTING,[[s.END,1]]],[A.KORAIDON,t.FIGHTING,t.DRAGON,[[s.RUINS,8]]],[A.MIRAIDON,t.ELECTRIC,t.DRAGON,[[s.LABORATORY,8]]],[A.WALKING_WAKE,t.WATER,t.DRAGON,[[s.END,2]]],[A.IRON_LEAVES,t.GRASS,t.PSYCHIC,[[s.END,2]]],[A.DIPPLIN,t.GRASS,t.DRAGON,[[s.MEADOW,2]]],[A.POLTCHAGEIST,t.GRASS,t.GHOST,[[s.BADLANDS,2]]],[A.SINISTCHA,t.GRASS,t.GHOST,[[s.BADLANDS,2],[s.BADLANDS,6]]],[A.OKIDOGI,t.POISON,t.FIGHTING,[[s.BADLANDS,4],[s.BADLANDS,7]]],[A.MUNKIDORI,t.POISON,t.PSYCHIC,[[s.JUNGLE,4],[s.JUNGLE,7]]],[A.FEZANDIPITI,t.POISON,t.FAIRY,[[s.RUINS,4],[s.RUINS,7]]],[A.OGERPON,t.GRASS,-1,[[s.MOUNTAIN,4],[s.MOUNTAIN,7]]],[A.ARCHALUDON,t.STEEL,t.DRAGON,[[s.CONSTRUCTION_SITE,6]]],[A.HYDRAPPLE,t.GRASS,t.DRAGON,[[s.MEADOW,6]]],[A.GOUGING_FIRE,t.FIRE,t.DRAGON,[[s.END,2]]],[A.RAGING_BOLT,t.ELECTRIC,t.DRAGON,[[s.END,2]]],[A.IRON_BOULDER,t.ROCK,t.PSYCHIC,[[s.END,2]]],[A.IRON_CROWN,t.STEEL,t.PSYCHIC,[[s.END,2]]],[A.TERAPAGOS,t.NORMAL,-1,[[s.CAVE,8]]],[A.PECHARUNT,t.POISON,t.GHOST,[]],[A.ALOLA_RATTATA,t.DARK,t.NORMAL,[[s.ISLAND,0,[a.DUSK,a.NIGHT]]]],[A.ALOLA_RATICATE,t.DARK,t.NORMAL,[[s.ISLAND,0,[a.DUSK,a.NIGHT]],[s.ISLAND,5,[a.DUSK,a.NIGHT]]]],[A.ALOLA_RAICHU,t.ELECTRIC,t.PSYCHIC,[[s.ISLAND,1,[a.DAWN,a.DAY]],[s.ISLAND,5,[a.DAWN,a.DAY]]]],[A.ALOLA_SANDSHREW,t.ICE,t.STEEL,[[s.ISLAND,0],[s.SNOWY_FOREST,2]]],[A.ALOLA_SANDSLASH,t.ICE,t.STEEL,[[s.ISLAND,0],[s.ISLAND,5],[s.SNOWY_FOREST,2],[s.SNOWY_FOREST,6]]],[A.ALOLA_VULPIX,t.ICE,-1,[[s.ISLAND,0],[s.SNOWY_FOREST,2]]],[A.ALOLA_NINETALES,t.ICE,t.FAIRY,[[s.ISLAND,0],[s.ISLAND,5],[s.SNOWY_FOREST,2],[s.SNOWY_FOREST,6]]],[A.ALOLA_DIGLETT,t.GROUND,t.STEEL,[[s.ISLAND,0]]],[A.ALOLA_DUGTRIO,t.GROUND,t.STEEL,[[s.ISLAND,0],[s.ISLAND,5]]],[A.ALOLA_MEOWTH,t.DARK,-1,[[s.ISLAND,0,[a.DUSK,a.NIGHT]]]],[A.ALOLA_PERSIAN,t.DARK,-1,[[s.ISLAND,0,[a.DUSK,a.NIGHT]],[s.ISLAND,5,[a.DUSK,a.NIGHT]]]],[A.ALOLA_GEODUDE,t.ROCK,t.ELECTRIC,[[s.ISLAND,0]]],[A.ALOLA_GRAVELER,t.ROCK,t.ELECTRIC,[[s.ISLAND,0]]],[A.ALOLA_GOLEM,t.ROCK,t.ELECTRIC,[[s.ISLAND,0],[s.ISLAND,5]]],[A.ALOLA_GRIMER,t.POISON,t.DARK,[[s.ISLAND,0]]],[A.ALOLA_MUK,t.POISON,t.DARK,[[s.ISLAND,0],[s.ISLAND,5]]],[A.ALOLA_EXEGGUTOR,t.GRASS,t.DRAGON,[[s.ISLAND,1,[a.DAWN,a.DAY]],[s.ISLAND,5,[a.DAWN,a.DAY]]]],[A.ALOLA_MAROWAK,t.FIRE,t.GHOST,[[s.ISLAND,1,[a.DUSK,a.NIGHT]],[s.ISLAND,5,[a.DUSK,a.NIGHT]]]],[A.ETERNAL_FLOETTE,t.FAIRY,-1,[[s.FAIRY_CAVE,2],[s.FAIRY_CAVE,6]]],[A.GALAR_MEOWTH,t.STEEL,-1,[[s.CONSTRUCTION_SITE,2,a.DUSK]]],[A.GALAR_PONYTA,t.PSYCHIC,-1,[[s.JUNGLE,2,a.DAWN]]],[A.GALAR_RAPIDASH,t.PSYCHIC,t.FAIRY,[[s.JUNGLE,2,a.DAWN],[s.JUNGLE,6,a.DAWN]]],[A.GALAR_SLOWPOKE,t.PSYCHIC,-1,[[s.SWAMP,3,[a.DAWN,a.DAY]]]],[A.GALAR_SLOWBRO,t.POISON,t.PSYCHIC,[[s.SWAMP,3,[a.DAWN,a.DAY]],[s.SWAMP,6,[a.DAWN,a.DAY]]]],[A.GALAR_FARFETCHD,t.FIGHTING,-1,[[s.DOJO,3]]],[A.GALAR_WEEZING,t.POISON,t.FAIRY,[[s.SLUM,6]]],[A.GALAR_MR_MIME,t.ICE,t.PSYCHIC,[[s.SNOWY_FOREST,3]]],[A.GALAR_ARTICUNO,t.PSYCHIC,t.FLYING,[[s.SNOWY_FOREST,4],[s.SNOWY_FOREST,8]]],[A.GALAR_ZAPDOS,t.FIGHTING,t.FLYING,[[s.DOJO,4],[s.DOJO,8]]],[A.GALAR_MOLTRES,t.DARK,t.FLYING,[[s.ABYSS,4],[s.ABYSS,8]]],[A.GALAR_SLOWKING,t.POISON,t.PSYCHIC,[[s.SWAMP,6,[a.DAWN,a.DAY]]]],[A.GALAR_CORSOLA,t.GHOST,-1,[[s.SEABED,3]]],[A.GALAR_ZIGZAGOON,t.DARK,t.NORMAL,[[s.SLUM,2,[a.DUSK,a.NIGHT]]]],[A.GALAR_LINOONE,t.DARK,t.NORMAL,[[s.SLUM,2,[a.DUSK,a.NIGHT]]]],[A.GALAR_DARUMAKA,t.ICE,-1,[[s.SNOWY_FOREST,2,[a.DAWN,a.DAY]]]],[A.GALAR_DARMANITAN,t.ICE,-1,[[s.SNOWY_FOREST,2,[a.DAWN,a.DAY]],[s.SNOWY_FOREST,6,[a.DAWN,a.DAY]]]],[A.GALAR_YAMASK,t.GROUND,t.GHOST,[[s.RUINS,3,[a.DUSK,a.NIGHT]]]],[A.GALAR_STUNFISK,t.GROUND,t.STEEL,[[s.SWAMP,3],[s.SWAMP,6]]],[A.HISUI_GROWLITHE,t.FIRE,t.ROCK,[[s.VOLCANO,3]]],[A.HISUI_ARCANINE,t.FIRE,t.ROCK,[[s.VOLCANO,6]]],[A.HISUI_VOLTORB,t.ELECTRIC,t.GRASS,[[s.POWER_PLANT,3]]],[A.HISUI_ELECTRODE,t.ELECTRIC,t.GRASS,[[s.POWER_PLANT,6]]],[A.HISUI_TYPHLOSION,t.FIRE,t.GHOST,[[s.GRAVEYARD,6]]],[A.HISUI_QWILFISH,t.DARK,t.POISON,[[s.SEABED,3]]],[A.HISUI_SNEASEL,t.FIGHTING,t.POISON,[[s.SNOWY_FOREST,3,[a.DAWN,a.DAY]]]],[A.HISUI_SAMUROTT,t.WATER,t.DARK,[[s.ABYSS,6]]],[A.HISUI_LILLIGANT,t.GRASS,t.FIGHTING,[[s.MEADOW,6,[a.DAWN,a.DAY]]]],[A.HISUI_ZORUA,t.NORMAL,t.GHOST,[[s.SNOWY_FOREST,3,[a.DUSK,a.NIGHT]]]],[A.HISUI_ZOROARK,t.NORMAL,t.GHOST,[[s.SNOWY_FOREST,3,[a.DUSK,a.NIGHT]],[s.SNOWY_FOREST,6,[a.DUSK,a.NIGHT]]]],[A.HISUI_BRAVIARY,t.PSYCHIC,t.FLYING,[[s.MOUNTAIN,6,[a.DAWN,a.DAY]]]],[A.HISUI_SLIGGOO,t.STEEL,t.DRAGON,[[s.SWAMP,3,[a.DAWN,a.DAY]]]],[A.HISUI_GOODRA,t.STEEL,t.DRAGON,[[s.SWAMP,3,[a.DAWN,a.DAY]],[s.SWAMP,6,[a.DAWN,a.DAY]]]],[A.HISUI_AVALUGG,t.ICE,t.ROCK,[[s.SNOWY_FOREST,3]]],[A.HISUI_DECIDUEYE,t.GRASS,t.FIGHTING,[[s.DOJO,6]]],[A.PALDEA_TAUROS,t.FIGHTING,-1,[[s.PLAINS,2,[a.DAWN,a.DAY]],[s.PLAINS,6,[a.DAWN,a.DAY]]]],[A.PALDEA_WOOPER,t.POISON,t.GROUND,[[s.SWAMP,0,[a.DUSK,a.NIGHT]]]],[A.BLOODMOON_URSALUNA,t.GROUND,t.NORMAL,[[s.FOREST,3,a.NIGHT],[s.FOREST,6,a.NIGHT]]]],e=[[U.ACE_TRAINER,[[s.PLAINS,1],[s.GRASS,1],[s.TALL_GRASS,1],[s.SWAMP,1],[s.BEACH,1],[s.LAKE,1],[s.MOUNTAIN,1],[s.BADLANDS,1],[s.CAVE,1],[s.MEADOW,1],[s.RUINS,1],[s.ABYSS,1],[s.FAIRY_CAVE,1],[s.TEMPLE,1]]],[U.ARTIST,[[s.METROPOLIS,2]]],[U.BACKERS,[]],[U.BACKPACKER,[[s.MOUNTAIN,0],[s.CAVE,0],[s.BADLANDS,0],[s.JUNGLE,0],[s.DESERT,0]]],[U.BAKER,[[s.SLUM,1],[s.MEADOW,1]]],[U.BEAUTY,[[s.METROPOLIS,0],[s.MEADOW,0],[s.FAIRY_CAVE,0]]],[U.BIKER,[[s.SLUM,0]]],[U.BLACK_BELT,[[s.DOJO,0],[s.PLAINS,2],[s.GRASS,2],[s.SWAMP,2],[s.BEACH,2],[s.LAKE,2],[s.MOUNTAIN,0],[s.CAVE,1],[s.RUINS,1]]],[U.BREEDER,[[s.PLAINS,0],[s.GRASS,0],[s.TALL_GRASS,1],[s.METROPOLIS,1],[s.BEACH,1],[s.LAKE,0],[s.MEADOW,1],[s.FAIRY_CAVE,1]]],[U.CLERK,[[s.METROPOLIS,0]]],[U.CYCLIST,[[s.PLAINS,1],[s.METROPOLIS,0]]],[U.DANCER,[]],[U.DEPOT_AGENT,[[s.METROPOLIS,1]]],[U.DOCTOR,[]],[U.FIREBREATHER,[[s.VOLCANO,0]]],[U.FISHERMAN,[[s.LAKE,0],[s.BEACH,0]]],[U.GUITARIST,[[s.METROPOLIS,1],[s.POWER_PLANT,0]]],[U.HARLEQUIN,[]],[U.HIKER,[[s.MOUNTAIN,0],[s.CAVE,0],[s.BADLANDS,0]]],[U.HOOLIGANS,[[s.SLUM,1]]],[U.HOOPSTER,[]],[U.INFIELDER,[]],[U.JANITOR,[]],[U.LINEBACKER,[]],[U.MAID,[]],[U.MUSICIAN,[[s.MEADOW,0]]],[U.HEX_MANIAC,[[s.RUINS,1],[s.GRAVEYARD,1]]],[U.NURSERY_AIDE,[]],[U.OFFICER,[[s.METROPOLIS,0],[s.CONSTRUCTION_SITE,0],[s.SLUM,0]]],[U.PARASOL_LADY,[[s.SWAMP,0],[s.LAKE,0],[s.MEADOW,0]]],[U.PILOT,[[s.MOUNTAIN,1]]],[U.POKEFAN,[[s.GRASS,1],[s.MEADOW,1]]],[U.PRESCHOOLER,[]],[U.PSYCHIC,[[s.GRAVEYARD,0],[s.RUINS,0]]],[U.RANGER,[[s.TALL_GRASS,1],[s.FOREST,0],[s.JUNGLE,0]]],[U.RICH,[[s.ISLAND,1]]],[U.RICH_KID,[[s.METROPOLIS,2],[s.ISLAND,0]]],[U.ROUGHNECK,[[s.SLUM,0]]],[U.SAILOR,[[s.SEA,0],[s.BEACH,0]]],[U.SCIENTIST,[[s.DESERT,0],[s.RUINS,0]]],[U.SMASHER,[]],[U.SNOW_WORKER,[[s.ICE_CAVE,0],[s.SNOWY_FOREST,0]]],[U.STRIKER,[]],[U.SCHOOL_KID,[[s.GRASS,0]]],[U.SWIMMER,[[s.SEA,0]]],[U.TWINS,[[s.PLAINS,0]]],[U.VETERAN,[[s.WASTELAND,0]]],[U.WAITER,[[s.METROPOLIS,0]]],[U.WORKER,[[s.POWER_PLANT,0],[s.FACTORY,0],[s.CONSTRUCTION_SITE,0]]],[U.YOUNGSTER,[[s.TOWN,0]]],[U.BROCK,[[s.CAVE,5]]],[U.MISTY,[[s.BEACH,5]]],[U.LT_SURGE,[[s.CONSTRUCTION_SITE,5]]],[U.ERIKA,[[s.GRASS,5]]],[U.JANINE,[[s.SWAMP,5]]],[U.SABRINA,[[s.RUINS,5]]],[U.GIOVANNI,[[s.LABORATORY,5]]],[U.BLAINE,[[s.VOLCANO,5]]],[U.FALKNER,[[s.MOUNTAIN,5]]],[U.BUGSY,[[s.FOREST,5]]],[U.WHITNEY,[[s.METROPOLIS,5]]],[U.MORTY,[[s.GRAVEYARD,5]]],[U.CHUCK,[[s.CONSTRUCTION_SITE,5]]],[U.JASMINE,[[s.FACTORY,5]]],[U.PRYCE,[[s.ICE_CAVE,5]]],[U.CLAIR,[[s.WASTELAND,5]]],[U.ROXANNE,[[s.CAVE,5]]],[U.BRAWLY,[[s.DOJO,5]]],[U.WATTSON,[[s.CONSTRUCTION_SITE,5]]],[U.FLANNERY,[[s.VOLCANO,5]]],[U.NORMAN,[[s.METROPOLIS,5]]],[U.WINONA,[[s.MOUNTAIN,5]]],[U.TATE,[[s.RUINS,5]]],[U.LIZA,[[s.RUINS,5]]],[U.JUAN,[[s.SEABED,5]]],[U.ROARK,[[s.CAVE,5]]],[U.GARDENIA,[[s.TALL_GRASS,5]]],[U.CRASHER_WAKE,[[s.LAKE,5]]],[U.MAYLENE,[[s.DOJO,5]]],[U.FANTINA,[[s.TEMPLE,5]]],[U.BYRON,[[s.FACTORY,5]]],[U.CANDICE,[[s.SNOWY_FOREST,5]]],[U.VOLKNER,[[s.POWER_PLANT,5]]],[U.CILAN,[[s.PLAINS,5]]],[U.CHILI,[[s.PLAINS,5]]],[U.CRESS,[[s.PLAINS,5]]],[U.CHEREN,[[s.PLAINS,5]]],[U.LENORA,[[s.MEADOW,5]]],[U.ROXIE,[[s.SWAMP,5]]],[U.BURGH,[[s.FOREST,5]]],[U.ELESA,[[s.POWER_PLANT,5]]],[U.CLAY,[[s.BADLANDS,5]]],[U.SKYLA,[[s.MOUNTAIN,5]]],[U.BRYCEN,[[s.ICE_CAVE,5]]],[U.DRAYDEN,[[s.WASTELAND,5]]],[U.MARLON,[[s.SEA,5]]],[U.VIOLA,[[s.TALL_GRASS,5]]],[U.GRANT,[[s.BADLANDS,5]]],[U.KORRINA,[[s.DOJO,5]]],[U.RAMOS,[[s.JUNGLE,5]]],[U.CLEMONT,[[s.POWER_PLANT,5]]],[U.VALERIE,[[s.FAIRY_CAVE,5]]],[U.OLYMPIA,[[s.SPACE,5]]],[U.WULFRIC,[[s.ICE_CAVE,5]]],[U.MILO,[[s.MEADOW,5]]],[U.NESSA,[[s.ISLAND,5]]],[U.KABU,[[s.VOLCANO,5]]],[U.BEA,[[s.DOJO,5]]],[U.ALLISTER,[[s.GRAVEYARD,5]]],[U.OPAL,[[s.FAIRY_CAVE,5]]],[U.BEDE,[[s.FAIRY_CAVE,5]]],[U.GORDIE,[[s.DESERT,5]]],[U.MELONY,[[s.SNOWY_FOREST,5]]],[U.PIERS,[[s.SLUM,5]]],[U.MARNIE,[[s.ABYSS,5]]],[U.RAIHAN,[[s.WASTELAND,5]]],[U.KATY,[[s.FOREST,5]]],[U.BRASSIUS,[[s.TALL_GRASS,5]]],[U.IONO,[[s.METROPOLIS,5]]],[U.KOFU,[[s.BEACH,5]]],[U.LARRY,[[s.METROPOLIS,5]]],[U.RYME,[[s.GRAVEYARD,5]]],[U.TULIP,[[s.RUINS,5]]],[U.GRUSHA,[[s.ICE_CAVE,5]]],[U.LORELEI,[]],[U.BRUNO,[]],[U.AGATHA,[]],[U.LANCE,[]],[U.WILL,[]],[U.KOGA,[]],[U.KAREN,[]],[U.SIDNEY,[]],[U.PHOEBE,[]],[U.GLACIA,[]],[U.DRAKE,[]],[U.AARON,[]],[U.BERTHA,[]],[U.FLINT,[]],[U.LUCIAN,[]],[U.SHAUNTAL,[]],[U.MARSHAL,[]],[U.GRIMSLEY,[]],[U.CAITLIN,[]],[U.MALVA,[]],[U.SIEBOLD,[]],[U.WIKSTROM,[]],[U.DRASNA,[]],[U.HALA,[]],[U.MOLAYNE,[]],[U.OLIVIA,[]],[U.ACEROLA,[]],[U.KAHILI,[]],[U.RIKA,[]],[U.POPPY,[]],[U.LARRY_ELITE,[]],[U.HASSEL,[]],[U.CRISPIN,[]],[U.AMARYS,[]],[U.LACEY,[]],[U.DRAYTON,[]],[U.BLUE,[]],[U.RED,[]],[U.LANCE_CHAMPION,[]],[U.STEVEN,[]],[U.WALLACE,[]],[U.CYNTHIA,[]],[U.ALDER,[]],[U.IRIS,[]],[U.DIANTHA,[]],[U.HAU,[]],[U.GEETA,[]],[U.NEMONA,[]],[U.KIERAN,[]],[U.LEON,[]],[U.RIVAL,[]]];st[s.TOWN]=[0,1];const I=r((L,N)=>{if(L===s.END){const n=Object.keys(s).filter(C=>!Number.isNaN(Number(C)));n.pop();const i=DA(n.length,1);L=s[n[i]]}const S=Array.isArray(a_[L])?a_[L]:[a_[L]];for(const n of S){const i=Array.isArray(n)?n[0]:n,C=Array.isArray(n)?n[1]:1;(!st.hasOwnProperty(i)||C<st[i][1]||N<st[i][0]&&C===st[i][1])&&(st[i]=[N+1,C],I(i,N+1))}},"traverseBiome");I(s.TOWN,0),st[s.END]=[Object.values(st).map(L=>L[0]).reduce((L,N)=>Math.max(L,N),0)+1,1];for(const L of nR(s)){rO[L]={},UN[L]={};for(const N of nR(ne)){rO[L][N]={},UN[L][N]=[];for(const S of nR(a))rO[L][N][S]=[]}}for(const L of R){const N=L[0],S=L[3],n=lE.hasOwnProperty(N)?lE[N]:[];!S.filter(i=>i[0]!==s.END).length&&!n.filter(i=>!!R.find(C=>C[0]===i.speciesId)[3].filter(C=>C[0]!==s.END).length).length&&$4.push(N),xm[N]=[];for(const i of S){const C=i[0],o=i[1],l=i.length>2?Array.isArray(i[2])?i[2]:[i[2]]:[a.ALL];xm[N].push({biome:C,tier:o,tod:l});for(const H of l){if(!rO.hasOwnProperty(C)||!rO[C].hasOwnProperty(o)||!rO[C][o].hasOwnProperty(H))continue;const P=rO[C][o][H];let K=-1,f=0;for(let h=0;h<P.length;h++){const F=P[h];for(let w=0;w<F.length;w++){const m=F[w];if(lE.hasOwnProperty(m)&&lE[m].find(y=>y.speciesId===N)){K=h,f=w+1;break}if(n!=null&&n.find(y=>y.speciesId===m)){K=h,f=w;break}}if(K>-1)break}K>-1?P[K].splice(f,0,N):P.push([N])}}}for(const L of Object.keys(rO))for(const N of Object.keys(rO[L])){const S=Number.parseInt(N);for(const n of Object.keys(rO[L][N])){const i=rO[L][N][n];for(let C=0;C<i.length;C++){const o=i[C];if(o.length===1)i[C]=o[0];else{const l={1:[o[0]]};for(let H=1;H<o.length;H++){const P=o[H],K=o.flatMap(h=>lE[h]).find(h=>h&&h.speciesId===P),f=K.level-(K.level===1?1:0)+K.wildDelay*10-(S>=5?10:0);l.hasOwnProperty(f)?l[f].push(P):l[f]=[P]}i[C]=l}}}}for(const L of e){const N=L[0],S=L[1];for(const n of S){const i=n[0],C=n[1];if(!UN.hasOwnProperty(i)||!UN[i].hasOwnProperty(C))continue;UN[i][C].push(N)}}}r(gy,"initBiomes");var O=(R=>(R[R.NONE=0]="NONE",R[R.STENCH=1]="STENCH",R[R.DRIZZLE=2]="DRIZZLE",R[R.SPEED_BOOST=3]="SPEED_BOOST",R[R.BATTLE_ARMOR=4]="BATTLE_ARMOR",R[R.STURDY=5]="STURDY",R[R.DAMP=6]="DAMP",R[R.LIMBER=7]="LIMBER",R[R.SAND_VEIL=8]="SAND_VEIL",R[R.STATIC=9]="STATIC",R[R.VOLT_ABSORB=10]="VOLT_ABSORB",R[R.WATER_ABSORB=11]="WATER_ABSORB",R[R.OBLIVIOUS=12]="OBLIVIOUS",R[R.CLOUD_NINE=13]="CLOUD_NINE",R[R.COMPOUND_EYES=14]="COMPOUND_EYES",R[R.INSOMNIA=15]="INSOMNIA",R[R.COLOR_CHANGE=16]="COLOR_CHANGE",R[R.IMMUNITY=17]="IMMUNITY",R[R.FLASH_FIRE=18]="FLASH_FIRE",R[R.SHIELD_DUST=19]="SHIELD_DUST",R[R.OWN_TEMPO=20]="OWN_TEMPO",R[R.SUCTION_CUPS=21]="SUCTION_CUPS",R[R.INTIMIDATE=22]="INTIMIDATE",R[R.SHADOW_TAG=23]="SHADOW_TAG",R[R.ROUGH_SKIN=24]="ROUGH_SKIN",R[R.WONDER_GUARD=25]="WONDER_GUARD",R[R.LEVITATE=26]="LEVITATE",R[R.EFFECT_SPORE=27]="EFFECT_SPORE",R[R.SYNCHRONIZE=28]="SYNCHRONIZE",R[R.CLEAR_BODY=29]="CLEAR_BODY",R[R.NATURAL_CURE=30]="NATURAL_CURE",R[R.LIGHTNING_ROD=31]="LIGHTNING_ROD",R[R.SERENE_GRACE=32]="SERENE_GRACE",R[R.SWIFT_SWIM=33]="SWIFT_SWIM",R[R.CHLOROPHYLL=34]="CHLOROPHYLL",R[R.ILLUMINATE=35]="ILLUMINATE",R[R.TRACE=36]="TRACE",R[R.HUGE_POWER=37]="HUGE_POWER",R[R.POISON_POINT=38]="POISON_POINT",R[R.INNER_FOCUS=39]="INNER_FOCUS",R[R.MAGMA_ARMOR=40]="MAGMA_ARMOR",R[R.WATER_VEIL=41]="WATER_VEIL",R[R.MAGNET_PULL=42]="MAGNET_PULL",R[R.SOUNDPROOF=43]="SOUNDPROOF",R[R.RAIN_DISH=44]="RAIN_DISH",R[R.SAND_STREAM=45]="SAND_STREAM",R[R.PRESSURE=46]="PRESSURE",R[R.THICK_FAT=47]="THICK_FAT",R[R.EARLY_BIRD=48]="EARLY_BIRD",R[R.FLAME_BODY=49]="FLAME_BODY",R[R.RUN_AWAY=50]="RUN_AWAY",R[R.KEEN_EYE=51]="KEEN_EYE",R[R.HYPER_CUTTER=52]="HYPER_CUTTER",R[R.PICKUP=53]="PICKUP",R[R.TRUANT=54]="TRUANT",R[R.HUSTLE=55]="HUSTLE",R[R.CUTE_CHARM=56]="CUTE_CHARM",R[R.PLUS=57]="PLUS",R[R.MINUS=58]="MINUS",R[R.FORECAST=59]="FORECAST",R[R.STICKY_HOLD=60]="STICKY_HOLD",R[R.SHED_SKIN=61]="SHED_SKIN",R[R.GUTS=62]="GUTS",R[R.MARVEL_SCALE=63]="MARVEL_SCALE",R[R.LIQUID_OOZE=64]="LIQUID_OOZE",R[R.OVERGROW=65]="OVERGROW",R[R.BLAZE=66]="BLAZE",R[R.TORRENT=67]="TORRENT",R[R.SWARM=68]="SWARM",R[R.ROCK_HEAD=69]="ROCK_HEAD",R[R.DROUGHT=70]="DROUGHT",R[R.ARENA_TRAP=71]="ARENA_TRAP",R[R.VITAL_SPIRIT=72]="VITAL_SPIRIT",R[R.WHITE_SMOKE=73]="WHITE_SMOKE",R[R.PURE_POWER=74]="PURE_POWER",R[R.SHELL_ARMOR=75]="SHELL_ARMOR",R[R.AIR_LOCK=76]="AIR_LOCK",R[R.TANGLED_FEET=77]="TANGLED_FEET",R[R.MOTOR_DRIVE=78]="MOTOR_DRIVE",R[R.RIVALRY=79]="RIVALRY",R[R.STEADFAST=80]="STEADFAST",R[R.SNOW_CLOAK=81]="SNOW_CLOAK",R[R.GLUTTONY=82]="GLUTTONY",R[R.ANGER_POINT=83]="ANGER_POINT",R[R.UNBURDEN=84]="UNBURDEN",R[R.HEATPROOF=85]="HEATPROOF",R[R.SIMPLE=86]="SIMPLE",R[R.DRY_SKIN=87]="DRY_SKIN",R[R.DOWNLOAD=88]="DOWNLOAD",R[R.IRON_FIST=89]="IRON_FIST",R[R.POISON_HEAL=90]="POISON_HEAL",R[R.ADAPTABILITY=91]="ADAPTABILITY",R[R.SKILL_LINK=92]="SKILL_LINK",R[R.HYDRATION=93]="HYDRATION",R[R.SOLAR_POWER=94]="SOLAR_POWER",R[R.QUICK_FEET=95]="QUICK_FEET",R[R.NORMALIZE=96]="NORMALIZE",R[R.SNIPER=97]="SNIPER",R[R.MAGIC_GUARD=98]="MAGIC_GUARD",R[R.NO_GUARD=99]="NO_GUARD",R[R.STALL=100]="STALL",R[R.TECHNICIAN=101]="TECHNICIAN",R[R.LEAF_GUARD=102]="LEAF_GUARD",R[R.KLUTZ=103]="KLUTZ",R[R.MOLD_BREAKER=104]="MOLD_BREAKER",R[R.SUPER_LUCK=105]="SUPER_LUCK",R[R.AFTERMATH=106]="AFTERMATH",R[R.ANTICIPATION=107]="ANTICIPATION",R[R.FOREWARN=108]="FOREWARN",R[R.UNAWARE=109]="UNAWARE",R[R.TINTED_LENS=110]="TINTED_LENS",R[R.FILTER=111]="FILTER",R[R.SLOW_START=112]="SLOW_START",R[R.SCRAPPY=113]="SCRAPPY",R[R.STORM_DRAIN=114]="STORM_DRAIN",R[R.ICE_BODY=115]="ICE_BODY",R[R.SOLID_ROCK=116]="SOLID_ROCK",R[R.SNOW_WARNING=117]="SNOW_WARNING",R[R.HONEY_GATHER=118]="HONEY_GATHER",R[R.FRISK=119]="FRISK",R[R.RECKLESS=120]="RECKLESS",R[R.MULTITYPE=121]="MULTITYPE",R[R.FLOWER_GIFT=122]="FLOWER_GIFT",R[R.BAD_DREAMS=123]="BAD_DREAMS",R[R.PICKPOCKET=124]="PICKPOCKET",R[R.SHEER_FORCE=125]="SHEER_FORCE",R[R.CONTRARY=126]="CONTRARY",R[R.UNNERVE=127]="UNNERVE",R[R.DEFIANT=128]="DEFIANT",R[R.DEFEATIST=129]="DEFEATIST",R[R.CURSED_BODY=130]="CURSED_BODY",R[R.HEALER=131]="HEALER",R[R.FRIEND_GUARD=132]="FRIEND_GUARD",R[R.WEAK_ARMOR=133]="WEAK_ARMOR",R[R.HEAVY_METAL=134]="HEAVY_METAL",R[R.LIGHT_METAL=135]="LIGHT_METAL",R[R.MULTISCALE=136]="MULTISCALE",R[R.TOXIC_BOOST=137]="TOXIC_BOOST",R[R.FLARE_BOOST=138]="FLARE_BOOST",R[R.HARVEST=139]="HARVEST",R[R.TELEPATHY=140]="TELEPATHY",R[R.MOODY=141]="MOODY",R[R.OVERCOAT=142]="OVERCOAT",R[R.POISON_TOUCH=143]="POISON_TOUCH",R[R.REGENERATOR=144]="REGENERATOR",R[R.BIG_PECKS=145]="BIG_PECKS",R[R.SAND_RUSH=146]="SAND_RUSH",R[R.WONDER_SKIN=147]="WONDER_SKIN",R[R.ANALYTIC=148]="ANALYTIC",R[R.ILLUSION=149]="ILLUSION",R[R.IMPOSTER=150]="IMPOSTER",R[R.INFILTRATOR=151]="INFILTRATOR",R[R.MUMMY=152]="MUMMY",R[R.MOXIE=153]="MOXIE",R[R.JUSTIFIED=154]="JUSTIFIED",R[R.RATTLED=155]="RATTLED",R[R.MAGIC_BOUNCE=156]="MAGIC_BOUNCE",R[R.SAP_SIPPER=157]="SAP_SIPPER",R[R.PRANKSTER=158]="PRANKSTER",R[R.SAND_FORCE=159]="SAND_FORCE",R[R.IRON_BARBS=160]="IRON_BARBS",R[R.ZEN_MODE=161]="ZEN_MODE",R[R.VICTORY_STAR=162]="VICTORY_STAR",R[R.TURBOBLAZE=163]="TURBOBLAZE",R[R.TERAVOLT=164]="TERAVOLT",R[R.AROMA_VEIL=165]="AROMA_VEIL",R[R.FLOWER_VEIL=166]="FLOWER_VEIL",R[R.CHEEK_POUCH=167]="CHEEK_POUCH",R[R.PROTEAN=168]="PROTEAN",R[R.FUR_COAT=169]="FUR_COAT",R[R.MAGICIAN=170]="MAGICIAN",R[R.BULLETPROOF=171]="BULLETPROOF",R[R.COMPETITIVE=172]="COMPETITIVE",R[R.STRONG_JAW=173]="STRONG_JAW",R[R.REFRIGERATE=174]="REFRIGERATE",R[R.SWEET_VEIL=175]="SWEET_VEIL",R[R.STANCE_CHANGE=176]="STANCE_CHANGE",R[R.GALE_WINGS=177]="GALE_WINGS",R[R.MEGA_LAUNCHER=178]="MEGA_LAUNCHER",R[R.GRASS_PELT=179]="GRASS_PELT",R[R.SYMBIOSIS=180]="SYMBIOSIS",R[R.TOUGH_CLAWS=181]="TOUGH_CLAWS",R[R.PIXILATE=182]="PIXILATE",R[R.GOOEY=183]="GOOEY",R[R.AERILATE=184]="AERILATE",R[R.PARENTAL_BOND=185]="PARENTAL_BOND",R[R.DARK_AURA=186]="DARK_AURA",R[R.FAIRY_AURA=187]="FAIRY_AURA",R[R.AURA_BREAK=188]="AURA_BREAK",R[R.PRIMORDIAL_SEA=189]="PRIMORDIAL_SEA",R[R.DESOLATE_LAND=190]="DESOLATE_LAND",R[R.DELTA_STREAM=191]="DELTA_STREAM",R[R.STAMINA=192]="STAMINA",R[R.WIMP_OUT=193]="WIMP_OUT",R[R.EMERGENCY_EXIT=194]="EMERGENCY_EXIT",R[R.WATER_COMPACTION=195]="WATER_COMPACTION",R[R.MERCILESS=196]="MERCILESS",R[R.SHIELDS_DOWN=197]="SHIELDS_DOWN",R[R.STAKEOUT=198]="STAKEOUT",R[R.WATER_BUBBLE=199]="WATER_BUBBLE",R[R.STEELWORKER=200]="STEELWORKER",R[R.BERSERK=201]="BERSERK",R[R.SLUSH_RUSH=202]="SLUSH_RUSH",R[R.LONG_REACH=203]="LONG_REACH",R[R.LIQUID_VOICE=204]="LIQUID_VOICE",R[R.TRIAGE=205]="TRIAGE",R[R.GALVANIZE=206]="GALVANIZE",R[R.SURGE_SURFER=207]="SURGE_SURFER",R[R.SCHOOLING=208]="SCHOOLING",R[R.DISGUISE=209]="DISGUISE",R[R.BATTLE_BOND=210]="BATTLE_BOND",R[R.POWER_CONSTRUCT=211]="POWER_CONSTRUCT",R[R.CORROSION=212]="CORROSION",R[R.COMATOSE=213]="COMATOSE",R[R.QUEENLY_MAJESTY=214]="QUEENLY_MAJESTY",R[R.INNARDS_OUT=215]="INNARDS_OUT",R[R.DANCER=216]="DANCER",R[R.BATTERY=217]="BATTERY",R[R.FLUFFY=218]="FLUFFY",R[R.DAZZLING=219]="DAZZLING",R[R.SOUL_HEART=220]="SOUL_HEART",R[R.TANGLING_HAIR=221]="TANGLING_HAIR",R[R.RECEIVER=222]="RECEIVER",R[R.POWER_OF_ALCHEMY=223]="POWER_OF_ALCHEMY",R[R.BEAST_BOOST=224]="BEAST_BOOST",R[R.RKS_SYSTEM=225]="RKS_SYSTEM",R[R.ELECTRIC_SURGE=226]="ELECTRIC_SURGE",R[R.PSYCHIC_SURGE=227]="PSYCHIC_SURGE",R[R.MISTY_SURGE=228]="MISTY_SURGE",R[R.GRASSY_SURGE=229]="GRASSY_SURGE",R[R.FULL_METAL_BODY=230]="FULL_METAL_BODY",R[R.SHADOW_SHIELD=231]="SHADOW_SHIELD",R[R.PRISM_ARMOR=232]="PRISM_ARMOR",R[R.NEUROFORCE=233]="NEUROFORCE",R[R.INTREPID_SWORD=234]="INTREPID_SWORD",R[R.DAUNTLESS_SHIELD=235]="DAUNTLESS_SHIELD",R[R.LIBERO=236]="LIBERO",R[R.BALL_FETCH=237]="BALL_FETCH",R[R.COTTON_DOWN=238]="COTTON_DOWN",R[R.PROPELLER_TAIL=239]="PROPELLER_TAIL",R[R.MIRROR_ARMOR=240]="MIRROR_ARMOR",R[R.GULP_MISSILE=241]="GULP_MISSILE",R[R.STALWART=242]="STALWART",R[R.STEAM_ENGINE=243]="STEAM_ENGINE",R[R.PUNK_ROCK=244]="PUNK_ROCK",R[R.SAND_SPIT=245]="SAND_SPIT",R[R.ICE_SCALES=246]="ICE_SCALES",R[R.RIPEN=247]="RIPEN",R[R.ICE_FACE=248]="ICE_FACE",R[R.POWER_SPOT=249]="POWER_SPOT",R[R.MIMICRY=250]="MIMICRY",R[R.SCREEN_CLEANER=251]="SCREEN_CLEANER",R[R.STEELY_SPIRIT=252]="STEELY_SPIRIT",R[R.PERISH_BODY=253]="PERISH_BODY",R[R.WANDERING_SPIRIT=254]="WANDERING_SPIRIT",R[R.GORILLA_TACTICS=255]="GORILLA_TACTICS",R[R.NEUTRALIZING_GAS=256]="NEUTRALIZING_GAS",R[R.PASTEL_VEIL=257]="PASTEL_VEIL",R[R.HUNGER_SWITCH=258]="HUNGER_SWITCH",R[R.QUICK_DRAW=259]="QUICK_DRAW",R[R.UNSEEN_FIST=260]="UNSEEN_FIST",R[R.CURIOUS_MEDICINE=261]="CURIOUS_MEDICINE",R[R.TRANSISTOR=262]="TRANSISTOR",R[R.DRAGONS_MAW=263]="DRAGONS_MAW",R[R.CHILLING_NEIGH=264]="CHILLING_NEIGH",R[R.GRIM_NEIGH=265]="GRIM_NEIGH",R[R.AS_ONE_GLASTRIER=266]="AS_ONE_GLASTRIER",R[R.AS_ONE_SPECTRIER=267]="AS_ONE_SPECTRIER",R[R.LINGERING_AROMA=268]="LINGERING_AROMA",R[R.SEED_SOWER=269]="SEED_SOWER",R[R.THERMAL_EXCHANGE=270]="THERMAL_EXCHANGE",R[R.ANGER_SHELL=271]="ANGER_SHELL",R[R.PURIFYING_SALT=272]="PURIFYING_SALT",R[R.WELL_BAKED_BODY=273]="WELL_BAKED_BODY",R[R.WIND_RIDER=274]="WIND_RIDER",R[R.GUARD_DOG=275]="GUARD_DOG",R[R.ROCKY_PAYLOAD=276]="ROCKY_PAYLOAD",R[R.WIND_POWER=277]="WIND_POWER",R[R.ZERO_TO_HERO=278]="ZERO_TO_HERO",R[R.COMMANDER=279]="COMMANDER",R[R.ELECTROMORPHOSIS=280]="ELECTROMORPHOSIS",R[R.PROTOSYNTHESIS=281]="PROTOSYNTHESIS",R[R.QUARK_DRIVE=282]="QUARK_DRIVE",R[R.GOOD_AS_GOLD=283]="GOOD_AS_GOLD",R[R.VESSEL_OF_RUIN=284]="VESSEL_OF_RUIN",R[R.SWORD_OF_RUIN=285]="SWORD_OF_RUIN",R[R.TABLETS_OF_RUIN=286]="TABLETS_OF_RUIN",R[R.BEADS_OF_RUIN=287]="BEADS_OF_RUIN",R[R.ORICHALCUM_PULSE=288]="ORICHALCUM_PULSE",R[R.HADRON_ENGINE=289]="HADRON_ENGINE",R[R.OPPORTUNIST=290]="OPPORTUNIST",R[R.CUD_CHEW=291]="CUD_CHEW",R[R.SHARPNESS=292]="SHARPNESS",R[R.SUPREME_OVERLORD=293]="SUPREME_OVERLORD",R[R.COSTAR=294]="COSTAR",R[R.TOXIC_DEBRIS=295]="TOXIC_DEBRIS",R[R.ARMOR_TAIL=296]="ARMOR_TAIL",R[R.EARTH_EATER=297]="EARTH_EATER",R[R.MYCELIUM_MIGHT=298]="MYCELIUM_MIGHT",R[R.MINDS_EYE=299]="MINDS_EYE",R[R.SUPERSWEET_SYRUP=300]="SUPERSWEET_SYRUP",R[R.HOSPITALITY=301]="HOSPITALITY",R[R.TOXIC_CHAIN=302]="TOXIC_CHAIN",R[R.EMBODY_ASPECT_TEAL=303]="EMBODY_ASPECT_TEAL",R[R.EMBODY_ASPECT_WELLSPRING=304]="EMBODY_ASPECT_WELLSPRING",R[R.EMBODY_ASPECT_HEARTHFLAME=305]="EMBODY_ASPECT_HEARTHFLAME",R[R.EMBODY_ASPECT_CORNERSTONE=306]="EMBODY_ASPECT_CORNERSTONE",R[R.TERA_SHIFT=307]="TERA_SHIFT",R[R.TERA_SHELL=308]="TERA_SHELL",R[R.TERAFORM_ZERO=309]="TERAFORM_ZERO",R[R.POISON_PUPPETEER=310]="POISON_PUPPETEER",R))(O||{}),HA=(R=>(R[R.WEAKEST=0]="WEAKEST",R[R.WEAKER=1]="WEAKER",R[R.WEAK=2]="WEAK",R[R.AVERAGE=3]="AVERAGE",R[R.STRONG=4]="STRONG",R[R.STRONGER=5]="STRONGER",R))(HA||{});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function aO(R){return R<0?-1:R===0?0:1}r(aO,"signum");function uT(R,e,I){return(1-I)*R+I*e}r(uT,"lerp");function my(R,e,I){return I<R?R:I>e?e:I}r(my,"clampInt");function TC(R,e,I){return I<R?R:I>e?e:I}r(TC,"clampDouble");function yy(R){return R=R%360,R<0&&(R=R+360),R}r(yy,"sanitizeDegreesDouble");function k_(R,e){const I=R[0]*e[0][0]+R[1]*e[0][1]+R[2]*e[0][2],L=R[0]*e[1][0]+R[1]*e[1][1]+R[2]*e[1][2],N=R[0]*e[2][0]+R[1]*e[2][1]+R[2]*e[2][2];return[I,L,N]}r(k_,"matrixMultiply");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const q4=[[.41233895,.35762064,.18051042],[.2126,.7152,.0722],[.01932141,.11916382,.95034478]],Vy=[[3.2413774792388685,-1.5376652402851851,-.49885366846268053],[-.9691452513005321,1.8758853451067872,.04156585616912061],[.05562093689691305,-.20395524564742123,1.0571799111220335]],SH=[95.047,100,108.883];function TH(R,e,I){return(255<<24|(R&255)<<16|(e&255)<<8|I&255)>>>0}r(TH,"argbFromRgb");function Zm(R){const e=cL(R[0]),I=cL(R[1]),L=cL(R[2]);return TH(e,I,L)}r(Zm,"argbFromLinrgb");function z4(R){return R>>24&255}r(z4,"alphaFromArgb");function zl(R){return R>>16&255}r(zl,"redFromArgb");function jl(R){return R>>8&255}r(jl,"greenFromArgb");function A_(R){return R&255}r(A_,"blueFromArgb");function j4(R,e,I){const L=Vy,N=L[0][0]*R+L[0][1]*e+L[0][2]*I,S=L[1][0]*R+L[1][1]*e+L[1][2]*I,n=L[2][0]*R+L[2][1]*e+L[2][2]*I,i=cL(N),C=cL(S),o=cL(n);return TH(i,C,o)}r(j4,"argbFromXyz");function wy(R){const e=At(zl(R)),I=At(jl(R)),L=At(A_(R));return k_([e,I,L],q4)}r(wy,"xyzFromArgb");function vy(R,e,I){const L=SH,N=(R+16)/116,S=e/500+N,n=N-I/200,i=ai(S),C=ai(N),o=ai(n),l=i*L[0],H=C*L[1],P=o*L[2];return j4(l,H,P)}r(vy,"argbFromLab");function xy(R){const e=At(zl(R)),I=At(jl(R)),L=At(A_(R)),N=q4,S=N[0][0]*e+N[0][1]*I+N[0][2]*L,n=N[1][0]*e+N[1][1]*I+N[1][2]*L,i=N[2][0]*e+N[2][1]*I+N[2][2]*L,C=SH,o=S/C[0],l=n/C[1],H=i/C[2],P=cT(o),K=cT(l),f=cT(H),h=116*K-16,F=500*(P-K),w=200*(K-f);return[h,F,w]}r(xy,"labFromArgb");function Zy(R){const e=Ft(R),I=cL(e);return TH(I,I,I)}r(Zy,"argbFromLstar");function bm(R){const e=wy(R)[1];return 116*cT(e/100)-16}r(bm,"lstarFromArgb");function Ft(R){return 100*ai((R+16)/116)}r(Ft,"yFromLstar");function X_(R){return cT(R/100)*116-16}r(X_,"lstarFromY");function At(R){const e=R/255;return e<=.040449936?e/12.92*100:Math.pow((e+.055)/1.055,2.4)*100}r(At,"linearized");function cL(R){const e=R/100;let I=0;return e<=.0031308?I=e*12.92:I=1.055*Math.pow(e,1/2.4)-.055,my(0,255,Math.round(I*255))}r(cL,"delinearized");function by(){return SH}r(by,"whitePointD65");function Q_(R){const e=zl(R),I=jl(R),L=A_(R),N=z4(R);return{r:e,g:I,b:L,a:N}}r(Q_,"rgbaFromArgb");function YN({r:R,g:e,b:I,a:L}){const N=Jr(R),S=Jr(e),n=Jr(I);return Jr(L)<<24|N<<16|S<<8|n}r(YN,"argbFromRgba");function Jr(R){return R<0?0:R>255?255:R}r(Jr,"clampComponent");function cT(R){const e=.008856451679035631,I=24389/27;return R>e?Math.pow(R,1/3):(I*R+16)/116}r(cT,"labF");function ai(R){const e=.008856451679035631,I=24389/27,L=R*R*R;return L>e?L:(116*R-16)/I}r(ai,"labInvf");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Kl=class Kl{static make(e=by(),I=200/Math.PI*Ft(50)/100,L=50,N=2,S=!1){const n=e,i=n[0]*.401288+n[1]*.650173+n[2]*-.051461,C=n[0]*-.250268+n[1]*1.204414+n[2]*.045854,o=n[0]*-.002079+n[1]*.048952+n[2]*.953127,l=.8+N/10,H=l>=.9?uT(.59,.69,(l-.9)*10):uT(.525,.59,(l-.8)*10);let P=S?1:l*(1-1/3.6*Math.exp((-I-42)/92));P=P>1?1:P<0?0:P;const K=l,f=[P*(100/i)+1-P,P*(100/C)+1-P,P*(100/o)+1-P],h=1/(5*I+1),F=h*h*h*h,w=1-F,m=F*I+.1*w*w*Math.cbrt(5*I),y=Ft(L)/e[1],x=1.48+Math.sqrt(y),q=.725/Math.pow(y,.2),IA=q,$=[Math.pow(m*f[0]*i/100,.42),Math.pow(m*f[1]*C/100,.42),Math.pow(m*f[2]*o/100,.42)],tA=[400*$[0]/($[0]+27.13),400*$[1]/($[1]+27.13),400*$[2]/($[2]+27.13)],UA=(2*tA[0]+tA[1]+.05*tA[2])*q;return new Kl(y,UA,q,IA,H,K,f,m,Math.pow(m,.25),x)}constructor(e,I,L,N,S,n,i,C,o,l){this.n=e,this.aw=I,this.nbb=L,this.ncb=N,this.c=S,this.nc=n,this.rgbD=i,this.fl=C,this.fLRoot=o,this.z=l}};r(Kl,"ViewingConditions");let TI=Kl;TI.DEFAULT=TI.make();/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const GI=class GI{constructor(e,I,L,N,S,n,i,C,o){this.hue=e,this.chroma=I,this.j=L,this.q=N,this.m=S,this.s=n,this.jstar=i,this.astar=C,this.bstar=o}distance(e){const I=this.jstar-e.jstar,L=this.astar-e.astar,N=this.bstar-e.bstar,S=Math.sqrt(I*I+L*L+N*N);return 1.41*Math.pow(S,.63)}static fromInt(e){return GI.fromIntInViewingConditions(e,TI.DEFAULT)}static fromIntInViewingConditions(e,I){const L=(e&16711680)>>16,N=(e&65280)>>8,S=e&255,n=At(L),i=At(N),C=At(S),o=.41233895*n+.35762064*i+.18051042*C,l=.2126*n+.7152*i+.0722*C,H=.01932141*n+.11916382*i+.95034478*C,P=.401288*o+.650173*l-.051461*H,K=-.250268*o+1.204414*l+.045854*H,f=-.002079*o+.048952*l+.953127*H,h=I.rgbD[0]*P,F=I.rgbD[1]*K,w=I.rgbD[2]*f,m=Math.pow(I.fl*Math.abs(h)/100,.42),y=Math.pow(I.fl*Math.abs(F)/100,.42),x=Math.pow(I.fl*Math.abs(w)/100,.42),q=aO(h)*400*m/(m+27.13),IA=aO(F)*400*y/(y+27.13),$=aO(w)*400*x/(x+27.13),tA=(11*q+-12*IA+$)/11,UA=(q+IA-2*$)/9,RA=(20*q+20*IA+21*$)/20,OA=(40*q+20*IA+$)/20,iA=Math.atan2(UA,tA)*180/Math.PI,KA=iA<0?iA+360:iA>=360?iA-360:iA,wA=KA*Math.PI/180,vA=OA*I.nbb,$A=100*Math.pow(vA/I.aw,I.c*I.z),RE=4/I.c*Math.sqrt($A/100)*(I.aw+4)*I.fLRoot,LE=KA<20.14?KA+360:KA,cA=.25*(Math.cos(LE*Math.PI/180+2)+3.8),lA=5e4/13*cA*I.nc*I.ncb*Math.sqrt(tA*tA+UA*UA)/(RA+.305),TA=Math.pow(lA,.9)*Math.pow(1.64-Math.pow(.29,I.n),.73),GA=TA*Math.sqrt($A/100),zA=GA*I.fLRoot,jA=50*Math.sqrt(TA*I.c/(I.aw+4)),ME=(1+100*.007)*$A/(1+.007*$A),eE=1/.0228*Math.log(1+.0228*zA),gE=eE*Math.cos(wA),ae=eE*Math.sin(wA);return new GI(KA,GA,$A,RE,zA,jA,ME,gE,ae)}static fromJch(e,I,L){return GI.fromJchInViewingConditions(e,I,L,TI.DEFAULT)}static fromJchInViewingConditions(e,I,L,N){const S=4/N.c*Math.sqrt(e/100)*(N.aw+4)*N.fLRoot,n=I*N.fLRoot,i=I/Math.sqrt(e/100),C=50*Math.sqrt(i*N.c/(N.aw+4)),o=L*Math.PI/180,l=(1+100*.007)*e/(1+.007*e),H=1/.0228*Math.log(1+.0228*n),P=H*Math.cos(o),K=H*Math.sin(o);return new GI(L,I,e,S,n,C,l,P,K)}static fromUcs(e,I,L){return GI.fromUcsInViewingConditions(e,I,L,TI.DEFAULT)}static fromUcsInViewingConditions(e,I,L,N){const S=I,n=L,i=Math.sqrt(S*S+n*n),o=(Math.exp(i*.0228)-1)/.0228/N.fLRoot;let l=Math.atan2(n,S)*(180/Math.PI);l<0&&(l+=360);const H=e/(1-(e-100)*.007);return GI.fromJchInViewingConditions(H,o,l,N)}toInt(){return this.viewed(TI.DEFAULT)}viewed(e){const I=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),L=Math.pow(I/Math.pow(1.64-Math.pow(.29,e.n),.73),1/.9),N=this.hue*Math.PI/180,S=.25*(Math.cos(N+2)+3.8),n=e.aw*Math.pow(this.j/100,1/e.c/e.z),i=S*(5e4/13)*e.nc*e.ncb,C=n/e.nbb,o=Math.sin(N),l=Math.cos(N),H=23*(C+.305)*L/(23*i+11*L*l+108*L*o),P=H*l,K=H*o,f=(460*C+451*P+288*K)/1403,h=(460*C-891*P-261*K)/1403,F=(460*C-220*P-6300*K)/1403,w=Math.max(0,27.13*Math.abs(f)/(400-Math.abs(f))),m=aO(f)*(100/e.fl)*Math.pow(w,1/.42),y=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),x=aO(h)*(100/e.fl)*Math.pow(y,1/.42),q=Math.max(0,27.13*Math.abs(F)/(400-Math.abs(F))),IA=aO(F)*(100/e.fl)*Math.pow(q,1/.42),$=m/e.rgbD[0],tA=x/e.rgbD[1],UA=IA/e.rgbD[2],RA=1.86206786*$-1.01125463*tA+.14918677*UA,OA=.38752654*$+.62144744*tA-.00897398*UA,NA=-.0158415*$-.03412294*tA+1.04996444*UA;return j4(RA,OA,NA)}static fromXyzInViewingConditions(e,I,L,N){const S=.401288*e+.650173*I-.051461*L,n=-.250268*e+1.204414*I+.045854*L,i=-.002079*e+.048952*I+.953127*L,C=N.rgbD[0]*S,o=N.rgbD[1]*n,l=N.rgbD[2]*i,H=Math.pow(N.fl*Math.abs(C)/100,.42),P=Math.pow(N.fl*Math.abs(o)/100,.42),K=Math.pow(N.fl*Math.abs(l)/100,.42),f=aO(C)*400*H/(H+27.13),h=aO(o)*400*P/(P+27.13),F=aO(l)*400*K/(K+27.13),w=(11*f+-12*h+F)/11,m=(f+h-2*F)/9,y=(20*f+20*h+21*F)/20,x=(40*f+20*h+F)/20,IA=Math.atan2(m,w)*180/Math.PI,$=IA<0?IA+360:IA>=360?IA-360:IA,tA=$*Math.PI/180,UA=x*N.nbb,RA=100*Math.pow(UA/N.aw,N.c*N.z),OA=4/N.c*Math.sqrt(RA/100)*(N.aw+4)*N.fLRoot,NA=$<20.14?$+360:$,iA=1/4*(Math.cos(NA*Math.PI/180+2)+3.8),wA=5e4/13*iA*N.nc*N.ncb*Math.sqrt(w*w+m*m)/(y+.305),vA=Math.pow(wA,.9)*Math.pow(1.64-Math.pow(.29,N.n),.73),$A=vA*Math.sqrt(RA/100),RE=$A*N.fLRoot,LE=50*Math.sqrt(vA*N.c/(N.aw+4)),cA=(1+100*.007)*RA/(1+.007*RA),nA=Math.log(1+.0228*RE)/.0228,lA=nA*Math.cos(tA),TA=nA*Math.sin(tA);return new GI($,$A,RA,OA,RE,LE,cA,lA,TA)}xyzInViewingConditions(e){const I=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),L=Math.pow(I/Math.pow(1.64-Math.pow(.29,e.n),.73),1/.9),N=this.hue*Math.PI/180,S=.25*(Math.cos(N+2)+3.8),n=e.aw*Math.pow(this.j/100,1/e.c/e.z),i=S*(5e4/13)*e.nc*e.ncb,C=n/e.nbb,o=Math.sin(N),l=Math.cos(N),H=23*(C+.305)*L/(23*i+11*L*l+108*L*o),P=H*l,K=H*o,f=(460*C+451*P+288*K)/1403,h=(460*C-891*P-261*K)/1403,F=(460*C-220*P-6300*K)/1403,w=Math.max(0,27.13*Math.abs(f)/(400-Math.abs(f))),m=aO(f)*(100/e.fl)*Math.pow(w,1/.42),y=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),x=aO(h)*(100/e.fl)*Math.pow(y,1/.42),q=Math.max(0,27.13*Math.abs(F)/(400-Math.abs(F))),IA=aO(F)*(100/e.fl)*Math.pow(q,1/.42),$=m/e.rgbD[0],tA=x/e.rgbD[1],UA=IA/e.rgbD[2],RA=1.86206786*$-1.01125463*tA+.14918677*UA,OA=.38752654*$+.62144744*tA-.00897398*UA,NA=-.0158415*$-.03412294*tA+1.04996444*UA;return[RA,OA,NA]}};r(GI,"Cam16");let LL=GI;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const uE=class uE{static sanitizeRadians(e){return(e+Math.PI*8)%(Math.PI*2)}static trueDelinearized(e){const I=e/100;let L=0;return I<=.0031308?L=I*12.92:L=1.055*Math.pow(I,1/2.4)-.055,L*255}static chromaticAdaptation(e){const I=Math.pow(Math.abs(e),.42);return aO(e)*400*I/(I+27.13)}static hueOf(e){const I=k_(e,uE.SCALED_DISCOUNT_FROM_LINRGB),L=uE.chromaticAdaptation(I[0]),N=uE.chromaticAdaptation(I[1]),S=uE.chromaticAdaptation(I[2]),n=(11*L+-12*N+S)/11,i=(L+N-2*S)/9;return Math.atan2(i,n)}static areInCyclicOrder(e,I,L){const N=uE.sanitizeRadians(I-e),S=uE.sanitizeRadians(L-e);return N<S}static intercept(e,I,L){return(I-e)/(L-e)}static lerpPoint(e,I,L){return[e[0]+(L[0]-e[0])*I,e[1]+(L[1]-e[1])*I,e[2]+(L[2]-e[2])*I]}static setCoordinate(e,I,L,N){const S=uE.intercept(e[N],I,L[N]);return uE.lerpPoint(e,S,L)}static isBounded(e){return 0<=e&&e<=100}static nthVertex(e,I){const L=uE.Y_FROM_LINRGB[0],N=uE.Y_FROM_LINRGB[1],S=uE.Y_FROM_LINRGB[2],n=I%4<=1?0:100,i=I%2===0?0:100;if(I<4){const C=n,o=i,l=(e-C*N-o*S)/L;return uE.isBounded(l)?[l,C,o]:[-1,-1,-1]}else if(I<8){const C=n,o=i,l=(e-o*L-C*S)/N;return uE.isBounded(l)?[o,l,C]:[-1,-1,-1]}else{const C=n,o=i,l=(e-C*L-o*N)/S;return uE.isBounded(l)?[C,o,l]:[-1,-1,-1]}}static bisectToSegment(e,I){let L=[-1,-1,-1],N=L,S=0,n=0,i=!1,C=!0;for(let o=0;o<12;o++){const l=uE.nthVertex(e,o);if(l[0]<0)continue;const H=uE.hueOf(l);if(!i){L=l,N=l,S=H,n=H,i=!0;continue}(C||uE.areInCyclicOrder(S,H,n))&&(C=!1,uE.areInCyclicOrder(S,I,H)?(N=l,n=H):(L=l,S=H))}return[L,N]}static midpoint(e,I){return[(e[0]+I[0])/2,(e[1]+I[1])/2,(e[2]+I[2])/2]}static criticalPlaneBelow(e){return Math.floor(e-.5)}static criticalPlaneAbove(e){return Math.ceil(e-.5)}static bisectToLimit(e,I){const L=uE.bisectToSegment(e,I);let N=L[0],S=uE.hueOf(N),n=L[1];for(let i=0;i<3;i++)if(N[i]!==n[i]){let C=-1,o=255;N[i]<n[i]?(C=uE.criticalPlaneBelow(uE.trueDelinearized(N[i])),o=uE.criticalPlaneAbove(uE.trueDelinearized(n[i]))):(C=uE.criticalPlaneAbove(uE.trueDelinearized(N[i])),o=uE.criticalPlaneBelow(uE.trueDelinearized(n[i])));for(let l=0;l<8&&!(Math.abs(o-C)<=1);l++){const H=Math.floor((C+o)/2),P=uE.CRITICAL_PLANES[H],K=uE.setCoordinate(N,P,n,i),f=uE.hueOf(K);uE.areInCyclicOrder(S,I,f)?(n=K,o=H):(N=K,S=f,C=H)}}return uE.midpoint(N,n)}static inverseChromaticAdaptation(e){const I=Math.abs(e),L=Math.max(0,27.13*I/(400-I));return aO(e)*Math.pow(L,1/.42)}static findResultByJ(e,I,L){let N=Math.sqrt(L)*11;const S=TI.DEFAULT,n=1/Math.pow(1.64-Math.pow(.29,S.n),.73),C=.25*(Math.cos(e+2)+3.8)*(5e4/13)*S.nc*S.ncb,o=Math.sin(e),l=Math.cos(e);for(let H=0;H<5;H++){const P=N/100,K=I===0||N===0?0:I/Math.sqrt(P),f=Math.pow(K*n,1/.9),F=S.aw*Math.pow(P,1/S.c/S.z)/S.nbb,w=23*(F+.305)*f/(23*C+11*f*l+108*f*o),m=w*l,y=w*o,x=(460*F+451*m+288*y)/1403,q=(460*F-891*m-261*y)/1403,IA=(460*F-220*m-6300*y)/1403,$=uE.inverseChromaticAdaptation(x),tA=uE.inverseChromaticAdaptation(q),UA=uE.inverseChromaticAdaptation(IA),RA=k_([$,tA,UA],uE.LINRGB_FROM_SCALED_DISCOUNT);if(RA[0]<0||RA[1]<0||RA[2]<0)return 0;const OA=uE.Y_FROM_LINRGB[0],NA=uE.Y_FROM_LINRGB[1],iA=uE.Y_FROM_LINRGB[2],KA=OA*RA[0]+NA*RA[1]+iA*RA[2];if(KA<=0)return 0;if(H===4||Math.abs(KA-L)<.002)return RA[0]>100.01||RA[1]>100.01||RA[2]>100.01?0:Zm(RA);N=N-(KA-L)*N/(2*KA)}return 0}static solveToInt(e,I,L){if(I<1e-4||L<1e-4||L>99.9999)return Zy(L);e=yy(e);const N=e/180*Math.PI,S=Ft(L),n=uE.findResultByJ(N,I,S);if(n!==0)return n;const i=uE.bisectToLimit(S,N);return Zm(i)}static solveToCam(e,I,L){return LL.fromInt(uE.solveToInt(e,I,L))}};r(uE,"HctSolver");let WI=uE;WI.SCALED_DISCOUNT_FROM_LINRGB=[[.001200833568784504,.002389694492170889,.0002795742885861124],[.0005891086651375999,.0029785502573438758,.0003270666104008398],[.00010146692491640572,.0005364214359186694,.0032979401770712076]];WI.LINRGB_FROM_SCALED_DISCOUNT=[[1373.2198709594231,-1100.4251190754821,-7.278681089101213],[-271.815969077903,559.6580465940733,-32.46047482791194],[1.9622899599665666,-57.173814538844006,308.7233197812385]];WI.Y_FROM_LINRGB=[.2126,.7152,.0722];WI.CRITICAL_PLANES=[.015176349177441876,.045529047532325624,.07588174588720938,.10623444424209313,.13658714259697685,.16693984095186062,.19729253930674434,.2276452376616281,.2579979360165119,.28835063437139563,.3188300904430532,.350925934958123,.3848314933096426,.42057480301049466,.458183274052838,.4976837250274023,.5391024159806381,.5824650784040898,.6277969426914107,.6751227633498623,.7244668422128921,.775853049866786,.829304845476233,.8848452951698498,.942497089126609,1.0022825574869039,1.0642236851973577,1.1283421258858297,1.1946592148522128,1.2631959812511864,1.3339731595349034,1.407011200216447,1.4823302800086415,1.5599503113873272,1.6398909516233677,1.7221716113234105,1.8068114625156377,1.8938294463134073,1.9832442801866852,2.075074464868551,2.1693382909216234,2.2660538449872063,2.36523901573795,2.4669114995532007,2.5710888059345764,2.6777882626779785,2.7870270208169257,2.898822059350997,3.0131901897720907,3.1301480604002863,3.2497121605402226,3.3718988244681087,3.4967242352587946,3.624204428461639,3.754355295633311,3.887192587735158,4.022731918402185,4.160988767090289,4.301978482107941,4.445716283538092,4.592217266055746,4.741496401646282,4.893568542229298,5.048448422192488,5.20615066083972,5.3666897647573375,5.5300801301023865,5.696336044816294,5.865471690767354,6.037501145825082,6.212438385869475,6.390297286737924,6.571091626112461,6.7548350853498045,6.941541251256611,7.131223617812143,7.323895587840543,7.5195704746346665,7.7182615035334345,7.919981813454504,8.124744458384042,8.332562408825165,8.543448553206703,8.757415699253682,8.974476575321063,9.194643831691977,9.417930041841839,9.644347703669503,9.873909240696694,10.106627003236781,10.342513269534024,10.58158024687427,10.8238400726681,11.069304815507364,11.317986476196008,11.569896988756009,11.825048221409341,12.083451977536606,12.345119996613247,12.610063955123938,12.878295467455942,13.149826086772048,13.42466730586372,13.702830557985108,13.984327217668513,14.269168601521828,14.55736596900856,14.848930523210871,15.143873411576273,15.44220572664832,15.743938506781891,16.04908273684337,16.35764934889634,16.66964922287304,16.985093187232053,17.30399201960269,17.62635644741625,17.95219714852476,18.281524751807332,18.614349837764564,18.95068293910138,19.290534541298456,19.633915083172692,19.98083495742689,20.331304511189067,20.685334046541502,21.042933821039977,21.404114048223256,21.76888489811322,22.137256497705877,22.50923893145328,22.884842241736916,23.264076429332462,23.6469514538663,24.033477234264016,24.42366364919083,24.817520537484558,25.21505769858089,25.61628489293138,26.021211842414342,26.429848230738664,26.842203703840827,27.258287870275353,27.678110301598522,28.10168053274597,28.529008062403893,28.96010235337422,29.39497283293396,29.83362889318845,30.276079891419332,30.722335150426627,31.172403958865512,31.62629557157785,32.08401920991837,32.54558406207592,33.010999283389665,33.4802739966603,33.953417292456834,34.430438229418264,34.911345834551085,35.39614910352207,35.88485700094671,36.37747846067349,36.87402238606382,37.37449765026789,37.87891309649659,38.38727753828926,38.89959975977785,39.41588851594697,39.93615253289054,40.460400508064545,40.98864111053629,41.520882981230194,42.05713473317016,42.597404951718396,43.141702194811224,43.6900349931913,44.24241185063697,44.798841244188324,45.35933162437017,45.92389141541209,46.49252901546552,47.065252796817916,47.64207110610409,48.22299226451468,48.808024568002054,49.3971762874833,49.9904556690408,50.587870934119984,51.189430279724725,51.79514187861014,52.40501387947288,53.0190544071392,53.637271562750364,54.259673423945976,54.88626804504493,55.517063457223934,56.15206766869424,56.79128866487574,57.43473440856916,58.08241284012621,58.734331877617365,59.39049941699807,60.05092333227251,60.715611475655585,61.38457167773311,62.057811747619894,62.7353394731159,63.417162620860914,64.10328893648692,64.79372614476921,65.48848194977529,66.18756403501224,66.89098006357258,67.59873767827808,68.31084450182222,69.02730813691093,69.74813616640164,70.47333615344107,71.20291564160104,71.93688215501312,72.67524319850172,73.41800625771542,74.16517879925733,74.9167682708136,75.67278210128072,76.43322770089146,77.1981124613393,77.96744375590167,78.74122893956174,79.51947534912904,80.30219030335869,81.08938110306934,81.88105503125999,82.67721935322541,83.4778813166706,84.28304815182372,85.09272707154808,85.90692527145302,86.72564993000343,87.54890820862819,88.3767072518277,89.2090541872801,90.04595612594655,90.88742016217518,91.73345337380438,92.58406282226491,93.43925555268066,94.29903859396902,95.16341895893969,96.03240364439274,96.9059996312159,97.78421388448044,98.6670533535366,99.55452497210776];/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const KN=class KN{static from(e,I,L){return new KN(WI.solveToInt(e,I,L))}static fromInt(e){return new KN(e)}toInt(){return this.argb}get hue(){return this.internalHue}set hue(e){this.setInternalState(WI.solveToInt(e,this.internalChroma,this.internalTone))}get chroma(){return this.internalChroma}set chroma(e){this.setInternalState(WI.solveToInt(this.internalHue,e,this.internalTone))}get tone(){return this.internalTone}set tone(e){this.setInternalState(WI.solveToInt(this.internalHue,this.internalChroma,e))}constructor(e){this.argb=e;const I=LL.fromInt(e);this.internalHue=I.hue,this.internalChroma=I.chroma,this.internalTone=bm(e),this.argb=e}setInternalState(e){const I=LL.fromInt(e);this.internalHue=I.hue,this.internalChroma=I.chroma,this.internalTone=bm(e),this.argb=e}inViewingConditions(e){const L=LL.fromInt(this.toInt()).xyzInViewingConditions(e),N=LL.fromXyzInViewingConditions(L[0],L[1],L[2],TI.make());return KN.from(N.hue,N.chroma,X_(L[1]))}};r(KN,"Hct");let qs=KN;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const lt=class lt{static ratioOfTones(e,I){return e=TC(0,100,e),I=TC(0,100,I),lt.ratioOfYs(Ft(e),Ft(I))}static ratioOfYs(e,I){const L=e>I?e:I,N=L===I?e:I;return(L+5)/(N+5)}static lighter(e,I){if(e<0||e>100)return-1;const L=Ft(e),N=I*(L+5)-5,S=lt.ratioOfYs(N,L),n=Math.abs(S-I);if(S<I&&n>.04)return-1;const i=X_(N)+.4;return i<0||i>100?-1:i}static darker(e,I){if(e<0||e>100)return-1;const L=Ft(e),N=(L+5)/I-5,S=lt.ratioOfYs(L,N),n=Math.abs(S-I);if(S<I&&n>.04)return-1;const i=X_(N)-.4;return i<0||i>100?-1:i}static lighterUnsafe(e,I){const L=lt.lighter(e,I);return L<0?100:L}static darkerUnsafe(e,I){const L=lt.darker(e,I);return L<0?0:L}};r(lt,"Contrast");let nO=lt;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const fl=class fl{static isDisliked(e){const I=Math.round(e.hue)>=90&&Math.round(e.hue)<=111,L=Math.round(e.chroma)>16,N=Math.round(e.tone)<65;return I&&L&&N}static fixIfDisliked(e){return fl.isDisliked(e)?qs.from(e.hue,e.chroma,70):e}};r(fl,"DislikeAnalyzer");let J_=fl;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const jR=class jR{static fromPalette(e){return new jR(e.name??"",e.palette,e.tone,e.isBackground??!1,e.background,e.secondBackground,e.contrastCurve,e.toneDeltaPair)}constructor(e,I,L,N,S,n,i,C){if(this.name=e,this.palette=I,this.tone=L,this.isBackground=N,this.background=S,this.secondBackground=n,this.contrastCurve=i,this.toneDeltaPair=C,this.hctCache=new Map,!S&&n)throw new Error(`Color ${e} has secondBackgrounddefined, but background is not defined.`);if(!S&&i)throw new Error(`Color ${e} has contrastCurvedefined, but background is not defined.`);if(S&&!i)throw new Error(`Color ${e} has backgrounddefined, but contrastCurve is not defined.`)}getArgb(e){return this.getHct(e).toInt()}getHct(e){const I=this.hctCache.get(e);if(I!=null)return I;const L=this.getTone(e),N=this.palette(e).getHct(L);return this.hctCache.size>4&&this.hctCache.clear(),this.hctCache.set(e,N),N}getTone(e){const I=e.contrastLevel<0;if(this.toneDeltaPair){const L=this.toneDeltaPair(e),N=L.roleA,S=L.roleB,n=L.delta,i=L.polarity,C=L.stayTogether,l=this.background(e).getTone(e),H=i==="nearer"||i==="lighter"&&!e.isDark||i==="darker"&&e.isDark,P=H?N:S,K=H?S:N,f=this.name===P.name,h=e.isDark?1:-1,F=P.contrastCurve.getContrast(e.contrastLevel),w=K.contrastCurve.getContrast(e.contrastLevel),m=P.tone(e);let y=nO.ratioOfTones(l,m)>=F?m:jR.foregroundTone(l,F);const x=K.tone(e);let q=nO.ratioOfTones(l,x)>=w?x:jR.foregroundTone(l,w);return I&&(y=jR.foregroundTone(l,F),q=jR.foregroundTone(l,w)),(q-y)*h>=n||(q=TC(0,100,y+n*h),(q-y)*h>=n||(y=TC(0,100,q-n*h))),50<=y&&y<60?h>0?(y=60,q=Math.max(q,y+n*h)):(y=49,q=Math.min(q,y+n*h)):50<=q&&q<60&&(C?h>0?(y=60,q=Math.max(q,y+n*h)):(y=49,q=Math.min(q,y+n*h)):h>0?q=60:q=49),f?y:q}else{let L=this.tone(e);if(this.background==null)return L;const N=this.background(e).getTone(e),S=this.contrastCurve.getContrast(e.contrastLevel);if(nO.ratioOfTones(N,L)>=S||(L=jR.foregroundTone(N,S)),I&&(L=jR.foregroundTone(N,S)),this.isBackground&&50<=L&&L<60&&(nO.ratioOfTones(49,N)>=S?L=49:L=60),this.secondBackground){const[n,i]=[this.background,this.secondBackground],[C,o]=[n(e).getTone(e),i(e).getTone(e)],[l,H]=[Math.max(C,o),Math.min(C,o)];if(nO.ratioOfTones(l,L)>=S&&nO.ratioOfTones(H,L)>=S)return L;const P=nO.lighter(l,S),K=nO.darker(H,S),f=[];return P!==-1&&f.push(P),K!==-1&&f.push(K),jR.tonePrefersLightForeground(C)||jR.tonePrefersLightForeground(o)?P<0?100:P:f.length===1?f[0]:K<0?0:K}return L}}static foregroundTone(e,I){const L=nO.lighterUnsafe(e,I),N=nO.darkerUnsafe(e,I),S=nO.ratioOfTones(L,e),n=nO.ratioOfTones(N,e);if(jR.tonePrefersLightForeground(e)){const C=Math.abs(S-n)<.1&&S<I&&n<I;return S>=I||S>=n||C?L:N}else return n>=I||n>=S?N:L}static tonePrefersLightForeground(e){return Math.round(e)<60}static toneAllowsLightForeground(e){return Math.round(e)<=49}static enableLightForeground(e){return jR.tonePrefersLightForeground(e)&&!jR.toneAllowsLightForeground(e)?49:e}};r(jR,"DynamicColor");let tE=jR;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var zs;(function(R){R[R.MONOCHROME=0]="MONOCHROME",R[R.NEUTRAL=1]="NEUTRAL",R[R.TONAL_SPOT=2]="TONAL_SPOT",R[R.VIBRANT=3]="VIBRANT",R[R.EXPRESSIVE=4]="EXPRESSIVE",R[R.FIDELITY=5]="FIDELITY",R[R.CONTENT=6]="CONTENT",R[R.RAINBOW=7]="RAINBOW",R[R.FRUIT_SALAD=8]="FRUIT_SALAD"})(zs||(zs={}));/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const zH=class zH{constructor(e,I,L,N){this.low=e,this.normal=I,this.medium=L,this.high=N}getContrast(e){return e<=-1?this.low:e<0?uT(this.low,this.normal,(e- -1)/1):e<.5?uT(this.normal,this.medium,(e-0)/.5):e<1?uT(this.medium,this.high,(e-.5)/.5):this.high}};r(zH,"ContrastCurve");let pE=zH;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const jH=class jH{constructor(e,I,L,N,S){this.roleA=e,this.roleB=I,this.delta=L,this.polarity=N,this.stayTogether=S}};r(jH,"ToneDeltaPair");let kR=jH;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function IT(R){return R.variant===zs.FIDELITY||R.variant===zs.CONTENT}r(IT,"isFidelity");function Je(R){return R.variant===zs.MONOCHROME}r(Je,"isMonochrome");function ky(R,e,I,L){let N=I,S=qs.from(R,e,I);if(S.chroma<e){let n=S.chroma;for(;S.chroma<e;){N+=L?-1:1;const i=qs.from(R,e,N);if(n>i.chroma||Math.abs(i.chroma-e)<.4)break;const C=Math.abs(i.chroma-e),o=Math.abs(S.chroma-e);C<o&&(S=i),n=Math.max(n,i.chroma)}}return N}r(ky,"findDesiredChromaByTone");function Xy(R){return TI.make(void 0,void 0,R.isDark?30:80,void 0,void 0)}r(Xy,"viewingConditionsForAlbers");function sH(R,e){const I=R.inViewingConditions(Xy(e));return tE.tonePrefersLightForeground(R.tone)&&!tE.toneAllowsLightForeground(I.tone)?tE.enableLightForeground(R.tone):tE.enableLightForeground(I.tone)}r(sH,"performAlbers");const ZT=class ZT{static highestSurface(e){return e.isDark?ZT.surfaceBright:ZT.surfaceDim}};r(ZT,"MaterialDynamicColors");let uA=ZT;uA.contentAccentToneDelta=15;uA.primaryPaletteKeyColor=tE.fromPalette({name:"primary_palette_key_color",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>R.primaryPalette.keyColor.tone,"tone")});uA.secondaryPaletteKeyColor=tE.fromPalette({name:"secondary_palette_key_color",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>R.secondaryPalette.keyColor.tone,"tone")});uA.tertiaryPaletteKeyColor=tE.fromPalette({name:"tertiary_palette_key_color",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>R.tertiaryPalette.keyColor.tone,"tone")});uA.neutralPaletteKeyColor=tE.fromPalette({name:"neutral_palette_key_color",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.neutralPalette.keyColor.tone,"tone")});uA.neutralVariantPaletteKeyColor=tE.fromPalette({name:"neutral_variant_palette_key_color",palette:r(R=>R.neutralVariantPalette,"palette"),tone:r(R=>R.neutralVariantPalette.keyColor.tone,"tone")});uA.background=tE.fromPalette({name:"background",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?6:98,"tone"),isBackground:!0});uA.onBackground=tE.fromPalette({name:"on_background",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?90:10,"tone"),background:r(R=>uA.background,"background"),contrastCurve:new pE(3,3,4.5,7)});uA.surface=tE.fromPalette({name:"surface",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?6:98,"tone"),isBackground:!0});uA.surfaceDim=tE.fromPalette({name:"surface_dim",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?6:87,"tone"),isBackground:!0});uA.surfaceBright=tE.fromPalette({name:"surface_bright",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?24:98,"tone"),isBackground:!0});uA.surfaceContainerLowest=tE.fromPalette({name:"surface_container_lowest",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?4:100,"tone"),isBackground:!0});uA.surfaceContainerLow=tE.fromPalette({name:"surface_container_low",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?10:96,"tone"),isBackground:!0});uA.surfaceContainer=tE.fromPalette({name:"surface_container",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?12:94,"tone"),isBackground:!0});uA.surfaceContainerHigh=tE.fromPalette({name:"surface_container_high",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?17:92,"tone"),isBackground:!0});uA.surfaceContainerHighest=tE.fromPalette({name:"surface_container_highest",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?22:90,"tone"),isBackground:!0});uA.onSurface=tE.fromPalette({name:"on_surface",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?90:10,"tone"),background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(4.5,7,11,21)});uA.surfaceVariant=tE.fromPalette({name:"surface_variant",palette:r(R=>R.neutralVariantPalette,"palette"),tone:r(R=>R.isDark?30:90,"tone"),isBackground:!0});uA.onSurfaceVariant=tE.fromPalette({name:"on_surface_variant",palette:r(R=>R.neutralVariantPalette,"palette"),tone:r(R=>R.isDark?80:30,"tone"),background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(3,4.5,7,11)});uA.inverseSurface=tE.fromPalette({name:"inverse_surface",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?90:20,"tone")});uA.inverseOnSurface=tE.fromPalette({name:"inverse_on_surface",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>R.isDark?20:95,"tone"),background:r(R=>uA.inverseSurface,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.outline=tE.fromPalette({name:"outline",palette:r(R=>R.neutralVariantPalette,"palette"),tone:r(R=>R.isDark?60:50,"tone"),background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1.5,3,4.5,7)});uA.outlineVariant=tE.fromPalette({name:"outline_variant",palette:r(R=>R.neutralVariantPalette,"palette"),tone:r(R=>R.isDark?30:80,"tone"),background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7)});uA.shadow=tE.fromPalette({name:"shadow",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>0,"tone")});uA.scrim=tE.fromPalette({name:"scrim",palette:r(R=>R.neutralPalette,"palette"),tone:r(R=>0,"tone")});uA.surfaceTint=tE.fromPalette({name:"surface_tint",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>R.isDark?80:40,"tone"),isBackground:!0});uA.primary=tE.fromPalette({name:"primary",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>Je(R)?R.isDark?100:0:R.isDark?80:40,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(3,4.5,7,11),toneDeltaPair:r(R=>new kR(uA.primaryContainer,uA.primary,15,"nearer",!1),"toneDeltaPair")});uA.onPrimary=tE.fromPalette({name:"on_primary",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>Je(R)?R.isDark?10:90:R.isDark?20:100,"tone"),background:r(R=>uA.primary,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.primaryContainer=tE.fromPalette({name:"primary_container",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>IT(R)?sH(R.sourceColorHct,R):Je(R)?R.isDark?85:25:R.isDark?30:90,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.primaryContainer,uA.primary,15,"nearer",!1),"toneDeltaPair")});uA.onPrimaryContainer=tE.fromPalette({name:"on_primary_container",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>IT(R)?tE.foregroundTone(uA.primaryContainer.tone(R),4.5):Je(R)?R.isDark?0:100:R.isDark?90:10,"tone"),background:r(R=>uA.primaryContainer,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.inversePrimary=tE.fromPalette({name:"inverse_primary",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>R.isDark?40:80,"tone"),background:r(R=>uA.inverseSurface,"background"),contrastCurve:new pE(3,4.5,7,11)});uA.secondary=tE.fromPalette({name:"secondary",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>R.isDark?80:40,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(3,4.5,7,11),toneDeltaPair:r(R=>new kR(uA.secondaryContainer,uA.secondary,15,"nearer",!1),"toneDeltaPair")});uA.onSecondary=tE.fromPalette({name:"on_secondary",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>Je(R)?R.isDark?10:100:R.isDark?20:100,"tone"),background:r(R=>uA.secondary,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.secondaryContainer=tE.fromPalette({name:"secondary_container",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>{const e=R.isDark?30:90;if(Je(R))return R.isDark?30:85;if(!IT(R))return e;let I=ky(R.secondaryPalette.hue,R.secondaryPalette.chroma,e,!R.isDark);return I=sH(R.secondaryPalette.getHct(I),R),I},"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.secondaryContainer,uA.secondary,15,"nearer",!1),"toneDeltaPair")});uA.onSecondaryContainer=tE.fromPalette({name:"on_secondary_container",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>IT(R)?tE.foregroundTone(uA.secondaryContainer.tone(R),4.5):R.isDark?90:10,"tone"),background:r(R=>uA.secondaryContainer,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.tertiary=tE.fromPalette({name:"tertiary",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>Je(R)?R.isDark?90:25:R.isDark?80:40,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(3,4.5,7,11),toneDeltaPair:r(R=>new kR(uA.tertiaryContainer,uA.tertiary,15,"nearer",!1),"toneDeltaPair")});uA.onTertiary=tE.fromPalette({name:"on_tertiary",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>Je(R)?R.isDark?10:90:R.isDark?20:100,"tone"),background:r(R=>uA.tertiary,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.tertiaryContainer=tE.fromPalette({name:"tertiary_container",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>{if(Je(R))return R.isDark?60:49;if(!IT(R))return R.isDark?30:90;const e=sH(R.tertiaryPalette.getHct(R.sourceColorHct.tone),R),I=R.tertiaryPalette.getHct(e);return J_.fixIfDisliked(I).tone},"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.tertiaryContainer,uA.tertiary,15,"nearer",!1),"toneDeltaPair")});uA.onTertiaryContainer=tE.fromPalette({name:"on_tertiary_container",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>Je(R)?R.isDark?0:100:IT(R)?tE.foregroundTone(uA.tertiaryContainer.tone(R),4.5):R.isDark?90:10,"tone"),background:r(R=>uA.tertiaryContainer,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.error=tE.fromPalette({name:"error",palette:r(R=>R.errorPalette,"palette"),tone:r(R=>R.isDark?80:40,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(3,4.5,7,11),toneDeltaPair:r(R=>new kR(uA.errorContainer,uA.error,15,"nearer",!1),"toneDeltaPair")});uA.onError=tE.fromPalette({name:"on_error",palette:r(R=>R.errorPalette,"palette"),tone:r(R=>R.isDark?20:100,"tone"),background:r(R=>uA.error,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.errorContainer=tE.fromPalette({name:"error_container",palette:r(R=>R.errorPalette,"palette"),tone:r(R=>R.isDark?30:90,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.errorContainer,uA.error,15,"nearer",!1),"toneDeltaPair")});uA.onErrorContainer=tE.fromPalette({name:"on_error_container",palette:r(R=>R.errorPalette,"palette"),tone:r(R=>R.isDark?90:10,"tone"),background:r(R=>uA.errorContainer,"background"),contrastCurve:new pE(4.5,7,11,21)});uA.primaryFixed=tE.fromPalette({name:"primary_fixed",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>Je(R)?40:90,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.primaryFixed,uA.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});uA.primaryFixedDim=tE.fromPalette({name:"primary_fixed_dim",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>Je(R)?30:80,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.primaryFixed,uA.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});uA.onPrimaryFixed=tE.fromPalette({name:"on_primary_fixed",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>Je(R)?100:10,"tone"),background:r(R=>uA.primaryFixedDim,"background"),secondBackground:r(R=>uA.primaryFixed,"secondBackground"),contrastCurve:new pE(4.5,7,11,21)});uA.onPrimaryFixedVariant=tE.fromPalette({name:"on_primary_fixed_variant",palette:r(R=>R.primaryPalette,"palette"),tone:r(R=>Je(R)?90:30,"tone"),background:r(R=>uA.primaryFixedDim,"background"),secondBackground:r(R=>uA.primaryFixed,"secondBackground"),contrastCurve:new pE(3,4.5,7,11)});uA.secondaryFixed=tE.fromPalette({name:"secondary_fixed",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>Je(R)?80:90,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.secondaryFixed,uA.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});uA.secondaryFixedDim=tE.fromPalette({name:"secondary_fixed_dim",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>Je(R)?70:80,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.secondaryFixed,uA.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});uA.onSecondaryFixed=tE.fromPalette({name:"on_secondary_fixed",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>10,"tone"),background:r(R=>uA.secondaryFixedDim,"background"),secondBackground:r(R=>uA.secondaryFixed,"secondBackground"),contrastCurve:new pE(4.5,7,11,21)});uA.onSecondaryFixedVariant=tE.fromPalette({name:"on_secondary_fixed_variant",palette:r(R=>R.secondaryPalette,"palette"),tone:r(R=>Je(R)?25:30,"tone"),background:r(R=>uA.secondaryFixedDim,"background"),secondBackground:r(R=>uA.secondaryFixed,"secondBackground"),contrastCurve:new pE(3,4.5,7,11)});uA.tertiaryFixed=tE.fromPalette({name:"tertiary_fixed",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>Je(R)?40:90,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.tertiaryFixed,uA.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});uA.tertiaryFixedDim=tE.fromPalette({name:"tertiary_fixed_dim",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>Je(R)?30:80,"tone"),isBackground:!0,background:r(R=>uA.highestSurface(R),"background"),contrastCurve:new pE(1,1,3,7),toneDeltaPair:r(R=>new kR(uA.tertiaryFixed,uA.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});uA.onTertiaryFixed=tE.fromPalette({name:"on_tertiary_fixed",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>Je(R)?100:10,"tone"),background:r(R=>uA.tertiaryFixedDim,"background"),secondBackground:r(R=>uA.tertiaryFixed,"secondBackground"),contrastCurve:new pE(4.5,7,11,21)});uA.onTertiaryFixedVariant=tE.fromPalette({name:"on_tertiary_fixed_variant",palette:r(R=>R.tertiaryPalette,"palette"),tone:r(R=>Je(R)?90:30,"tone"),background:r(R=>uA.tertiaryFixedDim,"background"),secondBackground:r(R=>uA.tertiaryFixed,"secondBackground"),contrastCurve:new pE(3,4.5,7,11)});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Au=class Au{fromInt(e){return xy(e)}toInt(e){return vy(e[0],e[1],e[2])}distance(e,I){const L=e[0]-I[0],N=e[1]-I[1],S=e[2]-I[2];return L*L+N*N+S*S}};r(Au,"LabPointProvider");let $_=Au;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Qy=10,Jy=3,Eu=class Eu{static quantize(e,I,L){const N=new Map,S=new Array,n=new Array,i=new $_;let C=0;for(let m=0;m<e.length;m++){const y=e[m],x=N.get(y);x===void 0?(C++,S.push(i.fromInt(y)),n.push(y),N.set(y,1)):N.set(y,x+1)}const o=new Array;for(let m=0;m<C;m++){const y=n[m],x=N.get(y);x!==void 0&&(o[m]=x)}let l=Math.min(L,C);I.length>0&&(l=Math.min(l,I.length));const H=new Array;for(let m=0;m<I.length;m++)H.push(i.fromInt(I[m]));const P=l-H.length;if(I.length===0&&P>0)for(let m=0;m<P;m++){const y=Math.random()*100,x=Math.random()*201+-100,q=Math.random()*201+-100;H.push(new Array(y,x,q))}const K=new Array;for(let m=0;m<C;m++)K.push(Math.floor(Math.random()*l));const f=new Array;for(let m=0;m<l;m++){f.push(new Array);for(let y=0;y<l;y++)f[m].push(0)}const h=new Array;for(let m=0;m<l;m++){h.push(new Array);for(let y=0;y<l;y++)h[m].push(new z_)}const F=new Array;for(let m=0;m<l;m++)F.push(0);for(let m=0;m<Qy;m++){for(let $=0;$<l;$++){for(let tA=$+1;tA<l;tA++){const UA=i.distance(H[$],H[tA]);h[tA][$].distance=UA,h[tA][$].index=$,h[$][tA].distance=UA,h[$][tA].index=tA}h[$].sort();for(let tA=0;tA<l;tA++)f[$][tA]=h[$][tA].index}let y=0;for(let $=0;$<C;$++){const tA=S[$],UA=K[$],RA=H[UA],OA=i.distance(tA,RA);let NA=OA,iA=-1;for(let KA=0;KA<l;KA++){if(h[UA][KA].distance>=4*OA)continue;const wA=i.distance(tA,H[KA]);wA<NA&&(NA=wA,iA=KA)}iA!==-1&&Math.abs(Math.sqrt(NA)-Math.sqrt(OA))>Jy&&(y++,K[$]=iA)}if(y===0&&m!==0)break;const x=new Array(l).fill(0),q=new Array(l).fill(0),IA=new Array(l).fill(0);for(let $=0;$<l;$++)F[$]=0;for(let $=0;$<C;$++){const tA=K[$],UA=S[$],RA=o[$];F[tA]+=RA,x[tA]+=UA[0]*RA,q[tA]+=UA[1]*RA,IA[tA]+=UA[2]*RA}for(let $=0;$<l;$++){const tA=F[$];if(tA===0){H[$]=[0,0,0];continue}const UA=x[$]/tA,RA=q[$]/tA,OA=IA[$]/tA;H[$]=[UA,RA,OA]}}const w=new Map;for(let m=0;m<l;m++){const y=F[m];if(y===0)continue;const x=i.toInt(H[m]);w.has(x)||w.set(x,y)}return w}};r(Eu,"QuantizerWsmeans");let q_=Eu;const eu=class eu{constructor(){this.distance=-1,this.index=-1}};r(eu,"DistanceAndIndex");let z_=eu;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Ru=class Ru{static quantize(e){const I=new Map;for(let L=0;L<e.length;L++){const N=e[L];z4(N)<255||I.set(N,(I.get(N)??0)+1)}return I}};r(Ru,"QuantizerMap");let j_=Ru;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const $r=5,$O=33,ST=35937,QR={RED:"red",GREEN:"green",BLUE:"blue"},Ou=class Ou{constructor(e=[],I=[],L=[],N=[],S=[],n=[]){this.weights=e,this.momentsR=I,this.momentsG=L,this.momentsB=N,this.moments=S,this.cubes=n}quantize(e,I){this.constructHistogram(e),this.computeMoments();const L=this.createBoxes(I);return this.createResult(L.resultCount)}constructHistogram(e){this.weights=Array.from({length:ST}).fill(0),this.momentsR=Array.from({length:ST}).fill(0),this.momentsG=Array.from({length:ST}).fill(0),this.momentsB=Array.from({length:ST}).fill(0),this.moments=Array.from({length:ST}).fill(0);const I=j_.quantize(e);for(const[L,N]of I.entries()){const S=zl(L),n=jl(L),i=A_(L),C=8-$r,o=(S>>C)+1,l=(n>>C)+1,H=(i>>C)+1,P=this.getIndex(o,l,H);this.weights[P]=(this.weights[P]??0)+N,this.momentsR[P]+=N*S,this.momentsG[P]+=N*n,this.momentsB[P]+=N*i,this.moments[P]+=N*(S*S+n*n+i*i)}}computeMoments(){for(let e=1;e<$O;e++){const I=Array.from({length:$O}).fill(0),L=Array.from({length:$O}).fill(0),N=Array.from({length:$O}).fill(0),S=Array.from({length:$O}).fill(0),n=Array.from({length:$O}).fill(0);for(let i=1;i<$O;i++){let C=0,o=0,l=0,H=0,P=0;for(let K=1;K<$O;K++){const f=this.getIndex(e,i,K);C+=this.weights[f],o+=this.momentsR[f],l+=this.momentsG[f],H+=this.momentsB[f],P+=this.moments[f],I[K]+=C,L[K]+=o,N[K]+=l,S[K]+=H,n[K]+=P;const h=this.getIndex(e-1,i,K);this.weights[f]=this.weights[h]+I[K],this.momentsR[f]=this.momentsR[h]+L[K],this.momentsG[f]=this.momentsG[h]+N[K],this.momentsB[f]=this.momentsB[h]+S[K],this.moments[f]=this.moments[h]+n[K]}}}}createBoxes(e){this.cubes=Array.from({length:e}).fill(0).map(()=>new EG);const I=Array.from({length:e}).fill(0);this.cubes[0].r0=0,this.cubes[0].g0=0,this.cubes[0].b0=0,this.cubes[0].r1=$O-1,this.cubes[0].g1=$O-1,this.cubes[0].b1=$O-1;let L=e,N=0;for(let S=1;S<e;S++){this.cut(this.cubes[N],this.cubes[S])?(I[N]=this.cubes[N].vol>1?this.variance(this.cubes[N]):0,I[S]=this.cubes[S].vol>1?this.variance(this.cubes[S]):0):(I[N]=0,S--),N=0;let n=I[0];for(let i=1;i<=S;i++)I[i]>n&&(n=I[i],N=i);if(n<=0){L=S+1;break}}return new eG(e,L)}createResult(e){const I=[];for(let L=0;L<e;++L){const N=this.cubes[L],S=this.volume(N,this.weights);if(S>0){const n=Math.round(this.volume(N,this.momentsR)/S),i=Math.round(this.volume(N,this.momentsG)/S),C=Math.round(this.volume(N,this.momentsB)/S),o=255<<24|(n&255)<<16|(i&255)<<8|C&255;I.push(o)}}return I}variance(e){const I=this.volume(e,this.momentsR),L=this.volume(e,this.momentsG),N=this.volume(e,this.momentsB),S=this.moments[this.getIndex(e.r1,e.g1,e.b1)]-this.moments[this.getIndex(e.r1,e.g1,e.b0)]-this.moments[this.getIndex(e.r1,e.g0,e.b1)]+this.moments[this.getIndex(e.r1,e.g0,e.b0)]-this.moments[this.getIndex(e.r0,e.g1,e.b1)]+this.moments[this.getIndex(e.r0,e.g1,e.b0)]+this.moments[this.getIndex(e.r0,e.g0,e.b1)]-this.moments[this.getIndex(e.r0,e.g0,e.b0)],n=I*I+L*L+N*N,i=this.volume(e,this.weights);return S-n/i}cut(e,I){const L=this.volume(e,this.momentsR),N=this.volume(e,this.momentsG),S=this.volume(e,this.momentsB),n=this.volume(e,this.weights),i=this.maximize(e,QR.RED,e.r0+1,e.r1,L,N,S,n),C=this.maximize(e,QR.GREEN,e.g0+1,e.g1,L,N,S,n),o=this.maximize(e,QR.BLUE,e.b0+1,e.b1,L,N,S,n);let l;const H=i.maximum,P=C.maximum,K=o.maximum;if(H>=P&&H>=K){if(i.cutLocation<0)return!1;l=QR.RED}else P>=H&&P>=K?l=QR.GREEN:l=QR.BLUE;switch(I.r1=e.r1,I.g1=e.g1,I.b1=e.b1,l){case QR.RED:e.r1=i.cutLocation,I.r0=e.r1,I.g0=e.g0,I.b0=e.b0;break;case QR.GREEN:e.g1=C.cutLocation,I.r0=e.r0,I.g0=e.g1,I.b0=e.b0;break;case QR.BLUE:e.b1=o.cutLocation,I.r0=e.r0,I.g0=e.g0,I.b0=e.b1;break;default:throw new Error("unexpected direction "+l)}return e.vol=(e.r1-e.r0)*(e.g1-e.g0)*(e.b1-e.b0),I.vol=(I.r1-I.r0)*(I.g1-I.g0)*(I.b1-I.b0),!0}maximize(e,I,L,N,S,n,i,C){const o=this.bottom(e,I,this.momentsR),l=this.bottom(e,I,this.momentsG),H=this.bottom(e,I,this.momentsB),P=this.bottom(e,I,this.weights);let K=0,f=-1,h=0,F=0,w=0,m=0;for(let y=L;y<N;y++){if(h=o+this.top(e,I,y,this.momentsR),F=l+this.top(e,I,y,this.momentsG),w=H+this.top(e,I,y,this.momentsB),m=P+this.top(e,I,y,this.weights),m===0)continue;let x=(h*h+F*F+w*w)*1,q=m*1,IA=x/q;h=S-h,F=n-F,w=i-w,m=C-m,m!==0&&(x=(h*h+F*F+w*w)*1,q=m*1,IA+=x/q,IA>K&&(K=IA,f=y))}return new RG(f,K)}volume(e,I){return I[this.getIndex(e.r1,e.g1,e.b1)]-I[this.getIndex(e.r1,e.g1,e.b0)]-I[this.getIndex(e.r1,e.g0,e.b1)]+I[this.getIndex(e.r1,e.g0,e.b0)]-I[this.getIndex(e.r0,e.g1,e.b1)]+I[this.getIndex(e.r0,e.g1,e.b0)]+I[this.getIndex(e.r0,e.g0,e.b1)]-I[this.getIndex(e.r0,e.g0,e.b0)]}bottom(e,I,L){switch(I){case QR.RED:return-L[this.getIndex(e.r0,e.g1,e.b1)]+L[this.getIndex(e.r0,e.g1,e.b0)]+L[this.getIndex(e.r0,e.g0,e.b1)]-L[this.getIndex(e.r0,e.g0,e.b0)];case QR.GREEN:return-L[this.getIndex(e.r1,e.g0,e.b1)]+L[this.getIndex(e.r1,e.g0,e.b0)]+L[this.getIndex(e.r0,e.g0,e.b1)]-L[this.getIndex(e.r0,e.g0,e.b0)];case QR.BLUE:return-L[this.getIndex(e.r1,e.g1,e.b0)]+L[this.getIndex(e.r1,e.g0,e.b0)]+L[this.getIndex(e.r0,e.g1,e.b0)]-L[this.getIndex(e.r0,e.g0,e.b0)];default:throw new Error("unexpected direction $direction")}}top(e,I,L,N){switch(I){case QR.RED:return N[this.getIndex(L,e.g1,e.b1)]-N[this.getIndex(L,e.g1,e.b0)]-N[this.getIndex(L,e.g0,e.b1)]+N[this.getIndex(L,e.g0,e.b0)];case QR.GREEN:return N[this.getIndex(e.r1,L,e.b1)]-N[this.getIndex(e.r1,L,e.b0)]-N[this.getIndex(e.r0,L,e.b1)]+N[this.getIndex(e.r0,L,e.b0)];case QR.BLUE:return N[this.getIndex(e.r1,e.g1,L)]-N[this.getIndex(e.r1,e.g0,L)]-N[this.getIndex(e.r0,e.g1,L)]+N[this.getIndex(e.r0,e.g0,L)];default:throw new Error("unexpected direction $direction")}}getIndex(e,I,L){return(e<<$r*2)+(e<<$r+1)+e+(I<<$r)+I+L}};r(Ou,"QuantizerWu");let AG=Ou;const Iu=class Iu{constructor(e=0,I=0,L=0,N=0,S=0,n=0,i=0){this.r0=e,this.r1=I,this.g0=L,this.g1=N,this.b0=S,this.b1=n,this.vol=i}};r(Iu,"Box");let EG=Iu;const tu=class tu{constructor(e,I){this.requestedCount=e,this.resultCount=I}};r(tu,"CreateBoxesResult");let eG=tu;const Lu=class Lu{constructor(e,I){this.cutLocation=e,this.maximum=I}};r(Lu,"MaximizeResult");let RG=Lu;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Nu=class Nu{static quantize(e,I){const N=new AG().quantize(e,I);return q_.quantize(e,N,I)}};r(Nu,"QuantizerCelebi");let js=Nu;const vR=Object.freeze({NON_SHINY:1n,SHINY:2n,MALE:4n,FEMALE:8n,DEFAULT_VARIANT:16n,VARIANT_2:32n,VARIANT_3:64n,DEFAULT_FORM:128n}),fe=[],FA=[],k={},lI={[A.BULBASAUR]:[E.SAPPY_SEED,E.MALIGNANT_CHAIN,E.EARTH_POWER,E.MATCHA_GOTCHA],[A.CHARMANDER]:[E.DRAGON_DANCE,E.BITTER_BLADE,E.EARTH_POWER,E.OBLIVION_WING],[A.SQUIRTLE]:[E.FREEZE_DRY,E.ARMOR_CANNON,E.SHORE_UP,E.ORIGIN_PULSE],[A.CATERPIE]:[E.SANDSEAR_STORM,E.SILK_TRAP,E.TWIN_BEAM,E.BLEAKWIND_STORM],[A.WEEDLE]:[E.THOUSAND_ARROWS,E.NOXIOUS_TORQUE,E.ATTACK_ORDER,E.VICTORY_DANCE],[A.PIDGEY]:[E.BLEAKWIND_STORM,E.SANDSEAR_STORM,E.CALM_MIND,E.BOOMBURST],[A.RATTATA]:[E.HYPER_FANG,E.PSYCHIC_FANGS,E.FIRE_FANG,E.EXTREME_SPEED],[A.SPEAROW]:[E.FLOATY_FALL,E.EXTREME_SPEED,E.KNOCK_OFF,E.TRIPLE_ARROWS],[A.EKANS]:[E.NOXIOUS_TORQUE,E.DRAGON_DANCE,E.SLACK_OFF,E.SHED_TAIL],[A.SANDSHREW]:[E.HIGH_HORSEPOWER,E.DIRE_CLAW,E.SHORE_UP,E.MIGHTY_CLEAVE],[A.NIDORAN_F]:[E.CALM_MIND,E.MOONLIGHT,E.MALIGNANT_CHAIN,E.SANDSEAR_STORM],[A.NIDORAN_M]:[E.DRAGON_DANCE,E.MOUNTAIN_GALE,E.NOXIOUS_TORQUE,E.PRECIPICE_BLADES],[A.VULPIX]:[E.MOONBLAST,E.INFERNAL_PARADE,E.MORNING_SUN,E.TAIL_GLOW],[A.ZUBAT]:[E.FLOATY_FALL,E.DIRE_CLAW,E.SWORDS_DANCE,E.COLLISION_COURSE],[A.ODDISH]:[E.SLUDGE_BOMB,E.FIERY_DANCE,E.STRENGTH_SAP,E.SPORE],[A.PARAS]:[E.LEECH_LIFE,E.HORN_LEECH,E.CRABHAMMER,E.SAPPY_SEED],[A.VENONAT]:[E.SLUDGE_BOMB,E.TOXIC_THREAD,E.EARTH_POWER,E.STORED_POWER],[A.DIGLETT]:[E.TRIPLE_DIVE,E.SWORDS_DANCE,E.TRIPLE_AXEL,E.HEADLONG_RUSH],[A.MEOWTH]:[E.HEART_STAMP,E.SWORDS_DANCE,E.SIZZLY_SLIDE,E.TAIL_SLAP],[A.PSYDUCK]:[E.FROST_BREATH,E.AQUA_STEP,E.MYSTICAL_POWER,E.BOUNCY_BUBBLE],[A.MANKEY]:[E.DRAIN_PUNCH,E.SLACK_OFF,E.METEOR_MASH,E.NO_RETREAT],[A.GROWLITHE]:[E.ZING_ZAP,E.PARTING_SHOT,E.MORNING_SUN,E.SACRED_FIRE],[A.POLIWAG]:[E.SLACK_OFF,E.WILDBOLT_STORM,E.DRAIN_PUNCH,E.SURGING_STRIKES],[A.ABRA]:[E.AURA_SPHERE,E.BADDY_BAD,E.ICE_BEAM,E.PSYSTRIKE],[A.MACHOP]:[E.COMBAT_TORQUE,E.METEOR_MASH,E.MOUNTAIN_GALE,E.FISSURE],[A.BELLSPROUT]:[E.SOLAR_BLADE,E.STRENGTH_SAP,E.FIRE_LASH,E.VICTORY_DANCE],[A.TENTACOOL]:[E.BANEFUL_BUNKER,E.MALIGNANT_CHAIN,E.BOUNCY_BUBBLE,E.STRENGTH_SAP],[A.GEODUDE]:[E.FLARE_BLITZ,E.HEAD_SMASH,E.SHORE_UP,E.SHELL_SMASH],[A.PONYTA]:[E.HEADLONG_RUSH,E.FIRE_LASH,E.SWORDS_DANCE,E.VOLT_TACKLE],[A.SLOWPOKE]:[E.SPLISHY_SPLASH,E.FROST_BREATH,E.SHED_TAIL,E.MYSTICAL_POWER],[A.MAGNEMITE]:[E.PARABOLIC_CHARGE,E.FLAMETHROWER,E.ICE_BEAM,E.THUNDERCLAP],[A.FARFETCHD]:[E.IVY_CUDGEL,E.TRIPLE_ARROWS,E.DRILL_RUN,E.VICTORY_DANCE],[A.DODUO]:[E.TRIPLE_AXEL,E.HYPER_DRILL,E.FLOATY_FALL,E.TRIPLE_ARROWS],[A.SEEL]:[E.FREEZE_DRY,E.BOUNCY_BUBBLE,E.SLACK_OFF,E.STEAM_ERUPTION],[A.GRIMER]:[E.SUCKER_PUNCH,E.CURSE,E.NOXIOUS_TORQUE,E.STRENGTH_SAP],[A.SHELLDER]:[E.ROCK_BLAST,E.WATER_SHURIKEN,E.BANEFUL_BUNKER,E.BONE_RUSH],[A.GASTLY]:[E.MALIGNANT_CHAIN,E.AURA_SPHERE,E.PARTING_SHOT,E.DARK_VOID],[A.ONIX]:[E.SHORE_UP,E.THOUSAND_WAVES,E.COIL,E.DIAMOND_STORM],[A.DROWZEE]:[E.BADDY_BAD,E.STRENGTH_SAP,E.LUMINA_CRASH,E.DARK_VOID],[A.KRABBY]:[E.DIRE_CLAW,E.DRAGON_HAMMER,E.IVY_CUDGEL,E.JET_PUNCH],[A.VOLTORB]:[E.NASTY_PLOT,E.FUSION_FLARE,E.FROST_BREATH,E.ELECTRO_DRIFT],[A.EXEGGCUTE]:[E.FICKLE_BEAM,E.APPLE_ACID,E.HEAT_WAVE,E.LUMINA_CRASH],[A.CUBONE]:[E.HEAD_SMASH,E.WOOD_HAMMER,E.SHADOW_SNEAK,E.BITTER_BLADE],[A.LICKITUNG]:[E.CRUSH_GRIP,E.FIRE_LASH,E.SLACK_OFF,E.MAGICAL_TORQUE],[A.KOFFING]:[E.SCALD,E.RECOVER,E.BODY_PRESS,E.MALIGNANT_CHAIN],[A.RHYHORN]:[E.SHORE_UP,E.ICE_HAMMER,E.ACCELEROCK,E.HEAD_SMASH],[A.TANGELA]:[E.NATURES_MADNESS,E.SNAP_TRAP,E.PARTING_SHOT,E.SAPPY_SEED],[A.KANGASKHAN]:[E.POWER_UP_PUNCH,E.TRAILBLAZE,E.COVET,E.SEISMIC_TOSS],[A.HORSEA]:[E.SNIPE_SHOT,E.TAKE_HEART,E.SHELL_SIDE_ARM,E.DRAGON_ENERGY],[A.GOLDEEN]:[E.GLACIAL_LANCE,E.SUPERCELL_SLAM,E.DRAGON_DANCE,E.FISHIOUS_REND],[A.STARYU]:[E.CALM_MIND,E.BOUNCY_BUBBLE,E.MOONBLAST,E.MYSTICAL_POWER],[A.SCYTHER]:[E.MIGHTY_CLEAVE,E.GEAR_GRIND,E.STORM_THROW,E.BITTER_BLADE],[A.PINSIR]:[E.HEADLONG_RUSH,E.LEECH_LIFE,E.CRUSH_GRIP,E.EXTREME_SPEED],[A.TAUROS]:[E.SWORDS_DANCE,E.FIRE_LASH,E.WICKED_TORQUE,E.COLLISION_COURSE],[A.MAGIKARP]:[E.FLIP_TURN,E.ICE_SPINNER,E.KNOCK_OFF,E.DRAGON_ASCENT],[A.LAPRAS]:[E.RECOVER,E.FREEZE_DRY,E.SCALD,E.SHELL_SMASH],[A.DITTO]:[E.MIMIC,E.SKETCH,E.METRONOME,E.IMPRISON],[A.EEVEE]:[E.WISH,E.NO_RETREAT,E.ZIPPY_ZAP,E.BOOMBURST],[A.PORYGON]:[E.THUNDERCLAP,E.AURA_SPHERE,E.FLAMETHROWER,E.TECHNO_BLAST],[A.OMANYTE]:[E.FREEZE_DRY,E.GIGA_DRAIN,E.POWER_GEM,E.STEAM_ERUPTION],[A.KABUTO]:[E.CEASELESS_EDGE,E.HIGH_HORSEPOWER,E.CRABHAMMER,E.MIGHTY_CLEAVE],[A.AERODACTYL]:[E.FLOATY_FALL,E.HIGH_HORSEPOWER,E.STONE_AXE,E.SWORDS_DANCE],[A.ARTICUNO]:[E.EARTH_POWER,E.CALM_MIND,E.AURORA_VEIL,E.AEROBLAST],[A.ZAPDOS]:[E.BLEAKWIND_STORM,E.CALM_MIND,E.SANDSEAR_STORM,E.ELECTRO_SHOT],[A.MOLTRES]:[E.EARTH_POWER,E.CALM_MIND,E.AEROBLAST,E.TORCH_SONG],[A.DRATINI]:[E.DRAGON_HAMMER,E.CRUSH_GRIP,E.FIRE_LASH,E.GIGATON_HAMMER],[A.MEWTWO]:[E.METEOR_MASH,E.MOONBLAST,E.THUNDEROUS_KICK,E.PHOTON_GEYSER],[A.MEW]:[E.PHOTON_GEYSER,E.MOONBLAST,E.ASTRAL_BARRAGE,E.SHELL_SMASH],[A.CHIKORITA]:[E.SAPPY_SEED,E.STONE_AXE,E.DRAGON_DANCE,E.SPORE],[A.CYNDAQUIL]:[E.NASTY_PLOT,E.EARTH_POWER,E.FIERY_DANCE,E.ELECTRO_DRIFT],[A.TOTODILE]:[E.THUNDER_PUNCH,E.DRAGON_DANCE,E.PLAY_ROUGH,E.SURGING_STRIKES],[A.SENTRET]:[E.TIDY_UP,E.FAKE_OUT,E.NUZZLE,E.EXTREME_SPEED],[A.HOOTHOOT]:[E.TAKE_HEART,E.ESPER_WING,E.AEROBLAST,E.BOOMBURST],[A.LEDYBA]:[E.POLLEN_PUFF,E.MAT_BLOCK,E.PARTING_SHOT,E.SPORE],[A.SPINARAK]:[E.PARTING_SHOT,E.ATTACK_ORDER,E.GASTRO_ACID,E.STRENGTH_SAP],[A.CHINCHOU]:[E.THUNDERCLAP,E.BOUNCY_BUBBLE,E.THUNDER_CAGE,E.TAIL_GLOW],[A.PICHU]:[E.MOONBLAST,E.TRIPLE_AXEL,E.FIERY_DANCE,E.AURA_WHEEL],[A.CLEFFA]:[E.CALM_MIND,E.EARTH_POWER,E.WISH,E.LIGHT_OF_RUIN],[A.IGGLYBUFF]:[E.DRAIN_PUNCH,E.GRAV_APPLE,E.SOFT_BOILED,E.EXTREME_SPEED],[A.TOGEPI]:[E.SCORCHING_SANDS,E.SPLISHY_SPLASH,E.RELIC_SONG,E.FIERY_DANCE],[A.NATU]:[E.REVIVAL_BLESSING,E.NASTY_PLOT,E.MOONBLAST,E.OBLIVION_WING],[A.MAREEP]:[E.ICE_BEAM,E.PARABOLIC_CHARGE,E.CORE_ENFORCER,E.TAIL_GLOW],[A.HOPPIP]:[E.FLOATY_FALL,E.STRENGTH_SAP,E.SAPPY_SEED,E.SPORE],[A.AIPOM]:[E.ROCK_BLAST,E.STORM_THROW,E.FAKE_OUT,E.SWORDS_DANCE],[A.SUNKERN]:[E.SPORE,E.QUIVER_DANCE,E.FIERY_DANCE,E.HYDRO_STEAM],[A.YANMA]:[E.NASTY_PLOT,E.EARTH_POWER,E.HEAT_WAVE,E.BLEAKWIND_STORM],[A.WOOPER]:[E.SIZZLY_SLIDE,E.RECOVER,E.SHED_TAIL,E.SURGING_STRIKES],[A.MURKROW]:[E.TRIPLE_ARROWS,E.FLOATY_FALL,E.TIDY_UP,E.WICKED_BLOW],[A.MISDREAVUS]:[E.TAKE_HEART,E.MOONBLAST,E.AURA_SPHERE,E.MOONGEIST_BEAM],[A.UNOWN]:[E.NATURE_POWER,E.COSMIC_POWER,E.ANCIENT_POWER,E.MYSTICAL_POWER],[A.GIRAFARIG]:[E.MYSTICAL_POWER,E.NIGHT_DAZE,E.RECOVER,E.BOOMBURST],[A.PINECO]:[E.METAL_BURST,E.SHORE_UP,E.BODY_PRESS,E.DIAMOND_STORM],[A.DUNSPARCE]:[E.WICKED_TORQUE,E.MAGICAL_TORQUE,E.BLAZING_TORQUE,E.EXTREME_SPEED],[A.GLIGAR]:[E.FLOATY_FALL,E.THOUSAND_WAVES,E.SPIKY_SHIELD,E.MIGHTY_CLEAVE],[A.SNUBBULL]:[E.FACADE,E.HIGH_HORSEPOWER,E.SWORDS_DANCE,E.EXTREME_SPEED],[A.QWILFISH]:[E.BARB_BARRAGE,E.BANEFUL_BUNKER,E.RECOVER,E.FISHIOUS_REND],[A.SHUCKLE]:[E.STUFF_CHEEKS,E.HEAL_ORDER,E.BODY_PRESS,E.SALT_CURE],[A.HERACROSS]:[E.ROCK_BLAST,E.STORM_THROW,E.ICICLE_SPEAR,E.SCALE_SHOT],[A.SNEASEL]:[E.DIRE_CLAW,E.DARKEST_LARIAT,E.TRIPLE_AXEL,E.CLOSE_COMBAT],[A.TEDDIURSA]:[E.MOUNTAIN_GALE,E.FAKE_OUT,E.SLACK_OFF,E.PRECIPICE_BLADES],[A.SLUGMA]:[E.BURNING_BULWARK,E.POWER_GEM,E.SOLAR_BEAM,E.MAGMA_STORM],[A.SWINUB]:[E.SLACK_OFF,E.MOUNTAIN_GALE,E.STONE_AXE,E.PRECIPICE_BLADES],[A.CORSOLA]:[E.SCALD,E.FREEZE_DRY,E.STRENGTH_SAP,E.SALT_CURE],[A.REMORAID]:[E.WATER_SHURIKEN,E.TAKE_HEART,E.SHELL_SIDE_ARM,E.BOUNCY_BUBBLE],[A.DELIBIRD]:[E.BONEMERANG,E.FLOATY_FALL,E.VICTORY_DANCE,E.GLACIAL_LANCE],[A.SKARMORY]:[E.ROOST,E.BODY_PRESS,E.SPIKY_SHIELD,E.BEAK_BLAST],[A.HOUNDOUR]:[E.FIERY_WRATH,E.THUNDERBOLT,E.MOONBLAST,E.ARMOR_CANNON],[A.PHANPY]:[E.SHORE_UP,E.SWORDS_DANCE,E.MOUNTAIN_GALE,E.COLLISION_COURSE],[A.STANTLER]:[E.THUNDEROUS_KICK,E.PHOTON_GEYSER,E.SWORDS_DANCE,E.BOOMBURST],[A.SMEARGLE]:[E.CONVERSION,E.BURNING_BULWARK,E.SALT_CURE,E.DARK_VOID],[A.TYROGUE]:[E.VICTORY_DANCE,E.THUNDEROUS_KICK,E.METEOR_MASH,E.WICKED_BLOW],[A.SMOOCHUM]:[E.LUSTER_PURGE,E.AURA_SPHERE,E.FREEZE_DRY,E.QUIVER_DANCE],[A.ELEKID]:[E.FIRE_LASH,E.ZING_ZAP,E.MOUNTAIN_GALE,E.SHIFT_GEAR],[A.MAGBY]:[E.THUNDERCLAP,E.EARTH_POWER,E.ENERGY_BALL,E.BLUE_FLARE],[A.MILTANK]:[E.BODY_PRESS,E.BULK_UP,E.KNOCK_OFF,E.SIZZLY_SLIDE],[A.RAIKOU]:[E.PARABOLIC_CHARGE,E.NASTY_PLOT,E.FROST_BREATH,E.ELECTRO_DRIFT],[A.ENTEI]:[E.BURNING_BULWARK,E.DRAGON_DANCE,E.EARTHQUAKE,E.PYRO_BALL],[A.SUICUNE]:[E.RECOVER,E.NASTY_PLOT,E.FREEZE_DRY,E.STEAM_ERUPTION],[A.LARVITAR]:[E.DRAGON_DANCE,E.MOUNTAIN_GALE,E.SHORE_UP,E.DIAMOND_STORM],[A.LUGIA]:[E.NASTY_PLOT,E.LUMINA_CRASH,E.AURA_SPHERE,E.OBLIVION_WING],[A.HO_OH]:[E.BRAVE_BIRD,E.DRAGON_DANCE,E.REVIVAL_BLESSING,E.BOLT_BEAK],[A.CELEBI]:[E.PHOTON_GEYSER,E.MATCHA_GOTCHA,E.REVIVAL_BLESSING,E.QUIVER_DANCE],[A.TREECKO]:[E.NASTY_PLOT,E.CORE_ENFORCER,E.FLAMETHROWER,E.SEED_FLARE],[A.TORCHIC]:[E.THUNDEROUS_KICK,E.ZING_ZAP,E.BURNING_BULWARK,E.PYRO_BALL],[A.MUDKIP]:[E.SHORE_UP,E.MOUNTAIN_GALE,E.AQUA_STEP,E.PRECIPICE_BLADES],[A.POOCHYENA]:[E.KNOCK_OFF,E.CLOSE_COMBAT,E.DIRE_CLAW,E.VICTORY_DANCE],[A.ZIGZAGOON]:[E.EXTREME_SPEED,E.NUZZLE,E.HIGH_HORSEPOWER,E.TIDY_UP],[A.WURMPLE]:[E.BATON_PASS,E.BLEAKWIND_STORM,E.STORED_POWER,E.MALIGNANT_CHAIN],[A.LOTAD]:[E.REVELATION_DANCE,E.APPLE_ACID,E.ICE_BEAM,E.QUIVER_DANCE],[A.SEEDOT]:[E.SWORDS_DANCE,E.SACRED_SWORD,E.KOWTOW_CLEAVE,E.BITTER_BLADE],[A.TAILLOW]:[E.BOOMBURST,E.FACADE,E.HEADLONG_RUSH,E.NO_RETREAT],[A.WINGULL]:[E.THUNDER,E.FLIP_TURN,E.CALM_MIND,E.STEAM_ERUPTION],[A.RALTS]:[E.PSYBLADE,E.BITTER_BLADE,E.NO_RETREAT,E.BOOMBURST],[A.SURSKIT]:[E.POLLEN_PUFF,E.FIERY_DANCE,E.BOUNCY_BUBBLE,E.AEROBLAST],[A.SHROOMISH]:[E.ACCELEROCK,E.TRAILBLAZE,E.STORM_THROW,E.SAPPY_SEED],[A.SLAKOTH]:[E.FACADE,E.DRAIN_PUNCH,E.KNOCK_OFF,E.SKILL_SWAP],[A.NINCADA]:[E.BULLDOZE,E.STICKY_WEB,E.SHADOW_BONE,E.SHELL_SMASH],[A.WHISMUR]:[E.ALLURING_VOICE,E.SHIFT_GEAR,E.SPARKLING_ARIA,E.TORCH_SONG],[A.MAKUHITA]:[E.COMBAT_TORQUE,E.SLACK_OFF,E.HEAT_CRASH,E.DOUBLE_IRON_BASH],[A.AZURILL]:[E.JET_PUNCH,E.MAGICAL_TORQUE,E.SWORDS_DANCE,E.SURGING_STRIKES],[A.NOSEPASS]:[E.SHORE_UP,E.BODY_PRESS,E.CALM_MIND,E.TACHYON_CUTTER],[A.SKITTY]:[E.THUNDEROUS_KICK,E.ENTRAINMENT,E.TIDY_UP,E.V_CREATE],[A.SABLEYE]:[E.RECOVER,E.TOPSY_TURVY,E.CURSE,E.SALT_CURE],[A.MAWILE]:[E.BULLET_PUNCH,E.HORN_LEECH,E.EARTHQUAKE,E.MAGICAL_TORQUE],[A.ARON]:[E.HEAD_SMASH,E.BODY_PRESS,E.SHORE_UP,E.SALT_CURE],[A.MEDITITE]:[E.THUNDEROUS_KICK,E.SUCKER_PUNCH,E.BULLET_PUNCH,E.PHOTON_GEYSER],[A.ELECTRIKE]:[E.FROST_BREATH,E.HEAT_WAVE,E.NASTY_PLOT,E.ELECTRO_DRIFT],[A.PLUSLE]:[E.FLAMETHROWER,E.GLITZY_GLOW,E.SPLISHY_SPLASH,E.TAIL_GLOW],[A.MINUN]:[E.ICE_BEAM,E.BADDY_BAD,E.SPARKLY_SWIRL,E.TAIL_GLOW],[A.VOLBEAT]:[E.BATON_PASS,E.STICKY_WEB,E.DECORATE,E.VICTORY_DANCE],[A.ILLUMISE]:[E.PARTING_SHOT,E.GLITZY_GLOW,E.POWDER,E.QUIVER_DANCE],[A.GULPIN]:[E.MALIGNANT_CHAIN,E.EARTH_POWER,E.CALM_MIND,E.STRENGTH_SAP],[A.CARVANHA]:[E.THUNDER_FANG,E.GUNK_SHOT,E.OBSTRUCT,E.SURGING_STRIKES],[A.WAILMER]:[E.TAKE_HEART,E.COMEUPPANCE,E.SLACK_OFF,E.STEAM_ERUPTION],[A.NUMEL]:[E.TRICK_ROOM,E.ENERGY_BALL,E.SLACK_OFF,E.BLUE_FLARE],[A.TORKOAL]:[E.MORNING_SUN,E.BURNING_BULWARK,E.BODY_PRESS,E.HYDRO_STEAM],[A.SPOINK]:[E.AURA_SPHERE,E.MILK_DRINK,E.EXPANDING_FORCE,E.TAIL_GLOW],[A.SPINDA]:[E.SUPERPOWER,E.SLACK_OFF,E.FLEUR_CANNON,E.V_CREATE],[A.TRAPINCH]:[E.FIRE_LASH,E.DRAGON_DARTS,E.THOUSAND_ARROWS,E.DRAGON_ENERGY],[A.CACNEA]:[E.EARTH_POWER,E.CEASELESS_EDGE,E.NIGHT_DAZE,E.IVY_CUDGEL],[A.SWABLU]:[E.ROOST,E.NASTY_PLOT,E.FLOATY_FALL,E.BOOMBURST],[A.ZANGOOSE]:[E.FACADE,E.HIGH_HORSEPOWER,E.EXTREME_SPEED,E.TIDY_UP],[A.SEVIPER]:[E.ICE_BEAM,E.BITTER_BLADE,E.SUCKER_PUNCH,E.NO_RETREAT],[A.LUNATONE]:[E.REVELATION_DANCE,E.MOONGEIST_BEAM,E.SHELL_SMASH,E.LUMINA_CRASH],[A.SOLROCK]:[E.MIGHTY_CLEAVE,E.PHOTON_GEYSER,E.SHELL_SMASH,E.SACRED_FIRE],[A.BARBOACH]:[E.DRAGON_DANCE,E.ZING_ZAP,E.ICE_SPINNER,E.SURGING_STRIKES],[A.CORPHISH]:[E.CEASELESS_EDGE,E.SHELL_SIDE_ARM,E.SUCKER_PUNCH,E.JET_PUNCH],[A.BALTOY]:[E.RECOVER,E.GLARE,E.RUINATION,E.MYSTICAL_POWER],[A.LILEEP]:[E.POWER_GEM,E.SCALD,E.STRENGTH_SAP,E.SAPPY_SEED],[A.ANORITH]:[E.FIRST_IMPRESSION,E.LEECH_LIFE,E.DRAGON_DANCE,E.MIGHTY_CLEAVE],[A.FEEBAS]:[E.CALM_MIND,E.FREEZE_DRY,E.MOONBLAST,E.STEAM_ERUPTION],[A.CASTFORM]:[E.BOOMBURST,E.HYDRO_STEAM,E.ERUPTION,E.QUIVER_DANCE],[A.KECLEON]:[E.ZIPPY_ZAP,E.COIL,E.EXTREME_SPEED,E.MULTI_ATTACK],[A.SHUPPET]:[E.STORM_THROW,E.TIDY_UP,E.PARTING_SHOT,E.SPECTRAL_THIEF],[A.DUSKULL]:[E.BULK_UP,E.DRAIN_PUNCH,E.RECOVER,E.RAGE_FIST],[A.TROPIUS]:[E.STUFF_CHEEKS,E.EARTH_POWER,E.APPLE_ACID,E.SAPPY_SEED],[A.ABSOL]:[E.KOWTOW_CLEAVE,E.SACRED_SWORD,E.PSYBLADE,E.BITTER_BLADE],[A.WYNAUT]:[E.RECOVER,E.SHED_TAIL,E.TAUNT,E.COMEUPPANCE],[A.SNORUNT]:[E.SPARKLY_SWIRL,E.NASTY_PLOT,E.EARTH_POWER,E.BLOOD_MOON],[A.SPHEAL]:[E.FLIP_TURN,E.FREEZE_DRY,E.SLACK_OFF,E.STEAM_ERUPTION],[A.CLAMPERL]:[E.SHELL_SIDE_ARM,E.BOUNCY_BUBBLE,E.FREEZE_DRY,E.STEAM_ERUPTION],[A.RELICANTH]:[E.DRAGON_DANCE,E.SHORE_UP,E.WAVE_CRASH,E.DIAMOND_STORM],[A.LUVDISC]:[E.BATON_PASS,E.HEART_SWAP,E.GLITZY_GLOW,E.REVIVAL_BLESSING],[A.BAGON]:[E.HEADLONG_RUSH,E.FIRE_LASH,E.DRAGON_DANCE,E.DRAGON_DARTS],[A.BELDUM]:[E.HEADLONG_RUSH,E.DRAIN_PUNCH,E.ICE_SPINNER,E.SHIFT_GEAR],[A.REGIROCK]:[E.STONE_AXE,E.BODY_PRESS,E.SHORE_UP,E.SALT_CURE],[A.REGICE]:[E.EARTH_POWER,E.TAKE_HEART,E.RECOVER,E.FREEZE_DRY],[A.REGISTEEL]:[E.BODY_PRESS,E.SIZZLY_SLIDE,E.RECOVER,E.GIGATON_HAMMER],[A.LATIAS]:[E.CORE_ENFORCER,E.FUSION_FLARE,E.SPARKLY_SWIRL,E.MYSTICAL_POWER],[A.LATIOS]:[E.CORE_ENFORCER,E.BLUE_FLARE,E.NASTY_PLOT,E.TACHYON_CUTTER],[A.KYOGRE]:[E.RECOVER,E.HURRICANE,E.FREEZY_FROST,E.WILDBOLT_STORM],[A.GROUDON]:[E.STONE_AXE,E.SOLAR_BLADE,E.MORNING_SUN,E.SACRED_FIRE],[A.RAYQUAZA]:[E.V_CREATE,E.DRAGON_DARTS,E.CORE_ENFORCER,E.OBLIVION_WING],[A.JIRACHI]:[E.TACHYON_CUTTER,E.TRIPLE_ARROWS,E.ROCK_SLIDE,E.SHELL_SMASH],[A.DEOXYS]:[E.COLLISION_COURSE,E.FUSION_FLARE,E.PARTING_SHOT,E.LUMINA_CRASH],[A.TURTWIG]:[E.SHELL_SMASH,E.MIGHTY_CLEAVE,E.ICE_SPINNER,E.SAPPY_SEED],[A.CHIMCHAR]:[E.THUNDERBOLT,E.SECRET_SWORD,E.TRIPLE_AXEL,E.SACRED_FIRE],[A.PIPLUP]:[E.KINGS_SHIELD,E.TACHYON_CUTTER,E.FREEZE_DRY,E.STEAM_ERUPTION],[A.STARLY]:[E.SWORDS_DANCE,E.HEAD_CHARGE,E.FLARE_BLITZ,E.EXTREME_SPEED],[A.BIDOOF]:[E.EXTREME_SPEED,E.COSMIC_POWER,E.POWER_TRIP,E.AQUA_STEP],[A.KRICKETOT]:[E.BONEMERANG,E.VICTORY_DANCE,E.STONE_AXE,E.POPULATION_BOMB],[A.SHINX]:[E.FIRE_LASH,E.TRIPLE_AXEL,E.ZIPPY_ZAP,E.BOLT_STRIKE],[A.BUDEW]:[E.FIERY_DANCE,E.ACID_SPRAY,E.BOUNCY_BUBBLE,E.QUIVER_DANCE],[A.CRANIDOS]:[E.VOLT_TACKLE,E.ACCELEROCK,E.FLARE_BLITZ,E.SHIFT_GEAR],[A.SHIELDON]:[E.SHORE_UP,E.BODY_PRESS,E.KINGS_SHIELD,E.DIAMOND_STORM],[A.BURMY]:[E.FIERY_DANCE,E.DEFEND_ORDER,E.HEAL_ORDER,E.SAPPY_SEED],[A.COMBEE]:[E.SPORE,E.FLOATY_FALL,E.KINGS_SHIELD,E.VICTORY_DANCE],[A.PACHIRISU]:[E.FREEZY_FROST,E.SIZZLY_SLIDE,E.SLACK_OFF,E.THUNDER_CAGE],[A.BUIZEL]:[E.JET_PUNCH,E.TRIPLE_AXEL,E.SUPERCELL_SLAM,E.SURGING_STRIKES],[A.CHERUBI]:[E.SLEEP_POWDER,E.STRENGTH_SAP,E.FIRE_LASH,E.FLOWER_TRICK],[A.SHELLOS]:[E.BOUNCY_BUBBLE,E.SCORCHING_SANDS,E.FREEZE_DRY,E.STEAM_ERUPTION],[A.DRIFLOON]:[E.PSYCHO_SHIFT,E.MIND_BLOWN,E.CALM_MIND,E.OBLIVION_WING],[A.BUNEARY]:[E.TRIPLE_AXEL,E.EXTREME_SPEED,E.THUNDEROUS_KICK,E.SWORDS_DANCE],[A.GLAMEOW]:[E.PARTING_SHOT,E.HIGH_HORSEPOWER,E.SWORDS_DANCE,E.EXTREME_SPEED],[A.CHINGLING]:[E.ALLURING_VOICE,E.EERIE_SPELL,E.TORCH_SONG,E.BOOMBURST],[A.STUNKY]:[E.CEASELESS_EDGE,E.FIRE_LASH,E.RECOVER,E.DIRE_CLAW],[A.BRONZOR]:[E.RECOVER,E.TACHYON_CUTTER,E.GLARE,E.LUMINA_CRASH],[A.BONSLY]:[E.ACCELEROCK,E.SWORDS_DANCE,E.STRENGTH_SAP,E.SAPPY_SEED],[A.MIME_JR]:[E.CHILLY_RECEPTION,E.MOONBLAST,E.FROST_BREATH,E.LUMINA_CRASH],[A.HAPPINY]:[E.COTTON_GUARD,E.SEISMIC_TOSS,E.SIZZLY_SLIDE,E.REVIVAL_BLESSING],[A.CHATOT]:[E.SPARKLING_ARIA,E.BOOMBURST,E.BATON_PASS,E.TORCH_SONG],[A.SPIRITOMB]:[E.PARTING_SHOT,E.BADDY_BAD,E.STRENGTH_SAP,E.SPECTRAL_THIEF],[A.GIBLE]:[E.METEOR_MASH,E.BITTER_BLADE,E.LANDS_WRATH,E.DRAGON_DANCE],[A.MUNCHLAX]:[E.STUFF_CHEEKS,E.GRAV_APPLE,E.SLACK_OFF,E.EXTREME_SPEED],[A.RIOLU]:[E.THUNDEROUS_KICK,E.TACHYON_CUTTER,E.TRIPLE_AXEL,E.SUNSTEEL_STRIKE],[A.HIPPOPOTAS]:[E.SHORE_UP,E.STONE_AXE,E.BULK_UP,E.SALT_CURE],[A.SKORUPI]:[E.COIL,E.DIRE_CLAW,E.CRABHAMMER,E.WICKED_BLOW],[A.CROAGUNK]:[E.DIRE_CLAW,E.TRIPLE_AXEL,E.THUNDEROUS_KICK,E.VICTORY_DANCE],[A.CARNIVINE]:[E.STRENGTH_SAP,E.FIRE_LASH,E.COIL,E.SAPPY_SEED],[A.FINNEON]:[E.QUIVER_DANCE,E.SPLISHY_SPLASH,E.FREEZE_DRY,E.OBLIVION_WING],[A.MANTYKE]:[E.SPLISHY_SPLASH,E.FREEZY_FROST,E.NASTY_PLOT,E.OBLIVION_WING],[A.SNOVER]:[E.LANDS_WRATH,E.POWDER,E.CALM_MIND,E.MATCHA_GOTCHA],[A.ROTOM]:[E.STRENGTH_SAP,E.FIERY_DANCE,E.SPLISHY_SPLASH,E.ELECTRO_DRIFT],[A.UXIE]:[E.LUMINA_CRASH,E.AURA_SPHERE,E.RECOVER,E.TAIL_GLOW],[A.MESPRIT]:[E.PHOTON_GEYSER,E.AURA_SPHERE,E.RECOVER,E.TAIL_GLOW],[A.AZELF]:[E.PSYSTRIKE,E.AURA_SPHERE,E.ICE_BEAM,E.TAIL_GLOW],[A.DIALGA]:[E.CORE_ENFORCER,E.TAKE_HEART,E.RECOVER,E.MAKE_IT_RAIN],[A.PALKIA]:[E.MALIGNANT_CHAIN,E.TAKE_HEART,E.RECOVER,E.ORIGIN_PULSE],[A.HEATRAN]:[E.ENERGY_BALL,E.RECOVER,E.ERUPTION,E.TACHYON_CUTTER],[A.REGIGIGAS]:[E.SKILL_SWAP,E.RECOVER,E.EXTREME_SPEED,E.GIGATON_HAMMER],[A.GIRATINA]:[E.DRAGON_DANCE,E.SPECTRAL_THIEF,E.RECOVER,E.COLLISION_COURSE],[A.CRESSELIA]:[E.COSMIC_POWER,E.BODY_PRESS,E.SIZZLY_SLIDE,E.LUMINA_CRASH],[A.PHIONE]:[E.BOUNCY_BUBBLE,E.FREEZE_DRY,E.STORED_POWER,E.ORIGIN_PULSE],[A.MANAPHY]:[E.BOUNCY_BUBBLE,E.FROST_BREATH,E.WILDBOLT_STORM,E.ORIGIN_PULSE],[A.DARKRAI]:[E.FIERY_WRATH,E.MOONBLAST,E.FIERY_DANCE,E.MAKE_IT_RAIN],[A.SHAYMIN]:[E.MATCHA_GOTCHA,E.FIERY_DANCE,E.AEROBLAST,E.QUIVER_DANCE],[A.ARCEUS]:[E.NO_RETREAT,E.COLLISION_COURSE,E.ASTRAL_BARRAGE,E.MULTI_ATTACK],[A.VICTINI]:[E.BLUE_FLARE,E.BOLT_STRIKE,E.LUSTER_PURGE,E.VICTORY_DANCE],[A.SNIVY]:[E.FLAMETHROWER,E.CLANGING_SCALES,E.MAKE_IT_RAIN,E.FLEUR_CANNON],[A.TEPIG]:[E.WAVE_CRASH,E.VOLT_TACKLE,E.AXE_KICK,E.VICTORY_DANCE],[A.OSHAWOTT]:[E.FREEZE_DRY,E.SHELL_SIDE_ARM,E.SACRED_SWORD,E.SHELL_SMASH],[A.PATRAT]:[E.FAKE_OUT,E.SWORDS_DANCE,E.DYNAMIC_PUNCH,E.EXTREME_SPEED],[A.LILLIPUP]:[E.CLOSE_COMBAT,E.BODY_SLAM,E.HIGH_HORSEPOWER,E.LAST_RESPECTS],[A.PURRLOIN]:[E.ENCORE,E.OBSTRUCT,E.PARTING_SHOT,E.WICKED_BLOW],[A.PANSAGE]:[E.SWORDS_DANCE,E.FIRE_LASH,E.EARTHQUAKE,E.IVY_CUDGEL],[A.PANSEAR]:[E.NASTY_PLOT,E.HYDRO_STEAM,E.EARTH_POWER,E.ERUPTION],[A.PANPOUR]:[E.NASTY_PLOT,E.ENERGY_BALL,E.EARTH_POWER,E.WATER_SPOUT],[A.MUNNA]:[E.COSMIC_POWER,E.AURA_SPHERE,E.LUNAR_BLESSING,E.MYSTICAL_POWER],[A.PIDOVE]:[E.SLASH,E.TIDY_UP,E.FLOATY_FALL,E.TRIPLE_ARROWS],[A.BLITZLE]:[E.HORN_LEECH,E.SWORDS_DANCE,E.FLARE_BLITZ,E.BOLT_STRIKE],[A.ROGGENROLA]:[E.BODY_PRESS,E.CURSE,E.SHORE_UP,E.DIAMOND_STORM],[A.WOOBAT]:[E.ESPER_WING,E.STORED_POWER,E.MYSTICAL_FIRE,E.OBLIVION_WING],[A.DRILBUR]:[E.METEOR_MASH,E.ICE_SPINNER,E.SHIFT_GEAR,E.THOUSAND_ARROWS],[A.AUDINO]:[E.TAKE_HEART,E.MOONBLAST,E.WISH,E.MATCHA_GOTCHA],[A.TIMBURR]:[E.MACH_PUNCH,E.DRAIN_PUNCH,E.ICE_HAMMER,E.DOUBLE_IRON_BASH],[A.TYMPOLE]:[E.JET_PUNCH,E.HIGH_HORSEPOWER,E.BULK_UP,E.SURGING_STRIKES],[A.THROH]:[E.MACH_PUNCH,E.SLACK_OFF,E.METEOR_MASH,E.RAGE_FIST],[A.SAWK]:[E.DRAIN_PUNCH,E.SUCKER_PUNCH,E.METEOR_MASH,E.VICTORY_DANCE],[A.SEWADDLE]:[E.STONE_AXE,E.PSYCHO_CUT,E.BITTER_BLADE,E.VICTORY_DANCE],[A.VENIPEDE]:[E.BANEFUL_BUNKER,E.LEECH_LIFE,E.NOXIOUS_TORQUE,E.POWER_TRIP],[A.COTTONEE]:[E.POLLEN_PUFF,E.PARTING_SHOT,E.SLEEP_POWDER,E.SEED_FLARE],[A.PETILIL]:[E.THUNDEROUS_KICK,E.SPARKLING_ARIA,E.FIERY_DANCE,E.FLOWER_TRICK],[A.BASCULIN]:[E.LAST_RESPECTS,E.CLOSE_COMBAT,E.SPLISHY_SPLASH,E.NO_RETREAT],[A.SANDILE]:[E.DIRE_CLAW,E.SUCKER_PUNCH,E.FIRE_LASH,E.HEADLONG_RUSH],[A.DARUMAKA]:[E.DRAIN_PUNCH,E.ZIPPY_ZAP,E.HEADLONG_RUSH,E.PYRO_BALL],[A.MARACTUS]:[E.EARTH_POWER,E.SIZZLY_SLIDE,E.FIERY_DANCE,E.QUIVER_DANCE],[A.DWEBBLE]:[E.CRABHAMMER,E.STONE_AXE,E.LEECH_LIFE,E.MIGHTY_CLEAVE],[A.SCRAGGY]:[E.SUCKER_PUNCH,E.BULLET_PUNCH,E.NOXIOUS_TORQUE,E.VICTORY_DANCE],[A.SIGILYPH]:[E.MOONBLAST,E.PSYCHO_SHIFT,E.ESPER_WING,E.OBLIVION_WING],[A.YAMASK]:[E.STRENGTH_SAP,E.GLARE,E.AURA_SPHERE,E.ASTRAL_BARRAGE],[A.TIRTOUGA]:[E.ICE_SPINNER,E.AQUA_STEP,E.SHORE_UP,E.MIGHTY_CLEAVE],[A.ARCHEN]:[E.ROOST,E.EARTHQUAKE,E.FLOATY_FALL,E.MIGHTY_CLEAVE],[A.TRUBBISH]:[E.COIL,E.RECOVER,E.DIRE_CLAW,E.GIGATON_HAMMER],[A.ZORUA]:[E.MALIGNANT_CHAIN,E.MOONBLAST,E.SECRET_SWORD,E.FIERY_WRATH],[A.MINCCINO]:[E.ICICLE_SPEAR,E.TIDY_UP,E.KNOCK_OFF,E.POPULATION_BOMB],[A.GOTHITA]:[E.RECOVER,E.MOONBLAST,E.AURA_SPHERE,E.LUMINA_CRASH],[A.SOLOSIS]:[E.MIST_BALL,E.SPEED_SWAP,E.FLAMETHROWER,E.LIGHT_OF_RUIN],[A.DUCKLETT]:[E.SPLISHY_SPLASH,E.SANDSEAR_STORM,E.WILDBOLT_STORM,E.QUIVER_DANCE],[A.VANILLITE]:[E.EARTH_POWER,E.AURORA_VEIL,E.CALM_MIND,E.SPARKLY_SWIRL],[A.DEERLING]:[E.TIDY_UP,E.HEADBUTT,E.COMBAT_TORQUE,E.FLOWER_TRICK],[A.EMOLGA]:[E.ICICLE_CRASH,E.ZING_ZAP,E.FLOATY_FALL,E.ELECTRIFY],[A.KARRABLAST]:[E.LEECH_LIFE,E.BITTER_BLADE,E.OBSTRUCT,E.DOUBLE_IRON_BASH],[A.FOONGUS]:[E.POLLEN_PUFF,E.PARTING_SHOT,E.FOUL_PLAY,E.SAPPY_SEED],[A.FRILLISH]:[E.CALM_MIND,E.BUZZY_BUZZ,E.FREEZE_DRY,E.STEAM_ERUPTION],[A.ALOMOMOLA]:[E.FLIP_TURN,E.HEART_SWAP,E.GLITZY_GLOW,E.REVIVAL_BLESSING],[A.JOLTIK]:[E.WILDBOLT_STORM,E.PARABOLIC_CHARGE,E.EARTH_POWER,E.QUIVER_DANCE],[A.FERROSEED]:[E.SYNTHESIS,E.CEASELESS_EDGE,E.SPIKY_SHIELD,E.SAPPY_SEED],[A.KLINK]:[E.TRIPLE_AXEL,E.HIGH_HORSEPOWER,E.RECOVER,E.AURA_WHEEL],[A.TYNAMO]:[E.SCALD,E.STRENGTH_SAP,E.FIRE_LASH,E.AURA_WHEEL],[A.ELGYEM]:[E.THUNDERCLAP,E.BADDY_BAD,E.AURA_SPHERE,E.PHOTON_GEYSER],[A.LITWICK]:[E.GIGA_DRAIN,E.EARTH_POWER,E.MOONBLAST,E.TORCH_SONG],[A.AXEW]:[E.STONE_AXE,E.DIRE_CLAW,E.BITTER_BLADE,E.GLAIVE_RUSH],[A.CUBCHOO]:[E.MOUNTAIN_GALE,E.AQUA_STEP,E.ICE_SHARD,E.COLLISION_COURSE],[A.CRYOGONAL]:[E.FREEZING_GLARE,E.AURORA_VEIL,E.NASTY_PLOT,E.ORIGIN_PULSE],[A.SHELMET]:[E.POWER_GEM,E.NASTY_PLOT,E.EARTH_POWER,E.STEAM_ERUPTION],[A.STUNFISK]:[E.THUNDERCLAP,E.SANDSEAR_STORM,E.STRENGTH_SAP,E.THUNDER_CAGE],[A.MIENFOO]:[E.GUNK_SHOT,E.SUPERCELL_SLAM,E.MOUNTAIN_GALE,E.WICKED_BLOW],[A.DRUDDIGON]:[E.FIRE_LASH,E.MORNING_SUN,E.DRAGON_DARTS,E.CLANGOROUS_SOUL],[A.GOLETT]:[E.SHIFT_GEAR,E.DRAIN_PUNCH,E.HEADLONG_RUSH,E.RAGE_FIST],[A.PAWNIARD]:[E.SUCKER_PUNCH,E.CEASELESS_EDGE,E.BITTER_BLADE,E.LAST_RESPECTS],[A.BOUFFALANT]:[E.HORN_LEECH,E.HIGH_JUMP_KICK,E.HEAD_SMASH,E.FLARE_BLITZ],[A.RUFFLET]:[E.FLOATY_FALL,E.AURA_SPHERE,E.NO_RETREAT,E.BOLT_BEAK],[A.VULLABY]:[E.FOUL_PLAY,E.BODY_PRESS,E.ROOST,E.RUINATION],[A.HEATMOR]:[E.EARTH_POWER,E.OVERHEAT,E.THUNDERBOLT,E.V_CREATE],[A.DURANT]:[E.HIGH_HORSEPOWER,E.FIRST_IMPRESSION,E.SWORDS_DANCE,E.BEHEMOTH_BASH],[A.DEINO]:[E.FIERY_WRATH,E.ESPER_WING,E.SLUDGE_BOMB,E.FICKLE_BEAM],[A.LARVESTA]:[E.THUNDERBOLT,E.DAZZLING_GLEAM,E.EARTH_POWER,E.HYDRO_STEAM],[A.COBALION]:[E.BEHEMOTH_BLADE,E.MIGHTY_CLEAVE,E.CEASELESS_EDGE,E.VICTORY_DANCE],[A.TERRAKION]:[E.MIGHTY_CLEAVE,E.HEADLONG_RUSH,E.KNOCK_OFF,E.VICTORY_DANCE],[A.VIRIZION]:[E.SAPPY_SEED,E.PSYBLADE,E.STONE_AXE,E.VICTORY_DANCE],[A.TORNADUS]:[E.SANDSEAR_STORM,E.PARTING_SHOT,E.SPLISHY_SPLASH,E.OBLIVION_WING],[A.THUNDURUS]:[E.SANDSEAR_STORM,E.HURRICANE,E.FROST_BREATH,E.ELECTRO_SHOT],[A.RESHIRAM]:[E.ENERGY_BALL,E.TAKE_HEART,E.FICKLE_BEAM,E.ERUPTION],[A.ZEKROM]:[E.TRIPLE_AXEL,E.THUNDEROUS_KICK,E.DRAGON_HAMMER,E.DRAGON_ENERGY],[A.LANDORUS]:[E.STONE_AXE,E.FLOATY_FALL,E.ROOST,E.BLEAKWIND_STORM],[A.KYUREM]:[E.DRAGON_DARTS,E.GLACIAL_LANCE,E.NO_RETREAT,E.DRAGON_ENERGY],[A.KELDEO]:[E.BOUNCY_BUBBLE,E.THUNDERBOLT,E.ICE_BEAM,E.STEAM_ERUPTION],[A.MELOETTA]:[E.BODY_SLAM,E.PSYCHIC_NOISE,E.TRIPLE_ARROWS,E.TORCH_SONG],[A.GENESECT]:[E.EXTREME_SPEED,E.SHIFT_GEAR,E.BEHEMOTH_BASH,E.TACHYON_CUTTER],[A.CHESPIN]:[E.COMBAT_TORQUE,E.SYNTHESIS,E.CEASELESS_EDGE,E.SAPPY_SEED],[A.FENNEKIN]:[E.TWIN_BEAM,E.FIERY_DANCE,E.THUNDERBOLT,E.SPARKLY_SWIRL],[A.FROAKIE]:[E.MOONBLAST,E.SHELL_SIDE_ARM,E.FIERY_WRATH,E.STEAM_ERUPTION],[A.BUNNELBY]:[E.DRAIN_PUNCH,E.TIDY_UP,E.LANDS_WRATH,E.EXTREME_SPEED],[A.FLETCHLING]:[E.DRILL_RUN,E.BURNING_BULWARK,E.HEAD_SMASH,E.VOLT_TACKLE],[A.SCATTERBUG]:[E.FOCUS_BLAST,E.AFTER_YOU,E.DECORATE,E.BLIZZARD],[A.LITLEO]:[E.EARTH_POWER,E.NASTY_PLOT,E.BURNING_BULWARK,E.BLUE_FLARE],[A.FLABEBE]:[E.GLITZY_GLOW,E.MYSTICAL_FIRE,E.TAKE_HEART,E.SEED_FLARE],[A.SKIDDO]:[E.HIGH_HORSEPOWER,E.GRASSY_GLIDE,E.STONE_AXE,E.SAPPY_SEED],[A.PANCHAM]:[E.DRAIN_PUNCH,E.SUCKER_PUNCH,E.METEOR_MASH,E.WICKED_BLOW],[A.FURFROU]:[E.TIDY_UP,E.SLACK_OFF,E.COMBAT_TORQUE,E.MULTI_ATTACK],[A.ESPURR]:[E.LUSTER_PURGE,E.MOONBLAST,E.AURA_SPHERE,E.DARK_VOID],[A.HONEDGE]:[E.TACHYON_CUTTER,E.SHADOW_BONE,E.BITTER_BLADE,E.BEHEMOTH_BLADE],[A.SPRITZEE]:[E.SPEED_SWAP,E.REVIVAL_BLESSING,E.ROOST,E.TORCH_SONG],[A.SWIRLIX]:[E.BELLY_DRUM,E.HEADLONG_RUSH,E.MAGICAL_TORQUE,E.REVIVAL_BLESSING],[A.INKAY]:[E.POWER_TRIP,E.SPIN_OUT,E.RECOVER,E.PSYCHO_BOOST],[A.BINACLE]:[E.TRIPLE_AXEL,E.CRABHAMMER,E.DIRE_CLAW,E.MIGHTY_CLEAVE],[A.SKRELP]:[E.STRENGTH_SAP,E.TRICK_ROOM,E.CALM_MIND,E.CORE_ENFORCER],[A.CLAUNCHER]:[E.SHELL_SMASH,E.ARMOR_CANNON,E.ENERGY_BALL,E.ORIGIN_PULSE],[A.HELIOPTILE]:[E.WEATHER_BALL,E.HYDRO_STEAM,E.EARTH_POWER,E.BOOMBURST],[A.TYRUNT]:[E.DRAGON_HAMMER,E.FLARE_BLITZ,E.VOLT_TACKLE,E.SHIFT_GEAR],[A.AMAURA]:[E.RECOVER,E.TERA_STARSTORM,E.POWER_GEM,E.GEOMANCY],[A.HAWLUCHA]:[E.TRIPLE_AXEL,E.HIGH_HORSEPOWER,E.FLOATY_FALL,E.WICKED_BLOW],[A.DEDENNE]:[E.BOOMBURST,E.FAKE_OUT,E.NASTY_PLOT,E.REVIVAL_BLESSING],[A.CARBINK]:[E.BODY_PRESS,E.SHORE_UP,E.SPARKLY_SWIRL,E.DIAMOND_STORM],[A.GOOMY]:[E.DRAGON_HAMMER,E.RECOVER,E.CALM_MIND,E.MAKE_IT_RAIN],[A.KLEFKI]:[E.HEAL_BELL,E.ENCORE,E.INSTRUCT,E.TOPSY_TURVY],[A.PHANTUMP]:[E.RAGE_FIST,E.SLEEP_POWDER,E.BULK_UP,E.SAPPY_SEED],[A.PUMPKABOO]:[E.SPIRIT_SHACKLE,E.FIRE_LASH,E.DIRE_CLAW,E.SAPPY_SEED],[A.BERGMITE]:[E.STONE_AXE,E.METAL_BURST,E.BODY_PRESS,E.GLACIAL_LANCE],[A.NOIBAT]:[E.AEROBLAST,E.OVERDRIVE,E.NASTY_PLOT,E.CLANGING_SCALES],[A.XERNEAS]:[E.EARTH_POWER,E.SPRINGTIDE_STORM,E.STORED_POWER,E.STRENGTH_SAP],[A.YVELTAL]:[E.SLUDGE_WAVE,E.POWER_TRIP,E.FIERY_WRATH,E.CLANGOROUS_SOUL],[A.ZYGARDE]:[E.DRAGON_DARTS,E.V_CREATE,E.CLANGOROUS_SOUL,E.HEAL_ORDER],[A.DIANCIE]:[E.MAGICAL_TORQUE,E.FIERY_DANCE,E.SHORE_UP,E.GEOMANCY],[A.HOOPA]:[E.PHOTON_GEYSER,E.SECRET_SWORD,E.FIERY_WRATH,E.SHELL_SMASH],[A.VOLCANION]:[E.HYDRO_STEAM,E.CALM_MIND,E.SEARING_SHOT,E.THUNDERCLAP],[A.ETERNAL_FLOETTE]:[E.MIND_BLOWN,E.CHLOROBLAST,E.LUSTER_PURGE,E.QUIVER_DANCE],[A.ROWLET]:[E.THOUSAND_ARROWS,E.SHADOW_BONE,E.FIRST_IMPRESSION,E.VICTORY_DANCE],[A.LITTEN]:[E.SUCKER_PUNCH,E.PARTING_SHOT,E.SLACK_OFF,E.SACRED_FIRE],[A.POPPLIO]:[E.PSYCHIC_NOISE,E.MOONLIGHT,E.OVERDRIVE,E.TORCH_SONG],[A.PIKIPEK]:[E.DUAL_WINGBEAT,E.BONE_RUSH,E.BURNING_BULWARK,E.POPULATION_BOMB],[A.YUNGOOS]:[E.EXTREME_SPEED,E.KNOCK_OFF,E.TIDY_UP,E.MULTI_ATTACK],[A.GRUBBIN]:[E.ICE_BEAM,E.EARTH_POWER,E.CALM_MIND,E.THUNDERCLAP],[A.CRABRAWLER]:[E.JET_PUNCH,E.SHORE_UP,E.MACH_PUNCH,E.SURGING_STRIKES],[A.ORICORIO]:[E.QUIVER_DANCE,E.FIERY_DANCE,E.THUNDERCLAP,E.OBLIVION_WING],[A.CUTIEFLY]:[E.STICKY_WEB,E.SLEEP_POWDER,E.HEAT_WAVE,E.SPARKLY_SWIRL],[A.ROCKRUFF]:[E.HIGH_HORSEPOWER,E.TIDY_UP,E.ICE_SPINNER,E.MIGHTY_CLEAVE],[A.WISHIWASHI]:[E.HEAL_ORDER,E.FREEZE_DRY,E.WATER_SHURIKEN,E.TAIL_GLOW],[A.MAREANIE]:[E.CEASELESS_EDGE,E.SIZZLY_SLIDE,E.BODY_PRESS,E.LEECH_SEED],[A.MUDBRAY]:[E.BODY_PRESS,E.YAWN,E.SHORE_UP,E.THOUSAND_WAVES],[A.DEWPIDER]:[E.AQUA_STEP,E.SILK_TRAP,E.SWORDS_DANCE,E.JET_PUNCH],[A.FOMANTIS]:[E.SUPERPOWER,E.HEADLONG_RUSH,E.ICE_HAMMER,E.BITTER_BLADE],[A.MORELULL]:[E.CALM_MIND,E.SAPPY_SEED,E.DRAINING_KISS,E.MATCHA_GOTCHA],[A.SALANDIT]:[E.SCALD,E.MALIGNANT_CHAIN,E.CORE_ENFORCER,E.ERUPTION],[A.STUFFUL]:[E.DRAIN_PUNCH,E.METEOR_MASH,E.TRIPLE_AXEL,E.RAGE_FIST],[A.BOUNSWEET]:[E.TRIPLE_AXEL,E.AQUA_STEP,E.THUNDEROUS_KICK,E.SAPPY_SEED],[A.COMFEY]:[E.REVIVAL_BLESSING,E.TAKE_HEART,E.STRENGTH_SAP,E.MATCHA_GOTCHA],[A.ORANGURU]:[E.JUNGLE_HEALING,E.YAWN,E.FOLLOW_ME,E.LUMINA_CRASH],[A.PASSIMIAN]:[E.PYRO_BALL,E.SUCKER_PUNCH,E.ZING_ZAP,E.VICTORY_DANCE],[A.WIMPOD]:[E.TRIPLE_AXEL,E.OBSTRUCT,E.JET_PUNCH,E.SURGING_STRIKES],[A.SANDYGAST]:[E.BITTER_MALICE,E.SPLISHY_SPLASH,E.TAKE_HEART,E.SALT_CURE],[A.PYUKUMUKU]:[E.COMEUPPANCE,E.BANEFUL_BUNKER,E.TOXIC_SPIKES,E.SALT_CURE],[A.TYPE_NULL]:[E.DIRE_CLAW,E.RECOVER,E.COMBAT_TORQUE,E.NO_RETREAT],[A.MINIOR]:[E.EARTH_POWER,E.FLOATY_FALL,E.TRI_ATTACK,E.DIAMOND_STORM],[A.KOMALA]:[E.SLACK_OFF,E.EXTREME_SPEED,E.KNOCK_OFF,E.COLLISION_COURSE],[A.TURTONATOR]:[E.BURNING_BULWARK,E.MORNING_SUN,E.BODY_PRESS,E.CORE_ENFORCER],[A.TOGEDEMARU]:[E.FAKE_OUT,E.METAL_BURST,E.METEOR_MASH,E.AURA_WHEEL],[A.MIMIKYU]:[E.SPIRIT_BREAK,E.TIDY_UP,E.FIRE_LASH,E.SPECTRAL_THIEF],[A.BRUXISH]:[E.PLAY_ROUGH,E.FIRE_FANG,E.DRAGON_DANCE,E.SURGING_STRIKES],[A.DRAMPA]:[E.SLACK_OFF,E.TRICK_ROOM,E.CORE_ENFORCER,E.BOOMBURST],[A.DHELMISE]:[E.SHADOW_BONE,E.IVY_CUDGEL,E.TRIPLE_DIVE,E.STRENGTH_SAP],[A.JANGMO_O]:[E.BODY_PRESS,E.SHELL_SIDE_ARM,E.SECRET_SWORD,E.GLAIVE_RUSH],[A.TAPU_KOKO]:[E.MAGICAL_TORQUE,E.TRIPLE_AXEL,E.SWORDS_DANCE,E.BOLT_STRIKE],[A.TAPU_LELE]:[E.MOONLIGHT,E.NASTY_PLOT,E.HEAT_WAVE,E.EXPANDING_FORCE],[A.TAPU_BULU]:[E.SAPPY_SEED,E.LANDS_WRATH,E.MAGICAL_TORQUE,E.VICTORY_DANCE],[A.TAPU_FINI]:[E.SPRINGTIDE_STORM,E.EARTH_POWER,E.RECOVER,E.QUIVER_DANCE],[A.COSMOG]:[E.PHOTON_GEYSER,E.PRECIPICE_BLADES,E.SACRED_FIRE,E.ASTRAL_BARRAGE],[A.NIHILEGO]:[E.STRENGTH_SAP,E.MALIGNANT_CHAIN,E.EARTH_POWER,E.QUIVER_DANCE],[A.BUZZWOLE]:[E.FIRST_IMPRESSION,E.COMBAT_TORQUE,E.ROCK_BLAST,E.DOUBLE_IRON_BASH],[A.PHEROMOSA]:[E.SECRET_SWORD,E.MAKE_IT_RAIN,E.ATTACK_ORDER,E.DIAMOND_STORM],[A.XURKITREE]:[E.FLAMETHROWER,E.GIGA_DRAIN,E.TAIL_GLOW,E.THUNDERCLAP],[A.CELESTEELA]:[E.RECOVER,E.BUZZY_BUZZ,E.EARTH_POWER,E.OBLIVION_WING],[A.KARTANA]:[E.MIGHTY_CLEAVE,E.DUAL_CHOP,E.BITTER_BLADE,E.BEHEMOTH_BLADE],[A.GUZZLORD]:[E.SUCKER_PUNCH,E.COMEUPPANCE,E.SLACK_OFF,E.SHED_TAIL],[A.NECROZMA]:[E.DYNAMAX_CANNON,E.SACRED_FIRE,E.ASTRAL_BARRAGE,E.CLANGOROUS_SOUL],[A.MAGEARNA]:[E.STRENGTH_SAP,E.EARTH_POWER,E.MOONBLAST,E.MAKE_IT_RAIN],[A.MARSHADOW]:[E.POWER_UP_PUNCH,E.BONEMERANG,E.METEOR_MASH,E.TRIPLE_AXEL],[A.POIPOLE]:[E.MALIGNANT_CHAIN,E.ICE_BEAM,E.ARMOR_CANNON,E.CLANGING_SCALES],[A.STAKATAKA]:[E.HEAVY_SLAM,E.SHORE_UP,E.CURSE,E.SALT_CURE],[A.BLACEPHALON]:[E.STEEL_BEAM,E.MOONBLAST,E.CHLOROBLAST,E.MOONGEIST_BEAM],[A.ZERAORA]:[E.SWORDS_DANCE,E.U_TURN,E.COLLISION_COURSE,E.TRIPLE_AXEL],[A.MELTAN]:[E.BULLET_PUNCH,E.DRAIN_PUNCH,E.BULK_UP,E.PLASMA_FISTS],[A.ALOLA_RATTATA]:[E.FALSE_SURRENDER,E.PSYCHIC_FANGS,E.COIL,E.EXTREME_SPEED],[A.ALOLA_SANDSHREW]:[E.SPIKY_SHIELD,E.LIQUIDATION,E.SHIFT_GEAR,E.GLACIAL_LANCE],[A.ALOLA_VULPIX]:[E.MOONBLAST,E.GLARE,E.MYSTICAL_FIRE,E.REVIVAL_BLESSING],[A.ALOLA_DIGLETT]:[E.THOUSAND_WAVES,E.SWORDS_DANCE,E.TRIPLE_DIVE,E.PYRO_BALL],[A.ALOLA_MEOWTH]:[E.BADDY_BAD,E.BUZZY_BUZZ,E.PARTING_SHOT,E.MAKE_IT_RAIN],[A.ALOLA_GEODUDE]:[E.THOUSAND_WAVES,E.BULK_UP,E.STONE_AXE,E.EXTREME_SPEED],[A.ALOLA_GRIMER]:[E.SUCKER_PUNCH,E.BARB_BARRAGE,E.RECOVER,E.SURGING_STRIKES],[A.GROOKEY]:[E.ROCK_SLIDE,E.PLAY_ROUGH,E.GRASSY_GLIDE,E.CLANGOROUS_SOUL],[A.SCORBUNNY]:[E.EXTREME_SPEED,E.HIGH_JUMP_KICK,E.TRIPLE_AXEL,E.BOLT_STRIKE],[A.SOBBLE]:[E.AEROBLAST,E.FROST_BREATH,E.ENERGY_BALL,E.NASTY_PLOT],[A.SKWOVET]:[E.SUCKER_PUNCH,E.SLACK_OFF,E.COIL,E.POPULATION_BOMB],[A.ROOKIDEE]:[E.ROOST,E.BODY_PRESS,E.KINGS_SHIELD,E.BEHEMOTH_BASH],[A.BLIPBUG]:[E.HEAL_ORDER,E.LUSTER_PURGE,E.SLEEP_POWDER,E.TAIL_GLOW],[A.NICKIT]:[E.BADDY_BAD,E.FLAMETHROWER,E.SPARKLY_SWIRL,E.MAKE_IT_RAIN],[A.GOSSIFLEUR]:[E.PARTING_SHOT,E.STRENGTH_SAP,E.SAPPY_SEED,E.SEED_FLARE],[A.WOOLOO]:[E.NUZZLE,E.MILK_DRINK,E.BODY_PRESS,E.MULTI_ATTACK],[A.CHEWTLE]:[E.ICE_FANG,E.PSYCHIC_FANGS,E.SHELL_SMASH,E.MIGHTY_CLEAVE],[A.YAMPER]:[E.ICE_FANG,E.SWORDS_DANCE,E.THUNDER_FANG,E.BOLT_STRIKE],[A.ROLYCOLY]:[E.BITTER_BLADE,E.BODY_PRESS,E.BULK_UP,E.DIAMOND_STORM],[A.APPLIN]:[E.CORE_ENFORCER,E.COMBAT_TORQUE,E.SAPPY_SEED,E.MATCHA_GOTCHA],[A.SILICOBRA]:[E.SHORE_UP,E.SHED_TAIL,E.MOUNTAIN_GALE,E.THOUSAND_ARROWS],[A.CRAMORANT]:[E.APPLE_ACID,E.SURF,E.BOLT_BEAK,E.OBLIVION_WING],[A.ARROKUDA]:[E.SUPERCELL_SLAM,E.TRIPLE_DIVE,E.ICE_SPINNER,E.SWORDS_DANCE],[A.TOXEL]:[E.BUZZY_BUZZ,E.BUG_BUZZ,E.SPARKLING_ARIA,E.TORCH_SONG],[A.SIZZLIPEDE]:[E.BURNING_BULWARK,E.ZING_ZAP,E.FIRST_IMPRESSION,E.BITTER_BLADE],[A.CLOBBOPUS]:[E.STORM_THROW,E.JET_PUNCH,E.MACH_PUNCH,E.SURGING_STRIKES],[A.SINISTEA]:[E.SPLISHY_SPLASH,E.MATCHA_GOTCHA,E.DRAINING_KISS,E.MOONGEIST_BEAM],[A.HATENNA]:[E.RECOVER,E.MOONBLAST,E.BUZZY_BUZZ,E.TORCH_SONG],[A.IMPIDIMP]:[E.SLACK_OFF,E.PARTING_SHOT,E.OCTOLOCK,E.WICKED_BLOW],[A.MILCERY]:[E.MOONBLAST,E.CHILLY_RECEPTION,E.EARTH_POWER,E.GEOMANCY],[A.FALINKS]:[E.BATON_PASS,E.POWER_TRIP,E.COMBAT_TORQUE,E.HEAL_ORDER],[A.PINCURCHIN]:[E.TRICK_ROOM,E.VOLT_SWITCH,E.STRENGTH_SAP,E.THUNDERCLAP],[A.SNOM]:[E.FROST_BREATH,E.HEAL_ORDER,E.EARTH_POWER,E.SPORE],[A.STONJOURNER]:[E.BODY_PRESS,E.HELPING_HAND,E.ACCELEROCK,E.DIAMOND_STORM],[A.EISCUE]:[E.TRIPLE_AXEL,E.AQUA_STEP,E.AXE_KICK,E.SHELL_SMASH],[A.INDEEDEE]:[E.MATCHA_GOTCHA,E.EXPANDING_FORCE,E.MOONBLAST,E.REVIVAL_BLESSING],[A.MORPEKO]:[E.TRIPLE_AXEL,E.OBSTRUCT,E.SWORDS_DANCE,E.COLLISION_COURSE],[A.CUFANT]:[E.LIQUIDATION,E.CURSE,E.COMBAT_TORQUE,E.GIGATON_HAMMER],[A.DRACOZOLT]:[E.TRIPLE_AXEL,E.GUNK_SHOT,E.FIRE_LASH,E.DRAGON_DANCE],[A.ARCTOZOLT]:[E.MOUNTAIN_GALE,E.AQUA_STEP,E.HIGH_HORSEPOWER,E.SHIFT_GEAR],[A.DRACOVISH]:[E.TRIPLE_AXEL,E.DRAGON_HAMMER,E.THUNDER_FANG,E.DRAGON_DANCE],[A.ARCTOVISH]:[E.ICE_FANG,E.THUNDER_FANG,E.HIGH_HORSEPOWER,E.SHIFT_GEAR],[A.DURALUDON]:[E.CORE_ENFORCER,E.BODY_PRESS,E.RECOVER,E.TACHYON_CUTTER],[A.DREEPY]:[E.SHADOW_BONE,E.POWER_UP_PUNCH,E.FIRE_LASH,E.DIRE_CLAW],[A.ZACIAN]:[E.MAGICAL_TORQUE,E.MIGHTY_CLEAVE,E.BITTER_BLADE,E.PRECIPICE_BLADES],[A.ZAMAZENTA]:[E.BULK_UP,E.BODY_PRESS,E.SLACK_OFF,E.DIAMOND_STORM],[A.ETERNATUS]:[E.BODY_PRESS,E.NASTY_PLOT,E.MALIGNANT_CHAIN,E.DRAGON_ENERGY],[A.KUBFU]:[E.METEOR_MASH,E.DRAIN_PUNCH,E.JET_PUNCH,E.DRAGON_DANCE],[A.ZARUDE]:[E.SAPPY_SEED,E.MIGHTY_CLEAVE,E.WICKED_BLOW,E.VICTORY_DANCE],[A.REGIELEKI]:[E.NASTY_PLOT,E.ICE_BEAM,E.EARTH_POWER,E.ELECTRO_DRIFT],[A.REGIDRAGO]:[E.SHELL_SIDE_ARM,E.FLAMETHROWER,E.TAKE_HEART,E.DRAGON_DARTS],[A.GLASTRIER]:[E.SPEED_SWAP,E.SLACK_OFF,E.HIGH_HORSEPOWER,E.GLACIAL_LANCE],[A.SPECTRIER]:[E.EARTH_POWER,E.MOONLIGHT,E.AURA_SPHERE,E.ASTRAL_BARRAGE],[A.CALYREX]:[E.SAPPY_SEED,E.RECOVER,E.SECRET_SWORD,E.PHOTON_GEYSER],[A.ENAMORUS]:[E.AEROBLAST,E.THOUSAND_ARROWS,E.STORED_POWER,E.FLEUR_CANNON],[A.GALAR_MEOWTH]:[E.LIQUIDATION,E.HORN_LEECH,E.BULLET_PUNCH,E.BEHEMOTH_BASH],[A.GALAR_PONYTA]:[E.MAGICAL_TORQUE,E.EXTREME_SPEED,E.FLARE_BLITZ,E.PHOTON_GEYSER],[A.GALAR_SLOWPOKE]:[E.SHED_TAIL,E.BADDY_BAD,E.MOONBLAST,E.PHOTON_GEYSER],[A.GALAR_FARFETCHD]:[E.ROOST,E.SACRED_SWORD,E.KINGS_SHIELD,E.BEHEMOTH_BLADE],[A.GALAR_ARTICUNO]:[E.SECRET_SWORD,E.NIGHT_DAZE,E.ICE_BEAM,E.OBLIVION_WING],[A.GALAR_ZAPDOS]:[E.POISON_JAB,E.FLOATY_FALL,E.ROOST,E.BOLT_BEAK],[A.GALAR_MOLTRES]:[E.ROOST,E.SLUDGE_BOMB,E.FLAMETHROWER,E.OBLIVION_WING],[A.GALAR_CORSOLA]:[E.SHELL_SMASH,E.AURA_SPHERE,E.INFERNAL_PARADE,E.ASTRAL_BARRAGE],[A.GALAR_ZIGZAGOON]:[E.CEASELESS_EDGE,E.FACADE,E.PARTING_SHOT,E.EXTREME_SPEED],[A.GALAR_DARUMAKA]:[E.ICE_SPINNER,E.ZING_ZAP,E.DRAIN_PUNCH,E.PYRO_BALL],[A.GALAR_YAMASK]:[E.STRENGTH_SAP,E.DIRE_CLAW,E.THOUSAND_WAVES,E.SPECTRAL_THIEF],[A.GALAR_STUNFISK]:[E.SPIKY_SHIELD,E.THOUSAND_ARROWS,E.STRENGTH_SAP,E.DOUBLE_IRON_BASH],[A.HISUI_GROWLITHE]:[E.WAVE_CRASH,E.HEAD_SMASH,E.VOLT_TACKLE,E.DRAGON_DANCE],[A.HISUI_VOLTORB]:[E.FROST_BREATH,E.NASTY_PLOT,E.APPLE_ACID,E.ELECTRO_DRIFT],[A.HISUI_QWILFISH]:[E.CEASELESS_EDGE,E.BANEFUL_BUNKER,E.RECOVER,E.FISHIOUS_REND],[A.HISUI_SNEASEL]:[E.DRAIN_PUNCH,E.KNOCK_OFF,E.PSYCHIC_FANGS,E.TRIPLE_AXEL],[A.HISUI_ZORUA]:[E.MOONBLAST,E.SECRET_SWORD,E.PARTING_SHOT,E.BLOOD_MOON],[A.SPRIGATITO]:[E.FIRE_LASH,E.TRIPLE_AXEL,E.SUCKER_PUNCH,E.WICKED_BLOW],[A.FUECOCO]:[E.ALLURING_VOICE,E.SLACK_OFF,E.OVERDRIVE,E.MOONGEIST_BEAM],[A.QUAXLY]:[E.DRAGON_DANCE,E.TRIPLE_AXEL,E.POWER_TRIP,E.THUNDEROUS_KICK],[A.LECHONK]:[E.MILK_DRINK,E.PSYSHIELD_BASH,E.BLAZING_TORQUE,E.FILLET_AWAY],[A.TAROUNTULA]:[E.STONE_AXE,E.LEECH_LIFE,E.THIEF,E.SPORE],[A.NYMBLE]:[E.KNOCK_OFF,E.FELL_STINGER,E.ATTACK_ORDER,E.WICKED_BLOW],[A.PAWMI]:[E.DRAIN_PUNCH,E.METEOR_MASH,E.JET_PUNCH,E.PLASMA_FISTS],[A.TANDEMAUS]:[E.BATON_PASS,E.COVET,E.SIZZLY_SLIDE,E.REVIVAL_BLESSING],[A.FIDOUGH]:[E.SOFT_BOILED,E.HIGH_HORSEPOWER,E.SIZZLY_SLIDE,E.TIDY_UP],[A.SMOLIV]:[E.STRENGTH_SAP,E.EARTH_POWER,E.CALM_MIND,E.BOOMBURST],[A.SQUAWKABILLY]:[E.PARTING_SHOT,E.EARTHQUAKE,E.FLARE_BLITZ,E.EXTREME_SPEED],[A.NACLI]:[E.BODY_PRESS,E.TOXIC,E.CURSE,E.DIAMOND_STORM],[A.CHARCADET]:[E.SACRED_SWORD,E.PHOTON_GEYSER,E.MOONBLAST,E.SPECTRAL_THIEF],[A.TADBULB]:[E.PARABOLIC_CHARGE,E.SCALD,E.EARTH_POWER,E.ELECTRO_SHOT],[A.WATTREL]:[E.NASTY_PLOT,E.SPLISHY_SPLASH,E.SANDSEAR_STORM,E.WILDBOLT_STORM],[A.MASCHIFF]:[E.PARTING_SHOT,E.COMBAT_TORQUE,E.PSYCHIC_FANGS,E.NO_RETREAT],[A.SHROODLE]:[E.GASTRO_ACID,E.PARTING_SHOT,E.TOXIC,E.SKETCH],[A.BRAMBLIN]:[E.TAILWIND,E.STRENGTH_SAP,E.FLOWER_TRICK,E.LAST_RESPECTS],[A.TOEDSCOOL]:[E.STRENGTH_SAP,E.TOPSY_TURVY,E.SAPPY_SEED,E.TAIL_GLOW],[A.KLAWF]:[E.CRABHAMMER,E.SHORE_UP,E.MIGHTY_CLEAVE,E.SHELL_SMASH],[A.CAPSAKID]:[E.STRENGTH_SAP,E.APPLE_ACID,E.FROST_BREATH,E.TORCH_SONG],[A.RELLOR]:[E.HEAL_BLOCK,E.RECOVER,E.MAGIC_POWDER,E.LUMINA_CRASH],[A.FLITTLE]:[E.COSMIC_POWER,E.AURA_SPHERE,E.ROOST,E.FIERY_DANCE],[A.TINKATINK]:[E.MAGICAL_TORQUE,E.PYRO_BALL,E.IVY_CUDGEL,E.SHIFT_GEAR],[A.WIGLETT]:[E.SHELL_SMASH,E.ICICLE_CRASH,E.SEED_BOMB,E.SURGING_STRIKES],[A.BOMBIRDIER]:[E.FLOATY_FALL,E.SWORDS_DANCE,E.SUCKER_PUNCH,E.MIGHTY_CLEAVE],[A.FINIZEN]:[E.TRIPLE_AXEL,E.DRAIN_PUNCH,E.HEADLONG_RUSH,E.SURGING_STRIKES],[A.VAROOM]:[E.COMBAT_TORQUE,E.U_TURN,E.BLAZING_TORQUE,E.NOXIOUS_TORQUE],[A.CYCLIZAR]:[E.PARTING_SHOT,E.FIRE_LASH,E.MAGICAL_TORQUE,E.GLAIVE_RUSH],[A.ORTHWORM]:[E.SIZZLY_SLIDE,E.COIL,E.BODY_PRESS,E.SHORE_UP],[A.GLIMMET]:[E.CALM_MIND,E.GIGA_DRAIN,E.FIERY_DANCE,E.MALIGNANT_CHAIN],[A.GREAVARD]:[E.SHADOW_BONE,E.SIZZLY_SLIDE,E.SHORE_UP,E.COLLISION_COURSE],[A.FLAMIGO]:[E.THUNDEROUS_KICK,E.TRIPLE_AXEL,E.FLOATY_FALL,E.VICTORY_DANCE],[A.CETODDLE]:[E.ZING_ZAP,E.HIGH_HORSEPOWER,E.SLACK_OFF,E.DRAGON_DANCE],[A.VELUZA]:[E.PSYBLADE,E.LEAF_BLADE,E.CEASELESS_EDGE,E.BITTER_BLADE],[A.DONDOZO]:[E.SOFT_BOILED,E.SIZZLY_SLIDE,E.BREAKING_SWIPE,E.SALT_CURE],[A.TATSUGIRI]:[E.SLUDGE_BOMB,E.FILLET_AWAY,E.CORE_ENFORCER,E.STEAM_ERUPTION],[A.GREAT_TUSK]:[E.STONE_AXE,E.MORNING_SUN,E.COLLISION_COURSE,E.SHIFT_GEAR],[A.SCREAM_TAIL]:[E.TORCH_SONG,E.GLITZY_GLOW,E.MOONLIGHT,E.SPARKLY_SWIRL],[A.BRUTE_BONNET]:[E.SAPPY_SEED,E.STRENGTH_SAP,E.EARTHQUAKE,E.WICKED_BLOW],[A.FLUTTER_MANE]:[E.MOONLIGHT,E.NASTY_PLOT,E.EARTH_POWER,E.MOONGEIST_BEAM],[A.SLITHER_WING]:[E.MIGHTY_CLEAVE,E.THUNDEROUS_KICK,E.FIRE_LASH,E.VICTORY_DANCE],[A.SANDY_SHOCKS]:[E.MORNING_SUN,E.ICE_BEAM,E.NASTY_PLOT,E.THUNDERCLAP],[A.IRON_TREADS]:[E.FUSION_BOLT,E.SHIFT_GEAR,E.SHORE_UP,E.SUNSTEEL_STRIKE],[A.IRON_BUNDLE]:[E.EARTH_POWER,E.SPLISHY_SPLASH,E.VOLT_SWITCH,E.NASTY_PLOT],[A.IRON_HANDS]:[E.DRAIN_PUNCH,E.BULK_UP,E.PLASMA_FISTS,E.ICE_HAMMER],[A.IRON_JUGULIS]:[E.FIERY_WRATH,E.ROOST,E.NASTY_PLOT,E.OBLIVION_WING],[A.IRON_MOTH]:[E.EARTH_POWER,E.SEARING_SHOT,E.MALIGNANT_CHAIN,E.QUIVER_DANCE],[A.IRON_THORNS]:[E.DIAMOND_STORM,E.SHORE_UP,E.SHIFT_GEAR,E.PLASMA_FISTS],[A.FRIGIBAX]:[E.BEHEMOTH_BLADE,E.DRAGON_DANCE,E.MOUNTAIN_GALE,E.PRECIPICE_BLADES],[A.GIMMIGHOUL]:[E.HAPPY_HOUR,E.AURA_SPHERE,E.SURF,E.ASTRAL_BARRAGE],[A.WO_CHIEN]:[E.SPORE,E.FIERY_WRATH,E.SAPPY_SEED,E.STRENGTH_SAP],[A.CHIEN_PAO]:[E.KNOCK_OFF,E.PARTING_SHOT,E.TRIPLE_AXEL,E.BITTER_BLADE],[A.TING_LU]:[E.SHORE_UP,E.CEASELESS_EDGE,E.SAPPY_SEED,E.PRECIPICE_BLADES],[A.CHI_YU]:[E.FIERY_WRATH,E.HYDRO_STEAM,E.MORNING_SUN,E.BLUE_FLARE],[A.ROARING_MOON]:[E.FIRE_LASH,E.DRAGON_HAMMER,E.METEOR_MASH,E.DRAGON_ASCENT],[A.IRON_VALIANT]:[E.PLASMA_FISTS,E.NO_RETREAT,E.SECRET_SWORD,E.MAGICAL_TORQUE],[A.KORAIDON]:[E.SUNSTEEL_STRIKE,E.SOLAR_BLADE,E.DRAGON_DARTS,E.BITTER_BLADE],[A.MIRAIDON]:[E.FROST_BREATH,E.WILDBOLT_STORM,E.SPACIAL_REND,E.RISING_VOLTAGE],[A.WALKING_WAKE]:[E.BOUNCY_BUBBLE,E.FUSION_FLARE,E.SLUDGE_WAVE,E.CORE_ENFORCER],[A.IRON_LEAVES]:[E.BITTER_BLADE,E.U_TURN,E.MIGHTY_CLEAVE,E.VICTORY_DANCE],[A.POLTCHAGEIST]:[E.PARABOLIC_CHARGE,E.BOUNCY_BUBBLE,E.LEECH_SEED,E.SPARKLY_SWIRL],[A.OKIDOGI]:[E.COMBAT_TORQUE,E.TIDY_UP,E.DIRE_CLAW,E.WICKED_BLOW],[A.MUNKIDORI]:[E.TWIN_BEAM,E.HEAT_WAVE,E.EARTH_POWER,E.MALIGNANT_CHAIN],[A.FEZANDIPITI]:[E.BARB_BARRAGE,E.BONEMERANG,E.TRIPLE_AXEL,E.VICTORY_DANCE],[A.OGERPON]:[E.SLEEP_POWDER,E.BONEMERANG,E.TRIPLE_AXEL,E.FLOWER_TRICK],[A.GOUGING_FIRE]:[E.EXTREME_SPEED,E.BULK_UP,E.SACRED_FIRE,E.GLAIVE_RUSH],[A.RAGING_BOLT]:[E.NASTY_PLOT,E.FLAMETHROWER,E.MORNING_SUN,E.ELECTRO_DRIFT],[A.IRON_BOULDER]:[E.PSYBLADE,E.KOWTOW_CLEAVE,E.STONE_AXE,E.BITTER_BLADE],[A.IRON_CROWN]:[E.NASTY_PLOT,E.SECRET_SWORD,E.PSYSTRIKE,E.ELECTRO_DRIFT],[A.TERAPAGOS]:[E.MOONBLAST,E.NASTY_PLOT,E.ASTRAL_BARRAGE,E.RECOVER],[A.PECHARUNT]:[E.TAKE_HEART,E.BODY_PRESS,E.SAPPY_SEED,E.ASTRAL_BARRAGE],[A.PALDEA_TAUROS]:[E.NO_RETREAT,E.BLAZING_TORQUE,E.AQUA_STEP,E.THUNDEROUS_KICK],[A.PALDEA_WOOPER]:[E.STONE_AXE,E.RECOVER,E.BANEFUL_BUNKER,E.BARB_BARRAGE],[A.BLOODMOON_URSALUNA]:[E.NASTY_PLOT,E.ROCK_POLISH,E.SANDSEAR_STORM,E.BOOMBURST]};var D=(R=>(R[R.ERRATIC=0]="ERRATIC",R[R.FAST=1]="FAST",R[R.MEDIUM_FAST=2]="MEDIUM_FAST",R[R.MEDIUM_SLOW=3]="MEDIUM_SLOW",R[R.SLOW=4]="SLOW",R[R.FLUCTUATING=5]="FLUCTUATING",R))(D||{});const $y=[[0,15,52,122,237,406,637,942,1326,1800,2369,3041,3822,4719,5737,6881,8155,9564,11111,12800,14632,16610,18737,21012,23437,26012,28737,31610,34632,37800,41111,44564,48155,51881,55737,59719,63822,68041,72369,76800,81326,85942,90637,95406,100237,105122,110052,115015,120001,125e3,131324,137795,144410,151165,158056,165079,172229,179503,186894,194400,202013,209728,217540,225443,233431,241496,249633,257834,267406,276458,286328,296358,305767,316074,326531,336255,346965,357812,367807,378880,390077,400293,411686,423190,433572,445239,457001,467489,479378,491346,501878,513934,526049,536557,548720,560922,571333,583539,591882,6e5],[0,6,21,51,100,172,274,409,583,800,1064,1382,1757,2195,2700,3276,3930,4665,5487,6400,7408,8518,9733,11059,12500,14060,15746,17561,19511,21600,23832,26214,28749,31443,34300,37324,40522,43897,47455,51200,55136,59270,63605,68147,72900,77868,83058,88473,94119,1e5,106120,112486,119101,125971,133100,140492,148154,156089,164303,172800,181584,190662,200037,209715,219700,229996,240610,251545,262807,274400,286328,298598,311213,324179,337500,351180,365226,379641,394431,409600,425152,441094,457429,474163,491300,508844,526802,545177,563975,583200,602856,622950,643485,664467,685900,707788,730138,752953,776239,8e5],[0,8,27,64,125,216,343,512,729,1e3,1331,1728,2197,2744,3375,4096,4913,5832,6859,8e3,9261,10648,12167,13824,15625,17576,19683,21952,24389,27e3,29791,32768,35937,39304,42875,46656,50653,54872,59319,64e3,68921,74088,79507,85184,91125,97336,103823,110592,117649,125e3,132651,140608,148877,157464,166375,175616,185193,195112,205379,216e3,226981,238328,250047,262144,274625,287496,300763,314432,328509,343e3,357911,373248,389017,405224,421875,438976,456533,474552,493039,512e3,531441,551368,571787,592704,614125,636056,658503,681472,704969,729e3,753571,778688,804357,830584,857375,884736,912673,941192,970299,1e6],[0,9,57,96,135,179,236,314,419,560,742,973,1261,1612,2035,2535,3120,3798,4575,5460,6458,7577,8825,10208,11735,13411,15244,17242,19411,21760,24294,27021,29949,33084,36435,40007,43808,47846,52127,56660,61450,66505,71833,77440,83335,89523,96012,102810,109923,117360,125126,133229,141677,150476,159635,169159,179056,189334,199999,211060,222522,234393,246681,259392,272535,286115,300140,314618,329555,344960,360838,377197,394045,411388,429235,447591,466464,485862,505791,526260,547274,568841,590969,613664,636935,660787,685228,710266,735907,762160,789030,816525,844653,873420,902835,932903,963632,995030,1027103,1059860],[0,10,33,80,156,270,428,640,911,1250,1663,2160,2746,3430,4218,5120,6141,7290,8573,1e4,11576,13310,15208,17280,19531,21970,24603,27440,30486,33750,37238,40960,44921,49130,53593,58320,63316,68590,74148,8e4,86151,92610,99383,106480,113906,121670,129778,138240,147061,156250,165813,175760,186096,196830,207968,219520,231491,243890,256723,27e4,283726,297910,312558,327680,343281,359370,375953,393040,410636,428750,447388,466560,486271,506530,527343,548720,570666,593190,616298,64e4,664301,689210,714733,740880,767656,795070,823128,851840,881211,911250,941963,973360,1005446,1038230,1071718,1105920,1140841,1176490,1212873,125e4],[0,4,13,32,65,112,178,276,393,540,745,967,1230,1591,1957,2457,3046,3732,4526,5440,6482,7666,9003,10506,12187,14060,16140,18439,20974,23760,26811,30146,33780,37731,42017,46656,50653,55969,60505,66560,71677,78533,84277,91998,98415,107069,114205,123863,131766,142500,151222,163105,172697,185807,196322,210739,222231,238036,250562,267840,281456,300293,315059,335544,351520,373744,390991,415050,433631,459620,479600,507617,529063,559209,582187,614566,639146,673863,700115,737280,765275,804997,834809,877201,908905,954084,987754,1035837,1071552,1122660,1160499,1214753,1254796,1312322,1354652,1415577,1460276,1524731,1571884,164e4]];function BO(R,e){if(R<100){const L=$y[e][R-1];return e!==2?Math.floor(L*.325+BO(R,2)*.675):L}let I;switch(e){case 0:I=(Math.pow(R,4)+Math.pow(R,3)*2e3)/3500;break;case 1:I=Math.pow(R,3)*4/5;break;case 2:I=Math.pow(R,3);break;case 3:I=Math.pow(R,3)*6/5-15*Math.pow(R,2)+100*R-140;break;case 4:I=Math.pow(R,3)*5/4;break;case 5:I=Math.pow(R,3)*(R/2+8)*4/(100+R);break}return Math.floor(e!==2?I*.325+BO(R,2)*.675:I)}r(BO,"getLevelTotalExp");function A3(R,e){return BO(R,e)-BO(R-1,e)}r(A3,"getLevelRelExp");function M7(R,e){switch(R){case 0:return e?"#906060":"#f85888";case 1:return e?"#b8a038":"#f8d030";case 2:return e?"#588040":"#78c850";case 3:return e?"#807870":"#6890f0";case 4:return e?"#c03028":"#f08030";case 5:return e?"#483850":"#a040a0"}}r(M7,"getGrowthRateColor");const V=-1,b=0,km={[A.BULBASAUR]:[[1,E.TACKLE],[1,E.GROWL],[3,E.VINE_WHIP],[6,E.GROWTH],[9,E.LEECH_SEED],[12,E.RAZOR_LEAF],[15,E.POISON_POWDER],[15,E.SLEEP_POWDER],[18,E.SEED_BOMB],[21,E.TAKE_DOWN],[24,E.SWEET_SCENT],[27,E.SYNTHESIS],[30,E.WORRY_SEED],[33,E.POWER_WHIP],[36,E.SOLAR_BEAM]],[A.IVYSAUR]:[[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.GROWL],[1,E.GROWTH],[9,E.LEECH_SEED],[12,E.RAZOR_LEAF],[15,E.POISON_POWDER],[15,E.SLEEP_POWDER],[20,E.SEED_BOMB],[25,E.TAKE_DOWN],[30,E.SWEET_SCENT],[35,E.SYNTHESIS],[40,E.WORRY_SEED],[45,E.POWER_WHIP],[50,E.SOLAR_BEAM]],[A.VENUSAUR]:[[b,E.PETAL_BLIZZARD],[1,E.GROWTH],[1,E.PETAL_DANCE],[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.GROWL],[9,E.LEECH_SEED],[12,E.RAZOR_LEAF],[15,E.POISON_POWDER],[15,E.SLEEP_POWDER],[20,E.SEED_BOMB],[25,E.TAKE_DOWN],[30,E.SWEET_SCENT],[37,E.SYNTHESIS],[44,E.WORRY_SEED],[51,E.POWER_WHIP],[58,E.SOLAR_BEAM]],[A.CHARMANDER]:[[1,E.SCRATCH],[1,E.GROWL],[4,E.EMBER],[8,E.SMOKESCREEN],[12,E.DRAGON_BREATH],[17,E.FIRE_FANG],[20,E.SLASH],[24,E.FLAMETHROWER],[28,E.SCARY_FACE],[32,E.FIRE_SPIN],[36,E.INFERNO],[40,E.FLARE_BLITZ]],[A.CHARMELEON]:[[1,E.SCRATCH],[1,E.GROWL],[1,E.EMBER],[1,E.SMOKESCREEN],[1,E.FIRE_SPIN],[12,E.DRAGON_BREATH],[19,E.FIRE_FANG],[24,E.SLASH],[30,E.FLAMETHROWER],[37,E.SCARY_FACE],[48,E.INFERNO],[54,E.FLARE_BLITZ]],[A.CHARIZARD]:[[b,E.AIR_SLASH],[1,E.SCRATCH],[1,E.GROWL],[1,E.EMBER],[1,E.SMOKESCREEN],[1,E.HEAT_WAVE],[1,E.DRAGON_CLAW],[12,E.DRAGON_BREATH],[19,E.FIRE_FANG],[24,E.SLASH],[30,E.FLAMETHROWER],[39,E.SCARY_FACE],[46,E.FIRE_SPIN],[54,E.INFERNO],[62,E.FLARE_BLITZ]],[A.SQUIRTLE]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[3,E.WATER_GUN],[6,E.WITHDRAW],[9,E.RAPID_SPIN],[12,E.BITE],[15,E.WATER_PULSE],[18,E.PROTECT],[21,E.RAIN_DANCE],[24,E.AQUA_TAIL],[27,E.SHELL_SMASH],[30,E.IRON_DEFENSE],[33,E.HYDRO_PUMP],[36,E.WAVE_CRASH]],[A.WARTORTLE]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.WITHDRAW],[9,E.RAPID_SPIN],[12,E.BITE],[15,E.WATER_PULSE],[20,E.PROTECT],[25,E.RAIN_DANCE],[30,E.AQUA_TAIL],[35,E.SHELL_SMASH],[40,E.IRON_DEFENSE],[45,E.HYDRO_PUMP],[50,E.WAVE_CRASH]],[A.BLASTOISE]:[[b,E.FLASH_CANNON],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.WITHDRAW],[9,E.RAPID_SPIN],[12,E.BITE],[15,E.WATER_PULSE],[20,E.PROTECT],[25,E.RAIN_DANCE],[30,E.AQUA_TAIL],[35,E.SHELL_SMASH],[42,E.IRON_DEFENSE],[49,E.HYDRO_PUMP],[56,E.WAVE_CRASH]],[A.CATERPIE]:[[1,E.TACKLE],[1,E.STRING_SHOT],[9,E.BUG_BITE]],[A.METAPOD]:[[b,E.HARDEN],[V,E.TACKLE],[V,E.STRING_SHOT],[V,E.BUG_BITE],[1,E.HARDEN]],[A.BUTTERFREE]:[[b,E.GUST],[1,E.TACKLE],[1,E.STRING_SHOT],[1,E.HARDEN],[1,E.BUG_BITE],[4,E.SUPERSONIC],[8,E.CONFUSION],[12,E.POISON_POWDER],[12,E.STUN_SPORE],[12,E.SLEEP_POWDER],[16,E.PSYBEAM],[20,E.WHIRLWIND],[24,E.AIR_SLASH],[28,E.SAFEGUARD],[32,E.BUG_BUZZ],[36,E.TAILWIND],[40,E.RAGE_POWDER],[44,E.QUIVER_DANCE]],[A.WEEDLE]:[[1,E.POISON_STING],[1,E.STRING_SHOT],[9,E.BUG_BITE]],[A.KAKUNA]:[[b,E.HARDEN],[V,E.POISON_STING],[V,E.STRING_SHOT],[V,E.BUG_BITE],[1,E.HARDEN]],[A.BEEDRILL]:[[b,E.TWINEEDLE],[1,E.POISON_STING],[1,E.STRING_SHOT],[1,E.HARDEN],[1,E.BUG_BITE],[1,E.FURY_ATTACK],[11,E.FURY_CUTTER],[14,E.RAGE],[17,E.PURSUIT],[20,E.FOCUS_ENERGY],[23,E.VENOSHOCK],[26,E.ASSURANCE],[29,E.TOXIC_SPIKES],[32,E.PIN_MISSILE],[35,E.POISON_JAB],[38,E.AGILITY],[41,E.ENDEAVOR],[44,E.FELL_STINGER]],[A.PIDGEY]:[[1,E.TACKLE],[5,E.SAND_ATTACK],[9,E.GUST],[13,E.QUICK_ATTACK],[17,E.WHIRLWIND],[21,E.TWISTER],[25,E.FEATHER_DANCE],[29,E.AGILITY],[33,E.WING_ATTACK],[37,E.ROOST],[41,E.TAILWIND],[45,E.AERIAL_ACE],[49,E.AIR_SLASH],[53,E.HURRICANE]],[A.PIDGEOTTO]:[[1,E.GUST],[1,E.SAND_ATTACK],[1,E.TACKLE],[5,E.SAND_ATTACK],[9,E.GUST],[13,E.QUICK_ATTACK],[17,E.WHIRLWIND],[22,E.TWISTER],[27,E.FEATHER_DANCE],[32,E.AGILITY],[37,E.WING_ATTACK],[42,E.ROOST],[47,E.TAILWIND],[52,E.AERIAL_ACE],[57,E.AIR_SLASH],[62,E.HURRICANE]],[A.PIDGEOT]:[[1,E.GUST],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.QUICK_ATTACK],[1,E.HURRICANE],[5,E.SAND_ATTACK],[9,E.GUST],[17,E.WHIRLWIND],[22,E.TWISTER],[27,E.FEATHER_DANCE],[32,E.AGILITY],[38,E.WING_ATTACK],[44,E.ROOST],[50,E.TAILWIND],[56,E.AERIAL_ACE],[62,E.AIR_SLASH],[68,E.HURRICANE]],[A.RATTATA]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[4,E.QUICK_ATTACK],[7,E.FOCUS_ENERGY],[10,E.BITE],[13,E.LASER_FOCUS],[16,E.TAKE_DOWN],[19,E.ASSURANCE],[22,E.CRUNCH],[25,E.SUCKER_PUNCH],[28,E.SUPER_FANG],[31,E.DOUBLE_EDGE],[34,E.ENDEAVOR]],[A.RATICATE]:[[b,E.SCARY_FACE],[1,E.SWORDS_DANCE],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.QUICK_ATTACK],[1,E.FOCUS_ENERGY],[10,E.BITE],[13,E.LASER_FOCUS],[16,E.TAKE_DOWN],[19,E.ASSURANCE],[24,E.CRUNCH],[29,E.SUCKER_PUNCH],[34,E.SUPER_FANG],[39,E.DOUBLE_EDGE],[44,E.ENDEAVOR]],[A.SPEAROW]:[[1,E.GROWL],[1,E.PECK],[4,E.LEER],[8,E.ASSURANCE],[11,E.FURY_ATTACK],[15,E.AERIAL_ACE],[18,E.WING_ATTACK],[22,E.TAKE_DOWN],[25,E.AGILITY],[29,E.FOCUS_ENERGY],[32,E.ROOST],[36,E.DRILL_PECK]],[A.FEAROW]:[[1,E.LEER],[1,E.GROWL],[1,E.PECK],[1,E.ASSURANCE],[1,E.PLUCK],[1,E.DRILL_RUN],[1,E.PURSUIT],[4,E.LEER],[8,E.ASSURANCE],[11,E.FURY_ATTACK],[15,E.AERIAL_ACE],[18,E.WING_ATTACK],[23,E.TAKE_DOWN],[27,E.AGILITY],[32,E.FOCUS_ENERGY],[36,E.ROOST],[41,E.DRILL_PECK]],[A.EKANS]:[[1,E.WRAP],[1,E.LEER],[4,E.POISON_STING],[9,E.BITE],[12,E.GLARE],[17,E.SCREECH],[20,E.ACID],[25,E.SWALLOW],[25,E.STOCKPILE],[25,E.SPIT_UP],[28,E.ACID_SPRAY],[33,E.SLUDGE_BOMB],[36,E.GASTRO_ACID],[38,E.BELCH],[41,E.HAZE],[44,E.COIL],[49,E.GUNK_SHOT]],[A.ARBOK]:[[b,E.CRUNCH],[1,E.WRAP],[1,E.POISON_STING],[1,E.LEER],[1,E.BITE],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[12,E.GLARE],[17,E.SCREECH],[20,E.ACID],[27,E.STOCKPILE],[27,E.SPIT_UP],[27,E.SWALLOW],[32,E.ACID_SPRAY],[39,E.SLUDGE_BOMB],[44,E.GASTRO_ACID],[48,E.BELCH],[51,E.HAZE],[56,E.COIL],[63,E.GUNK_SHOT]],[A.PIKACHU]:[[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.SPARK],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[44,E.THUNDER],[48,E.PIKA_PAPOW]],[A.RAICHU]:[[b,E.ZIPPY_ZAP],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.THUNDER_WAVE],[1,E.THUNDER],[1,E.AGILITY],[1,E.QUICK_ATTACK],[1,E.DOUBLE_TEAM],[1,E.LIGHT_SCREEN],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.SPARK],[1,E.IRON_TAIL],[1,E.FEINT],[1,E.NASTY_PLOT],[1,E.DISCHARGE],[1,E.ELECTRO_BALL],[1,E.PLAY_NICE],[1,E.NUZZLE],[1,E.THUNDER_PUNCH],[5,E.THUNDERBOLT],[50,E.PIKA_PAPOW]],[A.SANDSHREW]:[[1,E.SCRATCH],[1,E.DEFENSE_CURL],[3,E.POISON_STING],[6,E.SAND_ATTACK],[9,E.ROLLOUT],[12,E.FURY_CUTTER],[15,E.RAPID_SPIN],[18,E.BULLDOZE],[21,E.SWIFT],[24,E.FURY_SWIPES],[27,E.AGILITY],[30,E.SLASH],[33,E.DIG],[36,E.GYRO_BALL],[39,E.SWORDS_DANCE],[42,E.SANDSTORM],[45,E.EARTHQUAKE]],[A.SANDSLASH]:[[1,E.SCRATCH],[1,E.SAND_ATTACK],[1,E.POISON_STING],[1,E.DEFENSE_CURL],[1,E.CRUSH_CLAW],[1,E.AGILITY],[9,E.ROLLOUT],[12,E.FURY_CUTTER],[15,E.RAPID_SPIN],[18,E.BULLDOZE],[21,E.SWIFT],[26,E.FURY_SWIPES],[31,E.SAND_TOMB],[36,E.SLASH],[41,E.DIG],[46,E.GYRO_BALL],[51,E.SWORDS_DANCE],[56,E.SANDSTORM],[61,E.EARTHQUAKE]],[A.NIDORAN_F]:[[1,E.POISON_STING],[1,E.GROWL],[5,E.SCRATCH],[10,E.TAIL_WHIP],[15,E.FURY_SWIPES],[20,E.TOXIC_SPIKES],[25,E.DOUBLE_KICK],[30,E.BITE],[35,E.HELPING_HAND],[40,E.TOXIC],[45,E.FLATTER],[50,E.CRUNCH],[55,E.EARTH_POWER]],[A.NIDORINA]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.POISON_STING],[1,E.GROWL],[15,E.FURY_SWIPES],[22,E.TOXIC_SPIKES],[29,E.DOUBLE_KICK],[36,E.BITE],[43,E.HELPING_HAND],[50,E.TOXIC],[57,E.FLATTER],[64,E.CRUNCH],[71,E.EARTH_POWER]],[A.NIDOQUEEN]:[[b,E.SUPERPOWER],[1,E.SLUDGE_WAVE],[1,E.SCRATCH],[1,E.DOUBLE_KICK],[1,E.TAIL_WHIP],[1,E.POISON_STING],[1,E.BITE],[1,E.GROWL],[1,E.TOXIC],[1,E.FURY_SWIPES],[1,E.CRUNCH],[1,E.FLATTER],[1,E.HELPING_HAND],[1,E.TOXIC_SPIKES],[1,E.EARTH_POWER]],[A.NIDORAN_M]:[[1,E.POISON_STING],[1,E.LEER],[5,E.PECK],[10,E.FOCUS_ENERGY],[15,E.FURY_ATTACK],[20,E.TOXIC_SPIKES],[25,E.DOUBLE_KICK],[30,E.HORN_ATTACK],[35,E.HELPING_HAND],[40,E.TOXIC],[45,E.FLATTER],[50,E.POISON_JAB],[55,E.EARTH_POWER]],[A.NIDORINO]:[[1,E.POISON_STING],[1,E.LEER],[1,E.PECK],[1,E.FOCUS_ENERGY],[15,E.FURY_ATTACK],[22,E.TOXIC_SPIKES],[29,E.DOUBLE_KICK],[36,E.HORN_ATTACK],[43,E.HELPING_HAND],[50,E.TOXIC],[57,E.FLATTER],[64,E.POISON_JAB],[71,E.EARTH_POWER]],[A.NIDOKING]:[[b,E.MEGAHORN],[1,E.SLUDGE_WAVE],[1,E.DOUBLE_KICK],[1,E.HORN_ATTACK],[1,E.FURY_ATTACK],[1,E.POISON_STING],[1,E.LEER],[1,E.PECK],[1,E.TOXIC],[1,E.FOCUS_ENERGY],[1,E.FLATTER],[1,E.HELPING_HAND],[1,E.TOXIC_SPIKES],[1,E.POISON_JAB],[1,E.EARTH_POWER]],[A.CLEFAIRY]:[[1,E.POUND],[1,E.GROWL],[1,E.SING],[1,E.DEFENSE_CURL],[1,E.SPLASH],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.COPYCAT],[1,E.DISARMING_VOICE],[1,E.SPOTLIGHT],[4,E.STORED_POWER],[8,E.ENCORE],[12,E.AFTER_YOU],[16,E.LIFE_DEW],[20,E.METRONOME],[24,E.MOONLIGHT],[28,E.GRAVITY],[32,E.METEOR_MASH],[36,E.FOLLOW_ME],[40,E.COSMIC_POWER],[44,E.MOONBLAST],[48,E.HEALING_WISH]],[A.CLEFABLE]:[[V,E.POUND],[V,E.GROWL],[V,E.SING],[V,E.DEFENSE_CURL],[V,E.SPLASH],[V,E.SWEET_KISS],[V,E.CHARM],[V,E.ENCORE],[V,E.MOONLIGHT],[V,E.FOLLOW_ME],[V,E.COSMIC_POWER],[V,E.GRAVITY],[V,E.HEALING_WISH],[V,E.COPYCAT],[V,E.AFTER_YOU],[V,E.STORED_POWER],[V,E.DISARMING_VOICE],[1,E.METRONOME],[1,E.METEOR_MASH],[1,E.MOONBLAST],[1,E.LIFE_DEW],[1,E.SPOTLIGHT]],[A.VULPIX]:[[1,E.TAIL_WHIP],[1,E.EMBER],[4,E.DISABLE],[8,E.QUICK_ATTACK],[12,E.SPITE],[16,E.INCINERATE],[20,E.CONFUSE_RAY],[24,E.WILL_O_WISP],[28,E.EXTRASENSORY],[32,E.FLAMETHROWER],[36,E.IMPRISON],[40,E.FIRE_SPIN],[44,E.SAFEGUARD],[48,E.INFERNO],[52,E.FIRE_BLAST]],[A.NINETALES]:[[V,E.DISABLE],[V,E.EMBER],[V,E.FIRE_SPIN],[V,E.CONFUSE_RAY],[V,E.FIRE_BLAST],[V,E.SPITE],[V,E.SAFEGUARD],[V,E.WILL_O_WISP],[V,E.IMPRISON],[V,E.EXTRASENSORY],[V,E.NASTY_PLOT],[V,E.INCINERATE],[V,E.INFERNO],[1,E.FLAMETHROWER],[1,E.TAIL_WHIP],[1,E.QUICK_ATTACK]],[A.JIGGLYPUFF]:[[1,E.POUND],[1,E.SING],[1,E.DISABLE],[1,E.DEFENSE_CURL],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.COPYCAT],[1,E.DISARMING_VOICE],[4,E.ECHOED_VOICE],[8,E.COVET],[12,E.STOCKPILE],[12,E.SPIT_UP],[12,E.SWALLOW],[16,E.ROUND],[20,E.REST],[24,E.BODY_SLAM],[28,E.MIMIC],[32,E.GYRO_BALL],[36,E.HYPER_VOICE],[44,E.DOUBLE_EDGE]],[A.WIGGLYTUFF]:[[1,E.POUND],[1,E.BODY_SLAM],[1,E.DOUBLE_EDGE],[1,E.SING],[1,E.DISABLE],[1,E.MIMIC],[1,E.DEFENSE_CURL],[1,E.REST],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.STOCKPILE],[1,E.SPIT_UP],[1,E.SWALLOW],[1,E.HYPER_VOICE],[1,E.COVET],[1,E.GYRO_BALL],[1,E.COPYCAT],[1,E.ROUND],[1,E.ECHOED_VOICE],[1,E.DISARMING_VOICE],[5,E.PLAY_ROUGH]],[A.ZUBAT]:[[1,E.SUPERSONIC],[1,E.ABSORB],[5,E.ASTONISH],[10,E.MEAN_LOOK],[15,E.POISON_FANG],[20,E.QUICK_GUARD],[25,E.AIR_CUTTER],[30,E.BITE],[35,E.HAZE],[40,E.VENOSHOCK],[45,E.CONFUSE_RAY],[50,E.AIR_SLASH],[55,E.LEECH_LIFE]],[A.GOLBAT]:[[1,E.SUPERSONIC],[1,E.ABSORB],[1,E.SCREECH],[1,E.MEAN_LOOK],[1,E.ASTONISH],[15,E.POISON_FANG],[20,E.QUICK_GUARD],[27,E.AIR_CUTTER],[34,E.BITE],[41,E.HAZE],[48,E.VENOSHOCK],[55,E.CONFUSE_RAY],[62,E.AIR_SLASH],[69,E.LEECH_LIFE]],[A.ODDISH]:[[1,E.ABSORB],[1,E.GROWTH],[4,E.ACID],[8,E.SWEET_SCENT],[12,E.MEGA_DRAIN],[14,E.POISON_POWDER],[16,E.STUN_SPORE],[18,E.SLEEP_POWDER],[20,E.GIGA_DRAIN],[24,E.TOXIC],[28,E.MOONBLAST],[32,E.GRASSY_TERRAIN],[36,E.MOONLIGHT],[40,E.PETAL_DANCE]],[A.GLOOM]:[[1,E.ACID],[1,E.ABSORB],[1,E.GROWTH],[1,E.SWEET_SCENT],[12,E.MEGA_DRAIN],[14,E.POISON_POWDER],[16,E.STUN_SPORE],[18,E.SLEEP_POWDER],[20,E.GIGA_DRAIN],[26,E.TOXIC],[32,E.MOONBLAST],[38,E.GRASSY_TERRAIN],[44,E.MOONLIGHT],[50,E.PETAL_DANCE]],[A.VILEPLUME]:[[b,E.PETAL_BLIZZARD],[1,E.ACID],[1,E.ABSORB],[1,E.MEGA_DRAIN],[1,E.GROWTH],[1,E.POISON_POWDER],[1,E.STUN_SPORE],[1,E.SLEEP_POWDER],[1,E.PETAL_DANCE],[1,E.TOXIC],[1,E.GIGA_DRAIN],[1,E.SWEET_SCENT],[1,E.MOONLIGHT],[1,E.AROMATHERAPY],[1,E.GRASSY_TERRAIN],[1,E.MOONBLAST]],[A.PARAS]:[[1,E.SCRATCH],[6,E.POISON_POWDER],[6,E.STUN_SPORE],[11,E.ABSORB],[17,E.FURY_CUTTER],[22,E.SPORE],[27,E.SLASH],[33,E.GROWTH],[38,E.GIGA_DRAIN],[43,E.AROMATHERAPY],[49,E.RAGE_POWDER],[54,E.X_SCISSOR]],[A.PARASECT]:[[1,E.SCRATCH],[1,E.ABSORB],[1,E.POISON_POWDER],[1,E.STUN_SPORE],[1,E.CROSS_POISON],[6,E.POISON_POWDER],[6,E.STUN_SPORE],[11,E.ABSORB],[17,E.FURY_CUTTER],[22,E.SPORE],[29,E.SLASH],[37,E.GROWTH],[44,E.GIGA_DRAIN],[51,E.AROMATHERAPY],[59,E.RAGE_POWDER],[66,E.X_SCISSOR]],[A.VENONAT]:[[1,E.TACKLE],[1,E.DISABLE],[5,E.SUPERSONIC],[11,E.CONFUSION],[13,E.POISON_POWDER],[17,E.PSYBEAM],[23,E.STUN_SPORE],[25,E.BUG_BUZZ],[29,E.SLEEP_POWDER],[35,E.LEECH_LIFE],[37,E.ZEN_HEADBUTT],[41,E.POISON_FANG],[47,E.PSYCHIC]],[A.VENOMOTH]:[[b,E.AIR_SLASH],[1,E.TACKLE],[1,E.SUPERSONIC],[1,E.DISABLE],[1,E.QUIVER_DANCE],[1,E.SILVER_WIND],[11,E.CONFUSION],[13,E.POISON_POWDER],[17,E.PSYBEAM],[23,E.STUN_SPORE],[25,E.BUG_BUZZ],[29,E.SLEEP_POWDER],[37,E.LEECH_LIFE],[41,E.ZEN_HEADBUTT],[47,E.POISON_FANG],[55,E.PSYCHIC]],[A.DIGLETT]:[[1,E.SCRATCH],[1,E.SAND_ATTACK],[4,E.GROWL],[8,E.ASTONISH],[12,E.MUD_SLAP],[16,E.BULLDOZE],[20,E.SUCKER_PUNCH],[24,E.SLASH],[28,E.SANDSTORM],[32,E.DIG],[36,E.EARTH_POWER],[40,E.EARTHQUAKE],[44,E.FISSURE]],[A.DUGTRIO]:[[b,E.SAND_TOMB],[1,E.SCRATCH],[1,E.SAND_ATTACK],[1,E.GROWL],[1,E.TRI_ATTACK],[1,E.ASTONISH],[1,E.NIGHT_SLASH],[1,E.ROTOTILLER],[12,E.MUD_SLAP],[16,E.BULLDOZE],[20,E.SUCKER_PUNCH],[24,E.SLASH],[30,E.SANDSTORM],[36,E.DIG],[42,E.EARTH_POWER],[48,E.EARTHQUAKE],[54,E.FISSURE]],[A.MEOWTH]:[[1,E.GROWL],[1,E.FAKE_OUT],[4,E.FEINT],[8,E.SCRATCH],[12,E.PAY_DAY],[16,E.BITE],[20,E.TAUNT],[24,E.ASSURANCE],[29,E.FURY_SWIPES],[32,E.SCREECH],[36,E.SLASH],[40,E.NASTY_PLOT],[44,E.PLAY_ROUGH]],[A.PERSIAN]:[[b,E.POWER_GEM],[1,E.SCRATCH],[1,E.GROWL],[1,E.FAKE_OUT],[1,E.FEINT],[1,E.SWITCHEROO],[12,E.PAY_DAY],[16,E.BITE],[20,E.TAUNT],[24,E.ASSURANCE],[31,E.FURY_SWIPES],[36,E.SCREECH],[42,E.SLASH],[48,E.NASTY_PLOT],[54,E.PLAY_ROUGH]],[A.PSYDUCK]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.WATER_SPORT],[3,E.WATER_GUN],[6,E.CONFUSION],[9,E.FURY_SWIPES],[12,E.WATER_PULSE],[15,E.DISABLE],[18,E.ZEN_HEADBUTT],[21,E.SCREECH],[24,E.AQUA_TAIL],[27,E.SOAK],[30,E.PSYCH_UP],[34,E.AMNESIA],[39,E.WONDER_ROOM]],[A.GOLDUCK]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.CONFUSION],[1,E.AQUA_JET],[1,E.WATER_SPORT],[1,E.ME_FIRST],[9,E.FURY_SWIPES],[12,E.WATER_PULSE],[15,E.DISABLE],[18,E.ZEN_HEADBUTT],[21,E.SCREECH],[24,E.AQUA_TAIL],[27,E.SOAK],[30,E.PSYCH_UP],[36,E.AMNESIA],[40,E.HYDRO_PUMP],[45,E.WONDER_ROOM]],[A.MANKEY]:[[1,E.SCRATCH],[1,E.LEER],[1,E.FOCUS_ENERGY],[1,E.COVET],[5,E.FURY_SWIPES],[8,E.LOW_KICK],[12,E.SEISMIC_TOSS],[17,E.SWAGGER],[22,E.CROSS_CHOP],[26,E.ASSURANCE],[29,E.THRASH],[33,E.CLOSE_COMBAT],[36,E.SCREECH],[40,E.STOMPING_TANTRUM],[44,E.OUTRAGE],[48,E.FINAL_GAMBIT]],[A.PRIMEAPE]:[[1,E.SCRATCH],[1,E.LEER],[1,E.FOCUS_ENERGY],[1,E.COVET],[1,E.FLING],[5,E.FURY_SWIPES],[8,E.LOW_KICK],[15,E.SEISMIC_TOSS],[17,E.SWAGGER],[22,E.CROSS_CHOP],[26,E.ASSURANCE],[30,E.THRASH],[35,E.RAGE_FIST],[39,E.CLOSE_COMBAT],[44,E.SCREECH],[48,E.STOMPING_TANTRUM],[53,E.OUTRAGE],[57,E.FINAL_GAMBIT]],[A.GROWLITHE]:[[1,E.LEER],[1,E.EMBER],[4,E.HOWL],[8,E.BITE],[12,E.FLAME_WHEEL],[16,E.HELPING_HAND],[20,E.AGILITY],[24,E.FIRE_FANG],[28,E.RETALIATE],[32,E.CRUNCH],[36,E.TAKE_DOWN],[40,E.FLAMETHROWER],[44,E.ROAR],[48,E.PLAY_ROUGH],[52,E.REVERSAL],[56,E.FLARE_BLITZ]],[A.ARCANINE]:[[b,E.EXTREME_SPEED],[1,E.TAKE_DOWN],[1,E.LEER],[1,E.BITE],[1,E.ROAR],[1,E.EMBER],[1,E.AGILITY],[1,E.FLAME_WHEEL],[1,E.REVERSAL],[1,E.CRUNCH],[1,E.HELPING_HAND],[1,E.ODOR_SLEUTH],[1,E.HOWL],[1,E.FLARE_BLITZ],[1,E.FIRE_FANG],[1,E.RETALIATE],[1,E.PLAY_ROUGH],[5,E.FLAMETHROWER]],[A.POLIWAG]:[[1,E.WATER_GUN],[1,E.HYPNOSIS],[1,E.WATER_SPORT],[6,E.POUND],[12,E.MUD_SHOT],[18,E.BUBBLE_BEAM],[24,E.RAIN_DANCE],[30,E.BODY_SLAM],[36,E.EARTH_POWER],[42,E.HYDRO_PUMP],[48,E.BELLY_DRUM],[54,E.DOUBLE_EDGE]],[A.POLIWHIRL]:[[1,E.POUND],[1,E.WATER_GUN],[1,E.HYPNOSIS],[1,E.WATER_SPORT],[1,E.MUD_SHOT],[18,E.BUBBLE_BEAM],[24,E.RAIN_DANCE],[32,E.BODY_SLAM],[40,E.EARTH_POWER],[48,E.HYDRO_PUMP],[56,E.BELLY_DRUM],[66,E.DOUBLE_EDGE]],[A.POLIWRATH]:[[b,E.DYNAMIC_PUNCH],[V,E.POUND],[V,E.DOUBLE_EDGE],[V,E.WATER_GUN],[V,E.HYDRO_PUMP],[V,E.BELLY_DRUM],[V,E.RAIN_DANCE],[V,E.MUD_SHOT],[V,E.EARTH_POWER],[V,E.CIRCLE_THROW],[1,E.BUBBLE_BEAM],[1,E.BODY_SLAM],[1,E.HYPNOSIS],[1,E.WATER_SPORT]],[A.ABRA]:[[1,E.TELEPORT],[1,E.CONFUSION]],[A.KADABRA]:[[b,E.PSYBEAM],[1,E.CONFUSION],[1,E.DISABLE],[1,E.TELEPORT],[1,E.KINESIS],[10,E.REFLECT],[15,E.ALLY_SWITCH],[20,E.PSYCHO_CUT],[25,E.RECOVER],[30,E.PSYSHOCK],[35,E.PSYCHIC],[40,E.ROLE_PLAY],[45,E.FUTURE_SIGHT],[50,E.CALM_MIND]],[A.ALAKAZAM]:[[1,E.DISABLE],[1,E.CONFUSION],[1,E.TELEPORT],[1,E.KINESIS],[5,E.PSYBEAM],[10,E.REFLECT],[15,E.ALLY_SWITCH],[20,E.PSYCHO_CUT],[25,E.RECOVER],[30,E.PSYSHOCK],[35,E.PSYCHIC],[40,E.ROLE_PLAY],[45,E.FUTURE_SIGHT],[50,E.CALM_MIND]],[A.MACHOP]:[[1,E.LEER],[1,E.LOW_KICK],[4,E.FOCUS_ENERGY],[8,E.REVENGE],[12,E.LOW_SWEEP],[16,E.KNOCK_OFF],[20,E.SCARY_FACE],[24,E.VITAL_THROW],[29,E.STRENGTH],[32,E.DUAL_CHOP],[36,E.BULK_UP],[40,E.SEISMIC_TOSS],[44,E.DYNAMIC_PUNCH],[48,E.CROSS_CHOP],[52,E.DOUBLE_EDGE]],[A.MACHOKE]:[[1,E.LEER],[1,E.LOW_KICK],[1,E.FOCUS_ENERGY],[1,E.REVENGE],[1,E.KARATE_CHOP],[12,E.LOW_SWEEP],[16,E.KNOCK_OFF],[20,E.SCARY_FACE],[24,E.VITAL_THROW],[31,E.STRENGTH],[36,E.DUAL_CHOP],[42,E.BULK_UP],[48,E.SEISMIC_TOSS],[54,E.DYNAMIC_PUNCH],[60,E.CROSS_CHOP],[66,E.DOUBLE_EDGE]],[A.MACHAMP]:[[1,E.LEER],[1,E.LOW_KICK],[1,E.FOCUS_ENERGY],[1,E.REVENGE],[1,E.WIDE_GUARD],[1,E.KARATE_CHOP],[12,E.LOW_SWEEP],[16,E.KNOCK_OFF],[20,E.SCARY_FACE],[24,E.VITAL_THROW],[31,E.STRENGTH],[36,E.DUAL_CHOP],[42,E.BULK_UP],[48,E.SEISMIC_TOSS],[54,E.DYNAMIC_PUNCH],[60,E.CROSS_CHOP],[66,E.DOUBLE_EDGE]],[A.BELLSPROUT]:[[1,E.VINE_WHIP],[7,E.GROWTH],[11,E.WRAP],[13,E.SLEEP_POWDER],[15,E.POISON_POWDER],[17,E.STUN_SPORE],[23,E.ACID],[27,E.KNOCK_OFF],[29,E.SWEET_SCENT],[35,E.GASTRO_ACID],[39,E.RAZOR_LEAF],[41,E.POISON_JAB],[47,E.SLAM],[52,E.POWER_WHIP]],[A.WEEPINBELL]:[[1,E.VINE_WHIP],[1,E.WRAP],[1,E.GROWTH],[13,E.SLEEP_POWDER],[15,E.POISON_POWDER],[17,E.STUN_SPORE],[24,E.ACID],[29,E.KNOCK_OFF],[32,E.SWEET_SCENT],[39,E.GASTRO_ACID],[44,E.RAZOR_LEAF],[47,E.POISON_JAB],[54,E.SLAM],[58,E.POWER_WHIP]],[A.VICTREEBEL]:[[b,E.LEAF_STORM],[V,E.STOCKPILE],[V,E.SWALLOW],[V,E.SPIT_UP],[V,E.WRAP],[V,E.GROWTH],[V,E.ACID],[V,E.KNOCK_OFF],[V,E.GASTRO_ACID],[V,E.POISON_JAB],[V,E.SLAM],[V,E.POWER_WHIP],[1,E.VINE_WHIP],[1,E.SLEEP_POWDER],[1,E.POISON_POWDER],[1,E.STUN_SPORE],[1,E.SWEET_SCENT],[1,E.RAZOR_LEAF],[44,E.LEAF_BLADE]],[A.TENTACOOL]:[[1,E.POISON_STING],[1,E.WATER_GUN],[4,E.ACID],[8,E.WRAP],[12,E.SUPERSONIC],[16,E.WATER_PULSE],[20,E.SCREECH],[24,E.BUBBLE_BEAM],[28,E.HEX],[32,E.ACID_ARMOR],[36,E.POISON_JAB],[40,E.SURF],[44,E.SLUDGE_WAVE],[48,E.HYDRO_PUMP]],[A.TENTACRUEL]:[[1,E.WRAP],[1,E.POISON_STING],[1,E.ACID],[1,E.WATER_GUN],[1,E.REFLECT_TYPE],[1,E.WRING_OUT],[12,E.SUPERSONIC],[16,E.WATER_PULSE],[20,E.SCREECH],[24,E.BUBBLE_BEAM],[28,E.HEX],[34,E.ACID_ARMOR],[40,E.POISON_JAB],[46,E.SURF],[52,E.SLUDGE_WAVE],[58,E.HYDRO_PUMP]],[A.GEODUDE]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[6,E.ROCK_POLISH],[10,E.ROLLOUT],[12,E.BULLDOZE],[16,E.ROCK_THROW],[18,E.SMACK_DOWN],[24,E.SELF_DESTRUCT],[28,E.STEALTH_ROCK],[30,E.ROCK_BLAST],[34,E.EARTHQUAKE],[36,E.EXPLOSION],[40,E.DOUBLE_EDGE],[42,E.STONE_EDGE]],[A.GRAVELER]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[1,E.ROCK_POLISH],[10,E.ROLLOUT],[12,E.BULLDOZE],[16,E.ROCK_THROW],[18,E.SMACK_DOWN],[24,E.SELF_DESTRUCT],[30,E.STEALTH_ROCK],[34,E.ROCK_BLAST],[40,E.EARTHQUAKE],[44,E.EXPLOSION],[50,E.DOUBLE_EDGE],[54,E.STONE_EDGE]],[A.GOLEM]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[1,E.ROCK_POLISH],[1,E.ROLLOUT],[1,E.HEAVY_SLAM],[16,E.ROCK_THROW],[18,E.SMACK_DOWN],[22,E.BULLDOZE],[24,E.SELF_DESTRUCT],[30,E.STEALTH_ROCK],[34,E.ROCK_BLAST],[40,E.EARTHQUAKE],[44,E.EXPLOSION],[50,E.DOUBLE_EDGE],[54,E.STONE_EDGE]],[A.PONYTA]:[[1,E.TACKLE],[1,E.GROWL],[5,E.TAIL_WHIP],[10,E.EMBER],[15,E.FLAME_CHARGE],[20,E.AGILITY],[25,E.FLAME_WHEEL],[30,E.STOMP],[35,E.FIRE_SPIN],[41,E.TAKE_DOWN],[45,E.INFERNO],[50,E.FIRE_BLAST],[55,E.FLARE_BLITZ]],[A.RAPIDASH]:[[b,E.SMART_STRIKE],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.EMBER],[1,E.QUICK_ATTACK],[1,E.MEGAHORN],[1,E.POISON_JAB],[15,E.FLAME_CHARGE],[20,E.AGILITY],[25,E.FLAME_WHEEL],[30,E.STOMP],[35,E.FIRE_SPIN],[43,E.TAKE_DOWN],[49,E.INFERNO],[56,E.FIRE_BLAST],[63,E.FLARE_BLITZ]],[A.SLOWPOKE]:[[1,E.TACKLE],[1,E.CURSE],[3,E.GROWL],[6,E.WATER_GUN],[9,E.YAWN],[12,E.CONFUSION],[15,E.DISABLE],[18,E.WATER_PULSE],[21,E.HEADBUTT],[24,E.ZEN_HEADBUTT],[27,E.AMNESIA],[30,E.SURF],[33,E.SLACK_OFF],[36,E.PSYCHIC],[39,E.PSYCH_UP],[42,E.RAIN_DANCE],[45,E.HEAL_PULSE]],[A.SLOWBRO]:[[V,E.FUTURE_SIGHT],[1,E.TACKLE],[1,E.GROWL],[1,E.WATER_GUN],[1,E.WITHDRAW],[1,E.CURSE],[9,E.YAWN],[12,E.CONFUSION],[15,E.DISABLE],[18,E.WATER_PULSE],[21,E.HEADBUTT],[24,E.ZEN_HEADBUTT],[27,E.AMNESIA],[30,E.SURF],[33,E.SLACK_OFF],[36,E.PSYCHIC],[41,E.PSYCH_UP],[46,E.RAIN_DANCE],[51,E.HEAL_PULSE]],[A.MAGNEMITE]:[[1,E.TACKLE],[1,E.THUNDER_SHOCK],[4,E.SUPERSONIC],[8,E.THUNDER_WAVE],[12,E.ELECTRO_BALL],[16,E.GYRO_BALL],[20,E.SPARK],[24,E.SCREECH],[28,E.MAGNET_RISE],[32,E.FLASH_CANNON],[36,E.DISCHARGE],[40,E.METAL_SOUND],[44,E.LIGHT_SCREEN],[48,E.LOCK_ON],[52,E.ZAP_CANNON]],[A.MAGNETON]:[[b,E.TRI_ATTACK],[1,E.TACKLE],[1,E.SUPERSONIC],[1,E.THUNDER_SHOCK],[1,E.THUNDER_WAVE],[1,E.ELECTRIC_TERRAIN],[12,E.ELECTRO_BALL],[16,E.GYRO_BALL],[20,E.SPARK],[24,E.SCREECH],[28,E.MAGNET_RISE],[34,E.FLASH_CANNON],[40,E.DISCHARGE],[46,E.METAL_SOUND],[52,E.LIGHT_SCREEN],[58,E.LOCK_ON],[64,E.ZAP_CANNON]],[A.FARFETCHD]:[[1,E.SAND_ATTACK],[1,E.PECK],[5,E.LEER],[10,E.FURY_CUTTER],[15,E.CUT],[20,E.AERIAL_ACE],[25,E.AIR_CUTTER],[30,E.KNOCK_OFF],[35,E.FALSE_SWIPE],[40,E.SLASH],[45,E.SWORDS_DANCE],[50,E.AIR_SLASH],[55,E.LEAF_BLADE],[60,E.AGILITY],[65,E.BRAVE_BIRD]],[A.DODUO]:[[1,E.GROWL],[1,E.PECK],[5,E.QUICK_ATTACK],[9,E.FURY_ATTACK],[14,E.PLUCK],[19,E.DOUBLE_HIT],[23,E.AGILITY],[27,E.UPROAR],[30,E.ACUPRESSURE],[33,E.SWORDS_DANCE],[36,E.DRILL_PECK],[39,E.ENDEAVOR],[43,E.THRASH]],[A.DODRIO]:[[b,E.TRI_ATTACK],[1,E.TRI_ATTACK],[1,E.GROWL],[1,E.PECK],[5,E.QUICK_ATTACK],[12,E.FURY_ATTACK],[15,E.PLUCK],[19,E.DOUBLE_HIT],[23,E.AGILITY],[26,E.UPROAR],[30,E.ACUPRESSURE],[34,E.SWORDS_DANCE],[38,E.DRILL_PECK],[43,E.ENDEAVOR],[50,E.THRASH]],[A.SEEL]:[[1,E.HEADBUTT],[3,E.GROWL],[7,E.CHARM],[11,E.ICY_WIND],[13,E.ENCORE],[17,E.ICE_SHARD],[21,E.REST],[23,E.AQUA_RING],[27,E.AURORA_BEAM],[31,E.AQUA_JET],[33,E.BRINE],[37,E.TAKE_DOWN],[41,E.DIVE],[43,E.AQUA_TAIL],[47,E.ICE_BEAM],[51,E.SAFEGUARD],[53,E.SNOWSCAPE]],[A.DEWGONG]:[[b,E.SHEER_COLD],[1,E.HEADBUTT],[1,E.GROWL],[1,E.ICY_WIND],[1,E.CHARM],[1,E.SIGNAL_BEAM],[13,E.ENCORE],[17,E.ICE_SHARD],[21,E.REST],[23,E.AQUA_RING],[27,E.AURORA_BEAM],[31,E.AQUA_JET],[33,E.BRINE],[39,E.TAKE_DOWN],[45,E.DIVE],[49,E.AQUA_TAIL],[55,E.ICE_BEAM],[61,E.SAFEGUARD],[65,E.SNOWSCAPE]],[A.GRIMER]:[[1,E.POUND],[1,E.POISON_GAS],[4,E.HARDEN],[7,E.MUD_SLAP],[12,E.DISABLE],[15,E.SLUDGE],[18,E.MUD_SHOT],[21,E.MINIMIZE],[26,E.TOXIC],[29,E.SLUDGE_BOMB],[32,E.SLUDGE_WAVE],[37,E.SCREECH],[40,E.GUNK_SHOT],[43,E.ACID_ARMOR],[46,E.BELCH],[48,E.MEMENTO]],[A.MUK]:[[1,E.POUND],[1,E.HARDEN],[1,E.POISON_GAS],[1,E.MUD_SLAP],[12,E.DISABLE],[15,E.SLUDGE],[18,E.MUD_SHOT],[21,E.MINIMIZE],[26,E.TOXIC],[29,E.SLUDGE_BOMB],[32,E.SLUDGE_WAVE],[37,E.SCREECH],[40,E.GUNK_SHOT],[46,E.ACID_ARMOR],[52,E.BELCH],[57,E.MEMENTO]],[A.SHELLDER]:[[1,E.TACKLE],[1,E.WATER_GUN],[4,E.WITHDRAW],[8,E.ICE_SHARD],[12,E.LEER],[16,E.WHIRLPOOL],[20,E.SUPERSONIC],[24,E.AURORA_BEAM],[28,E.PROTECT],[32,E.RAZOR_SHELL],[36,E.IRON_DEFENSE],[40,E.ICE_BEAM],[44,E.SHELL_SMASH],[48,E.HYDRO_PUMP]],[A.CLOYSTER]:[[b,E.ICICLE_SPEAR],[1,E.TACKLE],[1,E.LEER],[1,E.SUPERSONIC],[1,E.WATER_GUN],[1,E.HYDRO_PUMP],[1,E.ICE_BEAM],[1,E.AURORA_BEAM],[1,E.WITHDRAW],[1,E.PROTECT],[1,E.SPIKES],[1,E.WHIRLPOOL],[1,E.IRON_DEFENSE],[1,E.TOXIC_SPIKES],[1,E.ICE_SHARD],[1,E.SHELL_SMASH],[1,E.ICICLE_CRASH],[5,E.RAZOR_SHELL]],[A.GASTLY]:[[1,E.CONFUSE_RAY],[1,E.LICK],[1,E.ACID],[4,E.HYPNOSIS],[8,E.MEAN_LOOK],[12,E.PAYBACK],[16,E.SPITE],[20,E.CURSE],[24,E.HEX],[28,E.NIGHT_SHADE],[32,E.SUCKER_PUNCH],[36,E.DARK_PULSE],[40,E.SHADOW_BALL],[44,E.DESTINY_BOND],[48,E.DREAM_EATER]],[A.HAUNTER]:[[b,E.SHADOW_PUNCH],[1,E.HYPNOSIS],[1,E.CONFUSE_RAY],[1,E.LICK],[1,E.ACID],[1,E.MEAN_LOOK],[12,E.PAYBACK],[16,E.SPITE],[20,E.CURSE],[24,E.HEX],[30,E.NIGHT_SHADE],[36,E.SUCKER_PUNCH],[42,E.DARK_PULSE],[48,E.SHADOW_BALL],[54,E.DESTINY_BOND],[60,E.DREAM_EATER]],[A.GENGAR]:[[1,E.HYPNOSIS],[1,E.CONFUSE_RAY],[1,E.LICK],[1,E.ACID],[1,E.PERISH_SONG],[1,E.MEAN_LOOK],[1,E.SHADOW_PUNCH],[1,E.REFLECT_TYPE],[12,E.PAYBACK],[16,E.SPITE],[20,E.CURSE],[24,E.HEX],[30,E.NIGHT_SHADE],[36,E.SUCKER_PUNCH],[42,E.DARK_PULSE],[48,E.SHADOW_BALL],[54,E.DESTINY_BOND],[60,E.DREAM_EATER]],[A.ONIX]:[[1,E.BIND],[1,E.TACKLE],[1,E.ROCK_THROW],[1,E.HARDEN],[1,E.MUD_SPORT],[4,E.SMACK_DOWN],[8,E.ROCK_POLISH],[12,E.DRAGON_BREATH],[16,E.CURSE],[20,E.ROCK_SLIDE],[22,E.GYRO_BALL],[24,E.SCREECH],[28,E.SAND_TOMB],[32,E.STEALTH_ROCK],[36,E.SLAM],[40,E.SANDSTORM],[44,E.DIG],[48,E.IRON_TAIL],[52,E.STONE_EDGE],[56,E.DOUBLE_EDGE]],[A.DROWZEE]:[[1,E.POUND],[1,E.HYPNOSIS],[5,E.DISABLE],[9,E.CONFUSION],[13,E.HEADBUTT],[17,E.POISON_GAS],[21,E.PSYBEAM],[25,E.PSYCH_UP],[29,E.ZEN_HEADBUTT],[33,E.SWAGGER],[37,E.PSYCHIC],[41,E.NASTY_PLOT],[45,E.PSYSHOCK],[49,E.FUTURE_SIGHT]],[A.HYPNO]:[[1,E.POUND],[1,E.DISABLE],[1,E.CONFUSION],[1,E.HYPNOSIS],[1,E.SWITCHEROO],[1,E.NIGHTMARE],[13,E.HEADBUTT],[17,E.POISON_GAS],[21,E.PSYBEAM],[25,E.PSYCH_UP],[32,E.ZEN_HEADBUTT],[37,E.SWAGGER],[42,E.PSYCHIC],[47,E.NASTY_PLOT],[51,E.PSYSHOCK],[56,E.FUTURE_SIGHT]],[A.KRABBY]:[[1,E.LEER],[1,E.WATER_GUN],[1,E.MUD_SPORT],[4,E.HARDEN],[8,E.METAL_CLAW],[12,E.MUD_SHOT],[16,E.PROTECT],[20,E.BUBBLE_BEAM],[24,E.STOMP],[29,E.FLAIL],[32,E.RAZOR_SHELL],[36,E.SLAM],[40,E.SWORDS_DANCE],[44,E.CRABHAMMER],[48,E.GUILLOTINE]],[A.KINGLER]:[[1,E.LEER],[1,E.WATER_GUN],[1,E.HARDEN],[1,E.METAL_CLAW],[1,E.HAMMER_ARM],[1,E.WIDE_GUARD],[1,E.MUD_SPORT],[12,E.MUD_SHOT],[16,E.PROTECT],[20,E.BUBBLE_BEAM],[24,E.STOMP],[31,E.FLAIL],[36,E.RAZOR_SHELL],[42,E.SLAM],[48,E.SWORDS_DANCE],[54,E.CRABHAMMER],[60,E.GUILLOTINE]],[A.VOLTORB]:[[1,E.TACKLE],[1,E.CHARGE],[4,E.THUNDER_SHOCK],[6,E.EERIE_IMPULSE],[9,E.SPARK],[11,E.ROLLOUT],[13,E.SCREECH],[16,E.CHARGE_BEAM],[20,E.SWIFT],[22,E.ELECTRO_BALL],[26,E.SELF_DESTRUCT],[29,E.LIGHT_SCREEN],[34,E.MAGNET_RISE],[37,E.DISCHARGE],[41,E.EXPLOSION],[46,E.GYRO_BALL],[50,E.MIRROR_COAT]],[A.ELECTRODE]:[[1,E.TACKLE],[1,E.THUNDER_SHOCK],[1,E.CHARGE],[1,E.EERIE_IMPULSE],[1,E.MAGNETIC_FLUX],[9,E.SPARK],[11,E.ROLLOUT],[13,E.SCREECH],[16,E.CHARGE_BEAM],[20,E.SWIFT],[22,E.ELECTRO_BALL],[26,E.SELF_DESTRUCT],[29,E.LIGHT_SCREEN],[36,E.MAGNET_RISE],[41,E.DISCHARGE],[47,E.EXPLOSION],[54,E.GYRO_BALL],[58,E.MIRROR_COAT]],[A.EXEGGCUTE]:[[1,E.ABSORB],[1,E.HYPNOSIS],[1,E.BARRAGE],[5,E.REFLECT],[10,E.LEECH_SEED],[15,E.MEGA_DRAIN],[20,E.CONFUSION],[25,E.SYNTHESIS],[30,E.BULLET_SEED],[35,E.GIGA_DRAIN],[40,E.EXTRASENSORY],[45,E.UPROAR],[50,E.WORRY_SEED],[55,E.SOLAR_BEAM]],[A.EXEGGUTOR]:[[b,E.STOMP],[V,E.GROWTH],[1,E.BARRAGE],[1,E.SEED_BOMB],[1,E.PSYSHOCK],[1,E.WOOD_HAMMER],[1,E.LEAF_STORM],[1,E.MEGA_DRAIN],[1,E.CONFUSION],[1,E.SYNTHESIS],[1,E.BULLET_SEED],[1,E.GIGA_DRAIN],[1,E.EXTRASENSORY],[1,E.UPROAR],[1,E.WORRY_SEED],[1,E.SOLAR_BEAM],[1,E.ABSORB],[1,E.HYPNOSIS],[1,E.REFLECT],[1,E.LEECH_SEED]],[A.CUBONE]:[[1,E.GROWL],[1,E.MUD_SLAP],[4,E.TAIL_WHIP],[8,E.FALSE_SWIPE],[12,E.HEADBUTT],[16,E.RETALIATE],[20,E.FLING],[24,E.STOMPING_TANTRUM],[29,E.BONE_RUSH],[32,E.FOCUS_ENERGY],[36,E.ENDEAVOR],[40,E.BONEMERANG],[44,E.THRASH],[48,E.DOUBLE_EDGE]],[A.MAROWAK]:[[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.MUD_SLAP],[1,E.FALSE_SWIPE],[1,E.BONE_CLUB],[12,E.HEADBUTT],[16,E.RETALIATE],[20,E.FLING],[24,E.STOMPING_TANTRUM],[31,E.BONE_RUSH],[36,E.FOCUS_ENERGY],[42,E.ENDEAVOR],[48,E.BONEMERANG],[54,E.THRASH],[60,E.DOUBLE_EDGE]],[A.HITMONLEE]:[[b,E.BRICK_BREAK],[1,E.TACKLE],[1,E.FOCUS_ENERGY],[1,E.FAKE_OUT],[1,E.HELPING_HAND],[1,E.FEINT],[1,E.LOW_SWEEP],[1,E.JUMP_KICK],[1,E.ROLLING_KICK],[1,E.MACH_PUNCH],[1,E.RAPID_SPIN],[4,E.DOUBLE_KICK],[8,E.LOW_KICK],[12,E.ENDURE],[16,E.SUCKER_PUNCH],[21,E.WIDE_GUARD],[24,E.BLAZE_KICK],[28,E.FEINT],[32,E.MEGA_KICK],[36,E.CLOSE_COMBAT],[40,E.REVERSAL],[44,E.HIGH_JUMP_KICK],[50,E.AXE_KICK]],[A.HITMONCHAN]:[[b,E.DRAIN_PUNCH],[1,E.TACKLE],[1,E.FOCUS_ENERGY],[1,E.FAKE_OUT],[1,E.HELPING_HAND],[1,E.FEINT],[1,E.PURSUIT],[1,E.COMET_PUNCH],[1,E.LOW_SWEEP],[1,E.RAPID_SPIN],[4,E.MACH_PUNCH],[8,E.VACUUM_WAVE],[12,E.DETECT],[16,E.BULLET_PUNCH],[21,E.QUICK_GUARD],[24,E.THUNDER_PUNCH],[24,E.ICE_PUNCH],[24,E.FIRE_PUNCH],[28,E.AGILITY],[32,E.MEGA_PUNCH],[36,E.CLOSE_COMBAT],[40,E.COUNTER],[44,E.FOCUS_PUNCH]],[A.LICKITUNG]:[[1,E.DEFENSE_CURL],[1,E.LICK],[1,E.TACKLE],[6,E.REST],[12,E.SUPERSONIC],[18,E.WRAP],[24,E.DISABLE],[30,E.STOMP],[32,E.ROLLOUT],[36,E.KNOCK_OFF],[42,E.SCREECH],[48,E.SLAM],[54,E.POWER_WHIP],[60,E.BELLY_DRUM]],[A.KOFFING]:[[1,E.TACKLE],[1,E.POISON_GAS],[4,E.SMOG],[8,E.SMOKESCREEN],[12,E.CLEAR_SMOG],[16,E.ASSURANCE],[20,E.SLUDGE],[24,E.HAZE],[28,E.SELF_DESTRUCT],[32,E.SLUDGE_BOMB],[36,E.TOXIC],[40,E.BELCH],[44,E.EXPLOSION],[48,E.MEMENTO],[52,E.DESTINY_BOND]],[A.WEEZING]:[[b,E.DOUBLE_HIT],[1,E.TACKLE],[1,E.SMOKESCREEN],[1,E.SMOG],[1,E.POISON_GAS],[1,E.HEAT_WAVE],[12,E.CLEAR_SMOG],[16,E.ASSURANCE],[20,E.SLUDGE],[24,E.HAZE],[28,E.SELF_DESTRUCT],[32,E.SLUDGE_BOMB],[38,E.TOXIC],[44,E.BELCH],[50,E.EXPLOSION],[56,E.MEMENTO],[62,E.DESTINY_BOND]],[A.RHYHORN]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.SMACK_DOWN],[10,E.BULLDOZE],[15,E.HORN_ATTACK],[20,E.SCARY_FACE],[25,E.STOMP],[30,E.ROCK_BLAST],[35,E.DRILL_RUN],[40,E.TAKE_DOWN],[45,E.EARTHQUAKE],[50,E.STONE_EDGE],[55,E.MEGAHORN],[60,E.HORN_DRILL]],[A.RHYDON]:[[b,E.HAMMER_ARM],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.SMACK_DOWN],[1,E.BULLDOZE],[15,E.HORN_ATTACK],[20,E.SCARY_FACE],[25,E.STOMP],[30,E.ROCK_BLAST],[35,E.DRILL_RUN],[40,E.TAKE_DOWN],[47,E.EARTHQUAKE],[54,E.STONE_EDGE],[61,E.MEGAHORN],[68,E.HORN_DRILL]],[A.CHANSEY]:[[1,E.POUND],[1,E.DEFENSE_CURL],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.COVET],[1,E.COPYCAT],[1,E.DISARMING_VOICE],[4,E.TAIL_WHIP],[8,E.ECHOED_VOICE],[12,E.LIFE_DEW],[16,E.SING],[20,E.FLING],[24,E.TAKE_DOWN],[28,E.HEAL_PULSE],[32,E.HELPING_HAND],[36,E.LIGHT_SCREEN],[40,E.DOUBLE_EDGE],[44,E.SOFT_BOILED],[48,E.LAST_RESORT],[52,E.HEALING_WISH]],[A.TANGELA]:[[1,E.BIND],[1,E.ABSORB],[1,E.CONSTRICT],[4,E.STUN_SPORE],[8,E.GROWTH],[12,E.MEGA_DRAIN],[16,E.VINE_WHIP],[20,E.POISON_POWDER],[24,E.DOUBLE_HIT],[28,E.KNOCK_OFF],[32,E.GIGA_DRAIN],[34,E.ANCIENT_POWER],[36,E.SLEEP_POWDER],[40,E.SLAM],[44,E.TICKLE],[48,E.POWER_WHIP],[52,E.INGRAIN],[56,E.GRASSY_TERRAIN]],[A.KANGASKHAN]:[[1,E.POUND],[1,E.TAIL_WHIP],[1,E.COMET_PUNCH],[4,E.GROWL],[8,E.FAKE_OUT],[12,E.BITE],[16,E.STOMP],[20,E.FOCUS_ENERGY],[24,E.HEADBUTT],[28,E.SUCKER_PUNCH],[32,E.DOUBLE_HIT],[36,E.CRUNCH],[40,E.ENDURE],[44,E.REVERSAL],[48,E.OUTRAGE],[52,E.LAST_RESORT]],[A.HORSEA]:[[1,E.LEER],[1,E.WATER_GUN],[5,E.SMOKESCREEN],[10,E.TWISTER],[15,E.FOCUS_ENERGY],[20,E.DRAGON_BREATH],[25,E.BUBBLE_BEAM],[30,E.AGILITY],[35,E.LASER_FOCUS],[40,E.DRAGON_PULSE],[45,E.HYDRO_PUMP],[50,E.DRAGON_DANCE],[55,E.RAIN_DANCE]],[A.SEADRA]:[[1,E.LEER],[1,E.WATER_GUN],[1,E.SMOKESCREEN],[1,E.TWISTER],[15,E.FOCUS_ENERGY],[20,E.DRAGON_BREATH],[25,E.BUBBLE_BEAM],[30,E.AGILITY],[37,E.LASER_FOCUS],[44,E.DRAGON_PULSE],[51,E.HYDRO_PUMP],[58,E.DRAGON_DANCE],[65,E.RAIN_DANCE]],[A.GOLDEEN]:[[1,E.TAIL_WHIP],[1,E.PECK],[1,E.WATER_SPORT],[5,E.SUPERSONIC],[10,E.WATER_PULSE],[15,E.HORN_ATTACK],[20,E.AGILITY],[25,E.AQUA_RING],[30,E.FLAIL],[35,E.WATERFALL],[40,E.SOAK],[45,E.MEGAHORN],[50,E.HORN_DRILL]],[A.SEAKING]:[[1,E.TAIL_WHIP],[1,E.SUPERSONIC],[1,E.WATER_SPORT],[1,E.PECK],[1,E.WATER_PULSE],[15,E.HORN_ATTACK],[20,E.AGILITY],[25,E.AQUA_RING],[30,E.FLAIL],[37,E.WATERFALL],[44,E.SOAK],[51,E.MEGAHORN],[58,E.HORN_DRILL]],[A.STARYU]:[[1,E.TACKLE],[1,E.HARDEN],[4,E.WATER_GUN],[8,E.CONFUSE_RAY],[12,E.RAPID_SPIN],[16,E.MINIMIZE],[20,E.SWIFT],[24,E.PSYBEAM],[28,E.BRINE],[32,E.LIGHT_SCREEN],[36,E.POWER_GEM],[40,E.PSYCHIC],[44,E.SURF],[48,E.RECOVER],[52,E.COSMIC_POWER],[56,E.HYDRO_PUMP]],[A.STARMIE]:[[1,E.TACKLE],[1,E.WATER_GUN],[1,E.HYDRO_PUMP],[1,E.SURF],[1,E.PSYBEAM],[1,E.PSYCHIC],[1,E.RECOVER],[1,E.HARDEN],[1,E.MINIMIZE],[1,E.CONFUSE_RAY],[1,E.LIGHT_SCREEN],[1,E.SWIFT],[1,E.SPOTLIGHT],[1,E.RAPID_SPIN],[1,E.COSMIC_POWER],[1,E.BRINE],[1,E.POWER_GEM]],[A.MR_MIME]:[[1,E.POUND],[1,E.TICKLE],[1,E.BATON_PASS],[1,E.ENCORE],[1,E.COPYCAT],[1,E.POWER_SWAP],[1,E.GUARD_SWAP],[1,E.WIDE_GUARD],[1,E.QUICK_GUARD],[1,E.BARRIER],[12,E.CONFUSION],[16,E.ROLE_PLAY],[20,E.PROTECT],[24,E.RECYCLE],[28,E.PSYBEAM],[32,E.MIMIC],[36,E.LIGHT_SCREEN],[36,E.REFLECT],[36,E.SAFEGUARD],[40,E.SUCKER_PUNCH],[44,E.DAZZLING_GLEAM],[48,E.PSYCHIC],[52,E.TEETER_DANCE]],[A.SCYTHER]:[[1,E.LEER],[1,E.QUICK_ATTACK],[4,E.FURY_CUTTER],[8,E.FALSE_SWIPE],[12,E.WING_ATTACK],[16,E.DOUBLE_TEAM],[20,E.DOUBLE_HIT],[24,E.SLASH],[28,E.FOCUS_ENERGY],[30,E.STEEL_WING],[32,E.AGILITY],[36,E.AIR_SLASH],[40,E.X_SCISSOR],[44,E.SWORDS_DANCE]],[A.JYNX]:[[1,E.POUND],[1,E.LICK],[1,E.POWDER_SNOW],[1,E.SWEET_KISS],[1,E.COPYCAT],[12,E.CONFUSION],[16,E.COVET],[20,E.SING],[24,E.FAKE_TEARS],[28,E.ICE_PUNCH],[34,E.PSYCHIC],[40,E.LOVELY_KISS],[46,E.MEAN_LOOK],[52,E.PERISH_SONG],[58,E.BLIZZARD]],[A.ELECTABUZZ]:[[1,E.LEER],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.CHARGE],[12,E.SWIFT],[16,E.SHOCK_WAVE],[20,E.THUNDER_WAVE],[24,E.SCREECH],[28,E.THUNDER_PUNCH],[34,E.DISCHARGE],[40,E.LOW_KICK],[46,E.THUNDERBOLT],[52,E.LIGHT_SCREEN],[58,E.THUNDER],[64,E.GIGA_IMPACT]],[A.MAGMAR]:[[1,E.LEER],[1,E.EMBER],[1,E.SMOKESCREEN],[1,E.SMOG],[12,E.CLEAR_SMOG],[16,E.FLAME_WHEEL],[20,E.CONFUSE_RAY],[24,E.SCARY_FACE],[28,E.FIRE_PUNCH],[34,E.LAVA_PLUME],[40,E.LOW_KICK],[46,E.FLAMETHROWER],[52,E.SUNNY_DAY],[58,E.FIRE_BLAST],[64,E.HYPER_BEAM]],[A.PINSIR]:[[1,E.VISE_GRIP],[1,E.HARDEN],[4,E.FOCUS_ENERGY],[8,E.BIND],[12,E.SEISMIC_TOSS],[16,E.BUG_BITE],[20,E.STORM_THROW],[24,E.DOUBLE_HIT],[28,E.VITAL_THROW],[32,E.X_SCISSOR],[36,E.STRENGTH],[40,E.SWORDS_DANCE],[44,E.SUBMISSION],[48,E.GUILLOTINE],[52,E.SUPERPOWER]],[A.TAUROS]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.WORK_UP],[10,E.PAYBACK],[15,E.ASSURANCE],[20,E.HORN_ATTACK],[25,E.SCARY_FACE],[30,E.ZEN_HEADBUTT],[35,E.RAGING_BULL],[40,E.REST],[45,E.SWAGGER],[50,E.THRASH],[55,E.DOUBLE_EDGE],[60,E.GIGA_IMPACT]],[A.MAGIKARP]:[[1,E.SPLASH],[15,E.TACKLE],[25,E.FLAIL]],[A.GYARADOS]:[[b,E.BITE],[1,E.TACKLE],[1,E.LEER],[1,E.SPLASH],[1,E.FLAIL],[1,E.TWISTER],[4,E.WHIRLPOOL],[8,E.ICE_FANG],[12,E.BRINE],[16,E.SCARY_FACE],[21,E.WATERFALL],[24,E.CRUNCH],[28,E.RAIN_DANCE],[32,E.AQUA_TAIL],[36,E.DRAGON_DANCE],[40,E.HYDRO_PUMP],[44,E.HURRICANE],[48,E.THRASH],[52,E.HYPER_BEAM]],[A.LAPRAS]:[[1,E.GROWL],[1,E.WATER_GUN],[5,E.SING],[10,E.MIST],[15,E.LIFE_DEW],[20,E.ICE_SHARD],[25,E.CONFUSE_RAY],[30,E.WATER_PULSE],[35,E.BRINE],[40,E.BODY_SLAM],[45,E.ICE_BEAM],[50,E.RAIN_DANCE],[55,E.HYDRO_PUMP],[60,E.PERISH_SONG],[65,E.SHEER_COLD]],[A.DITTO]:[[1,E.TRANSFORM]],[A.EEVEE]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.HELPING_HAND],[1,E.COVET],[5,E.SAND_ATTACK],[10,E.QUICK_ATTACK],[15,E.BABY_DOLL_EYES],[20,E.SWIFT],[25,E.BITE],[30,E.COPYCAT],[35,E.BATON_PASS],[40,E.TAKE_DOWN],[45,E.CHARM],[50,E.DOUBLE_EDGE],[55,E.LAST_RESORT],[60,E.VEEVEE_VOLLEY]],[A.VAPOREON]:[[b,E.BOUNCY_BUBBLE],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.GROWL],[1,E.SWIFT],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[5,E.SAND_ATTACK],[10,E.WATER_GUN],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.HAZE],[30,E.WATER_PULSE],[35,E.AURORA_BEAM],[40,E.AQUA_RING],[45,E.MUDDY_WATER],[50,E.ACID_ARMOR],[55,E.HYDRO_PUMP],[60,E.LAST_RESORT]],[A.JOLTEON]:[[b,E.BUZZY_BUZZ],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.GROWL],[1,E.SWIFT],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[5,E.SAND_ATTACK],[10,E.THUNDER_SHOCK],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.THUNDER_WAVE],[30,E.DOUBLE_KICK],[35,E.THUNDER_FANG],[40,E.PIN_MISSILE],[45,E.DISCHARGE],[50,E.AGILITY],[55,E.THUNDER],[60,E.LAST_RESORT]],[A.FLAREON]:[[b,E.SIZZLY_SLIDE],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.SWIFT],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[5,E.SAND_ATTACK],[10,E.EMBER],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.SMOG],[30,E.BITE],[35,E.FIRE_FANG],[40,E.FIRE_SPIN],[45,E.LAVA_PLUME],[50,E.SCARY_FACE],[55,E.FLARE_BLITZ],[60,E.LAST_RESORT]],[A.PORYGON]:[[1,E.TACKLE],[1,E.CONVERSION],[5,E.RECYCLE],[10,E.MAGNET_RISE],[15,E.THUNDER_SHOCK],[20,E.PSYBEAM],[25,E.CONVERSION_2],[30,E.AGILITY],[35,E.RECOVER],[40,E.DISCHARGE],[45,E.TRI_ATTACK],[50,E.MAGIC_COAT],[55,E.LOCK_ON],[60,E.ZAP_CANNON]],[A.OMANYTE]:[[1,E.BIND],[1,E.WITHDRAW],[1,E.CONSTRICT],[5,E.ROLLOUT],[10,E.SAND_ATTACK],[15,E.WATER_GUN],[20,E.LEER],[25,E.MUD_SHOT],[30,E.ANCIENT_POWER],[35,E.BRINE],[41,E.PROTECT],[45,E.ROCK_BLAST],[50,E.SURF],[55,E.SHELL_SMASH],[60,E.HYDRO_PUMP]],[A.OMASTAR]:[[b,E.CRUNCH],[1,E.BIND],[1,E.SAND_ATTACK],[1,E.CONSTRICT],[1,E.SPIKE_CANNON],[1,E.WITHDRAW],[1,E.ROLLOUT],[15,E.WATER_GUN],[20,E.LEER],[25,E.MUD_SHOT],[30,E.ANCIENT_POWER],[35,E.BRINE],[43,E.PROTECT],[49,E.ROCK_BLAST],[56,E.SURF],[63,E.SHELL_SMASH],[70,E.HYDRO_PUMP]],[A.KABUTO]:[[1,E.ABSORB],[1,E.HARDEN],[5,E.SCRATCH],[10,E.SAND_ATTACK],[15,E.AQUA_JET],[20,E.LEER],[25,E.MUD_SHOT],[30,E.ANCIENT_POWER],[35,E.BRINE],[41,E.PROTECT],[45,E.LEECH_LIFE],[50,E.LIQUIDATION],[55,E.METAL_SOUND],[60,E.STONE_EDGE]],[A.KABUTOPS]:[[b,E.SLASH],[1,E.SCRATCH],[1,E.SAND_ATTACK],[1,E.ABSORB],[1,E.HARDEN],[1,E.FEINT],[1,E.NIGHT_SLASH],[15,E.AQUA_JET],[20,E.LEER],[25,E.MUD_SHOT],[30,E.ANCIENT_POWER],[35,E.BRINE],[43,E.PROTECT],[49,E.LEECH_LIFE],[56,E.LIQUIDATION],[63,E.METAL_SOUND],[70,E.STONE_EDGE]],[A.AERODACTYL]:[[1,E.BITE],[1,E.ANCIENT_POWER],[5,E.SUPERSONIC],[10,E.WING_ATTACK],[15,E.SCARY_FACE],[20,E.ROCK_SLIDE],[25,E.ROAR],[30,E.CRUNCH],[35,E.IRON_HEAD],[40,E.TAKE_DOWN],[45,E.STONE_EDGE],[50,E.AGILITY],[55,E.HYPER_BEAM],[60,E.GIGA_IMPACT]],[A.SNORLAX]:[[1,E.TACKLE],[1,E.SCREECH],[1,E.ODOR_SLEUTH],[1,E.DEFENSE_CURL],[1,E.METRONOME],[1,E.LICK],[1,E.FLAIL],[1,E.STOCKPILE],[1,E.SWALLOW],[1,E.RECYCLE],[1,E.BLOCK],[1,E.COVET],[1,E.FLING],[1,E.LAST_RESORT],[12,E.YAWN],[16,E.BITE],[20,E.REST],[20,E.SNORE],[20,E.SLEEP_TALK],[24,E.CRUNCH],[28,E.BODY_SLAM],[32,E.HEAVY_SLAM],[36,E.AMNESIA],[40,E.HIGH_HORSEPOWER],[44,E.HAMMER_ARM],[48,E.BELLY_DRUM],[52,E.BELCH],[56,E.GIGA_IMPACT]],[A.ARTICUNO]:[[1,E.GUST],[1,E.MIST],[5,E.POWDER_SNOW],[10,E.REFLECT],[15,E.ICE_SHARD],[20,E.AGILITY],[25,E.ANCIENT_POWER],[30,E.TAILWIND],[35,E.FREEZE_DRY],[40,E.ROOST],[45,E.ICE_BEAM],[50,E.SNOWSCAPE],[55,E.HURRICANE],[60,E.HAZE],[65,E.BLIZZARD],[70,E.SHEER_COLD]],[A.ZAPDOS]:[[1,E.PECK],[1,E.THUNDER_WAVE],[5,E.THUNDER_SHOCK],[10,E.LIGHT_SCREEN],[15,E.PLUCK],[20,E.AGILITY],[25,E.ANCIENT_POWER],[30,E.CHARGE],[35,E.DRILL_PECK],[40,E.ROOST],[45,E.DISCHARGE],[50,E.RAIN_DANCE],[55,E.THUNDER],[60,E.DETECT],[65,E.MAGNETIC_FLUX],[70,E.ZAP_CANNON]],[A.MOLTRES]:[[1,E.GUST],[1,E.LEER],[5,E.EMBER],[10,E.SAFEGUARD],[15,E.WING_ATTACK],[20,E.AGILITY],[25,E.ANCIENT_POWER],[30,E.INCINERATE],[35,E.AIR_SLASH],[40,E.ROOST],[45,E.HEAT_WAVE],[50,E.SUNNY_DAY],[55,E.HURRICANE],[60,E.ENDURE],[65,E.OVERHEAT],[70,E.SKY_ATTACK]],[A.DRATINI]:[[1,E.WRAP],[1,E.LEER],[5,E.TWISTER],[10,E.THUNDER_WAVE],[15,E.DRAGON_TAIL],[20,E.AGILITY],[25,E.SLAM],[31,E.AQUA_TAIL],[35,E.DRAGON_RUSH],[40,E.SAFEGUARD],[45,E.RAIN_DANCE],[50,E.DRAGON_DANCE],[55,E.OUTRAGE],[60,E.HYPER_BEAM]],[A.DRAGONAIR]:[[1,E.WRAP],[1,E.LEER],[1,E.THUNDER_WAVE],[1,E.TWISTER],[15,E.DRAGON_TAIL],[20,E.AGILITY],[25,E.SLAM],[33,E.AQUA_TAIL],[39,E.DRAGON_RUSH],[46,E.SAFEGUARD],[53,E.RAIN_DANCE],[60,E.DRAGON_DANCE],[67,E.OUTRAGE],[74,E.HYPER_BEAM]],[A.DRAGONITE]:[[b,E.HURRICANE],[1,E.FIRE_PUNCH],[1,E.THUNDER_PUNCH],[1,E.WING_ATTACK],[1,E.WRAP],[1,E.LEER],[1,E.THUNDER_WAVE],[1,E.TWISTER],[1,E.EXTREME_SPEED],[1,E.ROOST],[15,E.DRAGON_TAIL],[20,E.AGILITY],[25,E.SLAM],[33,E.AQUA_TAIL],[39,E.DRAGON_RUSH],[41,E.OUTRAGE],[46,E.SAFEGUARD],[53,E.RAIN_DANCE],[62,E.DRAGON_DANCE],[80,E.HYPER_BEAM]],[A.MEWTWO]:[[1,E.DISABLE],[1,E.CONFUSION],[1,E.SWIFT],[1,E.LIFE_DEW],[8,E.ANCIENT_POWER],[16,E.PSYCHO_CUT],[24,E.SAFEGUARD],[32,E.AMNESIA],[40,E.AURA_SPHERE],[48,E.PSYCHIC],[56,E.POWER_SWAP],[56,E.GUARD_SWAP],[64,E.MIST],[72,E.PSYSTRIKE],[80,E.RECOVER],[88,E.FUTURE_SIGHT]],[A.MEW]:[[1,E.POUND],[1,E.REFLECT_TYPE],[10,E.AMNESIA],[20,E.BATON_PASS],[30,E.ANCIENT_POWER],[40,E.LIFE_DEW],[50,E.NASTY_PLOT],[60,E.METRONOME],[70,E.IMPRISON],[80,E.TRANSFORM],[90,E.AURA_SPHERE],[100,E.PSYCHIC]],[A.CHIKORITA]:[[1,E.TACKLE],[1,E.GROWL],[5,E.RAZOR_LEAF],[9,E.POISON_POWDER],[12,E.SYNTHESIS],[17,E.REFLECT],[20,E.MAGICAL_LEAF],[23,E.LEECH_SEED],[28,E.SWEET_SCENT],[31,E.LIGHT_SCREEN],[34,E.BODY_SLAM],[39,E.SAFEGUARD],[42,E.GIGA_DRAIN],[45,E.SOLAR_BEAM]],[A.BAYLEEF]:[[1,E.TACKLE],[1,E.GROWL],[1,E.RAZOR_LEAF],[1,E.POISON_POWDER],[12,E.SYNTHESIS],[18,E.REFLECT],[22,E.MAGICAL_LEAF],[26,E.LEECH_SEED],[32,E.SWEET_SCENT],[36,E.LIGHT_SCREEN],[40,E.BODY_SLAM],[46,E.SAFEGUARD],[50,E.GIGA_DRAIN],[54,E.SOLAR_BEAM]],[A.MEGANIUM]:[[b,E.PETAL_DANCE],[1,E.TACKLE],[1,E.GROWL],[1,E.RAZOR_LEAF],[1,E.POISON_POWDER],[1,E.PETAL_BLIZZARD],[12,E.SYNTHESIS],[18,E.REFLECT],[22,E.MAGICAL_LEAF],[26,E.LEECH_SEED],[34,E.SWEET_SCENT],[40,E.LIGHT_SCREEN],[46,E.BODY_SLAM],[54,E.SAFEGUARD],[60,E.GIGA_DRAIN],[65,E.SOLAR_BEAM]],[A.CYNDAQUIL]:[[1,E.TACKLE],[1,E.LEER],[5,E.EMBER],[10,E.SMOKESCREEN],[13,E.QUICK_ATTACK],[19,E.FLAME_WHEEL],[22,E.DEFENSE_CURL],[28,E.FLAME_CHARGE],[31,E.SWIFT],[37,E.LAVA_PLUME],[40,E.FLAMETHROWER],[46,E.INFERNO],[49,E.ROLLOUT],[55,E.DOUBLE_EDGE],[58,E.OVERHEAT],[64,E.ERUPTION]],[A.QUILAVA]:[[1,E.TACKLE],[1,E.LEER],[1,E.SMOKESCREEN],[10,E.EMBER],[13,E.QUICK_ATTACK],[20,E.FLAME_WHEEL],[24,E.DEFENSE_CURL],[31,E.SWIFT],[35,E.FLAME_CHARGE],[42,E.LAVA_PLUME],[46,E.FLAMETHROWER],[53,E.INFERNO],[57,E.ROLLOUT],[64,E.DOUBLE_EDGE],[68,E.OVERHEAT],[75,E.ERUPTION]],[A.TYPHLOSION]:[[1,E.TACKLE],[1,E.DOUBLE_EDGE],[1,E.LEER],[1,E.EMBER],[1,E.SMOKESCREEN],[1,E.ERUPTION],[1,E.GYRO_BALL],[13,E.QUICK_ATTACK],[20,E.FLAME_WHEEL],[24,E.DEFENSE_CURL],[31,E.SWIFT],[35,E.FLAME_CHARGE],[43,E.LAVA_PLUME],[48,E.FLAMETHROWER],[56,E.INFERNO],[61,E.ROLLOUT],[74,E.OVERHEAT]],[A.TOTODILE]:[[1,E.SCRATCH],[1,E.LEER],[5,E.WATER_GUN],[9,E.BITE],[13,E.SCARY_FACE],[19,E.ICE_FANG],[22,E.FLAIL],[27,E.CRUNCH],[30,E.SLASH],[33,E.SCREECH],[37,E.THRASH],[41,E.AQUA_TAIL],[45,E.SUPERPOWER],[50,E.HYDRO_PUMP]],[A.CROCONAW]:[[1,E.SCRATCH],[1,E.LEER],[1,E.WATER_GUN],[13,E.BITE],[15,E.SCARY_FACE],[21,E.ICE_FANG],[24,E.FLAIL],[30,E.CRUNCH],[34,E.SLASH],[37,E.SCREECH],[42,E.THRASH],[47,E.AQUA_TAIL],[50,E.SUPERPOWER],[55,E.HYDRO_PUMP]],[A.FERALIGATR]:[[1,E.AGILITY],[1,E.SCRATCH],[1,E.LEER],[1,E.WATER_GUN],[13,E.BITE],[15,E.SCARY_FACE],[21,E.ICE_FANG],[24,E.FLAIL],[32,E.CRUNCH],[37,E.SLASH],[44,E.SCREECH],[51,E.THRASH],[59,E.AQUA_TAIL],[65,E.SUPERPOWER],[70,E.HYDRO_PUMP]],[A.SENTRET]:[[1,E.SCRATCH],[4,E.DEFENSE_CURL],[7,E.QUICK_ATTACK],[13,E.FURY_SWIPES],[16,E.HELPING_HAND],[19,E.FOLLOW_ME],[25,E.SLAM],[28,E.REST],[31,E.SUCKER_PUNCH],[36,E.AMNESIA],[39,E.BATON_PASS],[42,E.DOUBLE_EDGE],[47,E.HYPER_VOICE]],[A.FURRET]:[[b,E.AGILITY],[1,E.SCRATCH],[1,E.QUICK_ATTACK],[1,E.DEFENSE_CURL],[1,E.COIL],[13,E.FURY_SWIPES],[17,E.HELPING_HAND],[21,E.FOLLOW_ME],[28,E.SLAM],[32,E.REST],[36,E.SUCKER_PUNCH],[42,E.AMNESIA],[46,E.BATON_PASS],[50,E.DOUBLE_EDGE],[56,E.HYPER_VOICE]],[A.HOOTHOOT]:[[1,E.GROWL],[1,E.PECK],[3,E.TACKLE],[6,E.ECHOED_VOICE],[9,E.CONFUSION],[12,E.REFLECT],[15,E.DEFOG],[18,E.AIR_SLASH],[21,E.EXTRASENSORY],[24,E.TAKE_DOWN],[27,E.UPROAR],[30,E.ROOST],[33,E.MOONBLAST],[36,E.HYPNOSIS],[39,E.DREAM_EATER]],[A.NOCTOWL]:[[1,E.TACKLE],[1,E.GROWL],[1,E.PECK],[1,E.SKY_ATTACK],[1,E.ECHOED_VOICE],[9,E.CONFUSION],[12,E.REFLECT],[15,E.DEFOG],[18,E.AIR_SLASH],[23,E.EXTRASENSORY],[28,E.TAKE_DOWN],[33,E.UPROAR],[38,E.ROOST],[43,E.MOONBLAST],[48,E.HYPNOSIS],[53,E.DREAM_EATER]],[A.LEDYBA]:[[1,E.TACKLE],[5,E.SUPERSONIC],[8,E.SWIFT],[12,E.LIGHT_SCREEN],[12,E.REFLECT],[12,E.SAFEGUARD],[15,E.MACH_PUNCH],[19,E.ROOST],[22,E.STRUGGLE_BUG],[26,E.BATON_PASS],[29,E.AGILITY],[33,E.BUG_BUZZ],[36,E.AIR_SLASH],[40,E.DOUBLE_EDGE]],[A.LEDIAN]:[[1,E.TACKLE],[1,E.SUPERSONIC],[1,E.SWIFT],[5,E.SUPERSONIC],[12,E.LIGHT_SCREEN],[12,E.REFLECT],[12,E.SAFEGUARD],[15,E.MACH_PUNCH],[20,E.ROOST],[24,E.STRUGGLE_BUG],[29,E.BATON_PASS],[33,E.AGILITY],[38,E.BUG_BUZZ],[42,E.AIR_SLASH],[47,E.DOUBLE_EDGE]],[A.SPINARAK]:[[1,E.POISON_STING],[1,E.STRING_SHOT],[1,E.CONSTRICT],[5,E.ABSORB],[8,E.INFESTATION],[12,E.SCARY_FACE],[15,E.NIGHT_SHADE],[19,E.SHADOW_SNEAK],[22,E.FURY_SWIPES],[26,E.SUCKER_PUNCH],[29,E.AGILITY],[33,E.PIN_MISSILE],[36,E.PSYCHIC],[40,E.POISON_JAB],[44,E.CROSS_POISON],[47,E.STICKY_WEB],[51,E.TOXIC_THREAD]],[A.ARIADOS]:[[b,E.SWORDS_DANCE],[1,E.POISON_STING],[1,E.ABSORB],[1,E.STRING_SHOT],[1,E.CONSTRICT],[1,E.FOCUS_ENERGY],[1,E.BUG_BITE],[1,E.FELL_STINGER],[8,E.INFESTATION],[12,E.SCARY_FACE],[15,E.NIGHT_SHADE],[19,E.SHADOW_SNEAK],[23,E.FURY_SWIPES],[28,E.SUCKER_PUNCH],[31,E.AGILITY],[35,E.PIN_MISSILE],[41,E.PSYCHIC],[46,E.POISON_JAB],[50,E.CROSS_POISON],[54,E.STICKY_WEB],[59,E.TOXIC_THREAD]],[A.CROBAT]:[[b,E.CROSS_POISON],[1,E.SUPERSONIC],[1,E.ABSORB],[1,E.TOXIC],[1,E.SCREECH],[1,E.MEAN_LOOK],[1,E.ASTONISH],[1,E.TAILWIND],[15,E.POISON_FANG],[20,E.QUICK_GUARD],[27,E.AIR_CUTTER],[34,E.BITE],[41,E.HAZE],[48,E.VENOSHOCK],[55,E.CONFUSE_RAY],[62,E.AIR_SLASH],[69,E.LEECH_LIFE]],[A.CHINCHOU]:[[1,E.SUPERSONIC],[1,E.WATER_GUN],[4,E.ELECTRO_BALL],[8,E.THUNDER_WAVE],[12,E.BUBBLE_BEAM],[16,E.CONFUSE_RAY],[20,E.SPARK],[24,E.CHARGE],[28,E.DISCHARGE],[32,E.AQUA_RING],[36,E.FLAIL],[40,E.TAKE_DOWN],[44,E.HYDRO_PUMP]],[A.LANTURN]:[[b,E.STOCKPILE],[b,E.SPIT_UP],[b,E.SWALLOW],[1,E.SUPERSONIC],[1,E.WATER_GUN],[1,E.SPOTLIGHT],[1,E.THUNDER_WAVE],[1,E.ELECTRO_BALL],[1,E.EERIE_IMPULSE],[12,E.BUBBLE_BEAM],[16,E.CONFUSE_RAY],[20,E.SPARK],[24,E.CHARGE],[30,E.DISCHARGE],[36,E.AQUA_RING],[42,E.FLAIL],[48,E.TAKE_DOWN],[54,E.HYDRO_PUMP]],[A.PICHU]:[[1,E.TAIL_WHIP],[1,E.THUNDER_SHOCK],[4,E.PLAY_NICE],[8,E.SWEET_KISS],[12,E.NUZZLE],[16,E.NASTY_PLOT],[20,E.CHARM]],[A.CLEFFA]:[[1,E.POUND],[1,E.SPLASH],[1,E.COPYCAT],[4,E.SING],[8,E.SWEET_KISS],[12,E.DISARMING_VOICE],[16,E.ENCORE],[20,E.CHARM]],[A.IGGLYBUFF]:[[1,E.POUND],[1,E.SING],[1,E.COPYCAT],[4,E.DEFENSE_CURL],[8,E.SWEET_KISS],[12,E.DISARMING_VOICE],[16,E.DISABLE],[20,E.CHARM]],[A.TOGEPI]:[[1,E.POUND],[1,E.GROWL],[4,E.SWEET_KISS],[8,E.LIFE_DEW],[12,E.CHARM],[16,E.ANCIENT_POWER],[20,E.YAWN],[24,E.METRONOME],[28,E.AFTER_YOU],[32,E.DOUBLE_EDGE],[36,E.SAFEGUARD],[40,E.FOLLOW_ME],[44,E.BATON_PASS],[48,E.LAST_RESORT],[52,E.WISH]],[A.TOGETIC]:[[b,E.FAIRY_WIND],[1,E.POUND],[1,E.GROWL],[1,E.SWEET_KISS],[1,E.LIFE_DEW],[12,E.CHARM],[16,E.ANCIENT_POWER],[20,E.YAWN],[24,E.METRONOME],[28,E.AFTER_YOU],[32,E.DOUBLE_EDGE],[36,E.SAFEGUARD],[40,E.FOLLOW_ME],[44,E.BATON_PASS],[48,E.LAST_RESORT],[52,E.WISH]],[A.NATU]:[[1,E.LEER],[1,E.PECK],[5,E.STORED_POWER],[10,E.TELEPORT],[15,E.CONFUSE_RAY],[20,E.NIGHT_SHADE],[26,E.PSYCHO_SHIFT],[30,E.POWER_SWAP],[35,E.PSYCHIC],[35,E.GUARD_SWAP],[40,E.WISH],[45,E.FUTURE_SIGHT]],[A.XATU]:[[b,E.AIR_SLASH],[1,E.LEER],[1,E.PECK],[1,E.TELEPORT],[1,E.TAILWIND],[1,E.STORED_POWER],[15,E.CONFUSE_RAY],[20,E.NIGHT_SHADE],[28,E.PSYCHO_SHIFT],[34,E.POWER_SWAP],[34,E.GUARD_SWAP],[41,E.PSYCHIC],[48,E.WISH],[55,E.FUTURE_SIGHT]],[A.MAREEP]:[[1,E.TACKLE],[1,E.GROWL],[4,E.THUNDER_WAVE],[8,E.THUNDER_SHOCK],[11,E.COTTON_SPORE],[15,E.CHARGE],[18,E.TAKE_DOWN],[22,E.ELECTRO_BALL],[25,E.CONFUSE_RAY],[29,E.POWER_GEM],[32,E.DISCHARGE],[36,E.COTTON_GUARD],[39,E.DAZZLING_GLEAM],[43,E.LIGHT_SCREEN],[46,E.THUNDER]],[A.FLAAFFY]:[[1,E.TACKLE],[1,E.GROWL],[6,E.THUNDER_SHOCK],[9,E.THUNDER_WAVE],[11,E.COTTON_SPORE],[16,E.CHARGE],[20,E.TAKE_DOWN],[25,E.ELECTRO_BALL],[29,E.CONFUSE_RAY],[34,E.POWER_GEM],[38,E.DISCHARGE],[43,E.COTTON_GUARD],[47,E.DAZZLING_GLEAM],[52,E.LIGHT_SCREEN],[56,E.THUNDER]],[A.AMPHAROS]:[[b,E.THUNDER_PUNCH],[1,E.FIRE_PUNCH],[1,E.TACKLE],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.THUNDER_WAVE],[1,E.ZAP_CANNON],[1,E.DRAGON_PULSE],[1,E.MAGNETIC_FLUX],[1,E.ION_DELUGE],[11,E.COTTON_SPORE],[16,E.CHARGE],[20,E.TAKE_DOWN],[25,E.ELECTRO_BALL],[29,E.CONFUSE_RAY],[35,E.POWER_GEM],[40,E.DISCHARGE],[46,E.COTTON_GUARD],[51,E.DAZZLING_GLEAM],[57,E.LIGHT_SCREEN],[62,E.THUNDER]],[A.BELLOSSOM]:[[b,E.PETAL_BLIZZARD],[1,E.ACID],[1,E.ABSORB],[1,E.MEGA_DRAIN],[1,E.GROWTH],[1,E.POISON_POWDER],[1,E.STUN_SPORE],[1,E.SLEEP_POWDER],[1,E.PETAL_DANCE],[1,E.TOXIC],[1,E.GIGA_DRAIN],[1,E.SWEET_SCENT],[1,E.MOONLIGHT],[1,E.QUIVER_DANCE],[1,E.GRASSY_TERRAIN],[1,E.MOONBLAST]],[A.MARILL]:[[1,E.SPLASH],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.DEFENSE_CURL],[1,E.ROLLOUT],[1,E.HELPING_HAND],[6,E.BUBBLE_BEAM],[9,E.CHARM],[12,E.SLAM],[15,E.BOUNCE],[19,E.AQUA_TAIL],[21,E.PLAY_ROUGH],[24,E.AQUA_RING],[27,E.RAIN_DANCE],[30,E.HYDRO_PUMP],[33,E.DOUBLE_EDGE],[36,E.SUPERPOWER]],[A.AZUMARILL]:[[1,E.SPLASH],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.DEFENSE_CURL],[1,E.ROLLOUT],[1,E.HELPING_HAND],[6,E.BUBBLE_BEAM],[9,E.CHARM],[12,E.SLAM],[15,E.BOUNCE],[21,E.AQUA_TAIL],[25,E.PLAY_ROUGH],[30,E.AQUA_RING],[35,E.RAIN_DANCE],[40,E.HYDRO_PUMP],[45,E.DOUBLE_EDGE],[50,E.SUPERPOWER]],[A.SUDOWOODO]:[[b,E.SLAM],[1,E.ROCK_THROW],[1,E.TACKLE],[1,E.FLAIL],[1,E.FAKE_TEARS],[1,E.HAMMER_ARM],[1,E.COPYCAT],[1,E.STONE_EDGE],[1,E.WOOD_HAMMER],[12,E.BLOCK],[16,E.MIMIC],[20,E.ROCK_TOMB],[24,E.TEARFUL_LOOK],[28,E.SUCKER_PUNCH],[32,E.ROCK_SLIDE],[36,E.LOW_KICK],[40,E.COUNTER],[44,E.DOUBLE_EDGE],[48,E.HEAD_SMASH]],[A.POLITOED]:[[b,E.BOUNCE],[V,E.BODY_SLAM],[V,E.DOUBLE_EDGE],[V,E.WATER_GUN],[V,E.BUBBLE_BEAM],[V,E.HYPNOSIS],[V,E.PERISH_SONG],[V,E.SWAGGER],[V,E.HYPER_VOICE],[V,E.MUD_SHOT],[V,E.EARTH_POWER],[1,E.RAIN_DANCE],[1,E.HYDRO_PUMP],[1,E.BELLY_DRUM],[1,E.POUND],[1,E.WATER_SPORT]],[A.HOPPIP]:[[1,E.TACKLE],[1,E.SPLASH],[4,E.TAIL_WHIP],[6,E.ABSORB],[8,E.FAIRY_WIND],[10,E.POISON_POWDER],[10,E.STUN_SPORE],[10,E.SLEEP_POWDER],[12,E.BULLET_SEED],[15,E.SYNTHESIS],[19,E.LEECH_SEED],[22,E.MEGA_DRAIN],[24,E.ACROBATICS],[27,E.COTTON_SPORE],[29,E.U_TURN],[32,E.GIGA_DRAIN],[35,E.BOUNCE],[38,E.MEMENTO]],[A.SKIPLOOM]:[[1,E.TAIL_WHIP],[1,E.ABSORB],[1,E.SPLASH],[1,E.SYNTHESIS],[8,E.TACKLE],[10,E.FAIRY_WIND],[12,E.POISON_POWDER],[12,E.STUN_SPORE],[12,E.SLEEP_POWDER],[15,E.BULLET_SEED],[20,E.LEECH_SEED],[24,E.MEGA_DRAIN],[28,E.ACROBATICS],[31,E.COTTON_SPORE],[34,E.U_TURN],[37,E.GIGA_DRAIN],[41,E.BOUNCE],[44,E.MEMENTO]],[A.JUMPLUFF]:[[1,E.TAIL_WHIP],[1,E.ABSORB],[1,E.SPLASH],[1,E.SYNTHESIS],[8,E.TACKLE],[10,E.FAIRY_WIND],[12,E.POISON_POWDER],[12,E.STUN_SPORE],[12,E.SLEEP_POWDER],[15,E.BULLET_SEED],[20,E.LEECH_SEED],[24,E.MEGA_DRAIN],[30,E.ACROBATICS],[35,E.COTTON_SPORE],[39,E.U_TURN],[43,E.GIGA_DRAIN],[49,E.BOUNCE],[55,E.MEMENTO]],[A.AIPOM]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[4,E.SAND_ATTACK],[8,E.ASTONISH],[11,E.BATON_PASS],[15,E.TICKLE],[18,E.FURY_SWIPES],[22,E.SWIFT],[25,E.SCREECH],[29,E.AGILITY],[32,E.DOUBLE_HIT],[36,E.FLING],[39,E.NASTY_PLOT],[43,E.LAST_RESORT]],[A.SUNKERN]:[[1,E.TACKLE],[1,E.GROWTH],[7,E.ABSORB],[10,E.MEGA_DRAIN],[16,E.RAZOR_LEAF],[19,E.WORRY_SEED],[22,E.GIGA_DRAIN],[25,E.ENDEAVOR],[28,E.SYNTHESIS],[31,E.SOLAR_BEAM],[34,E.DOUBLE_EDGE],[36,E.SUNNY_DAY],[39,E.SEED_BOMB]],[A.SUNFLORA]:[[V,E.SEED_BOMB],[1,E.POUND],[1,E.TACKLE],[1,E.GROWTH],[1,E.ENDEAVOR],[1,E.SYNTHESIS],[4,E.INGRAIN],[7,E.ABSORB],[10,E.MEGA_DRAIN],[13,E.LEECH_SEED],[16,E.RAZOR_LEAF],[19,E.WORRY_SEED],[22,E.GIGA_DRAIN],[25,E.BULLET_SEED],[28,E.PETAL_DANCE],[31,E.SOLAR_BEAM],[34,E.DOUBLE_EDGE],[39,E.SUNNY_DAY],[43,E.LEAF_STORM],[50,E.PETAL_BLIZZARD]],[A.YANMA]:[[1,E.TACKLE],[6,E.QUICK_ATTACK],[11,E.DOUBLE_TEAM],[14,E.AIR_CUTTER],[17,E.DETECT],[22,E.SUPERSONIC],[27,E.UPROAR],[30,E.BUG_BITE],[33,E.ANCIENT_POWER],[38,E.HYPNOSIS],[43,E.WING_ATTACK],[46,E.SCREECH],[49,E.U_TURN],[54,E.AIR_SLASH],[57,E.BUG_BUZZ]],[A.WOOPER]:[[1,E.TAIL_WHIP],[1,E.WATER_GUN],[4,E.RAIN_DANCE],[8,E.MUD_SHOT],[12,E.MIST],[12,E.HAZE],[16,E.SLAM],[21,E.YAWN],[24,E.AQUA_TAIL],[28,E.MUDDY_WATER],[32,E.AMNESIA],[36,E.TOXIC],[40,E.EARTHQUAKE]],[A.QUAGSIRE]:[[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.RAIN_DANCE],[1,E.MUD_SHOT],[12,E.MIST],[12,E.HAZE],[16,E.SLAM],[23,E.YAWN],[28,E.AQUA_TAIL],[34,E.MUDDY_WATER],[40,E.AMNESIA],[46,E.TOXIC],[52,E.EARTHQUAKE]],[A.ESPEON]:[[b,E.GLITZY_GLOW],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.GROWL],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[5,E.SAND_ATTACK],[10,E.CONFUSION],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.SWIFT],[30,E.PSYBEAM],[35,E.MORNING_SUN],[40,E.POWER_SWAP],[45,E.PSYCHIC],[50,E.PSYCH_UP],[55,E.FUTURE_SIGHT],[60,E.LAST_RESORT]],[A.UMBREON]:[[b,E.BADDY_BAD],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.GROWL],[1,E.SWIFT],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[1,E.PURSUIT],[5,E.SAND_ATTACK],[10,E.SNARL],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.CONFUSE_RAY],[30,E.ASSURANCE],[35,E.MOONLIGHT],[40,E.GUARD_SWAP],[45,E.DARK_PULSE],[50,E.SCREECH],[55,E.MEAN_LOOK],[60,E.LAST_RESORT]],[A.MURKROW]:[[1,E.PECK],[1,E.ASTONISH],[5,E.GUST],[11,E.HAZE],[15,E.WING_ATTACK],[21,E.NIGHT_SHADE],[25,E.ASSURANCE],[31,E.TAUNT],[35,E.MEAN_LOOK],[40,E.FOUL_PLAY],[50,E.SUCKER_PUNCH],[55,E.TORMENT],[60,E.QUASH]],[A.SLOWKING]:[[V,E.FUTURE_SIGHT],[V,E.CHILLY_RECEPTION],[1,E.POWER_GEM],[1,E.NASTY_PLOT],[1,E.SWAGGER],[1,E.TACKLE],[1,E.CURSE],[1,E.GROWL],[1,E.WATER_GUN],[9,E.YAWN],[12,E.CONFUSION],[15,E.DISABLE],[18,E.WATER_PULSE],[21,E.HEADBUTT],[24,E.ZEN_HEADBUTT],[27,E.AMNESIA],[30,E.SURF],[33,E.SLACK_OFF],[36,E.PSYCHIC],[39,E.PSYCH_UP],[42,E.RAIN_DANCE],[45,E.HEAL_PULSE]],[A.MISDREAVUS]:[[1,E.GROWL],[1,E.CONFUSION],[1,E.PSYWAVE],[10,E.ASTONISH],[14,E.CONFUSE_RAY],[19,E.MEAN_LOOK],[23,E.HEX],[28,E.PSYBEAM],[32,E.PAIN_SPLIT],[37,E.PAYBACK],[41,E.SHADOW_BALL],[46,E.PERISH_SONG],[50,E.POWER_GEM]],[A.UNOWN]:[[1,E.HIDDEN_POWER]],[A.WOBBUFFET]:[[b,E.COUNTER],[b,E.DESTINY_BOND],[b,E.SAFEGUARD],[b,E.MIRROR_COAT],[1,E.COUNTER],[1,E.DESTINY_BOND],[1,E.SAFEGUARD],[1,E.MIRROR_COAT],[1,E.AMNESIA],[1,E.SPLASH],[1,E.CHARM],[1,E.ENCORE]],[A.GIRAFARIG]:[[1,E.TACKLE],[1,E.GROWL],[1,E.ASTONISH],[1,E.POWER_SWAP],[1,E.GUARD_SWAP],[5,E.CONFUSION],[10,E.ASSURANCE],[14,E.STOMP],[19,E.PSYBEAM],[23,E.AGILITY],[28,E.DOUBLE_HIT],[32,E.TWIN_BEAM],[37,E.CRUNCH],[41,E.BATON_PASS],[46,E.NASTY_PLOT],[50,E.PSYCHIC]],[A.PINECO]:[[1,E.TACKLE],[1,E.PROTECT],[6,E.SELF_DESTRUCT],[9,E.BUG_BITE],[12,E.TAKE_DOWN],[17,E.RAPID_SPIN],[20,E.ROLLOUT],[23,E.CURSE],[28,E.SPIKES],[31,E.PAYBACK],[34,E.EXPLOSION],[39,E.IRON_DEFENSE],[42,E.GYRO_BALL],[45,E.DOUBLE_EDGE]],[A.FORRETRESS]:[[b,E.HEAVY_SLAM],[1,E.TACKLE],[1,E.SELF_DESTRUCT],[1,E.PROTECT],[1,E.ZAP_CANNON],[1,E.TOXIC_SPIKES],[1,E.MAGNET_RISE],[1,E.BUG_BITE],[1,E.MIRROR_SHOT],[12,E.TAKE_DOWN],[17,E.RAPID_SPIN],[20,E.ROLLOUT],[23,E.CURSE],[28,E.SPIKES],[32,E.PAYBACK],[36,E.EXPLOSION],[42,E.IRON_DEFENSE],[46,E.GYRO_BALL],[50,E.DOUBLE_EDGE]],[A.DUNSPARCE]:[[1,E.DEFENSE_CURL],[1,E.FLAIL],[1,E.TACKLE],[4,E.MUD_SLAP],[8,E.ROLLOUT],[12,E.GLARE],[16,E.SCREECH],[20,E.ANCIENT_POWER],[24,E.DRILL_RUN],[28,E.YAWN],[32,E.HYPER_DRILL],[36,E.ROOST],[40,E.DRAGON_RUSH],[44,E.COIL],[48,E.DOUBLE_EDGE],[52,E.ENDEAVOR]],[A.GLIGAR]:[[1,E.POISON_STING],[4,E.SAND_ATTACK],[7,E.HARDEN],[10,E.KNOCK_OFF],[13,E.QUICK_ATTACK],[16,E.FURY_CUTTER],[19,E.POISON_TAIL],[22,E.ACROBATICS],[27,E.SLASH],[30,E.U_TURN],[35,E.SCREECH],[40,E.X_SCISSOR],[45,E.CRABHAMMER],[50,E.SWORDS_DANCE]],[A.STEELIX]:[[1,E.BIND],[1,E.TACKLE],[1,E.ROCK_THROW],[1,E.HARDEN],[1,E.MUD_SPORT],[1,E.CRUNCH],[1,E.ROCK_POLISH],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[4,E.SMACK_DOWN],[8,E.AUTOTOMIZE],[12,E.DRAGON_BREATH],[16,E.CURSE],[20,E.ROCK_SLIDE],[22,E.GYRO_BALL],[24,E.SCREECH],[28,E.SAND_TOMB],[32,E.STEALTH_ROCK],[36,E.SLAM],[40,E.SANDSTORM],[44,E.DIG],[48,E.IRON_TAIL],[52,E.STONE_EDGE],[56,E.DOUBLE_EDGE],[60,E.MAGNET_RISE]],[A.SNUBBULL]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.SCARY_FACE],[1,E.CHARM],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[7,E.BITE],[13,E.LICK],[19,E.HEADBUTT],[25,E.ROAR],[31,E.LAST_RESORT],[37,E.PLAY_ROUGH],[43,E.PAYBACK],[49,E.CRUNCH]],[A.GRANBULL]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.SCARY_FACE],[1,E.OUTRAGE],[1,E.CHARM],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[7,E.BITE],[13,E.LICK],[19,E.HEADBUTT],[27,E.ROAR],[35,E.LAST_RESORT],[43,E.PLAY_ROUGH],[51,E.PAYBACK],[59,E.CRUNCH]],[A.QWILFISH]:[[1,E.TACKLE],[1,E.POISON_STING],[4,E.HARDEN],[8,E.WATER_GUN],[12,E.FELL_STINGER],[16,E.MINIMIZE],[20,E.SPIKES],[24,E.BRINE],[28,E.POISON_JAB],[32,E.PIN_MISSILE],[36,E.TOXIC_SPIKES],[40,E.STOCKPILE],[40,E.SPIT_UP],[44,E.TOXIC],[48,E.AQUA_TAIL],[52,E.ACUPRESSURE],[56,E.DESTINY_BOND]],[A.SCIZOR]:[[b,E.BULLET_PUNCH],[1,E.WING_ATTACK],[1,E.LEER],[1,E.AGILITY],[1,E.QUICK_ATTACK],[1,E.FALSE_SWIPE],[1,E.FURY_CUTTER],[1,E.AIR_SLASH],[12,E.METAL_CLAW],[16,E.DOUBLE_TEAM],[20,E.DOUBLE_HIT],[24,E.SLASH],[28,E.FOCUS_ENERGY],[30,E.STEEL_WING],[32,E.IRON_DEFENSE],[36,E.IRON_HEAD],[40,E.X_SCISSOR],[44,E.SWORDS_DANCE]],[A.SHUCKLE]:[[1,E.WRAP],[1,E.WITHDRAW],[1,E.BIDE],[1,E.CONSTRICT],[5,E.ROLLOUT],[10,E.STRUGGLE_BUG],[15,E.ROCK_THROW],[20,E.SAFEGUARD],[25,E.REST],[30,E.BUG_BITE],[35,E.GUARD_SPLIT],[35,E.POWER_SPLIT],[40,E.ROCK_SLIDE],[45,E.GASTRO_ACID],[50,E.STICKY_WEB],[55,E.POWER_TRICK],[60,E.STONE_EDGE],[65,E.SHELL_SMASH]],[A.HERACROSS]:[[1,E.TACKLE],[1,E.LEER],[1,E.ARM_THRUST],[5,E.FURY_ATTACK],[10,E.ENDURE],[15,E.AERIAL_ACE],[20,E.HORN_ATTACK],[25,E.COUNTER],[30,E.BRICK_BREAK],[35,E.PIN_MISSILE],[40,E.THROAT_CHOP],[45,E.THRASH],[50,E.SWORDS_DANCE],[55,E.MEGAHORN],[60,E.CLOSE_COMBAT]],[A.SNEASEL]:[[1,E.SCRATCH],[1,E.LEER],[6,E.TAUNT],[12,E.QUICK_ATTACK],[18,E.METAL_CLAW],[24,E.ICY_WIND],[30,E.FURY_SWIPES],[36,E.HONE_CLAWS],[42,E.BEAT_UP],[48,E.AGILITY],[54,E.SCREECH],[60,E.SLASH]],[A.TEDDIURSA]:[[1,E.SCRATCH],[1,E.LICK],[1,E.COVET],[1,E.FLING],[1,E.BABY_DOLL_EYES],[8,E.FURY_SWIPES],[13,E.PAYBACK],[17,E.SWEET_SCENT],[22,E.SLASH],[25,E.PLAY_NICE],[29,E.PLAY_ROUGH],[33,E.CHARM],[37,E.REST],[37,E.SNORE],[41,E.THRASH]],[A.URSARING]:[[1,E.SCRATCH],[1,E.LEER],[1,E.LICK],[1,E.COVET],[1,E.FLING],[1,E.BABY_DOLL_EYES],[1,E.FAKE_TEARS],[1,E.CHARM],[8,E.FURY_SWIPES],[13,E.PAYBACK],[17,E.SWEET_SCENT],[22,E.SLASH],[25,E.PLAY_NICE],[29,E.PLAY_ROUGH],[35,E.SCARY_FACE],[41,E.REST],[41,E.SNORE],[48,E.HIGH_HORSEPOWER],[56,E.THRASH],[64,E.HAMMER_ARM]],[A.SLUGMA]:[[1,E.SMOG],[1,E.YAWN],[5,E.EMBER],[8,E.ROCK_THROW],[13,E.HARDEN],[20,E.CLEAR_SMOG],[22,E.ANCIENT_POWER],[27,E.INCINERATE],[29,E.ROCK_SLIDE],[34,E.LAVA_PLUME],[36,E.AMNESIA],[41,E.BODY_SLAM],[43,E.RECOVER],[48,E.FLAMETHROWER],[50,E.EARTH_POWER]],[A.MAGCARGO]:[[b,E.SHELL_SMASH],[1,E.EMBER],[1,E.ROCK_THROW],[1,E.SMOG],[1,E.YAWN],[1,E.EARTH_POWER],[13,E.HARDEN],[20,E.CLEAR_SMOG],[22,E.ANCIENT_POWER],[27,E.INCINERATE],[29,E.ROCK_SLIDE],[34,E.LAVA_PLUME],[36,E.AMNESIA],[43,E.BODY_SLAM],[47,E.RECOVER],[54,E.FLAMETHROWER]],[A.SWINUB]:[[1,E.TACKLE],[1,E.MUD_SLAP],[1,E.ODOR_SLEUTH],[5,E.POWDER_SNOW],[10,E.FLAIL],[15,E.ICE_SHARD],[20,E.MIST],[25,E.ENDURE],[30,E.ICY_WIND],[35,E.AMNESIA],[40,E.TAKE_DOWN],[45,E.EARTHQUAKE],[50,E.BLIZZARD]],[A.PILOSWINE]:[[b,E.ICE_FANG],[1,E.TACKLE],[1,E.FLAIL],[1,E.POWDER_SNOW],[1,E.MUD_SLAP],[1,E.ODOR_SLEUTH],[1,E.ANCIENT_POWER],[15,E.ICE_SHARD],[20,E.MIST],[25,E.ENDURE],[30,E.ICY_WIND],[37,E.AMNESIA],[44,E.TAKE_DOWN],[51,E.EARTHQUAKE],[58,E.BLIZZARD],[65,E.THRASH]],[A.CORSOLA]:[[1,E.TACKLE],[1,E.HARDEN],[5,E.WATER_GUN],[10,E.AQUA_RING],[15,E.ENDURE],[20,E.ANCIENT_POWER],[25,E.BUBBLE_BEAM],[30,E.FLAIL],[35,E.LIFE_DEW],[40,E.POWER_GEM],[45,E.EARTH_POWER],[50,E.RECOVER],[55,E.MIRROR_COAT]],[A.REMORAID]:[[1,E.WATER_GUN],[1,E.HELPING_HAND],[4,E.WATER_PULSE],[8,E.FOCUS_ENERGY],[12,E.PSYBEAM],[16,E.AURORA_BEAM],[20,E.BUBBLE_BEAM],[24,E.LOCK_ON],[28,E.BULLET_SEED],[32,E.ICE_BEAM],[36,E.HYDRO_PUMP],[40,E.SOAK],[44,E.HYPER_BEAM]],[A.OCTILLERY]:[[b,E.OCTAZOOKA],[1,E.WRAP],[1,E.CONSTRICT],[1,E.WATER_GUN],[1,E.FOCUS_ENERGY],[1,E.HELPING_HAND],[1,E.ROCK_BLAST],[1,E.WATER_PULSE],[1,E.GUNK_SHOT],[12,E.PSYBEAM],[16,E.AURORA_BEAM],[20,E.BUBBLE_BEAM],[24,E.LOCK_ON],[30,E.BULLET_SEED],[36,E.ICE_BEAM],[42,E.HYDRO_PUMP],[48,E.SOAK],[54,E.HYPER_BEAM]],[A.DELIBIRD]:[[1,E.PRESENT],[1,E.METRONOME],[5,E.FAKE_OUT],[5,E.POWDER_SNOW],[6,E.MIST],[10,E.ICE_SHARD],[15,E.AERIAL_ACE],[20,E.ICY_WIND],[25,E.DRILL_PECK],[30,E.ICE_PUNCH],[35,E.HAZE],[40,E.AIR_SLASH],[45,E.TAILWIND],[50,E.SNOWSCAPE],[55,E.BLIZZARD],[60,E.BRAVE_BIRD]],[A.MANTINE]:[[1,E.WING_ATTACK],[1,E.TACKLE],[1,E.SUPERSONIC],[1,E.WATER_GUN],[1,E.PSYBEAM],[1,E.SIGNAL_BEAM],[1,E.BULLET_SEED],[1,E.ROOST],[12,E.WATER_PULSE],[16,E.WIDE_GUARD],[20,E.AGILITY],[24,E.BUBBLE_BEAM],[28,E.HEADBUTT],[32,E.AIR_SLASH],[36,E.AQUA_RING],[40,E.BOUNCE],[44,E.TAKE_DOWN],[48,E.HYDRO_PUMP]],[A.SKARMORY]:[[1,E.LEER],[1,E.PECK],[4,E.SAND_ATTACK],[8,E.FURY_ATTACK],[12,E.METAL_CLAW],[16,E.AGILITY],[20,E.WING_ATTACK],[24,E.SLASH],[28,E.STEEL_WING],[32,E.PAYBACK],[36,E.DRILL_PECK],[40,E.METAL_SOUND],[44,E.SPIKES],[48,E.IRON_DEFENSE],[52,E.BRAVE_BIRD]],[A.HOUNDOUR]:[[1,E.LEER],[1,E.EMBER],[4,E.HOWL],[8,E.SMOG],[13,E.ROAR],[16,E.BITE],[20,E.INCINERATE],[25,E.BEAT_UP],[28,E.FIRE_FANG],[32,E.TORMENT],[37,E.COMEUPPANCE],[40,E.FOUL_PLAY],[44,E.FLAMETHROWER],[49,E.CRUNCH],[52,E.NASTY_PLOT],[56,E.INFERNO]],[A.HOUNDOOM]:[[1,E.LEER],[1,E.EMBER],[1,E.SMOG],[1,E.HOWL],[1,E.NASTY_PLOT],[1,E.THUNDER_FANG],[13,E.ROAR],[16,E.BITE],[20,E.INCINERATE],[26,E.BEAT_UP],[30,E.FIRE_FANG],[35,E.TORMENT],[41,E.COMEUPPANCE],[45,E.FOUL_PLAY],[50,E.FLAMETHROWER],[56,E.CRUNCH],[62,E.INFERNO]],[A.KINGDRA]:[[V,E.LASER_FOCUS],[1,E.LEER],[1,E.WATER_GUN],[1,E.SMOKESCREEN],[1,E.TWISTER],[1,E.WHIRLPOOL],[1,E.YAWN],[15,E.FOCUS_ENERGY],[20,E.DRAGON_BREATH],[25,E.BUBBLE_BEAM],[30,E.AGILITY],[37,E.WATER_PULSE],[44,E.DRAGON_PULSE],[51,E.HYDRO_PUMP],[58,E.DRAGON_DANCE],[65,E.RAIN_DANCE],[72,E.WAVE_CRASH]],[A.PHANPY]:[[1,E.TACKLE],[1,E.GROWL],[1,E.DEFENSE_CURL],[1,E.ODOR_SLEUTH],[6,E.FLAIL],[10,E.ROLLOUT],[15,E.BULLDOZE],[19,E.ENDURE],[24,E.SLAM],[28,E.TAKE_DOWN],[33,E.CHARM],[37,E.LAST_RESORT],[42,E.DOUBLE_EDGE]],[A.DONPHAN]:[[b,E.FURY_ATTACK],[1,E.TACKLE],[1,E.GROWL],[1,E.HORN_ATTACK],[1,E.DEFENSE_CURL],[1,E.ODOR_SLEUTH],[1,E.FLAIL],[1,E.ENDURE],[1,E.TAKE_DOWN],[1,E.CHARM],[1,E.LAST_RESORT],[1,E.DOUBLE_EDGE],[1,E.THUNDER_FANG],[1,E.FIRE_FANG],[1,E.BULLDOZE],[6,E.RAPID_SPIN],[10,E.ROLLOUT],[15,E.ASSURANCE],[19,E.KNOCK_OFF],[24,E.SLAM],[30,E.STOMPING_TANTRUM],[37,E.SCARY_FACE],[43,E.EARTHQUAKE],[50,E.GIGA_IMPACT]],[A.PORYGON2]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[1,E.CONVERSION],[1,E.RECYCLE],[1,E.MAGNET_RISE],[1,E.MAGIC_COAT],[15,E.THUNDER_SHOCK],[20,E.PSYBEAM],[25,E.CONVERSION_2],[30,E.AGILITY],[35,E.RECOVER],[40,E.DISCHARGE],[45,E.TRI_ATTACK],[50,E.LOCK_ON],[55,E.ZAP_CANNON],[60,E.HYPER_BEAM]],[A.STANTLER]:[[1,E.TACKLE],[1,E.ME_FIRST],[3,E.LEER],[7,E.ASTONISH],[10,E.HYPNOSIS],[13,E.STOMP],[16,E.SAND_ATTACK],[21,E.TAKE_DOWN],[23,E.CONFUSE_RAY],[25,E.PSYSHIELD_BASH],[27,E.CALM_MIND],[32,E.ROLE_PLAY],[37,E.ZEN_HEADBUTT],[49,E.IMPRISON],[55,E.DOUBLE_EDGE]],[A.SMEARGLE]:[[1,E.SKETCH],[11,E.SKETCH],[21,E.SKETCH],[31,E.SKETCH],[41,E.SKETCH],[51,E.SKETCH],[61,E.SKETCH],[71,E.SKETCH],[81,E.SKETCH],[91,E.SKETCH]],[A.TYROGUE]:[[1,E.TACKLE],[1,E.FOCUS_ENERGY],[1,E.FAKE_OUT],[1,E.HELPING_HAND],[10,E.LOW_SWEEP],[10,E.MACH_PUNCH],[10,E.RAPID_SPIN]],[A.HITMONTOP]:[[b,E.TRIPLE_KICK],[1,E.TACKLE],[1,E.FOCUS_ENERGY],[1,E.RAPID_SPIN],[1,E.FAKE_OUT],[1,E.HELPING_HAND],[1,E.FEINT],[1,E.PURSUIT],[1,E.ROLLING_KICK],[1,E.LOW_SWEEP],[1,E.MACH_PUNCH],[4,E.QUICK_ATTACK],[8,E.GYRO_BALL],[12,E.DETECT],[16,E.REVENGE],[21,E.WIDE_GUARD],[21,E.QUICK_GUARD],[24,E.SUCKER_PUNCH],[28,E.AGILITY],[32,E.DIG],[36,E.CLOSE_COMBAT],[40,E.COUNTER],[44,E.ENDEAVOR]],[A.SMOOCHUM]:[[1,E.POUND],[1,E.LICK],[4,E.POWDER_SNOW],[8,E.COPYCAT],[12,E.CONFUSION],[16,E.COVET],[20,E.SING],[24,E.FAKE_TEARS],[28,E.ICE_PUNCH],[32,E.PSYCHIC],[36,E.SWEET_KISS],[40,E.MEAN_LOOK],[44,E.PERISH_SONG],[48,E.BLIZZARD]],[A.ELEKID]:[[1,E.LEER],[1,E.QUICK_ATTACK],[4,E.THUNDER_SHOCK],[8,E.CHARGE],[12,E.SWIFT],[16,E.SHOCK_WAVE],[20,E.THUNDER_WAVE],[24,E.SCREECH],[28,E.THUNDER_PUNCH],[32,E.DISCHARGE],[36,E.LOW_KICK],[40,E.THUNDERBOLT],[44,E.LIGHT_SCREEN],[48,E.THUNDER]],[A.MAGBY]:[[1,E.LEER],[1,E.SMOG],[4,E.EMBER],[8,E.SMOKESCREEN],[12,E.CLEAR_SMOG],[16,E.FLAME_WHEEL],[20,E.CONFUSE_RAY],[24,E.SCARY_FACE],[28,E.FIRE_PUNCH],[32,E.LAVA_PLUME],[36,E.LOW_KICK],[40,E.FLAMETHROWER],[44,E.SUNNY_DAY],[48,E.FIRE_BLAST]],[A.MILTANK]:[[1,E.TACKLE],[1,E.GROWL],[5,E.ROLLOUT],[10,E.DEFENSE_CURL],[15,E.STOMP],[20,E.HEAL_BELL],[25,E.HEADBUTT],[30,E.ZEN_HEADBUTT],[35,E.MILK_DRINK],[40,E.BODY_SLAM],[45,E.PLAY_ROUGH],[50,E.CHARM],[55,E.HIGH_HORSEPOWER]],[A.BLISSEY]:[[1,E.POUND],[1,E.DEFENSE_CURL],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.COVET],[1,E.COPYCAT],[1,E.DISARMING_VOICE],[4,E.TAIL_WHIP],[8,E.ECHOED_VOICE],[12,E.LIFE_DEW],[16,E.SING],[20,E.FLING],[24,E.TAKE_DOWN],[28,E.HEAL_PULSE],[32,E.HELPING_HAND],[36,E.LIGHT_SCREEN],[40,E.DOUBLE_EDGE],[44,E.SOFT_BOILED],[48,E.LAST_RESORT],[52,E.HEALING_WISH]],[A.RAIKOU]:[[1,E.LEER],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.EXTREME_SPEED],[1,E.CHARGE],[6,E.SPARK],[12,E.BITE],[18,E.CALM_MIND],[24,E.ROAR],[30,E.THUNDER_FANG],[36,E.HOWL],[42,E.CRUNCH],[48,E.EXTRASENSORY],[54,E.DISCHARGE],[60,E.REFLECT],[66,E.RAIN_DANCE],[72,E.THUNDER],[78,E.ZAP_CANNON]],[A.ENTEI]:[[V,E.SACRED_FIRE],[V,E.EXTREME_SPEED],[1,E.STOMP],[1,E.LEER],[1,E.EMBER],[1,E.SMOKESCREEN],[6,E.FLAME_WHEEL],[12,E.BITE],[18,E.CALM_MIND],[24,E.ROAR],[30,E.FIRE_FANG],[36,E.SCARY_FACE],[42,E.CRUNCH],[48,E.EXTRASENSORY],[54,E.LAVA_PLUME],[60,E.SWAGGER],[66,E.SUNNY_DAY],[72,E.FIRE_BLAST],[78,E.ERUPTION]],[A.SUICUNE]:[[V,E.EXTREME_SPEED],[V,E.SHEER_COLD],[1,E.GUST],[1,E.LEER],[1,E.MIST],[1,E.WATER_GUN],[6,E.WATER_PULSE],[12,E.BITE],[18,E.CALM_MIND],[24,E.ROAR],[30,E.ICE_FANG],[36,E.TAILWIND],[42,E.CRUNCH],[48,E.EXTRASENSORY],[54,E.SURF],[60,E.MIRROR_COAT],[66,E.RAIN_DANCE],[72,E.HYDRO_PUMP],[78,E.BLIZZARD]],[A.LARVITAR]:[[1,E.TACKLE],[1,E.LEER],[3,E.ROCK_THROW],[6,E.PAYBACK],[9,E.BITE],[12,E.SCARY_FACE],[15,E.ROCK_SLIDE],[18,E.STOMPING_TANTRUM],[21,E.SCREECH],[24,E.SMACK_DOWN],[27,E.CRUNCH],[31,E.EARTHQUAKE],[33,E.STONE_EDGE],[36,E.THRASH],[39,E.SANDSTORM],[42,E.HYPER_BEAM]],[A.PUPITAR]:[[b,E.IRON_DEFENSE],[1,E.TACKLE],[1,E.LEER],[1,E.ROCK_THROW],[1,E.PAYBACK],[9,E.BITE],[12,E.SCARY_FACE],[15,E.ROCK_SLIDE],[18,E.STOMPING_TANTRUM],[21,E.SCREECH],[24,E.SMACK_DOWN],[27,E.CRUNCH],[33,E.EARTHQUAKE],[37,E.STONE_EDGE],[42,E.THRASH],[47,E.SANDSTORM],[52,E.HYPER_BEAM]],[A.TYRANITAR]:[[1,E.TACKLE],[1,E.LEER],[1,E.ROCK_THROW],[1,E.IRON_DEFENSE],[1,E.PAYBACK],[1,E.DARK_PULSE],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[9,E.BITE],[12,E.SCARY_FACE],[15,E.ROCK_SLIDE],[18,E.STOMPING_TANTRUM],[21,E.SCREECH],[24,E.SMACK_DOWN],[27,E.CRUNCH],[33,E.EARTHQUAKE],[37,E.STONE_EDGE],[42,E.THRASH],[47,E.SANDSTORM],[52,E.HYPER_BEAM],[59,E.GIGA_IMPACT]],[A.LUGIA]:[[V,E.DRAGON_RUSH],[1,E.GUST],[1,E.WHIRLWIND],[1,E.ANCIENT_POWER],[1,E.WEATHER_BALL],[9,E.MIST],[18,E.SAFEGUARD],[27,E.CALM_MIND],[36,E.EXTRASENSORY],[45,E.RECOVER],[54,E.AEROBLAST],[63,E.RAIN_DANCE],[72,E.HYDRO_PUMP],[81,E.FUTURE_SIGHT],[90,E.SKY_ATTACK]],[A.HO_OH]:[[1,E.GUST],[1,E.WHIRLWIND],[1,E.ANCIENT_POWER],[1,E.WEATHER_BALL],[9,E.LIFE_DEW],[18,E.SAFEGUARD],[27,E.CALM_MIND],[36,E.EXTRASENSORY],[45,E.RECOVER],[54,E.SACRED_FIRE],[63,E.SUNNY_DAY],[72,E.FIRE_BLAST],[81,E.FUTURE_SIGHT],[90,E.SKY_ATTACK],[99,E.OVERHEAT]],[A.CELEBI]:[[1,E.CONFUSION],[1,E.HEAL_BELL],[10,E.MAGICAL_LEAF],[20,E.BATON_PASS],[30,E.ANCIENT_POWER],[40,E.LIFE_DEW],[50,E.LEECH_SEED],[55,E.HEAL_BLOCK],[60,E.RECOVER],[70,E.FUTURE_SIGHT],[80,E.HEALING_WISH],[90,E.LEAF_STORM],[100,E.PERISH_SONG]],[A.TREECKO]:[[1,E.POUND],[1,E.LEER],[3,E.LEAFAGE],[6,E.QUICK_ATTACK],[9,E.MEGA_DRAIN],[12,E.DETECT],[15,E.QUICK_GUARD],[18,E.ASSURANCE],[21,E.GIGA_DRAIN],[24,E.SLAM],[27,E.DOUBLE_TEAM],[30,E.ENERGY_BALL],[33,E.SCREECH],[36,E.ENDEAVOR],[39,E.LEAF_STORM]],[A.GROVYLE]:[[V,E.FALSE_SWIPE],[V,E.FURY_CUTTER],[V,E.X_SCISSOR],[V,E.ENERGY_BALL],[1,E.POUND],[1,E.LEER],[1,E.LEAFAGE],[1,E.QUICK_ATTACK],[9,E.MEGA_DRAIN],[12,E.DETECT],[15,E.QUICK_GUARD],[20,E.ASSURANCE],[25,E.GIGA_DRAIN],[30,E.SLAM],[35,E.DOUBLE_TEAM],[40,E.LEAF_BLADE],[45,E.SCREECH],[50,E.ENDEAVOR],[55,E.LEAF_STORM]],[A.SCEPTILE]:[[b,E.LEAF_BLADE],[V,E.FALSE_SWIPE],[V,E.FURY_CUTTER],[V,E.X_SCISSOR],[V,E.ENERGY_BALL],[V,E.SHED_TAIL],[1,E.POUND],[1,E.LEER],[1,E.LEAFAGE],[1,E.QUICK_ATTACK],[1,E.DUAL_CHOP],[5,E.MEGA_DRAIN],[12,E.DETECT],[15,E.QUICK_GUARD],[20,E.ASSURANCE],[25,E.GIGA_DRAIN],[30,E.SLAM],[35,E.DOUBLE_TEAM],[42,E.SCREECH],[49,E.ENDEAVOR],[56,E.LEAF_STORM]],[A.TORCHIC]:[[1,E.SCRATCH],[1,E.GROWL],[3,E.EMBER],[6,E.QUICK_ATTACK],[9,E.FLAME_CHARGE],[12,E.DETECT],[15,E.SAND_ATTACK],[18,E.AERIAL_ACE],[21,E.SLASH],[24,E.BOUNCE],[27,E.FOCUS_ENERGY],[30,E.FLAMETHROWER],[33,E.FEATHER_DANCE],[36,E.REVERSAL],[39,E.FLARE_BLITZ]],[A.COMBUSKEN]:[[b,E.DOUBLE_KICK],[V,E.FLAMETHROWER],[V,E.FEATHER_DANCE],[1,E.SCRATCH],[1,E.GROWL],[1,E.EMBER],[1,E.QUICK_ATTACK],[9,E.FLAME_CHARGE],[12,E.DETECT],[15,E.SAND_ATTACK],[20,E.AERIAL_ACE],[25,E.SLASH],[30,E.BOUNCE],[35,E.FOCUS_ENERGY],[40,E.BLAZE_KICK],[45,E.BULK_UP],[50,E.REVERSAL],[55,E.FLARE_BLITZ]],[A.BLAZIKEN]:[[b,E.BLAZE_KICK],[V,E.FIRE_PUNCH],[V,E.EMBER],[V,E.FLAMETHROWER],[V,E.FEATHER_DANCE],[1,E.DOUBLE_KICK],[1,E.SCRATCH],[1,E.GROWL],[1,E.QUICK_ATTACK],[9,E.FLAME_CHARGE],[12,E.DETECT],[15,E.SAND_ATTACK],[20,E.AERIAL_ACE],[25,E.SLASH],[30,E.BOUNCE],[35,E.FOCUS_ENERGY],[42,E.BULK_UP],[49,E.REVERSAL],[56,E.FLARE_BLITZ],[63,E.BRAVE_BIRD]],[A.MUDKIP]:[[1,E.TACKLE],[1,E.GROWL],[3,E.WATER_GUN],[6,E.ROCK_SMASH],[9,E.ROCK_THROW],[12,E.PROTECT],[15,E.SUPERSONIC],[18,E.WATER_PULSE],[21,E.ROCK_SLIDE],[24,E.TAKE_DOWN],[27,E.AMNESIA],[30,E.SURF],[33,E.SCREECH],[36,E.ENDEAVOR],[39,E.HYDRO_PUMP]],[A.MARSHTOMP]:[[b,E.MUD_SHOT],[V,E.SURF],[V,E.ROCK_SMASH],[1,E.TACKLE],[1,E.GROWL],[1,E.WATER_GUN],[9,E.ROCK_THROW],[12,E.PROTECT],[15,E.SUPERSONIC],[20,E.WATER_PULSE],[25,E.ROCK_SLIDE],[30,E.TAKE_DOWN],[35,E.AMNESIA],[40,E.MUDDY_WATER],[45,E.SCREECH],[50,E.ENDEAVOR],[55,E.HYDRO_PUMP]],[A.SWAMPERT]:[[V,E.SURF],[V,E.EARTHQUAKE],[V,E.ROCK_SMASH],[V,E.HAMMER_ARM],[1,E.MUD_SHOT],[1,E.TACKLE],[1,E.GROWL],[1,E.WATER_GUN],[9,E.ROCK_THROW],[12,E.PROTECT],[15,E.SUPERSONIC],[20,E.WATER_PULSE],[25,E.ROCK_SLIDE],[30,E.TAKE_DOWN],[35,E.AMNESIA],[42,E.MUDDY_WATER],[49,E.SCREECH],[56,E.ENDEAVOR],[63,E.HYDRO_PUMP]],[A.POOCHYENA]:[[1,E.TACKLE],[4,E.HOWL],[7,E.SAND_ATTACK],[10,E.BITE],[13,E.LEER],[16,E.ROAR],[19,E.SWAGGER],[22,E.ASSURANCE],[25,E.SCARY_FACE],[28,E.TAUNT],[31,E.CRUNCH],[34,E.YAWN],[36,E.TAKE_DOWN],[40,E.SUCKER_PUNCH],[44,E.PLAY_ROUGH]],[A.MIGHTYENA]:[[b,E.SNARL],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.BITE],[1,E.THIEF],[1,E.CRUNCH],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[13,E.LEER],[13,E.HOWL],[16,E.ROAR],[20,E.SWAGGER],[24,E.ASSURANCE],[28,E.SCARY_FACE],[36,E.TAUNT],[44,E.YAWN],[48,E.TAKE_DOWN],[52,E.SUCKER_PUNCH],[56,E.PLAY_ROUGH]],[A.ZIGZAGOON]:[[1,E.TACKLE],[1,E.GROWL],[3,E.SAND_ATTACK],[6,E.TAIL_WHIP],[9,E.COVET],[12,E.HEADBUTT],[15,E.BABY_DOLL_EYES],[18,E.PIN_MISSILE],[21,E.REST],[24,E.TAKE_DOWN],[27,E.FLING],[30,E.FLAIL],[33,E.BELLY_DRUM],[36,E.DOUBLE_EDGE]],[A.LINOONE]:[[b,E.SLASH],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.PIN_MISSILE],[1,E.GROWL],[1,E.SWITCHEROO],[1,E.BABY_DOLL_EYES],[1,E.ROTOTILLER],[9,E.COVET],[12,E.HEADBUTT],[15,E.HONE_CLAWS],[18,E.FURY_SWIPES],[23,E.REST],[28,E.TAKE_DOWN],[33,E.FLING],[38,E.FLAIL],[43,E.BELLY_DRUM],[48,E.DOUBLE_EDGE]],[A.WURMPLE]:[[1,E.TACKLE],[1,E.STRING_SHOT],[5,E.POISON_STING],[15,E.BUG_BITE]],[A.SILCOON]:[[b,E.HARDEN],[V,E.TACKLE],[V,E.STRING_SHOT],[V,E.POISON_STING],[V,E.BUG_BITE],[1,E.HARDEN]],[A.BEAUTIFLY]:[[b,E.GUST],[1,E.TACKLE],[1,E.BUG_BITE],[1,E.GUST],[1,E.HARDEN],[1,E.STRING_SHOT],[1,E.POISON_STING],[12,E.ABSORB],[15,E.STUN_SPORE],[17,E.MORNING_SUN],[20,E.AIR_CUTTER],[22,E.MEGA_DRAIN],[25,E.LEECH_LIFE],[27,E.ATTRACT],[30,E.WHIRLWIND],[32,E.GIGA_DRAIN],[35,E.BUG_BUZZ],[37,E.PROTECT],[40,E.QUIVER_DANCE]],[A.CASCOON]:[[b,E.HARDEN],[V,E.TACKLE],[V,E.STRING_SHOT],[V,E.POISON_STING],[V,E.BUG_BITE],[1,E.HARDEN]],[A.DUSTOX]:[[b,E.GUST],[1,E.TACKLE],[1,E.BUG_BITE],[1,E.GUST],[1,E.HARDEN],[1,E.STRING_SHOT],[1,E.POISON_STING],[12,E.CONFUSION],[15,E.POISON_POWDER],[17,E.MOONLIGHT],[20,E.VENOSHOCK],[22,E.PSYBEAM],[25,E.LEECH_LIFE],[27,E.LIGHT_SCREEN],[30,E.WHIRLWIND],[32,E.TOXIC],[35,E.BUG_BUZZ],[37,E.PROTECT],[40,E.QUIVER_DANCE]],[A.LOTAD]:[[1,E.GROWL],[1,E.ASTONISH],[3,E.ABSORB],[6,E.WATER_GUN],[9,E.MIST],[12,E.MEGA_DRAIN],[16,E.FLAIL],[20,E.BUBBLE_BEAM],[24,E.LEECH_SEED],[28,E.GIGA_DRAIN],[33,E.RAIN_DANCE],[38,E.ZEN_HEADBUTT],[43,E.ENERGY_BALL]],[A.LOMBRE]:[[1,E.GROWL],[1,E.WATER_GUN],[1,E.ABSORB],[1,E.FLAIL],[1,E.FAKE_OUT],[1,E.RAIN_DANCE],[1,E.KNOCK_OFF],[1,E.TEETER_DANCE],[1,E.ASTONISH],[9,E.MIST],[12,E.MEGA_DRAIN],[18,E.FURY_SWIPES],[24,E.BUBBLE_BEAM],[30,E.LEECH_SEED],[36,E.GIGA_DRAIN],[50,E.ZEN_HEADBUTT],[57,E.ENERGY_BALL],[64,E.HYDRO_PUMP]],[A.LUDICOLO]:[[V,E.GROWL],[V,E.MIST],[V,E.WATER_GUN],[V,E.HYDRO_PUMP],[V,E.ABSORB],[V,E.MEGA_DRAIN],[V,E.FURY_SWIPES],[V,E.FLAIL],[V,E.KNOCK_OFF],[V,E.TEETER_DANCE],[V,E.ASTONISH],[V,E.ENERGY_BALL],[V,E.ZEN_HEADBUTT],[V,E.LEECH_SEED],[V,E.GIGA_DRAIN],[1,E.FAKE_OUT],[1,E.BUBBLE_BEAM],[1,E.RAIN_DANCE]],[A.SEEDOT]:[[1,E.TACKLE],[1,E.HARDEN],[1,E.BIDE],[3,E.ABSORB],[6,E.ASTONISH],[9,E.GROWTH],[12,E.ROLLOUT],[15,E.MEGA_DRAIN],[18,E.PAYBACK],[21,E.HEADBUTT],[24,E.SUNNY_DAY],[27,E.SYNTHESIS],[30,E.SUCKER_PUNCH],[33,E.EXPLOSION]],[A.NUZLEAF]:[[b,E.RAZOR_LEAF],[1,E.AIR_CUTTER],[1,E.TORMENT],[1,E.FAKE_OUT],[1,E.SWAGGER],[1,E.EXPLOSION],[1,E.TACKLE],[1,E.HARDEN],[1,E.BIDE],[1,E.ABSORB],[1,E.ASTONISH],[1,E.HEADBUTT],[9,E.GROWTH],[12,E.ROLLOUT],[18,E.MEGA_DRAIN],[24,E.PAYBACK],[30,E.SYNTHESIS],[36,E.SUNNY_DAY],[43,E.EXTRASENSORY],[50,E.SUCKER_PUNCH],[57,E.LEAF_BLADE]],[A.SHIFTRY]:[[b,E.LEAF_BLADE],[V,E.WHIRLWIND],[V,E.TACKLE],[V,E.BIDE],[V,E.ABSORB],[V,E.MEGA_DRAIN],[V,E.GROWTH],[V,E.RAZOR_LEAF],[V,E.HARDEN],[V,E.HEADBUTT],[V,E.EXPLOSION],[V,E.ROLLOUT],[V,E.SWAGGER],[V,E.SYNTHESIS],[V,E.BEAT_UP],[V,E.FAKE_OUT],[V,E.TORMENT],[V,E.ASTONISH],[V,E.EXTRASENSORY],[V,E.SUCKER_PUNCH],[1,E.AIR_CUTTER],[1,E.HURRICANE],[1,E.PAYBACK],[1,E.SUNNY_DAY]],[A.TAILLOW]:[[1,E.PECK],[1,E.GROWL],[5,E.FOCUS_ENERGY],[9,E.QUICK_ATTACK],[13,E.WING_ATTACK],[17,E.DOUBLE_TEAM],[21,E.AERIAL_ACE],[25,E.QUICK_GUARD],[29,E.AGILITY],[33,E.AIR_SLASH],[37,E.ENDEAVOR],[41,E.BRAVE_BIRD],[45,E.REVERSAL]],[A.SWELLOW]:[[1,E.BRAVE_BIRD],[1,E.AIR_SLASH],[1,E.PLUCK],[1,E.PECK],[1,E.GROWL],[1,E.FOCUS_ENERGY],[1,E.QUICK_ATTACK],[13,E.WING_ATTACK],[17,E.DOUBLE_TEAM],[21,E.AERIAL_ACE],[27,E.QUICK_GUARD],[33,E.AGILITY],[45,E.ENDEAVOR],[51,E.BRAVE_BIRD],[57,E.REVERSAL]],[A.WINGULL]:[[1,E.GROWL],[1,E.WATER_GUN],[5,E.QUICK_ATTACK],[10,E.SUPERSONIC],[15,E.WING_ATTACK],[20,E.WATER_PULSE],[26,E.AGILITY],[30,E.AIR_SLASH],[35,E.MIST],[40,E.ROOST],[45,E.HURRICANE]],[A.PELIPPER]:[[1,E.PROTECT],[1,E.SOAK],[1,E.QUICK_ATTACK],[1,E.AGILITY],[1,E.AIR_SLASH],[1,E.GROWL],[1,E.WATER_GUN],[1,E.TAILWIND],[1,E.SUPERSONIC],[1,E.WATER_SPORT],[15,E.WING_ATTACK],[20,E.WATER_PULSE],[28,E.STOCKPILE],[28,E.SPIT_UP],[28,E.SWALLOW],[34,E.FLING],[41,E.MIST],[48,E.ROOST],[55,E.HURRICANE],[62,E.HYDRO_PUMP]],[A.RALTS]:[[1,E.GROWL],[1,E.DISARMING_VOICE],[3,E.DOUBLE_TEAM],[6,E.CONFUSION],[9,E.HYPNOSIS],[12,E.DRAINING_KISS],[15,E.TELEPORT],[18,E.PSYBEAM],[21,E.LIFE_DEW],[24,E.CHARM],[27,E.CALM_MIND],[30,E.PSYCHIC],[33,E.HEAL_PULSE],[36,E.DREAM_EATER],[39,E.FUTURE_SIGHT]],[A.KIRLIA]:[[1,E.GROWL],[1,E.DISARMING_VOICE],[1,E.DOUBLE_TEAM],[1,E.CONFUSION],[9,E.HYPNOSIS],[12,E.DRAINING_KISS],[15,E.TELEPORT],[18,E.PSYBEAM],[23,E.LIFE_DEW],[28,E.CHARM],[33,E.CALM_MIND],[38,E.PSYCHIC],[43,E.HEAL_PULSE],[48,E.DREAM_EATER],[53,E.FUTURE_SIGHT]],[A.GARDEVOIR]:[[b,E.DAZZLING_GLEAM],[1,E.MISTY_TERRAIN],[1,E.HEALING_WISH],[1,E.CHARM],[1,E.MYSTICAL_FIRE],[1,E.HEAL_PULSE],[1,E.GROWL],[1,E.DISARMING_VOICE],[1,E.DOUBLE_TEAM],[1,E.CONFUSION],[9,E.HYPNOSIS],[12,E.DRAINING_KISS],[15,E.TELEPORT],[18,E.PSYBEAM],[23,E.LIFE_DEW],[28,E.WISH],[35,E.CALM_MIND],[42,E.PSYCHIC],[49,E.MOONBLAST],[56,E.DREAM_EATER],[63,E.FUTURE_SIGHT]],[A.SURSKIT]:[[1,E.WATER_GUN],[6,E.QUICK_ATTACK],[9,E.SWEET_SCENT],[14,E.SOAK],[17,E.BUBBLE_BEAM],[22,E.AGILITY],[25,E.MIST],[25,E.HAZE],[35,E.BATON_PASS],[38,E.STICKY_WEB]],[A.MASQUERAIN]:[[V,E.BATON_PASS],[V,E.STICKY_WEB],[1,E.WHIRLWIND],[1,E.WATER_GUN],[1,E.QUICK_ATTACK],[1,E.SWEET_SCENT],[1,E.SOAK],[1,E.BUBBLE_BEAM],[1,E.AGILITY],[1,E.MIST],[1,E.HAZE],[1,E.OMINOUS_WIND],[17,E.GUST],[22,E.SCARY_FACE],[22,E.AIR_CUTTER],[26,E.STUN_SPORE],[32,E.AIR_SLASH],[38,E.GIGA_DRAIN],[44,E.BUG_BUZZ],[52,E.QUIVER_DANCE]],[A.SHROOMISH]:[[1,E.ABSORB],[1,E.TACKLE],[5,E.STUN_SPORE],[8,E.LEECH_SEED],[12,E.MEGA_DRAIN],[15,E.HEADBUTT],[19,E.POISON_POWDER],[26,E.GIGA_DRAIN],[29,E.GROWTH],[33,E.TOXIC],[36,E.SEED_BOMB],[40,E.SPORE]],[A.BRELOOM]:[[b,E.MACH_PUNCH],[V,E.SPORE],[1,E.POISON_POWDER],[1,E.GIGA_DRAIN],[1,E.GROWTH],[1,E.TOXIC],[1,E.ABSORB],[1,E.TACKLE],[1,E.STUN_SPORE],[1,E.LEECH_SEED],[12,E.MEGA_DRAIN],[15,E.HEADBUTT],[19,E.FEINT],[22,E.COUNTER],[28,E.FORCE_PALM],[33,E.WORRY_SEED],[39,E.BRICK_BREAK],[44,E.SEED_BOMB],[50,E.DYNAMIC_PUNCH],[55,E.FOCUS_PUNCH]],[A.SLAKOTH]:[[1,E.SCRATCH],[1,E.YAWN],[6,E.ENCORE],[9,E.SLACK_OFF],[14,E.HEADBUTT],[17,E.AMNESIA],[22,E.COVET],[25,E.THROAT_CHOP],[30,E.COUNTER],[33,E.FLAIL],[38,E.PLAY_ROUGH]],[A.VIGOROTH]:[[V,E.PLAY_ROUGH],[1,E.SCRATCH],[1,E.YAWN],[1,E.FOCUS_ENERGY],[1,E.SLACK_OFF],[1,E.ENCORE],[1,E.HEADBUTT],[1,E.AMNESIA],[1,E.COVET],[1,E.FLAIL],[1,E.UPROAR],[14,E.FURY_SWIPES],[17,E.ENDURE],[23,E.SLASH],[27,E.THROAT_CHOP],[33,E.COUNTER],[37,E.FOCUS_PUNCH],[43,E.REVERSAL]],[A.SLAKING]:[[b,E.SWAGGER],[V,E.PLAY_ROUGH],[V,E.FOCUS_PUNCH],[1,E.SUCKER_PUNCH],[1,E.SCRATCH],[1,E.YAWN],[1,E.FOCUS_ENERGY],[1,E.ENCORE],[1,E.SLACK_OFF],[1,E.UPROAR],[1,E.FURY_SWIPES],[1,E.ENDURE],[1,E.HEADBUTT],[1,E.SLASH],[1,E.REVERSAL],[17,E.AMNESIA],[23,E.COVET],[27,E.THROAT_CHOP],[33,E.COUNTER],[39,E.FLAIL],[45,E.FLING],[52,E.MEGA_KICK],[63,E.HAMMER_ARM]],[A.NINCADA]:[[1,E.SCRATCH],[1,E.SAND_ATTACK],[5,E.HARDEN],[10,E.FALSE_SWIPE],[15,E.MUD_SLAP],[21,E.ABSORB],[25,E.METAL_CLAW],[30,E.FURY_SWIPES],[35,E.MIND_READER],[40,E.DIG]],[A.NINJASK]:[[b,E.DOUBLE_TEAM],[b,E.SCREECH],[b,E.FURY_CUTTER],[1,E.BATON_PASS],[1,E.AERIAL_ACE],[1,E.MUD_SLAP],[1,E.METAL_CLAW],[1,E.DIG],[1,E.SAND_ATTACK],[1,E.SCRATCH],[1,E.HARDEN],[1,E.FALSE_SWIPE],[15,E.AGILITY],[23,E.ABSORB],[29,E.BUG_BITE],[36,E.FURY_SWIPES],[43,E.MIND_READER],[50,E.SLASH],[57,E.SWORDS_DANCE],[64,E.X_SCISSOR]],[A.SHEDINJA]:[[1,E.SHADOW_CLAW],[1,E.GRUDGE],[1,E.MUD_SLAP],[1,E.METAL_CLAW],[1,E.DIG],[1,E.SCRATCH],[1,E.SAND_ATTACK],[1,E.HARDEN],[1,E.FALSE_SWIPE],[15,E.CONFUSE_RAY],[23,E.ABSORB],[29,E.SHADOW_SNEAK],[36,E.FURY_SWIPES],[43,E.MIND_READER],[50,E.SHADOW_BALL],[57,E.SPITE],[64,E.PHANTOM_FORCE]],[A.WHISMUR]:[[1,E.ASTONISH],[1,E.POUND],[5,E.ECHOED_VOICE],[10,E.HOWL],[15,E.REST],[15,E.SLEEP_TALK],[21,E.STOMP],[25,E.ROAR],[30,E.SUPERSONIC],[35,E.UPROAR],[40,E.SCREECH],[45,E.HYPER_VOICE]],[A.LOUDRED]:[[b,E.BITE],[1,E.ASTONISH],[1,E.POUND],[1,E.ECHOED_VOICE],[1,E.HOWL],[15,E.REST],[15,E.SLEEP_TALK],[23,E.STOMP],[29,E.ROAR],[36,E.SUPERSONIC],[43,E.UPROAR],[50,E.SCREECH],[57,E.HYPER_VOICE]],[A.EXPLOUD]:[[b,E.CRUNCH],[1,E.BITE],[1,E.ICE_FANG],[1,E.FIRE_FANG],[1,E.THUNDER_FANG],[1,E.ASTONISH],[1,E.POUND],[1,E.ECHOED_VOICE],[1,E.HOWL],[15,E.REST],[15,E.SLEEP_TALK],[23,E.STOMP],[29,E.ROAR],[36,E.SUPERSONIC],[45,E.UPROAR],[54,E.SCREECH],[63,E.HYPER_VOICE],[72,E.BOOMBURST],[81,E.HYPER_BEAM]],[A.MAKUHITA]:[[1,E.TACKLE],[1,E.FOCUS_ENERGY],[4,E.SAND_ATTACK],[7,E.ARM_THRUST],[10,E.FAKE_OUT],[13,E.FORCE_PALM],[16,E.WHIRLWIND],[19,E.KNOCK_OFF],[22,E.BULK_UP],[25,E.BELLY_DRUM],[28,E.DETECT],[31,E.SEISMIC_TOSS],[34,E.FOCUS_PUNCH],[37,E.ENDURE],[40,E.CLOSE_COMBAT],[43,E.REVERSAL],[46,E.HEAVY_SLAM]],[A.HARIYAMA]:[[1,E.BRINE],[1,E.TACKLE],[1,E.FOCUS_ENERGY],[1,E.SAND_ATTACK],[1,E.ARM_THRUST],[10,E.FAKE_OUT],[13,E.FORCE_PALM],[16,E.WHIRLWIND],[19,E.KNOCK_OFF],[22,E.BULK_UP],[26,E.BELLY_DRUM],[30,E.DETECT],[34,E.SEISMIC_TOSS],[38,E.FOCUS_PUNCH],[42,E.ENDURE],[46,E.CLOSE_COMBAT],[50,E.REVERSAL],[54,E.HEAVY_SLAM],[60,E.HEADLONG_RUSH]],[A.AZURILL]:[[1,E.SPLASH],[1,E.WATER_GUN],[1,E.TAIL_WHIP],[3,E.HELPING_HAND],[6,E.BUBBLE_BEAM],[9,E.CHARM],[12,E.SLAM],[15,E.BOUNCE]],[A.NOSEPASS]:[[1,E.TACKLE],[4,E.HARDEN],[7,E.BLOCK],[10,E.ROCK_THROW],[13,E.THUNDER_WAVE],[16,E.REST],[19,E.SPARK],[22,E.ROCK_SLIDE],[25,E.POWER_GEM],[28,E.ROCK_BLAST],[31,E.DISCHARGE],[34,E.SANDSTORM],[37,E.EARTH_POWER],[40,E.STONE_EDGE],[43,E.LOCK_ON],[43,E.ZAP_CANNON]],[A.SKITTY]:[[1,E.FAKE_OUT],[1,E.GROWL],[1,E.TAIL_WHIP],[4,E.TACKLE],[7,E.SING],[10,E.ATTRACT],[13,E.DISARMING_VOICE],[16,E.FURY_SWIPES],[19,E.COPYCAT],[22,E.PAYBACK],[25,E.CHARM],[31,E.FACADE],[34,E.COVET],[37,E.HEAL_BELL],[40,E.DOUBLE_EDGE],[43,E.BABY_DOLL_EYES],[46,E.PLAY_ROUGH]],[A.DELCATTY]:[[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.FAKE_OUT],[1,E.TACKLE],[1,E.SING],[1,E.ATTRACT],[1,E.DISARMING_VOICE],[1,E.FURY_SWIPES],[1,E.COPYCAT],[1,E.PAYBACK],[1,E.CHARM],[1,E.FACADE],[1,E.COVET],[1,E.HEAL_BELL],[1,E.DOUBLE_EDGE],[1,E.BABY_DOLL_EYES],[1,E.PLAY_ROUGH]],[A.SABLEYE]:[[1,E.LEER],[1,E.SCRATCH],[3,E.ASTONISH],[9,E.SHADOW_SNEAK],[12,E.FAKE_OUT],[15,E.DISABLE],[18,E.DETECT],[21,E.NIGHT_SHADE],[24,E.FURY_SWIPES],[27,E.KNOCK_OFF],[30,E.QUASH],[33,E.SHADOW_CLAW],[36,E.MEAN_LOOK],[39,E.POWER_GEM],[42,E.ZEN_HEADBUTT],[45,E.SHADOW_BALL],[48,E.FOUL_PLAY]],[A.MAWILE]:[[1,E.ASTONISH],[1,E.GROWL],[4,E.FAIRY_WIND],[8,E.BATON_PASS],[12,E.BITE],[16,E.STOCKPILE],[16,E.SPIT_UP],[16,E.SWALLOW],[20,E.SUCKER_PUNCH],[24,E.IRON_DEFENSE],[28,E.CRUNCH],[32,E.SWEET_SCENT],[36,E.IRON_HEAD],[40,E.TAUNT],[44,E.FAKE_TEARS],[48,E.PLAY_ROUGH]],[A.ARON]:[[1,E.TACKLE],[1,E.HARDEN],[4,E.METAL_CLAW],[8,E.ROCK_TOMB],[12,E.ROAR],[16,E.HEADBUTT],[20,E.PROTECT],[24,E.ROCK_SLIDE],[28,E.IRON_HEAD],[33,E.METAL_SOUND],[36,E.TAKE_DOWN],[40,E.AUTOTOMIZE],[44,E.IRON_TAIL],[48,E.IRON_DEFENSE],[52,E.HEAVY_SLAM],[56,E.DOUBLE_EDGE],[60,E.METAL_BURST]],[A.LAIRON]:[[1,E.TACKLE],[1,E.HARDEN],[1,E.METAL_CLAW],[1,E.ROCK_TOMB],[12,E.ROAR],[16,E.HEADBUTT],[20,E.PROTECT],[24,E.ROCK_SLIDE],[28,E.IRON_HEAD],[35,E.METAL_SOUND],[40,E.TAKE_DOWN],[46,E.AUTOTOMIZE],[52,E.IRON_TAIL],[58,E.IRON_DEFENSE],[64,E.HEAVY_SLAM],[70,E.DOUBLE_EDGE],[76,E.METAL_BURST]],[A.AGGRON]:[[1,E.TACKLE],[1,E.HARDEN],[1,E.METAL_CLAW],[1,E.ROCK_TOMB],[12,E.ROAR],[16,E.HEADBUTT],[20,E.PROTECT],[24,E.ROCK_SLIDE],[28,E.IRON_HEAD],[35,E.METAL_SOUND],[40,E.TAKE_DOWN],[48,E.AUTOTOMIZE],[56,E.IRON_TAIL],[64,E.IRON_DEFENSE],[72,E.HEAVY_SLAM],[80,E.DOUBLE_EDGE],[88,E.METAL_BURST]],[A.MEDITITE]:[[1,E.CONFUSION],[1,E.WORK_UP],[1,E.BIDE],[9,E.DETECT],[12,E.ENDURE],[15,E.FEINT],[17,E.FORCE_PALM],[20,E.PSYBEAM],[23,E.CALM_MIND],[25,E.ZEN_HEADBUTT],[28,E.HIGH_JUMP_KICK],[31,E.PSYCH_UP],[33,E.ACUPRESSURE],[36,E.POWER_TRICK],[39,E.REVERSAL],[41,E.RECOVER],[44,E.COUNTER]],[A.MEDICHAM]:[[1,E.FIRE_PUNCH],[1,E.ICE_PUNCH],[1,E.THUNDER_PUNCH],[1,E.CONFUSION],[1,E.DETECT],[1,E.WORK_UP],[1,E.BIDE],[1,E.REVERSAL],[12,E.ENDURE],[15,E.FEINT],[17,E.FORCE_PALM],[20,E.PSYBEAM],[23,E.CALM_MIND],[25,E.ZEN_HEADBUTT],[28,E.HIGH_JUMP_KICK],[31,E.PSYCH_UP],[33,E.ACUPRESSURE],[36,E.POWER_TRICK],[47,E.RECOVER],[53,E.COUNTER],[53,E.AXE_KICK]],[A.ELECTRIKE]:[[1,E.TACKLE],[1,E.THUNDER_WAVE],[4,E.LEER],[8,E.HOWL],[12,E.QUICK_ATTACK],[16,E.SHOCK_WAVE],[20,E.BITE],[24,E.THUNDER_FANG],[28,E.ROAR],[32,E.DISCHARGE],[36,E.CHARGE],[40,E.WILD_CHARGE],[44,E.THUNDER]],[A.MANECTRIC]:[[1,E.FIRE_FANG],[1,E.TACKLE],[1,E.THUNDER_WAVE],[1,E.LEER],[1,E.HOWL],[12,E.QUICK_ATTACK],[16,E.SHOCK_WAVE],[20,E.BITE],[24,E.THUNDER_FANG],[30,E.ROAR],[36,E.DISCHARGE],[42,E.CHARGE],[48,E.WILD_CHARGE],[54,E.THUNDER],[60,E.ELECTRIC_TERRAIN]],[A.PLUSLE]:[[V,E.NUZZLE],[1,E.PLAY_NICE],[1,E.GROWL],[1,E.THUNDER_WAVE],[1,E.QUICK_ATTACK],[4,E.HELPING_HAND],[7,E.SPARK],[10,E.ENCORE],[13,E.SWITCHEROO],[16,E.SWIFT],[19,E.ELECTRO_BALL],[22,E.COPYCAT],[26,E.CHARGE],[31,E.DISCHARGE],[34,E.BATON_PASS],[37,E.AGILITY],[40,E.LAST_RESORT],[43,E.THUNDER],[46,E.NASTY_PLOT],[49,E.ENTRAINMENT]],[A.MINUN]:[[V,E.NUZZLE],[1,E.PLAY_NICE],[1,E.GROWL],[1,E.THUNDER_WAVE],[1,E.QUICK_ATTACK],[4,E.HELPING_HAND],[7,E.SPARK],[10,E.ENCORE],[13,E.SWITCHEROO],[16,E.SWIFT],[19,E.ELECTRO_BALL],[22,E.COPYCAT],[26,E.CHARGE],[31,E.DISCHARGE],[34,E.BATON_PASS],[37,E.AGILITY],[40,E.LAST_RESORT],[43,E.THUNDER],[46,E.NASTY_PLOT],[49,E.ENTRAINMENT]],[A.VOLBEAT]:[[1,E.FLASH],[1,E.TACKLE],[5,E.DOUBLE_TEAM],[8,E.CONFUSE_RAY],[12,E.QUICK_ATTACK],[15,E.STRUGGLE_BUG],[19,E.MOONLIGHT],[22,E.TAIL_GLOW],[26,E.PROTECT],[29,E.ZEN_HEADBUTT],[33,E.HELPING_HAND],[36,E.BUG_BUZZ],[40,E.PLAY_ROUGH],[43,E.DOUBLE_EDGE],[47,E.INFESTATION]],[A.ILLUMISE]:[[1,E.TACKLE],[1,E.PLAY_NICE],[5,E.SWEET_SCENT],[9,E.CHARM],[12,E.QUICK_ATTACK],[15,E.STRUGGLE_BUG],[19,E.MOONLIGHT],[22,E.WISH],[26,E.ENCORE],[29,E.FLATTER],[33,E.ZEN_HEADBUTT],[36,E.HELPING_HAND],[40,E.BUG_BUZZ],[43,E.PLAY_ROUGH],[47,E.INFESTATION]],[A.ROSELIA]:[[b,E.POISON_STING],[1,E.ABSORB],[1,E.GROWTH],[1,E.STUN_SPORE],[1,E.WORRY_SEED],[5,E.MEGA_DRAIN],[10,E.LEECH_SEED],[15,E.MAGICAL_LEAF],[20,E.TOXIC_SPIKES],[25,E.SWEET_SCENT],[30,E.GIGA_DRAIN],[35,E.SYNTHESIS],[40,E.TOXIC],[45,E.PETAL_BLIZZARD],[50,E.AROMATHERAPY],[55,E.INGRAIN],[60,E.PETAL_DANCE]],[A.GULPIN]:[[1,E.POUND],[5,E.YAWN],[8,E.POISON_GAS],[10,E.SLUDGE],[12,E.AMNESIA],[17,E.ACID_SPRAY],[20,E.ENCORE],[25,E.TOXIC],[28,E.STOCKPILE],[28,E.SPIT_UP],[28,E.SWALLOW],[33,E.SLUDGE_BOMB],[36,E.GASTRO_ACID],[41,E.BELCH],[44,E.PAIN_SPLIT],[49,E.GUNK_SHOT]],[A.SWALOT]:[[b,E.BODY_SLAM],[1,E.GUNK_SHOT],[1,E.POUND],[1,E.YAWN],[1,E.POISON_GAS],[1,E.WRING_OUT],[1,E.SLUDGE],[1,E.PAIN_SPLIT],[12,E.AMNESIA],[17,E.ACID_SPRAY],[20,E.ENCORE],[25,E.TOXIC],[30,E.STOCKPILE],[30,E.SPIT_UP],[30,E.SWALLOW],[37,E.SLUDGE_BOMB],[42,E.GASTRO_ACID],[49,E.BELCH]],[A.CARVANHA]:[[1,E.AQUA_JET],[1,E.LEER],[4,E.POISON_FANG],[8,E.FOCUS_ENERGY],[12,E.SCARY_FACE],[16,E.BITE],[20,E.ICE_FANG],[24,E.SCREECH],[28,E.SWAGGER],[32,E.CRUNCH],[36,E.AGILITY],[40,E.LIQUIDATION],[44,E.TAKE_DOWN]],[A.SHARPEDO]:[[b,E.SLASH],[1,E.NIGHT_SLASH],[1,E.AQUA_JET],[1,E.LEER],[1,E.POISON_FANG],[1,E.FOCUS_ENERGY],[12,E.SCARY_FACE],[16,E.BITE],[20,E.ICE_FANG],[24,E.SCREECH],[28,E.SWAGGER],[34,E.CRUNCH],[40,E.AGILITY],[46,E.LIQUIDATION],[52,E.TAKE_DOWN]],[A.WAILMER]:[[1,E.SPLASH],[1,E.TACKLE],[3,E.GROWL],[6,E.ASTONISH],[12,E.WATER_GUN],[15,E.MIST],[18,E.WATER_PULSE],[21,E.HEAVY_SLAM],[24,E.BRINE],[27,E.WHIRLPOOL],[30,E.DIVE],[33,E.BOUNCE],[36,E.BODY_SLAM],[39,E.REST],[42,E.AMNESIA],[45,E.HYDRO_PUMP],[48,E.WATER_SPOUT]],[A.WAILORD]:[[1,E.SOAK],[1,E.NOBLE_ROAR],[1,E.SPLASH],[1,E.TACKLE],[1,E.GROWL],[1,E.ASTONISH],[1,E.WATER_GUN],[15,E.MIST],[18,E.WATER_PULSE],[21,E.HEAVY_SLAM],[24,E.BRINE],[27,E.WHIRLPOOL],[30,E.DIVE],[33,E.BOUNCE],[36,E.BODY_SLAM],[39,E.REST],[44,E.AMNESIA],[49,E.HYDRO_PUMP],[54,E.WATER_SPOUT]],[A.NUMEL]:[[1,E.GROWL],[1,E.TACKLE],[5,E.EMBER],[8,E.FOCUS_ENERGY],[12,E.BULLDOZE],[15,E.INCINERATE],[19,E.AMNESIA],[22,E.LAVA_PLUME],[26,E.EARTH_POWER],[29,E.CURSE],[31,E.TAKE_DOWN],[40,E.EARTHQUAKE],[43,E.FLAMETHROWER],[47,E.DOUBLE_EDGE]],[A.CAMERUPT]:[[b,E.ROCK_SLIDE],[V,E.FLAMETHROWER],[V,E.DOUBLE_EDGE],[1,E.FISSURE],[1,E.ERUPTION],[1,E.GROWL],[1,E.TACKLE],[1,E.EMBER],[1,E.FOCUS_ENERGY],[12,E.BULLDOZE],[15,E.INCINERATE],[19,E.AMNESIA],[22,E.LAVA_PLUME],[26,E.EARTH_POWER],[29,E.CURSE],[31,E.TAKE_DOWN],[39,E.YAWN],[46,E.EARTHQUAKE]],[A.TORKOAL]:[[1,E.SMOG],[1,E.EMBER],[4,E.WITHDRAW],[8,E.RAPID_SPIN],[12,E.SMOKESCREEN],[16,E.CLEAR_SMOG],[20,E.FLAME_WHEEL],[24,E.PROTECT],[28,E.LAVA_PLUME],[32,E.BODY_SLAM],[36,E.IRON_DEFENSE],[40,E.FLAMETHROWER],[44,E.CURSE],[48,E.HEAT_WAVE],[52,E.AMNESIA],[56,E.INFERNO],[60,E.SHELL_SMASH],[64,E.ERUPTION]],[A.SPOINK]:[[1,E.SPLASH],[5,E.CONFUSION],[10,E.GROWL],[14,E.PSYBEAM],[18,E.PSYCH_UP],[22,E.CONFUSE_RAY],[29,E.REST],[29,E.POWER_GEM],[33,E.SNORE],[38,E.PSYSHOCK],[40,E.PAYBACK],[44,E.PSYCHIC],[50,E.BOUNCE]],[A.GRUMPIG]:[[b,E.TEETER_DANCE],[1,E.BELCH],[1,E.SPLASH],[1,E.CONFUSION],[1,E.GROWL],[1,E.PSYBEAM],[18,E.PSYCH_UP],[22,E.CONFUSE_RAY],[26,E.ZEN_HEADBUTT],[29,E.POWER_GEM],[35,E.REST],[35,E.SNORE],[42,E.PSYSHOCK],[46,E.PAYBACK],[52,E.PSYCHIC],[60,E.BOUNCE]],[A.SPINDA]:[[1,E.TACKLE],[5,E.COPYCAT],[10,E.DIZZY_PUNCH],[14,E.PSYBEAM],[19,E.HYPNOSIS],[23,E.BODY_SLAM],[28,E.SUCKER_PUNCH],[32,E.TEETER_DANCE],[37,E.UPROAR],[41,E.PSYCH_UP],[46,E.DOUBLE_EDGE],[50,E.FLAIL],[55,E.THRASH]],[A.TRAPINCH]:[[1,E.SAND_ATTACK],[1,E.ASTONISH],[1,E.BIDE],[1,E.FEINT_ATTACK],[8,E.BITE],[12,E.MUD_SLAP],[16,E.SAND_TOMB],[20,E.BULLDOZE],[24,E.DIG],[28,E.CRUNCH],[32,E.SANDSTORM],[36,E.EARTH_POWER],[40,E.EARTHQUAKE],[44,E.SUPERPOWER],[48,E.FISSURE]],[A.VIBRAVA]:[[b,E.DRAGON_BREATH],[V,E.SUPERSONIC],[V,E.FISSURE],[V,E.CRUNCH],[V,E.SUPERPOWER],[V,E.ASTONISH],[V,E.BULLDOZE],[1,E.DIG],[1,E.SAND_ATTACK],[1,E.BITE],[1,E.BIDE],[1,E.FEINT_ATTACK],[12,E.MUD_SLAP],[16,E.SAND_TOMB],[20,E.DRAGON_TAIL],[24,E.SCREECH],[28,E.BUG_BUZZ],[32,E.SANDSTORM],[38,E.EARTH_POWER],[44,E.EARTHQUAKE],[50,E.UPROAR],[56,E.DRAGON_RUSH],[62,E.BOOMBURST]],[A.FLYGON]:[[b,E.DRAGON_CLAW],[V,E.BITE],[V,E.FISSURE],[V,E.DIG],[V,E.CRUNCH],[V,E.SUPERPOWER],[V,E.ASTONISH],[V,E.DRAGON_DANCE],[V,E.FEINT],[1,E.DRAGON_BREATH],[1,E.BULLDOZE],[1,E.SAND_ATTACK],[1,E.SUPERSONIC],[1,E.BIDE],[1,E.FEINT_ATTACK],[12,E.MUD_SLAP],[16,E.SAND_TOMB],[20,E.DRAGON_TAIL],[24,E.SCREECH],[28,E.BUG_BUZZ],[32,E.SANDSTORM],[38,E.EARTH_POWER],[44,E.EARTHQUAKE],[52,E.UPROAR],[60,E.DRAGON_RUSH],[68,E.BOOMBURST]],[A.CACNEA]:[[1,E.POISON_STING],[1,E.LEER],[4,E.ABSORB],[7,E.GROWTH],[10,E.LEECH_SEED],[13,E.SAND_ATTACK],[16,E.BULLET_SEED],[19,E.POWER_TRIP],[22,E.INGRAIN],[26,E.PAYBACK],[30,E.SPIKES],[34,E.SUCKER_PUNCH],[38,E.PIN_MISSILE],[42,E.ENERGY_BALL],[46,E.COTTON_SPORE],[50,E.SANDSTORM],[54,E.DESTINY_BOND]],[A.CACTURNE]:[[b,E.SPIKY_SHIELD],[1,E.DESTINY_BOND],[1,E.POISON_STING],[1,E.LEER],[1,E.ABSORB],[1,E.GROWTH],[10,E.LEECH_SEED],[13,E.SAND_ATTACK],[16,E.BULLET_SEED],[19,E.POWER_TRIP],[22,E.INGRAIN],[26,E.PAYBACK],[30,E.SPIKES],[35,E.SUCKER_PUNCH],[38,E.PIN_MISSILE],[44,E.ENERGY_BALL],[49,E.COTTON_SPORE],[54,E.SANDSTORM]],[A.SWABLU]:[[1,E.PECK],[1,E.GROWL],[4,E.DISARMING_VOICE],[8,E.MIST],[12,E.FURY_ATTACK],[16,E.ROUND],[20,E.DRAGON_BREATH],[24,E.SAFEGUARD],[28,E.SING],[32,E.COTTON_GUARD],[36,E.TAKE_DOWN],[40,E.MOONBLAST],[44,E.PERISH_SONG]],[A.ALTARIA]:[[b,E.DRAGON_PULSE],[1,E.PLUCK],[1,E.PECK],[1,E.GROWL],[1,E.DISARMING_VOICE],[1,E.MIST],[12,E.FURY_ATTACK],[16,E.ROUND],[20,E.DRAGON_BREATH],[24,E.SAFEGUARD],[28,E.SING],[32,E.COTTON_GUARD],[38,E.TAKE_DOWN],[44,E.MOONBLAST],[50,E.PERISH_SONG],[56,E.SKY_ATTACK]],[A.ZANGOOSE]:[[V,E.DOUBLE_KICK],[V,E.DISABLE],[V,E.COUNTER],[V,E.FURY_SWIPES],[V,E.CURSE],[V,E.FLAIL],[V,E.BELLY_DRUM],[V,E.FEINT],[V,E.NIGHT_SLASH],[V,E.DOUBLE_HIT],[V,E.QUICK_GUARD],[V,E.FINAL_GAMBIT],[1,E.SCRATCH],[1,E.LEER],[5,E.QUICK_ATTACK],[8,E.FURY_CUTTER],[12,E.METAL_CLAW],[15,E.HONE_CLAWS],[19,E.SLASH],[22,E.POWER_TRIP],[26,E.CRUSH_CLAW],[29,E.FALSE_SWIPE],[33,E.SWITCHEROO],[36,E.DETECT],[40,E.X_SCISSOR],[43,E.TAUNT],[47,E.SWORDS_DANCE],[50,E.CLOSE_COMBAT]],[A.SEVIPER]:[[1,E.WRAP],[1,E.SWAGGER],[4,E.BITE],[6,E.LICK],[9,E.POISON_TAIL],[11,E.FEINT],[14,E.SCREECH],[19,E.GLARE],[21,E.POISON_FANG],[24,E.VENOSHOCK],[29,E.GASTRO_ACID],[31,E.POISON_JAB],[34,E.HAZE],[39,E.CRUNCH],[41,E.BELCH],[44,E.COIL],[46,E.SLUDGE_BOMB]],[A.LUNATONE]:[[1,E.MOONBLAST],[1,E.MOONLIGHT],[1,E.TACKLE],[1,E.HARDEN],[1,E.CONFUSION],[1,E.ROCK_THROW],[5,E.HYPNOSIS],[10,E.ROCK_POLISH],[15,E.ROCK_SLIDE],[20,E.PSYSHOCK],[25,E.COSMIC_POWER],[30,E.PSYCHIC],[35,E.STONE_EDGE],[40,E.FUTURE_SIGHT],[45,E.MAGIC_ROOM],[50,E.EXPLOSION]],[A.SOLROCK]:[[1,E.FLARE_BLITZ],[1,E.MORNING_SUN],[1,E.TACKLE],[1,E.HARDEN],[1,E.CONFUSION],[1,E.ROCK_THROW],[5,E.HYPNOSIS],[10,E.ROCK_POLISH],[15,E.ROCK_SLIDE],[20,E.ZEN_HEADBUTT],[25,E.COSMIC_POWER],[30,E.PSYCHIC],[35,E.STONE_EDGE],[40,E.SOLAR_BEAM],[45,E.WONDER_ROOM],[50,E.EXPLOSION]],[A.BARBOACH]:[[1,E.MUD_SLAP],[1,E.WATER_GUN],[6,E.REST],[6,E.SNORE],[12,E.WATER_PULSE],[18,E.AMNESIA],[24,E.AQUA_TAIL],[31,E.MUDDY_WATER],[36,E.EARTHQUAKE],[42,E.FUTURE_SIGHT],[48,E.FISSURE]],[A.WHISCASH]:[[b,E.THRASH],[1,E.BELCH],[1,E.ZEN_HEADBUTT],[1,E.TICKLE],[1,E.MUD_SLAP],[1,E.WATER_GUN],[1,E.REST],[1,E.SNORE],[12,E.WATER_PULSE],[18,E.AMNESIA],[24,E.AQUA_TAIL],[33,E.MUDDY_WATER],[40,E.EARTHQUAKE],[48,E.FUTURE_SIGHT],[56,E.FISSURE]],[A.CORPHISH]:[[1,E.WATER_GUN],[1,E.HARDEN],[4,E.LEER],[8,E.TAUNT],[12,E.BUBBLE_BEAM],[16,E.KNOCK_OFF],[20,E.DOUBLE_HIT],[24,E.PROTECT],[28,E.NIGHT_SLASH],[32,E.RAZOR_SHELL],[36,E.SWORDS_DANCE],[40,E.CRUNCH],[44,E.CRABHAMMER],[48,E.ENDEAVOR],[52,E.GUILLOTINE]],[A.CRAWDAUNT]:[[b,E.SWIFT],[1,E.WATER_GUN],[1,E.HARDEN],[1,E.LEER],[1,E.TAUNT],[12,E.BUBBLE_BEAM],[16,E.KNOCK_OFF],[20,E.DOUBLE_HIT],[24,E.PROTECT],[28,E.NIGHT_SLASH],[34,E.RAZOR_SHELL],[40,E.SWORDS_DANCE],[46,E.CRUNCH],[52,E.CRABHAMMER],[58,E.ENDEAVOR],[64,E.GUILLOTINE]],[A.BALTOY]:[[1,E.HARDEN],[1,E.MUD_SLAP],[3,E.RAPID_SPIN],[6,E.CONFUSION],[9,E.ROCK_TOMB],[12,E.POWER_TRICK],[15,E.PSYBEAM],[18,E.ANCIENT_POWER],[21,E.IMPRISON],[24,E.COSMIC_POWER],[27,E.EXTRASENSORY],[30,E.EARTH_POWER],[33,E.SELF_DESTRUCT],[36,E.GUARD_SPLIT],[36,E.POWER_SPLIT],[39,E.SANDSTORM],[42,E.EXPLOSION]],[A.CLAYDOL]:[[b,E.HYPER_BEAM],[1,E.TELEPORT],[1,E.HARDEN],[1,E.MUD_SLAP],[1,E.RAPID_SPIN],[1,E.CONFUSION],[9,E.ROCK_TOMB],[12,E.POWER_TRICK],[15,E.PSYBEAM],[18,E.ANCIENT_POWER],[21,E.IMPRISON],[24,E.COSMIC_POWER],[27,E.EXTRASENSORY],[30,E.EARTH_POWER],[33,E.SELF_DESTRUCT],[38,E.GUARD_SPLIT],[38,E.POWER_SPLIT],[43,E.SANDSTORM],[48,E.EXPLOSION]],[A.LILEEP]:[[1,E.WRAP],[1,E.ASTONISH],[1,E.CONSTRICT],[4,E.ACID],[8,E.CONFUSE_RAY],[12,E.INGRAIN],[16,E.ANCIENT_POWER],[20,E.MEGA_DRAIN],[24,E.BRINE],[28,E.AMNESIA],[32,E.GASTRO_ACID],[36,E.GIGA_DRAIN],[41,E.STOCKPILE],[41,E.SPIT_UP],[41,E.SWALLOW],[44,E.ENERGY_BALL]],[A.CRADILY]:[[1,E.LEECH_SEED],[1,E.WRAP],[1,E.ASTONISH],[1,E.CONSTRICT],[1,E.ACID],[1,E.CONFUSE_RAY],[12,E.INGRAIN],[16,E.ANCIENT_POWER],[20,E.MEGA_DRAIN],[24,E.BRINE],[28,E.AMNESIA],[32,E.GASTRO_ACID],[36,E.GIGA_DRAIN],[43,E.STOCKPILE],[43,E.SPIT_UP],[43,E.SWALLOW],[48,E.ENERGY_BALL]],[A.ANORITH]:[[1,E.FURY_CUTTER],[1,E.HARDEN],[4,E.WATER_GUN],[8,E.SMACK_DOWN],[12,E.METAL_CLAW],[16,E.ANCIENT_POWER],[20,E.BUG_BITE],[24,E.BRINE],[28,E.SLASH],[32,E.CRUSH_CLAW],[36,E.ROCK_BLAST],[41,E.PROTECT],[44,E.X_SCISSOR]],[A.ARMALDO]:[[1,E.FURY_CUTTER],[1,E.HARDEN],[1,E.WATER_GUN],[1,E.SMACK_DOWN],[12,E.METAL_CLAW],[16,E.ANCIENT_POWER],[20,E.BUG_BITE],[24,E.BRINE],[28,E.SLASH],[32,E.CRUSH_CLAW],[36,E.ROCK_BLAST],[43,E.PROTECT],[48,E.X_SCISSOR]],[A.FEEBAS]:[[1,E.SPLASH],[15,E.TACKLE],[25,E.FLAIL]],[A.MILOTIC]:[[b,E.WATER_PULSE],[1,E.FLAIL],[1,E.SPLASH],[1,E.TACKLE],[1,E.WRAP],[1,E.WATER_GUN],[1,E.WATER_SPORT],[4,E.DISARMING_VOICE],[8,E.TWISTER],[12,E.AQUA_RING],[16,E.ATTRACT],[20,E.LIFE_DEW],[24,E.DRAGON_TAIL],[28,E.RECOVER],[32,E.AQUA_TAIL],[36,E.SAFEGUARD],[40,E.SURF],[44,E.RAIN_DANCE],[48,E.COIL],[52,E.HYDRO_PUMP]],[A.CASTFORM]:[[1,E.TACKLE],[10,E.WATER_GUN],[10,E.EMBER],[10,E.POWDER_SNOW],[15,E.HEADBUTT],[20,E.RAIN_DANCE],[20,E.SUNNY_DAY],[20,E.HAIL],[25,E.WEATHER_BALL],[35,E.HYDRO_PUMP],[35,E.FIRE_BLAST],[35,E.BLIZZARD],[45,E.HURRICANE]],[A.KECLEON]:[[1,E.THIEF],[1,E.TAIL_WHIP],[1,E.ASTONISH],[1,E.LICK],[1,E.SCRATCH],[4,E.BIND],[7,E.SHADOW_SNEAK],[10,E.FEINT],[13,E.FURY_SWIPES],[16,E.DISABLE],[18,E.PSYBEAM],[21,E.ANCIENT_POWER],[25,E.SLASH],[30,E.DETECT],[33,E.SHADOW_CLAW],[38,E.SCREECH],[42,E.SUBSTITUTE],[46,E.SUCKER_PUNCH],[50,E.FOUL_PLAY]],[A.SHUPPET]:[[1,E.ASTONISH],[1,E.PURSUIT],[4,E.SCREECH],[7,E.NIGHT_SHADE],[10,E.SPITE],[16,E.WILL_O_WISP],[19,E.SHADOW_SNEAK],[22,E.HEX],[26,E.CURSE],[30,E.SHADOW_BALL],[34,E.ROLE_PLAY],[38,E.SUCKER_PUNCH],[42,E.TRICK],[48,E.PHANTOM_FORCE]],[A.BANETTE]:[[b,E.KNOCK_OFF],[1,E.ASTONISH],[1,E.PURSUIT],[1,E.SCREECH],[1,E.NIGHT_SHADE],[1,E.SPITE],[16,E.WILL_O_WISP],[19,E.SHADOW_SNEAK],[22,E.HEX],[26,E.CURSE],[30,E.SHADOW_BALL],[34,E.ROLE_PLAY],[40,E.SUCKER_PUNCH],[46,E.TRICK],[53,E.PHANTOM_FORCE]],[A.DUSKULL]:[[1,E.ASTONISH],[1,E.LEER],[1,E.PURSUIT],[4,E.DISABLE],[8,E.SHADOW_SNEAK],[12,E.CONFUSE_RAY],[16,E.NIGHT_SHADE],[20,E.PAYBACK],[24,E.WILL_O_WISP],[28,E.MEAN_LOOK],[32,E.HEX],[36,E.CURSE],[40,E.SHADOW_BALL],[44,E.FUTURE_SIGHT]],[A.DUSCLOPS]:[[b,E.SHADOW_PUNCH],[1,E.FIRE_PUNCH],[1,E.ICE_PUNCH],[1,E.THUNDER_PUNCH],[1,E.GRAVITY],[1,E.BIND],[1,E.ASTONISH],[1,E.LEER],[1,E.PURSUIT],[1,E.DISABLE],[1,E.SHADOW_SNEAK],[12,E.CONFUSE_RAY],[16,E.NIGHT_SHADE],[20,E.PAYBACK],[24,E.WILL_O_WISP],[28,E.MEAN_LOOK],[32,E.HEX],[36,E.CURSE],[42,E.SHADOW_BALL],[48,E.FUTURE_SIGHT]],[A.TROPIUS]:[[1,E.LEAF_STORM],[1,E.GUST],[1,E.LEER],[1,E.GROWTH],[1,E.RAZOR_LEAF],[6,E.SWEET_SCENT],[10,E.STOMP],[16,E.MAGICAL_LEAF],[21,E.WHIRLWIND],[30,E.WIDE_GUARD],[36,E.AIR_SLASH],[41,E.BODY_SLAM],[46,E.OUTRAGE],[50,E.SYNTHESIS],[56,E.SOLAR_BEAM]],[A.CHIMECHO]:[[1,E.HEALING_WISH],[1,E.LAST_RESORT],[1,E.ENTRAINMENT],[1,E.WRAP],[1,E.PSYWAVE],[1,E.GROWL],[1,E.ASTONISH],[1,E.CONFUSION],[1,E.SYNCHRONOISE],[13,E.YAWN],[16,E.STORED_POWER],[19,E.TAKE_DOWN],[22,E.EXTRASENSORY],[27,E.HEAL_BELL],[32,E.UPROAR],[37,E.SAFEGUARD],[42,E.DOUBLE_EDGE],[47,E.HEAL_PULSE]],[A.ABSOL]:[[1,E.QUICK_ATTACK],[1,E.LEER],[5,E.DOUBLE_TEAM],[10,E.KNOCK_OFF],[15,E.DETECT],[20,E.TAUNT],[25,E.SLASH],[30,E.NIGHT_SLASH],[35,E.FOCUS_ENERGY],[40,E.SUCKER_PUNCH],[45,E.SWORDS_DANCE],[50,E.FUTURE_SIGHT],[55,E.PERISH_SONG]],[A.WYNAUT]:[[1,E.COUNTER],[1,E.MIRROR_COAT],[1,E.SAFEGUARD],[1,E.DESTINY_BOND],[1,E.SPLASH],[1,E.CHARM],[1,E.ENCORE],[1,E.AMNESIA]],[A.SNORUNT]:[[1,E.POWDER_SNOW],[1,E.ASTONISH],[1,E.HEADBUTT],[5,E.LEER],[10,E.DOUBLE_TEAM],[15,E.ICE_SHARD],[20,E.PROTECT],[25,E.ICY_WIND],[30,E.FROST_BREATH],[35,E.BITE],[40,E.ICE_FANG],[45,E.SNOWSCAPE],[50,E.WEATHER_BALL],[55,E.CRUNCH],[60,E.BLIZZARD]],[A.GLALIE]:[[b,E.FREEZE_DRY],[1,E.SHEER_COLD],[1,E.POWDER_SNOW],[1,E.HEADBUTT],[1,E.ASTONISH],[1,E.LEER],[1,E.DOUBLE_TEAM],[1,E.ICE_BALL],[15,E.ICE_SHARD],[20,E.PROTECT],[25,E.ICY_WIND],[30,E.FROST_BREATH],[35,E.BITE],[40,E.ICE_FANG],[47,E.SNOWSCAPE],[54,E.WEATHER_BALL],[61,E.CRUNCH],[68,E.BLIZZARD]],[A.SPHEAL]:[[1,E.ROLLOUT],[1,E.DEFENSE_CURL],[4,E.GROWL],[8,E.WATER_GUN],[12,E.POWDER_SNOW],[16,E.REST],[20,E.SNORE],[24,E.BRINE],[28,E.AURORA_BEAM],[33,E.ENCORE],[36,E.BODY_SLAM],[40,E.SURF],[44,E.BLIZZARD],[48,E.HAIL],[52,E.SHEER_COLD]],[A.SEALEO]:[[b,E.SWAGGER],[1,E.ROLLOUT],[1,E.DEFENSE_CURL],[1,E.GROWL],[1,E.WATER_GUN],[12,E.POWDER_SNOW],[16,E.REST],[20,E.SNORE],[24,E.BRINE],[28,E.AURORA_BEAM],[35,E.ENCORE],[40,E.BODY_SLAM],[46,E.SURF],[52,E.BLIZZARD],[58,E.HAIL],[64,E.SHEER_COLD]],[A.WALREIN]:[[1,E.SWAGGER],[1,E.CRUNCH],[1,E.ICE_FANG],[1,E.ROLLOUT],[1,E.DEFENSE_CURL],[1,E.GROWL],[1,E.WATER_GUN],[12,E.POWDER_SNOW],[16,E.REST],[20,E.SNORE],[24,E.BRINE],[28,E.AURORA_BEAM],[35,E.ENCORE],[40,E.BODY_SLAM],[48,E.SURF],[56,E.BLIZZARD],[64,E.HAIL],[72,E.SHEER_COLD]],[A.CLAMPERL]:[[1,E.CLAMP],[1,E.WATER_GUN],[1,E.WHIRLPOOL],[1,E.IRON_DEFENSE],[50,E.SHELL_SMASH]],[A.HUNTAIL]:[[1,E.CLAMP],[1,E.WATER_GUN],[1,E.IRON_DEFENSE],[1,E.SHELL_SMASH],[1,E.WHIRLPOOL],[1,E.BITE],[5,E.SCREECH],[9,E.SCARY_FACE],[11,E.RAIN_DANCE],[14,E.WATER_PULSE],[16,E.ICE_FANG],[19,E.BRINE],[23,E.SUCKER_PUNCH],[26,E.DIVE],[29,E.BATON_PASS],[34,E.CRUNCH],[39,E.AQUA_TAIL],[45,E.COIL],[50,E.HYDRO_PUMP]],[A.GOREBYSS]:[[1,E.CLAMP],[1,E.WATER_GUN],[1,E.IRON_DEFENSE],[1,E.SHELL_SMASH],[1,E.WHIRLPOOL],[1,E.CONFUSION],[5,E.RAIN_DANCE],[9,E.AGILITY],[11,E.DRAINING_KISS],[14,E.WATER_PULSE],[16,E.AMNESIA],[19,E.AQUA_RING],[23,E.SAFEGUARD],[26,E.DIVE],[29,E.BATON_PASS],[34,E.PSYCHIC],[39,E.AQUA_TAIL],[45,E.COIL],[50,E.HYDRO_PUMP]],[A.RELICANTH]:[[1,E.TACKLE],[1,E.HARDEN],[5,E.WATER_GUN],[10,E.ANCIENT_POWER],[15,E.YAWN],[20,E.DIVE],[25,E.TAKE_DOWN],[30,E.AQUA_TAIL],[35,E.REST],[40,E.FLAIL],[45,E.HYDRO_PUMP],[50,E.DOUBLE_EDGE],[55,E.HEAD_SMASH]],[A.LUVDISC]:[[1,E.TACKLE],[1,E.CHARM],[4,E.WATER_GUN],[7,E.AGILITY],[13,E.WISH],[17,E.WATER_PULSE],[20,E.ATTRACT],[22,E.DRAINING_KISS],[26,E.FLAIL],[31,E.SWEET_KISS],[34,E.TAKE_DOWN],[37,E.BABY_DOLL_EYES],[40,E.AQUA_RING],[42,E.SOAK],[46,E.HYDRO_PUMP],[49,E.SAFEGUARD]],[A.BAGON]:[[1,E.EMBER],[1,E.LEER],[5,E.BITE],[10,E.DRAGON_BREATH],[15,E.HEADBUTT],[20,E.SCARY_FACE],[25,E.CRUNCH],[31,E.DRAGON_CLAW],[35,E.ZEN_HEADBUTT],[40,E.FOCUS_ENERGY],[45,E.FLAMETHROWER],[50,E.OUTRAGE],[55,E.DOUBLE_EDGE]],[A.SHELGON]:[[b,E.PROTECT],[1,E.EMBER],[1,E.LEER],[1,E.BITE],[1,E.DRAGON_BREATH],[15,E.HEADBUTT],[20,E.SCARY_FACE],[25,E.CRUNCH],[33,E.DRAGON_CLAW],[39,E.ZEN_HEADBUTT],[46,E.FOCUS_ENERGY],[53,E.FLAMETHROWER],[60,E.OUTRAGE],[67,E.DOUBLE_EDGE]],[A.SALAMENCE]:[[b,E.FLY],[V,E.OUTRAGE],[1,E.PROTECT],[1,E.DRAGON_TAIL],[1,E.DUAL_WINGBEAT],[1,E.ROOST],[1,E.EMBER],[1,E.LEER],[1,E.BITE],[1,E.DRAGON_BREATH],[15,E.HEADBUTT],[20,E.SCARY_FACE],[25,E.CRUNCH],[33,E.DRAGON_CLAW],[39,E.ZEN_HEADBUTT],[46,E.FOCUS_ENERGY],[55,E.FLAMETHROWER],[73,E.DOUBLE_EDGE]],[A.BELDUM]:[[1,E.TACKLE]],[A.METANG]:[[b,E.CONFUSION],[b,E.METAL_CLAW],[1,E.TACKLE],[1,E.BULLET_PUNCH],[1,E.HONE_CLAWS],[6,E.ZEN_HEADBUTT],[12,E.MAGNET_RISE],[18,E.FLASH_CANNON],[26,E.TAKE_DOWN],[34,E.PSYCHIC],[42,E.SCARY_FACE],[50,E.METEOR_MASH],[58,E.IRON_DEFENSE],[66,E.AGILITY],[74,E.HYPER_BEAM]],[A.METAGROSS]:[[b,E.HAMMER_ARM],[V,E.EXPLOSION],[V,E.HONE_CLAWS],[1,E.CONFUSION],[1,E.METAL_CLAW],[1,E.BULLET_PUNCH],[1,E.TACKLE],[6,E.ZEN_HEADBUTT],[12,E.MAGNET_RISE],[16,E.FLASH_CANNON],[26,E.TAKE_DOWN],[34,E.PSYCHIC],[42,E.SCARY_FACE],[52,E.METEOR_MASH],[62,E.IRON_DEFENSE],[72,E.AGILITY],[82,E.HYPER_BEAM]],[A.REGIROCK]:[[1,E.CHARGE_BEAM],[1,E.ROCK_THROW],[6,E.BULLDOZE],[12,E.ANCIENT_POWER],[18,E.STOMP],[24,E.ROCK_SLIDE],[30,E.CURSE],[36,E.IRON_DEFENSE],[42,E.HAMMER_ARM],[48,E.STONE_EDGE],[54,E.SUPERPOWER],[60,E.LOCK_ON],[66,E.ZAP_CANNON],[72,E.HYPER_BEAM],[78,E.EXPLOSION]],[A.REGICE]:[[1,E.CHARGE_BEAM],[1,E.ICY_WIND],[6,E.BULLDOZE],[12,E.ANCIENT_POWER],[18,E.STOMP],[24,E.ICE_BEAM],[30,E.CURSE],[36,E.AMNESIA],[42,E.HAMMER_ARM],[48,E.BLIZZARD],[54,E.SUPERPOWER],[60,E.LOCK_ON],[66,E.ZAP_CANNON],[72,E.HYPER_BEAM],[78,E.EXPLOSION]],[A.REGISTEEL]:[[1,E.CHARGE_BEAM],[1,E.METAL_CLAW],[6,E.BULLDOZE],[12,E.ANCIENT_POWER],[18,E.STOMP],[24,E.IRON_HEAD],[24,E.FLASH_CANNON],[30,E.CURSE],[36,E.AMNESIA],[36,E.IRON_DEFENSE],[42,E.HAMMER_ARM],[48,E.HEAVY_SLAM],[54,E.SUPERPOWER],[60,E.LOCK_ON],[66,E.ZAP_CANNON],[72,E.HYPER_BEAM],[78,E.EXPLOSION]],[A.LATIAS]:[[1,E.STORED_POWER],[1,E.CHARM],[1,E.PSYWAVE],[5,E.HELPING_HAND],[10,E.RECOVER],[15,E.CONFUSION],[20,E.TAILWIND],[25,E.DRAGON_BREATH],[30,E.WISH],[35,E.MIST_BALL],[40,E.ZEN_HEADBUTT],[45,E.DRAGON_PULSE],[50,E.HEAL_PULSE],[55,E.REFLECT_TYPE],[60,E.PSYCHIC],[65,E.GUARD_SPLIT],[70,E.HEALING_WISH]],[A.LATIOS]:[[1,E.STORED_POWER],[1,E.DRAGON_DANCE],[1,E.HEAL_BLOCK],[1,E.PSYWAVE],[5,E.HELPING_HAND],[10,E.RECOVER],[15,E.CONFUSION],[20,E.TAILWIND],[25,E.DRAGON_BREATH],[30,E.ALLY_SWITCH],[35,E.LUSTER_PURGE],[40,E.ZEN_HEADBUTT],[45,E.DRAGON_PULSE],[50,E.HEAL_PULSE],[55,E.SIMPLE_BEAM],[60,E.PSYCHIC],[65,E.POWER_SPLIT],[70,E.MEMENTO]],[A.KYOGRE]:[[1,E.ORIGIN_PULSE],[1,E.WATER_PULSE],[1,E.ANCIENT_POWER],[1,E.BODY_SLAM],[1,E.SCARY_FACE],[9,E.AQUA_TAIL],[18,E.CALM_MIND],[27,E.MUDDY_WATER],[36,E.ICE_BEAM],[45,E.SHEER_COLD],[54,E.AQUA_RING],[72,E.HYDRO_PUMP],[81,E.DOUBLE_EDGE],[90,E.WATER_SPOUT]],[A.GROUDON]:[[1,E.PRECIPICE_BLADES],[1,E.MUD_SHOT],[1,E.ANCIENT_POWER],[1,E.LAVA_PLUME],[1,E.SCARY_FACE],[9,E.EARTH_POWER],[18,E.BULK_UP],[27,E.EARTHQUAKE],[36,E.HAMMER_ARM],[45,E.FISSURE],[54,E.REST],[72,E.FIRE_BLAST],[81,E.SOLAR_BEAM],[90,E.ERUPTION]],[A.RAYQUAZA]:[[1,E.DRAGON_ASCENT],[1,E.TWISTER],[1,E.ANCIENT_POWER],[1,E.AIR_SLASH],[1,E.SCARY_FACE],[9,E.CRUNCH],[18,E.DRAGON_DANCE],[27,E.EXTREME_SPEED],[36,E.DRAGON_PULSE],[45,E.HYPER_VOICE],[54,E.REST],[63,E.FLY],[72,E.HURRICANE],[81,E.OUTRAGE],[90,E.HYPER_BEAM]],[A.JIRACHI]:[[1,E.CONFUSION],[1,E.WISH],[7,E.SWIFT],[21,E.LIFE_DEW],[28,E.ZEN_HEADBUTT],[35,E.GRAVITY],[42,E.PSYCHIC],[49,E.METEOR_MASH],[56,E.HEALING_WISH],[63,E.REST],[70,E.FUTURE_SIGHT],[77,E.DOUBLE_EDGE],[84,E.COSMIC_POWER],[91,E.LAST_RESORT],[98,E.DOOM_DESIRE]],[A.DEOXYS]:[[1,E.CONFUSION],[1,E.LEER],[1,E.WRAP],[7,E.NIGHT_SHADE],[13,E.TELEPORT],[19,E.KNOCK_OFF],[25,E.PSYSHOCK],[31,E.PSYCHIC],[37,E.GRAVITY],[43,E.SKILL_SWAP],[49,E.ZEN_HEADBUTT],[55,E.COSMIC_POWER],[61,E.RECOVER],[67,E.PSYCHO_BOOST],[73,E.HYPER_BEAM]],[A.TURTWIG]:[[1,E.TACKLE],[5,E.WITHDRAW],[5,E.LEAFAGE],[9,E.GROWTH],[13,E.RAZOR_LEAF],[17,E.CURSE],[21,E.BITE],[25,E.MEGA_DRAIN],[29,E.LEECH_SEED],[33,E.SYNTHESIS],[37,E.CRUNCH],[41,E.GIGA_DRAIN],[45,E.LEAF_STORM]],[A.GROTLE]:[[1,E.TACKLE],[1,E.ABSORB],[1,E.WITHDRAW],[1,E.LEAFAGE],[1,E.GROWTH],[13,E.RAZOR_LEAF],[17,E.CURSE],[22,E.BITE],[27,E.MEGA_DRAIN],[32,E.LEECH_SEED],[37,E.SYNTHESIS],[42,E.CRUNCH],[47,E.GIGA_DRAIN],[52,E.LEAF_STORM]],[A.TORTERRA]:[[b,E.EARTHQUAKE],[1,E.TACKLE],[1,E.ABSORB],[1,E.LEAFAGE],[1,E.GROWTH],[1,E.RAZOR_LEAF],[1,E.WITHDRAW],[1,E.WOOD_HAMMER],[17,E.CURSE],[22,E.BITE],[27,E.MEGA_DRAIN],[33,E.LEECH_SEED],[39,E.SYNTHESIS],[45,E.CRUNCH],[51,E.GIGA_DRAIN],[57,E.LEAF_STORM],[63,E.HEADLONG_RUSH]],[A.CHIMCHAR]:[[1,E.SCRATCH],[1,E.LEER],[5,E.EMBER],[9,E.TAUNT],[15,E.FURY_SWIPES],[17,E.FLAME_WHEEL],[23,E.NASTY_PLOT],[25,E.TORMENT],[31,E.FACADE],[33,E.FIRE_SPIN],[39,E.ACROBATICS],[41,E.SLACK_OFF],[47,E.FLAMETHROWER]],[A.MONFERNO]:[[b,E.MACH_PUNCH],[V,E.NASTY_PLOT],[V,E.FACADE],[V,E.FLAMETHROWER],[1,E.SCRATCH],[1,E.LEER],[1,E.EMBER],[9,E.TAUNT],[16,E.FURY_SWIPES],[19,E.FLAME_WHEEL],[26,E.FEINT],[29,E.TORMENT],[36,E.CLOSE_COMBAT],[39,E.FIRE_SPIN],[46,E.ACROBATICS],[49,E.SLACK_OFF],[56,E.FLARE_BLITZ]],[A.INFERNAPE]:[[b,E.CLOSE_COMBAT],[V,E.TAUNT],[V,E.NASTY_PLOT],[V,E.FACADE],[V,E.SLACK_OFF],[V,E.FLAMETHROWER],[1,E.SCRATCH],[1,E.LEER],[1,E.EMBER],[1,E.MACH_PUNCH],[16,E.FURY_SWIPES],[19,E.FLAME_WHEEL],[26,E.FEINT],[29,E.TORMENT],[42,E.FIRE_SPIN],[47,E.FLARE_BLITZ],[52,E.ACROBATICS],[58,E.CALM_MIND],[65,E.RAGING_FURY]],[A.PIPLUP]:[[1,E.POUND],[4,E.GROWL],[5,E.WATER_GUN],[11,E.CHARM],[15,E.PECK],[18,E.BUBBLE_BEAM],[22,E.SWAGGER],[25,E.FURY_ATTACK],[29,E.BRINE],[32,E.WHIRLPOOL],[36,E.MIST],[39,E.DRILL_PECK],[43,E.HYDRO_PUMP]],[A.PRINPLUP]:[[b,E.METAL_CLAW],[1,E.TACKLE],[1,E.GROWL],[1,E.WATER_GUN],[1,E.CHARM],[15,E.PECK],[19,E.BUBBLE_BEAM],[24,E.SWAGGER],[28,E.FURY_ATTACK],[33,E.BRINE],[37,E.WHIRLPOOL],[42,E.MIST],[46,E.DRILL_PECK],[50,E.HYDRO_PUMP]],[A.EMPOLEON]:[[b,E.AQUA_JET],[1,E.TACKLE],[1,E.GROWL],[1,E.WATER_GUN],[1,E.CHARM],[1,E.METAL_CLAW],[11,E.SWORDS_DANCE],[15,E.PECK],[19,E.BUBBLE_BEAM],[24,E.SWAGGER],[28,E.FURY_ATTACK],[33,E.BRINE],[39,E.WHIRLPOOL],[46,E.MIST],[52,E.DRILL_PECK],[59,E.HYDRO_PUMP],[66,E.WAVE_CRASH]],[A.STARLY]:[[1,E.TACKLE],[1,E.GROWL],[5,E.QUICK_ATTACK],[9,E.WING_ATTACK],[13,E.DOUBLE_TEAM],[17,E.ENDEAVOR],[21,E.WHIRLWIND],[25,E.AERIAL_ACE],[29,E.TAKE_DOWN],[33,E.AGILITY],[37,E.BRAVE_BIRD],[41,E.FINAL_GAMBIT]],[A.STARAVIA]:[[1,E.TACKLE],[1,E.GROWL],[1,E.QUICK_ATTACK],[9,E.WING_ATTACK],[13,E.DOUBLE_TEAM],[18,E.ENDEAVOR],[23,E.WHIRLWIND],[28,E.AERIAL_ACE],[33,E.TAKE_DOWN],[38,E.AGILITY],[43,E.BRAVE_BIRD],[48,E.FINAL_GAMBIT]],[A.STARAPTOR]:[[b,E.CLOSE_COMBAT],[1,E.WING_ATTACK],[1,E.TACKLE],[1,E.GROWL],[1,E.QUICK_ATTACK],[13,E.DOUBLE_TEAM],[18,E.ENDEAVOR],[23,E.WHIRLWIND],[28,E.AERIAL_ACE],[33,E.TAKE_DOWN],[41,E.AGILITY],[49,E.BRAVE_BIRD],[57,E.FINAL_GAMBIT]],[A.BIDOOF]:[[1,E.TACKLE],[1,E.GROWL],[5,E.DEFENSE_CURL],[9,E.ROLLOUT],[13,E.HEADBUTT],[17,E.HYPER_FANG],[21,E.YAWN],[25,E.CRUNCH],[29,E.TAKE_DOWN],[33,E.SUPER_FANG],[37,E.SWORDS_DANCE],[41,E.AMNESIA],[45,E.SUPERPOWER],[49,E.CURSE]],[A.BIBAREL]:[[b,E.WATER_GUN],[1,E.TACKLE],[1,E.GROWL],[1,E.AQUA_JET],[1,E.ROTOTILLER],[5,E.DEFENSE_CURL],[9,E.ROLLOUT],[13,E.HEADBUTT],[18,E.HYPER_FANG],[23,E.YAWN],[28,E.CRUNCH],[33,E.TAKE_DOWN],[38,E.SUPER_FANG],[43,E.SWORDS_DANCE],[48,E.AMNESIA],[53,E.SUPERPOWER],[58,E.CURSE]],[A.KRICKETOT]:[[1,E.TACKLE],[1,E.GROWL],[1,E.BIDE],[6,E.STRUGGLE_BUG],[16,E.BUG_BITE]],[A.KRICKETUNE]:[[b,E.FURY_CUTTER],[1,E.TACKLE],[1,E.GROWL],[1,E.BIDE],[1,E.STRUGGLE_BUG],[1,E.BUG_BITE],[14,E.ABSORB],[18,E.SING],[22,E.FOCUS_ENERGY],[26,E.SLASH],[30,E.X_SCISSOR],[34,E.SCREECH],[36,E.FELL_STINGER],[38,E.TAUNT],[42,E.NIGHT_SLASH],[44,E.STICKY_WEB],[46,E.BUG_BUZZ],[50,E.PERISH_SONG]],[A.SHINX]:[[1,E.TACKLE],[1,E.LEER],[4,E.THUNDER_SHOCK],[8,E.CHARGE],[12,E.BITE],[16,E.SPARK],[20,E.ROAR],[24,E.VOLT_SWITCH],[28,E.SCARY_FACE],[32,E.THUNDER_WAVE],[36,E.CRUNCH],[40,E.DISCHARGE],[44,E.SWAGGER],[48,E.WILD_CHARGE]],[A.LUXIO]:[[1,E.TACKLE],[1,E.LEER],[1,E.THUNDER_SHOCK],[1,E.CHARGE],[12,E.BITE],[18,E.SPARK],[24,E.ROAR],[31,E.VOLT_SWITCH],[36,E.SCARY_FACE],[42,E.THUNDER_WAVE],[48,E.CRUNCH],[54,E.DISCHARGE],[60,E.SWAGGER],[68,E.WILD_CHARGE]],[A.LUXRAY]:[[1,E.TACKLE],[1,E.LEER],[1,E.THUNDER_SHOCK],[1,E.CHARGE],[1,E.ELECTRIC_TERRAIN],[12,E.BITE],[18,E.SPARK],[24,E.ROAR],[33,E.VOLT_SWITCH],[40,E.SCARY_FACE],[48,E.THUNDER_WAVE],[56,E.CRUNCH],[64,E.DISCHARGE],[72,E.SWAGGER],[80,E.WILD_CHARGE]],[A.BUDEW]:[[1,E.ABSORB],[1,E.GROWTH],[1,E.STUN_SPORE],[1,E.WORRY_SEED]],[A.ROSERADE]:[[1,E.POISON_STING],[1,E.ABSORB],[1,E.MEGA_DRAIN],[1,E.LEECH_SEED],[1,E.GROWTH],[1,E.STUN_SPORE],[1,E.PETAL_DANCE],[1,E.TOXIC],[1,E.GIGA_DRAIN],[1,E.SWEET_SCENT],[1,E.SYNTHESIS],[1,E.INGRAIN],[1,E.AROMATHERAPY],[1,E.MAGICAL_LEAF],[1,E.WORRY_SEED],[1,E.TOXIC_SPIKES],[1,E.PETAL_BLIZZARD],[1,E.GRASSY_TERRAIN],[1,E.VENOM_DRENCH]],[A.CRANIDOS]:[[1,E.HEADBUTT],[1,E.LEER],[6,E.FOCUS_ENERGY],[10,E.PURSUIT],[15,E.TAKE_DOWN],[19,E.SCARY_FACE],[24,E.ASSURANCE],[28,E.CHIP_AWAY],[33,E.ANCIENT_POWER],[37,E.ZEN_HEADBUTT],[42,E.SCREECH],[46,E.HEAD_SMASH]],[A.RAMPARDOS]:[[b,E.ENDEAVOR],[1,E.HEADBUTT],[1,E.LEER],[1,E.FOCUS_ENERGY],[1,E.PURSUIT],[15,E.TAKE_DOWN],[19,E.SCARY_FACE],[24,E.ASSURANCE],[28,E.CHIP_AWAY],[36,E.ANCIENT_POWER],[43,E.ZEN_HEADBUTT],[51,E.SCREECH],[58,E.HEAD_SMASH]],[A.SHIELDON]:[[1,E.TACKLE],[1,E.PROTECT],[6,E.TAUNT],[10,E.METAL_SOUND],[15,E.TAKE_DOWN],[19,E.IRON_DEFENSE],[24,E.SWAGGER],[28,E.ANCIENT_POWER],[33,E.ENDURE],[37,E.METAL_BURST],[42,E.IRON_HEAD],[46,E.HEAVY_SLAM]],[A.BASTIODON]:[[b,E.BLOCK],[V,E.WIDE_GUARD],[1,E.TACKLE],[1,E.PROTECT],[1,E.TAUNT],[1,E.METAL_SOUND],[15,E.TAKE_DOWN],[19,E.IRON_DEFENSE],[24,E.SWAGGER],[28,E.ANCIENT_POWER],[36,E.ENDURE],[43,E.METAL_BURST],[51,E.IRON_HEAD],[58,E.HEAVY_SLAM]],[A.BURMY]:[[1,E.PROTECT],[1,E.STRUGGLE_BUG],[10,E.TACKLE],[15,E.BUG_BITE],[20,E.STRING_SHOT]],[A.WORMADAM]:[[b,E.QUIVER_DANCE],[1,E.STRUGGLE_BUG],[1,E.TACKLE],[1,E.PROTECT],[1,E.SUCKER_PUNCH],[1,E.BUG_BITE],[1,E.PROTECT],[10,E.TACKLE],[20,E.STRING_SHOT],[23,E.CONFUSION],[26,E.RAZOR_LEAF],[29,E.GROWTH],[32,E.PSYBEAM],[35,E.INFESTATION],[38,E.FLAIL],[41,E.ATTRACT],[44,E.PSYCHIC],[47,E.LEAF_STORM],[50,E.BUG_BUZZ]],[A.MOTHIM]:[[b,E.QUIVER_DANCE],[1,E.STRUGGLE_BUG],[1,E.TACKLE],[1,E.PROTECT],[1,E.BUG_BITE],[10,E.PROTECT],[15,E.BUG_BITE],[20,E.STRING_SHOT],[23,E.CONFUSION],[26,E.GUST],[29,E.POISON_POWDER],[32,E.PSYBEAM],[35,E.ROOST],[38,E.STRUGGLE_BUG],[41,E.AIR_SLASH],[44,E.PSYCHIC],[47,E.LUNGE],[50,E.BUG_BUZZ]],[A.COMBEE]:[[1,E.GUST],[1,E.SWEET_SCENT],[1,E.BUG_BITE],[1,E.STRUGGLE_BUG]],[A.VESPIQUEN]:[[b,E.SLASH],[1,E.GUST],[1,E.POISON_STING],[1,E.CONFUSE_RAY],[1,E.SWEET_SCENT],[1,E.BUG_BITE],[1,E.STRUGGLE_BUG],[4,E.FURY_CUTTER],[8,E.AROMATIC_MIST],[12,E.FELL_STINGER],[16,E.FURY_SWIPES],[20,E.SWAGGER],[24,E.ROOST],[28,E.AIR_SLASH],[32,E.POWER_GEM],[36,E.TOXIC],[40,E.ATTACK_ORDER],[40,E.DEFEND_ORDER],[40,E.HEAL_ORDER],[44,E.DESTINY_BOND]],[A.PACHIRISU]:[[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.BIDE],[5,E.QUICK_ATTACK],[9,E.CHARM],[13,E.SPARK],[17,E.ENDURE],[19,E.NUZZLE],[21,E.SWIFT],[25,E.ELECTRO_BALL],[29,E.SWEET_KISS],[33,E.THUNDER_WAVE],[37,E.SUPER_FANG],[41,E.DISCHARGE],[45,E.LAST_RESORT],[49,E.THUNDER]],[A.BUIZEL]:[[1,E.TACKLE],[4,E.GROWL],[7,E.SOAK],[11,E.QUICK_ATTACK],[15,E.WATER_GUN],[18,E.BITE],[21,E.SWIFT],[24,E.AQUA_JET],[27,E.DOUBLE_HIT],[31,E.WHIRLPOOL],[35,E.LIQUIDATION],[38,E.AQUA_TAIL],[41,E.AGILITY],[45,E.HYDRO_PUMP],[49,E.WAVE_CRASH]],[A.FLOATZEL]:[[1,E.TACKLE],[1,E.GROWL],[1,E.QUICK_ATTACK],[1,E.CRUNCH],[1,E.ICE_FANG],[1,E.SOAK],[15,E.WATER_GUN],[18,E.BITE],[21,E.SWIFT],[24,E.AQUA_JET],[29,E.DOUBLE_HIT],[35,E.WHIRLPOOL],[41,E.LIQUIDATION],[46,E.AQUA_TAIL],[51,E.AGILITY],[57,E.HYDRO_PUMP],[62,E.WAVE_CRASH]],[A.CHERUBI]:[[1,E.TACKLE],[1,E.MORNING_SUN],[5,E.LEAFAGE],[10,E.GROWTH],[15,E.HELPING_HAND],[20,E.MAGICAL_LEAF],[26,E.LEECH_SEED],[30,E.TAKE_DOWN],[35,E.PETAL_BLIZZARD],[40,E.WORRY_SEED],[45,E.SOLAR_BEAM]],[A.CHERRIM]:[[b,E.SUNNY_DAY],[1,E.TACKLE],[1,E.GROWTH],[1,E.MORNING_SUN],[1,E.FLOWER_SHIELD],[1,E.LEAFAGE],[15,E.HELPING_HAND],[20,E.MAGICAL_LEAF],[28,E.LEECH_SEED],[34,E.TAKE_DOWN],[41,E.PETAL_BLIZZARD],[48,E.WORRY_SEED],[55,E.SOLAR_BEAM],[62,E.PETAL_DANCE]],[A.SHELLOS]:[[1,E.WATER_GUN],[1,E.MUD_SLAP],[5,E.HARDEN],[10,E.RECOVER],[15,E.WATER_PULSE],[20,E.ANCIENT_POWER],[25,E.BODY_SLAM],[31,E.MUDDY_WATER],[35,E.EARTH_POWER],[40,E.RAIN_DANCE],[45,E.MEMENTO]],[A.GASTRODON]:[[1,E.WATER_GUN],[1,E.RECOVER],[1,E.HARDEN],[1,E.MUD_SLAP],[1,E.MUD_SPORT],[15,E.WATER_PULSE],[20,E.ANCIENT_POWER],[25,E.BODY_SLAM],[33,E.MUDDY_WATER],[39,E.EARTH_POWER],[46,E.RAIN_DANCE],[53,E.MEMENTO]],[A.AMBIPOM]:[[1,E.SCRATCH],[1,E.SAND_ATTACK],[1,E.TAIL_WHIP],[1,E.ASTONISH],[11,E.BATON_PASS],[15,E.TICKLE],[18,E.FURY_SWIPES],[22,E.SWIFT],[25,E.SCREECH],[29,E.AGILITY],[32,E.DOUBLE_HIT],[36,E.FLING],[39,E.NASTY_PLOT],[43,E.LAST_RESORT]],[A.DRIFLOON]:[[1,E.MINIMIZE],[1,E.ASTONISH],[1,E.CONSTRICT],[4,E.GUST],[8,E.FOCUS_ENERGY],[12,E.PAYBACK],[16,E.HEX],[20,E.SHADOW_BALL],[24,E.STOCKPILE],[24,E.SPIT_UP],[24,E.SWALLOW],[29,E.SELF_DESTRUCT],[32,E.DESTINY_BOND],[36,E.BATON_PASS],[40,E.TAILWIND],[44,E.EXPLOSION]],[A.DRIFBLIM]:[[b,E.PHANTOM_FORCE],[1,E.GUST],[1,E.MINIMIZE],[1,E.FOCUS_ENERGY],[1,E.ASTONISH],[1,E.CONSTRICT],[1,E.STRENGTH_SAP],[12,E.PAYBACK],[16,E.HEX],[20,E.SHADOW_BALL],[24,E.STOCKPILE],[24,E.SPIT_UP],[24,E.SWALLOW],[31,E.SELF_DESTRUCT],[36,E.DESTINY_BOND],[42,E.BATON_PASS],[48,E.TAILWIND],[54,E.EXPLOSION]],[A.BUNEARY]:[[1,E.FRUSTRATION],[1,E.POUND],[1,E.SPLASH],[4,E.DEFENSE_CURL],[8,E.BABY_DOLL_EYES],[12,E.AFTER_YOU],[16,E.QUICK_ATTACK],[20,E.DOUBLE_KICK],[24,E.CHARM],[28,E.BATON_PASS],[32,E.HEADBUTT],[36,E.AGILITY],[40,E.ENTRAINMENT],[44,E.FLATTER],[48,E.BOUNCE],[52,E.HEALING_WISH]],[A.LOPUNNY]:[[b,E.RETURN],[1,E.FRUSTRATION],[1,E.POUND],[1,E.DEFENSE_CURL],[1,E.SPLASH],[1,E.MIRROR_COAT],[1,E.MAGIC_COAT],[1,E.BABY_DOLL_EYES],[1,E.ROTOTILLER],[12,E.AFTER_YOU],[16,E.QUICK_ATTACK],[20,E.DOUBLE_KICK],[24,E.CHARM],[28,E.BATON_PASS],[32,E.HEADBUTT],[36,E.AGILITY],[40,E.ENTRAINMENT],[44,E.FLATTER],[48,E.BOUNCE],[52,E.HEALING_WISH],[56,E.HIGH_JUMP_KICK]],[A.MISMAGIUS]:[[V,E.CONFUSION],[V,E.CONFUSE_RAY],[V,E.MEAN_LOOK],[V,E.HEX],[V,E.PSYBEAM],[V,E.PAIN_SPLIT],[V,E.PAYBACK],[V,E.SHADOW_BALL],[V,E.PERISH_SONG],[1,E.GROWL],[1,E.SPITE],[1,E.PSYWAVE],[1,E.LUCKY_CHANT],[1,E.ASTONISH],[1,E.MAGICAL_LEAF],[1,E.POWER_GEM],[1,E.PHANTOM_FORCE],[1,E.MYSTICAL_FIRE]],[A.HONCHKROW]:[[1,E.PECK],[1,E.ASTONISH],[1,E.GUST],[1,E.HAZE],[1,E.WING_ATTACK],[1,E.NIGHT_SHADE],[1,E.ASSURANCE],[1,E.TAUNT],[1,E.MEAN_LOOK],[1,E.SUCKER_PUNCH],[1,E.NIGHT_SLASH],[1,E.TORMENT],[1,E.QUASH],[1,E.PURSUIT],[25,E.SWAGGER],[35,E.NASTY_PLOT],[45,E.FOUL_PLAY],[55,E.DARK_PULSE],[65,E.COMEUPPANCE]],[A.GLAMEOW]:[[1,E.FAKE_OUT],[5,E.SCRATCH],[8,E.GROWL],[13,E.HYPNOSIS],[17,E.AERIAL_ACE],[20,E.FURY_SWIPES],[25,E.CHARM],[29,E.TAUNT],[32,E.RETALIATE],[37,E.SLASH],[41,E.SUCKER_PUNCH],[44,E.ATTRACT],[48,E.HONE_CLAWS],[50,E.PLAY_ROUGH]],[A.PURUGLY]:[[b,E.SWAGGER],[1,E.SCRATCH],[1,E.PLAY_ROUGH],[1,E.SUCKER_PUNCH],[1,E.GROWL],[1,E.FAKE_OUT],[13,E.HYPNOSIS],[17,E.AERIAL_ACE],[20,E.FURY_SWIPES],[25,E.CHARM],[29,E.TAUNT],[32,E.RETALIATE],[37,E.SLASH],[45,E.BODY_SLAM],[52,E.ATTRACT],[60,E.HONE_CLAWS]],[A.CHINGLING]:[[1,E.WRAP],[1,E.PSYWAVE],[4,E.GROWL],[7,E.ASTONISH],[10,E.CONFUSION],[13,E.YAWN],[16,E.LAST_RESORT],[19,E.ENTRAINMENT],[32,E.UPROAR]],[A.STUNKY]:[[1,E.SCRATCH],[1,E.POISON_GAS],[3,E.FEINT],[6,E.SMOKESCREEN],[9,E.ACID_SPRAY],[12,E.FURY_SWIPES],[15,E.FOCUS_ENERGY],[18,E.BITE],[21,E.VENOSHOCK],[24,E.SCREECH],[27,E.TOXIC],[30,E.SUCKER_PUNCH],[33,E.MEMENTO],[36,E.NIGHT_SLASH],[39,E.BELCH],[42,E.EXPLOSION]],[A.SKUNTANK]:[[b,E.FLAMETHROWER],[1,E.SCRATCH],[1,E.SMOKESCREEN],[1,E.POISON_GAS],[1,E.FEINT],[1,E.ACID_SPRAY],[12,E.FURY_SWIPES],[15,E.FOCUS_ENERGY],[18,E.BITE],[21,E.VENOSHOCK],[24,E.SCREECH],[27,E.TOXIC],[30,E.SUCKER_PUNCH],[33,E.MEMENTO],[38,E.NIGHT_SLASH],[43,E.BELCH],[48,E.EXPLOSION]],[A.BRONZOR]:[[1,E.TACKLE],[1,E.CONFUSION],[4,E.CONFUSE_RAY],[8,E.PAYBACK],[12,E.IMPRISON],[16,E.GYRO_BALL],[20,E.HYPNOSIS],[24,E.SAFEGUARD],[28,E.EXTRASENSORY],[32,E.HEAVY_SLAM],[36,E.IRON_DEFENSE],[40,E.METAL_SOUND],[44,E.FUTURE_SIGHT],[45,E.HEAL_BLOCK]],[A.BRONZONG]:[[b,E.BLOCK],[1,E.TACKLE],[1,E.CONFUSION],[1,E.CONFUSE_RAY],[1,E.SUNNY_DAY],[1,E.WEATHER_BALL],[1,E.PAYBACK],[12,E.IMPRISON],[16,E.GYRO_BALL],[20,E.HYPNOSIS],[24,E.SAFEGUARD],[28,E.EXTRASENSORY],[32,E.HEAVY_SLAM],[38,E.IRON_DEFENSE],[44,E.METAL_SOUND],[50,E.FUTURE_SIGHT],[52,E.HEAL_BLOCK],[56,E.RAIN_DANCE]],[A.BONSLY]:[[1,E.FAKE_TEARS],[1,E.COPYCAT],[1,E.TACKLE],[4,E.FLAIL],[8,E.ROCK_THROW],[12,E.BLOCK],[16,E.MIMIC],[20,E.ROCK_TOMB],[24,E.TEARFUL_LOOK],[28,E.SUCKER_PUNCH],[32,E.ROCK_SLIDE],[36,E.LOW_KICK],[40,E.COUNTER],[44,E.DOUBLE_EDGE]],[A.MIME_JR]:[[1,E.POUND],[1,E.COPYCAT],[1,E.BARRIER],[1,E.TICKLE],[4,E.BATON_PASS],[8,E.ENCORE],[12,E.CONFUSION],[16,E.MIMIC],[20,E.PROTECT],[24,E.RECYCLE],[28,E.PSYBEAM],[32,E.ROLE_PLAY],[36,E.LIGHT_SCREEN],[36,E.REFLECT],[36,E.SAFEGUARD],[40,E.SUCKER_PUNCH],[44,E.DAZZLING_GLEAM],[48,E.PSYCHIC],[52,E.TEETER_DANCE]],[A.HAPPINY]:[[1,E.POUND],[1,E.COPYCAT],[4,E.DEFENSE_CURL],[8,E.SWEET_KISS],[12,E.DISARMING_VOICE],[16,E.COVET],[20,E.CHARM]],[A.CHATOT]:[[1,E.PECK],[1,E.TAUNT],[1,E.HYPER_VOICE],[1,E.CHATTER],[1,E.CONFIDE],[5,E.GROWL],[9,E.MIRROR_MOVE],[13,E.SING],[17,E.FURY_ATTACK],[29,E.ROUND],[33,E.MIMIC],[37,E.ECHOED_VOICE],[41,E.ROOST],[45,E.UPROAR],[49,E.SYNCHRONOISE],[50,E.FEATHER_DANCE]],[A.SPIRITOMB]:[[1,E.NIGHT_SHADE],[1,E.CONFUSE_RAY],[1,E.PURSUIT],[5,E.SHADOW_SNEAK],[10,E.SPITE],[15,E.PAYBACK],[20,E.NASTY_PLOT],[25,E.HEX],[30,E.MEMENTO],[35,E.SUCKER_PUNCH],[40,E.CURSE],[45,E.SHADOW_BALL],[50,E.DARK_PULSE],[55,E.HYPNOSIS],[60,E.DREAM_EATER]],[A.GIBLE]:[[1,E.TACKLE],[1,E.SAND_TOMB],[6,E.SAND_ATTACK],[12,E.DRAGON_BREATH],[18,E.BULLDOZE],[25,E.BITE],[30,E.SLASH],[36,E.DRAGON_CLAW],[42,E.DIG],[48,E.SANDSTORM],[54,E.TAKE_DOWN],[60,E.DRAGON_RUSH]],[A.GABITE]:[[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.DRAGON_BREATH],[1,E.SAND_TOMB],[1,E.DUAL_CHOP],[18,E.BULLDOZE],[27,E.BITE],[34,E.SLASH],[42,E.DRAGON_CLAW],[50,E.DIG],[58,E.SANDSTORM],[66,E.TAKE_DOWN],[74,E.DRAGON_RUSH]],[A.GARCHOMP]:[[b,E.CRUNCH],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.DRAGON_BREATH],[1,E.SAND_TOMB],[1,E.DUAL_CHOP],[18,E.BULLDOZE],[27,E.BITE],[34,E.SLASH],[42,E.DRAGON_CLAW],[52,E.DIG],[62,E.SANDSTORM],[72,E.TAKE_DOWN],[82,E.DRAGON_RUSH]],[A.MUNCHLAX]:[[1,E.TACKLE],[1,E.LICK],[1,E.ODOR_SLEUTH],[4,E.DEFENSE_CURL],[8,E.RECYCLE],[12,E.COVET],[16,E.BITE],[20,E.STOCKPILE],[20,E.SWALLOW],[24,E.SCREECH],[28,E.BODY_SLAM],[32,E.FLING],[36,E.AMNESIA],[40,E.METRONOME],[44,E.FLAIL],[48,E.BELLY_DRUM],[52,E.LAST_RESORT]],[A.RIOLU]:[[1,E.QUICK_ATTACK],[1,E.ENDURE],[4,E.FEINT],[8,E.METAL_CLAW],[12,E.COUNTER],[16,E.WORK_UP],[20,E.ROCK_SMASH],[24,E.VACUUM_WAVE],[28,E.SCREECH],[32,E.QUICK_GUARD],[36,E.FORCE_PALM],[40,E.SWORDS_DANCE],[44,E.HELPING_HAND],[48,E.COPYCAT],[52,E.FINAL_GAMBIT],[56,E.REVERSAL]],[A.LUCARIO]:[[b,E.AURA_SPHERE],[1,E.QUICK_ATTACK],[1,E.ENDURE],[1,E.SCREECH],[1,E.REVERSAL],[1,E.DETECT],[1,E.METAL_CLAW],[1,E.ROCK_SMASH],[1,E.HELPING_HAND],[1,E.FEINT],[1,E.COPYCAT],[1,E.VACUUM_WAVE],[1,E.FINAL_GAMBIT],[1,E.LIFE_DEW],[12,E.COUNTER],[16,E.WORK_UP],[20,E.FORCE_PALM],[24,E.CALM_MIND],[28,E.METAL_SOUND],[32,E.QUICK_GUARD],[36,E.BONE_RUSH],[40,E.SWORDS_DANCE],[44,E.HEAL_PULSE],[48,E.METEOR_MASH],[52,E.DRAGON_PULSE],[56,E.EXTREME_SPEED],[60,E.CLOSE_COMBAT]],[A.HIPPOPOTAS]:[[1,E.SAND_ATTACK],[1,E.TACKLE],[4,E.BITE],[8,E.YAWN],[12,E.SAND_TOMB],[16,E.DIG],[20,E.CRUNCH],[24,E.SANDSTORM],[28,E.TAKE_DOWN],[32,E.ROAR],[36,E.REST],[40,E.EARTHQUAKE],[44,E.DOUBLE_EDGE],[48,E.FISSURE],[52,E.SLACK_OFF]],[A.HIPPOWDON]:[[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.BITE],[1,E.YAWN],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[12,E.SAND_TOMB],[16,E.DIG],[20,E.CRUNCH],[24,E.SANDSTORM],[28,E.TAKE_DOWN],[32,E.ROAR],[38,E.REST],[44,E.EARTHQUAKE],[50,E.DOUBLE_EDGE],[56,E.FISSURE],[62,E.SLACK_OFF]],[A.SKORUPI]:[[1,E.POISON_STING],[1,E.LEER],[3,E.HONE_CLAWS],[6,E.FELL_STINGER],[9,E.POISON_FANG],[12,E.BITE],[15,E.TOXIC_SPIKES],[18,E.BUG_BITE],[21,E.VENOSHOCK],[24,E.KNOCK_OFF],[27,E.SCARY_FACE],[30,E.PIN_MISSILE],[33,E.TOXIC],[36,E.NIGHT_SLASH],[39,E.CROSS_POISON],[42,E.X_SCISSOR],[45,E.ACUPRESSURE],[48,E.CRUNCH]],[A.DRAPION]:[[1,E.POISON_STING],[1,E.LEER],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[1,E.HONE_CLAWS],[1,E.FELL_STINGER],[9,E.POISON_FANG],[12,E.BITE],[15,E.TOXIC_SPIKES],[18,E.BUG_BITE],[21,E.VENOSHOCK],[24,E.KNOCK_OFF],[27,E.SCARY_FACE],[30,E.PIN_MISSILE],[33,E.TOXIC],[36,E.NIGHT_SLASH],[39,E.CROSS_POISON],[44,E.X_SCISSOR],[49,E.ACUPRESSURE],[54,E.CRUNCH]],[A.CROAGUNK]:[[1,E.POISON_STING],[1,E.MUD_SLAP],[4,E.ASTONISH],[8,E.TAUNT],[12,E.FLATTER],[16,E.LOW_KICK],[20,E.VENOSHOCK],[24,E.SUCKER_PUNCH],[28,E.SWAGGER],[32,E.POISON_JAB],[36,E.TOXIC],[40,E.NASTY_PLOT],[44,E.SLUDGE_BOMB],[48,E.BELCH]],[A.TOXICROAK]:[[1,E.POISON_STING],[1,E.MUD_SLAP],[1,E.TAUNT],[1,E.ASTONISH],[12,E.FLATTER],[16,E.LOW_KICK],[20,E.VENOSHOCK],[24,E.SUCKER_PUNCH],[28,E.SWAGGER],[32,E.POISON_JAB],[36,E.TOXIC],[42,E.NASTY_PLOT],[48,E.SLUDGE_BOMB],[54,E.BELCH]],[A.CARNIVINE]:[[1,E.BIND],[1,E.GROWTH],[1,E.LEAFAGE],[7,E.BITE],[11,E.VINE_WHIP],[17,E.SWEET_SCENT],[21,E.INGRAIN],[27,E.GRASS_KNOT],[31,E.LEAF_TORNADO],[37,E.STOCKPILE],[37,E.SPIT_UP],[37,E.SWALLOW],[41,E.CRUNCH],[47,E.SEED_BOMB],[50,E.POWER_WHIP]],[A.FINNEON]:[[1,E.POUND],[6,E.WATER_GUN],[13,E.RAIN_DANCE],[17,E.GUST],[22,E.WATER_PULSE],[26,E.ATTRACT],[29,E.SAFEGUARD],[33,E.AQUA_RING],[38,E.WHIRLPOOL],[42,E.U_TURN],[45,E.BOUNCE],[49,E.TAILWIND],[54,E.SOAK]],[A.LUMINEON]:[[1,E.POUND],[1,E.GUST],[1,E.WATER_GUN],[1,E.SOAK],[13,E.RAIN_DANCE],[22,E.WATER_PULSE],[26,E.ATTRACT],[29,E.SAFEGUARD],[35,E.AQUA_RING],[42,E.WHIRLPOOL],[48,E.U_TURN],[53,E.BOUNCE],[59,E.TAILWIND]],[A.MANTYKE]:[[1,E.TACKLE],[1,E.WATER_GUN],[4,E.SUPERSONIC],[8,E.WING_ATTACK],[12,E.WATER_PULSE],[16,E.WIDE_GUARD],[20,E.AGILITY],[24,E.BUBBLE_BEAM],[28,E.HEADBUTT],[32,E.AIR_SLASH],[36,E.AQUA_RING],[40,E.BOUNCE],[44,E.TAKE_DOWN],[48,E.HYDRO_PUMP]],[A.SNOVER]:[[1,E.LEER],[1,E.POWDER_SNOW],[5,E.LEAFAGE],[10,E.MIST],[15,E.ICE_SHARD],[20,E.RAZOR_LEAF],[25,E.ICY_WIND],[30,E.SWAGGER],[35,E.INGRAIN],[41,E.WOOD_HAMMER],[45,E.BLIZZARD],[50,E.SHEER_COLD]],[A.ABOMASNOW]:[[b,E.ICE_PUNCH],[1,E.LEER],[1,E.MIST],[1,E.POWDER_SNOW],[1,E.LEAFAGE],[1,E.AURORA_VEIL],[15,E.ICE_SHARD],[20,E.RAZOR_LEAF],[25,E.ICY_WIND],[30,E.SWAGGER],[35,E.INGRAIN],[43,E.WOOD_HAMMER],[49,E.BLIZZARD],[56,E.SHEER_COLD]],[A.WEAVILE]:[[1,E.SCRATCH],[1,E.LEER],[1,E.AGILITY],[1,E.QUICK_ATTACK],[1,E.SLASH],[1,E.BEAT_UP],[1,E.TAUNT],[1,E.ASSURANCE],[1,E.ICE_SHARD],[1,E.EMBARGO],[18,E.METAL_CLAW],[24,E.ICY_WIND],[30,E.FURY_SWIPES],[36,E.HONE_CLAWS],[42,E.FLING],[48,E.NASTY_PLOT],[54,E.SCREECH],[60,E.NIGHT_SLASH],[66,E.DARK_PULSE]],[A.MAGNEZONE]:[[1,E.TACKLE],[1,E.SUPERSONIC],[1,E.THUNDER_SHOCK],[1,E.THUNDER_WAVE],[1,E.BARRIER],[1,E.TRI_ATTACK],[1,E.MIRROR_COAT],[1,E.MAGNETIC_FLUX],[1,E.ELECTRIC_TERRAIN],[12,E.ELECTRO_BALL],[16,E.GYRO_BALL],[20,E.SPARK],[24,E.SCREECH],[28,E.MAGNET_RISE],[34,E.FLASH_CANNON],[40,E.DISCHARGE],[46,E.METAL_SOUND],[52,E.LIGHT_SCREEN],[58,E.LOCK_ON],[64,E.ZAP_CANNON]],[A.LICKILICKY]:[[1,E.SUPERSONIC],[1,E.DEFENSE_CURL],[1,E.LICK],[1,E.TACKLE],[1,E.ROLLOUT],[1,E.WRING_OUT],[6,E.REST],[18,E.WRAP],[24,E.DISABLE],[30,E.STOMP],[36,E.KNOCK_OFF],[42,E.SCREECH],[48,E.SLAM],[54,E.POWER_WHIP],[60,E.BELLY_DRUM]],[A.RHYPERIOR]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.HAMMER_ARM],[1,E.SMACK_DOWN],[1,E.BULLDOZE],[15,E.HORN_ATTACK],[20,E.SCARY_FACE],[25,E.STOMP],[30,E.ROCK_BLAST],[35,E.DRILL_RUN],[40,E.TAKE_DOWN],[47,E.EARTHQUAKE],[54,E.STONE_EDGE],[61,E.MEGAHORN],[68,E.HORN_DRILL],[75,E.ROCK_WRECKER]],[A.TANGROWTH]:[[1,E.BIND],[1,E.ABSORB],[1,E.GROWTH],[1,E.STUN_SPORE],[1,E.BLOCK],[1,E.CONSTRICT],[12,E.MEGA_DRAIN],[16,E.VINE_WHIP],[20,E.POISON_POWDER],[24,E.DOUBLE_HIT],[28,E.KNOCK_OFF],[32,E.GIGA_DRAIN],[34,E.ANCIENT_POWER],[36,E.SLEEP_POWDER],[40,E.SLAM],[44,E.TICKLE],[48,E.POWER_WHIP],[52,E.INGRAIN],[56,E.GRASSY_TERRAIN]],[A.ELECTIVIRE]:[[1,E.LEER],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.CHARGE],[1,E.ION_DELUGE],[12,E.SWIFT],[16,E.SHOCK_WAVE],[20,E.THUNDER_WAVE],[24,E.SCREECH],[28,E.THUNDER_PUNCH],[34,E.DISCHARGE],[40,E.LOW_KICK],[46,E.THUNDERBOLT],[52,E.LIGHT_SCREEN],[58,E.THUNDER],[64,E.GIGA_IMPACT]],[A.MAGMORTAR]:[[1,E.LEER],[1,E.EMBER],[1,E.SMOKESCREEN],[1,E.SMOG],[12,E.CLEAR_SMOG],[16,E.FLAME_WHEEL],[20,E.CONFUSE_RAY],[24,E.SCARY_FACE],[28,E.FIRE_PUNCH],[34,E.LAVA_PLUME],[40,E.LOW_KICK],[46,E.FLAMETHROWER],[52,E.SUNNY_DAY],[58,E.FIRE_BLAST],[64,E.HYPER_BEAM]],[A.TOGEKISS]:[[b,E.AIR_SLASH],[1,E.POUND],[1,E.DOUBLE_EDGE],[1,E.GROWL],[1,E.METRONOME],[1,E.SKY_ATTACK],[1,E.TRI_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.SAFEGUARD],[1,E.BATON_PASS],[1,E.EXTREME_SPEED],[1,E.ANCIENT_POWER],[1,E.FOLLOW_ME],[1,E.WISH],[1,E.YAWN],[1,E.LAST_RESORT],[1,E.AURA_SPHERE],[1,E.AFTER_YOU],[1,E.FAIRY_WIND],[1,E.LIFE_DEW]],[A.YANMEGA]:[[V,E.HYPNOSIS],[1,E.TACKLE],[1,E.DOUBLE_TEAM],[1,E.AIR_CUTTER],[1,E.NIGHT_SLASH],[1,E.WING_ATTACK],[1,E.AIR_SLASH],[1,E.BUG_BUZZ],[14,E.QUICK_ATTACK],[17,E.DETECT],[22,E.SUPERSONIC],[27,E.UPROAR],[30,E.BUG_BITE],[33,E.ANCIENT_POWER],[38,E.FEINT],[43,E.SLASH],[46,E.SCREECH],[49,E.U_TURN]],[A.LEAFEON]:[[b,E.SAPPY_SEED],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.GROWL],[1,E.SWIFT],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[5,E.SAND_ATTACK],[10,E.RAZOR_LEAF],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.LEECH_SEED],[30,E.MAGICAL_LEAF],[35,E.SYNTHESIS],[40,E.SUNNY_DAY],[45,E.GIGA_DRAIN],[50,E.SWORDS_DANCE],[55,E.LEAF_BLADE],[60,E.LAST_RESORT]],[A.GLACEON]:[[b,E.FREEZY_FROST],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.SWIFT],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[5,E.SAND_ATTACK],[10,E.ICY_WIND],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.ICE_SHARD],[30,E.BITE],[35,E.ICE_FANG],[40,E.SNOWSCAPE],[45,E.FREEZE_DRY],[50,E.MIRROR_COAT],[55,E.BLIZZARD],[60,E.LAST_RESORT]],[A.GLISCOR]:[[1,E.POISON_STING],[1,E.SAND_ATTACK],[1,E.HARDEN],[1,E.POISON_TAIL],[1,E.SLASH],[1,E.POISON_JAB],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[13,E.QUICK_ATTACK],[16,E.FURY_CUTTER],[19,E.KNOCK_OFF],[22,E.ACROBATICS],[27,E.NIGHT_SLASH],[30,E.U_TURN],[35,E.SCREECH],[40,E.X_SCISSOR],[45,E.CRABHAMMER],[50,E.SWORDS_DANCE]],[A.MAMOSWINE]:[[b,E.DOUBLE_HIT],[1,E.TACKLE],[1,E.FLAIL],[1,E.POWDER_SNOW],[1,E.MUD_SLAP],[1,E.ODOR_SLEUTH],[1,E.ANCIENT_POWER],[1,E.ICE_FANG],[15,E.ICE_SHARD],[20,E.MIST],[25,E.ENDURE],[30,E.ICY_WIND],[37,E.AMNESIA],[44,E.TAKE_DOWN],[51,E.EARTHQUAKE],[58,E.BLIZZARD],[65,E.THRASH]],[A.PORYGON_Z]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[1,E.CONVERSION],[1,E.RECYCLE],[1,E.MAGNET_RISE],[1,E.NASTY_PLOT],[1,E.TRICK_ROOM],[15,E.THUNDER_SHOCK],[20,E.PSYBEAM],[25,E.CONVERSION_2],[30,E.AGILITY],[35,E.RECOVER],[40,E.DISCHARGE],[45,E.TRI_ATTACK],[50,E.MAGIC_COAT],[55,E.LOCK_ON],[60,E.ZAP_CANNON],[65,E.HYPER_BEAM]],[A.GALLADE]:[[b,E.SLASH],[1,E.LEER],[1,E.GROWL],[1,E.PSYBEAM],[1,E.CONFUSION],[1,E.PSYCHIC],[1,E.HYPNOSIS],[1,E.DOUBLE_TEAM],[1,E.DREAM_EATER],[1,E.CHARM],[1,E.FURY_CUTTER],[1,E.FUTURE_SIGHT],[1,E.IMPRISON],[1,E.CALM_MIND],[1,E.LEAF_BLADE],[1,E.NIGHT_SLASH],[1,E.SACRED_SWORD],[1,E.DISARMING_VOICE],[1,E.DRAINING_KISS],[1,E.LIFE_DEW],[1,E.AQUA_CUTTER],[9,E.HELPING_HAND],[12,E.FEINT],[15,E.TELEPORT],[18,E.AERIAL_ACE],[23,E.FALSE_SWIPE],[28,E.PROTECT],[35,E.SWORDS_DANCE],[42,E.PSYCHO_CUT],[49,E.HEAL_PULSE],[56,E.WIDE_GUARD],[56,E.QUICK_GUARD],[63,E.CLOSE_COMBAT]],[A.PROBOPASS]:[[b,E.TRI_ATTACK],[1,E.TACKLE],[1,E.HARDEN],[1,E.IRON_DEFENSE],[1,E.BLOCK],[1,E.ROCK_THROW],[1,E.GRAVITY],[1,E.MAGNET_RISE],[1,E.WIDE_GUARD],[1,E.MAGNETIC_FLUX],[13,E.THUNDER_WAVE],[16,E.REST],[19,E.SPARK],[22,E.ROCK_SLIDE],[25,E.POWER_GEM],[28,E.ROCK_BLAST],[31,E.DISCHARGE],[34,E.SANDSTORM],[37,E.EARTH_POWER],[40,E.STONE_EDGE],[43,E.ZAP_CANNON],[43,E.LOCK_ON]],[A.DUSKNOIR]:[[1,E.FIRE_PUNCH],[1,E.ICE_PUNCH],[1,E.THUNDER_PUNCH],[1,E.BIND],[1,E.LEER],[1,E.DISABLE],[1,E.ASTONISH],[1,E.PURSUIT],[1,E.SHADOW_PUNCH],[1,E.GRAVITY],[1,E.SHADOW_SNEAK],[12,E.CONFUSE_RAY],[16,E.NIGHT_SHADE],[20,E.PAYBACK],[24,E.WILL_O_WISP],[28,E.MEAN_LOOK],[32,E.HEX],[36,E.CURSE],[42,E.SHADOW_BALL],[48,E.FUTURE_SIGHT],[54,E.DESTINY_BOND]],[A.FROSLASS]:[[b,E.HEX],[1,E.HEADBUTT],[1,E.LEER],[1,E.BITE],[1,E.DOUBLE_TEAM],[1,E.POWDER_SNOW],[1,E.PROTECT],[1,E.DESTINY_BOND],[1,E.WEATHER_BALL],[1,E.CRUNCH],[1,E.ASTONISH],[1,E.ICE_FANG],[1,E.OMINOUS_WIND],[15,E.ICE_SHARD],[20,E.DRAINING_KISS],[25,E.ICY_WIND],[30,E.FROST_BREATH],[35,E.CONFUSE_RAY],[40,E.SNOWSCAPE],[47,E.WILL_O_WISP],[54,E.AURORA_VEIL],[61,E.SHADOW_BALL],[68,E.BLIZZARD]],[A.ROTOM]:[[1,E.DOUBLE_TEAM],[1,E.ASTONISH],[5,E.THUNDER_SHOCK],[10,E.CONFUSE_RAY],[15,E.CHARGE],[20,E.ELECTRO_BALL],[25,E.THUNDER_WAVE],[30,E.SHOCK_WAVE],[35,E.HEX],[40,E.SUBSTITUTE],[45,E.TRICK],[50,E.DISCHARGE],[55,E.UPROAR]],[A.UXIE]:[[V,E.TRI_ATTACK],[V,E.SNORE],[V,E.SAFEGUARD],[V,E.IRON_TAIL],[V,E.PSYCHO_CUT],[V,E.WONDER_ROOM],[V,E.MAGIC_ROOM],[V,E.ROUND],[V,E.ALLY_SWITCH],[V,E.EXPANDING_FORCE],[1,E.CONFUSION],[1,E.REST],[7,E.SWIFT],[14,E.ENDURE],[21,E.PSYBEAM],[28,E.IMPRISON],[35,E.EXTRASENSORY],[42,E.AMNESIA],[49,E.PSYCHIC],[56,E.YAWN],[63,E.FUTURE_SIGHT],[70,E.FLAIL],[77,E.MEMENTO],[84,E.MYSTICAL_POWER]],[A.MESPRIT]:[[V,E.TRI_ATTACK],[V,E.SNORE],[V,E.SAFEGUARD],[V,E.IRON_TAIL],[V,E.PSYCHO_CUT],[V,E.WONDER_ROOM],[V,E.MAGIC_ROOM],[V,E.ROUND],[V,E.ALLY_SWITCH],[V,E.EXPANDING_FORCE],[1,E.CONFUSION],[1,E.REST],[7,E.SWIFT],[14,E.PROTECT],[21,E.PSYBEAM],[28,E.IMPRISON],[35,E.EXTRASENSORY],[42,E.CHARM],[49,E.PSYCHIC],[56,E.FLATTER],[63,E.FUTURE_SIGHT],[70,E.COPYCAT],[77,E.HEALING_WISH],[84,E.MYSTICAL_POWER]],[A.AZELF]:[[V,E.SELF_DESTRUCT],[V,E.TRI_ATTACK],[V,E.SNORE],[V,E.SAFEGUARD],[V,E.IRON_TAIL],[V,E.PAYBACK],[V,E.ASSURANCE],[V,E.PSYCHO_CUT],[V,E.WONDER_ROOM],[V,E.MAGIC_ROOM],[V,E.ROUND],[V,E.ALLY_SWITCH],[V,E.EXPANDING_FORCE],[1,E.CONFUSION],[1,E.REST],[7,E.SWIFT],[14,E.DETECT],[21,E.PSYBEAM],[28,E.IMPRISON],[35,E.EXTRASENSORY],[42,E.NASTY_PLOT],[49,E.PSYCHIC],[56,E.UPROAR],[63,E.FUTURE_SIGHT],[70,E.LAST_RESORT],[77,E.EXPLOSION],[84,E.MYSTICAL_POWER]],[A.DIALGA]:[[1,E.SCARY_FACE],[1,E.METAL_CLAW],[8,E.DRAGON_BREATH],[16,E.ANCIENT_POWER],[24,E.SLASH],[32,E.FLASH_CANNON],[40,E.DRAGON_CLAW],[48,E.AURA_SPHERE],[56,E.POWER_GEM],[64,E.METAL_BURST],[72,E.EARTH_POWER],[80,E.IRON_TAIL],[88,E.ROAR_OF_TIME]],[A.PALKIA]:[[1,E.SCARY_FACE],[1,E.WATER_PULSE],[8,E.DRAGON_BREATH],[16,E.ANCIENT_POWER],[24,E.SLASH],[32,E.AQUA_RING],[48,E.AURA_SPHERE],[56,E.POWER_GEM],[64,E.AQUA_TAIL],[72,E.EARTH_POWER],[80,E.SPACIAL_REND],[88,E.HYDRO_PUMP]],[A.HEATRAN]:[[1,E.LEER],[1,E.FIRE_SPIN],[6,E.METAL_CLAW],[12,E.ANCIENT_POWER],[18,E.FIRE_FANG],[24,E.SCARY_FACE],[30,E.IRON_HEAD],[36,E.CRUNCH],[42,E.LAVA_PLUME],[48,E.METAL_SOUND],[54,E.EARTH_POWER],[60,E.HEAT_WAVE],[66,E.STONE_EDGE],[72,E.MAGMA_STORM]],[A.REGIGIGAS]:[[1,E.POUND],[1,E.CONFUSE_RAY],[1,E.DIZZY_PUNCH],[1,E.FORESIGHT],[6,E.PAYBACK],[12,E.REVENGE],[18,E.STOMP],[24,E.PROTECT],[30,E.KNOCK_OFF],[36,E.MEGA_PUNCH],[42,E.BODY_PRESS],[48,E.WIDE_GUARD],[54,E.ZEN_HEADBUTT],[60,E.HEAVY_SLAM],[66,E.HAMMER_ARM],[72,E.GIGA_IMPACT],[78,E.CRUSH_GRIP]],[A.GIRATINA]:[[1,E.SHADOW_SNEAK],[1,E.DEFOG],[1,E.DRAGON_BREATH],[7,E.OMINOUS_WIND],[14,E.ANCIENT_POWER],[21,E.HEX],[28,E.SLASH],[35,E.SCARY_FACE],[42,E.SHADOW_CLAW],[49,E.PAIN_SPLIT],[56,E.AURA_SPHERE],[63,E.DRAGON_CLAW],[70,E.EARTH_POWER],[77,E.SHADOW_FORCE],[84,E.DESTINY_BOND]],[A.CRESSELIA]:[[1,E.CONFUSION],[1,E.DOUBLE_TEAM],[6,E.MIST],[12,E.AURORA_BEAM],[18,E.PSYBEAM],[24,E.ALLY_SWITCH],[30,E.SLASH],[36,E.PSYCHO_CUT],[42,E.MOONLIGHT],[48,E.SAFEGUARD],[54,E.PSYCHIC],[60,E.MOONBLAST],[66,E.FUTURE_SIGHT],[72,E.LUNAR_DANCE],[72,E.LUNAR_BLESSING]],[A.PHIONE]:[[1,E.WATER_GUN],[9,E.CHARM],[16,E.SUPERSONIC],[24,E.BUBBLE_BEAM],[31,E.ACID_ARMOR],[39,E.WHIRLPOOL],[46,E.WATER_PULSE],[54,E.AQUA_RING],[61,E.DIVE],[69,E.RAIN_DANCE],[75,E.TAKE_HEART]],[A.MANAPHY]:[[1,E.HEART_SWAP],[1,E.TAIL_GLOW],[1,E.WATER_GUN],[9,E.CHARM],[16,E.SUPERSONIC],[24,E.BUBBLE_BEAM],[31,E.ACID_ARMOR],[39,E.WHIRLPOOL],[46,E.WATER_PULSE],[54,E.AQUA_RING],[61,E.DIVE],[69,E.RAIN_DANCE],[76,E.TAKE_HEART]],[A.DARKRAI]:[[1,E.DISABLE],[1,E.OMINOUS_WIND],[1,E.PURSUIT],[11,E.QUICK_ATTACK],[20,E.HYPNOSIS],[29,E.SUCKER_PUNCH],[38,E.NIGHT_SHADE],[47,E.DOUBLE_TEAM],[57,E.HAZE],[66,E.DARK_VOID],[75,E.NASTY_PLOT],[84,E.DREAM_EATER],[93,E.DARK_PULSE]],[A.SHAYMIN]:[[1,E.LEAFAGE],[1,E.GROWTH],[10,E.MAGICAL_LEAF],[19,E.LEECH_SEED],[28,E.SYNTHESIS],[37,E.SWEET_SCENT],[46,E.NATURAL_GIFT],[55,E.WORRY_SEED],[64,E.AROMATHERAPY],[73,E.ENERGY_BALL],[82,E.SWEET_KISS],[91,E.HEALING_WISH],[100,E.SEED_FLARE]],[A.ARCEUS]:[[1,E.SEISMIC_TOSS],[1,E.COSMIC_POWER],[1,E.PUNISHMENT],[10,E.GRAVITY],[20,E.EARTH_POWER],[30,E.HYPER_VOICE],[40,E.EXTREME_SPEED],[50,E.HEALING_WISH],[60,E.FUTURE_SIGHT],[70,E.RECOVER],[80,E.HYPER_BEAM],[90,E.PERISH_SONG],[100,E.JUDGMENT]],[A.VICTINI]:[[1,E.CONFUSION],[1,E.QUICK_ATTACK],[1,E.FOCUS_ENERGY],[1,E.FLAME_CHARGE],[1,E.V_CREATE],[7,E.WORK_UP],[14,E.INCINERATE],[21,E.STORED_POWER],[28,E.HEADBUTT],[35,E.ENDURE],[42,E.ZEN_HEADBUTT],[49,E.INFERNO],[56,E.REVERSAL],[63,E.SEARING_SHOT],[70,E.DOUBLE_EDGE],[77,E.FLARE_BLITZ],[84,E.OVERHEAT],[91,E.FINAL_GAMBIT]],[A.SNIVY]:[[1,E.TACKLE],[4,E.LEER],[5,E.VINE_WHIP],[10,E.WRAP],[13,E.GROWTH],[16,E.MAGICAL_LEAF],[19,E.LEECH_SEED],[22,E.MEGA_DRAIN],[25,E.SLAM],[28,E.LEAF_BLADE],[31,E.COIL],[34,E.GIGA_DRAIN],[37,E.GASTRO_ACID],[40,E.LEAF_STORM]],[A.SERVINE]:[[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.WRAP],[1,E.LEER],[13,E.GROWTH],[16,E.MAGICAL_LEAF],[20,E.LEECH_SEED],[24,E.MEGA_DRAIN],[28,E.SLAM],[32,E.LEAF_BLADE],[36,E.COIL],[40,E.GIGA_DRAIN],[44,E.GASTRO_ACID],[48,E.LEAF_STORM]],[A.SERPERIOR]:[[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.WRAP],[1,E.LEER],[13,E.GROWTH],[16,E.MAGICAL_LEAF],[20,E.LEECH_SEED],[24,E.MEGA_DRAIN],[28,E.SLAM],[32,E.LEAF_BLADE],[38,E.COIL],[44,E.GIGA_DRAIN],[50,E.GASTRO_ACID],[56,E.LEAF_STORM]],[A.TEPIG]:[[1,E.TACKLE],[3,E.TAIL_WHIP],[5,E.EMBER],[9,E.ENDURE],[13,E.DEFENSE_CURL],[15,E.FLAME_CHARGE],[19,E.SMOG],[21,E.ROLLOUT],[25,E.TAKE_DOWN],[27,E.HEAT_CRASH],[31,E.ASSURANCE],[33,E.FLAMETHROWER],[37,E.HEAD_SMASH],[39,E.ROAR],[43,E.FLARE_BLITZ]],[A.PIGNITE]:[[b,E.ARM_THRUST],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.EMBER],[1,E.ENDURE],[13,E.DEFENSE_CURL],[15,E.FLAME_CHARGE],[20,E.SMOG],[23,E.ROLLOUT],[28,E.TAKE_DOWN],[31,E.HEAT_CRASH],[36,E.ASSURANCE],[39,E.FLAMETHROWER],[44,E.HEAD_SMASH],[47,E.ROAR],[52,E.FLARE_BLITZ]],[A.EMBOAR]:[[V,E.ENDURE],[V,E.HAMMER_ARM],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.EMBER],[1,E.ARM_THRUST],[13,E.DEFENSE_CURL],[15,E.FLAME_CHARGE],[20,E.SMOG],[23,E.ROLLOUT],[28,E.TAKE_DOWN],[31,E.HEAT_CRASH],[38,E.ASSURANCE],[43,E.FLAMETHROWER],[50,E.HEAD_SMASH],[55,E.ROAR],[62,E.FLARE_BLITZ]],[A.OSHAWOTT]:[[1,E.TACKLE],[5,E.TAIL_WHIP],[5,E.WATER_GUN],[11,E.SOAK],[13,E.FOCUS_ENERGY],[17,E.RAZOR_SHELL],[19,E.FURY_CUTTER],[23,E.WATER_PULSE],[25,E.AERIAL_ACE],[29,E.AQUA_JET],[31,E.ENCORE],[35,E.AQUA_TAIL],[37,E.RETALIATE],[41,E.SWORDS_DANCE],[43,E.HYDRO_PUMP]],[A.DEWOTT]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.SOAK],[13,E.FOCUS_ENERGY],[18,E.RAZOR_SHELL],[21,E.FURY_CUTTER],[26,E.WATER_PULSE],[29,E.AERIAL_ACE],[34,E.AQUA_JET],[37,E.ENCORE],[42,E.AQUA_TAIL],[45,E.RETALIATE],[50,E.SWORDS_DANCE],[53,E.HYDRO_PUMP]],[A.SAMUROTT]:[[b,E.SLASH],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.MEGAHORN],[1,E.SOAK],[13,E.FOCUS_ENERGY],[18,E.RAZOR_SHELL],[21,E.FURY_CUTTER],[25,E.WATER_PULSE],[29,E.AERIAL_ACE],[34,E.AQUA_JET],[39,E.ENCORE],[46,E.AQUA_TAIL],[51,E.RETALIATE],[58,E.SWORDS_DANCE],[63,E.HYDRO_PUMP]],[A.PATRAT]:[[1,E.TACKLE],[3,E.LEER],[6,E.BITE],[8,E.BIDE],[11,E.DETECT],[13,E.SAND_ATTACK],[16,E.CRUNCH],[18,E.HYPNOSIS],[21,E.SUPER_FANG],[23,E.AFTER_YOU],[26,E.FOCUS_ENERGY],[28,E.WORK_UP],[31,E.HYPER_FANG],[33,E.NASTY_PLOT],[36,E.MEAN_LOOK],[38,E.BATON_PASS],[41,E.SLAM]],[A.WATCHOG]:[[b,E.CONFUSE_RAY],[V,E.WORK_UP],[1,E.TACKLE],[1,E.LEER],[1,E.BITE],[1,E.LOW_KICK],[1,E.ROTOTILLER],[8,E.BIDE],[11,E.DETECT],[13,E.SAND_ATTACK],[16,E.CRUNCH],[18,E.HYPNOSIS],[22,E.SUPER_FANG],[25,E.AFTER_YOU],[29,E.FOCUS_ENERGY],[32,E.PSYCH_UP],[36,E.HYPER_FANG],[39,E.NASTY_PLOT],[43,E.MEAN_LOOK],[46,E.BATON_PASS],[50,E.SLAM]],[A.LILLIPUP]:[[1,E.TACKLE],[1,E.LEER],[4,E.WORK_UP],[8,E.BITE],[12,E.RETALIATE],[17,E.BABY_DOLL_EYES],[20,E.PLAY_ROUGH],[24,E.CRUNCH],[28,E.TAKE_DOWN],[32,E.HELPING_HAND],[36,E.REVERSAL],[40,E.ROAR],[44,E.LAST_RESORT],[48,E.GIGA_IMPACT]],[A.HERDIER]:[[1,E.TACKLE],[1,E.LEER],[1,E.BITE],[1,E.WORK_UP],[12,E.RETALIATE],[19,E.BABY_DOLL_EYES],[24,E.PLAY_ROUGH],[30,E.CRUNCH],[36,E.TAKE_DOWN],[42,E.HELPING_HAND],[48,E.REVERSAL],[54,E.ROAR],[60,E.LAST_RESORT],[66,E.GIGA_IMPACT]],[A.STOUTLAND]:[[1,E.TACKLE],[1,E.LEER],[1,E.BITE],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[1,E.WORK_UP],[12,E.RETALIATE],[19,E.BABY_DOLL_EYES],[24,E.PLAY_ROUGH],[30,E.CRUNCH],[38,E.TAKE_DOWN],[46,E.HELPING_HAND],[54,E.REVERSAL],[62,E.ROAR],[70,E.LAST_RESORT],[78,E.GIGA_IMPACT]],[A.PURRLOIN]:[[1,E.SCRATCH],[1,E.GROWL],[4,E.SAND_ATTACK],[5,E.FAKE_OUT],[12,E.FURY_SWIPES],[16,E.TORMENT],[21,E.ASSURANCE],[24,E.HONE_CLAWS],[28,E.SUCKER_PUNCH],[32,E.NASTY_PLOT],[36,E.NIGHT_SLASH],[40,E.PLAY_ROUGH]],[A.LIEPARD]:[[1,E.ASSIST],[1,E.SCRATCH],[1,E.SAND_ATTACK],[1,E.GROWL],[1,E.FAKE_OUT],[12,E.FURY_SWIPES],[16,E.TORMENT],[23,E.ASSURANCE],[28,E.HONE_CLAWS],[34,E.SUCKER_PUNCH],[40,E.NASTY_PLOT],[46,E.NIGHT_SLASH],[52,E.PLAY_ROUGH]],[A.PANSAGE]:[[1,E.SCRATCH],[1,E.PLAY_NICE],[4,E.LEER],[7,E.LICK],[10,E.VINE_WHIP],[13,E.FURY_SWIPES],[16,E.LEECH_SEED],[19,E.BITE],[22,E.SEED_BOMB],[25,E.TORMENT],[28,E.FLING],[31,E.ACROBATICS],[34,E.GRASS_KNOT],[37,E.RECYCLE],[40,E.NATURAL_GIFT],[43,E.CRUNCH]],[A.SIMISAGE]:[[V,E.SCRATCH],[V,E.PLAY_NICE],[V,E.VINE_WHIP],[V,E.LEECH_SEED],[V,E.BITE],[V,E.TORMENT],[V,E.FLING],[V,E.ACROBATICS],[V,E.GRASS_KNOT],[V,E.RECYCLE],[V,E.NATURAL_GIFT],[V,E.CRUNCH],[1,E.LEER],[1,E.LICK],[1,E.FURY_SWIPES],[1,E.SEED_BOMB]],[A.PANSEAR]:[[1,E.SCRATCH],[1,E.PLAY_NICE],[4,E.LEER],[7,E.LICK],[10,E.INCINERATE],[13,E.FURY_SWIPES],[16,E.YAWN],[19,E.BITE],[22,E.FLAME_BURST],[25,E.AMNESIA],[28,E.FLING],[31,E.ACROBATICS],[34,E.FIRE_BLAST],[37,E.RECYCLE],[40,E.NATURAL_GIFT],[43,E.CRUNCH]],[A.SIMISEAR]:[[V,E.SCRATCH],[V,E.PLAY_NICE],[V,E.INCINERATE],[V,E.YAWN],[V,E.BITE],[V,E.AMNESIA],[V,E.FLING],[V,E.ACROBATICS],[V,E.FIRE_BLAST],[V,E.RECYCLE],[V,E.NATURAL_GIFT],[V,E.CRUNCH],[1,E.LEER],[1,E.LICK],[1,E.FURY_SWIPES],[1,E.FLAME_BURST]],[A.PANPOUR]:[[1,E.SCRATCH],[1,E.PLAY_NICE],[4,E.LEER],[7,E.LICK],[10,E.WATER_GUN],[13,E.FURY_SWIPES],[16,E.WATER_SPORT],[19,E.BITE],[22,E.SCALD],[25,E.TAUNT],[28,E.FLING],[31,E.ACROBATICS],[34,E.BRINE],[37,E.RECYCLE],[40,E.NATURAL_GIFT],[43,E.CRUNCH]],[A.SIMIPOUR]:[[V,E.SCRATCH],[V,E.PLAY_NICE],[V,E.WATER_GUN],[V,E.WATER_SPORT],[V,E.BITE],[V,E.TAUNT],[V,E.FLING],[V,E.ACROBATICS],[V,E.BRINE],[V,E.RECYCLE],[V,E.NATURAL_GIFT],[V,E.CRUNCH],[1,E.LEER],[1,E.LICK],[1,E.FURY_SWIPES],[1,E.SCALD]],[A.MUNNA]:[[1,E.DEFENSE_CURL],[1,E.STORED_POWER],[1,E.PSYWAVE],[4,E.HYPNOSIS],[8,E.PSYBEAM],[12,E.IMPRISON],[16,E.MOONLIGHT],[20,E.MAGIC_COAT],[24,E.ZEN_HEADBUTT],[28,E.CALM_MIND],[32,E.YAWN],[36,E.PSYCHIC],[40,E.MOONBLAST],[44,E.DREAM_EATER],[48,E.FUTURE_SIGHT],[52,E.WONDER_ROOM]],[A.MUSHARNA]:[[1,E.PSYWAVE],[1,E.PSYBEAM],[1,E.PSYCHIC],[1,E.HYPNOSIS],[1,E.DEFENSE_CURL],[1,E.LUCKY_CHANT],[1,E.DREAM_EATER],[1,E.MOONLIGHT],[1,E.FUTURE_SIGHT],[1,E.MAGIC_COAT],[1,E.YAWN],[1,E.IMPRISON],[1,E.CALM_MIND],[1,E.ZEN_HEADBUTT],[1,E.WONDER_ROOM],[1,E.STORED_POWER],[1,E.MOONBLAST],[1,E.PSYCHIC_TERRAIN]],[A.PIDOVE]:[[1,E.GUST],[1,E.GROWL],[4,E.LEER],[8,E.QUICK_ATTACK],[12,E.TAUNT],[16,E.AIR_CUTTER],[20,E.SWAGGER],[24,E.FEATHER_DANCE],[28,E.DETECT],[32,E.AIR_SLASH],[36,E.ROOST],[40,E.TAILWIND],[44,E.SKY_ATTACK]],[A.TRANQUILL]:[[1,E.GUST],[1,E.LEER],[1,E.GROWL],[1,E.QUICK_ATTACK],[12,E.TAUNT],[16,E.AIR_CUTTER],[20,E.SWAGGER],[26,E.FEATHER_DANCE],[34,E.DETECT],[38,E.AIR_SLASH],[44,E.ROOST],[50,E.TAILWIND],[56,E.SKY_ATTACK]],[A.UNFEZANT]:[[1,E.GUST],[1,E.LEER],[1,E.GROWL],[1,E.QUICK_ATTACK],[12,E.TAUNT],[16,E.AIR_CUTTER],[20,E.SWAGGER],[26,E.FEATHER_DANCE],[36,E.DETECT],[42,E.AIR_SLASH],[50,E.ROOST],[58,E.TAILWIND],[66,E.SKY_ATTACK]],[A.BLITZLE]:[[1,E.QUICK_ATTACK],[4,E.TAIL_WHIP],[8,E.CHARGE],[11,E.SHOCK_WAVE],[15,E.THUNDER_WAVE],[18,E.FLAME_CHARGE],[22,E.SPARK],[25,E.STOMP],[29,E.DISCHARGE],[33,E.AGILITY],[35,E.WILD_CHARGE],[40,E.THRASH]],[A.ZEBSTRIKA]:[[1,E.TAIL_WHIP],[1,E.THUNDER_WAVE],[1,E.QUICK_ATTACK],[1,E.CHARGE],[1,E.ION_DELUGE],[11,E.SHOCK_WAVE],[18,E.FLAME_CHARGE],[25,E.SPARK],[31,E.STOMP],[36,E.DISCHARGE],[42,E.AGILITY],[47,E.WILD_CHARGE],[53,E.THRASH]],[A.ROGGENROLA]:[[1,E.SAND_ATTACK],[1,E.TACKLE],[4,E.HARDEN],[8,E.STEALTH_ROCK],[12,E.MUD_SLAP],[16,E.SMACK_DOWN],[20,E.IRON_DEFENSE],[24,E.HEADBUTT],[28,E.ROCK_SLIDE],[32,E.ROCK_BLAST],[36,E.SANDSTORM],[40,E.STONE_EDGE],[44,E.EXPLOSION]],[A.BOLDORE]:[[b,E.POWER_GEM],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.HARDEN],[1,E.STEALTH_ROCK],[12,E.MUD_SLAP],[16,E.SMACK_DOWN],[20,E.IRON_DEFENSE],[24,E.HEADBUTT],[30,E.ROCK_SLIDE],[36,E.ROCK_BLAST],[42,E.SANDSTORM],[48,E.STONE_EDGE],[54,E.EXPLOSION]],[A.GIGALITH]:[[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.HARDEN],[1,E.POWER_GEM],[1,E.STEALTH_ROCK],[12,E.MUD_SLAP],[16,E.SMACK_DOWN],[20,E.IRON_DEFENSE],[24,E.HEADBUTT],[30,E.ROCK_SLIDE],[36,E.ROCK_BLAST],[42,E.SANDSTORM],[48,E.STONE_EDGE],[54,E.EXPLOSION]],[A.WOOBAT]:[[1,E.GUST],[1,E.ATTRACT],[5,E.CONFUSION],[10,E.ENDEAVOR],[15,E.AIR_CUTTER],[20,E.IMPRISON],[25,E.ASSURANCE],[30,E.AMNESIA],[35,E.AIR_SLASH],[40,E.PSYCHIC],[45,E.CALM_MIND],[50,E.FUTURE_SIGHT],[55,E.SIMPLE_BEAM]],[A.SWOOBAT]:[[1,E.GUST],[1,E.CONFUSION],[1,E.ATTRACT],[1,E.ENDEAVOR],[15,E.AIR_CUTTER],[20,E.IMPRISON],[25,E.ASSURANCE],[30,E.AMNESIA],[35,E.AIR_SLASH],[40,E.PSYCHIC],[45,E.CALM_MIND],[50,E.FUTURE_SIGHT],[55,E.SIMPLE_BEAM]],[A.DRILBUR]:[[1,E.MUD_SLAP],[1,E.RAPID_SPIN],[1,E.MUD_SPORT],[4,E.SCRATCH],[8,E.HONE_CLAWS],[12,E.FURY_SWIPES],[16,E.METAL_CLAW],[20,E.SANDSTORM],[24,E.CRUSH_CLAW],[28,E.ROCK_SLIDE],[32,E.DIG],[36,E.SWORDS_DANCE],[40,E.DRILL_RUN],[44,E.EARTHQUAKE],[48,E.FISSURE]],[A.EXCADRILL]:[[b,E.HORN_DRILL],[1,E.SCRATCH],[1,E.MUD_SLAP],[1,E.RAPID_SPIN],[1,E.MUD_SPORT],[1,E.ROTOTILLER],[1,E.HONE_CLAWS],[12,E.FURY_SWIPES],[16,E.METAL_CLAW],[20,E.SANDSTORM],[24,E.CRUSH_CLAW],[28,E.ROCK_SLIDE],[34,E.DIG],[40,E.SWORDS_DANCE],[46,E.DRILL_RUN],[52,E.EARTHQUAKE],[58,E.FISSURE]],[A.AUDINO]:[[1,E.POUND],[1,E.PLAY_NICE],[4,E.DISARMING_VOICE],[9,E.BABY_DOLL_EYES],[12,E.HELPING_HAND],[16,E.GROWL],[20,E.ZEN_HEADBUTT],[24,E.LIFE_DEW],[28,E.AFTER_YOU],[32,E.TAKE_DOWN],[36,E.SIMPLE_BEAM],[40,E.HYPER_VOICE],[44,E.HEAL_PULSE],[48,E.DOUBLE_EDGE],[52,E.ENTRAINMENT],[56,E.MISTY_TERRAIN],[60,E.LAST_RESORT]],[A.TIMBURR]:[[1,E.POUND],[1,E.LEER],[4,E.LOW_KICK],[8,E.ROCK_THROW],[12,E.FOCUS_ENERGY],[16,E.BULK_UP],[20,E.ROCK_SLIDE],[24,E.SLAM],[28,E.SCARY_FACE],[32,E.DYNAMIC_PUNCH],[36,E.HAMMER_ARM],[40,E.STONE_EDGE],[44,E.SUPERPOWER],[48,E.FOCUS_PUNCH]],[A.GURDURR]:[[1,E.POUND],[1,E.LEER],[1,E.LOW_KICK],[1,E.ROCK_THROW],[1,E.BIDE],[12,E.FOCUS_ENERGY],[16,E.BULK_UP],[20,E.ROCK_SLIDE],[24,E.SLAM],[30,E.SCARY_FACE],[36,E.DYNAMIC_PUNCH],[42,E.HAMMER_ARM],[48,E.STONE_EDGE],[54,E.SUPERPOWER],[60,E.FOCUS_PUNCH]],[A.CONKELDURR]:[[1,E.POUND],[1,E.LEER],[1,E.LOW_KICK],[1,E.ROCK_THROW],[1,E.BIDE],[12,E.FOCUS_ENERGY],[16,E.BULK_UP],[20,E.ROCK_SLIDE],[24,E.SLAM],[30,E.SCARY_FACE],[36,E.DYNAMIC_PUNCH],[42,E.HAMMER_ARM],[48,E.STONE_EDGE],[54,E.SUPERPOWER],[60,E.FOCUS_PUNCH]],[A.TYMPOLE]:[[1,E.BUBBLE],[1,E.GROWL],[1,E.ECHOED_VOICE],[4,E.ACID],[8,E.SUPERSONIC],[12,E.MUD_SHOT],[16,E.ROUND],[20,E.BUBBLE_BEAM],[24,E.FLAIL],[28,E.UPROAR],[32,E.AQUA_RING],[36,E.HYPER_VOICE],[40,E.MUDDY_WATER],[44,E.RAIN_DANCE],[48,E.HYDRO_PUMP]],[A.PALPITOAD]:[[1,E.BUBBLE],[1,E.GROWL],[1,E.SUPERSONIC],[1,E.ACID],[1,E.ECHOED_VOICE],[12,E.MUD_SHOT],[16,E.ROUND],[20,E.BUBBLE_BEAM],[24,E.FLAIL],[30,E.UPROAR],[37,E.AQUA_RING],[42,E.HYPER_VOICE],[48,E.MUDDY_WATER],[54,E.RAIN_DANCE],[60,E.HYDRO_PUMP]],[A.SEISMITOAD]:[[b,E.DRAIN_PUNCH],[1,E.BUBBLE],[1,E.GROWL],[1,E.SUPERSONIC],[1,E.ACID],[1,E.GASTRO_ACID],[1,E.ECHOED_VOICE],[12,E.MUD_SHOT],[16,E.ROUND],[20,E.BUBBLE_BEAM],[24,E.FLAIL],[30,E.UPROAR],[39,E.AQUA_RING],[46,E.HYPER_VOICE],[54,E.MUDDY_WATER],[62,E.RAIN_DANCE],[70,E.HYDRO_PUMP]],[A.THROH]:[[1,E.ROCK_SMASH],[1,E.LEER],[1,E.BIDE],[1,E.MAT_BLOCK],[1,E.BIND],[5,E.FOCUS_ENERGY],[10,E.CIRCLE_THROW],[15,E.WIDE_GUARD],[20,E.REVENGE],[25,E.BULK_UP],[30,E.STORM_THROW],[35,E.VITAL_THROW],[40,E.SEISMIC_TOSS],[45,E.ENDURE],[50,E.REVERSAL],[55,E.SUPERPOWER]],[A.SAWK]:[[1,E.LEER],[1,E.ROCK_SMASH],[1,E.BIDE],[5,E.FOCUS_ENERGY],[10,E.DOUBLE_KICK],[15,E.QUICK_GUARD],[20,E.LOW_SWEEP],[25,E.BULK_UP],[30,E.RETALIATE],[35,E.BRICK_BREAK],[40,E.COUNTER],[45,E.ENDURE],[50,E.REVERSAL],[55,E.CLOSE_COMBAT]],[A.SEWADDLE]:[[1,E.TACKLE],[1,E.STRING_SHOT],[8,E.BUG_BITE],[15,E.RAZOR_LEAF],[22,E.STRUGGLE_BUG],[29,E.ENDURE],[31,E.STICKY_WEB],[36,E.BUG_BUZZ],[43,E.FLAIL]],[A.SWADLOON]:[[b,E.PROTECT],[1,E.TACKLE],[1,E.RAZOR_LEAF],[1,E.STRING_SHOT],[1,E.BUG_BITE],[1,E.GRASS_WHISTLE],[22,E.STRUGGLE_BUG],[29,E.ENDURE],[31,E.STICKY_WEB],[36,E.BUG_BUZZ],[43,E.FLAIL]],[A.LEAVANNY]:[[b,E.SLASH],[V,E.BUG_BITE],[V,E.STICKY_WEB],[V,E.BUG_BUZZ],[1,E.PROTECT],[1,E.TACKLE],[1,E.RAZOR_LEAF],[1,E.STRING_SHOT],[1,E.GRASS_WHISTLE],[1,E.ENDURE],[1,E.FLAIL],[1,E.FALSE_SWIPE],[22,E.STRUGGLE_BUG],[29,E.FELL_STINGER],[32,E.HELPING_HAND],[36,E.LEAF_BLADE],[39,E.X_SCISSOR],[43,E.ENTRAINMENT],[46,E.SWORDS_DANCE],[50,E.LEAF_STORM]],[A.VENIPEDE]:[[1,E.POISON_STING],[1,E.DEFENSE_CURL],[4,E.ROLLOUT],[8,E.PROTECT],[12,E.POISON_TAIL],[16,E.SCREECH],[20,E.BUG_BITE],[24,E.VENOSHOCK],[28,E.TAKE_DOWN],[32,E.AGILITY],[36,E.TOXIC],[40,E.VENOM_DRENCH],[44,E.DOUBLE_EDGE]],[A.WHIRLIPEDE]:[[b,E.IRON_DEFENSE],[1,E.POISON_STING],[1,E.DEFENSE_CURL],[1,E.PROTECT],[1,E.ROLLOUT],[12,E.POISON_TAIL],[16,E.SCREECH],[20,E.BUG_BITE],[26,E.VENOSHOCK],[32,E.TAKE_DOWN],[38,E.AGILITY],[44,E.TOXIC],[50,E.VENOM_DRENCH],[56,E.DOUBLE_EDGE]],[A.SCOLIPEDE]:[[1,E.POISON_STING],[1,E.DEFENSE_CURL],[1,E.PROTECT],[1,E.ROLLOUT],[1,E.BATON_PASS],[1,E.IRON_DEFENSE],[12,E.POISON_TAIL],[16,E.SCREECH],[20,E.BUG_BITE],[26,E.VENOSHOCK],[34,E.TAKE_DOWN],[42,E.AGILITY],[50,E.TOXIC],[58,E.VENOM_DRENCH],[66,E.DOUBLE_EDGE],[74,E.MEGAHORN]],[A.COTTONEE]:[[1,E.ABSORB],[1,E.HELPING_HAND],[3,E.FAIRY_WIND],[6,E.STUN_SPORE],[12,E.MEGA_DRAIN],[15,E.RAZOR_LEAF],[18,E.GROWTH],[21,E.POISON_POWDER],[24,E.GIGA_DRAIN],[27,E.CHARM],[30,E.LEECH_SEED],[33,E.COTTON_SPORE],[36,E.ENERGY_BALL],[39,E.SUNNY_DAY],[42,E.ENDEAVOR],[45,E.COTTON_GUARD],[48,E.SOLAR_BEAM]],[A.WHIMSICOTT]:[[1,E.GUST],[1,E.ABSORB],[1,E.MEGA_DRAIN],[1,E.LEECH_SEED],[1,E.GROWTH],[1,E.RAZOR_LEAF],[1,E.SOLAR_BEAM],[1,E.POISON_POWDER],[1,E.STUN_SPORE],[1,E.COTTON_SPORE],[1,E.GIGA_DRAIN],[1,E.CHARM],[1,E.SUNNY_DAY],[1,E.MEMENTO],[1,E.HELPING_HAND],[1,E.ENDEAVOR],[1,E.TAILWIND],[1,E.ENERGY_BALL],[1,E.COTTON_GUARD],[1,E.HURRICANE],[1,E.FAIRY_WIND],[1,E.MOONBLAST]],[A.PETILIL]:[[1,E.ABSORB],[1,E.GROWTH],[3,E.HELPING_HAND],[6,E.STUN_SPORE],[9,E.MEGA_DRAIN],[12,E.CHARM],[15,E.MAGICAL_LEAF],[18,E.SLEEP_POWDER],[21,E.GIGA_DRAIN],[24,E.LEECH_SEED],[27,E.AFTER_YOU],[30,E.ENERGY_BALL],[33,E.SYNTHESIS],[36,E.SUNNY_DAY],[39,E.ENTRAINMENT],[42,E.LEAF_STORM]],[A.LILLIGANT]:[[b,E.PETAL_DANCE],[1,E.ABSORB],[1,E.MEGA_DRAIN],[1,E.LEECH_SEED],[1,E.GROWTH],[1,E.STUN_SPORE],[1,E.SLEEP_POWDER],[1,E.GIGA_DRAIN],[1,E.CHARM],[1,E.SYNTHESIS],[1,E.SUNNY_DAY],[1,E.HELPING_HAND],[1,E.TEETER_DANCE],[1,E.ENERGY_BALL],[1,E.LEAF_STORM],[1,E.QUIVER_DANCE],[1,E.ENTRAINMENT],[1,E.AFTER_YOU],[1,E.PETAL_BLIZZARD],[5,E.MAGICAL_LEAF]],[A.BASCULIN]:[[1,E.TAIL_WHIP],[1,E.WATER_GUN],[4,E.TACKLE],[8,E.FLAIL],[12,E.AQUA_JET],[16,E.BITE],[20,E.SCARY_FACE],[24,E.HEADBUTT],[28,E.SOAK],[32,E.CRUNCH],[36,E.TAKE_DOWN],[40,E.FINAL_GAMBIT],[44,E.WAVE_CRASH],[48,E.THRASH],[52,E.DOUBLE_EDGE],[56,E.HEAD_SMASH]],[A.SANDILE]:[[1,E.LEER],[1,E.POWER_TRIP],[3,E.SAND_ATTACK],[6,E.HONE_CLAWS],[9,E.SAND_TOMB],[12,E.SCARY_FACE],[15,E.BITE],[18,E.TORMENT],[21,E.DIG],[24,E.SWAGGER],[27,E.CRUNCH],[30,E.SANDSTORM],[33,E.FOUL_PLAY],[36,E.EARTHQUAKE],[39,E.THRASH]],[A.KROKOROK]:[[1,E.SAND_ATTACK],[1,E.LEER],[1,E.HONE_CLAWS],[1,E.POWER_TRIP],[9,E.SAND_TOMB],[12,E.SCARY_FACE],[15,E.BITE],[18,E.TORMENT],[21,E.DIG],[24,E.SWAGGER],[27,E.CRUNCH],[32,E.SANDSTORM],[35,E.FOUL_PLAY],[42,E.EARTHQUAKE],[47,E.THRASH]],[A.KROOKODILE]:[[1,E.SAND_ATTACK],[1,E.LEER],[1,E.HONE_CLAWS],[1,E.POWER_TRIP],[9,E.SAND_TOMB],[12,E.SCARY_FACE],[15,E.BITE],[18,E.TORMENT],[21,E.DIG],[24,E.SWAGGER],[27,E.CRUNCH],[32,E.SANDSTORM],[35,E.FOUL_PLAY],[44,E.EARTHQUAKE],[51,E.THRASH],[58,E.OUTRAGE]],[A.DARUMAKA]:[[1,E.TACKLE],[1,E.EMBER],[4,E.TAUNT],[8,E.BITE],[12,E.INCINERATE],[16,E.WORK_UP],[20,E.FIRE_FANG],[24,E.HEADBUTT],[28,E.FIRE_PUNCH],[32,E.UPROAR],[36,E.BELLY_DRUM],[40,E.FLARE_BLITZ],[44,E.THRASH],[48,E.SUPERPOWER]],[A.DARMANITAN]:[[b,E.HAMMER_ARM],[1,E.TACKLE],[1,E.BITE],[1,E.EMBER],[1,E.TAUNT],[12,E.INCINERATE],[16,E.WORK_UP],[20,E.FIRE_FANG],[24,E.HEADBUTT],[28,E.FIRE_PUNCH],[32,E.UPROAR],[38,E.BELLY_DRUM],[44,E.FLARE_BLITZ],[50,E.THRASH],[56,E.SUPERPOWER]],[A.MARACTUS]:[[1,E.PECK],[1,E.ABSORB],[1,E.INGRAIN],[1,E.AFTER_YOU],[1,E.SPIKY_SHIELD],[4,E.GROWTH],[8,E.MEGA_DRAIN],[12,E.LEECH_SEED],[16,E.SUCKER_PUNCH],[20,E.PIN_MISSILE],[24,E.GIGA_DRAIN],[28,E.SWEET_SCENT],[32,E.SYNTHESIS],[36,E.PETAL_BLIZZARD],[40,E.COTTON_SPORE],[44,E.SUNNY_DAY],[48,E.SOLAR_BEAM],[52,E.ACUPRESSURE],[56,E.PETAL_DANCE],[60,E.COTTON_GUARD]],[A.DWEBBLE]:[[1,E.SAND_ATTACK],[1,E.FURY_CUTTER],[4,E.WITHDRAW],[8,E.SMACK_DOWN],[12,E.BUG_BITE],[16,E.FLAIL],[20,E.SLASH],[24,E.ROCK_SLIDE],[28,E.STEALTH_ROCK],[32,E.ROCK_BLAST],[36,E.X_SCISSOR],[40,E.ROCK_POLISH],[44,E.SHELL_SMASH],[48,E.ROCK_WRECKER]],[A.CRUSTLE]:[[1,E.SAND_ATTACK],[1,E.WITHDRAW],[1,E.FURY_CUTTER],[1,E.SMACK_DOWN],[12,E.BUG_BITE],[16,E.FLAIL],[20,E.SLASH],[24,E.ROCK_SLIDE],[28,E.STEALTH_ROCK],[32,E.ROCK_BLAST],[38,E.X_SCISSOR],[44,E.ROCK_POLISH],[50,E.SHELL_SMASH],[56,E.ROCK_WRECKER]],[A.SCRAGGY]:[[1,E.LEER],[1,E.LOW_KICK],[4,E.PAYBACK],[8,E.HEADBUTT],[12,E.SAND_ATTACK],[16,E.FACADE],[20,E.PROTECT],[24,E.BEAT_UP],[28,E.SCARY_FACE],[32,E.BRICK_BREAK],[36,E.SWAGGER],[40,E.CRUNCH],[44,E.HIGH_JUMP_KICK],[48,E.FOCUS_PUNCH],[52,E.HEAD_SMASH]],[A.SCRAFTY]:[[1,E.HEADBUTT],[1,E.LEER],[1,E.LOW_KICK],[1,E.PAYBACK],[1,E.FEINT_ATTACK],[12,E.SAND_ATTACK],[16,E.FACADE],[20,E.PROTECT],[24,E.BEAT_UP],[28,E.SCARY_FACE],[32,E.BRICK_BREAK],[36,E.SWAGGER],[42,E.CRUNCH],[48,E.HIGH_JUMP_KICK],[54,E.FOCUS_PUNCH],[60,E.HEAD_SMASH]],[A.SIGILYPH]:[[1,E.GUST],[1,E.CONFUSION],[5,E.GRAVITY],[10,E.HYPNOSIS],[15,E.AIR_CUTTER],[20,E.PSYBEAM],[25,E.WHIRLWIND],[30,E.COSMIC_POWER],[35,E.AIR_SLASH],[40,E.PSYCHIC],[45,E.TAILWIND],[50,E.LIGHT_SCREEN],[50,E.REFLECT],[55,E.SKY_ATTACK],[60,E.SKILL_SWAP]],[A.YAMASK]:[[1,E.PROTECT],[1,E.ASTONISH],[1,E.HEAL_BLOCK],[4,E.HAZE],[8,E.NIGHT_SHADE],[12,E.DISABLE],[16,E.WILL_O_WISP],[20,E.CRAFTY_SHIELD],[24,E.HEX],[28,E.MEAN_LOOK],[32,E.GRUDGE],[36,E.CURSE],[40,E.SHADOW_BALL],[44,E.DARK_PULSE],[48,E.GUARD_SPLIT],[48,E.POWER_SPLIT],[52,E.DESTINY_BOND]],[A.COFAGRIGUS]:[[b,E.SHADOW_CLAW],[1,E.NIGHT_SHADE],[1,E.HAZE],[1,E.PROTECT],[1,E.SCARY_FACE],[1,E.ASTONISH],[1,E.HEAL_BLOCK],[12,E.DISABLE],[16,E.WILL_O_WISP],[20,E.CRAFTY_SHIELD],[24,E.HEX],[28,E.MEAN_LOOK],[32,E.GRUDGE],[38,E.CURSE],[44,E.SHADOW_BALL],[50,E.DARK_PULSE],[56,E.GUARD_SPLIT],[56,E.POWER_SPLIT],[62,E.DESTINY_BOND]],[A.TIRTOUGA]:[[1,E.WATER_GUN],[1,E.WITHDRAW],[1,E.BIDE],[3,E.PROTECT],[6,E.AQUA_JET],[9,E.SMACK_DOWN],[12,E.ANCIENT_POWER],[15,E.BITE],[18,E.WIDE_GUARD],[21,E.BRINE],[24,E.ROCK_SLIDE],[27,E.CRUNCH],[30,E.CURSE],[33,E.IRON_DEFENSE],[36,E.AQUA_TAIL],[39,E.RAIN_DANCE],[42,E.HYDRO_PUMP],[45,E.SHELL_SMASH]],[A.CARRACOSTA]:[[1,E.WATER_GUN],[1,E.WITHDRAW],[1,E.PROTECT],[1,E.AQUA_JET],[1,E.BIDE],[9,E.SMACK_DOWN],[12,E.ANCIENT_POWER],[15,E.BITE],[18,E.WIDE_GUARD],[21,E.BRINE],[24,E.ROCK_SLIDE],[27,E.CRUNCH],[30,E.CURSE],[33,E.IRON_DEFENSE],[36,E.AQUA_TAIL],[41,E.RAIN_DANCE],[46,E.HYDRO_PUMP],[51,E.SHELL_SMASH]],[A.ARCHEN]:[[1,E.LEER],[1,E.QUICK_ATTACK],[3,E.ROCK_THROW],[6,E.WING_ATTACK],[9,E.DRAGON_BREATH],[12,E.ANCIENT_POWER],[15,E.PLUCK],[18,E.QUICK_GUARD],[21,E.U_TURN],[24,E.ROCK_SLIDE],[27,E.SCARY_FACE],[30,E.CRUNCH],[33,E.AGILITY],[36,E.TAILWIND],[39,E.DRAGON_CLAW],[42,E.THRASH],[45,E.ENDEAVOR]],[A.ARCHEOPS]:[[1,E.WING_ATTACK],[1,E.LEER],[1,E.ROCK_THROW],[1,E.QUICK_ATTACK],[9,E.DRAGON_BREATH],[12,E.ANCIENT_POWER],[15,E.PLUCK],[18,E.QUICK_GUARD],[21,E.U_TURN],[24,E.ROCK_SLIDE],[27,E.SCARY_FACE],[30,E.CRUNCH],[33,E.AGILITY],[36,E.TAILWIND],[41,E.DRAGON_CLAW],[46,E.THRASH],[51,E.ENDEAVOR]],[A.TRUBBISH]:[[1,E.POUND],[1,E.POISON_GAS],[3,E.RECYCLE],[6,E.ACID_SPRAY],[9,E.AMNESIA],[12,E.CLEAR_SMOG],[15,E.TOXIC_SPIKES],[18,E.SLUDGE],[21,E.STOCKPILE],[21,E.SWALLOW],[24,E.TAKE_DOWN],[27,E.SLUDGE_BOMB],[30,E.TOXIC],[33,E.BELCH],[37,E.PAIN_SPLIT],[39,E.GUNK_SHOT],[42,E.EXPLOSION]],[A.GARBODOR]:[[1,E.POUND],[1,E.TAKE_DOWN],[1,E.POISON_GAS],[1,E.METAL_CLAW],[1,E.RECYCLE],[1,E.ACID_SPRAY],[9,E.AMNESIA],[12,E.CLEAR_SMOG],[15,E.TOXIC_SPIKES],[18,E.SLUDGE],[21,E.STOCKPILE],[21,E.SWALLOW],[24,E.BODY_SLAM],[27,E.SLUDGE_BOMB],[30,E.TOXIC],[33,E.BELCH],[39,E.PAIN_SPLIT],[43,E.GUNK_SHOT],[48,E.EXPLOSION]],[A.ZORUA]:[[1,E.SCRATCH],[1,E.LEER],[4,E.TORMENT],[8,E.HONE_CLAWS],[12,E.FURY_SWIPES],[16,E.SCARY_FACE],[20,E.TAUNT],[24,E.KNOCK_OFF],[28,E.FAKE_TEARS],[32,E.AGILITY],[36,E.IMPRISON],[40,E.NIGHT_DAZE],[44,E.NASTY_PLOT],[48,E.FOUL_PLAY]],[A.ZOROARK]:[[b,E.NIGHT_SLASH],[1,E.SCRATCH],[1,E.LEER],[1,E.TORMENT],[1,E.U_TURN],[1,E.HONE_CLAWS],[1,E.SCARY_FACE],[1,E.PURSUIT],[12,E.FURY_SWIPES],[20,E.TAUNT],[24,E.KNOCK_OFF],[28,E.FAKE_TEARS],[34,E.AGILITY],[40,E.IMPRISON],[46,E.NIGHT_DAZE],[52,E.NASTY_PLOT],[58,E.FOUL_PLAY]],[A.MINCCINO]:[[1,E.POUND],[1,E.BABY_DOLL_EYES],[4,E.HELPING_HAND],[8,E.ECHOED_VOICE],[12,E.SING],[16,E.CHARM],[20,E.SWIFT],[24,E.ENCORE],[28,E.AFTER_YOU],[32,E.TAIL_SLAP],[36,E.TICKLE],[40,E.SLAM],[44,E.HYPER_VOICE],[48,E.LAST_RESORT]],[A.CINCCINO]:[[b,E.TAIL_SLAP],[V,E.SLAM],[V,E.SWIFT],[V,E.ENCORE],[V,E.HELPING_HAND],[V,E.HYPER_VOICE],[V,E.TICKLE],[V,E.ROCK_BLAST],[V,E.LAST_RESORT],[V,E.AFTER_YOU],[V,E.ECHOED_VOICE],[V,E.BABY_DOLL_EYES],[1,E.BULLET_SEED],[1,E.SING],[1,E.CHARM],[1,E.POUND]],[A.GOTHITA]:[[1,E.POUND],[1,E.CONFUSION],[4,E.PLAY_NICE],[8,E.TICKLE],[12,E.PSYBEAM],[16,E.CHARM],[20,E.PSYSHOCK],[24,E.HYPNOSIS],[28,E.FAKE_TEARS],[33,E.PSYCH_UP],[34,E.HEAL_BLOCK],[36,E.PSYCHIC],[40,E.FLATTER],[44,E.FUTURE_SIGHT],[48,E.MAGIC_ROOM]],[A.GOTHORITA]:[[1,E.POUND],[1,E.CONFUSION],[1,E.TICKLE],[1,E.PLAY_NICE],[12,E.PSYBEAM],[16,E.CHARM],[20,E.PSYSHOCK],[24,E.HYPNOSIS],[28,E.FAKE_TEARS],[34,E.HEAL_BLOCK],[35,E.PSYCH_UP],[40,E.PSYCHIC],[46,E.FLATTER],[52,E.FUTURE_SIGHT],[58,E.MAGIC_ROOM]],[A.GOTHITELLE]:[[1,E.POUND],[1,E.CONFUSION],[1,E.TICKLE],[1,E.PLAY_NICE],[12,E.PSYBEAM],[16,E.CHARM],[20,E.PSYSHOCK],[24,E.HYPNOSIS],[28,E.FAKE_TEARS],[34,E.HEAL_BLOCK],[35,E.PSYCH_UP],[40,E.PSYCHIC],[48,E.FLATTER],[56,E.FUTURE_SIGHT],[64,E.MAGIC_ROOM]],[A.SOLOSIS]:[[1,E.CONFUSION],[1,E.PROTECT],[1,E.PSYWAVE],[4,E.RECOVER],[8,E.ENDEAVOR],[12,E.PSYBEAM],[16,E.CHARM],[20,E.PSYSHOCK],[24,E.LIGHT_SCREEN],[24,E.REFLECT],[28,E.ALLY_SWITCH],[33,E.PAIN_SPLIT],[36,E.PSYCHIC],[40,E.SKILL_SWAP],[44,E.FUTURE_SIGHT],[46,E.HEAL_BLOCK],[48,E.WONDER_ROOM]],[A.DUOSION]:[[1,E.CONFUSION],[1,E.RECOVER],[1,E.PSYWAVE],[1,E.PROTECT],[1,E.ENDEAVOR],[1,E.SNATCH],[12,E.PSYBEAM],[16,E.CHARM],[20,E.PSYSHOCK],[24,E.LIGHT_SCREEN],[24,E.REFLECT],[28,E.ALLY_SWITCH],[35,E.PAIN_SPLIT],[40,E.PSYCHIC],[46,E.SKILL_SWAP],[50,E.HEAL_BLOCK],[52,E.FUTURE_SIGHT],[58,E.WONDER_ROOM]],[A.REUNICLUS]:[[b,E.HAMMER_ARM],[1,E.CONFUSION],[1,E.RECOVER],[1,E.PROTECT],[1,E.ENDEAVOR],[1,E.DIZZY_PUNCH],[1,E.PSYWAVE],[1,E.SNATCH],[12,E.PSYBEAM],[16,E.CHARM],[20,E.PSYSHOCK],[24,E.LIGHT_SCREEN],[24,E.REFLECT],[28,E.ALLY_SWITCH],[35,E.PAIN_SPLIT],[40,E.PSYCHIC],[48,E.SKILL_SWAP],[54,E.HEAL_BLOCK],[56,E.FUTURE_SIGHT],[64,E.WONDER_ROOM]],[A.DUCKLETT]:[[1,E.WATER_GUN],[6,E.DEFOG],[9,E.WING_ATTACK],[13,E.WATER_PULSE],[15,E.AERIAL_ACE],[19,E.BUBBLE_BEAM],[21,E.FEATHER_DANCE],[24,E.AQUA_RING],[27,E.AIR_SLASH],[30,E.ROOST],[34,E.RAIN_DANCE],[37,E.TAILWIND],[41,E.BRAVE_BIRD],[46,E.HURRICANE]],[A.SWANNA]:[[1,E.WING_ATTACK],[1,E.WATER_GUN],[1,E.DEFOG],[13,E.WATER_PULSE],[15,E.AERIAL_ACE],[19,E.BUBBLE_BEAM],[21,E.FEATHER_DANCE],[24,E.AQUA_RING],[27,E.AIR_SLASH],[30,E.ROOST],[34,E.RAIN_DANCE],[40,E.TAILWIND],[47,E.BRAVE_BIRD],[55,E.HURRICANE]],[A.VANILLITE]:[[1,E.HARDEN],[1,E.ASTONISH],[1,E.POWDER_SNOW],[4,E.TAUNT],[8,E.MIST],[12,E.ICY_WIND],[16,E.AVALANCHE],[20,E.HAIL],[24,E.ICICLE_SPEAR],[28,E.UPROAR],[32,E.ACID_ARMOR],[36,E.MIRROR_COAT],[40,E.ICE_BEAM],[44,E.BLIZZARD],[48,E.SHEER_COLD]],[A.VANILLISH]:[[1,E.MIST],[1,E.HARDEN],[1,E.TAUNT],[1,E.ASTONISH],[1,E.POWDER_SNOW],[12,E.ICY_WIND],[16,E.AVALANCHE],[20,E.HAIL],[24,E.ICICLE_SPEAR],[28,E.UPROAR],[32,E.ACID_ARMOR],[38,E.MIRROR_COAT],[44,E.ICE_BEAM],[50,E.BLIZZARD],[56,E.SHEER_COLD]],[A.VANILLUXE]:[[1,E.MIST],[1,E.HARDEN],[1,E.TAUNT],[1,E.ASTONISH],[1,E.POWDER_SNOW],[1,E.WEATHER_BALL],[1,E.ICICLE_CRASH],[1,E.FREEZE_DRY],[12,E.ICY_WIND],[16,E.AVALANCHE],[20,E.HAIL],[24,E.ICICLE_SPEAR],[28,E.UPROAR],[32,E.ACID_ARMOR],[38,E.MIRROR_COAT],[44,E.ICE_BEAM],[52,E.BLIZZARD],[60,E.SHEER_COLD]],[A.DEERLING]:[[1,E.TACKLE],[1,E.CAMOUFLAGE],[4,E.GROWL],[7,E.SAND_ATTACK],[10,E.DOUBLE_KICK],[13,E.LEECH_SEED],[16,E.BULLET_SEED],[20,E.TAKE_DOWN],[24,E.ZEN_HEADBUTT],[28,E.ENERGY_BALL],[32,E.CHARM],[37,E.DOUBLE_EDGE],[42,E.SOLAR_BEAM]],[A.SAWSBUCK]:[[b,E.HORN_LEECH],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.GROWL],[1,E.CAMOUFLAGE],[1,E.MEGAHORN],[10,E.DOUBLE_KICK],[13,E.LEECH_SEED],[16,E.BULLET_SEED],[20,E.TAKE_DOWN],[24,E.ZEN_HEADBUTT],[28,E.ENERGY_BALL],[36,E.CHARM],[44,E.DOUBLE_EDGE],[52,E.SOLAR_BEAM]],[A.EMOLGA]:[[1,E.TAIL_WHIP],[1,E.NUZZLE],[5,E.DOUBLE_TEAM],[10,E.QUICK_ATTACK],[15,E.THUNDER_SHOCK],[20,E.CHARGE],[25,E.ACROBATICS],[30,E.SPARK],[35,E.ENCORE],[40,E.VOLT_SWITCH],[45,E.LIGHT_SCREEN],[50,E.DISCHARGE],[55,E.AGILITY]],[A.KARRABLAST]:[[1,E.LEER],[1,E.PECK],[4,E.FURY_CUTTER],[8,E.ENDURE],[12,E.FALSE_SWIPE],[16,E.ACID_SPRAY],[20,E.HEADBUTT],[24,E.FLAIL],[28,E.SCARY_FACE],[32,E.X_SCISSOR],[36,E.SWORDS_DANCE],[40,E.TAKE_DOWN],[44,E.BUG_BUZZ],[48,E.DOUBLE_EDGE]],[A.ESCAVALIER]:[[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.LEER],[1,E.PECK],[1,E.FLAIL],[1,E.SCARY_FACE],[1,E.ENDURE],[1,E.FURY_CUTTER],[1,E.QUICK_GUARD],[1,E.FELL_STINGER],[1,E.TWINEEDLE],[12,E.FALSE_SWIPE],[16,E.ACID_SPRAY],[20,E.HEADBUTT],[24,E.REVERSAL],[28,E.IRON_DEFENSE],[32,E.X_SCISSOR],[36,E.SWORDS_DANCE],[40,E.IRON_HEAD],[44,E.BUG_BUZZ],[48,E.GIGA_IMPACT],[52,E.METAL_BURST]],[A.FOONGUS]:[[1,E.ABSORB],[1,E.ASTONISH],[4,E.GROWTH],[8,E.STUN_SPORE],[12,E.MEGA_DRAIN],[16,E.SYNTHESIS],[20,E.CLEAR_SMOG],[24,E.SWEET_SCENT],[28,E.GIGA_DRAIN],[32,E.INGRAIN],[36,E.TOXIC],[40,E.RAGE_POWDER],[44,E.SOLAR_BEAM],[48,E.SPORE]],[A.AMOONGUSS]:[[1,E.ABSORB],[1,E.GROWTH],[1,E.STUN_SPORE],[1,E.ASTONISH],[1,E.BIDE],[12,E.MEGA_DRAIN],[16,E.SYNTHESIS],[20,E.CLEAR_SMOG],[24,E.SWEET_SCENT],[28,E.GIGA_DRAIN],[32,E.INGRAIN],[36,E.TOXIC],[42,E.RAGE_POWDER],[48,E.SOLAR_BEAM],[54,E.SPORE]],[A.FRILLISH]:[[1,E.WATER_GUN],[1,E.ABSORB],[1,E.WATER_SPORT],[4,E.POISON_STING],[8,E.NIGHT_SHADE],[12,E.WATER_PULSE],[16,E.RAIN_DANCE],[20,E.HEX],[24,E.BRINE],[28,E.RECOVER],[32,E.SHADOW_BALL],[36,E.WHIRLPOOL],[41,E.HYDRO_PUMP],[44,E.DESTINY_BOND],[48,E.WATER_SPOUT]],[A.JELLICENT]:[[1,E.POISON_STING],[1,E.WATER_GUN],[1,E.WATER_SPORT],[1,E.WRING_OUT],[1,E.ABSORB],[1,E.NIGHT_SHADE],[1,E.ACID_ARMOR],[12,E.WATER_PULSE],[16,E.RAIN_DANCE],[20,E.HEX],[24,E.BRINE],[28,E.RECOVER],[32,E.SHADOW_BALL],[36,E.WHIRLPOOL],[43,E.HYDRO_PUMP],[48,E.DESTINY_BOND],[54,E.WATER_SPOUT]],[A.ALOMOMOLA]:[[1,E.POUND],[1,E.PLAY_NICE],[1,E.WATER_SPORT],[5,E.AQUA_RING],[9,E.AQUA_JET],[13,E.HELPING_HAND],[13,E.WIDE_GUARD],[21,E.PROTECT],[25,E.WATER_PULSE],[29,E.HEALING_WISH],[33,E.SOAK],[37,E.WISH],[41,E.BRINE],[45,E.SAFEGUARD],[49,E.WHIRLPOOL],[55,E.HYDRO_PUMP]],[A.JOLTIK]:[[1,E.ABSORB],[1,E.FURY_CUTTER],[1,E.SPIDER_WEB],[4,E.ELECTROWEB],[8,E.BUG_BITE],[12,E.STRING_SHOT],[16,E.THUNDER_WAVE],[20,E.ELECTRO_BALL],[24,E.AGILITY],[28,E.SUCKER_PUNCH],[32,E.SLASH],[37,E.DISCHARGE],[40,E.SCREECH],[44,E.GASTRO_ACID],[48,E.BUG_BUZZ]],[A.GALVANTULA]:[[b,E.STICKY_WEB],[1,E.ABSORB],[1,E.FURY_CUTTER],[1,E.BUG_BITE],[1,E.ELECTROWEB],[1,E.SPIDER_WEB],[12,E.STRING_SHOT],[16,E.THUNDER_WAVE],[20,E.ELECTRO_BALL],[24,E.AGILITY],[28,E.SUCKER_PUNCH],[32,E.SLASH],[39,E.DISCHARGE],[44,E.SCREECH],[50,E.GASTRO_ACID],[56,E.BUG_BUZZ]],[A.FERROSEED]:[[1,E.TACKLE],[1,E.HARDEN],[5,E.METAL_CLAW],[10,E.PIN_MISSILE],[15,E.INGRAIN],[20,E.FLASH_CANNON],[25,E.IRON_HEAD],[30,E.SELF_DESTRUCT],[35,E.IRON_DEFENSE],[41,E.CURSE],[45,E.GYRO_BALL],[50,E.EXPLOSION]],[A.FERROTHORN]:[[b,E.POWER_WHIP],[1,E.TACKLE],[1,E.PIN_MISSILE],[1,E.HARDEN],[1,E.METAL_CLAW],[1,E.ROCK_CLIMB],[15,E.INGRAIN],[20,E.FLASH_CANNON],[25,E.IRON_HEAD],[30,E.SELF_DESTRUCT],[35,E.IRON_DEFENSE],[43,E.CURSE],[49,E.GYRO_BALL],[56,E.EXPLOSION]],[A.KLINK]:[[1,E.VISE_GRIP],[1,E.THUNDER_SHOCK],[4,E.BIND],[8,E.CHARGE],[12,E.CHARGE_BEAM],[16,E.METAL_SOUND],[20,E.AUTOTOMIZE],[24,E.DISCHARGE],[28,E.SCREECH],[32,E.GEAR_GRIND],[36,E.LOCK_ON],[40,E.SHIFT_GEAR],[44,E.ZAP_CANNON],[48,E.HYPER_BEAM]],[A.KLANG]:[[1,E.VISE_GRIP],[1,E.BIND],[1,E.THUNDER_SHOCK],[1,E.CHARGE],[12,E.CHARGE_BEAM],[16,E.METAL_SOUND],[20,E.AUTOTOMIZE],[24,E.DISCHARGE],[28,E.SCREECH],[32,E.GEAR_GRIND],[36,E.LOCK_ON],[42,E.SHIFT_GEAR],[48,E.ZAP_CANNON],[54,E.HYPER_BEAM]],[A.KLINKLANG]:[[1,E.VISE_GRIP],[1,E.BIND],[1,E.THUNDER_SHOCK],[1,E.CHARGE],[1,E.MAGNETIC_FLUX],[1,E.GEAR_UP],[12,E.CHARGE_BEAM],[16,E.METAL_SOUND],[20,E.AUTOTOMIZE],[24,E.DISCHARGE],[28,E.SCREECH],[32,E.GEAR_GRIND],[36,E.LOCK_ON],[42,E.SHIFT_GEAR],[48,E.ZAP_CANNON],[56,E.HYPER_BEAM],[64,E.ELECTRIC_TERRAIN]],[A.TYNAMO]:[[1,E.TACKLE],[1,E.THUNDER_WAVE],[1,E.SPARK],[1,E.CHARGE_BEAM]],[A.EELEKTRIK]:[[b,E.CRUNCH],[1,E.TACKLE],[1,E.HEADBUTT],[1,E.THUNDER_WAVE],[1,E.SPARK],[1,E.CHARGE_BEAM],[1,E.ION_DELUGE],[9,E.BIND],[19,E.ACID],[29,E.DISCHARGE],[44,E.THUNDERBOLT],[49,E.ACID_SPRAY],[54,E.COIL],[59,E.WILD_CHARGE],[64,E.GASTRO_ACID],[69,E.ZAP_CANNON],[74,E.THRASH]],[A.EELEKTROSS]:[[V,E.THUNDERBOLT],[V,E.ACID_SPRAY],[1,E.TACKLE],[1,E.HEADBUTT],[1,E.THUNDER_WAVE],[1,E.SPARK],[1,E.CHARGE_BEAM],[1,E.ION_DELUGE],[1,E.BIND],[1,E.THRASH],[1,E.ACID],[1,E.ZAP_CANNON],[1,E.CRUNCH],[1,E.CRUSH_CLAW],[1,E.GASTRO_ACID],[1,E.DISCHARGE],[1,E.COIL],[5,E.WILD_CHARGE]],[A.ELGYEM]:[[1,E.GROWL],[1,E.CONFUSION],[6,E.IMPRISON],[8,E.HEAL_BLOCK],[12,E.TELEPORT],[18,E.PSYBEAM],[24,E.GUARD_SPLIT],[24,E.POWER_SPLIT],[30,E.HEADBUTT],[36,E.ZEN_HEADBUTT],[43,E.RECOVER],[48,E.CALM_MIND],[54,E.WONDER_ROOM],[60,E.PSYCHIC]],[A.BEHEEYEM]:[[1,E.GROWL],[1,E.CONFUSION],[1,E.SYNCHRONOISE],[1,E.TELEPORT],[1,E.IMPRISON],[1,E.PSYCHIC_TERRAIN],[8,E.HEAL_BLOCK],[18,E.PSYBEAM],[24,E.GUARD_SPLIT],[24,E.POWER_SPLIT],[30,E.HEADBUTT],[36,E.ZEN_HEADBUTT],[45,E.RECOVER],[52,E.CALM_MIND],[60,E.WONDER_ROOM],[68,E.PSYCHIC]],[A.LITWICK]:[[1,E.SMOG],[1,E.ASTONISH],[4,E.EMBER],[8,E.MINIMIZE],[12,E.CONFUSE_RAY],[16,E.HEX],[20,E.WILL_O_WISP],[24,E.FIRE_SPIN],[28,E.NIGHT_SHADE],[32,E.CURSE],[36,E.SHADOW_BALL],[40,E.INFERNO],[44,E.IMPRISON],[48,E.PAIN_SPLIT],[52,E.OVERHEAT],[56,E.MEMENTO]],[A.LAMPENT]:[[1,E.EMBER],[1,E.MINIMIZE],[1,E.SMOG],[1,E.ASTONISH],[12,E.CONFUSE_RAY],[16,E.HEX],[20,E.WILL_O_WISP],[24,E.FIRE_SPIN],[28,E.NIGHT_SHADE],[32,E.CURSE],[36,E.SHADOW_BALL],[40,E.INFERNO],[46,E.IMPRISON],[52,E.PAIN_SPLIT],[58,E.OVERHEAT],[64,E.MEMENTO]],[A.CHANDELURE]:[[1,E.EMBER],[1,E.FIRE_SPIN],[1,E.NIGHT_SHADE],[1,E.MINIMIZE],[1,E.CONFUSE_RAY],[1,E.SMOG],[1,E.CURSE],[1,E.PAIN_SPLIT],[1,E.SHADOW_BALL],[1,E.WILL_O_WISP],[1,E.MEMENTO],[1,E.IMPRISON],[1,E.ASTONISH],[1,E.OVERHEAT],[1,E.HEX],[1,E.INFERNO]],[A.AXEW]:[[1,E.SCRATCH],[1,E.LEER],[3,E.BITE],[6,E.FALSE_SWIPE],[9,E.ASSURANCE],[12,E.TAUNT],[15,E.SLASH],[18,E.DRAGON_CLAW],[21,E.SCARY_FACE],[24,E.CRUNCH],[27,E.DRAGON_DANCE],[30,E.DUAL_CHOP],[33,E.FOCUS_ENERGY],[36,E.DRAGON_PULSE],[39,E.SWORDS_DANCE],[42,E.OUTRAGE],[45,E.GUILLOTINE],[48,E.GIGA_IMPACT]],[A.FRAXURE]:[[1,E.SCRATCH],[1,E.LEER],[1,E.BITE],[1,E.FALSE_SWIPE],[1,E.DUAL_CHOP],[9,E.ASSURANCE],[12,E.TAUNT],[15,E.SLASH],[18,E.DRAGON_CLAW],[21,E.SCARY_FACE],[24,E.CRUNCH],[27,E.DRAGON_DANCE],[30,E.BREAKING_SWIPE],[33,E.FOCUS_ENERGY],[36,E.DRAGON_PULSE],[41,E.SWORDS_DANCE],[46,E.OUTRAGE],[51,E.GUILLOTINE],[56,E.GIGA_IMPACT]],[A.HAXORUS]:[[1,E.SCRATCH],[1,E.LEER],[1,E.BITE],[1,E.FALSE_SWIPE],[1,E.DUAL_CHOP],[9,E.ASSURANCE],[12,E.TAUNT],[15,E.SLASH],[18,E.DRAGON_CLAW],[21,E.SCARY_FACE],[24,E.CRUNCH],[27,E.DRAGON_DANCE],[30,E.BREAKING_SWIPE],[33,E.FOCUS_ENERGY],[36,E.DRAGON_PULSE],[41,E.SWORDS_DANCE],[46,E.OUTRAGE],[53,E.GUILLOTINE],[60,E.GIGA_IMPACT]],[A.CUBCHOO]:[[1,E.GROWL],[1,E.POWDER_SNOW],[3,E.ENDURE],[6,E.FURY_SWIPES],[9,E.ICY_WIND],[12,E.PLAY_NICE],[15,E.BRINE],[18,E.FROST_BREATH],[21,E.SLASH],[24,E.FLAIL],[27,E.CHARM],[30,E.SNOWSCAPE],[33,E.THRASH],[36,E.REST],[39,E.BLIZZARD],[42,E.SHEER_COLD]],[A.BEARTIC]:[[b,E.ICICLE_CRASH],[1,E.GROWL],[1,E.FURY_SWIPES],[1,E.POWDER_SNOW],[1,E.ENDURE],[1,E.CHARM],[1,E.AQUA_JET],[1,E.BIDE],[9,E.ICY_WIND],[12,E.PLAY_NICE],[15,E.BRINE],[18,E.FROST_BREATH],[21,E.SLASH],[24,E.FLAIL],[27,E.SWAGGER],[30,E.SNOWSCAPE],[33,E.THRASH],[36,E.REST],[41,E.BLIZZARD],[46,E.SHEER_COLD],[51,E.SUPERPOWER]],[A.CRYOGONAL]:[[1,E.BIND],[1,E.ICE_SHARD],[4,E.CONFUSE_RAY],[8,E.RAPID_SPIN],[12,E.ICY_WIND],[16,E.MIST],[16,E.HAZE],[20,E.ANCIENT_POWER],[24,E.AURORA_BEAM],[28,E.SLASH],[32,E.NIGHT_SLASH],[36,E.FREEZE_DRY],[40,E.LIGHT_SCREEN],[40,E.REFLECT],[44,E.RECOVER],[48,E.ICE_BEAM],[52,E.ACID_ARMOR],[56,E.SOLAR_BEAM],[60,E.SHEER_COLD]],[A.SHELMET]:[[1,E.ABSORB],[1,E.PROTECT],[4,E.ACID],[8,E.CURSE],[12,E.MEGA_DRAIN],[16,E.STRUGGLE_BUG],[20,E.YAWN],[24,E.ACID_ARMOR],[28,E.GIGA_DRAIN],[32,E.GUARD_SWAP],[36,E.BODY_SLAM],[40,E.RECOVER],[44,E.BUG_BUZZ],[48,E.FINAL_GAMBIT]],[A.ACCELGOR]:[[1,E.BODY_SLAM],[1,E.ACID],[1,E.ABSORB],[1,E.PROTECT],[1,E.QUICK_ATTACK],[1,E.DOUBLE_TEAM],[1,E.ACID_ARMOR],[1,E.CURSE],[1,E.YAWN],[1,E.GUARD_SWAP],[1,E.ACID_SPRAY],[1,E.WATER_SHURIKEN],[12,E.MEGA_DRAIN],[16,E.STRUGGLE_BUG],[20,E.SWIFT],[24,E.AGILITY],[28,E.GIGA_DRAIN],[32,E.POWER_SWAP],[36,E.U_TURN],[40,E.RECOVER],[44,E.BUG_BUZZ],[48,E.FINAL_GAMBIT],[52,E.TOXIC]],[A.STUNFISK]:[[1,E.TACKLE],[1,E.WATER_GUN],[1,E.THUNDER_SHOCK],[1,E.MUD_SLAP],[1,E.MUD_SPORT],[5,E.ENDURE],[10,E.MUD_SHOT],[15,E.REVENGE],[20,E.CHARGE],[25,E.SUCKER_PUNCH],[30,E.ELECTRIC_TERRAIN],[35,E.BOUNCE],[40,E.MUDDY_WATER],[45,E.DISCHARGE],[50,E.FLAIL],[55,E.FISSURE]],[A.MIENFOO]:[[1,E.POUND],[1,E.DETECT],[5,E.FAKE_OUT],[10,E.REVERSAL],[15,E.FURY_SWIPES],[20,E.QUICK_GUARD],[25,E.FORCE_PALM],[30,E.U_TURN],[35,E.DRAIN_PUNCH],[40,E.HONE_CLAWS],[45,E.AURA_SPHERE],[51,E.BOUNCE],[55,E.CALM_MIND],[60,E.HIGH_JUMP_KICK]],[A.MIENSHAO]:[[1,E.POUND],[1,E.REVERSAL],[1,E.DETECT],[1,E.FAKE_OUT],[1,E.QUICK_GUARD],[15,E.FURY_SWIPES],[20,E.WIDE_GUARD],[25,E.FORCE_PALM],[30,E.U_TURN],[35,E.DRAIN_PUNCH],[40,E.HONE_CLAWS],[45,E.AURA_SPHERE],[53,E.BOUNCE],[59,E.CALM_MIND],[66,E.HIGH_JUMP_KICK]],[A.DRUDDIGON]:[[1,E.SCRATCH],[1,E.LEER],[5,E.BITE],[10,E.DRAGON_TAIL],[15,E.METAL_CLAW],[20,E.SCARY_FACE],[25,E.SLASH],[30,E.DRAGON_CLAW],[35,E.HONE_CLAWS],[40,E.CRUNCH],[45,E.IRON_HEAD],[50,E.OUTRAGE],[55,E.SUPERPOWER]],[A.GOLETT]:[[1,E.MUD_SLAP],[1,E.ASTONISH],[4,E.DEFENSE_CURL],[8,E.POUND],[12,E.SHADOW_PUNCH],[16,E.CURSE],[20,E.NIGHT_SHADE],[24,E.STOMPING_TANTRUM],[28,E.IRON_DEFENSE],[32,E.MEGA_PUNCH],[36,E.SHADOW_BALL],[40,E.HEAVY_SLAM],[44,E.PHANTOM_FORCE],[48,E.HAMMER_ARM],[52,E.EARTHQUAKE],[56,E.DYNAMIC_PUNCH]],[A.GOLURK]:[[V,E.MUD_SLAP],[V,E.FOCUS_PUNCH],[1,E.POUND],[1,E.DEFENSE_CURL],[1,E.ASTONISH],[1,E.HIGH_HORSEPOWER],[12,E.SHADOW_PUNCH],[16,E.CURSE],[20,E.NIGHT_SHADE],[24,E.STOMPING_TANTRUM],[28,E.IRON_DEFENSE],[32,E.MEGA_PUNCH],[36,E.SHADOW_BALL],[40,E.HEAVY_SLAM],[46,E.PHANTOM_FORCE],[52,E.HAMMER_ARM],[58,E.EARTHQUAKE],[64,E.DYNAMIC_PUNCH]],[A.PAWNIARD]:[[1,E.SCRATCH],[1,E.LEER],[5,E.FURY_CUTTER],[10,E.METAL_CLAW],[15,E.TORMENT],[20,E.SCARY_FACE],[25,E.ASSURANCE],[30,E.METAL_SOUND],[35,E.SLASH],[40,E.NIGHT_SLASH],[45,E.IRON_DEFENSE],[50,E.RETALIATE],[55,E.IRON_HEAD],[60,E.SWORDS_DANCE],[65,E.GUILLOTINE]],[A.BISHARP]:[[1,E.SCRATCH],[1,E.LEER],[1,E.FURY_CUTTER],[1,E.METAL_CLAW],[1,E.METAL_BURST],[15,E.TORMENT],[20,E.SCARY_FACE],[25,E.ASSURANCE],[30,E.METAL_SOUND],[35,E.SLASH],[40,E.NIGHT_SLASH],[45,E.IRON_DEFENSE],[50,E.RETALIATE],[57,E.IRON_HEAD],[64,E.SWORDS_DANCE],[71,E.GUILLOTINE]],[A.BOUFFALANT]:[[1,E.TACKLE],[1,E.LEER],[1,E.PURSUIT],[5,E.FOCUS_ENERGY],[10,E.FURY_ATTACK],[15,E.REVENGE],[20,E.SCARY_FACE],[25,E.HORN_ATTACK],[30,E.REVERSAL],[35,E.THROAT_CHOP],[40,E.HEAD_CHARGE],[45,E.SWORDS_DANCE],[50,E.MEGAHORN],[55,E.GIGA_IMPACT]],[A.RUFFLET]:[[1,E.LEER],[1,E.PECK],[6,E.HONE_CLAWS],[12,E.WING_ATTACK],[18,E.TAILWIND],[24,E.SCARY_FACE],[30,E.AERIAL_ACE],[36,E.SLASH],[42,E.WHIRLWIND],[48,E.CRUSH_CLAW],[55,E.AIR_SLASH],[60,E.DEFOG],[66,E.THRASH],[72,E.BRAVE_BIRD]],[A.BRAVIARY]:[[b,E.SUPERPOWER],[V,E.BRAVE_BIRD],[1,E.WING_ATTACK],[1,E.LEER],[1,E.PECK],[1,E.SKY_ATTACK],[1,E.HONE_CLAWS],[18,E.TAILWIND],[24,E.SCARY_FACE],[30,E.AERIAL_ACE],[36,E.SLASH],[42,E.WHIRLWIND],[48,E.CRUSH_CLAW],[57,E.AIR_SLASH],[64,E.DEFOG],[72,E.THRASH]],[A.VULLABY]:[[1,E.GUST],[1,E.LEER],[6,E.FLATTER],[12,E.PLUCK],[18,E.TAILWIND],[24,E.KNOCK_OFF],[30,E.IRON_DEFENSE],[36,E.WHIRLWIND],[42,E.AIR_SLASH],[48,E.DARK_PULSE],[54,E.NASTY_PLOT],[60,E.DEFOG],[66,E.ATTRACT],[72,E.BRAVE_BIRD]],[A.MANDIBUZZ]:[[b,E.BONE_RUSH],[1,E.GUST],[1,E.LEER],[1,E.TOXIC],[1,E.SKY_ATTACK],[1,E.FLATTER],[1,E.PLUCK],[18,E.TAILWIND],[24,E.KNOCK_OFF],[30,E.IRON_DEFENSE],[36,E.WHIRLWIND],[42,E.AIR_SLASH],[48,E.DARK_PULSE],[57,E.NASTY_PLOT],[64,E.DEFOG],[72,E.ATTRACT],[80,E.BRAVE_BIRD]],[A.HEATMOR]:[[1,E.TACKLE],[1,E.LICK],[5,E.FURY_SWIPES],[10,E.INCINERATE],[15,E.BUG_BITE],[20,E.STOCKPILE],[20,E.SPIT_UP],[20,E.SWALLOW],[25,E.SLASH],[30,E.BIND],[35,E.FIRE_LASH],[40,E.HONE_CLAWS],[45,E.AMNESIA],[50,E.FIRE_SPIN],[55,E.INFERNO],[60,E.FLARE_BLITZ]],[A.DURANT]:[[1,E.SAND_ATTACK],[1,E.FURY_CUTTER],[4,E.VISE_GRIP],[8,E.METAL_CLAW],[12,E.BEAT_UP],[16,E.BUG_BITE],[20,E.BITE],[24,E.AGILITY],[28,E.DIG],[32,E.X_SCISSOR],[36,E.CRUNCH],[40,E.METAL_SOUND],[44,E.IRON_HEAD],[48,E.ENTRAINMENT],[52,E.IRON_DEFENSE],[56,E.GUILLOTINE]],[A.DEINO]:[[1,E.TACKLE],[1,E.FOCUS_ENERGY],[4,E.DRAGON_BREATH],[8,E.BITE],[12,E.ROAR],[16,E.ASSURANCE],[20,E.HEADBUTT],[24,E.WORK_UP],[28,E.SLAM],[32,E.CRUNCH],[36,E.SCARY_FACE],[40,E.DRAGON_PULSE],[44,E.BODY_SLAM],[48,E.HYPER_VOICE],[52,E.DRAGON_RUSH],[56,E.NASTY_PLOT],[60,E.OUTRAGE]],[A.ZWEILOUS]:[[1,E.TACKLE],[1,E.BITE],[1,E.FOCUS_ENERGY],[1,E.DRAGON_BREATH],[1,E.DOUBLE_HIT],[12,E.ROAR],[16,E.ASSURANCE],[20,E.HEADBUTT],[24,E.WORK_UP],[28,E.SLAM],[32,E.CRUNCH],[36,E.SCARY_FACE],[40,E.DRAGON_PULSE],[44,E.BODY_SLAM],[48,E.HYPER_VOICE],[54,E.DRAGON_RUSH],[60,E.NASTY_PLOT],[66,E.OUTRAGE]],[A.HYDREIGON]:[[1,E.TACKLE],[1,E.BITE],[1,E.FOCUS_ENERGY],[1,E.TRI_ATTACK],[1,E.DRAGON_BREATH],[1,E.DOUBLE_HIT],[12,E.ROAR],[16,E.ASSURANCE],[20,E.HEADBUTT],[24,E.WORK_UP],[28,E.SLAM],[32,E.CRUNCH],[36,E.SCARY_FACE],[40,E.DRAGON_PULSE],[44,E.BODY_SLAM],[48,E.HYPER_VOICE],[54,E.DRAGON_RUSH],[60,E.NASTY_PLOT],[68,E.OUTRAGE],[76,E.HYPER_BEAM]],[A.LARVESTA]:[[1,E.EMBER],[1,E.STRING_SHOT],[6,E.FLAME_CHARGE],[12,E.STRUGGLE_BUG],[18,E.FLAME_WHEEL],[24,E.BUG_BITE],[30,E.SCREECH],[36,E.LEECH_LIFE],[42,E.BUG_BUZZ],[48,E.TAKE_DOWN],[54,E.AMNESIA],[60,E.DOUBLE_EDGE],[66,E.FLARE_BLITZ]],[A.VOLCARONA]:[[b,E.QUIVER_DANCE],[1,E.GUST],[1,E.WHIRLWIND],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.EMBER],[1,E.STRING_SHOT],[1,E.FIRE_SPIN],[1,E.FLARE_BLITZ],[1,E.FLAME_CHARGE],[1,E.STRUGGLE_BUG],[1,E.FIERY_DANCE],[18,E.FLAME_WHEEL],[24,E.BUG_BITE],[30,E.SCREECH],[36,E.LEECH_LIFE],[42,E.BUG_BUZZ],[48,E.HEAT_WAVE],[54,E.AMNESIA],[62,E.HURRICANE],[70,E.FIRE_BLAST],[78,E.RAGE_POWDER]],[A.COBALION]:[[1,E.LEER],[1,E.QUICK_ATTACK],[1,E.HELPING_HAND],[1,E.WORK_UP],[7,E.METAL_CLAW],[14,E.QUICK_GUARD],[21,E.DOUBLE_KICK],[28,E.RETALIATE],[35,E.METAL_BURST],[42,E.TAKE_DOWN],[49,E.SACRED_SWORD],[56,E.SWORDS_DANCE],[63,E.IRON_HEAD],[70,E.CLOSE_COMBAT]],[A.TERRAKION]:[[1,E.LEER],[1,E.QUICK_ATTACK],[1,E.HELPING_HAND],[1,E.WORK_UP],[7,E.SMACK_DOWN],[14,E.QUICK_GUARD],[21,E.DOUBLE_KICK],[28,E.RETALIATE],[35,E.ROCK_SLIDE],[42,E.TAKE_DOWN],[49,E.SACRED_SWORD],[56,E.SWORDS_DANCE],[63,E.STONE_EDGE],[70,E.CLOSE_COMBAT]],[A.VIRIZION]:[[V,E.TAKE_DOWN],[1,E.LEER],[1,E.QUICK_ATTACK],[1,E.HELPING_HAND],[1,E.WORK_UP],[7,E.MAGICAL_LEAF],[14,E.QUICK_GUARD],[21,E.DOUBLE_KICK],[28,E.RETALIATE],[35,E.GIGA_DRAIN],[42,E.TAKE_DOWN],[49,E.SACRED_SWORD],[56,E.SWORDS_DANCE],[63,E.LEAF_BLADE],[70,E.CLOSE_COMBAT]],[A.TORNADUS]:[[1,E.GUST],[1,E.ASTONISH],[5,E.LEER],[10,E.SWAGGER],[15,E.BITE],[20,E.AIR_CUTTER],[25,E.AGILITY],[30,E.TAILWIND],[35,E.AIR_SLASH],[40,E.CRUNCH],[45,E.EXTRASENSORY],[50,E.UPROAR],[55,E.HAMMER_ARM],[60,E.RAIN_DANCE],[65,E.HURRICANE],[70,E.THRASH],[77,E.BLEAKWIND_STORM]],[A.THUNDURUS]:[[1,E.THUNDER_SHOCK],[1,E.ASTONISH],[5,E.LEER],[10,E.SWAGGER],[15,E.BITE],[20,E.SHOCK_WAVE],[25,E.AGILITY],[30,E.CHARGE],[31,E.HEAL_BLOCK],[35,E.VOLT_SWITCH],[40,E.CRUNCH],[45,E.DISCHARGE],[50,E.UPROAR],[55,E.HAMMER_ARM],[60,E.RAIN_DANCE],[65,E.THUNDER],[70,E.THRASH],[75,E.WILDBOLT_STORM]],[A.RESHIRAM]:[[1,E.DRAGON_BREATH],[1,E.ANCIENT_POWER],[1,E.FIRE_FANG],[1,E.NOBLE_ROAR],[8,E.SLASH],[16,E.CRUNCH],[24,E.EXTRASENSORY],[32,E.DRAGON_PULSE],[40,E.FLAMETHROWER],[48,E.FUSION_FLARE],[56,E.HYPER_VOICE],[64,E.FIRE_BLAST],[72,E.IMPRISON],[80,E.OUTRAGE],[88,E.BLUE_FLARE]],[A.ZEKROM]:[[1,E.DRAGON_BREATH],[1,E.ANCIENT_POWER],[1,E.THUNDER_FANG],[1,E.NOBLE_ROAR],[8,E.SLASH],[16,E.CRUNCH],[24,E.ZEN_HEADBUTT],[32,E.DRAGON_CLAW],[40,E.THUNDERBOLT],[48,E.FUSION_BOLT],[56,E.HYPER_VOICE],[64,E.THUNDER],[72,E.IMPRISON],[80,E.OUTRAGE],[88,E.BOLT_STRIKE]],[A.LANDORUS]:[[1,E.SAND_TOMB],[1,E.SMACK_DOWN],[5,E.LEER],[10,E.BLOCK],[15,E.BULLDOZE],[20,E.ROCK_TOMB],[30,E.IMPRISON],[35,E.ROCK_SLIDE],[40,E.EARTH_POWER],[45,E.EXTRASENSORY],[50,E.STONE_EDGE],[55,E.HAMMER_ARM],[60,E.SANDSTORM],[65,E.EARTHQUAKE],[70,E.OUTRAGE],[75,E.FISSURE],[80,E.SANDSEAR_STORM]],[A.KYUREM]:[[1,E.DRAGON_BREATH],[1,E.ANCIENT_POWER],[1,E.NOBLE_ROAR],[1,E.FREEZE_DRY],[8,E.SLASH],[16,E.ENDEAVOR],[24,E.DRAGON_PULSE],[32,E.ICE_BEAM],[40,E.HYPER_VOICE],[48,E.SCARY_FACE],[56,E.BLIZZARD],[64,E.IMPRISON],[72,E.OUTRAGE],[80,E.GLACIATE],[88,E.SHEER_COLD]],[A.KELDEO]:[[1,E.LEER],[1,E.HELPING_HAND],[1,E.AQUA_JET],[1,E.WORK_UP],[1,E.SECRET_SWORD],[7,E.BUBBLE_BEAM],[14,E.QUICK_GUARD],[21,E.DOUBLE_KICK],[28,E.RETALIATE],[35,E.AQUA_TAIL],[42,E.TAKE_DOWN],[49,E.SACRED_SWORD],[56,E.SWORDS_DANCE],[63,E.HYDRO_PUMP],[70,E.CLOSE_COMBAT]],[A.MELOETTA]:[[1,E.SING],[1,E.CONFUSION],[1,E.QUICK_ATTACK],[1,E.ROUND],[21,E.TEETER_DANCE],[26,E.ACROBATICS],[31,E.PSYBEAM],[36,E.ECHOED_VOICE],[43,E.U_TURN],[50,E.RELIC_SONG],[57,E.PSYCHIC],[64,E.HYPER_VOICE],[71,E.ROLE_PLAY],[78,E.CLOSE_COMBAT],[85,E.PERISH_SONG]],[A.GENESECT]:[[1,E.QUICK_ATTACK],[1,E.FURY_CUTTER],[7,E.SCREECH],[14,E.METAL_CLAW],[21,E.FELL_STINGER],[28,E.FLAME_CHARGE],[35,E.METAL_SOUND],[42,E.X_SCISSOR],[49,E.MAGNET_RISE],[56,E.BUG_BUZZ],[63,E.SIMPLE_BEAM],[70,E.ZAP_CANNON],[77,E.LOCK_ON],[84,E.TECHNO_BLAST],[91,E.SELF_DESTRUCT]],[A.CHESPIN]:[[1,E.TACKLE],[1,E.GROWL],[1,E.VINE_WHIP],[8,E.ROLLOUT],[11,E.BITE],[15,E.LEECH_SEED],[18,E.PIN_MISSILE],[27,E.TAKE_DOWN],[32,E.SEED_BOMB],[35,E.MUD_SHOT],[42,E.BODY_SLAM],[45,E.PAIN_SPLIT],[48,E.WOOD_HAMMER]],[A.QUILLADIN]:[[b,E.NEEDLE_ARM],[1,E.TACKLE],[1,E.GROWL],[1,E.VINE_WHIP],[8,E.ROLLOUT],[11,E.BITE],[15,E.LEECH_SEED],[20,E.SEED_BOMB],[24,E.PIN_MISSILE],[29,E.TAKE_DOWN],[34,E.MUD_SHOT],[38,E.BULK_UP],[43,E.BODY_SLAM],[47,E.PAIN_SPLIT],[53,E.WOOD_HAMMER]],[A.CHESNAUGHT]:[[b,E.SPIKY_SHIELD],[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.GROWL],[1,E.ROLLOUT],[1,E.HAMMER_ARM],[1,E.FEINT],[1,E.NEEDLE_ARM],[11,E.BITE],[15,E.LEECH_SEED],[19,E.PIN_MISSILE],[29,E.TAKE_DOWN],[35,E.SEED_BOMB],[41,E.MUD_SHOT],[48,E.BULK_UP],[54,E.BODY_SLAM],[60,E.PAIN_SPLIT],[66,E.WOOD_HAMMER],[78,E.GIGA_IMPACT]],[A.FENNEKIN]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[5,E.EMBER],[11,E.HOWL],[14,E.FLAME_CHARGE],[17,E.PSYBEAM],[20,E.FIRE_SPIN],[25,E.LIGHT_SCREEN],[31,E.PSYSHOCK],[35,E.FLAMETHROWER],[38,E.WILL_O_WISP],[41,E.PSYCHIC],[43,E.SUNNY_DAY],[48,E.FIRE_BLAST]],[A.BRAIXEN]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.EMBER],[11,E.HOWL],[14,E.FLAME_CHARGE],[18,E.PSYBEAM],[22,E.FIRE_SPIN],[28,E.LIGHT_SCREEN],[36,E.PSYSHOCK],[41,E.FLAMETHROWER],[45,E.WILL_O_WISP],[49,E.PSYCHIC],[52,E.SUNNY_DAY],[56,E.MAGIC_ROOM],[59,E.FIRE_BLAST]],[A.DELPHOX]:[[b,E.MYSTICAL_FIRE],[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.EMBER],[1,E.SHADOW_BALL],[1,E.FUTURE_SIGHT],[1,E.ROLE_PLAY],[1,E.HOWL],[1,E.SWITCHEROO],[14,E.FLAME_CHARGE],[18,E.PSYBEAM],[22,E.FIRE_SPIN],[28,E.LIGHT_SCREEN],[38,E.PSYSHOCK],[45,E.FLAMETHROWER],[51,E.WILL_O_WISP],[57,E.PSYCHIC],[62,E.SUNNY_DAY],[68,E.MAGIC_ROOM],[74,E.FIRE_BLAST]],[A.FROAKIE]:[[1,E.POUND],[1,E.GROWL],[5,E.WATER_GUN],[8,E.QUICK_ATTACK],[10,E.LICK],[14,E.WATER_PULSE],[18,E.SMOKESCREEN],[21,E.ROUND],[25,E.FLING],[29,E.SMACK_DOWN],[35,E.SUBSTITUTE],[39,E.BOUNCE],[43,E.DOUBLE_TEAM],[48,E.HYDRO_PUMP]],[A.FROGADIER]:[[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[8,E.QUICK_ATTACK],[10,E.LICK],[14,E.WATER_PULSE],[19,E.SMOKESCREEN],[23,E.ROUND],[28,E.FLING],[33,E.SMACK_DOWN],[40,E.SUBSTITUTE],[45,E.BOUNCE],[50,E.DOUBLE_TEAM],[56,E.HYDRO_PUMP]],[A.GRENINJA]:[[b,E.WATER_SHURIKEN],[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[1,E.QUICK_ATTACK],[1,E.ROUND],[1,E.FLING],[1,E.SMACK_DOWN],[1,E.BOUNCE],[1,E.HAZE],[1,E.MAT_BLOCK],[1,E.ROLE_PLAY],[1,E.NIGHT_SLASH],[10,E.LICK],[14,E.WATER_PULSE],[19,E.SMOKESCREEN],[23,E.SHADOW_SNEAK],[28,E.SPIKES],[33,E.AERIAL_ACE],[42,E.SUBSTITUTE],[49,E.EXTRASENSORY],[56,E.DOUBLE_TEAM],[68,E.HYDRO_PUMP]],[A.BUNNELBY]:[[1,E.LEER],[1,E.MUD_SLAP],[3,E.TACKLE],[6,E.LASER_FOCUS],[9,E.QUICK_ATTACK],[12,E.MUD_SHOT],[15,E.FLAIL],[18,E.DOUBLE_KICK],[21,E.BULLDOZE],[24,E.DIG],[27,E.BOUNCE],[30,E.TAKE_DOWN],[33,E.SWORDS_DANCE],[36,E.EARTHQUAKE],[39,E.SUPER_FANG]],[A.DIGGERSBY]:[[1,E.TACKLE],[1,E.LEER],[1,E.MUD_SLAP],[1,E.LASER_FOCUS],[1,E.ROTOTILLER],[9,E.QUICK_ATTACK],[12,E.MUD_SHOT],[15,E.FLAIL],[18,E.DOUBLE_KICK],[23,E.BULLDOZE],[28,E.DIG],[33,E.BOUNCE],[38,E.TAKE_DOWN],[43,E.SWORDS_DANCE],[48,E.EARTHQUAKE],[53,E.SUPER_FANG],[58,E.HAMMER_ARM]],[A.FLETCHLING]:[[1,E.GROWL],[1,E.PECK],[5,E.QUICK_ATTACK],[10,E.EMBER],[15,E.FLAIL],[20,E.ACROBATICS],[25,E.AGILITY],[30,E.AERIAL_ACE],[35,E.TAILWIND],[40,E.STEEL_WING],[45,E.ROOST],[50,E.FLY]],[A.FLETCHINDER]:[[b,E.FLAME_CHARGE],[1,E.GROWL],[1,E.EMBER],[1,E.PECK],[1,E.QUICK_ATTACK],[1,E.FEINT],[15,E.FLAIL],[22,E.ACROBATICS],[29,E.AGILITY],[36,E.AERIAL_ACE],[43,E.TAILWIND],[50,E.STEEL_WING],[57,E.ROOST],[64,E.FLY]],[A.TALONFLAME]:[[1,E.GROWL],[1,E.EMBER],[1,E.PECK],[1,E.QUICK_ATTACK],[1,E.FEINT],[1,E.FLARE_BLITZ],[1,E.FLAME_CHARGE],[15,E.FLAIL],[22,E.ACROBATICS],[29,E.AGILITY],[38,E.AERIAL_ACE],[47,E.TAILWIND],[56,E.STEEL_WING],[65,E.ROOST],[74,E.FLY],[83,E.BRAVE_BIRD]],[A.SCATTERBUG]:[[1,E.TACKLE],[1,E.STRING_SHOT],[6,E.STUN_SPORE],[15,E.BUG_BITE]],[A.SPEWPA]:[[b,E.PROTECT],[V,E.TACKLE],[V,E.STRING_SHOT],[V,E.STUN_SPORE],[V,E.BUG_BITE],[1,E.HARDEN]],[A.VIVILLON]:[[b,E.GUST],[1,E.PROTECT],[1,E.TACKLE],[1,E.STRING_SHOT],[1,E.HARDEN],[1,E.BUG_BITE],[1,E.POISON_POWDER],[1,E.STUN_SPORE],[1,E.SLEEP_POWDER],[1,E.STRUGGLE_BUG],[1,E.POWDER],[12,E.LIGHT_SCREEN],[17,E.PSYBEAM],[21,E.SUPERSONIC],[25,E.DRAINING_KISS],[31,E.SAFEGUARD],[35,E.BUG_BUZZ],[45,E.QUIVER_DANCE],[50,E.HURRICANE]],[A.LITLEO]:[[1,E.TACKLE],[1,E.LEER],[5,E.EMBER],[8,E.WORK_UP],[11,E.HEADBUTT],[15,E.NOBLE_ROAR],[20,E.TAKE_DOWN],[23,E.FIRE_FANG],[28,E.ENDEAVOR],[33,E.ECHOED_VOICE],[36,E.FLAMETHROWER],[39,E.CRUNCH],[43,E.HYPER_VOICE],[46,E.INCINERATE],[50,E.OVERHEAT]],[A.PYROAR]:[[1,E.TACKLE],[1,E.LEER],[1,E.EMBER],[1,E.HYPER_BEAM],[1,E.WORK_UP],[11,E.HEADBUTT],[15,E.NOBLE_ROAR],[20,E.TAKE_DOWN],[23,E.FIRE_FANG],[28,E.ENDEAVOR],[33,E.ECHOED_VOICE],[38,E.FLAMETHROWER],[42,E.CRUNCH],[48,E.HYPER_VOICE],[51,E.INCINERATE],[57,E.OVERHEAT]],[A.FLABEBE]:[[1,E.VINE_WHIP],[1,E.TACKLE],[6,E.FAIRY_WIND],[10,E.SAFEGUARD],[15,E.RAZOR_LEAF],[20,E.WISH],[22,E.MAGICAL_LEAF],[24,E.GRASSY_TERRAIN],[28,E.PETAL_BLIZZARD],[33,E.SYNTHESIS],[37,E.MISTY_TERRAIN],[41,E.MOONBLAST],[45,E.PETAL_DANCE],[48,E.SOLAR_BEAM]],[A.FLOETTE]:[[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.FAIRY_WIND],[10,E.SAFEGUARD],[15,E.RAZOR_LEAF],[20,E.WISH],[25,E.MAGICAL_LEAF],[27,E.GRASSY_TERRAIN],[33,E.PETAL_BLIZZARD],[38,E.SYNTHESIS],[43,E.MISTY_TERRAIN],[46,E.MOONBLAST],[51,E.PETAL_DANCE],[58,E.SOLAR_BEAM]],[A.FLORGES]:[[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.FAIRY_WIND],[1,E.RAZOR_LEAF],[1,E.SOLAR_BEAM],[1,E.PETAL_DANCE],[1,E.SAFEGUARD],[1,E.SYNTHESIS],[1,E.WISH],[1,E.LUCKY_CHANT],[1,E.MAGICAL_LEAF],[1,E.GRASS_KNOT],[1,E.PETAL_BLIZZARD],[1,E.DISARMING_VOICE],[1,E.GRASSY_TERRAIN],[1,E.MISTY_TERRAIN],[5,E.MOONBLAST]],[A.SKIDDO]:[[1,E.TACKLE],[1,E.GROWTH],[7,E.VINE_WHIP],[9,E.TAIL_WHIP],[12,E.LEECH_SEED],[13,E.RAZOR_LEAF],[16,E.WORRY_SEED],[20,E.SYNTHESIS],[22,E.TAKE_DOWN],[26,E.BULLDOZE],[30,E.SEED_BOMB],[34,E.BULK_UP],[38,E.DOUBLE_EDGE],[42,E.HORN_LEECH],[45,E.LEAF_BLADE]],[A.GOGOAT]:[[b,E.AERIAL_ACE],[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.GROWTH],[1,E.EARTHQUAKE],[12,E.LEECH_SEED],[13,E.RAZOR_LEAF],[16,E.WORRY_SEED],[20,E.SYNTHESIS],[22,E.TAKE_DOWN],[26,E.BULLDOZE],[30,E.SEED_BOMB],[34,E.BULK_UP],[40,E.DOUBLE_EDGE],[47,E.HORN_LEECH],[55,E.LEAF_BLADE],[58,E.MILK_DRINK]],[A.PANCHAM]:[[1,E.TACKLE],[1,E.LEER],[4,E.ARM_THRUST],[8,E.TAUNT],[12,E.CIRCLE_THROW],[16,E.LOW_SWEEP],[20,E.WORK_UP],[24,E.SLASH],[28,E.VITAL_THROW],[33,E.CRUNCH],[36,E.BODY_SLAM],[40,E.PARTING_SHOT],[44,E.ENTRAINMENT]],[A.PANGORO]:[[b,E.NIGHT_SLASH],[1,E.TACKLE],[1,E.LEER],[1,E.TAUNT],[1,E.ARM_THRUST],[1,E.BULLET_PUNCH],[12,E.CIRCLE_THROW],[16,E.LOW_SWEEP],[20,E.WORK_UP],[24,E.SLASH],[28,E.VITAL_THROW],[35,E.CRUNCH],[40,E.BODY_SLAM],[46,E.PARTING_SHOT],[52,E.ENTRAINMENT],[58,E.HAMMER_ARM]],[A.FURFROU]:[[1,E.TACKLE],[1,E.GROWL],[5,E.SAND_ATTACK],[9,E.BABY_DOLL_EYES],[12,E.HEADBUTT],[15,E.TAIL_WHIP],[22,E.BITE],[27,E.ODOR_SLEUTH],[33,E.RETALIATE],[35,E.TAKE_DOWN],[38,E.CHARM],[42,E.SUCKER_PUNCH],[48,E.COTTON_GUARD]],[A.ESPURR]:[[1,E.SCRATCH],[1,E.LEER],[3,E.FAKE_OUT],[6,E.DISARMING_VOICE],[9,E.CONFUSION],[18,E.COVET],[21,E.PSYBEAM],[30,E.LIGHT_SCREEN],[30,E.REFLECT],[33,E.PSYSHOCK]],[A.MEOWSTIC]:[[1,E.SCRATCH],[1,E.LEER],[1,E.MEAN_LOOK],[1,E.FAKE_OUT],[1,E.DISARMING_VOICE],[9,E.CONFUSION],[12,E.HELPING_HAND],[15,E.CHARM],[18,E.COVET],[21,E.PSYBEAM],[24,E.SUCKER_PUNCH],[29,E.ROLE_PLAY],[34,E.LIGHT_SCREEN],[34,E.REFLECT],[39,E.PSYSHOCK],[44,E.IMPRISON],[49,E.QUICK_GUARD],[54,E.PSYCHIC],[59,E.MISTY_TERRAIN]],[A.HONEDGE]:[[1,E.TACKLE],[1,E.FURY_CUTTER],[4,E.SHADOW_SNEAK],[8,E.AUTOTOMIZE],[12,E.AERIAL_ACE],[16,E.METAL_SOUND],[20,E.SLASH],[24,E.NIGHT_SLASH],[28,E.RETALIATE],[32,E.IRON_DEFENSE],[36,E.IRON_HEAD],[40,E.POWER_TRICK],[44,E.SWORDS_DANCE],[48,E.SACRED_SWORD]],[A.DOUBLADE]:[[1,E.TACKLE],[1,E.FURY_CUTTER],[1,E.SHADOW_SNEAK],[1,E.AUTOTOMIZE],[12,E.AERIAL_ACE],[16,E.METAL_SOUND],[20,E.SLASH],[24,E.NIGHT_SLASH],[28,E.RETALIATE],[32,E.IRON_DEFENSE],[38,E.IRON_HEAD],[44,E.POWER_TRICK],[50,E.SWORDS_DANCE],[56,E.SACRED_SWORD]],[A.AEGISLASH]:[[b,E.KINGS_SHIELD],[1,E.SWORDS_DANCE],[1,E.PURSUIT],[1,E.TACKLE],[1,E.SLASH],[1,E.FURY_CUTTER],[1,E.METAL_SOUND],[1,E.AERIAL_ACE],[1,E.IRON_DEFENSE],[1,E.POWER_TRICK],[1,E.NIGHT_SLASH],[1,E.SHADOW_SNEAK],[1,E.IRON_HEAD],[1,E.HEAD_SMASH],[1,E.AUTOTOMIZE],[1,E.RETALIATE],[1,E.SACRED_SWORD]],[A.SPRITZEE]:[[1,E.SWEET_SCENT],[1,E.FAIRY_WIND],[3,E.SWEET_KISS],[6,E.ECHOED_VOICE],[9,E.DRAINING_KISS],[12,E.AROMATHERAPY],[18,E.ATTRACT],[21,E.FLAIL],[24,E.MISTY_TERRAIN],[27,E.PSYCHIC],[30,E.CHARM],[33,E.CALM_MIND],[36,E.MOONBLAST],[39,E.SKILL_SWAP]],[A.AROMATISSE]:[[1,E.SWEET_KISS],[1,E.SWEET_SCENT],[1,E.ECHOED_VOICE],[1,E.HEAL_PULSE],[1,E.FAIRY_WIND],[1,E.AROMATIC_MIST],[9,E.DISARMING_VOICE],[12,E.AROMATHERAPY],[15,E.DRAINING_KISS],[18,E.ATTRACT],[21,E.FLAIL],[24,E.MISTY_TERRAIN],[27,E.PSYCHIC],[30,E.CHARM],[33,E.CALM_MIND],[36,E.MOONBLAST],[39,E.SKILL_SWAP],[42,E.PSYCH_UP]],[A.SWIRLIX]:[[1,E.TACKLE],[1,E.SWEET_SCENT],[3,E.PLAY_NICE],[6,E.FAIRY_WIND],[9,E.AROMATHERAPY],[12,E.DRAINING_KISS],[15,E.FAKE_TEARS],[18,E.ROUND],[21,E.STRING_SHOT],[24,E.COTTON_SPORE],[27,E.ENERGY_BALL],[30,E.WISH],[33,E.PLAY_ROUGH],[36,E.COTTON_GUARD],[39,E.ENDEAVOR]],[A.SLURPUFF]:[[1,E.TACKLE],[1,E.SWEET_SCENT],[1,E.FAIRY_WIND],[1,E.PLAY_NICE],[9,E.AROMATHERAPY],[12,E.DRAINING_KISS],[15,E.FAKE_TEARS],[18,E.ROUND],[21,E.STRING_SHOT],[24,E.COTTON_SPORE],[27,E.ENERGY_BALL],[30,E.WISH],[33,E.PLAY_ROUGH],[36,E.COTTON_GUARD],[39,E.ENDEAVOR],[42,E.STICKY_WEB]],[A.INKAY]:[[1,E.TACKLE],[1,E.PECK],[1,E.CONSTRICT],[3,E.HYPNOSIS],[6,E.WRAP],[9,E.PAYBACK],[12,E.PLUCK],[15,E.PSYBEAM],[18,E.SWAGGER],[21,E.SLASH],[24,E.NIGHT_SLASH],[27,E.PSYCHO_CUT],[31,E.SWITCHEROO],[33,E.FOUL_PLAY],[36,E.TOPSY_TURVY],[39,E.SUPERPOWER]],[A.MALAMAR]:[[1,E.TACKLE],[1,E.WRAP],[1,E.PECK],[1,E.CONSTRICT],[1,E.HYPNOSIS],[1,E.REVERSAL],[9,E.PAYBACK],[12,E.PLUCK],[15,E.PSYBEAM],[18,E.SWAGGER],[21,E.SLASH],[24,E.NIGHT_SLASH],[27,E.PSYCHO_CUT],[33,E.SWITCHEROO],[37,E.FOUL_PLAY],[42,E.TOPSY_TURVY],[47,E.SUPERPOWER]],[A.BINACLE]:[[1,E.SCRATCH],[1,E.MUD_SLAP],[4,E.WITHDRAW],[8,E.WATER_GUN],[12,E.FURY_CUTTER],[16,E.FURY_SWIPES],[20,E.ANCIENT_POWER],[24,E.ROCK_POLISH],[28,E.SLASH],[32,E.HONE_CLAWS],[36,E.RAZOR_SHELL],[40,E.SHELL_SMASH],[44,E.CROSS_CHOP]],[A.BARBARACLE]:[[1,E.SCRATCH],[1,E.WATER_GUN],[1,E.WITHDRAW],[1,E.SKULL_BASH],[1,E.MUD_SLAP],[12,E.FURY_CUTTER],[16,E.FURY_SWIPES],[20,E.ANCIENT_POWER],[24,E.ROCK_POLISH],[28,E.SLASH],[32,E.HONE_CLAWS],[36,E.RAZOR_SHELL],[42,E.SHELL_SMASH],[48,E.CROSS_CHOP],[54,E.STONE_EDGE]],[A.SKRELP]:[[1,E.TACKLE],[1,E.SMOKESCREEN],[5,E.ACID],[10,E.WATER_GUN],[15,E.TAIL_WHIP],[20,E.DOUBLE_TEAM],[25,E.POISON_TAIL],[30,E.WATER_PULSE],[35,E.TOXIC],[40,E.DRAGON_PULSE],[45,E.AQUA_TAIL],[50,E.SLUDGE_BOMB],[55,E.HYDRO_PUMP]],[A.DRAGALGE]:[[1,E.TACKLE],[1,E.ACID],[1,E.WATER_GUN],[1,E.SMOKESCREEN],[1,E.FEINT_ATTACK],[15,E.TAIL_WHIP],[20,E.DOUBLE_TEAM],[25,E.POISON_TAIL],[30,E.WATER_PULSE],[35,E.TOXIC],[40,E.DRAGON_PULSE],[45,E.AQUA_TAIL],[52,E.SLUDGE_BOMB],[59,E.HYDRO_PUMP],[66,E.OUTRAGE]],[A.CLAUNCHER]:[[1,E.WATER_GUN],[1,E.SPLASH],[10,E.FLAIL],[15,E.AQUA_JET],[20,E.SMACK_DOWN],[25,E.HONE_CLAWS],[30,E.WATER_PULSE],[35,E.SWORDS_DANCE],[40,E.AURA_SPHERE],[45,E.BOUNCE],[50,E.MUDDY_WATER],[55,E.CRABHAMMER]],[A.CLAWITZER]:[[1,E.WATER_GUN],[1,E.SPLASH],[1,E.FLAIL],[1,E.DARK_PULSE],[1,E.DRAGON_PULSE],[1,E.HEAL_PULSE],[15,E.AQUA_JET],[20,E.SMACK_DOWN],[25,E.HONE_CLAWS],[30,E.WATER_PULSE],[35,E.SWORDS_DANCE],[42,E.AURA_SPHERE],[49,E.BOUNCE],[56,E.MUDDY_WATER],[63,E.CRABHAMMER]],[A.HELIOPTILE]:[[1,E.TAIL_WHIP],[1,E.MUD_SLAP],[4,E.POUND],[8,E.THUNDER_SHOCK],[12,E.QUICK_ATTACK],[16,E.CHARGE],[20,E.BULLDOZE],[24,E.VOLT_SWITCH],[28,E.PARABOLIC_CHARGE],[32,E.THUNDER_WAVE],[36,E.THUNDERBOLT],[40,E.ELECTRIFY],[44,E.THUNDER]],[A.HELIOLISK]:[[1,E.POUND],[1,E.TAIL_WHIP],[1,E.RAZOR_WIND],[1,E.THUNDER_SHOCK],[1,E.THUNDERBOLT],[1,E.THUNDER_WAVE],[1,E.THUNDER],[1,E.QUICK_ATTACK],[1,E.MUD_SLAP],[1,E.CHARGE],[1,E.DISCHARGE],[1,E.VOLT_SWITCH],[1,E.BULLDOZE],[1,E.PARABOLIC_CHARGE],[1,E.ELECTRIFY],[1,E.EERIE_IMPULSE]],[A.TYRUNT]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[4,E.ROAR],[8,E.ANCIENT_POWER],[12,E.CHARM],[16,E.BITE],[20,E.DRAGON_TAIL],[24,E.STOMP],[28,E.ROCK_SLIDE],[32,E.CRUNCH],[36,E.DRAGON_CLAW],[40,E.THRASH],[44,E.EARTHQUAKE],[48,E.HORN_DRILL]],[A.TYRANTRUM]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.ROAR],[1,E.ANCIENT_POWER],[12,E.CHARM],[16,E.BITE],[20,E.DRAGON_TAIL],[24,E.STOMP],[28,E.ROCK_SLIDE],[32,E.CRUNCH],[36,E.DRAGON_CLAW],[42,E.THRASH],[48,E.EARTHQUAKE],[54,E.HORN_DRILL],[60,E.GIGA_IMPACT],[66,E.HEAD_SMASH]],[A.AMAURA]:[[1,E.GROWL],[1,E.POWDER_SNOW],[4,E.ENCORE],[8,E.ANCIENT_POWER],[12,E.ICY_WIND],[16,E.ROUND],[20,E.MIST],[24,E.AURORA_BEAM],[28,E.THUNDER_WAVE],[32,E.NATURE_POWER],[36,E.FREEZE_DRY],[40,E.ICE_BEAM],[44,E.LIGHT_SCREEN],[48,E.HAIL],[52,E.BLIZZARD],[56,E.HYPER_BEAM]],[A.AURORUS]:[[1,E.GROWL],[1,E.POWDER_SNOW],[1,E.ENCORE],[1,E.ANCIENT_POWER],[12,E.ICY_WIND],[16,E.ROUND],[20,E.MIST],[24,E.AURORA_BEAM],[28,E.THUNDER_WAVE],[32,E.NATURE_POWER],[36,E.FREEZE_DRY],[42,E.ICE_BEAM],[48,E.LIGHT_SCREEN],[54,E.HAIL],[60,E.BLIZZARD],[66,E.HYPER_BEAM]],[A.SYLVEON]:[[b,E.SPARKLY_SWIRL],[V,E.VEEVEE_VOLLEY],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.GROWL],[1,E.CHARM],[1,E.BATON_PASS],[1,E.HELPING_HAND],[1,E.COVET],[1,E.COPYCAT],[5,E.SAND_ATTACK],[10,E.DISARMING_VOICE],[15,E.QUICK_ATTACK],[20,E.BABY_DOLL_EYES],[25,E.SWIFT],[30,E.LIGHT_SCREEN],[35,E.DRAINING_KISS],[40,E.MISTY_TERRAIN],[45,E.SKILL_SWAP],[50,E.PSYCH_UP],[55,E.MOONBLAST],[60,E.LAST_RESORT]],[A.HAWLUCHA]:[[1,E.TACKLE],[1,E.HONE_CLAWS],[4,E.WING_ATTACK],[8,E.DETECT],[12,E.AERIAL_ACE],[16,E.ENCORE],[20,E.FEATHER_DANCE],[24,E.BRICK_BREAK],[28,E.BOUNCE],[32,E.TAUNT],[36,E.ROOST],[40,E.SWORDS_DANCE],[44,E.FLYING_PRESS],[48,E.HIGH_JUMP_KICK],[52,E.ENDEAVOR],[56,E.SKY_ATTACK]],[A.DEDENNE]:[[1,E.TAIL_WHIP],[1,E.NUZZLE],[5,E.TACKLE],[10,E.CHARGE],[15,E.THUNDER_SHOCK],[20,E.CHARM],[25,E.PARABOLIC_CHARGE],[30,E.VOLT_SWITCH],[35,E.REST],[35,E.SNORE],[40,E.DISCHARGE],[45,E.PLAY_ROUGH],[50,E.SUPER_FANG],[55,E.ENTRAINMENT],[60,E.THUNDER]],[A.CARBINK]:[[1,E.TACKLE],[1,E.HARDEN],[5,E.GUARD_SPLIT],[10,E.SMACK_DOWN],[15,E.FLAIL],[20,E.ANCIENT_POWER],[25,E.ROCK_POLISH],[30,E.LIGHT_SCREEN],[35,E.ROCK_SLIDE],[40,E.SKILL_SWAP],[45,E.POWER_GEM],[50,E.STEALTH_ROCK],[55,E.MOONBLAST],[60,E.STONE_EDGE]],[A.GOOMY]:[[1,E.TACKLE],[1,E.ABSORB],[5,E.WATER_GUN],[10,E.DRAGON_BREATH],[15,E.PROTECT],[20,E.FLAIL],[25,E.WATER_PULSE],[30,E.RAIN_DANCE],[35,E.DRAGON_PULSE],[41,E.CURSE],[45,E.BODY_SLAM],[50,E.MUDDY_WATER]],[A.SLIGGOO]:[[b,E.ACID_SPRAY],[1,E.TACKLE],[1,E.WATER_GUN],[1,E.ABSORB],[1,E.ACID_ARMOR],[1,E.DRAGON_BREATH],[15,E.PROTECT],[20,E.FLAIL],[25,E.WATER_PULSE],[30,E.RAIN_DANCE],[35,E.DRAGON_PULSE],[43,E.CURSE],[49,E.BODY_SLAM],[56,E.MUDDY_WATER]],[A.GOODRA]:[[b,E.AQUA_TAIL],[1,E.TACKLE],[1,E.WATER_GUN],[1,E.ABSORB],[1,E.ACID_ARMOR],[1,E.DRAGON_BREATH],[1,E.POISON_TAIL],[1,E.FEINT],[1,E.ACID_SPRAY],[1,E.TEARFUL_LOOK],[15,E.PROTECT],[20,E.FLAIL],[25,E.WATER_PULSE],[30,E.RAIN_DANCE],[35,E.DRAGON_PULSE],[43,E.CURSE],[49,E.BODY_SLAM],[58,E.MUDDY_WATER],[67,E.POWER_WHIP]],[A.KLEFKI]:[[1,E.ASTONISH],[4,E.TACKLE],[8,E.FAIRY_WIND],[12,E.TORMENT],[16,E.FAIRY_LOCK],[20,E.METAL_SOUND],[24,E.DRAINING_KISS],[28,E.RECYCLE],[32,E.IMPRISON],[36,E.FLASH_CANNON],[40,E.PLAY_ROUGH],[44,E.MAGIC_ROOM],[48,E.FOUL_PLAY],[50,E.HEAL_BLOCK],[52,E.LAST_RESORT]],[A.PHANTUMP]:[[1,E.TACKLE],[1,E.ASTONISH],[4,E.BRANCH_POKE],[8,E.LEECH_SEED],[12,E.CONFUSE_RAY],[16,E.WILL_O_WISP],[20,E.HEX],[24,E.GROWTH],[28,E.HORN_LEECH],[32,E.CURSE],[36,E.PHANTOM_FORCE],[40,E.INGRAIN],[44,E.WOOD_HAMMER],[48,E.DESTINY_BOND],[52,E.FORESTS_CURSE]],[A.TREVENANT]:[[b,E.SHADOW_CLAW],[1,E.TACKLE],[1,E.LEECH_SEED],[1,E.ASTONISH],[1,E.BRANCH_POKE],[12,E.CONFUSE_RAY],[16,E.WILL_O_WISP],[20,E.HEX],[24,E.GROWTH],[28,E.HORN_LEECH],[32,E.CURSE],[36,E.PHANTOM_FORCE],[40,E.INGRAIN],[44,E.WOOD_HAMMER],[48,E.DESTINY_BOND],[52,E.FORESTS_CURSE]],[A.PUMPKABOO]:[[1,E.ASTONISH],[1,E.TRICK_OR_TREAT],[1,E.LEAFAGE],[4,E.SHADOW_SNEAK],[8,E.CONFUSE_RAY],[12,E.RAZOR_LEAF],[16,E.LEECH_SEED],[20,E.BULLET_SEED],[24,E.SCARY_FACE],[28,E.WORRY_SEED],[32,E.SEED_BOMB],[36,E.SHADOW_BALL],[40,E.TRICK],[44,E.PAIN_SPLIT]],[A.GOURGEIST]:[[1,E.CONFUSE_RAY],[1,E.EXPLOSION],[1,E.ASTONISH],[1,E.LEAFAGE],[1,E.SHADOW_SNEAK],[1,E.TRICK_OR_TREAT],[1,E.MOONBLAST],[12,E.RAZOR_LEAF],[16,E.LEECH_SEED],[20,E.BULLET_SEED],[24,E.SCARY_FACE],[28,E.WORRY_SEED],[32,E.SEED_BOMB],[36,E.SHADOW_BALL],[40,E.TRICK],[44,E.PAIN_SPLIT],[48,E.PHANTOM_FORCE]],[A.BERGMITE]:[[1,E.HARDEN],[1,E.RAPID_SPIN],[3,E.TACKLE],[6,E.POWDER_SNOW],[9,E.CURSE],[12,E.ICY_WIND],[15,E.PROTECT],[18,E.AVALANCHE],[21,E.BITE],[24,E.ICE_FANG],[27,E.IRON_DEFENSE],[30,E.RECOVER],[33,E.CRUNCH],[36,E.TAKE_DOWN],[39,E.BLIZZARD],[42,E.DOUBLE_EDGE]],[A.AVALUGG]:[[b,E.BODY_SLAM],[1,E.TACKLE],[1,E.HARDEN],[1,E.POWDER_SNOW],[1,E.RAPID_SPIN],[1,E.WIDE_GUARD],[9,E.CURSE],[12,E.ICY_WIND],[15,E.PROTECT],[18,E.AVALANCHE],[21,E.BITE],[24,E.ICE_FANG],[27,E.IRON_DEFENSE],[30,E.RECOVER],[33,E.CRUNCH],[36,E.TAKE_DOWN],[41,E.BLIZZARD],[46,E.DOUBLE_EDGE],[51,E.ICICLE_CRASH]],[A.NOIBAT]:[[1,E.TACKLE],[1,E.ABSORB],[4,E.GUST],[8,E.SUPERSONIC],[12,E.DOUBLE_TEAM],[16,E.WING_ATTACK],[20,E.BITE],[24,E.AIR_CUTTER],[28,E.WHIRLWIND],[32,E.SUPER_FANG],[36,E.AIR_SLASH],[40,E.SCREECH],[44,E.ROOST],[49,E.TAILWIND],[52,E.HURRICANE]],[A.NOIVERN]:[[b,E.DRAGON_PULSE],[1,E.GUST],[1,E.TACKLE],[1,E.SUPERSONIC],[1,E.ABSORB],[1,E.MOONLIGHT],[12,E.DOUBLE_TEAM],[16,E.WING_ATTACK],[20,E.BITE],[24,E.AIR_CUTTER],[28,E.WHIRLWIND],[32,E.SUPER_FANG],[36,E.AIR_SLASH],[40,E.SCREECH],[44,E.ROOST],[51,E.TAILWIND],[56,E.HURRICANE],[62,E.BOOMBURST]],[A.XERNEAS]:[[1,E.TACKLE],[1,E.GRAVITY],[5,E.LIGHT_SCREEN],[10,E.AURORA_BEAM],[15,E.NATURE_POWER],[20,E.NIGHT_SLASH],[25,E.AROMATHERAPY],[30,E.PSYCH_UP],[35,E.HORN_LEECH],[40,E.MISTY_TERRAIN],[45,E.INGRAIN],[50,E.TAKE_DOWN],[55,E.GEOMANCY],[60,E.MOONBLAST],[65,E.HEAL_PULSE],[70,E.MEGAHORN],[75,E.CLOSE_COMBAT],[80,E.OUTRAGE],[85,E.GIGA_IMPACT]],[A.YVELTAL]:[[1,E.GUST],[1,E.DOUBLE_TEAM],[1,E.RAZOR_WIND],[5,E.TAUNT],[10,E.SNARL],[15,E.DISABLE],[20,E.SUCKER_PUNCH],[25,E.TAILWIND],[30,E.ROOST],[35,E.AIR_SLASH],[40,E.DARK_PULSE],[45,E.PSYCHIC],[50,E.OBLIVION_WING],[55,E.PHANTOM_FORCE],[60,E.FOUL_PLAY],[65,E.DRAGON_RUSH],[70,E.HURRICANE],[75,E.FOCUS_BLAST],[80,E.SKY_ATTACK],[85,E.HYPER_BEAM]],[A.ZYGARDE]:[[1,E.BIND],[1,E.BITE],[1,E.DRAGON_BREATH],[1,E.BULLDOZE],[1,E.THOUSAND_ARROWS],[1,E.THOUSAND_WAVES],[1,E.CORE_ENFORCER],[8,E.HAZE],[16,E.DIG],[24,E.SAFEGUARD],[32,E.CRUNCH],[40,E.DRAGON_PULSE],[48,E.LANDS_WRATH],[56,E.GLARE],[64,E.SANDSTORM],[72,E.COIL],[80,E.EARTHQUAKE],[88,E.OUTRAGE]],[A.DIANCIE]:[[1,E.TACKLE],[1,E.HARDEN],[1,E.DIAMOND_STORM],[7,E.GUARD_SPLIT],[14,E.SMACK_DOWN],[21,E.FLAIL],[28,E.ANCIENT_POWER],[35,E.ROCK_POLISH],[42,E.LIGHT_SCREEN],[49,E.ROCK_SLIDE],[56,E.SKILL_SWAP],[63,E.POWER_GEM],[70,E.STEALTH_ROCK],[77,E.MOONBLAST],[84,E.STONE_EDGE]],[A.HOOPA]:[[1,E.CONFUSION],[1,E.DESTINY_BOND],[1,E.ALLY_SWITCH],[6,E.ASTONISH],[10,E.TRICK],[15,E.LIGHT_SCREEN],[19,E.PSYBEAM],[25,E.SKILL_SWAP],[29,E.GUARD_SPLIT],[29,E.POWER_SPLIT],[35,E.PHANTOM_FORCE],[46,E.ZEN_HEADBUTT],[50,E.TRICK_ROOM],[50,E.WONDER_ROOM],[55,E.SHADOW_BALL],[68,E.NASTY_PLOT],[75,E.PSYCHIC],[85,E.HYPERSPACE_HOLE]],[A.VOLCANION]:[[1,E.WATER_GUN],[1,E.FIRE_SPIN],[1,E.STEAM_ERUPTION],[6,E.LEER],[12,E.WEATHER_BALL],[18,E.FLAME_CHARGE],[24,E.WATER_PULSE],[30,E.SCARY_FACE],[36,E.INCINERATE],[42,E.STOMP],[48,E.SCALD],[54,E.TAKE_DOWN],[60,E.MIST],[60,E.HAZE],[66,E.HYDRO_PUMP],[78,E.FLARE_BLITZ],[84,E.OVERHEAT],[90,E.EXPLOSION]],[A.ROWLET]:[[1,E.TACKLE],[1,E.GROWL],[3,E.LEAFAGE],[6,E.ASTONISH],[9,E.PECK],[12,E.SHADOW_SNEAK],[15,E.RAZOR_LEAF],[18,E.SYNTHESIS],[21,E.PLUCK],[24,E.NASTY_PLOT],[27,E.SUCKER_PUNCH],[30,E.LEAF_BLADE],[33,E.FEATHER_DANCE],[36,E.BRAVE_BIRD]],[A.DARTRIX]:[[1,E.TACKLE],[1,E.GROWL],[1,E.ASTONISH],[1,E.LEAFAGE],[9,E.PECK],[12,E.SHADOW_SNEAK],[15,E.RAZOR_LEAF],[20,E.SYNTHESIS],[25,E.PLUCK],[30,E.NASTY_PLOT],[35,E.SUCKER_PUNCH],[40,E.LEAF_BLADE],[45,E.FEATHER_DANCE],[50,E.BRAVE_BIRD]],[A.DECIDUEYE]:[[b,E.SPIRIT_SHACKLE],[1,E.TACKLE],[1,E.GROWL],[1,E.SPITE],[1,E.ASTONISH],[1,E.U_TURN],[1,E.LEAF_STORM],[1,E.PHANTOM_FORCE],[1,E.LEAFAGE],[9,E.PECK],[12,E.SHADOW_SNEAK],[15,E.RAZOR_LEAF],[20,E.SYNTHESIS],[25,E.PLUCK],[30,E.NASTY_PLOT],[37,E.SUCKER_PUNCH],[44,E.LEAF_BLADE],[51,E.FEATHER_DANCE],[58,E.BRAVE_BIRD]],[A.LITTEN]:[[1,E.SCRATCH],[1,E.GROWL],[3,E.EMBER],[6,E.LICK],[9,E.ROAR],[12,E.FURY_SWIPES],[15,E.BITE],[18,E.DOUBLE_KICK],[21,E.FIRE_FANG],[24,E.SCARY_FACE],[27,E.SWAGGER],[30,E.FLAMETHROWER],[33,E.THRASH],[36,E.FLARE_BLITZ]],[A.TORRACAT]:[[1,E.SCRATCH],[1,E.GROWL],[1,E.EMBER],[1,E.LICK],[9,E.ROAR],[12,E.FURY_SWIPES],[15,E.BITE],[20,E.DOUBLE_KICK],[25,E.FIRE_FANG],[30,E.SCARY_FACE],[35,E.SWAGGER],[40,E.FLAMETHROWER],[45,E.THRASH],[50,E.FLARE_BLITZ]],[A.INCINEROAR]:[[b,E.DARKEST_LARIAT],[V,E.SCRATCH],[V,E.GROWL],[V,E.THROAT_CHOP],[1,E.EMBER],[1,E.LICK],[1,E.CROSS_CHOP],[1,E.BULK_UP],[9,E.ROAR],[12,E.FURY_SWIPES],[15,E.BITE],[20,E.DOUBLE_KICK],[25,E.FIRE_FANG],[30,E.SCARY_FACE],[32,E.SWAGGER],[44,E.FLAMETHROWER],[51,E.THRASH],[58,E.FLARE_BLITZ]],[A.POPPLIO]:[[1,E.POUND],[1,E.GROWL],[3,E.WATER_GUN],[6,E.DISARMING_VOICE],[9,E.AQUA_JET],[12,E.BABY_DOLL_EYES],[15,E.ICY_WIND],[18,E.SING],[21,E.BUBBLE_BEAM],[24,E.ENCORE],[27,E.MISTY_TERRAIN],[30,E.HYPER_VOICE],[33,E.MOONBLAST],[36,E.HYDRO_PUMP]],[A.BRIONNE]:[[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[1,E.DISARMING_VOICE],[9,E.AQUA_JET],[12,E.BABY_DOLL_EYES],[15,E.ICY_WIND],[20,E.SING],[25,E.BUBBLE_BEAM],[30,E.ENCORE],[35,E.MISTY_TERRAIN],[40,E.HYPER_VOICE],[45,E.MOONBLAST],[50,E.HYDRO_PUMP]],[A.PRIMARINA]:[[b,E.SPARKLING_ARIA],[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[1,E.DISARMING_VOICE],[9,E.AQUA_JET],[12,E.BABY_DOLL_EYES],[15,E.ICY_WIND],[20,E.SING],[25,E.BUBBLE_BEAM],[30,E.ENCORE],[37,E.MISTY_TERRAIN],[44,E.HYPER_VOICE],[51,E.MOONBLAST],[58,E.HYDRO_PUMP]],[A.PIKIPEK]:[[1,E.PECK],[3,E.GROWL],[7,E.ECHOED_VOICE],[9,E.ROCK_SMASH],[13,E.SUPERSONIC],[15,E.PLUCK],[19,E.ROOST],[21,E.FURY_ATTACK],[25,E.SCREECH],[27,E.DRILL_PECK],[31,E.BULLET_SEED],[33,E.FEATHER_DANCE],[37,E.HYPER_VOICE]],[A.TRUMBEAK]:[[V,E.ECHOED_VOICE],[1,E.GROWL],[1,E.PECK],[1,E.ROCK_SMASH],[1,E.ROCK_BLAST],[13,E.SUPERSONIC],[16,E.PLUCK],[21,E.ROOST],[24,E.FURY_ATTACK],[29,E.SCREECH],[32,E.DRILL_PECK],[37,E.BULLET_SEED],[40,E.FEATHER_DANCE],[45,E.HYPER_VOICE]],[A.TOUCANNON]:[[b,E.BEAK_BLAST],[1,E.GROWL],[1,E.PECK],[1,E.ROCK_SMASH],[1,E.ROCK_BLAST],[1,E.ECHOED_VOICE],[13,E.SUPERSONIC],[16,E.PLUCK],[21,E.ROOST],[24,E.FURY_ATTACK],[30,E.SCREECH],[34,E.DRILL_PECK],[40,E.BULLET_SEED],[44,E.FEATHER_DANCE],[50,E.HYPER_VOICE]],[A.YUNGOOS]:[[1,E.TACKLE],[3,E.LEER],[7,E.PAYBACK],[10,E.SAND_ATTACK],[13,E.WORK_UP],[19,E.BITE],[22,E.MUD_SLAP],[25,E.SUPER_FANG],[28,E.TAKE_DOWN],[31,E.SCARY_FACE],[34,E.CRUNCH],[37,E.YAWN],[40,E.THRASH],[43,E.REST]],[A.GUMSHOOS]:[[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.LEER],[1,E.PAYBACK],[1,E.PURSUIT],[13,E.WORK_UP],[19,E.BITE],[23,E.MUD_SLAP],[27,E.SUPER_FANG],[31,E.TAKE_DOWN],[35,E.SCARY_FACE],[39,E.CRUNCH],[43,E.YAWN],[47,E.THRASH],[52,E.REST]],[A.GRUBBIN]:[[1,E.VISE_GRIP],[1,E.MUD_SLAP],[5,E.STRING_SHOT],[10,E.BUG_BITE],[15,E.BITE],[21,E.SPARK],[25,E.STICKY_WEB],[30,E.X_SCISSOR],[35,E.CRUNCH],[40,E.DIG]],[A.CHARJABUG]:[[b,E.CHARGE],[1,E.VISE_GRIP],[1,E.STRING_SHOT],[1,E.MUD_SLAP],[1,E.BUG_BITE],[15,E.BITE],[23,E.SPARK],[29,E.STICKY_WEB],[36,E.X_SCISSOR],[43,E.CRUNCH],[50,E.DIG],[57,E.IRON_DEFENSE],[64,E.DISCHARGE]],[A.VIKAVOLT]:[[b,E.THUNDERBOLT],[V,E.VISE_GRIP],[V,E.DIG],[V,E.MUD_SLAP],[V,E.IRON_DEFENSE],[V,E.X_SCISSOR],[V,E.BUG_BITE],[1,E.CHARGE],[1,E.CRUNCH],[1,E.DISCHARGE],[1,E.STRING_SHOT],[15,E.BITE],[23,E.SPARK],[29,E.STICKY_WEB],[36,E.BUG_BUZZ],[43,E.GUILLOTINE],[50,E.FLY],[57,E.AGILITY],[64,E.ZAP_CANNON]],[A.CRABRAWLER]:[[1,E.BUBBLE],[1,E.VISE_GRIP],[5,E.ROCK_SMASH],[9,E.LEER],[13,E.BUBBLE_BEAM],[17,E.PROTECT],[22,E.BRICK_BREAK],[25,E.SLAM],[29,E.PAYBACK],[33,E.REVERSAL],[37,E.CRABHAMMER],[42,E.IRON_DEFENSE],[45,E.DYNAMIC_PUNCH],[49,E.CLOSE_COMBAT]],[A.CRABOMINABLE]:[[b,E.ICE_PUNCH],[V,E.CRABHAMMER],[1,E.VISE_GRIP],[1,E.LEER],[1,E.PROTECT],[1,E.ROCK_SMASH],[1,E.BUBBLE],[1,E.PURSUIT],[1,E.PAYBACK],[17,E.BUBBLE_BEAM],[22,E.BRICK_BREAK],[25,E.SLAM],[29,E.AVALANCHE],[33,E.REVERSAL],[37,E.ICE_HAMMER],[42,E.IRON_DEFENSE],[45,E.DYNAMIC_PUNCH],[49,E.CLOSE_COMBAT]],[A.ORICORIO]:[[1,E.POUND],[4,E.GROWL],[6,E.PECK],[10,E.HELPING_HAND],[13,E.AIR_CUTTER],[16,E.BATON_PASS],[20,E.FEATHER_DANCE],[23,E.ACROBATICS],[26,E.TEETER_DANCE],[30,E.ROOST],[33,E.FLATTER],[36,E.AIR_SLASH],[40,E.REVELATION_DANCE],[43,E.AGILITY],[47,E.HURRICANE]],[A.CUTIEFLY]:[[1,E.ABSORB],[1,E.FAIRY_WIND],[6,E.STUN_SPORE],[12,E.SWEET_SCENT],[18,E.DRAINING_KISS],[24,E.STRUGGLE_BUG],[30,E.COVET],[36,E.SWITCHEROO],[42,E.DAZZLING_GLEAM],[48,E.BUG_BUZZ],[54,E.QUIVER_DANCE]],[A.RIBOMBEE]:[[b,E.POLLEN_PUFF],[1,E.ABSORB],[1,E.STUN_SPORE],[1,E.SWEET_SCENT],[1,E.FAIRY_WIND],[18,E.DRAINING_KISS],[24,E.STRUGGLE_BUG],[32,E.COVET],[40,E.SWITCHEROO],[48,E.DAZZLING_GLEAM],[56,E.BUG_BUZZ],[64,E.QUIVER_DANCE]],[A.ROCKRUFF]:[[1,E.TACKLE],[1,E.LEER],[4,E.SAND_ATTACK],[8,E.DOUBLE_TEAM],[12,E.ROCK_THROW],[16,E.HOWL],[20,E.BITE],[24,E.ROCK_TOMB],[28,E.ROAR],[32,E.ROCK_SLIDE],[36,E.CRUNCH],[40,E.SCARY_FACE],[44,E.STEALTH_ROCK],[48,E.STONE_EDGE]],[A.LYCANROC]:[[b,E.SUCKER_PUNCH],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.LEER],[1,E.QUICK_ATTACK],[1,E.DOUBLE_TEAM],[1,E.QUICK_GUARD],[1,E.ACCELEROCK],[12,E.ROCK_THROW],[16,E.HOWL],[20,E.BITE],[24,E.ROCK_TOMB],[30,E.ROAR],[36,E.ROCK_SLIDE],[42,E.CRUNCH],[48,E.SCARY_FACE],[54,E.STEALTH_ROCK],[60,E.STONE_EDGE]],[A.WISHIWASHI]:[[1,E.GROWL],[1,E.WATER_GUN],[4,E.HELPING_HAND],[8,E.BEAT_UP],[12,E.BRINE],[16,E.TEARFUL_LOOK],[20,E.DIVE],[24,E.SOAK],[28,E.UPROAR],[32,E.AQUA_TAIL],[36,E.AQUA_RING],[40,E.ENDEAVOR],[44,E.HYDRO_PUMP],[48,E.DOUBLE_EDGE]],[A.MAREANIE]:[[1,E.POISON_STING],[1,E.PECK],[5,E.WIDE_GUARD],[10,E.BITE],[15,E.VENOSHOCK],[20,E.RECOVER],[25,E.PIN_MISSILE],[30,E.TOXIC_SPIKES],[35,E.LIQUIDATION],[40,E.ACID_SPRAY],[45,E.POISON_JAB],[50,E.TOXIC]],[A.TOXAPEX]:[[b,E.BANEFUL_BUNKER],[1,E.POISON_STING],[1,E.BITE],[1,E.PECK],[1,E.WIDE_GUARD],[15,E.VENOSHOCK],[20,E.RECOVER],[25,E.PIN_MISSILE],[30,E.TOXIC_SPIKES],[35,E.LIQUIDATION],[42,E.ACID_SPRAY],[49,E.POISON_JAB],[56,E.TOXIC]],[A.MUDBRAY]:[[1,E.MUD_SLAP],[1,E.ROCK_SMASH],[4,E.IRON_DEFENSE],[8,E.DOUBLE_KICK],[12,E.BULLDOZE],[16,E.STOMP],[20,E.STRENGTH],[24,E.COUNTER],[28,E.HIGH_HORSEPOWER],[32,E.HEAVY_SLAM],[36,E.EARTHQUAKE],[40,E.MEGA_KICK],[44,E.SUPERPOWER]],[A.MUDSDALE]:[[1,E.DOUBLE_KICK],[1,E.MUD_SLAP],[1,E.ROCK_SMASH],[1,E.IRON_DEFENSE],[12,E.BULLDOZE],[16,E.STOMP],[20,E.STRENGTH],[24,E.COUNTER],[28,E.HIGH_HORSEPOWER],[34,E.HEAVY_SLAM],[40,E.EARTHQUAKE],[46,E.MEGA_KICK],[52,E.SUPERPOWER]],[A.DEWPIDER]:[[1,E.WATER_GUN],[1,E.INFESTATION],[1,E.WATER_SPORT],[4,E.BUG_BITE],[8,E.BITE],[12,E.BUBBLE_BEAM],[16,E.AQUA_RING],[20,E.HEADBUTT],[24,E.CRUNCH],[28,E.SOAK],[32,E.ENTRAINMENT],[36,E.LUNGE],[40,E.LIQUIDATION],[44,E.LEECH_LIFE],[48,E.MIRROR_COAT]],[A.ARAQUANID]:[[1,E.BITE],[1,E.WATER_GUN],[1,E.BUG_BITE],[1,E.WIDE_GUARD],[1,E.INFESTATION],[1,E.WATER_SPORT],[1,E.SPIDER_WEB],[12,E.BUBBLE_BEAM],[16,E.AQUA_RING],[20,E.HEADBUTT],[26,E.CRUNCH],[32,E.SOAK],[38,E.ENTRAINMENT],[44,E.LUNGE],[50,E.LIQUIDATION],[56,E.LEECH_LIFE],[62,E.MIRROR_COAT]],[A.FOMANTIS]:[[1,E.FURY_CUTTER],[1,E.LEAFAGE],[5,E.GROWTH],[10,E.INGRAIN],[15,E.RAZOR_LEAF],[20,E.SWEET_SCENT],[25,E.SLASH],[30,E.X_SCISSOR],[35,E.SYNTHESIS],[40,E.LEAF_BLADE],[45,E.SUNNY_DAY],[50,E.SOLAR_BEAM]],[A.LURANTIS]:[[b,E.PETAL_BLIZZARD],[1,E.GROWTH],[1,E.SOLAR_BEAM],[1,E.FURY_CUTTER],[1,E.INGRAIN],[1,E.NIGHT_SLASH],[1,E.LEAFAGE],[1,E.DUAL_CHOP],[15,E.RAZOR_LEAF],[20,E.SWEET_SCENT],[25,E.SLASH],[30,E.X_SCISSOR],[37,E.SYNTHESIS],[44,E.LEAF_BLADE],[51,E.SUNNY_DAY],[63,E.SOLAR_BLADE]],[A.MORELULL]:[[1,E.ABSORB],[1,E.ASTONISH],[4,E.CONFUSE_RAY],[8,E.INGRAIN],[12,E.MEGA_DRAIN],[16,E.SLEEP_POWDER],[20,E.MOONLIGHT],[25,E.STRENGTH_SAP],[28,E.GIGA_DRAIN],[32,E.DAZZLING_GLEAM],[36,E.SPORE],[40,E.MOONBLAST],[44,E.DREAM_EATER]],[A.SHIINOTIC]:[[1,E.ABSORB],[1,E.CONFUSE_RAY],[1,E.INGRAIN],[1,E.ASTONISH],[1,E.FLASH],[12,E.MEGA_DRAIN],[16,E.SLEEP_POWDER],[20,E.MOONLIGHT],[27,E.STRENGTH_SAP],[32,E.GIGA_DRAIN],[38,E.DAZZLING_GLEAM],[44,E.SPORE],[50,E.MOONBLAST],[56,E.DREAM_EATER]],[A.SALANDIT]:[[1,E.SCRATCH],[1,E.POISON_GAS],[5,E.SMOG],[10,E.EMBER],[15,E.POISON_FANG],[20,E.SWEET_SCENT],[25,E.NASTY_PLOT],[30,E.INCINERATE],[35,E.VENOSHOCK],[40,E.DRAGON_PULSE],[45,E.FLAMETHROWER],[50,E.TOXIC],[55,E.ENDEAVOR]],[A.SALAZZLE]:[[b,E.FIRE_LASH],[1,E.POUND],[1,E.SCRATCH],[1,E.DISABLE],[1,E.EMBER],[1,E.SMOG],[1,E.POISON_GAS],[1,E.SWAGGER],[1,E.ENCORE],[1,E.TORMENT],[1,E.KNOCK_OFF],[1,E.ENDEAVOR],[1,E.CAPTIVATE],[15,E.POISON_FANG],[20,E.SWEET_SCENT],[25,E.NASTY_PLOT],[30,E.INCINERATE],[37,E.VENOSHOCK],[44,E.DRAGON_PULSE],[51,E.FLAMETHROWER],[58,E.TOXIC]],[A.STUFFUL]:[[1,E.TACKLE],[1,E.LEER],[4,E.BABY_DOLL_EYES],[8,E.PAYBACK],[12,E.BRUTAL_SWING],[16,E.ENDURE],[20,E.STRENGTH],[24,E.TAKE_DOWN],[28,E.FLAIL],[32,E.HAMMER_ARM],[36,E.THRASH],[40,E.PAIN_SPLIT],[44,E.DOUBLE_EDGE],[48,E.SUPERPOWER]],[A.BEWEAR]:[[b,E.BIND],[1,E.TACKLE],[1,E.LEER],[1,E.PAYBACK],[1,E.BABY_DOLL_EYES],[12,E.BRUTAL_SWING],[16,E.ENDURE],[20,E.STRENGTH],[24,E.TAKE_DOWN],[30,E.FLAIL],[36,E.HAMMER_ARM],[42,E.THRASH],[48,E.PAIN_SPLIT],[54,E.DOUBLE_EDGE],[60,E.SUPERPOWER]],[A.BOUNSWEET]:[[1,E.SPLASH],[1,E.LEAFAGE],[4,E.PLAY_NICE],[8,E.RAPID_SPIN],[12,E.RAZOR_LEAF],[16,E.SWEET_SCENT],[20,E.MAGICAL_LEAF],[24,E.FLAIL],[28,E.TEETER_DANCE],[32,E.AROMATIC_MIST]],[A.STEENEE]:[[1,E.LEAFAGE],[1,E.RAZOR_LEAF],[1,E.SPLASH],[1,E.FLAIL],[1,E.RAPID_SPIN],[1,E.PLAY_NICE],[16,E.SWEET_SCENT],[22,E.MAGICAL_LEAF],[28,E.STOMP],[34,E.TEETER_DANCE],[40,E.AROMATIC_MIST],[46,E.LEAF_STORM]],[A.TSAREENA]:[[b,E.TROP_KICK],[1,E.LEAFAGE],[1,E.RAZOR_LEAF],[1,E.SPLASH],[1,E.FLAIL],[1,E.SWAGGER],[1,E.RAPID_SPIN],[1,E.POWER_WHIP],[1,E.PLAY_NICE],[1,E.PUNISHMENT],[16,E.SWEET_SCENT],[22,E.MAGICAL_LEAF],[28,E.STOMP],[34,E.TEETER_DANCE],[40,E.AROMATIC_MIST],[46,E.LEAF_STORM],[58,E.HIGH_JUMP_KICK]],[A.COMFEY]:[[1,E.WRAP],[1,E.GROWTH],[3,E.VINE_WHIP],[6,E.HELPING_HAND],[9,E.DRAINING_KISS],[12,E.FLOWER_SHIELD],[15,E.MAGICAL_LEAF],[18,E.SYNTHESIS],[21,E.LEECH_SEED],[24,E.GRASS_KNOT],[27,E.SWEET_KISS],[30,E.FLORAL_HEALING],[33,E.PETAL_BLIZZARD],[36,E.AROMATHERAPY],[39,E.PLAY_ROUGH],[42,E.SWEET_SCENT],[45,E.PETAL_DANCE],[48,E.GRASSY_TERRAIN]],[A.ORANGURU]:[[1,E.CONFUSION],[1,E.TAUNT],[5,E.AFTER_YOU],[10,E.CALM_MIND],[15,E.STORED_POWER],[20,E.PSYCH_UP],[25,E.QUASH],[30,E.NASTY_PLOT],[35,E.ZEN_HEADBUTT],[40,E.TRICK_ROOM],[45,E.PSYCHIC],[50,E.INSTRUCT],[55,E.FOUL_PLAY],[60,E.FUTURE_SIGHT]],[A.PASSIMIAN]:[[1,E.TACKLE],[1,E.LEER],[5,E.ROCK_SMASH],[10,E.FOCUS_ENERGY],[15,E.BEAT_UP],[20,E.SCARY_FACE],[25,E.TAKE_DOWN],[30,E.FLING],[35,E.BULK_UP],[40,E.THRASH],[45,E.DOUBLE_EDGE],[50,E.CLOSE_COMBAT],[55,E.REVERSAL],[60,E.GIGA_IMPACT]],[A.WIMPOD]:[[1,E.SAND_ATTACK],[1,E.DEFENSE_CURL],[1,E.STRUGGLE_BUG]],[A.GOLISOPOD]:[[b,E.FIRST_IMPRESSION],[1,E.SAND_ATTACK],[1,E.DEFENSE_CURL],[1,E.SPITE],[1,E.STRUGGLE_BUG],[4,E.ROCK_SMASH],[8,E.FURY_CUTTER],[12,E.MUD_SHOT],[16,E.BUG_BITE],[20,E.IRON_DEFENSE],[24,E.SUCKER_PUNCH],[28,E.SLASH],[32,E.RAZOR_SHELL],[36,E.PIN_MISSILE],[40,E.SWORDS_DANCE],[44,E.LIQUIDATION]],[A.SANDYGAST]:[[1,E.ABSORB],[1,E.HARDEN],[5,E.ASTONISH],[10,E.SAND_TOMB],[15,E.MEGA_DRAIN],[20,E.SAND_ATTACK],[25,E.BULLDOZE],[30,E.HYPNOSIS],[35,E.GIGA_DRAIN],[40,E.IRON_DEFENSE],[45,E.SHADOW_BALL],[50,E.EARTH_POWER],[55,E.SHORE_UP],[60,E.SANDSTORM]],[A.PALOSSAND]:[[1,E.ABSORB],[1,E.HARDEN],[1,E.ASTONISH],[1,E.SAND_TOMB],[15,E.MEGA_DRAIN],[20,E.SAND_ATTACK],[25,E.BULLDOZE],[30,E.HYPNOSIS],[35,E.GIGA_DRAIN],[40,E.IRON_DEFENSE],[47,E.SHADOW_BALL],[54,E.EARTH_POWER],[61,E.SHORE_UP],[68,E.SANDSTORM]],[A.PYUKUMUKU]:[[1,E.COUNTER],[1,E.HARDEN],[1,E.BATON_PASS],[1,E.BIDE],[1,E.MUD_SPORT],[1,E.WATER_SPORT],[5,E.HELPING_HAND],[10,E.TAUNT],[15,E.SAFEGUARD],[20,E.MIRROR_COAT],[25,E.PURIFY],[30,E.CURSE],[35,E.GASTRO_ACID],[40,E.PAIN_SPLIT],[45,E.RECOVER],[50,E.SOAK],[55,E.TOXIC],[60,E.MEMENTO]],[A.TYPE_NULL]:[[1,E.TACKLE],[1,E.IMPRISON],[5,E.AERIAL_ACE],[10,E.SCARY_FACE],[15,E.DOUBLE_HIT],[20,E.METAL_SOUND],[25,E.CRUSH_CLAW],[30,E.AIR_SLASH],[35,E.TRI_ATTACK],[40,E.X_SCISSOR],[45,E.IRON_HEAD],[50,E.TAKE_DOWN],[55,E.DOUBLE_EDGE],[60,E.HEAL_BLOCK]],[A.SILVALLY]:[[b,E.MULTI_ATTACK],[1,E.TACKLE],[1,E.BITE],[1,E.EXPLOSION],[1,E.SCARY_FACE],[1,E.IMPRISON],[1,E.POISON_FANG],[1,E.AERIAL_ACE],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[1,E.IRON_HEAD],[1,E.HEAL_BLOCK],[15,E.DOUBLE_HIT],[20,E.METAL_SOUND],[25,E.CRUSH_CLAW],[30,E.AIR_SLASH],[35,E.TRI_ATTACK],[40,E.X_SCISSOR],[45,E.CRUNCH],[50,E.TAKE_DOWN],[55,E.DOUBLE_EDGE],[60,E.PARTING_SHOT]],[A.MINIOR]:[[1,E.TACKLE],[3,E.DEFENSE_CURL],[8,E.ROLLOUT],[10,E.CONFUSE_RAY],[15,E.SWIFT],[17,E.ANCIENT_POWER],[22,E.SELF_DESTRUCT],[24,E.STEALTH_ROCK],[29,E.TAKE_DOWN],[31,E.AUTOTOMIZE],[36,E.COSMIC_POWER],[38,E.POWER_GEM],[43,E.DOUBLE_EDGE],[45,E.SHELL_SMASH],[50,E.EXPLOSION]],[A.KOMALA]:[[1,E.DEFENSE_CURL],[1,E.ROLLOUT],[6,E.STOCKPILE],[6,E.SPIT_UP],[6,E.SWALLOW],[11,E.RAPID_SPIN],[16,E.YAWN],[21,E.SLAM],[26,E.FLAIL],[31,E.SUCKER_PUNCH],[36,E.PSYCH_UP],[41,E.WOOD_HAMMER],[46,E.THRASH]],[A.TURTONATOR]:[[1,E.TACKLE],[1,E.SMOG],[4,E.EMBER],[8,E.PROTECT],[12,E.ENDURE],[16,E.FLAIL],[20,E.INCINERATE],[24,E.IRON_DEFENSE],[28,E.DRAGON_PULSE],[32,E.BODY_SLAM],[36,E.FLAMETHROWER],[40,E.SHELL_TRAP],[44,E.SHELL_SMASH],[48,E.OVERHEAT],[52,E.EXPLOSION]],[A.TOGEDEMARU]:[[1,E.TACKLE],[1,E.NUZZLE],[5,E.DEFENSE_CURL],[10,E.CHARGE],[15,E.THUNDER_SHOCK],[20,E.FELL_STINGER],[25,E.SPARK],[30,E.PIN_MISSILE],[35,E.MAGNET_RISE],[40,E.ZING_ZAP],[45,E.DISCHARGE],[50,E.ELECTRIC_TERRAIN],[55,E.WILD_CHARGE],[60,E.SPIKY_SHIELD]],[A.MIMIKYU]:[[1,E.SCRATCH],[1,E.SPLASH],[1,E.ASTONISH],[1,E.COPYCAT],[1,E.WOOD_HAMMER],[6,E.SHADOW_SNEAK],[12,E.DOUBLE_TEAM],[18,E.BABY_DOLL_EYES],[24,E.MIMIC],[30,E.HONE_CLAWS],[36,E.SLASH],[42,E.SHADOW_CLAW],[48,E.CHARM],[54,E.PLAY_ROUGH],[60,E.PAIN_SPLIT]],[A.BRUXISH]:[[1,E.WATER_GUN],[4,E.ASTONISH],[9,E.CONFUSION],[12,E.BITE],[17,E.AQUA_JET],[20,E.DISABLE],[25,E.PSYSHOCK],[28,E.CRUNCH],[33,E.AQUA_TAIL],[36,E.SCREECH],[41,E.PSYCHIC_FANGS],[44,E.WAVE_CRASH]],[A.DRAMPA]:[[1,E.ECHOED_VOICE],[1,E.PLAY_NICE],[5,E.TWISTER],[10,E.PROTECT],[15,E.GLARE],[20,E.SAFEGUARD],[25,E.DRAGON_BREATH],[30,E.EXTRASENSORY],[35,E.DRAGON_PULSE],[40,E.LIGHT_SCREEN],[45,E.FLY],[50,E.HYPER_VOICE],[55,E.OUTRAGE]],[A.DHELMISE]:[[1,E.ABSORB],[1,E.RAPID_SPIN],[4,E.ASTONISH],[8,E.WRAP],[12,E.MEGA_DRAIN],[16,E.GROWTH],[20,E.GYRO_BALL],[24,E.SWITCHEROO],[28,E.GIGA_DRAIN],[32,E.WHIRLPOOL],[36,E.HEAVY_SLAM],[40,E.SLAM],[44,E.SHADOW_BALL],[48,E.METAL_SOUND],[52,E.ANCHOR_SHOT],[56,E.ENERGY_BALL],[60,E.PHANTOM_FORCE],[64,E.POWER_WHIP]],[A.JANGMO_O]:[[1,E.TACKLE],[1,E.LEER],[4,E.PROTECT],[8,E.DRAGON_TAIL],[12,E.SCARY_FACE],[16,E.HEADBUTT],[20,E.WORK_UP],[24,E.SCREECH],[28,E.IRON_DEFENSE],[32,E.DRAGON_CLAW],[36,E.NOBLE_ROAR],[40,E.DRAGON_DANCE],[44,E.OUTRAGE]],[A.HAKAMO_O]:[[b,E.SKY_UPPERCUT],[1,E.TACKLE],[1,E.LEER],[1,E.PROTECT],[1,E.DRAGON_TAIL],[1,E.BIDE],[12,E.SCARY_FACE],[16,E.HEADBUTT],[20,E.WORK_UP],[24,E.SCREECH],[28,E.IRON_DEFENSE],[32,E.DRAGON_CLAW],[38,E.NOBLE_ROAR],[44,E.DRAGON_DANCE],[50,E.OUTRAGE],[56,E.CLOSE_COMBAT]],[A.KOMMO_O]:[[b,E.CLANGING_SCALES],[V,E.BELLY_DRUM],[1,E.TACKLE],[1,E.LEER],[1,E.PROTECT],[1,E.DRAGON_TAIL],[1,E.BIDE],[1,E.SKY_UPPERCUT],[12,E.SCARY_FACE],[16,E.HEADBUTT],[20,E.WORK_UP],[24,E.SCREECH],[28,E.IRON_DEFENSE],[32,E.DRAGON_CLAW],[38,E.NOBLE_ROAR],[44,E.DRAGON_DANCE],[52,E.OUTRAGE],[60,E.CLOSE_COMBAT],[68,E.CLANGOROUS_SOUL],[76,E.BOOMBURST]],[A.TAPU_KOKO]:[[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[5,E.WITHDRAW],[10,E.FAIRY_WIND],[15,E.FALSE_SWIPE],[20,E.SPARK],[25,E.SHOCK_WAVE],[30,E.CHARGE],[35,E.AGILITY],[40,E.SCREECH],[45,E.DISCHARGE],[50,E.MEAN_LOOK],[55,E.NATURES_MADNESS],[60,E.WILD_CHARGE],[65,E.BRAVE_BIRD],[70,E.POWER_SWAP],[75,E.ELECTRIC_TERRAIN]],[A.TAPU_LELE]:[[1,E.CONFUSION],[1,E.ASTONISH],[5,E.WITHDRAW],[10,E.AROMATHERAPY],[15,E.DRAINING_KISS],[20,E.PSYBEAM],[25,E.FLATTER],[30,E.AROMATIC_MIST],[35,E.SWEET_SCENT],[40,E.EXTRASENSORY],[45,E.PSYSHOCK],[50,E.MEAN_LOOK],[55,E.NATURES_MADNESS],[60,E.MOONBLAST],[65,E.TICKLE],[70,E.SKILL_SWAP],[75,E.PSYCHIC_TERRAIN]],[A.TAPU_BULU]:[[1,E.ROCK_SMASH],[1,E.LEAFAGE],[5,E.WITHDRAW],[10,E.DISABLE],[15,E.LEECH_SEED],[20,E.MEGA_DRAIN],[25,E.WHIRLWIND],[30,E.HORN_ATTACK],[35,E.SCARY_FACE],[40,E.HORN_LEECH],[45,E.ZEN_HEADBUTT],[50,E.MEAN_LOOK],[55,E.NATURES_MADNESS],[60,E.WOOD_HAMMER],[65,E.MEGAHORN],[70,E.SKULL_BASH],[75,E.GRASSY_TERRAIN]],[A.TAPU_FINI]:[[1,E.WATER_GUN],[1,E.DISARMING_VOICE],[5,E.WITHDRAW],[10,E.MIST],[10,E.HAZE],[15,E.AQUA_RING],[20,E.WATER_PULSE],[25,E.BRINE],[30,E.DEFOG],[35,E.HEAL_PULSE],[40,E.SURF],[45,E.MUDDY_WATER],[50,E.MEAN_LOOK],[55,E.NATURES_MADNESS],[60,E.MOONBLAST],[65,E.HYDRO_PUMP],[70,E.SOAK],[75,E.MISTY_TERRAIN]],[A.COSMOG]:[[1,E.TELEPORT],[1,E.SPLASH],[1,E.STORED_POWER]],[A.COSMOEM]:[[b,E.COSMIC_POWER],[1,E.TELEPORT],[1,E.SPLASH],[1,E.STORED_POWER]],[A.SOLGALEO]:[[b,E.SUNSTEEL_STRIKE],[1,E.TELEPORT],[1,E.SPLASH],[1,E.STORED_POWER],[1,E.METAL_CLAW],[1,E.COSMIC_POWER],[1,E.NOBLE_ROAR],[1,E.WAKE_UP_SLAP],[7,E.IRON_HEAD],[14,E.METAL_SOUND],[21,E.ZEN_HEADBUTT],[28,E.FLASH_CANNON],[35,E.MORNING_SUN],[42,E.CRUNCH],[49,E.METAL_BURST],[56,E.WILD_CHARGE],[63,E.SOLAR_BEAM],[70,E.FLARE_BLITZ],[77,E.WIDE_GUARD],[84,E.GIGA_IMPACT]],[A.LUNALA]:[[b,E.MOONGEIST_BEAM],[1,E.CONFUSION],[1,E.HYPNOSIS],[1,E.TELEPORT],[1,E.SPLASH],[1,E.STORED_POWER],[1,E.COSMIC_POWER],[7,E.NIGHT_SHADE],[14,E.CONFUSE_RAY],[21,E.AIR_SLASH],[28,E.SHADOW_BALL],[35,E.MOONLIGHT],[42,E.NIGHT_DAZE],[49,E.MAGIC_COAT],[56,E.MOONBLAST],[63,E.PHANTOM_FORCE],[70,E.DREAM_EATER],[77,E.WIDE_GUARD],[84,E.HYPER_BEAM]],[A.NIHILEGO]:[[1,E.POUND],[1,E.WRAP],[1,E.CONSTRICT],[5,E.ACID],[10,E.TICKLE],[15,E.ACID_SPRAY],[20,E.CLEAR_SMOG],[25,E.GUARD_SPLIT],[25,E.POWER_SPLIT],[30,E.VENOSHOCK],[35,E.HEADBUTT],[40,E.TOXIC_SPIKES],[45,E.VENOM_DRENCH],[50,E.POWER_GEM],[55,E.STEALTH_ROCK],[60,E.MIRROR_COAT],[65,E.WONDER_ROOM],[70,E.HEAD_SMASH]],[A.BUZZWOLE]:[[1,E.HARDEN],[1,E.POWER_UP_PUNCH],[5,E.TAUNT],[10,E.FELL_STINGER],[15,E.VITAL_THROW],[20,E.BULK_UP],[25,E.ENDURE],[30,E.REVERSAL],[35,E.MEGA_PUNCH],[40,E.LUNGE],[45,E.FOCUS_ENERGY],[50,E.DYNAMIC_PUNCH],[55,E.COUNTER],[60,E.HAMMER_ARM],[65,E.SUPERPOWER],[70,E.FOCUS_PUNCH]],[A.PHEROMOSA]:[[1,E.RAPID_SPIN],[1,E.FEINT],[5,E.LEER],[10,E.QUICK_GUARD],[15,E.BUG_BITE],[20,E.LOW_KICK],[25,E.DOUBLE_KICK],[30,E.TRIPLE_KICK],[35,E.STOMP],[40,E.AGILITY],[45,E.LUNGE],[50,E.BOUNCE],[55,E.SPEED_SWAP],[60,E.BUG_BUZZ],[65,E.QUIVER_DANCE],[70,E.HIGH_JUMP_KICK]],[A.XURKITREE]:[[1,E.WRAP],[1,E.THUNDER_SHOCK],[5,E.CHARGE],[10,E.THUNDER_WAVE],[15,E.INGRAIN],[20,E.SPARK],[25,E.SHOCK_WAVE],[30,E.HYPNOSIS],[35,E.EERIE_IMPULSE],[40,E.THUNDER_PUNCH],[45,E.DISCHARGE],[50,E.MAGNET_RISE],[55,E.THUNDERBOLT],[60,E.ELECTRIC_TERRAIN],[65,E.POWER_WHIP],[70,E.ZAP_CANNON]],[A.CELESTEELA]:[[1,E.TACKLE],[1,E.ABSORB],[5,E.HARDEN],[10,E.WIDE_GUARD],[15,E.MEGA_DRAIN],[20,E.SMACK_DOWN],[25,E.INGRAIN],[30,E.AUTOTOMIZE],[35,E.GIGA_DRAIN],[40,E.FLASH_CANNON],[45,E.METAL_SOUND],[50,E.IRON_DEFENSE],[55,E.LEECH_SEED],[60,E.HEAVY_SLAM],[65,E.DOUBLE_EDGE],[70,E.SKULL_BASH]],[A.KARTANA]:[[1,E.FURY_CUTTER],[1,E.VACUUM_WAVE],[5,E.RAZOR_LEAF],[10,E.FALSE_SWIPE],[15,E.CUT],[20,E.AIR_CUTTER],[25,E.AERIAL_ACE],[30,E.DETECT],[35,E.NIGHT_SLASH],[40,E.SYNTHESIS],[45,E.LASER_FOCUS],[50,E.DEFOG],[55,E.LEAF_BLADE],[60,E.SACRED_SWORD],[65,E.SWORDS_DANCE],[70,E.GUILLOTINE]],[A.GUZZLORD]:[[1,E.BITE],[1,E.DRAGON_TAIL],[5,E.STOCKPILE],[5,E.SWALLOW],[10,E.KNOCK_OFF],[15,E.STOMP],[20,E.STOMPING_TANTRUM],[25,E.WIDE_GUARD],[30,E.CRUNCH],[35,E.BODY_SLAM],[40,E.GASTRO_ACID],[45,E.HAMMER_ARM],[50,E.HEAVY_SLAM],[55,E.DRAGON_RUSH],[60,E.BELCH],[65,E.THRASH],[70,E.GIGA_IMPACT]],[A.NECROZMA]:[[1,E.CONFUSION],[1,E.METAL_CLAW],[1,E.MORNING_SUN],[1,E.MOONLIGHT],[1,E.GRAVITY],[1,E.CHARGE_BEAM],[1,E.MIRROR_SHOT],[8,E.STEALTH_ROCK],[16,E.SLASH],[24,E.NIGHT_SLASH],[32,E.PSYCHO_CUT],[40,E.STORED_POWER],[48,E.ROCK_BLAST],[56,E.IRON_DEFENSE],[64,E.POWER_GEM],[72,E.PHOTON_GEYSER],[80,E.AUTOTOMIZE],[88,E.PRISMATIC_LASER]],[A.MAGEARNA]:[[1,E.HELPING_HAND],[1,E.GYRO_BALL],[1,E.DISARMING_VOICE],[1,E.CRAFTY_SHIELD],[1,E.GEAR_UP],[6,E.DEFENSE_CURL],[12,E.ROLLOUT],[18,E.IRON_DEFENSE],[24,E.MAGNETIC_FLUX],[30,E.PSYBEAM],[36,E.AURORA_BEAM],[42,E.LOCK_ON],[48,E.SHIFT_GEAR],[54,E.TRICK],[60,E.IRON_HEAD],[66,E.AURA_SPHERE],[72,E.FLASH_CANNON],[78,E.PAIN_SPLIT],[84,E.ZAP_CANNON],[90,E.FLEUR_CANNON]],[A.MARSHADOW]:[[1,E.FIRE_PUNCH],[1,E.ICE_PUNCH],[1,E.THUNDER_PUNCH],[1,E.COUNTER],[1,E.FEINT],[1,E.COPYCAT],[1,E.SHADOW_SNEAK],[1,E.PURSUIT],[9,E.ROLE_PLAY],[18,E.SHADOW_PUNCH],[27,E.FORCE_PALM],[36,E.ASSURANCE],[45,E.SUCKER_PUNCH],[54,E.DRAIN_PUNCH],[63,E.PSYCH_UP],[72,E.SPECTRAL_THIEF],[81,E.LASER_FOCUS],[90,E.ENDEAVOR],[99,E.CLOSE_COMBAT]],[A.POIPOLE]:[[V,E.DRAGON_PULSE],[1,E.GROWL],[1,E.ACID],[1,E.PECK],[1,E.HELPING_HAND],[7,E.FURY_ATTACK],[14,E.FELL_STINGER],[21,E.CHARM],[28,E.VENOSHOCK],[35,E.VENOM_DRENCH],[42,E.NASTY_PLOT],[49,E.POISON_JAB],[56,E.GASTRO_ACID],[63,E.TOXIC]],[A.NAGANADEL]:[[b,E.AIR_CUTTER],[1,E.GROWL],[1,E.ACID],[1,E.PECK],[1,E.HELPING_HAND],[1,E.AIR_SLASH],[1,E.DRAGON_PULSE],[7,E.FURY_ATTACK],[14,E.FELL_STINGER],[21,E.CHARM],[28,E.VENOSHOCK],[35,E.VENOM_DRENCH],[42,E.NASTY_PLOT],[49,E.POISON_JAB],[56,E.GASTRO_ACID],[63,E.TOXIC],[70,E.DRAGON_RUSH]],[A.STAKATAKA]:[[1,E.TACKLE],[1,E.HARDEN],[5,E.ROCK_THROW],[10,E.PROTECT],[15,E.STOMP],[20,E.BLOCK],[25,E.ROCK_SLIDE],[30,E.WIDE_GUARD],[35,E.AUTOTOMIZE],[40,E.ROCK_BLAST],[45,E.MAGNET_RISE],[50,E.IRON_DEFENSE],[55,E.IRON_HEAD],[60,E.TAKE_DOWN],[65,E.STEALTH_ROCK],[70,E.DOUBLE_EDGE]],[A.BLACEPHALON]:[[1,E.FIRE_SPIN],[1,E.ASTONISH],[5,E.LIGHT_SCREEN],[10,E.EMBER],[15,E.NIGHT_SHADE],[20,E.CONFUSE_RAY],[25,E.MAGIC_COAT],[30,E.INCINERATE],[35,E.HYPNOSIS],[40,E.MYSTICAL_FIRE],[45,E.SHADOW_BALL],[50,E.CALM_MIND],[55,E.WILL_O_WISP],[60,E.TRICK],[65,E.FIRE_BLAST],[70,E.MIND_BLOWN]],[A.ZERAORA]:[[1,E.SCRATCH],[1,E.QUICK_ATTACK],[1,E.SPARK],[1,E.FAKE_OUT],[1,E.SNARL],[1,E.POWER_UP_PUNCH],[8,E.FURY_SWIPES],[16,E.QUICK_GUARD],[24,E.SLASH],[32,E.VOLT_SWITCH],[40,E.CHARGE],[48,E.THUNDER_PUNCH],[56,E.HONE_CLAWS],[64,E.DISCHARGE],[72,E.WILD_CHARGE],[80,E.AGILITY],[88,E.PLASMA_FISTS],[96,E.CLOSE_COMBAT]],[A.MELTAN]:[[1,E.THUNDER_SHOCK],[1,E.HARDEN],[8,E.TAIL_WHIP],[16,E.HEADBUTT],[24,E.THUNDER_WAVE],[32,E.ACID_ARMOR],[40,E.FLASH_CANNON]],[A.MELMETAL]:[[b,E.THUNDER_PUNCH],[1,E.HEADBUTT],[1,E.TAIL_WHIP],[1,E.THUNDER_SHOCK],[1,E.HARDEN],[24,E.THUNDER_WAVE],[32,E.ACID_ARMOR],[40,E.FLASH_CANNON],[48,E.MEGA_PUNCH],[56,E.PROTECT],[64,E.DISCHARGE],[72,E.DYNAMIC_PUNCH],[80,E.SUPERPOWER],[88,E.DOUBLE_IRON_BASH],[96,E.HYPER_BEAM]],[A.GROOKEY]:[[1,E.SCRATCH],[1,E.GROWL],[5,E.BRANCH_POKE],[8,E.TAUNT],[12,E.RAZOR_LEAF],[17,E.SCREECH],[20,E.KNOCK_OFF],[24,E.SLAM],[28,E.UPROAR],[32,E.WOOD_HAMMER],[36,E.ENDEAVOR]],[A.THWACKEY]:[[b,E.DOUBLE_HIT],[1,E.SCRATCH],[1,E.GROWL],[1,E.TAUNT],[1,E.BRANCH_POKE],[12,E.RAZOR_LEAF],[19,E.SCREECH],[24,E.KNOCK_OFF],[30,E.SLAM],[36,E.UPROAR],[42,E.WOOD_HAMMER],[48,E.ENDEAVOR]],[A.RILLABOOM]:[[b,E.DRUM_BEATING],[1,E.SCRATCH],[1,E.GROWL],[1,E.TAUNT],[1,E.DOUBLE_HIT],[1,E.NOBLE_ROAR],[1,E.GRASSY_TERRAIN],[1,E.BRANCH_POKE],[12,E.RAZOR_LEAF],[19,E.SCREECH],[24,E.KNOCK_OFF],[30,E.SLAM],[38,E.UPROAR],[46,E.WOOD_HAMMER],[54,E.ENDEAVOR],[62,E.BOOMBURST]],[A.SCORBUNNY]:[[1,E.TACKLE],[1,E.GROWL],[5,E.EMBER],[8,E.QUICK_ATTACK],[12,E.DOUBLE_KICK],[17,E.FLAME_CHARGE],[20,E.AGILITY],[24,E.HEADBUTT],[28,E.COUNTER],[32,E.BOUNCE],[36,E.DOUBLE_EDGE]],[A.RABOOT]:[[1,E.TACKLE],[1,E.GROWL],[1,E.EMBER],[1,E.QUICK_ATTACK],[12,E.DOUBLE_KICK],[19,E.FLAME_CHARGE],[24,E.AGILITY],[30,E.HEADBUTT],[36,E.COUNTER],[42,E.BOUNCE],[48,E.DOUBLE_EDGE]],[A.CINDERACE]:[[b,E.PYRO_BALL],[1,E.TACKLE],[1,E.GROWL],[1,E.EMBER],[1,E.QUICK_ATTACK],[1,E.FEINT],[12,E.DOUBLE_KICK],[19,E.FLAME_CHARGE],[24,E.AGILITY],[30,E.HEADBUTT],[38,E.COUNTER],[46,E.BOUNCE],[54,E.DOUBLE_EDGE],[62,E.COURT_CHANGE]],[A.SOBBLE]:[[1,E.POUND],[1,E.GROWL],[5,E.WATER_GUN],[8,E.BIND],[12,E.WATER_PULSE],[17,E.TEARFUL_LOOK],[20,E.SUCKER_PUNCH],[24,E.U_TURN],[28,E.LIQUIDATION],[32,E.SOAK],[36,E.RAIN_DANCE]],[A.DRIZZILE]:[[1,E.POUND],[1,E.BIND],[1,E.GROWL],[1,E.WATER_GUN],[12,E.WATER_PULSE],[19,E.TEARFUL_LOOK],[24,E.SUCKER_PUNCH],[30,E.U_TURN],[36,E.LIQUIDATION],[42,E.SOAK],[48,E.RAIN_DANCE]],[A.INTELEON]:[[b,E.SNIPE_SHOT],[1,E.POUND],[1,E.BIND],[1,E.GROWL],[1,E.WATER_GUN],[1,E.ACROBATICS],[12,E.WATER_PULSE],[19,E.TEARFUL_LOOK],[24,E.SUCKER_PUNCH],[30,E.U_TURN],[38,E.LIQUIDATION],[46,E.SOAK],[54,E.RAIN_DANCE],[62,E.HYDRO_PUMP]],[A.SKWOVET]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.BITE],[10,E.STUFF_CHEEKS],[15,E.STOCKPILE],[15,E.SPIT_UP],[15,E.SWALLOW],[20,E.BODY_SLAM],[25,E.REST],[30,E.COUNTER],[35,E.BULLET_SEED],[40,E.SUPER_FANG],[45,E.BELCH]],[A.GREEDENT]:[[b,E.COVET],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.STUFF_CHEEKS],[15,E.STOCKPILE],[15,E.SPIT_UP],[15,E.SWALLOW],[20,E.BODY_SLAM],[27,E.REST],[34,E.COUNTER],[41,E.BULLET_SEED],[48,E.SUPER_FANG],[55,E.BELCH]],[A.ROOKIDEE]:[[1,E.LEER],[1,E.PECK],[4,E.POWER_TRIP],[8,E.HONE_CLAWS],[12,E.FURY_ATTACK],[16,E.PLUCK],[20,E.TAUNT],[24,E.SCARY_FACE],[28,E.DRILL_PECK],[32,E.SWAGGER],[36,E.BRAVE_BIRD]],[A.CORVISQUIRE]:[[1,E.LEER],[1,E.PECK],[1,E.HONE_CLAWS],[1,E.POWER_TRIP],[12,E.FURY_ATTACK],[16,E.PLUCK],[22,E.TAUNT],[28,E.SCARY_FACE],[34,E.DRILL_PECK],[40,E.SWAGGER],[46,E.BRAVE_BIRD]],[A.CORVIKNIGHT]:[[b,E.STEEL_WING],[1,E.LEER],[1,E.PECK],[1,E.SCREECH],[1,E.METAL_SOUND],[1,E.IRON_DEFENSE],[1,E.HONE_CLAWS],[1,E.POWER_TRIP],[12,E.FURY_ATTACK],[16,E.PLUCK],[22,E.TAUNT],[28,E.SCARY_FACE],[34,E.DRILL_PECK],[42,E.SWAGGER],[50,E.BRAVE_BIRD]],[A.BLIPBUG]:[[1,E.STRUGGLE_BUG]],[A.DOTTLER]:[[b,E.CONFUSION],[b,E.LIGHT_SCREEN],[b,E.REFLECT],[1,E.CONFUSION],[1,E.LIGHT_SCREEN],[1,E.REFLECT],[1,E.STRUGGLE_BUG]],[A.ORBEETLE]:[[1,E.CONFUSION],[1,E.LIGHT_SCREEN],[1,E.REFLECT],[1,E.STRUGGLE_BUG],[4,E.CONFUSE_RAY],[8,E.MAGIC_COAT],[12,E.AGILITY],[16,E.PSYBEAM],[20,E.HYPNOSIS],[24,E.ALLY_SWITCH],[28,E.BUG_BUZZ],[32,E.MIRROR_COAT],[36,E.PSYCHIC],[40,E.AFTER_YOU],[44,E.CALM_MIND],[48,E.PSYCHIC_TERRAIN]],[A.NICKIT]:[[1,E.TAIL_WHIP],[1,E.QUICK_ATTACK],[4,E.BEAT_UP],[8,E.HONE_CLAWS],[12,E.SNARL],[16,E.ASSURANCE],[20,E.NASTY_PLOT],[24,E.SUCKER_PUNCH],[28,E.NIGHT_SLASH],[32,E.TAIL_SLAP],[36,E.FOUL_PLAY]],[A.THIEVUL]:[[b,E.THIEF],[1,E.TAIL_WHIP],[1,E.QUICK_ATTACK],[1,E.BEAT_UP],[1,E.HONE_CLAWS],[12,E.SNARL],[16,E.ASSURANCE],[22,E.NASTY_PLOT],[28,E.SUCKER_PUNCH],[34,E.NIGHT_SLASH],[40,E.TAIL_SLAP],[46,E.FOUL_PLAY],[52,E.PARTING_SHOT]],[A.GOSSIFLEUR]:[[1,E.SING],[1,E.LEAFAGE],[4,E.RAPID_SPIN],[8,E.SWEET_SCENT],[12,E.RAZOR_LEAF],[16,E.ROUND],[21,E.LEAF_TORNADO],[24,E.SYNTHESIS],[28,E.HYPER_VOICE],[32,E.AROMATHERAPY],[36,E.LEAF_STORM]],[A.ELDEGOSS]:[[b,E.COTTON_SPORE],[1,E.SING],[1,E.RAPID_SPIN],[1,E.SWEET_SCENT],[1,E.LEAFAGE],[12,E.RAZOR_LEAF],[16,E.ROUND],[23,E.LEAF_TORNADO],[28,E.SYNTHESIS],[34,E.HYPER_VOICE],[40,E.AROMATHERAPY],[46,E.LEAF_STORM],[52,E.COTTON_GUARD]],[A.WOOLOO]:[[1,E.TACKLE],[1,E.GROWL],[4,E.DEFENSE_CURL],[8,E.COPYCAT],[12,E.GUARD_SPLIT],[16,E.DOUBLE_KICK],[21,E.HEADBUTT],[25,E.TAKE_DOWN],[28,E.GUARD_SWAP],[32,E.REVERSAL],[36,E.COTTON_GUARD],[40,E.DOUBLE_EDGE]],[A.DUBWOOL]:[[1,E.TACKLE],[1,E.GROWL],[1,E.DEFENSE_CURL],[1,E.COPYCAT],[12,E.GUARD_SPLIT],[16,E.DOUBLE_KICK],[21,E.HEADBUTT],[27,E.TAKE_DOWN],[32,E.GUARD_SWAP],[38,E.REVERSAL],[44,E.COTTON_GUARD],[50,E.DOUBLE_EDGE],[56,E.LAST_RESORT]],[A.CHEWTLE]:[[1,E.TACKLE],[1,E.WATER_GUN],[7,E.BITE],[14,E.PROTECT],[21,E.HEADBUTT],[28,E.COUNTER],[35,E.JAW_LOCK],[42,E.LIQUIDATION],[49,E.BODY_SLAM]],[A.DREDNAW]:[[b,E.ROCK_TOMB],[1,E.TACKLE],[1,E.BITE],[1,E.WATER_GUN],[1,E.PROTECT],[1,E.CRUNCH],[1,E.ROCK_POLISH],[1,E.RAZOR_SHELL],[21,E.HEADBUTT],[30,E.COUNTER],[39,E.JAW_LOCK],[48,E.LIQUIDATION],[57,E.BODY_SLAM],[66,E.HEAD_SMASH]],[A.YAMPER]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.NUZZLE],[10,E.BITE],[15,E.ROAR],[20,E.SPARK],[26,E.CHARM],[30,E.CRUNCH],[35,E.CHARGE],[40,E.WILD_CHARGE],[45,E.PLAY_ROUGH]],[A.BOLTUND]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.BITE],[1,E.ELECTRIFY],[1,E.NUZZLE],[15,E.ROAR],[20,E.SPARK],[28,E.CHARM],[34,E.CRUNCH],[41,E.CHARGE],[48,E.WILD_CHARGE],[55,E.PLAY_ROUGH],[62,E.ELECTRIC_TERRAIN]],[A.ROLYCOLY]:[[1,E.TACKLE],[1,E.SMOKESCREEN],[5,E.RAPID_SPIN],[10,E.SMACK_DOWN],[15,E.ROCK_POLISH],[20,E.ANCIENT_POWER],[25,E.INCINERATE],[30,E.STEALTH_ROCK],[35,E.HEAT_CRASH],[40,E.ROCK_BLAST]],[A.CARKOL]:[[b,E.FLAME_CHARGE],[1,E.TACKLE],[1,E.SMOKESCREEN],[1,E.RAPID_SPIN],[1,E.SMACK_DOWN],[15,E.ROCK_POLISH],[20,E.ANCIENT_POWER],[27,E.INCINERATE],[35,E.STEALTH_ROCK],[41,E.HEAT_CRASH],[48,E.ROCK_BLAST],[55,E.STONE_EDGE]],[A.COALOSSAL]:[[b,E.TAR_SHOT],[1,E.TACKLE],[1,E.SMOKESCREEN],[1,E.RAPID_SPIN],[1,E.SMACK_DOWN],[1,E.FLAME_CHARGE],[15,E.ROCK_POLISH],[20,E.ANCIENT_POWER],[27,E.INCINERATE],[37,E.STEALTH_ROCK],[45,E.HEAT_CRASH],[54,E.ROCK_BLAST],[63,E.STONE_EDGE]],[A.APPLIN]:[[1,E.WITHDRAW],[1,E.ASTONISH],[1,E.LEAFAGE]],[A.FLAPPLE]:[[b,E.WING_ATTACK],[1,E.LEAFAGE],[1,E.GROWTH],[1,E.WITHDRAW],[1,E.TWISTER],[1,E.RECYCLE],[1,E.ASTONISH],[4,E.ACID_SPRAY],[8,E.ACROBATICS],[12,E.LEECH_SEED],[16,E.PROTECT],[20,E.DRAGON_BREATH],[24,E.DRAGON_DANCE],[28,E.DRAGON_PULSE],[32,E.GRAV_APPLE],[36,E.IRON_DEFENSE],[40,E.FLY],[44,E.DRAGON_RUSH]],[A.APPLETUN]:[[b,E.HEADBUTT],[1,E.LEAFAGE],[1,E.GROWTH],[1,E.WITHDRAW],[1,E.SWEET_SCENT],[1,E.RECYCLE],[1,E.ASTONISH],[4,E.CURSE],[8,E.STOMP],[12,E.LEECH_SEED],[16,E.PROTECT],[20,E.BULLET_SEED],[24,E.RECOVER],[28,E.APPLE_ACID],[32,E.BODY_SLAM],[36,E.IRON_DEFENSE],[40,E.DRAGON_PULSE],[44,E.ENERGY_BALL]],[A.SILICOBRA]:[[1,E.SAND_ATTACK],[1,E.WRAP],[1,E.MUD_SLAP],[5,E.MINIMIZE],[10,E.BRUTAL_SWING],[15,E.BULLDOZE],[20,E.HEADBUTT],[25,E.GLARE],[30,E.DIG],[35,E.SANDSTORM],[40,E.SLAM],[45,E.COIL],[50,E.SAND_TOMB]],[A.SANDACONDA]:[[1,E.SAND_ATTACK],[1,E.WRAP],[1,E.MUD_SLAP],[1,E.MINIMIZE],[1,E.BRUTAL_SWING],[15,E.BULLDOZE],[20,E.HEADBUTT],[25,E.GLARE],[30,E.DIG],[35,E.SANDSTORM],[42,E.SLAM],[49,E.COIL],[51,E.SAND_TOMB]],[A.CRAMORANT]:[[V,E.BELCH],[1,E.PECK],[1,E.STOCKPILE],[1,E.SPIT_UP],[1,E.SWALLOW],[7,E.WATER_GUN],[14,E.FURY_ATTACK],[21,E.PLUCK],[28,E.DIVE],[35,E.DRILL_PECK],[42,E.AMNESIA],[49,E.THRASH],[56,E.HYDRO_PUMP]],[A.ARROKUDA]:[[1,E.PECK],[1,E.AQUA_JET],[6,E.FURY_ATTACK],[12,E.BITE],[18,E.AGILITY],[24,E.DIVE],[30,E.FOCUS_ENERGY],[36,E.CRUNCH],[42,E.LIQUIDATION],[48,E.DOUBLE_EDGE]],[A.BARRASKEWDA]:[[1,E.FURY_ATTACK],[1,E.BITE],[1,E.PECK],[1,E.AQUA_JET],[1,E.THROAT_CHOP],[18,E.AGILITY],[24,E.DIVE],[32,E.FOCUS_ENERGY],[40,E.CRUNCH],[48,E.LIQUIDATION],[56,E.DOUBLE_EDGE]],[A.TOXEL]:[[1,E.GROWL],[1,E.ACID],[1,E.FLAIL],[1,E.BELCH],[1,E.NUZZLE],[1,E.TEARFUL_LOOK]],[A.TOXTRICITY]:[[b,E.SPARK],[1,E.LEER],[1,E.GROWL],[1,E.ACID],[1,E.THUNDER_SHOCK],[1,E.FLAIL],[1,E.ACID_SPRAY],[1,E.BELCH],[1,E.NOBLE_ROAR],[1,E.NUZZLE],[1,E.TEARFUL_LOOK],[4,E.CHARGE],[8,E.SHOCK_WAVE],[12,E.SCARY_FACE],[16,E.TAUNT],[24,E.SCREECH],[28,E.SWAGGER],[32,E.TOXIC],[36,E.DISCHARGE],[40,E.POISON_JAB],[44,E.OVERDRIVE],[48,E.BOOMBURST],[52,E.SHIFT_GEAR]],[A.SIZZLIPEDE]:[[1,E.EMBER],[1,E.SMOKESCREEN],[5,E.WRAP],[10,E.BITE],[15,E.FLAME_WHEEL],[20,E.BUG_BITE],[25,E.COIL],[30,E.SLAM],[35,E.FIRE_SPIN],[40,E.CRUNCH],[45,E.FIRE_LASH],[50,E.LUNGE],[55,E.BURN_UP]],[A.CENTISKORCH]:[[1,E.WRAP],[1,E.BITE],[1,E.EMBER],[1,E.SMOKESCREEN],[1,E.INFERNO],[15,E.FLAME_WHEEL],[20,E.BUG_BITE],[25,E.COIL],[32,E.SLAM],[39,E.FIRE_SPIN],[46,E.CRUNCH],[53,E.FIRE_LASH],[60,E.LUNGE],[67,E.BURN_UP]],[A.CLOBBOPUS]:[[1,E.LEER],[1,E.ROCK_SMASH],[5,E.FEINT],[10,E.BIND],[15,E.DETECT],[20,E.BRICK_BREAK],[25,E.BULK_UP],[30,E.SUBMISSION],[35,E.TAUNT],[40,E.REVERSAL],[45,E.SUPERPOWER]],[A.GRAPPLOCT]:[[b,E.OCTOLOCK],[1,E.BIND],[1,E.LEER],[1,E.OCTAZOOKA],[1,E.ROCK_SMASH],[1,E.FEINT],[15,E.DETECT],[20,E.BRICK_BREAK],[25,E.BULK_UP],[30,E.SUBMISSION],[35,E.TAUNT],[40,E.REVERSAL],[45,E.SUPERPOWER],[50,E.TOPSY_TURVY]],[A.SINISTEA]:[[1,E.WITHDRAW],[1,E.ASTONISH],[1,E.ABSORB],[6,E.AROMATIC_MIST],[12,E.MEGA_DRAIN],[24,E.SUCKER_PUNCH],[30,E.SWEET_SCENT],[36,E.GIGA_DRAIN],[42,E.NASTY_PLOT],[48,E.SHADOW_BALL],[54,E.MEMENTO],[60,E.SHELL_SMASH]],[A.POLTEAGEIST]:[[b,E.TEATIME],[1,E.ABSORB],[1,E.MEGA_DRAIN],[1,E.WITHDRAW],[1,E.ASTONISH],[1,E.AROMATIC_MIST],[1,E.STRENGTH_SAP],[18,E.PROTECT],[24,E.SUCKER_PUNCH],[30,E.SWEET_SCENT],[36,E.GIGA_DRAIN],[42,E.NASTY_PLOT],[48,E.SHADOW_BALL],[54,E.MEMENTO],[60,E.SHELL_SMASH],[66,E.CURSE]],[A.HATENNA]:[[1,E.CONFUSION],[1,E.PLAY_NICE],[5,E.LIFE_DEW],[10,E.DISARMING_VOICE],[15,E.AROMATIC_MIST],[20,E.PSYBEAM],[25,E.HEAL_PULSE],[30,E.DAZZLING_GLEAM],[35,E.CALM_MIND],[40,E.PSYCHIC],[45,E.HEALING_WISH]],[A.HATTREM]:[[b,E.BRUTAL_SWING],[1,E.CONFUSION],[1,E.DISARMING_VOICE],[1,E.PLAY_NICE],[1,E.LIFE_DEW],[15,E.AROMATIC_MIST],[20,E.PSYBEAM],[25,E.HEAL_PULSE],[30,E.DAZZLING_GLEAM],[37,E.CALM_MIND],[44,E.PSYCHIC],[51,E.HEALING_WISH]],[A.HATTERENE]:[[b,E.PSYCHO_CUT],[1,E.CONFUSION],[1,E.DISARMING_VOICE],[1,E.PLAY_NICE],[1,E.BRUTAL_SWING],[1,E.LIFE_DEW],[15,E.AROMATIC_MIST],[20,E.PSYBEAM],[25,E.HEAL_PULSE],[30,E.DAZZLING_GLEAM],[37,E.CALM_MIND],[46,E.PSYCHIC],[55,E.HEALING_WISH],[64,E.MAGIC_POWDER]],[A.IMPIDIMP]:[[1,E.FAKE_OUT],[1,E.CONFIDE],[4,E.BITE],[8,E.FLATTER],[12,E.FAKE_TEARS],[16,E.ASSURANCE],[20,E.SWAGGER],[24,E.SUCKER_PUNCH],[28,E.TORMENT],[33,E.DARK_PULSE],[36,E.NASTY_PLOT],[40,E.PLAY_ROUGH],[44,E.FOUL_PLAY]],[A.MORGREM]:[[b,E.FALSE_SURRENDER],[1,E.BITE],[1,E.FAKE_OUT],[1,E.FLATTER],[1,E.CONFIDE],[12,E.FAKE_TEARS],[16,E.ASSURANCE],[20,E.SWAGGER],[24,E.SUCKER_PUNCH],[28,E.TORMENT],[35,E.DARK_PULSE],[40,E.NASTY_PLOT],[46,E.PLAY_ROUGH],[52,E.FOUL_PLAY]],[A.GRIMMSNARL]:[[b,E.SPIRIT_BREAK],[1,E.BITE],[1,E.FAKE_OUT],[1,E.FLATTER],[1,E.BULK_UP],[1,E.CONFIDE],[1,E.FALSE_SURRENDER],[12,E.FAKE_TEARS],[16,E.ASSURANCE],[20,E.SWAGGER],[24,E.SUCKER_PUNCH],[28,E.TORMENT],[35,E.DARK_PULSE],[40,E.NASTY_PLOT],[48,E.PLAY_ROUGH],[56,E.FOUL_PLAY],[64,E.HAMMER_ARM]],[A.OBSTAGOON]:[[b,E.OBSTRUCT],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.PIN_MISSILE],[1,E.LEER],[1,E.SUBMISSION],[1,E.LICK],[1,E.CROSS_CHOP],[1,E.NIGHT_SLASH],[1,E.SWITCHEROO],[1,E.BABY_DOLL_EYES],[9,E.SNARL],[12,E.HEADBUTT],[15,E.HONE_CLAWS],[18,E.FURY_SWIPES],[23,E.REST],[28,E.TAKE_DOWN],[35,E.SCARY_FACE],[42,E.COUNTER],[49,E.TAUNT],[56,E.DOUBLE_EDGE]],[A.PERRSERKER]:[[b,E.IRON_HEAD],[1,E.SCRATCH],[1,E.GROWL],[1,E.FAKE_OUT],[1,E.IRON_DEFENSE],[1,E.METAL_BURST],[1,E.HONE_CLAWS],[12,E.PAY_DAY],[16,E.METAL_CLAW],[20,E.TAUNT],[24,E.SWAGGER],[31,E.FURY_SWIPES],[36,E.SCREECH],[42,E.SLASH],[48,E.METAL_SOUND],[54,E.THRASH]],[A.CURSOLA]:[[1,E.TACKLE],[1,E.DISABLE],[1,E.HARDEN],[1,E.PERISH_SONG],[1,E.ASTONISH],[15,E.SPITE],[20,E.ANCIENT_POWER],[25,E.HEX],[30,E.CURSE],[35,E.STRENGTH_SAP],[40,E.POWER_GEM],[45,E.NIGHT_SHADE],[50,E.GRUDGE],[55,E.MIRROR_COAT]],[A.SIRFETCHD]:[[b,E.IRON_DEFENSE],[1,E.SAND_ATTACK],[1,E.LEER],[1,E.PECK],[1,E.FURY_CUTTER],[1,E.FIRST_IMPRESSION],[15,E.ROCK_SMASH],[20,E.BRUTAL_SWING],[25,E.DETECT],[30,E.KNOCK_OFF],[35,E.DEFOG],[40,E.BRICK_BREAK],[45,E.SWORDS_DANCE],[50,E.SLAM],[55,E.LEAF_BLADE],[60,E.FINAL_GAMBIT],[65,E.BRAVE_BIRD],[70,E.METEOR_ASSAULT]],[A.MR_RIME]:[[1,E.POUND],[1,E.BARRIER],[1,E.TICKLE],[1,E.MIMIC],[1,E.LIGHT_SCREEN],[1,E.REFLECT],[1,E.PROTECT],[1,E.SAFEGUARD],[1,E.BATON_PASS],[1,E.ENCORE],[1,E.RAPID_SPIN],[1,E.ROLE_PLAY],[1,E.RECYCLE],[1,E.SLACK_OFF],[1,E.FAKE_TEARS],[1,E.BLOCK],[1,E.COPYCAT],[1,E.ICE_SHARD],[1,E.AFTER_YOU],[1,E.MISTY_TERRAIN],[1,E.DAZZLING_GLEAM],[12,E.CONFUSION],[16,E.ALLY_SWITCH],[20,E.ICY_WIND],[24,E.DOUBLE_KICK],[28,E.PSYBEAM],[32,E.HYPNOSIS],[36,E.MIRROR_COAT],[40,E.SUCKER_PUNCH],[44,E.FREEZE_DRY],[48,E.PSYCHIC],[52,E.TEETER_DANCE]],[A.RUNERIGUS]:[[b,E.SHADOW_CLAW],[1,E.NIGHT_SHADE],[1,E.HAZE],[1,E.PROTECT],[1,E.SCARY_FACE],[1,E.ASTONISH],[12,E.DISABLE],[16,E.BRUTAL_SWING],[20,E.CRAFTY_SHIELD],[24,E.HEX],[28,E.MEAN_LOOK],[32,E.SLAM],[38,E.CURSE],[44,E.SHADOW_BALL],[50,E.EARTHQUAKE],[56,E.GUARD_SPLIT],[56,E.POWER_SPLIT],[62,E.DESTINY_BOND]],[A.MILCERY]:[[1,E.TACKLE],[1,E.AROMATIC_MIST],[5,E.SWEET_KISS],[10,E.SWEET_SCENT],[15,E.DRAINING_KISS],[20,E.AROMATHERAPY],[25,E.ATTRACT],[30,E.ACID_ARMOR],[35,E.DAZZLING_GLEAM],[40,E.RECOVER],[45,E.MISTY_TERRAIN],[50,E.ENTRAINMENT]],[A.ALCREMIE]:[[b,E.DECORATE],[1,E.TACKLE],[1,E.SWEET_KISS],[1,E.SWEET_SCENT],[1,E.AROMATIC_MIST],[15,E.DRAINING_KISS],[20,E.AROMATHERAPY],[25,E.ATTRACT],[30,E.ACID_ARMOR],[35,E.DAZZLING_GLEAM],[40,E.RECOVER],[45,E.MISTY_TERRAIN],[50,E.ENTRAINMENT]],[A.FALINKS]:[[1,E.TACKLE],[1,E.PROTECT],[5,E.ROCK_SMASH],[10,E.FOCUS_ENERGY],[15,E.HEADBUTT],[20,E.BULK_UP],[25,E.ENDURE],[30,E.REVERSAL],[35,E.FIRST_IMPRESSION],[40,E.NO_RETREAT],[45,E.IRON_DEFENSE],[50,E.CLOSE_COMBAT],[55,E.MEGAHORN],[60,E.COUNTER]],[A.PINCURCHIN]:[[1,E.PECK],[1,E.THUNDER_SHOCK],[5,E.WATER_GUN],[10,E.CHARGE],[15,E.FURY_ATTACK],[20,E.SPARK],[25,E.BUBBLE_BEAM],[30,E.RECOVER],[35,E.CURSE],[40,E.ELECTRIC_TERRAIN],[45,E.POISON_JAB],[50,E.ZING_ZAP],[55,E.ACUPRESSURE],[60,E.DISCHARGE]],[A.SNOM]:[[1,E.POWDER_SNOW],[1,E.STRUGGLE_BUG]],[A.FROSMOTH]:[[b,E.ICY_WIND],[1,E.POWDER_SNOW],[1,E.ATTRACT],[1,E.HELPING_HAND],[1,E.STRUGGLE_BUG],[4,E.STUN_SPORE],[8,E.INFESTATION],[12,E.MIST],[16,E.DEFOG],[21,E.FEATHER_DANCE],[24,E.AURORA_BEAM],[28,E.SNOWSCAPE],[32,E.BUG_BUZZ],[36,E.AURORA_VEIL],[40,E.BLIZZARD],[44,E.TAILWIND],[48,E.WIDE_GUARD],[52,E.QUIVER_DANCE]],[A.STONJOURNER]:[[1,E.ROCK_THROW],[1,E.BLOCK],[6,E.ROCK_POLISH],[12,E.ROCK_TOMB],[18,E.GRAVITY],[24,E.STOMP],[30,E.STEALTH_ROCK],[36,E.ROCK_SLIDE],[42,E.BODY_SLAM],[48,E.WIDE_GUARD],[54,E.HEAVY_SLAM],[60,E.STONE_EDGE],[66,E.MEGA_KICK]],[A.EISCUE]:[[1,E.TACKLE],[1,E.POWDER_SNOW],[6,E.MIST],[12,E.WEATHER_BALL],[18,E.ICY_WIND],[24,E.HEADBUTT],[30,E.AMNESIA],[36,E.FREEZE_DRY],[42,E.SNOWSCAPE],[48,E.AURORA_VEIL],[54,E.SURF],[60,E.BLIZZARD]],[A.INDEEDEE]:[[1,E.STORED_POWER],[1,E.PLAY_NICE],[5,E.ENCORE],[10,E.DISARMING_VOICE],[15,E.PSYBEAM],[20,E.HELPING_HAND],[25,E.AFTER_YOU],[30,E.HEALING_WISH],[35,E.PSYCHIC],[40,E.CALM_MIND],[45,E.POWER_SPLIT],[50,E.PSYCHIC_TERRAIN],[55,E.LAST_RESORT]],[A.MORPEKO]:[[1,E.TAIL_WHIP],[1,E.THUNDER_SHOCK],[5,E.LEER],[10,E.POWER_TRIP],[15,E.QUICK_ATTACK],[20,E.FLATTER],[25,E.BITE],[30,E.SPARK],[35,E.TORMENT],[40,E.AGILITY],[45,E.BULLET_SEED],[50,E.CRUNCH],[55,E.AURA_WHEEL],[60,E.THRASH]],[A.CUFANT]:[[1,E.TACKLE],[1,E.GROWL],[5,E.ROLLOUT],[10,E.ROCK_SMASH],[15,E.BULLDOZE],[20,E.STOMP],[25,E.IRON_DEFENSE],[30,E.DIG],[35,E.STRENGTH],[40,E.IRON_HEAD],[45,E.PLAY_ROUGH],[50,E.HIGH_HORSEPOWER],[55,E.SUPERPOWER]],[A.COPPERAJAH]:[[b,E.HEAVY_SLAM],[1,E.TACKLE],[1,E.GROWL],[1,E.ROLLOUT],[1,E.ROCK_SMASH],[15,E.BULLDOZE],[20,E.STOMP],[25,E.IRON_DEFENSE],[30,E.DIG],[37,E.STRENGTH],[44,E.IRON_HEAD],[51,E.PLAY_ROUGH],[58,E.HIGH_HORSEPOWER],[65,E.SUPERPOWER]],[A.DRACOZOLT]:[[1,E.TACKLE],[1,E.THUNDER_SHOCK],[7,E.CHARGE],[14,E.AERIAL_ACE],[21,E.ANCIENT_POWER],[28,E.PLUCK],[35,E.DRAGON_TAIL],[42,E.STOMP],[49,E.SLAM],[56,E.DISCHARGE],[63,E.BOLT_BEAK],[70,E.DRAGON_PULSE],[77,E.DRAGON_RUSH]],[A.ARCTOZOLT]:[[1,E.THUNDER_SHOCK],[1,E.POWDER_SNOW],[7,E.CHARGE],[14,E.ECHOED_VOICE],[21,E.ANCIENT_POWER],[28,E.PLUCK],[35,E.AVALANCHE],[42,E.FREEZE_DRY],[49,E.SLAM],[56,E.DISCHARGE],[63,E.BOLT_BEAK],[70,E.ICICLE_CRASH],[77,E.BLIZZARD]],[A.DRACOVISH]:[[1,E.TACKLE],[1,E.WATER_GUN],[7,E.PROTECT],[14,E.BRUTAL_SWING],[21,E.ANCIENT_POWER],[28,E.BITE],[35,E.DRAGON_BREATH],[42,E.STOMP],[49,E.SUPER_FANG],[56,E.CRUNCH],[63,E.FISHIOUS_REND],[70,E.DRAGON_PULSE],[77,E.DRAGON_RUSH]],[A.ARCTOVISH]:[[1,E.WATER_GUN],[1,E.POWDER_SNOW],[7,E.PROTECT],[14,E.ICY_WIND],[21,E.ANCIENT_POWER],[28,E.BITE],[35,E.AURORA_VEIL],[42,E.FREEZE_DRY],[49,E.SUPER_FANG],[56,E.CRUNCH],[63,E.FISHIOUS_REND],[70,E.ICICLE_CRASH],[77,E.BLIZZARD]],[A.DURALUDON]:[[1,E.LEER],[1,E.METAL_CLAW],[6,E.ROCK_SMASH],[12,E.HONE_CLAWS],[18,E.METAL_SOUND],[24,E.BREAKING_SWIPE],[30,E.DRAGON_TAIL],[36,E.IRON_DEFENSE],[42,E.LASER_FOCUS],[48,E.DRAGON_CLAW],[54,E.FLASH_CANNON],[60,E.METAL_BURST],[66,E.HYPER_BEAM]],[A.DREEPY]:[[1,E.BITE],[1,E.QUICK_ATTACK],[1,E.ASTONISH],[1,E.INFESTATION]],[A.DRAKLOAK]:[[b,E.DRAGON_PULSE],[1,E.BITE],[1,E.QUICK_ATTACK],[1,E.ASTONISH],[1,E.INFESTATION],[6,E.LOCK_ON],[12,E.ASSURANCE],[18,E.HEX],[24,E.AGILITY],[30,E.DOUBLE_HIT],[36,E.U_TURN],[42,E.DRAGON_DANCE],[48,E.PHANTOM_FORCE],[54,E.TAKE_DOWN],[61,E.DRAGON_RUSH],[66,E.DOUBLE_EDGE],[72,E.LAST_RESORT]],[A.DRAGAPULT]:[[b,E.DRAGON_DARTS],[V,E.DRAGON_PULSE],[1,E.BITE],[1,E.QUICK_ATTACK],[1,E.DRAGON_BREATH],[1,E.ASTONISH],[1,E.INFESTATION],[6,E.LOCK_ON],[12,E.ASSURANCE],[18,E.HEX],[24,E.AGILITY],[30,E.DOUBLE_HIT],[36,E.U_TURN],[42,E.DRAGON_DANCE],[48,E.PHANTOM_FORCE],[54,E.TAKE_DOWN],[63,E.DRAGON_RUSH],[70,E.DOUBLE_EDGE],[78,E.LAST_RESORT]],[A.ZACIAN]:[[1,E.BITE],[1,E.QUICK_ATTACK],[1,E.METAL_CLAW],[1,E.HOWL],[1,E.QUICK_GUARD],[1,E.SACRED_SWORD],[11,E.SLASH],[22,E.SWORDS_DANCE],[33,E.IRON_HEAD],[44,E.NOBLE_ROAR],[55,E.CRUNCH],[66,E.MOONBLAST],[77,E.CLOSE_COMBAT],[88,E.GIGA_IMPACT]],[A.ZAMAZENTA]:[[1,E.BITE],[1,E.QUICK_ATTACK],[1,E.METAL_CLAW],[1,E.HOWL],[1,E.WIDE_GUARD],[11,E.SLASH],[22,E.IRON_DEFENSE],[33,E.IRON_HEAD],[44,E.METAL_BURST],[55,E.CRUNCH],[66,E.MOONBLAST],[77,E.CLOSE_COMBAT],[88,E.GIGA_IMPACT]],[A.ETERNATUS]:[[1,E.AGILITY],[1,E.CONFUSE_RAY],[1,E.POISON_TAIL],[1,E.DRAGON_TAIL],[8,E.TOXIC],[16,E.VENOSHOCK],[24,E.DRAGON_DANCE],[32,E.CROSS_POISON],[40,E.DRAGON_PULSE],[48,E.FLAMETHROWER],[56,E.DYNAMAX_CANNON],[64,E.COSMIC_POWER],[72,E.RECOVER],[80,E.HYPER_BEAM],[88,E.OUTRAGE]],[A.KUBFU]:[[1,E.LEER],[1,E.ROCK_SMASH],[4,E.ENDURE],[8,E.FOCUS_ENERGY],[12,E.AERIAL_ACE],[16,E.SCARY_FACE],[20,E.HEADBUTT],[24,E.BRICK_BREAK],[28,E.DETECT],[32,E.BULK_UP],[36,E.IRON_HEAD],[40,E.DYNAMIC_PUNCH],[44,E.COUNTER],[48,E.CLOSE_COMBAT],[52,E.FOCUS_PUNCH]],[A.URSHIFU]:[[b,E.WICKED_BLOW],[1,E.LEER],[1,E.FOCUS_ENERGY],[1,E.ENDURE],[1,E.ROCK_SMASH],[1,E.SUCKER_PUNCH],[12,E.AERIAL_ACE],[16,E.SCARY_FACE],[20,E.HEADBUTT],[24,E.BRICK_BREAK],[28,E.DETECT],[32,E.BULK_UP],[36,E.IRON_HEAD],[40,E.DYNAMIC_PUNCH],[44,E.COUNTER],[48,E.CLOSE_COMBAT],[52,E.FOCUS_PUNCH]],[A.ZARUDE]:[[1,E.SCRATCH],[1,E.BIND],[6,E.LEER],[12,E.VINE_WHIP],[18,E.GROWTH],[24,E.FURY_SWIPES],[30,E.SCARY_FACE],[36,E.GRASS_KNOT],[42,E.BITE],[48,E.U_TURN],[54,E.SWAGGER],[60,E.ENERGY_BALL],[66,E.SYNTHESIS],[72,E.HAMMER_ARM],[78,E.THRASH],[84,E.POWER_WHIP],[90,E.JUNGLE_HEALING]],[A.REGIELEKI]:[[1,E.THUNDER_SHOCK],[1,E.RAPID_SPIN],[6,E.ELECTROWEB],[12,E.ANCIENT_POWER],[18,E.SHOCK_WAVE],[24,E.THUNDER_WAVE],[30,E.EXTREME_SPEED],[36,E.THUNDER_CAGE],[42,E.THUNDERBOLT],[48,E.MAGNET_RISE],[54,E.THRASH],[60,E.LOCK_ON],[66,E.ZAP_CANNON],[72,E.HYPER_BEAM],[78,E.EXPLOSION]],[A.REGIDRAGO]:[[1,E.TWISTER],[6,E.BITE],[12,E.ANCIENT_POWER],[18,E.DRAGON_BREATH],[30,E.CRUNCH],[36,E.DRAGON_CLAW],[42,E.HAMMER_ARM],[48,E.DRAGON_DANCE],[54,E.THRASH],[60,E.FOCUS_ENERGY],[66,E.DRAGON_ENERGY],[72,E.HYPER_BEAM],[78,E.EXPLOSION]],[A.GLASTRIER]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[6,E.DOUBLE_KICK],[12,E.AVALANCHE],[18,E.STOMP],[24,E.TORMENT],[30,E.MIST],[36,E.ICICLE_CRASH],[42,E.TAKE_DOWN],[48,E.IRON_DEFENSE],[54,E.THRASH],[60,E.TAUNT],[66,E.DOUBLE_EDGE],[72,E.SWORDS_DANCE]],[A.SPECTRIER]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[6,E.DOUBLE_KICK],[12,E.HEX],[18,E.STOMP],[24,E.CONFUSE_RAY],[30,E.HAZE],[36,E.SHADOW_BALL],[42,E.TAKE_DOWN],[48,E.AGILITY],[54,E.THRASH],[60,E.DISABLE],[66,E.DOUBLE_EDGE],[72,E.NASTY_PLOT]],[A.CALYREX]:[[1,E.POUND],[1,E.MEGA_DRAIN],[1,E.GROWTH],[1,E.CONFUSION],[8,E.LIFE_DEW],[16,E.GIGA_DRAIN],[24,E.PSYSHOCK],[32,E.HELPING_HAND],[40,E.GRASSY_TERRAIN],[40,E.PSYCHIC_TERRAIN],[48,E.ENERGY_BALL],[56,E.PSYCHIC],[64,E.LEECH_SEED],[72,E.HEAL_PULSE],[80,E.SOLAR_BEAM],[88,E.FUTURE_SIGHT]],[A.WYRDEER]:[[b,E.PSYSHIELD_BASH],[1,E.TACKLE],[1,E.ME_FIRST],[3,E.LEER],[7,E.ASTONISH],[10,E.HYPNOSIS],[13,E.STOMP],[16,E.SAND_ATTACK],[21,E.TAKE_DOWN],[23,E.CONFUSE_RAY],[27,E.CALM_MIND],[32,E.ROLE_PLAY],[37,E.ZEN_HEADBUTT],[49,E.IMPRISON],[55,E.DOUBLE_EDGE],[62,E.MEGAHORN]],[A.KLEAVOR]:[[b,E.STONE_AXE],[1,E.WING_ATTACK],[1,E.AIR_SLASH],[1,E.LEER],[1,E.QUICK_ATTACK],[4,E.FURY_CUTTER],[8,E.FALSE_SWIPE],[12,E.SMACK_DOWN],[16,E.DOUBLE_TEAM],[20,E.DOUBLE_HIT],[24,E.SLASH],[28,E.FOCUS_ENERGY],[30,E.STEEL_WING],[32,E.AGILITY],[36,E.ROCK_SLIDE],[40,E.X_SCISSOR],[44,E.SWORDS_DANCE]],[A.URSALUNA]:[[b,E.HEADLONG_RUSH],[1,E.SCRATCH],[1,E.LEER],[1,E.LICK],[1,E.COVET],[1,E.FLING],[1,E.BABY_DOLL_EYES],[1,E.FAKE_TEARS],[1,E.CHARM],[8,E.FURY_SWIPES],[13,E.PAYBACK],[17,E.SWEET_SCENT],[22,E.SLASH],[25,E.PLAY_NICE],[29,E.PLAY_ROUGH],[35,E.SCARY_FACE],[41,E.REST],[41,E.SNORE],[48,E.HIGH_HORSEPOWER],[56,E.THRASH],[64,E.HAMMER_ARM]],[A.BASCULEGION]:[[V,E.FINAL_GAMBIT],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.SHADOW_BALL],[1,E.PHANTOM_FORCE],[4,E.TACKLE],[8,E.FLAIL],[12,E.AQUA_JET],[16,E.BITE],[20,E.SCARY_FACE],[24,E.HEADBUTT],[28,E.SOAK],[32,E.CRUNCH],[36,E.TAKE_DOWN],[40,E.UPROAR],[44,E.WAVE_CRASH],[48,E.THRASH],[52,E.DOUBLE_EDGE],[56,E.HEAD_SMASH]],[A.SNEASLER]:[[b,E.DIRE_CLAW],[1,E.SCRATCH],[1,E.LEER],[1,E.ROCK_SMASH],[1,E.FLING],[6,E.TAUNT],[12,E.QUICK_ATTACK],[18,E.METAL_CLAW],[24,E.POISON_JAB],[30,E.BRICK_BREAK],[36,E.HONE_CLAWS],[42,E.SLASH],[48,E.AGILITY],[54,E.SCREECH],[60,E.CLOSE_COMBAT]],[A.OVERQWIL]:[[1,E.TACKLE],[1,E.POISON_STING],[4,E.HARDEN],[8,E.BITE],[12,E.FELL_STINGER],[16,E.MINIMIZE],[20,E.SPIKES],[24,E.BRINE],[28,E.BARB_BARRAGE],[32,E.PIN_MISSILE],[36,E.TOXIC_SPIKES],[40,E.STOCKPILE],[40,E.SPIT_UP],[44,E.TOXIC],[48,E.CRUNCH],[52,E.ACUPRESSURE],[56,E.DESTINY_BOND]],[A.ENAMORUS]:[[1,E.ASTONISH],[1,E.FAIRY_WIND],[5,E.TORMENT],[10,E.FLATTER],[15,E.TWISTER],[20,E.DRAINING_KISS],[25,E.IRON_DEFENSE],[30,E.IMPRISON],[35,E.MYSTICAL_FIRE],[40,E.DAZZLING_GLEAM],[45,E.EXTRASENSORY],[50,E.UPROAR],[55,E.SUPERPOWER],[60,E.HEALING_WISH],[65,E.MOONBLAST],[70,E.OUTRAGE],[75,E.SPRINGTIDE_STORM]],[A.SPRIGATITO]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.LEAFAGE],[7,E.BITE],[10,E.HONE_CLAWS],[13,E.MAGICAL_LEAF],[15,E.QUICK_ATTACK],[17,E.SEED_BOMB],[21,E.U_TURN],[25,E.WORRY_SEED],[28,E.SLASH],[32,E.ENERGY_BALL],[36,E.PLAY_ROUGH]],[A.FLORAGATO]:[[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.LEAFAGE],[7,E.BITE],[10,E.HONE_CLAWS],[13,E.MAGICAL_LEAF],[15,E.QUICK_ATTACK],[20,E.SEED_BOMB],[24,E.U_TURN],[28,E.WORRY_SEED],[33,E.SLASH],[38,E.ENERGY_BALL],[42,E.PLAY_ROUGH],[46,E.LEAF_STORM]],[A.MEOWSCARADA]:[[b,E.FLOWER_TRICK],[V,E.DOUBLE_TEAM],[V,E.TRICK],[1,E.SCRATCH],[1,E.TAIL_WHIP],[1,E.LEAFAGE],[7,E.BITE],[10,E.HONE_CLAWS],[13,E.MAGICAL_LEAF],[15,E.QUICK_ATTACK],[20,E.SEED_BOMB],[24,E.U_TURN],[29,E.WORRY_SEED],[33,E.SLASH],[38,E.NIGHT_SLASH],[42,E.ENERGY_BALL],[47,E.PLAY_ROUGH],[52,E.KNOCK_OFF],[58,E.GRASSY_TERRAIN],[64,E.LEAF_STORM]],[A.FUECOCO]:[[1,E.TACKLE],[1,E.LEER],[1,E.EMBER],[7,E.ROUND],[12,E.BITE],[15,E.INCINERATE],[17,E.YAWN],[21,E.SNARL],[25,E.ROAR],[28,E.FLAMETHROWER],[32,E.HYPER_VOICE],[36,E.FIRE_BLAST]],[A.CROCALOR]:[[1,E.TACKLE],[1,E.LEER],[1,E.EMBER],[7,E.LICK],[10,E.ROUND],[12,E.BITE],[15,E.YAWN],[17,E.INCINERATE],[24,E.SNARL],[28,E.ROAR],[32,E.FLAMETHROWER],[38,E.HYPER_VOICE],[42,E.WILL_O_WISP],[47,E.FIRE_BLAST]],[A.SKELEDIRGE]:[[b,E.TORCH_SONG],[V,E.SING],[V,E.YAWN],[1,E.TACKLE],[1,E.LEER],[1,E.EMBER],[7,E.LICK],[10,E.ROUND],[12,E.SCARY_FACE],[15,E.BITE],[17,E.INCINERATE],[24,E.SNARL],[28,E.ROAR],[32,E.FLAMETHROWER],[38,E.SHADOW_BALL],[42,E.HYPER_VOICE],[47,E.WILL_O_WISP],[47,E.HEX],[58,E.FIRE_BLAST],[64,E.OVERHEAT]],[A.QUAXLY]:[[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[7,E.WORK_UP],[10,E.WING_ATTACK],[13,E.AQUA_JET],[17,E.DOUBLE_HIT],[21,E.AQUA_CUTTER],[24,E.AIR_SLASH],[28,E.FOCUS_ENERGY],[31,E.ACROBATICS],[35,E.LIQUIDATION]],[A.QUAXWELL]:[[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[1,E.DOUBLE_HIT],[7,E.WORK_UP],[10,E.WING_ATTACK],[13,E.AQUA_JET],[17,E.WATER_PULSE],[19,E.LOW_SWEEP],[23,E.AQUA_CUTTER],[27,E.AIR_SLASH],[32,E.FOCUS_ENERGY],[38,E.ACROBATICS],[43,E.LIQUIDATION],[48,E.FEATHER_DANCE]],[A.QUAQUAVAL]:[[b,E.AQUA_STEP],[V,E.COUNTER],[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[1,E.DOUBLE_HIT],[7,E.WORK_UP],[10,E.WING_ATTACK],[13,E.AQUA_JET],[17,E.WATER_PULSE],[17,E.LOW_SWEEP],[21,E.AQUA_CUTTER],[27,E.AIR_SLASH],[32,E.FOCUS_ENERGY],[38,E.MEGA_KICK],[43,E.ACROBATICS],[47,E.LIQUIDATION],[52,E.FEATHER_DANCE],[58,E.CLOSE_COMBAT],[64,E.WAVE_CRASH]],[A.LECHONK]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.DISARMING_VOICE],[8,E.ECHOED_VOICE],[12,E.MUD_SHOT],[15,E.COVET],[17,E.DIG],[21,E.HEADBUTT],[24,E.YAWN],[27,E.TAKE_DOWN],[30,E.WORK_UP],[32,E.UPROAR],[35,E.DOUBLE_EDGE]],[A.OINKOLOGNE]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.DISARMING_VOICE],[8,E.ECHOED_VOICE],[12,E.MUD_SHOT],[15,E.COVET],[17,E.DIG],[23,E.HEADBUTT],[26,E.TAKE_DOWN],[27,E.YAWN],[34,E.WORK_UP],[38,E.UPROAR],[42,E.DOUBLE_EDGE],[48,E.EARTH_POWER],[54,E.BELCH]],[A.TAROUNTULA]:[[1,E.TACKLE],[1,E.STRING_SHOT],[5,E.STRUGGLE_BUG],[8,E.ASSURANCE],[11,E.FEINT],[14,E.BUG_BITE],[18,E.BLOCK],[22,E.COUNTER],[25,E.HEADBUTT],[29,E.STICKY_WEB],[33,E.GASTRO_ACID],[36,E.CIRCLE_THROW],[40,E.THROAT_CHOP],[44,E.SKITTER_SMACK]],[A.SPIDOPS]:[[b,E.SILK_TRAP],[1,E.TACKLE],[1,E.STRING_SHOT],[5,E.STRUGGLE_BUG],[8,E.ASSURANCE],[11,E.FEINT],[14,E.BUG_BITE],[19,E.BLOCK],[24,E.COUNTER],[28,E.HEADBUTT],[33,E.STICKY_WEB],[37,E.GASTRO_ACID],[41,E.CIRCLE_THROW],[45,E.THROAT_CHOP],[49,E.SKITTER_SMACK]],[A.NYMBLE]:[[1,E.TACKLE],[1,E.LEER],[4,E.STRUGGLE_BUG],[6,E.ASTONISH],[9,E.ASSURANCE],[11,E.DOUBLE_KICK],[14,E.SCREECH],[18,E.ENDURE],[22,E.BUG_BITE],[26,E.FEINT],[30,E.AGILITY],[38,E.SUCKER_PUNCH],[41,E.FIRST_IMPRESSION]],[A.LOKIX]:[[b,E.LUNGE],[1,E.TACKLE],[1,E.LEER],[1,E.LOW_KICK],[1,E.DETECT],[4,E.STRUGGLE_BUG],[6,E.ASTONISH],[9,E.ASSURANCE],[11,E.DOUBLE_KICK],[14,E.SCREECH],[18,E.ENDURE],[22,E.BUG_BITE],[28,E.FEINT],[32,E.AGILITY],[36,E.THROAT_CHOP],[40,E.SUCKER_PUNCH],[44,E.FIRST_IMPRESSION],[48,E.BOUNCE],[53,E.AXE_KICK]],[A.PAWMI]:[[1,E.SCRATCH],[1,E.GROWL],[3,E.THUNDER_SHOCK],[6,E.QUICK_ATTACK],[8,E.CHARGE],[12,E.NUZZLE],[15,E.DIG],[19,E.BITE],[23,E.SPARK],[27,E.THUNDER_WAVE],[31,E.ENTRAINMENT],[35,E.SLAM],[38,E.DISCHARGE],[40,E.AGILITY],[44,E.WILD_CHARGE]],[A.PAWMO]:[[b,E.ARM_THRUST],[1,E.SCRATCH],[1,E.GROWL],[3,E.THUNDER_SHOCK],[6,E.QUICK_ATTACK],[8,E.CHARGE],[12,E.NUZZLE],[15,E.DIG],[19,E.BITE],[23,E.SPARK],[27,E.THUNDER_WAVE],[32,E.SLAM],[38,E.ENTRAINMENT],[42,E.DISCHARGE],[46,E.AGILITY],[52,E.WILD_CHARGE]],[A.PAWMOT]:[[b,E.REVIVAL_BLESSING],[1,E.SCRATCH],[1,E.GROWL],[1,E.WILD_CHARGE],[3,E.THUNDER_SHOCK],[6,E.QUICK_ATTACK],[8,E.CHARGE],[12,E.NUZZLE],[15,E.DIG],[19,E.BITE],[23,E.SPARK],[25,E.ARM_THRUST],[29,E.THUNDER_WAVE],[33,E.SLAM],[39,E.ENTRAINMENT],[44,E.CLOSE_COMBAT],[49,E.DISCHARGE],[54,E.AGILITY],[60,E.DOUBLE_SHOCK]],[A.TANDEMAUS]:[[1,E.POUND],[1,E.BABY_DOLL_EYES],[5,E.ECHOED_VOICE],[8,E.HELPING_HAND],[11,E.SUPER_FANG],[14,E.DOUBLE_HIT],[18,E.BULLET_SEED],[22,E.ENCORE],[26,E.PLAY_ROUGH],[30,E.HYPER_VOICE],[33,E.CHARM],[37,E.BEAT_UP],[41,E.COPYCAT],[46,E.POPULATION_BOMB]],[A.MAUSHOLD]:[[1,E.POUND],[1,E.FOLLOW_ME],[1,E.BABY_DOLL_EYES],[1,E.TIDY_UP],[5,E.ECHOED_VOICE],[8,E.HELPING_HAND],[11,E.SUPER_FANG],[14,E.DOUBLE_HIT],[18,E.BULLET_SEED],[22,E.ENCORE],[29,E.PLAY_ROUGH],[33,E.HYPER_VOICE],[37,E.CHARM],[41,E.BEAT_UP],[46,E.COPYCAT],[53,E.POPULATION_BOMB]],[A.FIDOUGH]:[[1,E.TACKLE],[1,E.GROWL],[3,E.LICK],[6,E.TAIL_WHIP],[8,E.COVET],[11,E.BITE],[15,E.BABY_DOLL_EYES],[18,E.PLAY_ROUGH],[22,E.WORK_UP],[26,E.BATON_PASS],[30,E.ROAR],[33,E.DOUBLE_EDGE],[36,E.CHARM],[40,E.CRUNCH],[45,E.LAST_RESORT]],[A.DACHSBUN]:[[1,E.TACKLE],[1,E.GROWL],[3,E.LICK],[6,E.TAIL_WHIP],[8,E.COVET],[11,E.BITE],[15,E.BABY_DOLL_EYES],[18,E.PLAY_ROUGH],[22,E.WORK_UP],[29,E.BATON_PASS],[33,E.ROAR],[38,E.DOUBLE_EDGE],[42,E.CHARM],[47,E.CRUNCH],[53,E.LAST_RESORT]],[A.SMOLIV]:[[1,E.TACKLE],[1,E.SWEET_SCENT],[5,E.ABSORB],[7,E.GROWTH],[10,E.RAZOR_LEAF],[13,E.HELPING_HAND],[16,E.FLAIL],[20,E.MEGA_DRAIN],[23,E.GRASSY_TERRAIN],[27,E.SEED_BOMB],[30,E.ENERGY_BALL],[34,E.LEECH_SEED],[38,E.TERRAIN_PULSE]],[A.DOLLIV]:[[1,E.TACKLE],[1,E.SWEET_SCENT],[5,E.ABSORB],[7,E.GROWTH],[10,E.RAZOR_LEAF],[13,E.HELPING_HAND],[16,E.FLAIL],[20,E.MEGA_DRAIN],[23,E.GRASSY_TERRAIN],[29,E.SEED_BOMB],[34,E.ENERGY_BALL],[37,E.LEECH_SEED],[42,E.TERRAIN_PULSE]],[A.ARBOLIVA]:[[1,E.TACKLE],[1,E.SAFEGUARD],[1,E.SWEET_SCENT],[1,E.MIRROR_COAT],[5,E.ABSORB],[7,E.GROWTH],[10,E.RAZOR_LEAF],[13,E.HELPING_HAND],[16,E.FLAIL],[20,E.MEGA_DRAIN],[23,E.GRASSY_TERRAIN],[29,E.SEED_BOMB],[34,E.ENERGY_BALL],[39,E.LEECH_SEED],[46,E.TERRAIN_PULSE],[52,E.PETAL_BLIZZARD],[58,E.PETAL_DANCE]],[A.SQUAWKABILLY]:[[1,E.GROWL],[1,E.PECK],[1,E.MIMIC],[6,E.QUICK_ATTACK],[10,E.TORMENT],[13,E.AERIAL_ACE],[17,E.FURY_ATTACK],[20,E.TAUNT],[24,E.UPROAR],[27,E.COPYCAT],[30,E.FLY],[34,E.FACADE],[38,E.SWAGGER],[42,E.BRAVE_BIRD],[47,E.ROOST],[52,E.REVERSAL]],[A.NACLI]:[[1,E.TACKLE],[1,E.HARDEN],[5,E.ROCK_THROW],[7,E.MUD_SHOT],[10,E.SMACK_DOWN],[13,E.ROCK_POLISH],[16,E.HEADBUTT],[20,E.IRON_DEFENSE],[25,E.RECOVER],[30,E.ROCK_SLIDE],[33,E.STEALTH_ROCK],[35,E.HEAVY_SLAM],[40,E.EARTHQUAKE],[45,E.STONE_EDGE]],[A.NACLSTACK]:[[b,E.SALT_CURE],[1,E.TACKLE],[1,E.HARDEN],[5,E.ROCK_THROW],[7,E.MUD_SHOT],[10,E.SMACK_DOWN],[13,E.ROCK_POLISH],[16,E.HEADBUTT],[20,E.IRON_DEFENSE],[30,E.RECOVER],[34,E.ROCK_SLIDE],[38,E.STEALTH_ROCK],[41,E.HEAVY_SLAM],[45,E.EARTHQUAKE],[51,E.STONE_EDGE]],[A.GARGANACL]:[[b,E.HAMMER_ARM],[V,E.IRON_DEFENSE],[1,E.TACKLE],[1,E.HARDEN],[1,E.BLOCK],[1,E.ROCK_BLAST],[1,E.SMACK_DOWN],[1,E.WIDE_GUARD],[5,E.ROCK_THROW],[7,E.MUD_SHOT],[10,E.ROCK_TOMB],[13,E.ROCK_POLISH],[16,E.HEADBUTT],[24,E.SALT_CURE],[30,E.RECOVER],[34,E.ROCK_SLIDE],[40,E.STEALTH_ROCK],[44,E.HEAVY_SLAM],[49,E.EARTHQUAKE],[54,E.STONE_EDGE],[60,E.EXPLOSION]],[A.CHARCADET]:[[1,E.LEER],[1,E.EMBER],[1,E.ASTONISH],[8,E.CLEAR_SMOG],[12,E.FIRE_SPIN],[16,E.WILL_O_WISP],[20,E.NIGHT_SHADE],[24,E.FLAME_CHARGE],[28,E.INCINERATE],[32,E.LAVA_PLUME]],[A.ARMAROUGE]:[[b,E.PSYSHOCK],[1,E.LEER],[1,E.EMBER],[1,E.ASTONISH],[1,E.WIDE_GUARD],[1,E.MYSTICAL_FIRE],[8,E.CLEAR_SMOG],[12,E.FIRE_SPIN],[16,E.WILL_O_WISP],[20,E.NIGHT_SHADE],[24,E.FLAME_CHARGE],[28,E.INCINERATE],[32,E.LAVA_PLUME],[37,E.CALM_MIND],[42,E.ALLY_SWITCH],[48,E.FLAMETHROWER],[56,E.EXPANDING_FORCE],[62,E.ARMOR_CANNON]],[A.CERULEDGE]:[[b,E.SHADOW_CLAW],[V,E.NIGHT_SLASH],[V,E.SHADOW_SNEAK],[V,E.QUICK_GUARD],[V,E.SOLAR_BLADE],[1,E.EMBER],[1,E.LEER],[1,E.ASTONISH],[8,E.CLEAR_SMOG],[12,E.FIRE_SPIN],[16,E.WILL_O_WISP],[20,E.NIGHT_SHADE],[24,E.FLAME_CHARGE],[28,E.INCINERATE],[32,E.LAVA_PLUME],[37,E.SWORDS_DANCE],[42,E.ALLY_SWITCH],[48,E.BITTER_BLADE],[56,E.PSYCHO_CUT],[62,E.FLARE_BLITZ]],[A.TADBULB]:[[1,E.TACKLE],[1,E.MUD_SLAP],[7,E.THUNDER_SHOCK],[11,E.WATER_GUN],[17,E.CHARGE],[21,E.SPARK],[24,E.MUD_SHOT],[25,E.FLAIL],[32,E.DISCHARGE],[36,E.WEATHER_BALL],[40,E.ELECTRIC_TERRAIN],[45,E.SUCKER_PUNCH],[50,E.ZAP_CANNON]],[A.BELLIBOLT]:[[1,E.TACKLE],[1,E.MUD_SLAP],[1,E.SLACK_OFF],[7,E.THUNDER_SHOCK],[11,E.WATER_GUN],[17,E.CHARGE],[21,E.SPARK],[24,E.MUD_SHOT],[25,E.FLAIL],[32,E.DISCHARGE],[36,E.WEATHER_BALL],[40,E.ELECTRIC_TERRAIN],[45,E.SUCKER_PUNCH],[50,E.ZAP_CANNON]],[A.WATTREL]:[[1,E.GROWL],[1,E.PECK],[4,E.THUNDER_SHOCK],[7,E.QUICK_ATTACK],[11,E.PLUCK],[15,E.SPARK],[19,E.UPROAR],[23,E.ROOST],[27,E.DUAL_WINGBEAT],[32,E.AGILITY],[37,E.VOLT_SWITCH],[43,E.DISCHARGE]],[A.KILOWATTREL]:[[b,E.ELECTRO_BALL],[1,E.GROWL],[1,E.PECK],[4,E.THUNDER_SHOCK],[7,E.QUICK_ATTACK],[11,E.PLUCK],[15,E.SPARK],[19,E.UPROAR],[24,E.ROOST],[30,E.DUAL_WINGBEAT],[36,E.AGILITY],[43,E.VOLT_SWITCH],[48,E.DISCHARGE],[55,E.HURRICANE]],[A.MASCHIFF]:[[1,E.TACKLE],[1,E.LEER],[1,E.SCARY_FACE],[4,E.LICK],[7,E.SNARL],[10,E.HONE_CLAWS],[14,E.BITE],[18,E.ROAR],[22,E.HEADBUTT],[26,E.PAYBACK],[31,E.CRUNCH],[35,E.SWAGGER],[39,E.REVERSAL],[43,E.JAW_LOCK],[49,E.DOUBLE_EDGE]],[A.MABOSSTIFF]:[[b,E.COMEUPPANCE],[1,E.TACKLE],[1,E.LEER],[1,E.SCARY_FACE],[4,E.LICK],[7,E.SNARL],[10,E.HONE_CLAWS],[14,E.BITE],[18,E.ROAR],[22,E.HEADBUTT],[26,E.PAYBACK],[34,E.CRUNCH],[39,E.SWAGGER],[43,E.REVERSAL],[48,E.JAW_LOCK],[55,E.DOUBLE_EDGE],[60,E.OUTRAGE]],[A.SHROODLE]:[[1,E.SCRATCH],[1,E.LEER],[5,E.ACID_SPRAY],[8,E.BITE],[8,E.FURY_SWIPES],[11,E.SWITCHEROO],[14,E.POISON_FANG],[18,E.FLATTER],[21,E.SLASH],[25,E.U_TURN],[29,E.POISON_JAB],[33,E.TAUNT],[36,E.SUBSTITUTE],[40,E.KNOCK_OFF],[45,E.GUNK_SHOT]],[A.GRAFAIAI]:[[b,E.DOODLE],[1,E.SCRATCH],[1,E.LEER],[1,E.BITE],[5,E.ACID_SPRAY],[8,E.FURY_SWIPES],[11,E.SWITCHEROO],[14,E.POISON_FANG],[18,E.FLATTER],[21,E.SLASH],[25,E.U_TURN],[33,E.POISON_JAB],[37,E.TAUNT],[40,E.SUBSTITUTE],[45,E.KNOCK_OFF],[51,E.GUNK_SHOT]],[A.BRAMBLIN]:[[1,E.DEFENSE_CURL],[1,E.ROLLOUT],[1,E.ASTONISH],[5,E.ABSORB],[9,E.RAPID_SPIN],[13,E.BULLET_SEED],[17,E.INFESTATION],[21,E.HEX],[25,E.MEGA_DRAIN],[29,E.DISABLE],[35,E.PHANTOM_FORCE],[40,E.GIGA_DRAIN],[45,E.CURSE],[50,E.PAIN_SPLIT],[55,E.POWER_WHIP]],[A.BRAMBLEGHAST]:[[1,E.DEFENSE_CURL],[1,E.ROLLOUT],[1,E.ASTONISH],[5,E.ABSORB],[9,E.RAPID_SPIN],[13,E.BULLET_SEED],[17,E.INFESTATION],[21,E.HEX],[25,E.MEGA_DRAIN],[29,E.DISABLE],[35,E.PHANTOM_FORCE],[40,E.GIGA_DRAIN],[45,E.CURSE],[50,E.PAIN_SPLIT],[55,E.POWER_WHIP]],[A.TOEDSCOOL]:[[1,E.WRAP],[1,E.MUD_SLAP],[4,E.ABSORB],[8,E.POISON_POWDER],[8,E.STUN_SPORE],[12,E.SUPERSONIC],[15,E.TACKLE],[16,E.MEGA_DRAIN],[20,E.SCREECH],[24,E.MUD_SHOT],[28,E.HEX],[32,E.SEED_BOMB],[36,E.SPORE],[40,E.GROWTH],[44,E.GIGA_DRAIN],[48,E.EARTH_POWER],[52,E.POWER_WHIP]],[A.TOEDSCRUEL]:[[1,E.WRAP],[1,E.MUD_SLAP],[1,E.REFLECT_TYPE],[4,E.ABSORB],[8,E.POISON_POWDER],[8,E.STUN_SPORE],[12,E.SUPERSONIC],[15,E.TACKLE],[16,E.MEGA_DRAIN],[20,E.SCREECH],[24,E.MUD_SHOT],[28,E.HEX],[34,E.SEED_BOMB],[40,E.SPORE],[44,E.GROWTH],[48,E.GIGA_DRAIN],[54,E.EARTH_POWER],[58,E.POWER_WHIP]],[A.KLAWF]:[[1,E.ROCK_THROW],[6,E.HARDEN],[9,E.ROCK_SMASH],[13,E.ROCK_TOMB],[17,E.METAL_CLAW],[21,E.PROTECT],[24,E.ROCK_BLAST],[29,E.X_SCISSOR],[33,E.SWORDS_DANCE],[37,E.FLAIL],[42,E.ROCK_SLIDE],[47,E.HIGH_HORSEPOWER],[51,E.IRON_DEFENSE],[56,E.GUILLOTINE]],[A.CAPSAKID]:[[1,E.LEER],[1,E.LEAFAGE],[4,E.BITE],[10,E.GROWTH],[13,E.RAZOR_LEAF],[17,E.SUNNY_DAY],[21,E.BULLET_SEED],[24,E.HEADBUTT],[28,E.ZEN_HEADBUTT],[38,E.CRUNCH],[44,E.SEED_BOMB],[48,E.SOLAR_BEAM]],[A.SCOVILLAIN]:[[b,E.FLAMETHROWER],[b,E.SPICY_EXTRACT],[1,E.LEER],[1,E.FIRE_FANG],[1,E.LEAFAGE],[4,E.BITE],[10,E.GROWTH],[13,E.RAZOR_LEAF],[17,E.SUNNY_DAY],[21,E.BULLET_SEED],[24,E.HEADBUTT],[28,E.ZEN_HEADBUTT],[33,E.WORRY_SEED],[38,E.CRUNCH],[44,E.SEED_BOMB],[48,E.SOLAR_BEAM],[48,E.OVERHEAT]],[A.RELLOR]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[4,E.SAND_ATTACK],[7,E.STRUGGLE_BUG],[11,E.ROLLOUT],[15,E.MUD_SHOT],[20,E.BUG_BITE],[24,E.TAKE_DOWN],[29,E.DIG],[35,E.LUNGE]],[A.RABSCA]:[[b,E.REVIVAL_BLESSING],[V,E.SAFEGUARD],[V,E.PSYCH_UP],[1,E.TACKLE],[1,E.CONFUSION],[1,E.DEFENSE_CURL],[1,E.MUD_SHOT],[1,E.DIG],[4,E.SAND_ATTACK],[7,E.STRUGGLE_BUG],[11,E.ROLLOUT],[15,E.PSYBEAM],[20,E.BUG_BITE],[24,E.TAKE_DOWN],[29,E.EXTRASENSORY],[35,E.LUNGE],[40,E.POWER_SWAP],[40,E.GUARD_SWAP],[40,E.SPEED_SWAP],[45,E.BUG_BUZZ],[50,E.PSYCHIC]],[A.FLITTLE]:[[1,E.GROWL],[1,E.PECK],[5,E.CONFUSION],[8,E.BABY_DOLL_EYES],[11,E.DISARMING_VOICE],[15,E.QUICK_ATTACK],[19,E.PSYBEAM],[24,E.PLUCK],[29,E.AGILITY],[34,E.UPROAR]],[A.ESPATHRA]:[[b,E.LUMINA_CRASH],[1,E.GROWL],[1,E.PECK],[1,E.DRILL_PECK],[1,E.FEATHER_DANCE],[5,E.CONFUSION],[8,E.BABY_DOLL_EYES],[11,E.DISARMING_VOICE],[15,E.QUICK_ATTACK],[19,E.PSYBEAM],[24,E.PLUCK],[29,E.AGILITY],[34,E.UPROAR],[43,E.DAZZLING_GLEAM],[49,E.PSYCHIC],[54,E.LAST_RESORT]],[A.TINKATINK]:[[1,E.ASTONISH],[1,E.FAIRY_WIND],[5,E.BABY_DOLL_EYES],[8,E.METAL_CLAW],[11,E.COVET],[14,E.ROCK_SMASH],[17,E.DRAINING_KISS],[21,E.SWEET_KISS],[24,E.BRUTAL_SWING],[27,E.SLAM],[31,E.FLASH_CANNON],[35,E.PLAY_ROUGH],[39,E.FAKE_OUT],[43,E.FLATTER],[47,E.SKITTER_SMACK],[52,E.KNOCK_OFF]],[A.TINKATUFF]:[[1,E.ASTONISH],[1,E.FAIRY_WIND],[5,E.BABY_DOLL_EYES],[8,E.METAL_CLAW],[11,E.COVET],[14,E.ROCK_SMASH],[17,E.DRAINING_KISS],[21,E.SWEET_KISS],[24,E.BRUTAL_SWING],[27,E.SLAM],[31,E.FLASH_CANNON],[35,E.PLAY_ROUGH],[39,E.FAKE_OUT],[43,E.FLATTER],[47,E.SKITTER_SMACK],[52,E.KNOCK_OFF]],[A.TINKATON]:[[b,E.GIGATON_HAMMER],[1,E.ASTONISH],[1,E.FAIRY_WIND],[5,E.BABY_DOLL_EYES],[8,E.METAL_CLAW],[11,E.COVET],[14,E.ROCK_SMASH],[17,E.DRAINING_KISS],[21,E.SWEET_KISS],[24,E.BRUTAL_SWING],[27,E.SLAM],[31,E.FLASH_CANNON],[35,E.PLAY_ROUGH],[39,E.FAKE_OUT],[43,E.FLATTER],[47,E.SKITTER_SMACK],[52,E.KNOCK_OFF]],[A.WIGLETT]:[[1,E.SAND_ATTACK],[1,E.WATER_GUN],[4,E.MUD_SLAP],[8,E.WRAP],[12,E.AQUA_JET],[20,E.SLAM],[20,E.WATER_PULSE],[24,E.HEADBUTT],[28,E.DIG],[32,E.SUCKER_PUNCH],[36,E.THROAT_CHOP],[40,E.LIQUIDATION]],[A.WUGTRIO]:[[1,E.SAND_ATTACK],[1,E.WRAP],[1,E.WATER_GUN],[1,E.MUD_SLAP],[12,E.AQUA_JET],[16,E.SLAM],[20,E.WATER_PULSE],[24,E.HEADBUTT],[30,E.TRIPLE_DIVE],[36,E.DIG],[42,E.SUCKER_PUNCH],[48,E.THROAT_CHOP],[54,E.LIQUIDATION]],[A.BOMBIRDIER]:[[1,E.WING_ATTACK],[1,E.LEER],[1,E.PECK],[1,E.MEMENTO],[1,E.HONE_CLAWS],[7,E.THIEF],[11,E.ROCK_THROW],[16,E.WHIRLWIND],[20,E.PLUCK],[24,E.TORMENT],[29,E.ROCK_TOMB],[36,E.PAYBACK],[42,E.DUAL_WINGBEAT],[47,E.ROCK_SLIDE],[53,E.KNOCK_OFF],[60,E.PARTING_SHOT]],[A.FINIZEN]:[[1,E.SUPERSONIC],[1,E.WATER_GUN],[7,E.ASTONISH],[10,E.FOCUS_ENERGY],[13,E.AQUA_JET],[17,E.DOUBLE_HIT],[21,E.DIVE],[25,E.CHARM],[29,E.ACROBATICS],[34,E.ENCORE],[39,E.AQUA_TAIL],[44,E.MIST],[50,E.HYDRO_PUMP]],[A.PALAFIN]:[[b,E.FLIP_TURN],[1,E.SUPERSONIC],[1,E.WATER_GUN],[1,E.JET_PUNCH],[7,E.ASTONISH],[10,E.FOCUS_ENERGY],[13,E.AQUA_JET],[17,E.DOUBLE_HIT],[21,E.DIVE],[25,E.CHARM],[29,E.ACROBATICS],[34,E.ENCORE],[39,E.AQUA_TAIL],[44,E.MIST],[50,E.HYDRO_PUMP],[55,E.FOCUS_PUNCH],[61,E.WAVE_CRASH]],[A.VAROOM]:[[1,E.LICK],[1,E.POISON_GAS],[4,E.SMOG],[7,E.TAUNT],[10,E.ASSURANCE],[13,E.SLUDGE],[17,E.GYRO_BALL],[21,E.HEADBUTT],[25,E.SCREECH],[28,E.IRON_HEAD],[32,E.SWAGGER],[36,E.POISON_JAB],[41,E.UPROAR],[46,E.SPIN_OUT],[50,E.GUNK_SHOT]],[A.REVAVROOM]:[[b,E.SHIFT_GEAR],[1,E.LICK],[1,E.POISON_GAS],[1,E.MAGNET_RISE],[4,E.SMOG],[7,E.TAUNT],[10,E.ASSURANCE],[13,E.SLUDGE],[17,E.GYRO_BALL],[21,E.HEADBUTT],[25,E.SCREECH],[28,E.IRON_HEAD],[32,E.SWAGGER],[36,E.POISON_JAB],[46,E.UPROAR],[52,E.SPIN_OUT],[58,E.GUNK_SHOT]],[A.CYCLIZAR]:[[1,E.TACKLE],[1,E.GROWL],[7,E.RAPID_SPIN],[11,E.TAUNT],[14,E.BREAKING_SWIPE],[18,E.QUICK_ATTACK],[23,E.BITE],[27,E.U_TURN],[31,E.SHED_TAIL],[36,E.DRAGON_CLAW],[40,E.SHIFT_GEAR],[45,E.DRAGON_PULSE],[51,E.DOUBLE_EDGE],[57,E.DRAGON_RUSH]],[A.ORTHWORM]:[[1,E.TACKLE],[1,E.WRAP],[1,E.HARDEN],[7,E.MUD_SLAP],[12,E.SMACK_DOWN],[16,E.BULLDOZE],[21,E.IRON_HEAD],[26,E.TAKE_DOWN],[30,E.DIG],[34,E.SANDSTORM],[38,E.IRON_DEFENSE],[43,E.IRON_TAIL],[47,E.EARTHQUAKE],[52,E.SHED_TAIL]],[A.GLIMMET]:[[1,E.ROCK_THROW],[1,E.HARDEN],[1,E.SMACK_DOWN],[7,E.ACID_SPRAY],[11,E.ANCIENT_POWER],[15,E.ROCK_POLISH],[18,E.STEALTH_ROCK],[22,E.VENOSHOCK],[26,E.SANDSTORM],[29,E.SELF_DESTRUCT],[33,E.ROCK_SLIDE],[37,E.POWER_GEM],[41,E.ACID_ARMOR],[46,E.SLUDGE_WAVE]],[A.GLIMMORA]:[[b,E.MORTAL_SPIN],[1,E.ROCK_THROW],[1,E.HARDEN],[1,E.TOXIC_SPIKES],[1,E.SMACK_DOWN],[1,E.SPIKY_SHIELD],[7,E.ACID_SPRAY],[11,E.ANCIENT_POWER],[15,E.ROCK_POLISH],[18,E.STEALTH_ROCK],[22,E.VENOSHOCK],[26,E.SANDSTORM],[29,E.SELF_DESTRUCT],[33,E.ROCK_SLIDE],[39,E.POWER_GEM],[44,E.ACID_ARMOR],[50,E.SLUDGE_WAVE]],[A.GREAVARD]:[[1,E.TACKLE],[1,E.GROWL],[3,E.LICK],[6,E.TAIL_WHIP],[6,E.BITE],[9,E.ROAR],[12,E.HEADBUTT],[16,E.DIG],[24,E.REST],[28,E.CRUNCH],[32,E.PLAY_ROUGH],[37,E.HELPING_HAND],[41,E.PHANTOM_FORCE],[46,E.CHARM],[52,E.DOUBLE_EDGE]],[A.HOUNDSTONE]:[[b,E.LAST_RESPECTS],[1,E.TACKLE],[1,E.GROWL],[3,E.LICK],[6,E.TAIL_WHIP],[6,E.BITE],[9,E.ROAR],[12,E.HEADBUTT],[16,E.DIG],[24,E.REST],[28,E.CRUNCH],[36,E.PLAY_ROUGH],[41,E.HELPING_HAND],[46,E.PHANTOM_FORCE],[51,E.CHARM],[58,E.DOUBLE_EDGE]],[A.FLAMIGO]:[[1,E.PECK],[1,E.COPYCAT],[5,E.DOUBLE_KICK],[9,E.DETECT],[12,E.WING_ATTACK],[15,E.FOCUS_ENERGY],[18,E.LOW_KICK],[21,E.FEINT],[27,E.PAYBACK],[31,E.ROOST],[35,E.AIR_SLASH],[39,E.MEGA_KICK],[44,E.WIDE_GUARD],[48,E.THROAT_CHOP],[54,E.BRAVE_BIRD]],[A.CETODDLE]:[[1,E.TACKLE],[1,E.POWDER_SNOW],[6,E.GROWL],[9,E.ECHOED_VOICE],[12,E.ICE_SHARD],[15,E.REST],[19,E.TAKE_DOWN],[25,E.FLAIL],[27,E.AVALANCHE],[31,E.BOUNCE],[36,E.BODY_SLAM],[40,E.AMNESIA],[44,E.ICE_SPINNER],[49,E.DOUBLE_EDGE],[53,E.BLIZZARD]],[A.CETITAN]:[[1,E.TACKLE],[1,E.POWDER_SNOW],[6,E.GROWL],[9,E.ECHOED_VOICE],[12,E.ICE_SHARD],[15,E.REST],[19,E.TAKE_DOWN],[25,E.FLAIL],[27,E.AVALANCHE],[31,E.BOUNCE],[36,E.BODY_SLAM],[40,E.AMNESIA],[44,E.ICE_SPINNER],[49,E.DOUBLE_EDGE],[53,E.BLIZZARD]],[A.VELUZA]:[[1,E.TACKLE],[1,E.AQUA_JET],[7,E.PLUCK],[11,E.WATER_PULSE],[15,E.FOCUS_ENERGY],[20,E.SLASH],[25,E.AQUA_CUTTER],[30,E.FILLET_AWAY],[35,E.NIGHT_SLASH],[40,E.PSYCHO_CUT],[45,E.LIQUIDATION],[50,E.CRUNCH],[55,E.FINAL_GAMBIT]],[A.DONDOZO]:[[1,E.TACKLE],[1,E.SUPERSONIC],[1,E.WATER_GUN],[5,E.TICKLE],[10,E.FLAIL],[15,E.REST],[15,E.SLEEP_TALK],[20,E.DIVE],[25,E.NOBLE_ROAR],[30,E.SOAK],[35,E.BODY_SLAM],[40,E.AQUA_TAIL],[45,E.RAIN_DANCE],[50,E.ORDER_UP],[55,E.HEAVY_SLAM],[60,E.DOUBLE_EDGE],[65,E.WAVE_CRASH]],[A.TATSUGIRI]:[[1,E.WATER_GUN],[1,E.SPLASH],[6,E.HARDEN],[12,E.HELPING_HAND],[17,E.WATER_PULSE],[23,E.SOAK],[28,E.TAUNT],[34,E.MEMENTO],[39,E.MUDDY_WATER],[43,E.NASTY_PLOT],[47,E.MIRROR_COAT],[52,E.DRAGON_PULSE]],[A.ANNIHILAPE]:[[b,E.SHADOW_PUNCH],[1,E.SCRATCH],[1,E.LEER],[1,E.COUNTER],[1,E.FOCUS_ENERGY],[1,E.COVET],[1,E.FLING],[5,E.FURY_SWIPES],[8,E.LOW_KICK],[12,E.SEISMIC_TOSS],[17,E.SWAGGER],[22,E.CROSS_CHOP],[26,E.ASSURANCE],[30,E.THRASH],[35,E.RAGE_FIST],[39,E.CLOSE_COMBAT],[44,E.SCREECH],[48,E.STOMPING_TANTRUM],[53,E.OUTRAGE],[57,E.FINAL_GAMBIT]],[A.CLODSIRE]:[[b,E.AMNESIA],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.POISON_STING],[4,E.TOXIC_SPIKES],[8,E.MUD_SHOT],[12,E.POISON_TAIL],[16,E.SLAM],[21,E.YAWN],[24,E.POISON_JAB],[30,E.SLUDGE_WAVE],[36,E.MEGAHORN],[40,E.TOXIC],[48,E.EARTHQUAKE]],[A.FARIGIRAF]:[[1,E.TACKLE],[1,E.GROWL],[1,E.ASTONISH],[1,E.POWER_SWAP],[1,E.GUARD_SWAP],[5,E.CONFUSION],[10,E.ASSURANCE],[14,E.STOMP],[19,E.PSYBEAM],[23,E.AGILITY],[28,E.DOUBLE_HIT],[32,E.TWIN_BEAM],[37,E.CRUNCH],[41,E.BATON_PASS],[46,E.NASTY_PLOT],[50,E.PSYCHIC]],[A.DUDUNSPARCE]:[[1,E.DEFENSE_CURL],[1,E.FLAIL],[1,E.TACKLE],[4,E.MUD_SLAP],[8,E.ROLLOUT],[12,E.GLARE],[16,E.SCREECH],[20,E.ANCIENT_POWER],[24,E.DRILL_RUN],[28,E.YAWN],[32,E.HYPER_DRILL],[36,E.ROOST],[40,E.DRAGON_RUSH],[44,E.COIL],[48,E.DOUBLE_EDGE],[52,E.ENDEAVOR],[56,E.HURRICANE],[62,E.BOOMBURST]],[A.KINGAMBIT]:[[b,E.KOWTOW_CLEAVE],[1,E.SCRATCH],[1,E.LEER],[1,E.FURY_CUTTER],[1,E.METAL_CLAW],[1,E.METAL_BURST],[15,E.TORMENT],[20,E.SCARY_FACE],[25,E.ASSURANCE],[30,E.METAL_SOUND],[35,E.SLASH],[40,E.NIGHT_SLASH],[45,E.IRON_DEFENSE],[50,E.RETALIATE],[57,E.IRON_HEAD],[64,E.SWORDS_DANCE],[71,E.GUILLOTINE]],[A.GREAT_TUSK]:[[1,E.HORN_ATTACK],[1,E.DEFENSE_CURL],[1,E.ROLLOUT],[1,E.SUNNY_DAY],[7,E.BULLDOZE],[14,E.TAUNT],[21,E.RAPID_SPIN],[28,E.BRICK_BREAK],[35,E.STOMPING_TANTRUM],[42,E.KNOCK_OFF],[49,E.EARTHQUAKE],[56,E.GIGA_IMPACT],[63,E.CLOSE_COMBAT],[70,E.ENDEAVOR],[77,E.MEGAHORN],[84,E.HEAD_SMASH],[91,E.HEADLONG_RUSH]],[A.SCREAM_TAIL]:[[V,E.SUNNY_DAY],[1,E.POUND],[1,E.SING],[1,E.DISABLE],[7,E.HOWL],[14,E.NOBLE_ROAR],[21,E.BITE],[28,E.BODY_SLAM],[35,E.REST],[42,E.PLAY_ROUGH],[49,E.HYPER_VOICE],[56,E.PSYCHIC_FANGS],[63,E.CRUNCH],[70,E.WISH],[77,E.GYRO_BALL],[84,E.PERISH_SONG],[91,E.BOOMBURST]],[A.BRUTE_BONNET]:[[V,E.SUNNY_DAY],[1,E.ABSORB],[1,E.GROWTH],[1,E.ASTONISH],[7,E.STUN_SPORE],[14,E.MEGA_DRAIN],[21,E.SYNTHESIS],[28,E.CLEAR_SMOG],[35,E.PAYBACK],[42,E.THRASH],[49,E.GIGA_DRAIN],[56,E.SUCKER_PUNCH],[63,E.SPORE],[70,E.INGRAIN],[77,E.RAGE_POWDER],[91,E.SOLAR_BEAM]],[A.FLUTTER_MANE]:[[V,E.SUNNY_DAY],[1,E.CONFUSE_RAY],[1,E.SPITE],[1,E.ASTONISH],[1,E.PSYBEAM],[14,E.MEAN_LOOK],[21,E.MEMENTO],[28,E.WISH],[35,E.DAZZLING_GLEAM],[42,E.SHADOW_BALL],[49,E.MYSTICAL_FIRE],[56,E.POWER_GEM],[63,E.PSYSHOCK],[70,E.PHANTOM_FORCE],[77,E.PAIN_SPLIT],[84,E.MOONBLAST],[91,E.PERISH_SONG]],[A.SLITHER_WING]:[[V,E.SUNNY_DAY],[1,E.GUST],[1,E.EMBER],[1,E.BUG_BITE],[7,E.POISON_POWDER],[7,E.STUN_SPORE],[14,E.FLAME_CHARGE],[21,E.STOMP],[28,E.LOW_SWEEP],[35,E.MORNING_SUN],[42,E.LUNGE],[49,E.SUPERPOWER],[56,E.BULK_UP],[63,E.DUAL_WINGBEAT],[70,E.FIRST_IMPRESSION],[77,E.WHIRLWIND],[84,E.LEECH_LIFE],[91,E.THRASH]],[A.SANDY_SHOCKS]:[[V,E.SUNNY_DAY],[1,E.SUPERSONIC],[1,E.THUNDER_SHOCK],[1,E.THUNDER_WAVE],[1,E.ELECTRIC_TERRAIN],[7,E.SPARK],[14,E.BULLDOZE],[21,E.CHARGE_BEAM],[28,E.TRI_ATTACK],[35,E.SCREECH],[42,E.HEAVY_SLAM],[49,E.METAL_SOUND],[56,E.DISCHARGE],[63,E.EARTH_POWER],[70,E.MIRROR_COAT],[77,E.GRAVITY],[84,E.ZAP_CANNON],[91,E.MAGNETIC_FLUX]],[A.IRON_TREADS]:[[1,E.HORN_ATTACK],[1,E.DEFENSE_CURL],[1,E.ROLLOUT],[1,E.ELECTRIC_TERRAIN],[7,E.BULLDOZE],[21,E.RAPID_SPIN],[28,E.IRON_HEAD],[35,E.STOMPING_TANTRUM],[42,E.KNOCK_OFF],[49,E.EARTHQUAKE],[56,E.HEAVY_SLAM],[63,E.WILD_CHARGE],[70,E.ENDEAVOR],[77,E.MEGAHORN],[84,E.GIGA_IMPACT],[91,E.STEEL_ROLLER]],[A.IRON_BUNDLE]:[[V,E.ELECTRIC_TERRAIN],[1,E.PRESENT],[1,E.WATER_GUN],[7,E.POWDER_SNOW],[14,E.WHIRLPOOL],[21,E.TAKE_DOWN],[28,E.DRILL_PECK],[35,E.HELPING_HAND],[42,E.FREEZE_DRY],[49,E.FLIP_TURN],[56,E.ICE_BEAM],[63,E.AGILITY],[70,E.SNOWSCAPE],[77,E.HYDRO_PUMP],[84,E.AURORA_VEIL],[91,E.BLIZZARD]],[A.IRON_HANDS]:[[V,E.ELECTRIC_TERRAIN],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.FOCUS_ENERGY],[1,E.ARM_THRUST],[7,E.FAKE_OUT],[14,E.WHIRLWIND],[21,E.THUNDER_PUNCH],[28,E.SLAM],[35,E.FORCE_PALM],[42,E.SEISMIC_TOSS],[49,E.CHARGE],[56,E.WILD_CHARGE],[63,E.CLOSE_COMBAT],[70,E.DETECT],[77,E.HEAVY_SLAM],[84,E.BELLY_DRUM],[91,E.FOCUS_PUNCH]],[A.IRON_JUGULIS]:[[V,E.ELECTRIC_TERRAIN],[1,E.FOCUS_ENERGY],[1,E.TRI_ATTACK],[1,E.AIR_CUTTER],[1,E.WORK_UP],[1,E.ELECTRIC_TERRAIN],[7,E.ROAR],[14,E.ASSURANCE],[21,E.DRAGON_BREATH],[28,E.SNARL],[35,E.CRUNCH],[42,E.HYPER_VOICE],[56,E.AIR_SLASH],[63,E.KNOCK_OFF],[70,E.DARK_PULSE],[77,E.OUTRAGE],[84,E.DRAGON_PULSE],[91,E.HYPER_BEAM]],[A.IRON_MOTH]:[[V,E.ELECTRIC_TERRAIN],[1,E.GUST],[1,E.WHIRLWIND],[1,E.EMBER],[1,E.ACID_SPRAY],[7,E.STRUGGLE_BUG],[14,E.FIRE_SPIN],[21,E.TAKE_DOWN],[28,E.LUNGE],[35,E.SCREECH],[42,E.DISCHARGE],[49,E.SLUDGE_WAVE],[56,E.FIERY_DANCE],[63,E.METAL_SOUND],[70,E.MORNING_SUN],[77,E.HURRICANE],[84,E.BUG_BUZZ],[91,E.OVERHEAT]],[A.IRON_THORNS]:[[V,E.ELECTRIC_TERRAIN],[1,E.ROCK_THROW],[1,E.IRON_DEFENSE],[1,E.THUNDER_FANG],[1,E.ICE_FANG],[1,E.FIRE_FANG],[7,E.SCREECH],[21,E.ROCK_TOMB],[28,E.BITE],[35,E.CHARGE],[42,E.ROCK_SLIDE],[49,E.SANDSTORM],[56,E.WILD_CHARGE],[63,E.PIN_MISSILE],[70,E.EARTHQUAKE],[77,E.STEALTH_ROCK],[84,E.STONE_EDGE],[91,E.GIGA_IMPACT]],[A.FRIGIBAX]:[[1,E.TACKLE],[1,E.LEER],[1,E.DRAGON_TAIL],[6,E.ICY_WIND],[12,E.DRAGON_BREATH],[18,E.FOCUS_ENERGY],[24,E.BITE],[29,E.ICE_FANG],[32,E.DRAGON_CLAW],[36,E.TAKE_DOWN],[40,E.ICE_BEAM],[44,E.CRUNCH],[48,E.ICICLE_CRASH]],[A.ARCTIBAX]:[[1,E.TACKLE],[1,E.LEER],[1,E.DRAGON_TAIL],[6,E.ICY_WIND],[12,E.DRAGON_BREATH],[18,E.FOCUS_ENERGY],[24,E.BITE],[29,E.ICE_FANG],[32,E.DRAGON_CLAW],[40,E.TAKE_DOWN],[45,E.ICE_BEAM],[50,E.CRUNCH],[55,E.ICICLE_CRASH]],[A.BAXCALIBUR]:[[b,E.GLAIVE_RUSH],[1,E.TACKLE],[1,E.LEER],[1,E.ICE_SHARD],[1,E.DRAGON_TAIL],[1,E.BREAKING_SWIPE],[1,E.SNOWSCAPE],[6,E.ICY_WIND],[12,E.DRAGON_BREATH],[18,E.FOCUS_ENERGY],[24,E.BITE],[29,E.ICE_FANG],[35,E.DRAGON_CLAW],[42,E.TAKE_DOWN],[48,E.ICE_BEAM],[55,E.CRUNCH],[62,E.ICICLE_CRASH]],[A.GIMMIGHOUL]:[[1,E.TACKLE],[1,E.ASTONISH]],[A.GHOLDENGO]:[[1,E.TACKLE],[1,E.ASTONISH],[7,E.NIGHT_SHADE],[14,E.CONFUSE_RAY],[21,E.SUBSTITUTE],[28,E.METAL_SOUND],[35,E.SHADOW_BALL],[42,E.RECOVER],[49,E.POWER_GEM],[56,E.MAKE_IT_RAIN],[63,E.NASTY_PLOT],[70,E.MEMENTO]],[A.WO_CHIEN]:[[1,E.ABSORB],[1,E.SPITE],[1,E.MEAN_LOOK],[5,E.TICKLE],[10,E.PAYBACK],[15,E.POISON_POWDER],[15,E.STUN_SPORE],[20,E.MEGA_DRAIN],[25,E.LEECH_SEED],[30,E.GROWTH],[35,E.INGRAIN],[40,E.DARK_PULSE],[45,E.GIGA_DRAIN],[50,E.RUINATION],[55,E.FOUL_PLAY],[60,E.POWER_WHIP],[65,E.GRASSY_TERRAIN],[70,E.KNOCK_OFF],[75,E.LEAF_STORM]],[A.CHIEN_PAO]:[[1,E.SPITE],[1,E.POWDER_SNOW],[1,E.MEAN_LOOK],[5,E.ICY_WIND],[10,E.PAYBACK],[15,E.MIST],[15,E.HAZE],[20,E.ICE_SHARD],[25,E.SWORDS_DANCE],[30,E.SNOWSCAPE],[35,E.NIGHT_SLASH],[40,E.DARK_PULSE],[45,E.ICICLE_CRASH],[50,E.RUINATION],[55,E.SUCKER_PUNCH],[60,E.SACRED_SWORD],[65,E.RECOVER],[70,E.THROAT_CHOP],[75,E.SHEER_COLD]],[A.TING_LU]:[[1,E.SPITE],[1,E.MEAN_LOOK],[1,E.SAND_TOMB],[5,E.SPIKES],[10,E.PAYBACK],[15,E.STOMP],[20,E.BULLDOZE],[25,E.WHIRLWIND],[30,E.TAUNT],[35,E.THRASH],[40,E.DARK_PULSE],[45,E.STOMPING_TANTRUM],[50,E.RUINATION],[55,E.THROAT_CHOP],[60,E.ROCK_SLIDE],[65,E.MEMENTO],[70,E.EARTHQUAKE],[75,E.FISSURE]],[A.CHI_YU]:[[1,E.EMBER],[1,E.SPITE],[1,E.MEAN_LOOK],[5,E.FLAME_WHEEL],[10,E.PAYBACK],[15,E.WILL_O_WISP],[20,E.FLAME_CHARGE],[25,E.INCINERATE],[30,E.CONFUSE_RAY],[35,E.NASTY_PLOT],[40,E.DARK_PULSE],[45,E.LAVA_PLUME],[50,E.RUINATION],[55,E.BOUNCE],[60,E.SWAGGER],[65,E.INFERNO],[70,E.MEMENTO],[75,E.OVERHEAT]],[A.ROARING_MOON]:[[V,E.SUNNY_DAY],[V,E.JAW_LOCK],[V,E.BREAKING_SWIPE],[V,E.SCALE_SHOT],[1,E.LEER],[1,E.BITE],[1,E.FOCUS_ENERGY],[1,E.DRAGON_BREATH],[7,E.INCINERATE],[14,E.HEADBUTT],[21,E.SCARY_FACE],[28,E.DRAGON_CLAW],[35,E.ZEN_HEADBUTT],[42,E.FLAMETHROWER],[49,E.NIGHT_SLASH],[56,E.DRAGON_DANCE],[63,E.DRAGON_RUSH],[70,E.FLY],[77,E.THROAT_CHOP],[84,E.ROOST],[91,E.DOUBLE_EDGE]],[A.IRON_VALIANT]:[[V,E.ELECTRIC_TERRAIN],[1,E.DISABLE],[1,E.DOUBLE_TEAM],[1,E.FURY_CUTTER],[1,E.SHADOW_SNEAK],[7,E.HYPNOSIS],[14,E.FEINT],[21,E.FUTURE_SIGHT],[28,E.DAZZLING_GLEAM],[35,E.PSYCHO_CUT],[42,E.NIGHT_SLASH],[49,E.LEAF_BLADE],[56,E.MOONBLAST],[63,E.CLOSE_COMBAT],[70,E.KNOCK_OFF],[77,E.DESTINY_BOND],[84,E.WIDE_GUARD],[84,E.QUICK_GUARD],[91,E.SPIRIT_BREAK]],[A.KORAIDON]:[[1,E.SUNNY_DAY],[1,E.BREAKING_SWIPE],[7,E.ROCK_SMASH],[14,E.ANCIENT_POWER],[21,E.DRAIN_PUNCH],[28,E.BRICK_BREAK],[35,E.AGILITY],[42,E.DRAGON_CLAW],[49,E.FLAMETHROWER],[56,E.COLLISION_COURSE],[63,E.SCREECH],[70,E.COUNTER],[77,E.OUTRAGE],[84,E.CLOSE_COMBAT],[91,E.FLARE_BLITZ],[98,E.GIGA_IMPACT]],[A.MIRAIDON]:[[1,E.THUNDER_SHOCK],[1,E.DRAGON_BREATH],[1,E.ELECTRIC_TERRAIN],[7,E.SHOCK_WAVE],[14,E.CHARGE],[21,E.PARABOLIC_CHARGE],[28,E.DISCHARGE],[35,E.AGILITY],[42,E.DRAGON_PULSE],[56,E.ELECTRO_DRIFT],[63,E.METAL_SOUND],[70,E.MIRROR_COAT],[77,E.OUTRAGE],[84,E.THUNDER],[91,E.OVERHEAT],[98,E.HYPER_BEAM]],[A.WALKING_WAKE]:[[V,E.SUNNY_DAY],[V,E.HONE_CLAWS],[1,E.LEER],[1,E.ROAR],[1,E.TWISTER],[1,E.AQUA_JET],[7,E.BITE],[14,E.WATER_PULSE],[21,E.NOBLE_ROAR],[28,E.DRAGON_BREATH],[35,E.BREAKING_SWIPE],[42,E.DRAGON_RUSH],[56,E.HYDRO_STEAM],[63,E.DRAGON_PULSE],[70,E.OUTRAGE],[77,E.FLAMETHROWER],[84,E.HYDRO_PUMP]],[A.IRON_LEAVES]:[[V,E.ELECTRIC_TERRAIN],[V,E.QUASH],[1,E.LEER],[1,E.QUICK_ATTACK],[1,E.HELPING_HAND],[1,E.WORK_UP],[7,E.MAGICAL_LEAF],[14,E.RETALIATE],[21,E.QUICK_GUARD],[28,E.NIGHT_SLASH],[35,E.SWORDS_DANCE],[42,E.SACRED_SWORD],[49,E.LEAF_BLADE],[56,E.PSYBLADE],[63,E.CLOSE_COMBAT],[70,E.IMPRISON],[77,E.MEGAHORN],[84,E.ALLY_SWITCH],[91,E.SOLAR_BLADE]],[A.DIPPLIN]:[[b,E.DOUBLE_HIT],[V,E.DRAGON_CHEER],[1,E.LEAFAGE],[1,E.WITHDRAW],[1,E.SWEET_SCENT],[1,E.RECYCLE],[1,E.ASTONISH],[4,E.DRAGON_TAIL],[8,E.GROWTH],[12,E.DRAGON_BREATH],[16,E.PROTECT],[20,E.BULLET_SEED],[28,E.SYRUP_BOMB],[32,E.DRAGON_PULSE],[36,E.RECOVER],[40,E.ENERGY_BALL],[44,E.SUBSTITUTE]],[A.POLTCHAGEIST]:[[1,E.STUN_SPORE],[1,E.WITHDRAW],[1,E.ASTONISH],[5,E.ABSORB],[12,E.LIFE_DEW],[18,E.FOUL_PLAY],[24,E.MEGA_DRAIN],[30,E.HEX],[36,E.RAGE_POWDER],[42,E.GIGA_DRAIN],[48,E.SHADOW_BALL],[54,E.MEMENTO],[60,E.LEAF_STORM]],[A.SINISTCHA]:[[b,E.MATCHA_GOTCHA],[V,E.GIGA_DRAIN],[1,E.STUN_SPORE],[1,E.WITHDRAW],[1,E.ASTONISH],[6,E.ABSORB],[12,E.LIFE_DEW],[18,E.FOUL_PLAY],[24,E.MEGA_DRAIN],[30,E.HEX],[36,E.RAGE_POWDER],[42,E.STRENGTH_SAP],[48,E.SHADOW_BALL],[54,E.MEMENTO],[60,E.LEAF_STORM]],[A.OKIDOGI]:[[1,E.BITE],[1,E.LOW_KICK],[1,E.BULK_UP],[8,E.HOWL],[16,E.POISON_FANG],[24,E.FORCE_PALM],[32,E.COUNTER],[40,E.POISON_JAB],[48,E.BRUTAL_SWING],[56,E.CRUNCH],[64,E.SUPERPOWER],[72,E.GIGA_IMPACT]],[A.MUNKIDORI]:[[1,E.SCRATCH],[1,E.CONFUSION],[1,E.FAKE_OUT],[1,E.FLATTER],[8,E.HELPING_HAND],[16,E.PSYBEAM],[24,E.CLEAR_SMOG],[32,E.POISON_JAB],[40,E.PSYCHIC],[48,E.SLUDGE_WAVE],[56,E.NASTY_PLOT],[64,E.FUTURE_SIGHT],[72,E.PARTING_SHOT]],[A.FEZANDIPITI]:[[1,E.DOUBLE_KICK],[1,E.PECK],[1,E.POISON_GAS],[1,E.DISARMING_VOICE],[8,E.QUICK_ATTACK],[16,E.ATTRACT],[24,E.WING_ATTACK],[32,E.CROSS_POISON],[40,E.TAIL_SLAP],[48,E.BEAT_UP],[56,E.SWAGGER],[56,E.FLATTER],[64,E.ROOST],[72,E.MOONBLAST]],[A.OGERPON]:[[V,E.DOUBLE_KICK],[V,E.COUNTER],[V,E.RETALIATE],[V,E.HORN_LEECH],[1,E.VINE_WHIP],[1,E.LEECH_SEED],[1,E.QUICK_ATTACK],[1,E.FOLLOW_ME],[6,E.FOCUS_ENERGY],[12,E.GROWTH],[18,E.SLAM],[24,E.LOW_SWEEP],[30,E.IVY_CUDGEL],[36,E.THROAT_CHOP],[42,E.SYNTHESIS],[48,E.SPIKY_SHIELD],[54,E.POWER_WHIP],[60,E.SUPERPOWER],[66,E.WOOD_HAMMER]],[A.ARCHALUDON]:[[b,E.ELECTRO_SHOT],[V,E.LASER_FOCUS],[1,E.LEER],[1,E.METAL_CLAW],[6,E.ROCK_SMASH],[12,E.HONE_CLAWS],[18,E.METAL_SOUND],[24,E.BREAKING_SWIPE],[30,E.DRAGON_TAIL],[36,E.IRON_DEFENSE],[42,E.FOCUS_ENERGY],[48,E.DRAGON_CLAW],[54,E.FLASH_CANNON],[60,E.METAL_BURST],[66,E.HYPER_BEAM]],[A.HYDRAPPLE]:[[b,E.FICKLE_BEAM],[V,E.YAWN],[V,E.DOUBLE_HIT],[V,E.INFESTATION],[V,E.DRAGON_CHEER],[1,E.LEAFAGE],[1,E.WITHDRAW],[1,E.SWEET_SCENT],[1,E.RECYCLE],[1,E.ASTONISH],[4,E.DRAGON_TAIL],[8,E.GROWTH],[12,E.DRAGON_BREATH],[16,E.PROTECT],[20,E.BULLET_SEED],[28,E.SYRUP_BOMB],[32,E.DRAGON_PULSE],[36,E.RECOVER],[40,E.ENERGY_BALL],[44,E.SUBSTITUTE],[54,E.POWER_WHIP]],[A.GOUGING_FIRE]:[[V,E.DOUBLE_KICK],[V,E.ANCIENT_POWER],[V,E.NOBLE_ROAR],[1,E.STOMP],[1,E.LEER],[1,E.INCINERATE],[1,E.SUNNY_DAY],[7,E.FIRE_FANG],[14,E.HOWL],[21,E.BITE],[28,E.DRAGON_CLAW],[35,E.CRUSH_CLAW],[42,E.MORNING_SUN],[49,E.BURNING_BULWARK],[56,E.DRAGON_RUSH],[63,E.FIRE_BLAST],[70,E.LAVA_PLUME],[77,E.OUTRAGE],[84,E.FLARE_BLITZ],[91,E.RAGING_FURY]],[A.RAGING_BOLT]:[[V,E.ANCIENT_POWER],[1,E.TWISTER],[1,E.SUNNY_DAY],[1,E.SHOCK_WAVE],[1,E.STOMP],[7,E.CHARGE],[14,E.DRAGON_BREATH],[21,E.ELECTRIC_TERRAIN],[28,E.DISCHARGE],[35,E.DRAGON_TAIL],[42,E.CALM_MIND],[49,E.THUNDERCLAP],[56,E.DRAGON_HAMMER],[63,E.RISING_VOLTAGE],[70,E.DRAGON_PULSE],[77,E.ZAP_CANNON],[84,E.BODY_PRESS],[91,E.THUNDER]],[A.IRON_BOULDER]:[[1,E.HORN_ATTACK],[1,E.LEER],[1,E.ROCK_THROW],[1,E.ELECTRIC_TERRAIN],[7,E.QUICK_ATTACK],[14,E.SLASH],[21,E.AGILITY],[28,E.PSYCHO_CUT],[35,E.COUNTER],[42,E.ROCK_TOMB],[49,E.SACRED_SWORD],[56,E.MIGHTY_CLEAVE],[63,E.SWORDS_DANCE],[70,E.MEGAHORN],[77,E.QUICK_GUARD],[84,E.STONE_EDGE],[91,E.GIGA_IMPACT]],[A.IRON_CROWN]:[[1,E.LEER],[1,E.ELECTRIC_TERRAIN],[1,E.CONFUSION],[1,E.METAL_CLAW],[7,E.SMART_STRIKE],[14,E.SLASH],[21,E.IRON_DEFENSE],[28,E.PSYSHOCK],[35,E.PSYCHO_CUT],[42,E.FLASH_CANNON],[49,E.SACRED_SWORD],[56,E.TACHYON_CUTTER],[63,E.FUTURE_SIGHT],[70,E.VOLT_SWITCH],[77,E.QUICK_GUARD],[84,E.METAL_BURST],[91,E.HYPER_BEAM]],[A.TERAPAGOS]:[[1,E.WITHDRAW],[1,E.TRI_ATTACK],[1,E.RAPID_SPIN],[10,E.ANCIENT_POWER],[20,E.HEADBUTT],[30,E.PROTECT],[40,E.EARTH_POWER],[50,E.HEAVY_SLAM],[60,E.TERA_STARSTORM],[70,E.DOUBLE_EDGE],[80,E.ROCK_POLISH],[90,E.GYRO_BALL]],[A.PECHARUNT]:[[V,E.DEFENSE_CURL],[V,E.ROLLOUT],[V,E.MEAN_LOOK],[1,E.SMOG],[1,E.POISON_GAS],[1,E.MEMENTO],[1,E.ASTONISH],[8,E.WITHDRAW],[16,E.DESTINY_BOND],[24,E.FAKE_TEARS],[32,E.PARTING_SHOT],[40,E.SHADOW_BALL],[48,E.MALIGNANT_CHAIN],[56,E.TOXIC],[64,E.NASTY_PLOT],[72,E.RECOVER]],[A.ALOLA_RATTATA]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[4,E.QUICK_ATTACK],[7,E.FOCUS_ENERGY],[10,E.BITE],[13,E.PURSUIT],[16,E.HYPER_FANG],[19,E.ASSURANCE],[22,E.CRUNCH],[25,E.SUCKER_PUNCH],[28,E.SUPER_FANG],[31,E.DOUBLE_EDGE],[34,E.ENDEAVOR]],[A.ALOLA_RATICATE]:[[b,E.SCARY_FACE],[1,E.SWORDS_DANCE],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.QUICK_ATTACK],[1,E.FOCUS_ENERGY],[10,E.BITE],[13,E.PURSUIT],[16,E.HYPER_FANG],[19,E.ASSURANCE],[24,E.CRUNCH],[29,E.SUCKER_PUNCH],[34,E.SUPER_FANG],[39,E.DOUBLE_EDGE],[44,E.ENDEAVOR]],[A.ALOLA_RAICHU]:[[b,E.PSYCHIC],[b,E.ZIPPY_ZAP],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.THUNDER_WAVE],[1,E.THUNDER],[1,E.AGILITY],[1,E.QUICK_ATTACK],[1,E.DOUBLE_TEAM],[1,E.LIGHT_SCREEN],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.SPARK],[1,E.IRON_TAIL],[1,E.FEINT],[1,E.NASTY_PLOT],[1,E.DISCHARGE],[1,E.ELECTRO_BALL],[1,E.PLAY_NICE],[1,E.NUZZLE],[5,E.THUNDERBOLT],[50,E.PIKA_PAPOW]],[A.ALOLA_SANDSHREW]:[[1,E.SCRATCH],[1,E.DEFENSE_CURL],[3,E.MIST],[6,E.POWDER_SNOW],[9,E.ROLLOUT],[12,E.FURY_CUTTER],[15,E.RAPID_SPIN],[18,E.METAL_CLAW],[21,E.SWIFT],[24,E.FURY_SWIPES],[27,E.IRON_DEFENSE],[30,E.SLASH],[33,E.IRON_HEAD],[36,E.GYRO_BALL],[39,E.SWORDS_DANCE],[42,E.SNOWSCAPE],[45,E.BLIZZARD]],[A.ALOLA_SANDSLASH]:[[b,E.ICICLE_SPEAR],[V,E.SCRATCH],[V,E.MIST],[V,E.BLIZZARD],[V,E.DEFENSE_CURL],[V,E.SWIFT],[V,E.FURY_SWIPES],[V,E.POWDER_SNOW],[V,E.ROLLOUT],[V,E.FURY_CUTTER],[V,E.RAPID_SPIN],[V,E.IRON_DEFENSE],[V,E.GYRO_BALL],[V,E.METAL_BURST],[V,E.IRON_HEAD],[V,E.SNOWSCAPE],[1,E.ICICLE_CRASH],[1,E.METAL_CLAW],[1,E.SLASH],[1,E.SWORDS_DANCE],[1,E.ICE_BALL]],[A.ALOLA_VULPIX]:[[1,E.TAIL_WHIP],[1,E.POWDER_SNOW],[4,E.DISABLE],[8,E.ICE_SHARD],[12,E.SPITE],[16,E.ICY_WIND],[20,E.CONFUSE_RAY],[24,E.AURORA_BEAM],[28,E.EXTRASENSORY],[32,E.ICE_BEAM],[36,E.IMPRISON],[40,E.MIST],[44,E.AURORA_VEIL],[48,E.FREEZE_DRY],[52,E.BLIZZARD]],[A.ALOLA_NINETALES]:[[b,E.DAZZLING_GLEAM],[V,E.DISABLE],[V,E.MIST],[V,E.ICE_BEAM],[V,E.AURORA_BEAM],[V,E.CONFUSE_RAY],[V,E.SPITE],[V,E.POWDER_SNOW],[V,E.EXTRASENSORY],[V,E.NASTY_PLOT],[V,E.ICE_SHARD],[V,E.FREEZE_DRY],[V,E.AURORA_VEIL],[1,E.ICY_WIND],[1,E.IMPRISON],[1,E.BLIZZARD],[1,E.TAIL_WHIP]],[A.ALOLA_DIGLETT]:[[1,E.SAND_ATTACK],[1,E.METAL_CLAW],[4,E.GROWL],[8,E.ASTONISH],[12,E.MUD_SLAP],[16,E.BULLDOZE],[20,E.SUCKER_PUNCH],[24,E.IRON_HEAD],[28,E.SANDSTORM],[32,E.DIG],[36,E.EARTH_POWER],[40,E.EARTHQUAKE],[44,E.FISSURE]],[A.ALOLA_DUGTRIO]:[[b,E.SAND_TOMB],[1,E.SAND_ATTACK],[1,E.GROWL],[1,E.TRI_ATTACK],[1,E.METAL_CLAW],[1,E.ASTONISH],[1,E.NIGHT_SLASH],[1,E.ROTOTILLER],[12,E.MUD_SLAP],[16,E.BULLDOZE],[20,E.SUCKER_PUNCH],[24,E.IRON_HEAD],[30,E.SANDSTORM],[36,E.DIG],[42,E.EARTH_POWER],[48,E.EARTHQUAKE],[54,E.FISSURE]],[A.ALOLA_MEOWTH]:[[1,E.GROWL],[1,E.FAKE_OUT],[4,E.FEINT],[8,E.SCRATCH],[12,E.PAY_DAY],[16,E.BITE],[20,E.TAUNT],[24,E.ASSURANCE],[29,E.FURY_SWIPES],[32,E.SCREECH],[36,E.NIGHT_SLASH],[40,E.NASTY_PLOT],[44,E.PLAY_ROUGH]],[A.ALOLA_PERSIAN]:[[b,E.POWER_GEM],[1,E.SCRATCH],[1,E.GROWL],[1,E.FAKE_OUT],[1,E.FEINT],[1,E.SWITCHEROO],[1,E.QUASH],[12,E.PAY_DAY],[16,E.BITE],[20,E.TAUNT],[24,E.ASSURANCE],[31,E.FURY_SWIPES],[36,E.SCREECH],[42,E.NIGHT_SLASH],[48,E.NASTY_PLOT],[54,E.PLAY_ROUGH]],[A.ALOLA_GEODUDE]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[4,E.CHARGE],[6,E.ROCK_POLISH],[10,E.ROLLOUT],[12,E.SPARK],[16,E.ROCK_THROW],[18,E.SMACK_DOWN],[22,E.THUNDER_PUNCH],[24,E.SELF_DESTRUCT],[28,E.STEALTH_ROCK],[30,E.ROCK_BLAST],[34,E.DISCHARGE],[36,E.EXPLOSION],[40,E.DOUBLE_EDGE],[42,E.STONE_EDGE]],[A.ALOLA_GRAVELER]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[1,E.CHARGE],[1,E.ROCK_POLISH],[10,E.ROLLOUT],[12,E.SPARK],[16,E.ROCK_THROW],[18,E.SMACK_DOWN],[22,E.THUNDER_PUNCH],[24,E.SELF_DESTRUCT],[30,E.STEALTH_ROCK],[34,E.ROCK_BLAST],[40,E.DISCHARGE],[44,E.EXPLOSION],[50,E.DOUBLE_EDGE],[54,E.STONE_EDGE]],[A.ALOLA_GOLEM]:[[1,E.TACKLE],[1,E.DEFENSE_CURL],[1,E.CHARGE],[1,E.ROCK_POLISH],[1,E.ROLLOUT],[1,E.HEAVY_SLAM],[12,E.SPARK],[16,E.ROCK_THROW],[18,E.SMACK_DOWN],[22,E.THUNDER_PUNCH],[24,E.SELF_DESTRUCT],[30,E.STEALTH_ROCK],[34,E.ROCK_BLAST],[40,E.DISCHARGE],[44,E.EXPLOSION],[50,E.DOUBLE_EDGE],[54,E.STONE_EDGE]],[A.ALOLA_GRIMER]:[[1,E.POUND],[1,E.POISON_GAS],[4,E.HARDEN],[7,E.BITE],[12,E.DISABLE],[15,E.ACID_SPRAY],[18,E.POISON_FANG],[21,E.MINIMIZE],[26,E.TOXIC],[29,E.KNOCK_OFF],[32,E.CRUNCH],[37,E.SCREECH],[40,E.GUNK_SHOT],[43,E.ACID_ARMOR],[46,E.BELCH],[48,E.MEMENTO]],[A.ALOLA_MUK]:[[1,E.POUND],[1,E.BITE],[1,E.HARDEN],[1,E.POISON_GAS],[12,E.DISABLE],[15,E.ACID_SPRAY],[18,E.POISON_FANG],[21,E.MINIMIZE],[26,E.TOXIC],[29,E.KNOCK_OFF],[32,E.CRUNCH],[37,E.SCREECH],[40,E.GUNK_SHOT],[46,E.ACID_ARMOR],[52,E.BELCH],[57,E.MEMENTO]],[A.ALOLA_EXEGGUTOR]:[[b,E.DRAGON_HAMMER],[V,E.GROWTH],[1,E.BARRAGE],[1,E.SEED_BOMB],[1,E.PSYSHOCK],[1,E.WOOD_HAMMER],[1,E.LEAF_STORM],[1,E.MEGA_DRAIN],[1,E.CONFUSION],[1,E.SYNTHESIS],[1,E.BULLET_SEED],[1,E.GIGA_DRAIN],[1,E.EXTRASENSORY],[1,E.UPROAR],[1,E.WORRY_SEED],[1,E.SOLAR_BEAM],[1,E.ABSORB],[1,E.HYPNOSIS],[1,E.REFLECT],[1,E.LEECH_SEED]],[A.ALOLA_MAROWAK]:[[b,E.SHADOW_BONE],[1,E.BONE_CLUB],[1,E.HEADBUTT],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.FIRE_SPIN],[1,E.FOCUS_ENERGY],[1,E.MUD_SLAP],[1,E.FALSE_SWIPE],[1,E.RETALIATE],[12,E.FLAME_WHEEL],[16,E.HEX],[20,E.FLING],[24,E.STOMPING_TANTRUM],[31,E.BONE_RUSH],[36,E.WILL_O_WISP],[42,E.ENDEAVOR],[48,E.BONEMERANG],[54,E.THRASH],[60,E.FLARE_BLITZ]],[A.ETERNAL_FLOETTE]:[[1,E.VINE_WHIP],[1,E.TACKLE],[1,E.FAIRY_WIND],[10,E.LUCKY_CHANT],[15,E.RAZOR_LEAF],[20,E.WISH],[25,E.MAGICAL_LEAF],[27,E.GRASSY_TERRAIN],[33,E.PETAL_BLIZZARD],[38,E.AROMATHERAPY],[43,E.MISTY_TERRAIN],[46,E.MOONBLAST],[50,E.LIGHT_OF_RUIN],[51,E.PETAL_DANCE],[58,E.SOLAR_BEAM]],[A.GALAR_MEOWTH]:[[1,E.GROWL],[1,E.FAKE_OUT],[4,E.HONE_CLAWS],[8,E.SCRATCH],[12,E.PAY_DAY],[16,E.METAL_CLAW],[20,E.TAUNT],[24,E.SWAGGER],[29,E.FURY_SWIPES],[32,E.SCREECH],[36,E.SLASH],[40,E.METAL_SOUND],[44,E.THRASH]],[A.GALAR_PONYTA]:[[1,E.TACKLE],[1,E.GROWL],[5,E.TAIL_WHIP],[10,E.CONFUSION],[15,E.FAIRY_WIND],[20,E.AGILITY],[25,E.PSYBEAM],[30,E.STOMP],[35,E.HEAL_PULSE],[41,E.TAKE_DOWN],[45,E.DAZZLING_GLEAM],[50,E.PSYCHIC],[55,E.HEALING_WISH]],[A.GALAR_RAPIDASH]:[[b,E.PSYCHO_CUT],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.CONFUSION],[1,E.QUICK_ATTACK],[1,E.MEGAHORN],[15,E.FAIRY_WIND],[20,E.AGILITY],[25,E.PSYBEAM],[30,E.STOMP],[35,E.HEAL_PULSE],[43,E.TAKE_DOWN],[49,E.DAZZLING_GLEAM],[56,E.PSYCHIC],[63,E.HEALING_WISH]],[A.GALAR_SLOWPOKE]:[[1,E.TACKLE],[1,E.CURSE],[3,E.GROWL],[6,E.ACID],[9,E.YAWN],[12,E.CONFUSION],[15,E.DISABLE],[18,E.WATER_PULSE],[21,E.HEADBUTT],[24,E.ZEN_HEADBUTT],[27,E.AMNESIA],[30,E.SURF],[33,E.SLACK_OFF],[36,E.PSYCHIC],[39,E.PSYCH_UP],[42,E.RAIN_DANCE],[45,E.HEAL_PULSE]],[A.GALAR_SLOWBRO]:[[b,E.SHELL_SIDE_ARM],[1,E.TACKLE],[1,E.GROWL],[1,E.ACID],[1,E.WITHDRAW],[1,E.CURSE],[9,E.YAWN],[12,E.CONFUSION],[15,E.DISABLE],[18,E.WATER_PULSE],[21,E.HEADBUTT],[24,E.ZEN_HEADBUTT],[27,E.AMNESIA],[30,E.SURF],[33,E.SLACK_OFF],[36,E.PSYCHIC],[39,E.PSYCH_UP],[42,E.RAIN_DANCE],[45,E.HEAL_PULSE]],[A.GALAR_FARFETCHD]:[[1,E.SAND_ATTACK],[1,E.PECK],[5,E.LEER],[10,E.FURY_CUTTER],[15,E.ROCK_SMASH],[20,E.BRUTAL_SWING],[25,E.DETECT],[30,E.KNOCK_OFF],[35,E.DEFOG],[40,E.BRICK_BREAK],[45,E.SWORDS_DANCE],[50,E.SLAM],[55,E.LEAF_BLADE],[60,E.FINAL_GAMBIT],[65,E.BRAVE_BIRD]],[A.GALAR_WEEZING]:[[b,E.DOUBLE_HIT],[1,E.TACKLE],[1,E.SMOKESCREEN],[1,E.HAZE],[1,E.SMOG],[1,E.POISON_GAS],[1,E.HEAT_WAVE],[1,E.DEFOG],[1,E.AROMATIC_MIST],[1,E.STRANGE_STEAM],[12,E.CLEAR_SMOG],[16,E.ASSURANCE],[20,E.SLUDGE],[24,E.FAIRY_WIND],[28,E.SELF_DESTRUCT],[32,E.SLUDGE_BOMB],[38,E.TOXIC],[44,E.BELCH],[50,E.EXPLOSION],[56,E.MEMENTO],[62,E.DESTINY_BOND],[68,E.MISTY_TERRAIN]],[A.GALAR_MR_MIME]:[[1,E.POUND],[1,E.BARRIER],[1,E.TICKLE],[1,E.MIMIC],[1,E.LIGHT_SCREEN],[1,E.REFLECT],[1,E.PROTECT],[1,E.SAFEGUARD],[1,E.BATON_PASS],[1,E.ENCORE],[1,E.RAPID_SPIN],[1,E.ROLE_PLAY],[1,E.RECYCLE],[1,E.COPYCAT],[1,E.ICE_SHARD],[1,E.MISTY_TERRAIN],[1,E.DAZZLING_GLEAM],[12,E.CONFUSION],[16,E.ALLY_SWITCH],[20,E.ICY_WIND],[24,E.DOUBLE_KICK],[28,E.PSYBEAM],[32,E.HYPNOSIS],[36,E.MIRROR_COAT],[40,E.SUCKER_PUNCH],[44,E.FREEZE_DRY],[48,E.PSYCHIC],[52,E.TEETER_DANCE]],[A.GALAR_ARTICUNO]:[[1,E.GUST],[5,E.CONFUSION],[10,E.REFLECT],[15,E.HYPNOSIS],[20,E.AGILITY],[25,E.ANCIENT_POWER],[30,E.TAILWIND],[35,E.PSYCHO_CUT],[40,E.RECOVER],[45,E.FREEZING_GLARE],[50,E.DREAM_EATER],[55,E.HURRICANE],[60,E.DOUBLE_TEAM],[65,E.FUTURE_SIGHT],[70,E.TRICK_ROOM]],[A.GALAR_ZAPDOS]:[[1,E.PECK],[1,E.FOCUS_ENERGY],[5,E.ROCK_SMASH],[10,E.LIGHT_SCREEN],[15,E.PLUCK],[20,E.AGILITY],[25,E.ANCIENT_POWER],[30,E.BRICK_BREAK],[35,E.DRILL_PECK],[40,E.QUICK_GUARD],[45,E.THUNDEROUS_KICK],[50,E.BULK_UP],[55,E.COUNTER],[60,E.DETECT],[65,E.CLOSE_COMBAT],[70,E.REVERSAL]],[A.GALAR_MOLTRES]:[[1,E.GUST],[1,E.LEER],[5,E.PAYBACK],[10,E.SAFEGUARD],[15,E.WING_ATTACK],[20,E.AGILITY],[25,E.ANCIENT_POWER],[30,E.SUCKER_PUNCH],[35,E.AIR_SLASH],[40,E.AFTER_YOU],[45,E.FIERY_WRATH],[50,E.NASTY_PLOT],[55,E.HURRICANE],[60,E.ENDURE],[65,E.MEMENTO],[70,E.SKY_ATTACK]],[A.GALAR_SLOWKING]:[[b,E.EERIE_SPELL],[V,E.FUTURE_SIGHT],[V,E.CHILLY_RECEPTION],[V,E.TOXIC],[1,E.POWER_GEM],[1,E.NASTY_PLOT],[1,E.SWAGGER],[1,E.TACKLE],[1,E.CURSE],[1,E.GROWL],[1,E.ACID],[9,E.YAWN],[12,E.CONFUSION],[15,E.DISABLE],[18,E.WATER_PULSE],[21,E.HEADBUTT],[24,E.ZEN_HEADBUTT],[27,E.AMNESIA],[30,E.SURF],[33,E.SLACK_OFF],[36,E.PSYCHIC],[39,E.PSYCH_UP],[42,E.RAIN_DANCE],[45,E.HEAL_PULSE]],[A.GALAR_CORSOLA]:[[1,E.TACKLE],[1,E.HARDEN],[5,E.ASTONISH],[10,E.DISABLE],[15,E.SPITE],[20,E.ANCIENT_POWER],[25,E.HEX],[30,E.CURSE],[35,E.STRENGTH_SAP],[40,E.POWER_GEM],[45,E.NIGHT_SHADE],[50,E.GRUDGE],[55,E.MIRROR_COAT]],[A.GALAR_ZIGZAGOON]:[[1,E.TACKLE],[1,E.LEER],[3,E.SAND_ATTACK],[6,E.LICK],[9,E.SNARL],[12,E.HEADBUTT],[15,E.BABY_DOLL_EYES],[18,E.PIN_MISSILE],[21,E.REST],[24,E.TAKE_DOWN],[27,E.SCARY_FACE],[30,E.COUNTER],[33,E.TAUNT],[36,E.DOUBLE_EDGE]],[A.GALAR_LINOONE]:[[b,E.NIGHT_SLASH],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.PIN_MISSILE],[1,E.LEER],[1,E.LICK],[1,E.SWITCHEROO],[1,E.BABY_DOLL_EYES],[9,E.SNARL],[12,E.HEADBUTT],[15,E.HONE_CLAWS],[18,E.FURY_SWIPES],[23,E.REST],[28,E.TAKE_DOWN],[33,E.SCARY_FACE],[38,E.COUNTER],[43,E.TAUNT],[48,E.DOUBLE_EDGE]],[A.GALAR_DARUMAKA]:[[1,E.TACKLE],[1,E.POWDER_SNOW],[4,E.TAUNT],[8,E.BITE],[12,E.AVALANCHE],[16,E.WORK_UP],[20,E.ICE_FANG],[24,E.HEADBUTT],[28,E.ICE_PUNCH],[32,E.UPROAR],[36,E.BELLY_DRUM],[40,E.BLIZZARD],[44,E.THRASH],[48,E.SUPERPOWER]],[A.GALAR_DARMANITAN]:[[b,E.ICICLE_CRASH],[1,E.TACKLE],[1,E.BITE],[1,E.POWDER_SNOW],[1,E.TAUNT],[12,E.AVALANCHE],[16,E.WORK_UP],[20,E.ICE_FANG],[24,E.HEADBUTT],[28,E.ICE_PUNCH],[32,E.UPROAR],[38,E.BELLY_DRUM],[44,E.BLIZZARD],[50,E.THRASH],[56,E.SUPERPOWER]],[A.GALAR_YAMASK]:[[1,E.PROTECT],[1,E.ASTONISH],[4,E.HAZE],[8,E.NIGHT_SHADE],[12,E.DISABLE],[16,E.BRUTAL_SWING],[20,E.CRAFTY_SHIELD],[24,E.HEX],[28,E.MEAN_LOOK],[32,E.SLAM],[36,E.CURSE],[40,E.SHADOW_BALL],[44,E.EARTHQUAKE],[48,E.GUARD_SPLIT],[48,E.POWER_SPLIT],[52,E.DESTINY_BOND]],[A.GALAR_STUNFISK]:[[1,E.TACKLE],[1,E.WATER_GUN],[1,E.MUD_SLAP],[1,E.METAL_CLAW],[5,E.ENDURE],[10,E.MUD_SHOT],[15,E.REVENGE],[20,E.METAL_SOUND],[25,E.SUCKER_PUNCH],[30,E.IRON_DEFENSE],[35,E.BOUNCE],[40,E.MUDDY_WATER],[45,E.SNAP_TRAP],[50,E.FLAIL],[55,E.FISSURE]],[A.HISUI_GROWLITHE]:[[1,E.LEER],[1,E.EMBER],[4,E.HOWL],[8,E.BITE],[12,E.FLAME_WHEEL],[16,E.HELPING_HAND],[24,E.FIRE_FANG],[28,E.RETALIATE],[32,E.CRUNCH],[36,E.TAKE_DOWN],[40,E.FLAMETHROWER],[44,E.ROAR],[48,E.ROCK_SLIDE],[52,E.REVERSAL],[56,E.FLARE_BLITZ]],[A.HISUI_ARCANINE]:[[b,E.EXTREME_SPEED],[1,E.TAKE_DOWN],[1,E.LEER],[1,E.BITE],[1,E.ROAR],[1,E.EMBER],[1,E.ROCK_THROW],[1,E.AGILITY],[1,E.ROCK_SLIDE],[1,E.FLAME_WHEEL],[1,E.REVERSAL],[1,E.CRUNCH],[1,E.HELPING_HAND],[1,E.HOWL],[1,E.FLARE_BLITZ],[1,E.FIRE_FANG],[1,E.RETALIATE],[5,E.FLAMETHROWER],[64,E.RAGING_FURY]],[A.HISUI_VOLTORB]:[[1,E.TACKLE],[1,E.CHARGE],[4,E.THUNDER_SHOCK],[6,E.STUN_SPORE],[9,E.BULLET_SEED],[11,E.ROLLOUT],[13,E.SCREECH],[16,E.CHARGE_BEAM],[20,E.SWIFT],[22,E.ELECTRO_BALL],[26,E.SELF_DESTRUCT],[29,E.ENERGY_BALL],[34,E.SEED_BOMB],[34,E.DISCHARGE],[41,E.EXPLOSION],[46,E.GYRO_BALL],[50,E.GRASSY_TERRAIN]],[A.HISUI_ELECTRODE]:[[b,E.CHLOROBLAST],[1,E.TACKLE],[1,E.CHARGE],[4,E.THUNDER_SHOCK],[6,E.STUN_SPORE],[9,E.BULLET_SEED],[11,E.ROLLOUT],[13,E.SCREECH],[16,E.CHARGE_BEAM],[20,E.SWIFT],[22,E.ELECTRO_BALL],[26,E.SELF_DESTRUCT],[29,E.ENERGY_BALL],[34,E.SEED_BOMB],[34,E.DISCHARGE],[41,E.EXPLOSION],[46,E.GYRO_BALL],[50,E.GRASSY_TERRAIN]],[A.HISUI_TYPHLOSION]:[[b,E.INFERNAL_PARADE],[1,E.TACKLE],[1,E.DOUBLE_EDGE],[1,E.LEER],[1,E.EMBER],[1,E.SMOKESCREEN],[1,E.ERUPTION],[1,E.GYRO_BALL],[13,E.QUICK_ATTACK],[20,E.FLAME_WHEEL],[24,E.DEFENSE_CURL],[31,E.SWIFT],[35,E.FLAME_CHARGE],[43,E.LAVA_PLUME],[48,E.FLAMETHROWER],[56,E.INFERNO],[61,E.ROLLOUT],[74,E.OVERHEAT]],[A.HISUI_QWILFISH]:[[1,E.TACKLE],[1,E.POISON_STING],[4,E.HARDEN],[8,E.BITE],[12,E.FELL_STINGER],[16,E.MINIMIZE],[20,E.SPIKES],[24,E.BRINE],[28,E.BARB_BARRAGE],[32,E.PIN_MISSILE],[36,E.TOXIC_SPIKES],[40,E.STOCKPILE],[40,E.SPIT_UP],[44,E.TOXIC],[48,E.CRUNCH],[52,E.ACUPRESSURE],[56,E.DESTINY_BOND]],[A.HISUI_SNEASEL]:[[1,E.SCRATCH],[1,E.LEER],[1,E.ROCK_SMASH],[6,E.TAUNT],[12,E.QUICK_ATTACK],[18,E.METAL_CLAW],[24,E.POISON_JAB],[30,E.BRICK_BREAK],[36,E.HONE_CLAWS],[42,E.SLASH],[48,E.AGILITY],[54,E.SCREECH],[60,E.CLOSE_COMBAT]],[A.HISUI_SAMUROTT]:[[b,E.CEASELESS_EDGE],[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.WATER_GUN],[1,E.SOAK],[1,E.SLASH],[1,E.MEGAHORN],[1,E.SUCKER_PUNCH],[13,E.FOCUS_ENERGY],[18,E.RAZOR_SHELL],[21,E.FURY_CUTTER],[25,E.WATER_PULSE],[29,E.AERIAL_ACE],[34,E.AQUA_JET],[39,E.ENCORE],[46,E.AQUA_TAIL],[51,E.RETALIATE],[58,E.SWORDS_DANCE],[63,E.HYDRO_PUMP]],[A.HISUI_LILLIGANT]:[[b,E.VICTORY_DANCE],[1,E.MEGA_KICK],[1,E.ABSORB],[1,E.MEGA_DRAIN],[1,E.LEECH_SEED],[1,E.GROWTH],[1,E.STUN_SPORE],[1,E.SLEEP_POWDER],[1,E.GIGA_DRAIN],[1,E.CHARM],[1,E.SYNTHESIS],[1,E.SUNNY_DAY],[1,E.HELPING_HAND],[1,E.TEETER_DANCE],[1,E.MAGICAL_LEAF],[1,E.LEAF_BLADE],[1,E.ENERGY_BALL],[1,E.DEFOG],[1,E.LEAF_STORM],[1,E.ENTRAINMENT],[1,E.AFTER_YOU],[1,E.PETAL_BLIZZARD],[1,E.SOLAR_BLADE],[5,E.AXE_KICK]],[A.HISUI_ZORUA]:[[1,E.SCRATCH],[1,E.LEER],[4,E.TORMENT],[8,E.HONE_CLAWS],[12,E.SHADOW_SNEAK],[16,E.CURSE],[20,E.TAUNT],[24,E.KNOCK_OFF],[28,E.SPITE],[32,E.AGILITY],[36,E.SHADOW_BALL],[40,E.BITTER_MALICE],[44,E.NASTY_PLOT],[48,E.FOUL_PLAY]],[A.HISUI_ZOROARK]:[[b,E.SHADOW_CLAW],[1,E.SCRATCH],[1,E.LEER],[1,E.TORMENT],[1,E.U_TURN],[1,E.HONE_CLAWS],[12,E.SHADOW_SNEAK],[16,E.CURSE],[20,E.TAUNT],[24,E.KNOCK_OFF],[28,E.SPITE],[34,E.AGILITY],[40,E.SHADOW_BALL],[46,E.BITTER_MALICE],[52,E.NASTY_PLOT],[58,E.FOUL_PLAY]],[A.HISUI_BRAVIARY]:[[b,E.ESPER_WING],[V,E.BRAVE_BIRD],[1,E.WING_ATTACK],[1,E.LEER],[1,E.PECK],[1,E.SKY_ATTACK],[1,E.SUPERPOWER],[1,E.HONE_CLAWS],[18,E.TAILWIND],[24,E.SCARY_FACE],[30,E.AERIAL_ACE],[36,E.SLASH],[42,E.WHIRLWIND],[48,E.CRUSH_CLAW],[57,E.AIR_SLASH],[64,E.DEFOG],[72,E.THRASH],[80,E.HURRICANE]],[A.HISUI_SLIGGOO]:[[b,E.SHELTER],[1,E.TACKLE],[1,E.WATER_GUN],[1,E.ABSORB],[1,E.ACID_ARMOR],[1,E.DRAGON_BREATH],[1,E.BODY_SLAM],[15,E.PROTECT],[20,E.FLAIL],[25,E.WATER_PULSE],[30,E.RAIN_DANCE],[35,E.DRAGON_PULSE],[43,E.CURSE],[49,E.IRON_HEAD],[56,E.MUDDY_WATER]],[A.HISUI_GOODRA]:[[b,E.IRON_TAIL],[1,E.TACKLE],[1,E.WATER_GUN],[1,E.ABSORB],[1,E.ACID_ARMOR],[1,E.DRAGON_BREATH],[1,E.FEINT],[1,E.ACID_SPRAY],[1,E.TEARFUL_LOOK],[1,E.SHELTER],[15,E.PROTECT],[20,E.FLAIL],[25,E.WATER_PULSE],[30,E.RAIN_DANCE],[35,E.DRAGON_PULSE],[43,E.CURSE],[49,E.BODY_SLAM],[49,E.IRON_HEAD],[58,E.MUDDY_WATER],[67,E.HEAVY_SLAM]],[A.HISUI_AVALUGG]:[[b,E.ROCK_SLIDE],[1,E.TACKLE],[1,E.HARDEN],[1,E.POWDER_SNOW],[1,E.RAPID_SPIN],[1,E.WIDE_GUARD],[9,E.CURSE],[12,E.ICY_WIND],[15,E.PROTECT],[18,E.AVALANCHE],[21,E.BITE],[24,E.ICE_FANG],[27,E.IRON_DEFENSE],[30,E.RECOVER],[33,E.CRUNCH],[36,E.TAKE_DOWN],[41,E.BLIZZARD],[46,E.DOUBLE_EDGE],[51,E.STONE_EDGE],[61,E.MOUNTAIN_GALE]],[A.HISUI_DECIDUEYE]:[[b,E.TRIPLE_ARROWS],[V,E.NASTY_PLOT],[1,E.TACKLE],[1,E.GROWL],[1,E.U_TURN],[1,E.ASTONISH],[1,E.LEAF_STORM],[1,E.LEAFAGE],[9,E.PECK],[12,E.SHADOW_SNEAK],[15,E.RAZOR_LEAF],[20,E.SYNTHESIS],[25,E.PLUCK],[30,E.BULK_UP],[37,E.SUCKER_PUNCH],[44,E.LEAF_BLADE],[51,E.FEATHER_DANCE],[58,E.BRAVE_BIRD]],[A.PALDEA_TAUROS]:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.WORK_UP],[10,E.DOUBLE_KICK],[15,E.ASSURANCE],[20,E.HEADBUTT],[25,E.SCARY_FACE],[30,E.ZEN_HEADBUTT],[35,E.RAGING_BULL],[40,E.REST],[45,E.SWAGGER],[50,E.THRASH],[55,E.DOUBLE_EDGE],[60,E.CLOSE_COMBAT]],[A.PALDEA_WOOPER]:[[1,E.TAIL_WHIP],[1,E.MUD_SHOT],[4,E.TACKLE],[8,E.POISON_TAIL],[12,E.TOXIC_SPIKES],[16,E.SLAM],[21,E.YAWN],[24,E.POISON_JAB],[28,E.SLUDGE_WAVE],[32,E.AMNESIA],[36,E.TOXIC],[40,E.EARTHQUAKE]],[A.BLOODMOON_URSALUNA]:[[V,E.MOONLIGHT],[1,E.HEADLONG_RUSH],[1,E.SCRATCH],[1,E.LEER],[1,E.LICK],[8,E.FURY_SWIPES],[13,E.PAYBACK],[17,E.HARDEN],[22,E.SLASH],[25,E.PLAY_NICE],[35,E.SCARY_FACE],[41,E.REST],[41,E.SNORE],[48,E.EARTH_POWER],[56,E.MOONBLAST],[64,E.HAMMER_ARM],[70,E.BLOOD_MOON]]},rN={[A.PIKACHU]:{1:[[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.ZIPPY_ZAP],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[34,E.FLOATY_FALL],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[42,E.SPLISHY_SPLASH],[44,E.THUNDER],[48,E.PIKA_PAPOW]],2:[[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.SPARK],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[44,E.THUNDER],[48,E.PIKA_PAPOW]],3:[[1,E.METEOR_MASH],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.SPARK],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[44,E.THUNDER],[48,E.PIKA_PAPOW]],4:[[1,E.ICICLE_CRASH],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.SPARK],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[44,E.THUNDER],[48,E.PIKA_PAPOW]],5:[[1,E.DRAINING_KISS],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.SPARK],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[44,E.THUNDER],[48,E.PIKA_PAPOW]],6:[[1,E.ELECTRIC_TERRAIN],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.SPARK],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[44,E.THUNDER],[48,E.PIKA_PAPOW]],7:[[1,E.FLYING_PRESS],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.SPARK],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[44,E.THUNDER],[48,E.PIKA_PAPOW]],8:[[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.THUNDER_SHOCK],[1,E.QUICK_ATTACK],[1,E.SWEET_KISS],[1,E.CHARM],[1,E.NASTY_PLOT],[1,E.PLAY_NICE],[1,E.NUZZLE],[4,E.THUNDER_WAVE],[8,E.DOUBLE_TEAM],[12,E.ELECTRO_BALL],[16,E.FEINT],[20,E.ZIPPY_ZAP],[24,E.AGILITY],[28,E.IRON_TAIL],[32,E.DISCHARGE],[34,E.FLOATY_FALL],[36,E.THUNDERBOLT],[40,E.LIGHT_SCREEN],[42,E.SPLISHY_SPLASH],[44,E.THUNDER],[48,E.PIKA_PAPOW]]},[A.EEVEE]:{1:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.HELPING_HAND],[1,E.COVET],[5,E.SAND_ATTACK],[10,E.QUICK_ATTACK],[15,E.BABY_DOLL_EYES],[18,E.BOUNCY_BUBBLE],[18,E.SIZZLY_SLIDE],[18,E.BUZZY_BUZZ],[20,E.SWIFT],[25,E.BITE],[30,E.COPYCAT],[33,E.BADDY_BAD],[33,E.GLITZY_GLOW],[35,E.BATON_PASS],[40,E.VEEVEE_VOLLEY],[43,E.FREEZY_FROST],[43,E.SAPPY_SEED],[45,E.CHARM],[50,E.DOUBLE_EDGE],[53,E.SPARKLY_SWIRL],[55,E.LAST_RESORT]],2:[[1,E.TACKLE],[1,E.TAIL_WHIP],[1,E.GROWL],[1,E.HELPING_HAND],[1,E.COVET],[5,E.SAND_ATTACK],[10,E.QUICK_ATTACK],[15,E.BABY_DOLL_EYES],[18,E.BOUNCY_BUBBLE],[18,E.SIZZLY_SLIDE],[18,E.BUZZY_BUZZ],[20,E.SWIFT],[25,E.BITE],[30,E.COPYCAT],[33,E.BADDY_BAD],[33,E.GLITZY_GLOW],[35,E.BATON_PASS],[40,E.VEEVEE_VOLLEY],[43,E.FREEZY_FROST],[43,E.SAPPY_SEED],[45,E.CHARM],[50,E.DOUBLE_EDGE],[53,E.SPARKLY_SWIRL],[55,E.LAST_RESORT]]},[A.DEOXYS]:{1:[[1,E.CONFUSION],[1,E.WRAP],[1,E.LEER],[7,E.NIGHT_SHADE],[13,E.TELEPORT],[19,E.TAUNT],[25,E.PURSUIT],[31,E.PSYCHIC],[37,E.SUPERPOWER],[43,E.PSYCHO_SHIFT],[49,E.ZEN_HEADBUTT],[55,E.COSMIC_POWER],[61,E.ZAP_CANNON],[67,E.PSYCHO_BOOST],[73,E.HYPER_BEAM]],2:[[1,E.CONFUSION],[1,E.WRAP],[1,E.LEER],[7,E.NIGHT_SHADE],[13,E.TELEPORT],[19,E.KNOCK_OFF],[25,E.SPIKES],[31,E.PSYCHIC],[37,E.SNATCH],[43,E.PSYCHO_SHIFT],[49,E.ZEN_HEADBUTT],[55,E.AMNESIA],[55,E.IRON_DEFENSE],[61,E.RECOVER],[67,E.PSYCHO_BOOST],[73,E.COUNTER],[73,E.MIRROR_COAT]],3:[[1,E.CONFUSION],[1,E.WRAP],[1,E.LEER],[7,E.NIGHT_SHADE],[13,E.DOUBLE_TEAM],[19,E.KNOCK_OFF],[25,E.PURSUIT],[31,E.PSYCHIC],[37,E.SWIFT],[43,E.PSYCHO_SHIFT],[49,E.ZEN_HEADBUTT],[55,E.AGILITY],[61,E.RECOVER],[67,E.PSYCHO_BOOST],[73,E.EXTREME_SPEED]]},[A.WORMADAM]:{1:[[b,E.QUIVER_DANCE],[1,E.STRUGGLE_BUG],[1,E.TACKLE],[1,E.PROTECT],[1,E.SUCKER_PUNCH],[1,E.BUG_BITE],[1,E.PROTECT],[10,E.TACKLE],[20,E.STRING_SHOT],[23,E.CONFUSION],[26,E.ROCK_BLAST],[29,E.HARDEN],[32,E.PSYBEAM],[35,E.INFESTATION],[38,E.FLAIL],[41,E.ATTRACT],[44,E.PSYCHIC],[47,E.FISSURE],[50,E.BUG_BUZZ]],2:[[b,E.QUIVER_DANCE],[1,E.STRUGGLE_BUG],[1,E.METAL_BURST],[1,E.TACKLE],[1,E.PROTECT],[1,E.SUCKER_PUNCH],[1,E.BUG_BITE],[1,E.PROTECT],[10,E.TACKLE],[20,E.STRING_SHOT],[23,E.CONFUSION],[26,E.METAL_BURST],[29,E.METAL_SOUND],[32,E.PSYBEAM],[35,E.INFESTATION],[38,E.FLAIL],[41,E.ATTRACT],[44,E.PSYCHIC],[47,E.IRON_HEAD],[50,E.BUG_BUZZ]]},[A.ROTOM]:{1:[[1,E.OVERHEAT],[1,E.DOUBLE_TEAM],[1,E.ASTONISH],[5,E.THUNDER_SHOCK],[10,E.CONFUSE_RAY],[15,E.CHARGE],[20,E.ELECTRO_BALL],[25,E.THUNDER_WAVE],[30,E.SHOCK_WAVE],[35,E.HEX],[40,E.SUBSTITUTE],[45,E.TRICK],[50,E.DISCHARGE],[55,E.UPROAR]],2:[[1,E.HYDRO_PUMP],[1,E.DOUBLE_TEAM],[1,E.ASTONISH],[5,E.THUNDER_SHOCK],[10,E.CONFUSE_RAY],[15,E.CHARGE],[20,E.ELECTRO_BALL],[25,E.THUNDER_WAVE],[30,E.SHOCK_WAVE],[35,E.HEX],[40,E.SUBSTITUTE],[45,E.TRICK],[50,E.DISCHARGE],[55,E.UPROAR]],3:[[1,E.BLIZZARD],[1,E.DOUBLE_TEAM],[1,E.ASTONISH],[5,E.THUNDER_SHOCK],[10,E.CONFUSE_RAY],[15,E.CHARGE],[20,E.ELECTRO_BALL],[25,E.THUNDER_WAVE],[30,E.SHOCK_WAVE],[35,E.HEX],[40,E.SUBSTITUTE],[45,E.TRICK],[50,E.DISCHARGE],[55,E.UPROAR]],4:[[1,E.AIR_SLASH],[1,E.DOUBLE_TEAM],[1,E.ASTONISH],[5,E.THUNDER_SHOCK],[10,E.CONFUSE_RAY],[15,E.CHARGE],[20,E.ELECTRO_BALL],[25,E.THUNDER_WAVE],[30,E.SHOCK_WAVE],[35,E.HEX],[40,E.SUBSTITUTE],[45,E.TRICK],[50,E.DISCHARGE],[55,E.UPROAR]],5:[[1,E.LEAF_STORM],[1,E.DOUBLE_TEAM],[1,E.ASTONISH],[5,E.THUNDER_SHOCK],[10,E.CONFUSE_RAY],[15,E.CHARGE],[20,E.ELECTRO_BALL],[25,E.THUNDER_WAVE],[30,E.SHOCK_WAVE],[35,E.HEX],[40,E.SUBSTITUTE],[45,E.TRICK],[50,E.DISCHARGE],[55,E.UPROAR]]},[A.SHAYMIN]:{1:[[1,E.LEAFAGE],[1,E.GROWTH],[10,E.MAGICAL_LEAF],[19,E.LEECH_SEED],[28,E.QUICK_ATTACK],[37,E.SWEET_SCENT],[46,E.NATURAL_GIFT],[55,E.WORRY_SEED],[64,E.AIR_SLASH],[73,E.ENERGY_BALL],[82,E.SWEET_KISS],[91,E.LEAF_STORM],[100,E.SEED_FLARE]]},[A.BASCULIN]:{1:[[1,E.TAIL_WHIP],[1,E.WATER_GUN],[4,E.TACKLE],[8,E.FLAIL],[12,E.AQUA_JET],[16,E.BITE],[20,E.SCARY_FACE],[24,E.HEADBUTT],[28,E.SOAK],[32,E.CRUNCH],[36,E.TAKE_DOWN],[40,E.FINAL_GAMBIT],[44,E.WAVE_CRASH],[48,E.THRASH],[52,E.DOUBLE_EDGE],[56,E.HEAD_SMASH]],2:[[1,E.TAIL_WHIP],[1,E.WATER_GUN],[4,E.TACKLE],[8,E.FLAIL],[12,E.AQUA_JET],[16,E.BITE],[20,E.SCARY_FACE],[24,E.HEADBUTT],[28,E.SOAK],[32,E.CRUNCH],[36,E.TAKE_DOWN],[40,E.UPROAR],[44,E.WAVE_CRASH],[48,E.THRASH],[52,E.DOUBLE_EDGE],[56,E.HEAD_SMASH]]},[A.KYUREM]:{1:[[1,E.DRAGON_BREATH],[1,E.ANCIENT_POWER],[1,E.NOBLE_ROAR],[1,E.FREEZE_DRY],[8,E.SLASH],[16,E.ENDEAVOR],[24,E.DRAGON_PULSE],[32,E.ICE_BEAM],[40,E.HYPER_VOICE],[48,E.FUSION_BOLT],[56,E.BLIZZARD],[64,E.IMPRISON],[72,E.OUTRAGE],[80,E.FREEZE_SHOCK],[88,E.SHEER_COLD]],2:[[1,E.DRAGON_BREATH],[1,E.ANCIENT_POWER],[1,E.NOBLE_ROAR],[1,E.FREEZE_DRY],[8,E.SLASH],[16,E.ENDEAVOR],[24,E.DRAGON_PULSE],[32,E.ICE_BEAM],[40,E.HYPER_VOICE],[48,E.FUSION_FLARE],[56,E.BLIZZARD],[64,E.IMPRISON],[72,E.OUTRAGE],[80,E.ICE_BURN],[88,E.SHEER_COLD]]},[A.MEOWSTIC]:{1:[[1,E.SCRATCH],[1,E.LEER],[1,E.FAKE_OUT],[1,E.MAGICAL_LEAF],[1,E.DISARMING_VOICE],[9,E.CONFUSION],[12,E.STORED_POWER],[15,E.CHARGE_BEAM],[18,E.COVET],[21,E.PSYBEAM],[24,E.SUCKER_PUNCH],[29,E.ROLE_PLAY],[34,E.LIGHT_SCREEN],[34,E.REFLECT],[39,E.PSYSHOCK],[44,E.EXTRASENSORY],[49,E.SHADOW_BALL],[54,E.PSYCHIC],[59,E.FUTURE_SIGHT]]},[A.HOOPA]:{1:[[1,E.CONFUSION],[1,E.DESTINY_BOND],[1,E.ALLY_SWITCH],[6,E.ASTONISH],[10,E.TRICK],[15,E.LIGHT_SCREEN],[19,E.PSYBEAM],[25,E.SKILL_SWAP],[29,E.GUARD_SPLIT],[29,E.POWER_SPLIT],[46,E.KNOCK_OFF],[50,E.TRICK_ROOM],[50,E.WONDER_ROOM],[55,E.DARK_PULSE],[75,E.PSYCHIC],[85,E.HYPERSPACE_FURY]]},[A.GRENINJA]:{1:[[b,E.WATER_SHURIKEN],[1,E.POUND],[1,E.GROWL],[1,E.WATER_GUN],[1,E.QUICK_ATTACK],[1,E.ROUND],[1,E.FLING],[1,E.SMACK_DOWN],[1,E.BOUNCE],[1,E.HAZE],[1,E.MAT_BLOCK],[1,E.ROLE_PLAY],[1,E.NIGHT_SLASH],[10,E.LICK],[14,E.WATER_PULSE],[19,E.SMOKESCREEN],[23,E.SHADOW_SNEAK],[28,E.SPIKES],[33,E.AERIAL_ACE],[42,E.SUBSTITUTE],[49,E.EXTRASENSORY],[56,E.DOUBLE_TEAM],[68,E.HYDRO_PUMP]]},[A.LYCANROC]:{1:[[b,E.COUNTER],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.LEER],[1,E.DOUBLE_TEAM],[1,E.REVERSAL],[1,E.ENDURE],[1,E.TAUNT],[12,E.ROCK_THROW],[16,E.HOWL],[20,E.BITE],[24,E.ROCK_TOMB],[30,E.ROAR],[36,E.ROCK_SLIDE],[42,E.CRUNCH],[48,E.SCARY_FACE],[54,E.STEALTH_ROCK],[60,E.STONE_EDGE]],2:[[b,E.CRUSH_CLAW],[1,E.SAND_ATTACK],[1,E.TACKLE],[1,E.LEER],[1,E.COUNTER],[1,E.QUICK_ATTACK],[1,E.DOUBLE_TEAM],[1,E.REVERSAL],[1,E.ENDURE],[1,E.TAUNT],[1,E.SUCKER_PUNCH],[1,E.QUICK_GUARD],[1,E.ACCELEROCK],[12,E.ROCK_THROW],[16,E.HOWL],[20,E.BITE],[24,E.ROCK_TOMB],[30,E.ROAR],[36,E.ROCK_SLIDE],[42,E.CRUNCH],[48,E.SCARY_FACE],[54,E.STEALTH_ROCK],[60,E.STONE_EDGE]]},[A.NECROZMA]:{1:[[b,E.SUNSTEEL_STRIKE],[1,E.CONFUSION],[1,E.METAL_CLAW],[1,E.MORNING_SUN],[1,E.MOONLIGHT],[1,E.GRAVITY],[1,E.CHARGE_BEAM],[8,E.STEALTH_ROCK],[16,E.SLASH],[24,E.NIGHT_SLASH],[32,E.PSYCHO_CUT],[40,E.STORED_POWER],[48,E.ROCK_BLAST],[56,E.IRON_DEFENSE],[64,E.POWER_GEM],[72,E.PHOTON_GEYSER],[80,E.AUTOTOMIZE],[88,E.PRISMATIC_LASER]],2:[[b,E.MOONGEIST_BEAM],[1,E.CONFUSION],[1,E.METAL_CLAW],[1,E.MORNING_SUN],[1,E.MOONLIGHT],[1,E.GRAVITY],[1,E.CHARGE_BEAM],[8,E.STEALTH_ROCK],[16,E.SLASH],[24,E.NIGHT_SLASH],[32,E.PSYCHO_CUT],[40,E.STORED_POWER],[48,E.ROCK_BLAST],[56,E.IRON_DEFENSE],[64,E.POWER_GEM],[72,E.PHOTON_GEYSER],[80,E.AUTOTOMIZE],[88,E.PRISMATIC_LASER]],3:[[b,E.SUNSTEEL_STRIKE],[b,E.MOONGEIST_BEAM],[1,E.CONFUSION],[1,E.METAL_CLAW],[1,E.MORNING_SUN],[1,E.MOONLIGHT],[1,E.GRAVITY],[1,E.CHARGE_BEAM],[8,E.STEALTH_ROCK],[16,E.SLASH],[24,E.NIGHT_SLASH],[32,E.PSYCHO_CUT],[40,E.STORED_POWER],[48,E.ROCK_BLAST],[56,E.IRON_DEFENSE],[64,E.POWER_GEM],[72,E.PHOTON_GEYSER],[80,E.AUTOTOMIZE],[88,E.PRISMATIC_LASER]]},[A.TOXTRICITY]:{1:[[b,E.SPARK],[1,E.LEER],[1,E.GROWL],[1,E.ACID],[1,E.THUNDER_SHOCK],[1,E.FLAIL],[1,E.ACID_SPRAY],[1,E.BELCH],[1,E.NOBLE_ROAR],[1,E.NUZZLE],[1,E.TEARFUL_LOOK],[4,E.CHARGE],[8,E.SHOCK_WAVE],[12,E.SCARY_FACE],[16,E.TAUNT],[24,E.SCREECH],[28,E.SWAGGER],[32,E.TOXIC],[36,E.DISCHARGE],[40,E.POISON_JAB],[44,E.OVERDRIVE],[48,E.BOOMBURST],[52,E.MAGNETIC_FLUX]]},[A.INDEEDEE]:{1:[[1,E.STORED_POWER],[1,E.PLAY_NICE],[5,E.BATON_PASS],[10,E.DISARMING_VOICE],[15,E.PSYBEAM],[20,E.HELPING_HAND],[25,E.FOLLOW_ME],[30,E.HEALING_WISH],[35,E.PSYCHIC],[40,E.CALM_MIND],[45,E.GUARD_SPLIT],[50,E.PSYCHIC_TERRAIN]]},[A.ZACIAN]:{1:[[b,E.BEHEMOTH_BLADE],[1,E.BITE],[1,E.QUICK_ATTACK],[1,E.METAL_CLAW],[1,E.HOWL],[1,E.QUICK_GUARD],[1,E.SACRED_SWORD],[11,E.SLASH],[22,E.SWORDS_DANCE],[33,E.IRON_HEAD],[44,E.NOBLE_ROAR],[55,E.CRUNCH],[66,E.MOONBLAST],[77,E.CLOSE_COMBAT],[88,E.GIGA_IMPACT]]},[A.ZAMAZENTA]:{1:[[b,E.BEHEMOTH_BASH],[1,E.BITE],[1,E.QUICK_ATTACK],[1,E.METAL_CLAW],[1,E.HOWL],[1,E.WIDE_GUARD],[11,E.SLASH],[22,E.IRON_DEFENSE],[33,E.IRON_HEAD],[44,E.METAL_BURST],[55,E.CRUNCH],[66,E.MOONBLAST],[77,E.CLOSE_COMBAT],[88,E.GIGA_IMPACT]]},[A.ETERNATUS]:{1:[[1,E.AGILITY],[1,E.CONFUSE_RAY],[1,E.POISON_TAIL],[1,E.DRAGON_TAIL],[8,E.TOXIC],[16,E.VENOSHOCK],[24,E.DRAGON_DANCE],[32,E.CROSS_POISON],[40,E.DRAGON_PULSE],[48,E.FLAMETHROWER],[56,E.DYNAMAX_CANNON],[64,E.COSMIC_POWER],[72,E.RECOVER],[80,E.HYPER_BEAM],[88,E.ETERNABEAM]]},[A.URSHIFU]:{1:[[b,E.SURGING_STRIKES],[1,E.LEER],[1,E.FOCUS_ENERGY],[1,E.ENDURE],[1,E.ROCK_SMASH],[1,E.AQUA_JET],[12,E.AERIAL_ACE],[16,E.SCARY_FACE],[20,E.HEADBUTT],[24,E.BRICK_BREAK],[28,E.DETECT],[32,E.BULK_UP],[36,E.IRON_HEAD],[40,E.DYNAMIC_PUNCH],[44,E.COUNTER],[48,E.CLOSE_COMBAT],[52,E.FOCUS_PUNCH]],2:[[b,E.WICKED_BLOW],[1,E.LEER],[1,E.FOCUS_ENERGY],[1,E.ENDURE],[1,E.ROCK_SMASH],[1,E.SUCKER_PUNCH],[12,E.AERIAL_ACE],[16,E.SCARY_FACE],[20,E.HEADBUTT],[24,E.BRICK_BREAK],[28,E.DETECT],[32,E.BULK_UP],[36,E.IRON_HEAD],[40,E.DYNAMIC_PUNCH],[44,E.COUNTER],[48,E.CLOSE_COMBAT],[52,E.FOCUS_PUNCH]],3:[[b,E.SURGING_STRIKES],[1,E.LEER],[1,E.FOCUS_ENERGY],[1,E.ENDURE],[1,E.ROCK_SMASH],[1,E.AQUA_JET],[12,E.AERIAL_ACE],[16,E.SCARY_FACE],[20,E.HEADBUTT],[24,E.BRICK_BREAK],[28,E.DETECT],[32,E.BULK_UP],[36,E.IRON_HEAD],[40,E.DYNAMIC_PUNCH],[44,E.COUNTER],[48,E.CLOSE_COMBAT],[52,E.FOCUS_PUNCH]]},[A.CALYREX]:{1:[[1,E.POUND],[1,E.SWORDS_DANCE],[1,E.STOMP],[1,E.DOUBLE_KICK],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.THRASH],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.MIST],[1,E.MEGA_DRAIN],[1,E.GROWTH],[1,E.CONFUSION],[1,E.TORMENT],[1,E.TAUNT],[1,E.IRON_DEFENSE],[1,E.AVALANCHE],[1,E.ICICLE_CRASH],[1,E.GLACIAL_LANCE],[8,E.LIFE_DEW],[16,E.GIGA_DRAIN],[24,E.PSYSHOCK],[32,E.HELPING_HAND],[40,E.AROMATHERAPY],[40,E.GRASSY_TERRAIN],[48,E.ENERGY_BALL],[56,E.PSYCHIC],[64,E.LEECH_SEED],[72,E.HEAL_PULSE],[80,E.SOLAR_BEAM],[88,E.FUTURE_SIGHT]],2:[[1,E.POUND],[1,E.STOMP],[1,E.DOUBLE_KICK],[1,E.TACKLE],[1,E.TAKE_DOWN],[1,E.THRASH],[1,E.DOUBLE_EDGE],[1,E.TAIL_WHIP],[1,E.DISABLE],[1,E.MEGA_DRAIN],[1,E.GROWTH],[1,E.CONFUSION],[1,E.AGILITY],[1,E.CONFUSE_RAY],[1,E.HAZE],[1,E.SHADOW_BALL],[1,E.NASTY_PLOT],[1,E.HEX],[1,E.ASTRAL_BARRAGE],[8,E.LIFE_DEW],[16,E.GIGA_DRAIN],[24,E.PSYSHOCK],[32,E.HELPING_HAND],[40,E.GRASSY_TERRAIN],[40,E.PSYCHIC_TERRAIN],[48,E.ENERGY_BALL],[56,E.PSYCHIC],[64,E.LEECH_SEED],[72,E.HEAL_PULSE],[80,E.SOLAR_BEAM],[88,E.FUTURE_SIGHT]]},[A.OINKOLOGNE]:{1:[[1,E.TACKLE],[1,E.TAIL_WHIP],[3,E.DISARMING_VOICE],[6,E.ECHOED_VOICE],[9,E.MUD_SHOT],[12,E.COVET],[15,E.DIG],[17,E.HEADBUTT],[23,E.YAWN],[28,E.TAKE_DOWN],[30,E.WORK_UP],[34,E.UPROAR],[39,E.DOUBLE_EDGE],[45,E.EARTH_POWER],[51,E.BELCH]]},[A.REVAVROOM]:{1:[[b,E.WICKED_TORQUE],[b,E.SHIFT_GEAR],[1,E.LICK],[1,E.POISON_GAS],[1,E.MAGNET_RISE],[4,E.SMOG],[7,E.TAUNT],[10,E.ASSURANCE],[13,E.SLUDGE],[17,E.GYRO_BALL],[21,E.HEADBUTT],[25,E.SCREECH],[28,E.IRON_HEAD],[32,E.SWAGGER],[36,E.POISON_JAB],[46,E.UPROAR],[52,E.SPIN_OUT],[58,E.GUNK_SHOT]],2:[[b,E.BLAZING_TORQUE],[b,E.SHIFT_GEAR],[1,E.LICK],[1,E.POISON_GAS],[1,E.MAGNET_RISE],[4,E.SMOG],[7,E.TAUNT],[10,E.ASSURANCE],[13,E.SLUDGE],[17,E.GYRO_BALL],[21,E.HEADBUTT],[25,E.SCREECH],[28,E.IRON_HEAD],[32,E.SWAGGER],[36,E.POISON_JAB],[46,E.UPROAR],[52,E.SPIN_OUT],[58,E.GUNK_SHOT]],3:[[b,E.NOXIOUS_TORQUE],[b,E.SHIFT_GEAR],[1,E.LICK],[1,E.POISON_GAS],[1,E.MAGNET_RISE],[4,E.SMOG],[7,E.TAUNT],[10,E.ASSURANCE],[13,E.SLUDGE],[17,E.GYRO_BALL],[21,E.HEADBUTT],[25,E.SCREECH],[28,E.IRON_HEAD],[32,E.SWAGGER],[36,E.POISON_JAB],[46,E.UPROAR],[52,E.SPIN_OUT],[58,E.GUNK_SHOT]],4:[[b,E.MAGICAL_TORQUE],[b,E.SHIFT_GEAR],[1,E.LICK],[1,E.POISON_GAS],[1,E.MAGNET_RISE],[4,E.SMOG],[7,E.TAUNT],[10,E.ASSURANCE],[13,E.SLUDGE],[17,E.GYRO_BALL],[21,E.HEADBUTT],[25,E.SCREECH],[28,E.IRON_HEAD],[32,E.SWAGGER],[36,E.POISON_JAB],[46,E.UPROAR],[52,E.SPIN_OUT],[58,E.GUNK_SHOT]],5:[[b,E.COMBAT_TORQUE],[b,E.SHIFT_GEAR],[1,E.LICK],[1,E.POISON_GAS],[1,E.MAGNET_RISE],[4,E.SMOG],[7,E.TAUNT],[10,E.ASSURANCE],[13,E.SLUDGE],[17,E.GYRO_BALL],[21,E.HEADBUTT],[25,E.SCREECH],[28,E.IRON_HEAD],[32,E.SWAGGER],[36,E.POISON_JAB],[46,E.UPROAR],[52,E.SPIN_OUT],[58,E.GUNK_SHOT]]},[A.PALDEA_TAUROS]:{1:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.WORK_UP],[10,E.DOUBLE_KICK],[15,E.FLAME_CHARGE],[20,E.HEADBUTT],[25,E.SCARY_FACE],[30,E.ZEN_HEADBUTT],[35,E.RAGING_BULL],[40,E.REST],[45,E.SWAGGER],[50,E.THRASH],[55,E.FLARE_BLITZ],[60,E.CLOSE_COMBAT]],2:[[1,E.TACKLE],[1,E.TAIL_WHIP],[5,E.WORK_UP],[10,E.DOUBLE_KICK],[15,E.AQUA_JET],[20,E.HEADBUTT],[25,E.SCARY_FACE],[30,E.ZEN_HEADBUTT],[35,E.RAGING_BULL],[40,E.REST],[45,E.SWAGGER],[50,E.THRASH],[55,E.WAVE_CRASH],[60,E.CLOSE_COMBAT]]}};var tI=(R=>(R[R.STANDARD=0]="STANDARD",R[R.RARE=1]="RARE",R[R.EPIC=2]="EPIC",R))(tI||{});const qy=new Set,zy=/^pkmn__?(back__)?(shiny__)?(female__)?(\d+)(\-.*?)?(?:_[1-3])?$/;function aH(R){const e=zy.exec(R);if(!e)return!1;let I=e[4];return e[2]&&(I+="s"),e[1]&&(I+="b"),e[3]&&(I+="f"),e[5]&&(I+=e[5]),qy.has(I)}r(aH,"hasExpSprite");const oO={},dt={};function jI(R){switch(R){case 0:return 16302112;case 1:return 2160880;case 2:return 15208520}}r(jI,"getVariantTint");function D7(R){switch(R){case 0:return tI.STANDARD;case 1:return tI.RARE;case 2:return tI.EPIC}}r(D7,"getVariantIcon");function l7(){for(const R in oO)delete oO[R]}r(l7,"clearVariantData");async function Xm(R,e=!1,I=!0){const L=R.getBattleSpriteAtlasPath(e,I).replace("variant/","").replace(/_[1-3]$/,"");let N=oO;const S=T.experimentalSprites&&aH(R.getBattleSpriteKey(e,I));L.split("/").map(C=>N?N=N[C]:null);const n=N;if(!n||n[R.variant]!==1)return;const i=R.getBattleSpriteKey(e);dt.hasOwnProperty(i)||await nH(i,S,L)}r(Xm,"populateVariantColors");async function Qm(R,e,I,L,...N){console.warn(`Could not load ${e}!`,...N),I&&await nH(R,!1,L)}r(Qm,"fallbackVariantColor");async function nH(R,e,I){const L=`./images/pokemon/variant/${e?"exp/":""}${I}.json`;return T.cachedFetch(L).then(N=>N.ok?N.json():Qm(R,N.url,e,I,N.status,N.statusText)).catch(N=>Qm(R,L,e,I,N)).then(N=>{SA(N)||(dt[R]=N)})}r(nH,"populateVariantColorCache");const TT={[A.BULBASAUR]:{0:O.GRASSY_SURGE},[A.IVYSAUR]:{0:O.GRASSY_SURGE},[A.VENUSAUR]:{0:O.GRASSY_SURGE,1:O.SEED_SOWER,2:O.FLOWER_VEIL},[A.CHARMANDER]:{0:O.SHEER_FORCE},[A.CHARMELEON]:{0:O.BEAST_BOOST},[A.CHARIZARD]:{0:O.BEAST_BOOST,1:O.LEVITATE,2:O.TURBOBLAZE,3:O.UNNERVE},[A.SQUIRTLE]:{0:O.DAUNTLESS_SHIELD},[A.WARTORTLE]:{0:O.DAUNTLESS_SHIELD},[A.BLASTOISE]:{0:O.DAUNTLESS_SHIELD,1:O.BULLETPROOF,2:O.BULLETPROOF},[A.CATERPIE]:{0:O.GLUTTONY},[A.METAPOD]:{0:O.STURDY},[A.BUTTERFREE]:{0:O.MAGICIAN,1:O.MAGICIAN},[A.WEEDLE]:{0:O.POISON_TOUCH},[A.KAKUNA]:{0:O.STURDY},[A.BEEDRILL]:{0:O.ADAPTABILITY,1:O.TINTED_LENS},[A.PIDGEY]:{0:O.SHEER_FORCE},[A.PIDGEOTTO]:{0:O.SHEER_FORCE},[A.PIDGEOT]:{0:O.SHEER_FORCE,1:O.SHEER_FORCE},[A.RATTATA]:{0:O.STRONG_JAW},[A.RATICATE]:{0:O.STRONG_JAW},[A.SPEAROW]:{0:O.MOXIE},[A.FEAROW]:{0:O.MOXIE},[A.EKANS]:{0:O.REGENERATOR},[A.ARBOK]:{0:O.REGENERATOR},[A.SANDSHREW]:{0:O.TOUGH_CLAWS},[A.SANDSLASH]:{0:O.TOUGH_CLAWS},[A.NIDORAN_F]:{0:O.FLARE_BOOST},[A.NIDORINA]:{0:O.FLARE_BOOST},[A.NIDOQUEEN]:{0:O.FLARE_BOOST},[A.NIDORAN_M]:{0:O.GUTS},[A.NIDORINO]:{0:O.GUTS},[A.NIDOKING]:{0:O.GUTS},[A.VULPIX]:{0:O.FUR_COAT},[A.NINETALES]:{0:O.FUR_COAT},[A.ZUBAT]:{0:O.INTIMIDATE},[A.GOLBAT]:{0:O.INTIMIDATE},[A.CROBAT]:{0:O.INTIMIDATE},[A.ODDISH]:{0:O.TRIAGE},[A.GLOOM]:{0:O.TRIAGE},[A.VILEPLUME]:{0:O.TRIAGE},[A.BELLOSSOM]:{0:O.TRIAGE},[A.PARAS]:{0:O.TRIAGE},[A.PARASECT]:{0:O.TRIAGE},[A.VENONAT]:{0:O.FLUFFY},[A.VENOMOTH]:{0:O.SIMPLE},[A.DIGLETT]:{0:O.STURDY},[A.DUGTRIO]:{0:O.STURDY},[A.MEOWTH]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[A.PERSIAN]:{0:O.TOUGH_CLAWS},[A.PSYDUCK]:{0:O.SIMPLE},[A.GOLDUCK]:{0:O.SIMPLE},[A.MANKEY]:{0:O.IRON_FIST},[A.PRIMEAPE]:{0:O.IRON_FIST},[A.ANNIHILAPE]:{0:O.IRON_FIST},[A.GROWLITHE]:{0:O.FLUFFY},[A.ARCANINE]:{0:O.FLUFFY},[A.POLIWAG]:{0:O.NO_GUARD},[A.POLIWHIRL]:{0:O.NO_GUARD},[A.POLIWRATH]:{0:O.NO_GUARD},[A.POLITOED]:{0:O.NO_GUARD},[A.ABRA]:{0:O.COMATOSE},[A.KADABRA]:{0:O.MAGICIAN},[A.ALAKAZAM]:{0:O.MAGICIAN,1:O.MAGICIAN},[A.MACHOP]:{0:O.QUICK_FEET},[A.MACHOKE]:{0:O.QUICK_FEET},[A.MACHAMP]:{0:O.QUICK_FEET,1:O.QUICK_FEET},[A.BELLSPROUT]:{0:O.FLOWER_GIFT},[A.WEEPINBELL]:{0:O.FLOWER_GIFT},[A.VICTREEBEL]:{0:O.FLOWER_GIFT},[A.TENTACOOL]:{0:O.TOXIC_CHAIN},[A.TENTACRUEL]:{0:O.TOXIC_CHAIN},[A.GEODUDE]:{0:O.DRY_SKIN},[A.GRAVELER]:{0:O.DRY_SKIN},[A.GOLEM]:{0:O.DRY_SKIN},[A.PONYTA]:{0:O.MAGIC_GUARD},[A.RAPIDASH]:{0:O.MAGIC_GUARD},[A.SLOWPOKE]:{0:O.UNAWARE},[A.SLOWBRO]:{0:O.UNAWARE,1:O.REGENERATOR},[A.SLOWKING]:{0:O.UNAWARE},[A.MAGNEMITE]:{0:O.LEVITATE},[A.MAGNETON]:{0:O.LEVITATE},[A.MAGNEZONE]:{0:O.LEVITATE},[A.FARFETCHD]:{0:O.SNIPER},[A.DODUO]:{0:O.PARENTAL_BOND},[A.DODRIO]:{0:O.PARENTAL_BOND},[A.SEEL]:{0:O.WATER_BUBBLE},[A.DEWGONG]:{0:O.WATER_BUBBLE},[A.GRIMER]:{0:O.WATER_ABSORB},[A.MUK]:{0:O.WATER_ABSORB},[A.SHELLDER]:{0:O.STURDY},[A.CLOYSTER]:{0:O.ICE_SCALES},[A.GASTLY]:{0:O.SHADOW_SHIELD},[A.HAUNTER]:{0:O.SHADOW_SHIELD},[A.GENGAR]:{0:O.SHADOW_SHIELD,1:O.UNNERVE,2:O.GLUTTONY},[A.ONIX]:{0:O.ROCKY_PAYLOAD},[A.STEELIX]:{0:O.ROCKY_PAYLOAD,1:O.SAND_SPIT},[A.DROWZEE]:{0:O.MAGICIAN},[A.HYPNO]:{0:O.MAGICIAN},[A.KRABBY]:{0:O.UNBURDEN},[A.KINGLER]:{0:O.UNBURDEN,1:O.UNBURDEN},[A.VOLTORB]:{0:O.TRANSISTOR},[A.ELECTRODE]:{0:O.TRANSISTOR},[A.EXEGGCUTE]:{0:O.RIPEN},[A.EXEGGUTOR]:{0:O.RIPEN},[A.ALOLA_EXEGGUTOR]:{0:O.UNBURDEN},[A.CUBONE]:{0:O.PARENTAL_BOND},[A.MAROWAK]:{0:O.PARENTAL_BOND},[A.ALOLA_MAROWAK]:{0:O.PARENTAL_BOND},[A.LICKITUNG]:{0:O.CHEEK_POUCH},[A.LICKILICKY]:{0:O.CHEEK_POUCH},[A.KOFFING]:{0:O.WHITE_SMOKE},[A.WEEZING]:{0:O.PARENTAL_BOND},[A.GALAR_WEEZING]:{0:O.PARENTAL_BOND},[A.RHYHORN]:{0:O.SOLID_ROCK},[A.RHYDON]:{0:O.SOLID_ROCK},[A.RHYPERIOR]:{0:O.FILTER},[A.TANGELA]:{0:O.SEED_SOWER},[A.TANGROWTH]:{0:O.SEED_SOWER},[A.KANGASKHAN]:{0:O.TECHNICIAN,1:O.TECHNICIAN},[A.HORSEA]:{0:O.DRAGONS_MAW},[A.SEADRA]:{0:O.DRAGONS_MAW},[A.KINGDRA]:{0:O.MULTISCALE},[A.GOLDEEN]:{0:O.MULTISCALE},[A.SEAKING]:{0:O.MULTISCALE},[A.STARYU]:{0:O.REGENERATOR},[A.STARMIE]:{0:O.REGENERATOR},[A.SCYTHER]:{0:O.TINTED_LENS},[A.SCIZOR]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[A.KLEAVOR]:{0:O.WEAK_ARMOR},[A.PINSIR]:{0:O.TINTED_LENS,1:O.MOLD_BREAKER},[A.TAUROS]:{0:O.STAMINA},[A.MAGIKARP]:{0:O.MULTISCALE},[A.GYARADOS]:{0:O.MULTISCALE,1:O.MULTISCALE},[A.LAPRAS]:{0:O.FILTER,1:O.FILTER},[A.DITTO]:{0:O.ADAPTABILITY},[A.EEVEE]:{0:O.PICKUP,1:O.PICKUP,2:O.FLUFFY},[A.VAPOREON]:{0:O.REGENERATOR},[A.JOLTEON]:{0:O.TRANSISTOR},[A.FLAREON]:{0:O.FUR_COAT},[A.ESPEON]:{0:O.MAGICIAN},[A.UMBREON]:{0:O.TOXIC_CHAIN},[A.LEAFEON]:{0:O.GRASSY_SURGE},[A.GLACEON]:{0:O.SNOW_WARNING},[A.SYLVEON]:{0:O.COMPETITIVE},[A.PORYGON]:{0:O.TRANSISTOR},[A.PORYGON2]:{0:O.TRANSISTOR},[A.PORYGON_Z]:{0:O.PROTEAN},[A.OMANYTE]:{0:O.STURDY},[A.OMASTAR]:{0:O.STURDY},[A.KABUTO]:{0:O.TOUGH_CLAWS},[A.KABUTOPS]:{0:O.TOUGH_CLAWS},[A.AERODACTYL]:{0:O.INTIMIDATE,1:O.ROCKY_PAYLOAD},[A.ARTICUNO]:{0:O.SNOW_WARNING},[A.ZAPDOS]:{0:O.DRIZZLE},[A.MOLTRES]:{0:O.DROUGHT},[A.DRATINI]:{0:O.MULTISCALE},[A.DRAGONAIR]:{0:O.MULTISCALE},[A.DRAGONITE]:{0:O.AERILATE},[A.MEWTWO]:{0:O.NEUROFORCE,1:O.NEUROFORCE,2:O.NEUROFORCE},[A.MEW]:{0:O.PROTEAN},[A.CHIKORITA]:{0:O.CUTE_CHARM},[A.BAYLEEF]:{0:O.THICK_FAT},[A.MEGANIUM]:{0:O.THICK_FAT},[A.CYNDAQUIL]:{0:O.WHITE_SMOKE},[A.QUILAVA]:{0:O.DROUGHT},[A.TYPHLOSION]:{0:O.DROUGHT},[A.HISUI_TYPHLOSION]:{0:O.DROUGHT},[A.TOTODILE]:{0:O.TOUGH_CLAWS},[A.CROCONAW]:{0:O.TOUGH_CLAWS},[A.FERALIGATR]:{0:O.TOUGH_CLAWS},[A.SENTRET]:{0:O.PICKUP},[A.FURRET]:{0:O.PICKUP},[A.HOOTHOOT]:{0:O.AERILATE},[A.NOCTOWL]:{0:O.AERILATE},[A.LEDYBA]:{0:O.PRANKSTER},[A.LEDIAN]:{0:O.PRANKSTER},[A.SPINARAK]:{0:O.PRANKSTER},[A.ARIADOS]:{0:O.PRANKSTER},[A.CHINCHOU]:{0:O.REGENERATOR},[A.LANTURN]:{0:O.REGENERATOR},[A.PICHU]:{0:O.ELECTRIC_SURGE,1:O.STURDY},[A.PIKACHU]:{0:O.ELECTRIC_SURGE,1:O.STURDY,2:O.COSTAR,3:O.IRON_FIST,4:O.QUEENLY_MAJESTY,5:O.MISTY_SURGE,6:O.TINTED_LENS,7:O.LIBERO,8:O.THICK_FAT},[A.RAICHU]:{0:O.ELECTRIC_SURGE},[A.ALOLA_RAICHU]:{0:O.ELECTRIC_SURGE},[A.CLEFFA]:{0:O.PRANKSTER},[A.CLEFAIRY]:{0:O.PRANKSTER},[A.CLEFABLE]:{0:O.ANALYTIC},[A.IGGLYBUFF]:{0:O.HUGE_POWER},[A.JIGGLYPUFF]:{0:O.HUGE_POWER},[A.WIGGLYTUFF]:{0:O.HUGE_POWER},[A.TOGEPI]:{0:O.PIXILATE},[A.TOGETIC]:{0:O.PIXILATE},[A.TOGEKISS]:{0:O.PIXILATE},[A.NATU]:{0:O.TINTED_LENS},[A.XATU]:{0:O.SHEER_FORCE},[A.MAREEP]:{0:O.ELECTROMORPHOSIS},[A.FLAAFFY]:{0:O.ELECTROMORPHOSIS},[A.AMPHAROS]:{0:O.ELECTROMORPHOSIS,1:O.ELECTROMORPHOSIS},[A.HOPPIP]:{0:O.WIND_RIDER},[A.SKIPLOOM]:{0:O.WIND_RIDER},[A.JUMPLUFF]:{0:O.FLUFFY},[A.AIPOM]:{0:O.SCRAPPY},[A.AMBIPOM]:{0:O.SCRAPPY},[A.SUNKERN]:{0:O.DROUGHT},[A.SUNFLORA]:{0:O.DROUGHT},[A.YANMA]:{0:O.TECHNICIAN},[A.YANMEGA]:{0:O.SHEER_FORCE},[A.WOOPER]:{0:O.WATER_VEIL},[A.QUAGSIRE]:{0:O.COMATOSE},[A.MURKROW]:{0:O.DARK_AURA},[A.HONCHKROW]:{0:O.DARK_AURA},[A.MISDREAVUS]:{0:O.BEADS_OF_RUIN},[A.MISMAGIUS]:{0:O.BEADS_OF_RUIN},[A.UNOWN]:{0:O.ADAPTABILITY,1:O.BEAST_BOOST,2:O.CONTRARY,3:O.DAZZLING,4:O.EMERGENCY_EXIT,5:O.FRIEND_GUARD,6:O.GOOD_AS_GOLD,7:O.HONEY_GATHER,8:O.IMPOSTER,9:O.JUSTIFIED,10:O.KLUTZ,11:O.LIBERO,12:O.MOODY,13:O.NEUTRALIZING_GAS,14:O.OPPORTUNIST,15:O.PICKUP,16:O.QUICK_DRAW,17:O.RUN_AWAY,18:O.SIMPLE,19:O.TRACE,20:O.UNNERVE,21:O.VICTORY_STAR,22:O.WANDERING_SPIRIT,23:O.FAIRY_AURA,24:O.DARK_AURA,25:O.AURA_BREAK,26:O.PURE_POWER,27:O.UNAWARE},[A.GIRAFARIG]:{0:O.PARENTAL_BOND},[A.FARIGIRAF]:{0:O.PARENTAL_BOND},[A.PINECO]:{0:O.ROUGH_SKIN},[A.FORRETRESS]:{0:O.IRON_BARBS},[A.DUNSPARCE]:{0:O.UNAWARE},[A.DUDUNSPARCE]:{0:O.UNAWARE,1:O.UNAWARE},[A.GLIGAR]:{0:O.POISON_TOUCH},[A.GLISCOR]:{0:O.TOXIC_BOOST},[A.SNUBBULL]:{0:O.PIXILATE},[A.GRANBULL]:{0:O.PIXILATE},[A.QWILFISH]:{0:O.TOXIC_DEBRIS},[A.SHUCKLE]:{0:O.HARVEST},[A.HERACROSS]:{0:O.TECHNICIAN,1:O.TECHNICIAN},[A.SNEASEL]:{0:O.TOUGH_CLAWS},[A.WEAVILE]:{0:O.TOUGH_CLAWS},[A.TEDDIURSA]:{0:O.RUN_AWAY},[A.URSARING]:{0:O.THICK_FAT},[A.URSALUNA]:{0:O.THICK_FAT},[A.SLUGMA]:{0:O.DROUGHT},[A.MAGCARGO]:{0:O.DESOLATE_LAND},[A.SWINUB]:{0:O.UNAWARE},[A.PILOSWINE]:{0:O.UNAWARE},[A.MAMOSWINE]:{0:O.SLUSH_RUSH},[A.CORSOLA]:{0:O.STORM_DRAIN},[A.REMORAID]:{0:O.SIMPLE},[A.OCTILLERY]:{0:O.SIMPLE},[A.DELIBIRD]:{0:O.HUGE_POWER},[A.SKARMORY]:{0:O.LIGHTNING_ROD},[A.HOUNDOUR]:{0:O.BALL_FETCH},[A.HOUNDOOM]:{0:O.LIGHTNING_ROD,1:O.LIGHTNING_ROD},[A.PHANPY]:{0:O.STURDY},[A.DONPHAN]:{0:O.SPEED_BOOST},[A.STANTLER]:{0:O.SPEED_BOOST},[A.WYRDEER]:{0:O.SPEED_BOOST},[A.SMEARGLE]:{0:O.PRANKSTER},[A.TYROGUE]:{0:O.DEFIANT},[A.HITMONLEE]:{0:O.SHEER_FORCE},[A.HITMONCHAN]:{0:O.MOXIE},[A.HITMONTOP]:{0:O.SPEED_BOOST},[A.SMOOCHUM]:{0:O.PSYCHIC_SURGE},[A.JYNX]:{0:O.PSYCHIC_SURGE},[A.ELEKID]:{0:O.SHEER_FORCE},[A.ELECTABUZZ]:{0:O.SHEER_FORCE},[A.ELECTIVIRE]:{0:O.SHEER_FORCE},[A.MAGBY]:{0:O.SHEER_FORCE},[A.MAGMAR]:{0:O.SHEER_FORCE},[A.MAGMORTAR]:{0:O.SHEER_FORCE},[A.MILTANK]:{0:O.STAMINA},[A.RAIKOU]:{0:O.BEAST_BOOST},[A.ENTEI]:{0:O.BEAST_BOOST},[A.SUICUNE]:{0:O.BEAST_BOOST},[A.LARVITAR]:{0:O.SOLID_ROCK},[A.PUPITAR]:{0:O.SOLID_ROCK},[A.TYRANITAR]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[A.LUGIA]:{0:O.DELTA_STREAM},[A.HO_OH]:{0:O.MAGIC_GUARD},[A.CELEBI]:{0:O.PSYCHIC_SURGE},[A.TREECKO]:{0:O.TINTED_LENS},[A.GROVYLE]:{0:O.TINTED_LENS},[A.SCEPTILE]:{0:O.TINTED_LENS,1:O.TINTED_LENS},[A.TORCHIC]:{0:O.DEFIANT},[A.COMBUSKEN]:{0:O.DEFIANT},[A.BLAZIKEN]:{0:O.DEFIANT,1:O.DEFIANT},[A.MUDKIP]:{0:O.REGENERATOR},[A.MARSHTOMP]:{0:O.REGENERATOR},[A.SWAMPERT]:{0:O.REGENERATOR,1:O.DRIZZLE},[A.POOCHYENA]:{0:O.TOUGH_CLAWS},[A.MIGHTYENA]:{0:O.TOUGH_CLAWS},[A.ZIGZAGOON]:{0:O.RUN_AWAY},[A.LINOONE]:{0:O.RUN_AWAY},[A.WURMPLE]:{0:O.GLUTTONY},[A.SILCOON]:{0:O.STURDY},[A.BEAUTIFLY]:{0:O.SIMPLE},[A.CASCOON]:{0:O.STURDY},[A.DUSTOX]:{0:O.SIMPLE},[A.LOTAD]:{0:O.DRIZZLE},[A.LOMBRE]:{0:O.DRIZZLE},[A.LUDICOLO]:{0:O.DRIZZLE},[A.SEEDOT]:{0:O.STURDY},[A.NUZLEAF]:{0:O.SHARPNESS},[A.SHIFTRY]:{0:O.SHARPNESS},[A.TAILLOW]:{0:O.AERILATE},[A.SWELLOW]:{0:O.AERILATE},[A.WINGULL]:{0:O.WATER_ABSORB},[A.PELIPPER]:{0:O.SWIFT_SWIM},[A.RALTS]:{0:O.NEUROFORCE},[A.KIRLIA]:{0:O.NEUROFORCE},[A.GARDEVOIR]:{0:O.NEUROFORCE,1:O.PSYCHIC_SURGE},[A.GALLADE]:{0:O.NEUROFORCE,1:O.SHARPNESS},[A.SURSKIT]:{0:O.WATER_BUBBLE},[A.MASQUERAIN]:{0:O.WATER_BUBBLE},[A.SHROOMISH]:{0:O.GUTS},[A.BRELOOM]:{0:O.GUTS},[A.SLAKOTH]:{0:O.GUTS},[A.VIGOROTH]:{0:O.GUTS},[A.SLAKING]:{0:O.GUTS},[A.NINCADA]:{0:O.TECHNICIAN},[A.NINJASK]:{0:O.TECHNICIAN},[A.SHEDINJA]:{0:O.MAGIC_GUARD},[A.WHISMUR]:{0:O.PUNK_ROCK},[A.LOUDRED]:{0:O.PUNK_ROCK},[A.EXPLOUD]:{0:O.PUNK_ROCK},[A.MAKUHITA]:{0:O.STAMINA},[A.HARIYAMA]:{0:O.STAMINA},[A.AZURILL]:{0:O.MISTY_SURGE},[A.MARILL]:{0:O.MISTY_SURGE},[A.AZUMARILL]:{0:O.MISTY_SURGE},[A.NOSEPASS]:{0:O.SOLID_ROCK},[A.PROBOPASS]:{0:O.LEVITATE},[A.SKITTY]:{0:O.SCRAPPY},[A.DELCATTY]:{0:O.SCRAPPY},[A.SABLEYE]:{0:O.UNNERVE,1:O.UNNERVE},[A.MAWILE]:{0:O.ADAPTABILITY,1:O.INTIMIDATE},[A.ARON]:{0:O.EARTH_EATER},[A.LAIRON]:{0:O.EARTH_EATER},[A.AGGRON]:{0:O.EARTH_EATER,1:O.ROCKY_PAYLOAD},[A.MEDITITE]:{0:O.MINDS_EYE},[A.MEDICHAM]:{0:O.MINDS_EYE,1:O.MINDS_EYE},[A.ELECTRIKE]:{0:O.BALL_FETCH},[A.MANECTRIC]:{0:O.FLASH_FIRE,1:O.FLASH_FIRE},[A.PLUSLE]:{0:O.POWER_SPOT},[A.MINUN]:{0:O.POWER_SPOT},[A.VOLBEAT]:{0:O.HONEY_GATHER},[A.ILLUMISE]:{0:O.HONEY_GATHER},[A.GULPIN]:{0:O.EARTH_EATER},[A.SWALOT]:{0:O.EARTH_EATER},[A.CARVANHA]:{0:O.SHEER_FORCE},[A.SHARPEDO]:{0:O.SHEER_FORCE,1:O.SPEED_BOOST},[A.WAILMER]:{0:O.LEVITATE},[A.WAILORD]:{0:O.LEVITATE},[A.NUMEL]:{0:O.SOLID_ROCK},[A.CAMERUPT]:{0:O.FUR_COAT,1:O.STAMINA},[A.TORKOAL]:{0:O.ANALYTIC},[A.SPOINK]:{0:O.PSYCHIC_SURGE},[A.GRUMPIG]:{0:O.PSYCHIC_SURGE},[A.SPINDA]:{0:O.SIMPLE},[A.TRAPINCH]:{0:O.ADAPTABILITY},[A.VIBRAVA]:{0:O.ADAPTABILITY},[A.FLYGON]:{0:O.ADAPTABILITY},[A.CACNEA]:{0:O.SAND_RUSH},[A.CACTURNE]:{0:O.SAND_RUSH},[A.SWABLU]:{0:O.FLUFFY},[A.ALTARIA]:{0:O.FLUFFY,1:O.FLUFFY},[A.ZANGOOSE]:{0:O.POISON_HEAL},[A.SEVIPER]:{0:O.MULTISCALE},[A.LUNATONE]:{0:O.SHADOW_SHIELD},[A.SOLROCK]:{0:O.DROUGHT},[A.BARBOACH]:{0:O.SIMPLE},[A.WHISCASH]:{0:O.SIMPLE},[A.CORPHISH]:{0:O.TOUGH_CLAWS},[A.CRAWDAUNT]:{0:O.TOUGH_CLAWS},[A.BALTOY]:{0:O.WELL_BAKED_BODY},[A.CLAYDOL]:{0:O.WELL_BAKED_BODY},[A.LILEEP]:{0:O.SEED_SOWER},[A.CRADILY]:{0:O.SEED_SOWER},[A.ANORITH]:{0:O.WATER_ABSORB},[A.ARMALDO]:{0:O.WATER_ABSORB},[A.FEEBAS]:{0:O.MULTISCALE},[A.MILOTIC]:{0:O.MAGIC_GUARD},[A.CASTFORM]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY},[A.KECLEON]:{0:O.ADAPTABILITY},[A.SHUPPET]:{0:O.SHADOW_SHIELD},[A.BANETTE]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[A.DUSKULL]:{0:O.UNNERVE},[A.DUSCLOPS]:{0:O.UNNERVE},[A.DUSKNOIR]:{0:O.UNNERVE},[A.TROPIUS]:{0:O.RIPEN},[A.ABSOL]:{0:O.SHARPNESS,1:O.SHARPNESS},[A.WYNAUT]:{0:O.STURDY},[A.WOBBUFFET]:{0:O.STURDY},[A.SNORUNT]:{0:O.SNOW_WARNING},[A.GLALIE]:{0:O.SNOW_WARNING,1:O.SNOW_WARNING},[A.FROSLASS]:{0:O.SNOW_WARNING},[A.SPHEAL]:{0:O.UNAWARE},[A.SEALEO]:{0:O.UNAWARE},[A.WALREIN]:{0:O.UNAWARE},[A.CLAMPERL]:{0:O.DAUNTLESS_SHIELD},[A.GOREBYSS]:{0:O.ARENA_TRAP},[A.HUNTAIL]:{0:O.ARENA_TRAP},[A.RELICANTH]:{0:O.PRIMORDIAL_SEA},[A.LUVDISC]:{0:O.MULTISCALE},[A.BAGON]:{0:O.INTIMIDATE},[A.SHELGON]:{0:O.ANGER_SHELL},[A.SALAMENCE]:{0:O.GALE_WINGS,1:O.ROCK_HEAD},[A.BELDUM]:{0:O.LEVITATE},[A.METANG]:{0:O.LEVITATE},[A.METAGROSS]:{0:O.LEVITATE,1:O.FULL_METAL_BODY},[A.REGIROCK]:{0:O.SAND_STREAM},[A.REGICE]:{0:O.SNOW_WARNING},[A.REGISTEEL]:{0:O.STEELY_SPIRIT},[A.LATIAS]:{0:O.SPEED_BOOST,1:O.PRISM_ARMOR},[A.LATIOS]:{0:O.SPEED_BOOST,1:O.TINTED_LENS},[A.KYOGRE]:{0:O.MOLD_BREAKER,1:O.TERAVOLT},[A.GROUDON]:{0:O.MOLD_BREAKER,1:O.TURBOBLAZE},[A.RAYQUAZA]:{0:O.UNNERVE,1:O.UNNERVE},[A.JIRACHI]:{0:O.COMATOSE},[A.DEOXYS]:{0:O.PROTEAN,1:O.ADAPTABILITY,2:O.REGENERATOR,3:O.SHADOW_SHIELD},[A.TURTWIG]:{0:O.SOLID_ROCK},[A.GROTLE]:{0:O.SOLID_ROCK},[A.TORTERRA]:{0:O.THICK_FAT},[A.CHIMCHAR]:{0:O.UNNERVE},[A.MONFERNO]:{0:O.BEAST_BOOST},[A.INFERNAPE]:{0:O.BEAST_BOOST},[A.PIPLUP]:{0:O.CUTE_CHARM},[A.PRINPLUP]:{0:O.DRIZZLE},[A.EMPOLEON]:{0:O.DRIZZLE},[A.STARLY]:{0:O.INTIMIDATE},[A.STARAVIA]:{0:O.ROCK_HEAD},[A.STARAPTOR]:{0:O.ROCK_HEAD},[A.BIDOOF]:{0:O.SAP_SIPPER},[A.BIBAREL]:{0:O.SAP_SIPPER},[A.KRICKETOT]:{0:O.HONEY_GATHER},[A.KRICKETUNE]:{0:O.SHARPNESS},[A.SHINX]:{0:O.SPEED_BOOST},[A.LUXIO]:{0:O.SPEED_BOOST},[A.LUXRAY]:{0:O.SPEED_BOOST},[A.BUDEW]:{0:O.SEED_SOWER},[A.ROSELIA]:{0:O.GRASSY_SURGE},[A.ROSERADE]:{0:O.GRASSY_SURGE},[A.CRANIDOS]:{0:O.ROCK_HEAD},[A.RAMPARDOS]:{0:O.ROCK_HEAD},[A.SHIELDON]:{0:O.EARTH_EATER},[A.BASTIODON]:{0:O.EARTH_EATER},[A.BURMY]:{0:O.STURDY,1:O.STURDY,2:O.STURDY},[A.WORMADAM]:{0:O.STURDY,1:O.STURDY,2:O.STURDY},[A.MOTHIM]:{0:O.SPEED_BOOST},[A.COMBEE]:{0:O.RUN_AWAY},[A.VESPIQUEN]:{0:O.INTIMIDATE},[A.PACHIRISU]:{0:O.HONEY_GATHER},[A.BUIZEL]:{0:O.MOXIE},[A.FLOATZEL]:{0:O.MOXIE},[A.CHERUBI]:{0:O.DROUGHT},[A.CHERRIM]:{0:O.ORICHALCUM_PULSE,1:O.ORICHALCUM_PULSE},[A.SHELLOS]:{0:O.REGENERATOR,1:O.REGENERATOR},[A.GASTRODON]:{0:O.REGENERATOR,1:O.REGENERATOR},[A.DRIFLOON]:{0:O.MAGIC_GUARD},[A.DRIFBLIM]:{0:O.MAGIC_GUARD},[A.BUNEARY]:{0:O.ADAPTABILITY},[A.LOPUNNY]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY},[A.GLAMEOW]:{0:O.INTIMIDATE},[A.PURUGLY]:{0:O.INTIMIDATE},[A.CHINGLING]:{0:O.PUNK_ROCK},[A.CHIMECHO]:{0:O.PUNK_ROCK},[A.STUNKY]:{0:O.NEUTRALIZING_GAS},[A.SKUNTANK]:{0:O.NEUTRALIZING_GAS},[A.BRONZOR]:{0:O.MIRROR_ARMOR},[A.BRONZONG]:{0:O.MIRROR_ARMOR},[A.BONSLY]:{0:O.SAP_SIPPER},[A.SUDOWOODO]:{0:O.SAP_SIPPER},[A.MIME_JR]:{0:O.PRANKSTER},[A.MR_MIME]:{0:O.PRANKSTER},[A.GALAR_MR_MIME]:{0:O.PRANKSTER},[A.MR_RIME]:{0:O.PRANKSTER},[A.HAPPINY]:{0:O.HOSPITALITY},[A.CHANSEY]:{0:O.FRIEND_GUARD},[A.BLISSEY]:{0:O.FUR_COAT},[A.CHATOT]:{0:O.PUNK_ROCK},[A.SPIRITOMB]:{0:O.VESSEL_OF_RUIN},[A.GIBLE]:{0:O.ARENA_TRAP},[A.GABITE]:{0:O.ARENA_TRAP},[A.GARCHOMP]:{0:O.ARENA_TRAP,1:O.SAND_RUSH},[A.MUNCHLAX]:{0:O.CHEEK_POUCH},[A.SNORLAX]:{0:O.CHEEK_POUCH,1:O.RIPEN},[A.RIOLU]:{0:O.MINDS_EYE},[A.LUCARIO]:{0:O.MINDS_EYE,1:O.MINDS_EYE},[A.HIPPOPOTAS]:{0:O.UNAWARE},[A.HIPPOWDON]:{0:O.UNAWARE},[A.SKORUPI]:{0:O.SUPER_LUCK},[A.DRAPION]:{0:O.SUPER_LUCK},[A.CROAGUNK]:{0:O.MOXIE},[A.TOXICROAK]:{0:O.MOXIE},[A.CARNIVINE]:{0:O.ARENA_TRAP},[A.FINNEON]:{0:O.WATER_BUBBLE},[A.LUMINEON]:{0:O.WATER_BUBBLE},[A.MANTYKE]:{0:O.UNAWARE},[A.MANTINE]:{0:O.UNAWARE},[A.SNOVER]:{0:O.SLUSH_RUSH},[A.ABOMASNOW]:{0:O.SLUSH_RUSH,1:O.SEED_SOWER},[A.ROTOM]:{0:O.HADRON_ENGINE,1:O.HADRON_ENGINE,2:O.HADRON_ENGINE,3:O.HADRON_ENGINE,4:O.HADRON_ENGINE,5:O.HADRON_ENGINE},[A.UXIE]:{0:O.ILLUSION},[A.MESPRIT]:{0:O.MOODY},[A.AZELF]:{0:O.NEUROFORCE},[A.DIALGA]:{0:O.BERSERK,1:O.BERSERK},[A.PALKIA]:{0:O.BERSERK,1:O.BERSERK},[A.HEATRAN]:{0:O.EARTH_EATER},[A.REGIGIGAS]:{0:O.SCRAPPY},[A.GIRATINA]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[A.CRESSELIA]:{0:O.SHADOW_SHIELD},[A.PHIONE]:{0:O.SIMPLE},[A.MANAPHY]:{0:O.PRIMORDIAL_SEA},[A.DARKRAI]:{0:O.UNNERVE},[A.SHAYMIN]:{0:O.GRASSY_SURGE,1:O.DELTA_STREAM},[A.ARCEUS]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY,4:O.ADAPTABILITY,5:O.ADAPTABILITY,6:O.ADAPTABILITY,7:O.ADAPTABILITY,8:O.ADAPTABILITY,9:O.ADAPTABILITY,10:O.ADAPTABILITY,11:O.ADAPTABILITY,12:O.ADAPTABILITY,13:O.ADAPTABILITY,14:O.ADAPTABILITY,15:O.ADAPTABILITY,16:O.ADAPTABILITY,17:O.ADAPTABILITY},[A.VICTINI]:{0:O.SHEER_FORCE},[A.SNIVY]:{0:O.MULTISCALE},[A.SERVINE]:{0:O.MULTISCALE},[A.SERPERIOR]:{0:O.MULTISCALE},[A.TEPIG]:{0:O.GLUTTONY},[A.PIGNITE]:{0:O.ROCK_HEAD},[A.EMBOAR]:{0:O.ROCK_HEAD},[A.OSHAWOTT]:{0:O.MOLD_BREAKER},[A.DEWOTT]:{0:O.MOLD_BREAKER},[A.SAMUROTT]:{0:O.LIGHTNING_ROD},[A.HISUI_SAMUROTT]:{0:O.MOLD_BREAKER},[A.PATRAT]:{0:O.NO_GUARD},[A.WATCHOG]:{0:O.NO_GUARD},[A.LILLIPUP]:{0:O.BALL_FETCH},[A.HERDIER]:{0:O.FUR_COAT},[A.STOUTLAND]:{0:O.FUR_COAT},[A.PURRLOIN]:{0:O.PICKUP},[A.LIEPARD]:{0:O.PICKUP},[A.PANSAGE]:{0:O.WELL_BAKED_BODY},[A.SIMISAGE]:{0:O.WELL_BAKED_BODY},[A.PANSEAR]:{0:O.WATER_ABSORB},[A.SIMISEAR]:{0:O.WATER_ABSORB},[A.PANPOUR]:{0:O.SAP_SIPPER},[A.SIMIPOUR]:{0:O.SAP_SIPPER},[A.MUNNA]:{0:O.NEUTRALIZING_GAS},[A.MUSHARNA]:{0:O.NEUTRALIZING_GAS},[A.PIDOVE]:{0:O.SNIPER},[A.TRANQUILL]:{0:O.SNIPER},[A.UNFEZANT]:{0:O.SNIPER},[A.BLITZLE]:{0:O.ELECTRIC_SURGE},[A.ZEBSTRIKA]:{0:O.ELECTRIC_SURGE},[A.ROGGENROLA]:{0:O.SOLID_ROCK},[A.BOLDORE]:{0:O.SOLID_ROCK},[A.GIGALITH]:{0:O.SOLID_ROCK},[A.WOOBAT]:{0:O.OPPORTUNIST},[A.SWOOBAT]:{0:O.OPPORTUNIST},[A.DRILBUR]:{0:O.STURDY},[A.EXCADRILL]:{0:O.STURDY},[A.AUDINO]:{0:O.FRIEND_GUARD,1:O.FAIRY_AURA},[A.TIMBURR]:{0:O.ROCKY_PAYLOAD},[A.GURDURR]:{0:O.ROCKY_PAYLOAD},[A.CONKELDURR]:{0:O.ROCKY_PAYLOAD},[A.TYMPOLE]:{0:O.POISON_HEAL},[A.PALPITOAD]:{0:O.POISON_HEAL},[A.SEISMITOAD]:{0:O.POISON_HEAL},[A.THROH]:{0:O.STAMINA},[A.SAWK]:{0:O.SCRAPPY},[A.SEWADDLE]:{0:O.SHIELD_DUST},[A.SWADLOON]:{0:O.SHIELD_DUST},[A.LEAVANNY]:{0:O.SHARPNESS},[A.VENIPEDE]:{0:O.STAMINA},[A.WHIRLIPEDE]:{0:O.STAMINA},[A.SCOLIPEDE]:{0:O.STAMINA},[A.COTTONEE]:{0:O.FLUFFY},[A.WHIMSICOTT]:{0:O.FLUFFY},[A.PETILIL]:{0:O.FLOWER_VEIL},[A.LILLIGANT]:{0:O.GRASSY_SURGE},[A.HISUI_LILLIGANT]:{0:O.FLOWER_VEIL},[A.BASCULIN]:{0:O.ROCK_HEAD,1:O.RECKLESS,2:O.SUPREME_OVERLORD},[A.BASCULEGION]:{0:O.SUPREME_OVERLORD,1:O.SUPREME_OVERLORD},[A.SANDILE]:{0:O.TOUGH_CLAWS},[A.KROKOROK]:{0:O.TOUGH_CLAWS},[A.KROOKODILE]:{0:O.TOUGH_CLAWS},[A.DARUMAKA]:{0:O.GORILLA_TACTICS},[A.DARMANITAN]:{0:O.GORILLA_TACTICS,1:O.SOLID_ROCK},[A.MARACTUS]:{0:O.WELL_BAKED_BODY},[A.DWEBBLE]:{0:O.ROCKY_PAYLOAD},[A.CRUSTLE]:{0:O.ROCKY_PAYLOAD},[A.SCRAGGY]:{0:O.PROTEAN},[A.SCRAFTY]:{0:O.PROTEAN},[A.SIGILYPH]:{0:O.FLARE_BOOST},[A.YAMASK]:{0:O.PURIFYING_SALT},[A.COFAGRIGUS]:{0:O.PURIFYING_SALT},[A.TIRTOUGA]:{0:O.WATER_ABSORB},[A.CARRACOSTA]:{0:O.WATER_ABSORB},[A.ARCHEN]:{0:O.MULTISCALE},[A.ARCHEOPS]:{0:O.MULTISCALE},[A.TRUBBISH]:{0:O.NEUTRALIZING_GAS},[A.GARBODOR]:{0:O.NEUTRALIZING_GAS,1:O.NEUTRALIZING_GAS},[A.ZORUA]:{0:O.ADAPTABILITY},[A.ZOROARK]:{0:O.ADAPTABILITY},[A.MINCCINO]:{0:O.FUR_COAT},[A.CINCCINO]:{0:O.FUR_COAT},[A.GOTHITA]:{0:O.UNNERVE},[A.GOTHORITA]:{0:O.UNNERVE},[A.GOTHITELLE]:{0:O.UNNERVE},[A.SOLOSIS]:{0:O.PSYCHIC_SURGE},[A.DUOSION]:{0:O.PSYCHIC_SURGE},[A.REUNICLUS]:{0:O.PSYCHIC_SURGE},[A.DUCKLETT]:{0:O.DRIZZLE},[A.SWANNA]:{0:O.DRIZZLE},[A.VANILLITE]:{0:O.REFRIGERATE},[A.VANILLISH]:{0:O.REFRIGERATE},[A.VANILLUXE]:{0:O.SLUSH_RUSH},[A.DEERLING]:{0:O.FLOWER_VEIL,1:O.CUD_CHEW,2:O.HARVEST,3:O.FUR_COAT},[A.SAWSBUCK]:{0:O.FLOWER_VEIL,1:O.CUD_CHEW,2:O.HARVEST,3:O.FUR_COAT},[A.EMOLGA]:{0:O.SERENE_GRACE},[A.KARRABLAST]:{0:O.QUICK_DRAW},[A.ESCAVALIER]:{0:O.QUICK_DRAW},[A.FOONGUS]:{0:O.MYCELIUM_MIGHT},[A.AMOONGUSS]:{0:O.THICK_FAT},[A.FRILLISH]:{0:O.POISON_HEAL},[A.JELLICENT]:{0:O.POISON_HEAL},[A.ALOMOMOLA]:{0:O.MULTISCALE},[A.JOLTIK]:{0:O.TRANSISTOR},[A.GALVANTULA]:{0:O.TRANSISTOR},[A.FERROSEED]:{0:O.ROUGH_SKIN},[A.FERROTHORN]:{0:O.ROUGH_SKIN},[A.KLINK]:{0:O.STEELY_SPIRIT},[A.KLANG]:{0:O.STEELY_SPIRIT},[A.KLINKLANG]:{0:O.STEELY_SPIRIT},[A.TYNAMO]:{0:O.POISON_HEAL},[A.EELEKTRIK]:{0:O.POISON_HEAL},[A.EELEKTROSS]:{0:O.POISON_HEAL},[A.ELGYEM]:{0:O.BEADS_OF_RUIN},[A.BEHEEYEM]:{0:O.BEADS_OF_RUIN},[A.LITWICK]:{0:O.SHADOW_TAG},[A.LAMPENT]:{0:O.SHADOW_TAG},[A.CHANDELURE]:{0:O.SHADOW_TAG},[A.AXEW]:{0:O.DRAGONS_MAW},[A.FRAXURE]:{0:O.DRAGONS_MAW},[A.HAXORUS]:{0:O.DRAGONS_MAW},[A.CUBCHOO]:{0:O.FUR_COAT},[A.BEARTIC]:{0:O.FUR_COAT},[A.CRYOGONAL]:{0:O.SNOW_WARNING},[A.SHELMET]:{0:O.STAMINA},[A.ACCELGOR]:{0:O.PROTEAN},[A.STUNFISK]:{0:O.STORM_DRAIN},[A.MIENFOO]:{0:O.NO_GUARD},[A.MIENSHAO]:{0:O.NO_GUARD},[A.DRUDDIGON]:{0:O.INTIMIDATE},[A.GOLETT]:{0:O.SHADOW_SHIELD},[A.GOLURK]:{0:O.SHADOW_SHIELD},[A.PAWNIARD]:{0:O.SWORD_OF_RUIN},[A.BISHARP]:{0:O.SWORD_OF_RUIN},[A.KINGAMBIT]:{0:O.SWORD_OF_RUIN},[A.BOUFFALANT]:{0:O.ROCK_HEAD},[A.RUFFLET]:{0:O.SPEED_BOOST},[A.BRAVIARY]:{0:O.SPEED_BOOST},[A.HISUI_BRAVIARY]:{0:O.SPEED_BOOST},[A.VULLABY]:{0:O.THICK_FAT},[A.MANDIBUZZ]:{0:O.THICK_FAT},[A.HEATMOR]:{0:O.CONTRARY},[A.DURANT]:{0:O.COMPOUND_EYES},[A.DEINO]:{0:O.NO_GUARD},[A.ZWEILOUS]:{0:O.NO_GUARD},[A.HYDREIGON]:{0:O.PARENTAL_BOND},[A.LARVESTA]:{0:O.FLASH_FIRE},[A.VOLCARONA]:{0:O.DROUGHT},[A.COBALION]:{0:O.INTREPID_SWORD},[A.TERRAKION]:{0:O.ROCKY_PAYLOAD},[A.VIRIZION]:{0:O.SHARPNESS},[A.TORNADUS]:{0:O.DRIZZLE,1:O.DRIZZLE},[A.THUNDURUS]:{0:O.DRIZZLE,1:O.DRIZZLE},[A.RESHIRAM]:{0:O.ORICHALCUM_PULSE},[A.ZEKROM]:{0:O.HADRON_ENGINE},[A.LANDORUS]:{0:O.STORM_DRAIN,1:O.STORM_DRAIN},[A.KYUREM]:{0:O.SNOW_WARNING,1:O.HADRON_ENGINE,2:O.ORICHALCUM_PULSE},[A.KELDEO]:{0:O.GRIM_NEIGH,1:O.GRIM_NEIGH},[A.MELOETTA]:{0:O.PUNK_ROCK,1:O.SCRAPPY},[A.GENESECT]:{0:O.PROTEAN,1:O.PROTEAN,2:O.PROTEAN,3:O.PROTEAN,4:O.PROTEAN},[A.CHESPIN]:{0:O.ROUGH_SKIN},[A.QUILLADIN]:{0:O.DAUNTLESS_SHIELD},[A.CHESNAUGHT]:{0:O.DAUNTLESS_SHIELD},[A.FENNEKIN]:{0:O.FLUFFY},[A.BRAIXEN]:{0:O.PSYCHIC_SURGE},[A.DELPHOX]:{0:O.PSYCHIC_SURGE},[A.FROAKIE]:{0:O.STAKEOUT,1:O.STAKEOUT},[A.FROGADIER]:{0:O.STAKEOUT,1:O.STAKEOUT},[A.GRENINJA]:{0:O.STAKEOUT,1:O.STAKEOUT,2:O.STAKEOUT},[A.BUNNELBY]:{0:O.INNER_FOCUS},[A.DIGGERSBY]:{0:O.THICK_FAT},[A.FLETCHLING]:{0:O.FLAME_BODY},[A.FLETCHINDER]:{0:O.MAGIC_GUARD},[A.TALONFLAME]:{0:O.MAGIC_GUARD},[A.SCATTERBUG]:{0:O.RUN_AWAY,1:O.RUN_AWAY,2:O.RUN_AWAY,3:O.RUN_AWAY,4:O.RUN_AWAY,5:O.RUN_AWAY,6:O.RUN_AWAY,7:O.RUN_AWAY,8:O.RUN_AWAY,9:O.RUN_AWAY,10:O.RUN_AWAY,11:O.RUN_AWAY,12:O.RUN_AWAY,13:O.RUN_AWAY,14:O.RUN_AWAY,15:O.RUN_AWAY,16:O.RUN_AWAY,17:O.RUN_AWAY,18:O.RUN_AWAY,19:O.RUN_AWAY},[A.SPEWPA]:{0:O.COMPOUND_EYES,1:O.COMPOUND_EYES,2:O.COMPOUND_EYES,3:O.COMPOUND_EYES,4:O.COMPOUND_EYES,5:O.COMPOUND_EYES,6:O.COMPOUND_EYES,7:O.COMPOUND_EYES,8:O.COMPOUND_EYES,9:O.COMPOUND_EYES,10:O.COMPOUND_EYES,11:O.COMPOUND_EYES,12:O.COMPOUND_EYES,13:O.COMPOUND_EYES,14:O.COMPOUND_EYES,15:O.COMPOUND_EYES,16:O.COMPOUND_EYES,17:O.COMPOUND_EYES,18:O.COMPOUND_EYES,19:O.COMPOUND_EYES},[A.VIVILLON]:{0:O.PRANKSTER,1:O.PRANKSTER,2:O.PRANKSTER,3:O.PRANKSTER,4:O.PRANKSTER,5:O.PRANKSTER,6:O.PRANKSTER,7:O.PRANKSTER,8:O.PRANKSTER,9:O.PRANKSTER,10:O.PRANKSTER,11:O.PRANKSTER,12:O.PRANKSTER,13:O.PRANKSTER,14:O.PRANKSTER,15:O.PRANKSTER,16:O.PRANKSTER,17:O.PRANKSTER,18:O.PRANKSTER,19:O.PRANKSTER},[A.LITLEO]:{0:O.BEAST_BOOST},[A.PYROAR]:{0:O.BEAST_BOOST},[A.FLABEBE]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[A.FLOETTE]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[A.FLORGES]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[A.SKIDDO]:{0:O.SEED_SOWER},[A.GOGOAT]:{0:O.SEED_SOWER},[A.PANCHAM]:{0:O.TECHNICIAN},[A.PANGORO]:{0:O.FUR_COAT},[A.FURFROU]:{0:O.FLUFFY,1:O.FLUFFY,2:O.FLUFFY,3:O.FLUFFY,4:O.FLUFFY,5:O.FLUFFY,6:O.FLUFFY,7:O.FLUFFY,8:O.FLUFFY,9:O.FLUFFY},[A.ESPURR]:{0:O.PRANKSTER},[A.MEOWSTIC]:{0:O.FUR_COAT,1:O.NEUROFORCE},[A.HONEDGE]:{0:O.SHARPNESS},[A.DOUBLADE]:{0:O.SHARPNESS},[A.AEGISLASH]:{0:O.SHARPNESS,1:O.SHARPNESS},[A.SPRITZEE]:{0:O.FUR_COAT},[A.AROMATISSE]:{0:O.FUR_COAT},[A.SWIRLIX]:{0:O.RIPEN},[A.SLURPUFF]:{0:O.RIPEN},[A.INKAY]:{0:O.SHADOW_SHIELD},[A.MALAMAR]:{0:O.SHADOW_SHIELD},[A.BINACLE]:{0:O.SAP_SIPPER},[A.BARBARACLE]:{0:O.SAP_SIPPER},[A.SKRELP]:{0:O.WATER_BUBBLE},[A.DRAGALGE]:{0:O.DRAGONS_MAW},[A.CLAUNCHER]:{0:O.PROTEAN},[A.CLAWITZER]:{0:O.PROTEAN},[A.HELIOPTILE]:{0:O.PROTEAN},[A.HELIOLISK]:{0:O.PROTEAN},[A.TYRUNT]:{0:O.SHEER_FORCE},[A.TYRANTRUM]:{0:O.SHEER_FORCE},[A.AMAURA]:{0:O.ICE_SCALES},[A.AURORUS]:{0:O.ICE_SCALES},[A.HAWLUCHA]:{0:O.MOXIE},[A.DEDENNE]:{0:O.PIXILATE},[A.CARBINK]:{0:O.SOLID_ROCK},[A.GOOMY]:{0:O.REGENERATOR},[A.SLIGGOO]:{0:O.POISON_HEAL},[A.GOODRA]:{0:O.POISON_HEAL},[A.HISUI_SLIGGOO]:{0:O.REGENERATOR},[A.HISUI_GOODRA]:{0:O.REGENERATOR},[A.KLEFKI]:{0:O.LEVITATE},[A.PHANTUMP]:{0:O.SHADOW_TAG},[A.TREVENANT]:{0:O.SHADOW_TAG},[A.PUMPKABOO]:{0:O.ILLUMINATE,1:O.ADAPTABILITY,2:O.WELL_BAKED_BODY,3:O.SEED_SOWER},[A.GOURGEIST]:{0:O.ILLUMINATE,1:O.ADAPTABILITY,2:O.WELL_BAKED_BODY,3:O.SEED_SOWER},[A.BERGMITE]:{0:O.ICE_SCALES},[A.AVALUGG]:{0:O.ICE_SCALES},[A.HISUI_AVALUGG]:{0:O.ICE_SCALES},[A.NOIBAT]:{0:O.CHEEK_POUCH},[A.NOIVERN]:{0:O.PUNK_ROCK},[A.XERNEAS]:{0:O.HARVEST,1:O.HARVEST},[A.YVELTAL]:{0:O.SOUL_HEART},[A.ZYGARDE]:{0:O.UNNERVE,1:O.MOXIE,2:O.UNNERVE,3:O.MOXIE,4:O.ADAPTABILITY,5:O.ADAPTABILITY},[A.DIANCIE]:{0:O.SOLID_ROCK,1:O.PRISM_ARMOR},[A.HOOPA]:{0:O.OPPORTUNIST,1:O.OPPORTUNIST},[A.VOLCANION]:{0:O.NEUTRALIZING_GAS},[A.ETERNAL_FLOETTE]:{0:O.MAGIC_GUARD},[A.ROWLET]:{0:O.WIND_RIDER},[A.DARTRIX]:{0:O.WIND_RIDER},[A.DECIDUEYE]:{0:O.SNIPER},[A.HISUI_DECIDUEYE]:{0:O.SNIPER},[A.LITTEN]:{0:O.OPPORTUNIST},[A.TORRACAT]:{0:O.OPPORTUNIST},[A.INCINEROAR]:{0:O.OPPORTUNIST},[A.POPPLIO]:{0:O.PUNK_ROCK},[A.BRIONNE]:{0:O.PUNK_ROCK},[A.PRIMARINA]:{0:O.PUNK_ROCK},[A.PIKIPEK]:{0:O.TECHNICIAN},[A.TRUMBEAK]:{0:O.TECHNICIAN},[A.TOUCANNON]:{0:O.TECHNICIAN},[A.YUNGOOS]:{0:O.TOUGH_CLAWS},[A.GUMSHOOS]:{0:O.TOUGH_CLAWS},[A.GRUBBIN]:{0:O.SHIELD_DUST},[A.CHARJABUG]:{0:O.POWER_SPOT},[A.VIKAVOLT]:{0:O.SPEED_BOOST},[A.CRABRAWLER]:{0:O.WATER_BUBBLE},[A.CRABOMINABLE]:{0:O.WATER_BUBBLE},[A.ORICORIO]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY},[A.CUTIEFLY]:{0:O.PICKUP},[A.RIBOMBEE]:{0:O.PICKUP},[A.ROCKRUFF]:{0:O.PICKUP,1:O.PICKUP},[A.LYCANROC]:{0:O.STURDY,1:O.INTIMIDATE,2:O.STAKEOUT},[A.WISHIWASHI]:{0:O.REGENERATOR,1:O.REGENERATOR},[A.MAREANIE]:{0:O.TOXIC_DEBRIS},[A.TOXAPEX]:{0:O.TOXIC_DEBRIS},[A.MUDBRAY]:{0:O.SAP_SIPPER},[A.MUDSDALE]:{0:O.SAP_SIPPER},[A.DEWPIDER]:{0:O.TINTED_LENS},[A.ARAQUANID]:{0:O.TINTED_LENS},[A.FOMANTIS]:{0:O.SHARPNESS},[A.LURANTIS]:{0:O.SHARPNESS},[A.MORELULL]:{0:O.TRIAGE},[A.SHIINOTIC]:{0:O.TRIAGE},[A.SALANDIT]:{0:O.PICKUP},[A.SALAZZLE]:{0:O.DRAGONS_MAW},[A.STUFFUL]:{0:O.SCRAPPY},[A.BEWEAR]:{0:O.SCRAPPY},[A.BOUNSWEET]:{0:O.SIMPLE},[A.STEENEE]:{0:O.SIMPLE},[A.TSAREENA]:{0:O.MOXIE},[A.COMFEY]:{0:O.FRIEND_GUARD},[A.ORANGURU]:{0:O.POWER_SPOT},[A.PASSIMIAN]:{0:O.LIBERO},[A.WIMPOD]:{0:O.REGENERATOR},[A.GOLISOPOD]:{0:O.REGENERATOR},[A.SANDYGAST]:{0:O.SAND_SPIT},[A.PALOSSAND]:{0:O.SAND_SPIT},[A.PYUKUMUKU]:{0:O.PURIFYING_SALT},[A.TYPE_NULL]:{0:O.CLEAR_BODY},[A.SILVALLY]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY,4:O.ADAPTABILITY,5:O.ADAPTABILITY,6:O.ADAPTABILITY,7:O.ADAPTABILITY,8:O.ADAPTABILITY,9:O.ADAPTABILITY,10:O.ADAPTABILITY,11:O.ADAPTABILITY,12:O.ADAPTABILITY,13:O.ADAPTABILITY,14:O.ADAPTABILITY,15:O.ADAPTABILITY,16:O.ADAPTABILITY,17:O.ADAPTABILITY},[A.MINIOR]:{0:O.STURDY,1:O.STURDY,2:O.STURDY,3:O.STURDY,4:O.STURDY,5:O.STURDY,6:O.STURDY,7:O.AERILATE,8:O.AERILATE,9:O.AERILATE,10:O.AERILATE,11:O.AERILATE,12:O.AERILATE,13:O.AERILATE},[A.KOMALA]:{0:O.GUTS},[A.TURTONATOR]:{0:O.DAUNTLESS_SHIELD},[A.TOGEDEMARU]:{0:O.ROUGH_SKIN},[A.MIMIKYU]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[A.BRUXISH]:{0:O.MULTISCALE},[A.DRAMPA]:{0:O.THICK_FAT},[A.DHELMISE]:{0:O.WATER_BUBBLE},[A.JANGMO_O]:{0:O.DAUNTLESS_SHIELD},[A.HAKAMO_O]:{0:O.DAUNTLESS_SHIELD},[A.KOMMO_O]:{0:O.DAUNTLESS_SHIELD},[A.TAPU_KOKO]:{0:O.DAUNTLESS_SHIELD},[A.TAPU_LELE]:{0:O.BERSERK},[A.TAPU_BULU]:{0:O.FLOWER_VEIL},[A.TAPU_FINI]:{0:O.FAIRY_AURA},[A.COSMOG]:{0:O.PICKUP},[A.COSMOEM]:{0:O.POWER_SPOT},[A.SOLGALEO]:{0:O.BEAST_BOOST},[A.LUNALA]:{0:O.BEAST_BOOST},[A.NIHILEGO]:{0:O.LEVITATE},[A.BUZZWOLE]:{0:O.MOXIE},[A.PHEROMOSA]:{0:O.TINTED_LENS},[A.XURKITREE]:{0:O.TRANSISTOR},[A.CELESTEELA]:{0:O.HEATPROOF},[A.KARTANA]:{0:O.TECHNICIAN},[A.GUZZLORD]:{0:O.POISON_HEAL},[A.NECROZMA]:{0:O.BEAST_BOOST,1:O.FULL_METAL_BODY,2:O.SHADOW_SHIELD,3:O.UNNERVE},[A.MAGEARNA]:{0:O.STEELY_SPIRIT,1:O.STEELY_SPIRIT},[A.MARSHADOW]:{0:O.IRON_FIST},[A.POIPOLE]:{0:O.LEVITATE},[A.NAGANADEL]:{0:O.LEVITATE},[A.STAKATAKA]:{0:O.SOLID_ROCK},[A.BLACEPHALON]:{0:O.MAGIC_GUARD},[A.ZERAORA]:{0:O.TOUGH_CLAWS},[A.MELTAN]:{0:O.HEATPROOF},[A.MELMETAL]:{0:O.HEATPROOF,1:O.FULL_METAL_BODY},[A.ALOLA_RATTATA]:{0:O.ADAPTABILITY},[A.ALOLA_RATICATE]:{0:O.ADAPTABILITY},[A.ALOLA_SANDSHREW]:{0:O.ICE_SCALES},[A.ALOLA_SANDSLASH]:{0:O.ICE_SCALES},[A.ALOLA_VULPIX]:{0:O.ICE_BODY},[A.ALOLA_NINETALES]:{0:O.ICE_BODY},[A.ALOLA_DIGLETT]:{0:O.STURDY},[A.ALOLA_DUGTRIO]:{0:O.STURDY},[A.ALOLA_MEOWTH]:{0:O.DARK_AURA},[A.ALOLA_PERSIAN]:{0:O.DARK_AURA},[A.ALOLA_GEODUDE]:{0:O.DRY_SKIN},[A.ALOLA_GRAVELER]:{0:O.DRY_SKIN},[A.ALOLA_GOLEM]:{0:O.DRY_SKIN},[A.ALOLA_GRIMER]:{0:O.TOXIC_DEBRIS},[A.ALOLA_MUK]:{0:O.TOXIC_DEBRIS},[A.GROOKEY]:{0:O.PICKPOCKET},[A.THWACKEY]:{0:O.PICKPOCKET},[A.RILLABOOM]:{0:O.GRASS_PELT,1:O.GRASS_PELT},[A.SCORBUNNY]:{0:O.SHEER_FORCE},[A.RABOOT]:{0:O.SHEER_FORCE},[A.CINDERACE]:{0:O.NO_GUARD,1:O.NO_GUARD},[A.SOBBLE]:{0:O.SUPER_LUCK},[A.DRIZZILE]:{0:O.SUPER_LUCK},[A.INTELEON]:{0:O.SUPER_LUCK,1:O.SUPER_LUCK},[A.SKWOVET]:{0:O.HARVEST},[A.GREEDENT]:{0:O.HARVEST},[A.ROOKIDEE]:{0:O.GALE_WINGS},[A.CORVISQUIRE]:{0:O.GALE_WINGS},[A.CORVIKNIGHT]:{0:O.IRON_BARBS,1:O.IRON_BARBS},[A.BLIPBUG]:{0:O.RUN_AWAY},[A.DOTTLER]:{0:O.PSYCHIC_SURGE},[A.ORBEETLE]:{0:O.PSYCHIC_SURGE,1:O.PSYCHIC_SURGE},[A.NICKIT]:{0:O.MAGICIAN},[A.THIEVUL]:{0:O.MAGICIAN},[A.GOSSIFLEUR]:{0:O.SEED_SOWER},[A.ELDEGOSS]:{0:O.GRASSY_SURGE},[A.WOOLOO]:{0:O.SCRAPPY},[A.DUBWOOL]:{0:O.SCRAPPY},[A.CHEWTLE]:{0:O.SOLID_ROCK},[A.DREDNAW]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[A.YAMPER]:{0:O.PICKUP},[A.BOLTUND]:{0:O.SHEER_FORCE},[A.ROLYCOLY]:{0:O.SOLID_ROCK},[A.CARKOL]:{0:O.SOLID_ROCK},[A.COALOSSAL]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[A.APPLIN]:{0:O.STURDY},[A.FLAPPLE]:{0:O.NO_GUARD,1:O.NO_GUARD},[A.APPLETUN]:{0:O.WELL_BAKED_BODY,1:O.WELL_BAKED_BODY},[A.DIPPLIN]:{0:O.PARENTAL_BOND},[A.HYDRAPPLE]:{0:O.PARENTAL_BOND},[A.SILICOBRA]:{0:O.SAND_RUSH},[A.SANDACONDA]:{0:O.SAND_RUSH,1:O.SAND_RUSH},[A.CRAMORANT]:{0:O.LIGHTNING_ROD,1:O.LIGHTNING_ROD,2:O.LIGHTNING_ROD},[A.ARROKUDA]:{0:O.SPEED_BOOST},[A.BARRASKEWDA]:{0:O.INTIMIDATE},[A.TOXEL]:{0:O.ELECTRIC_SURGE},[A.TOXTRICITY]:{0:O.ELECTRIC_SURGE,1:O.ELECTRIC_SURGE,2:O.ELECTRIC_SURGE},[A.SIZZLIPEDE]:{0:O.HUSTLE},[A.CENTISKORCH]:{0:O.HUSTLE,1:O.HUSTLE},[A.CLOBBOPUS]:{0:O.WATER_BUBBLE},[A.GRAPPLOCT]:{0:O.WATER_BUBBLE},[A.SINISTEA]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[A.POLTEAGEIST]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[A.HATENNA]:{0:O.FAIRY_AURA},[A.HATTREM]:{0:O.FAIRY_AURA},[A.HATTERENE]:{0:O.FAIRY_AURA,1:O.FAIRY_AURA},[A.IMPIDIMP]:{0:O.INTIMIDATE},[A.MORGREM]:{0:O.INTIMIDATE},[A.GRIMMSNARL]:{0:O.INTIMIDATE,1:O.INTIMIDATE},[A.MILCERY]:{0:O.REGENERATOR},[A.ALCREMIE]:{0:O.REGENERATOR,1:O.REGENERATOR,2:O.REGENERATOR,3:O.REGENERATOR,4:O.REGENERATOR,5:O.REGENERATOR,6:O.REGENERATOR,7:O.REGENERATOR,8:O.REGENERATOR,9:O.REGENERATOR},[A.FALINKS]:{0:O.DAUNTLESS_SHIELD},[A.PINCURCHIN]:{0:O.ELECTROMORPHOSIS},[A.SNOM]:{0:O.SNOW_WARNING},[A.FROSMOTH]:{0:O.SNOW_WARNING},[A.STONJOURNER]:{0:O.STURDY},[A.EISCUE]:{0:O.ICE_SCALES,1:O.ICE_SCALES},[A.INDEEDEE]:{0:O.HOSPITALITY,1:O.FRIEND_GUARD},[A.MORPEKO]:{0:O.MOODY,1:O.MOODY},[A.CUFANT]:{0:O.EARTH_EATER},[A.COPPERAJAH]:{0:O.EARTH_EATER,1:O.EARTH_EATER},[A.DRACOZOLT]:{0:O.NO_GUARD},[A.ARCTOZOLT]:{0:O.WATER_ABSORB},[A.DRACOVISH]:{0:O.THERMAL_EXCHANGE},[A.ARCTOVISH]:{0:O.STRONG_JAW},[A.DURALUDON]:{0:O.FILTER,1:O.UNAWARE},[A.ARCHALUDON]:{0:O.TRANSISTOR},[A.DREEPY]:{0:O.TECHNICIAN},[A.DRAKLOAK]:{0:O.PARENTAL_BOND},[A.DRAGAPULT]:{0:O.PARENTAL_BOND},[A.ZACIAN]:{0:O.UNNERVE,1:O.UNNERVE},[A.ZAMAZENTA]:{0:O.UNNERVE,1:O.UNNERVE},[A.ETERNATUS]:{0:O.NEUTRALIZING_GAS,1:O.NEUTRALIZING_GAS},[A.KUBFU]:{0:O.IRON_FIST},[A.URSHIFU]:{0:O.IRON_FIST,1:O.IRON_FIST,2:O.IRON_FIST,3:O.IRON_FIST},[A.ZARUDE]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[A.REGIELEKI]:{0:O.ELECTRIC_SURGE},[A.REGIDRAGO]:{0:O.MULTISCALE},[A.GLASTRIER]:{0:O.FILTER},[A.SPECTRIER]:{0:O.DAZZLING},[A.CALYREX]:{0:O.HARVEST,1:O.FILTER,2:O.DAZZLING},[A.ENAMORUS]:{0:O.FAIRY_AURA,1:O.FAIRY_AURA},[A.GALAR_MEOWTH]:{0:O.UNBURDEN},[A.PERRSERKER]:{0:O.UNBURDEN},[A.GALAR_PONYTA]:{0:O.CHILLING_NEIGH},[A.GALAR_RAPIDASH]:{0:O.CHILLING_NEIGH},[A.GALAR_SLOWPOKE]:{0:O.OBLIVIOUS},[A.GALAR_SLOWBRO]:{0:O.NEUROFORCE},[A.GALAR_SLOWKING]:{0:O.INTIMIDATE},[A.GALAR_FARFETCHD]:{0:O.STAKEOUT},[A.SIRFETCHD]:{0:O.INTREPID_SWORD},[A.GALAR_ARTICUNO]:{0:O.SERENE_GRACE},[A.GALAR_ZAPDOS]:{0:O.TOUGH_CLAWS},[A.GALAR_MOLTRES]:{0:O.DARK_AURA},[A.GALAR_CORSOLA]:{0:O.SHADOW_SHIELD},[A.CURSOLA]:{0:O.SHADOW_SHIELD},[A.GALAR_ZIGZAGOON]:{0:O.POISON_HEAL},[A.GALAR_LINOONE]:{0:O.POISON_HEAL},[A.OBSTAGOON]:{0:O.POISON_HEAL},[A.GALAR_DARUMAKA]:{0:O.FLASH_FIRE},[A.GALAR_DARMANITAN]:{0:O.FLASH_FIRE,1:O.FLASH_FIRE},[A.GALAR_YAMASK]:{0:O.TABLETS_OF_RUIN},[A.RUNERIGUS]:{0:O.TABLETS_OF_RUIN},[A.GALAR_STUNFISK]:{0:O.ARENA_TRAP},[A.HISUI_GROWLITHE]:{0:O.RECKLESS},[A.HISUI_ARCANINE]:{0:O.RECKLESS},[A.HISUI_VOLTORB]:{0:O.TRANSISTOR},[A.HISUI_ELECTRODE]:{0:O.TRANSISTOR},[A.HISUI_QWILFISH]:{0:O.MERCILESS},[A.OVERQWIL]:{0:O.MERCILESS},[A.HISUI_SNEASEL]:{0:O.SCRAPPY},[A.SNEASLER]:{0:O.SCRAPPY},[A.HISUI_ZORUA]:{0:O.SHADOW_SHIELD},[A.HISUI_ZOROARK]:{0:O.SHADOW_SHIELD},[A.SPRIGATITO]:{0:O.PICKUP},[A.FLORAGATO]:{0:O.MAGICIAN},[A.MEOWSCARADA]:{0:O.MAGICIAN},[A.FUECOCO]:{0:O.GLUTTONY},[A.CROCALOR]:{0:O.PUNK_ROCK},[A.SKELEDIRGE]:{0:O.PUNK_ROCK},[A.QUAXLY]:{0:O.OPPORTUNIST},[A.QUAXWELL]:{0:O.OPPORTUNIST},[A.QUAQUAVAL]:{0:O.OPPORTUNIST},[A.LECHONK]:{0:O.SIMPLE},[A.OINKOLOGNE]:{0:O.SIMPLE,1:O.SIMPLE},[A.TAROUNTULA]:{0:O.HONEY_GATHER},[A.SPIDOPS]:{0:O.HONEY_GATHER},[A.NYMBLE]:{0:O.TECHNICIAN},[A.LOKIX]:{0:O.GUTS},[A.PAWMI]:{0:O.TRANSISTOR},[A.PAWMO]:{0:O.TRANSISTOR},[A.PAWMOT]:{0:O.TRANSISTOR},[A.TANDEMAUS]:{0:O.FRIEND_GUARD},[A.MAUSHOLD]:{0:O.SCRAPPY,1:O.SCRAPPY},[A.FIDOUGH]:{0:O.WATER_ABSORB},[A.DACHSBUN]:{0:O.WATER_ABSORB},[A.SMOLIV]:{0:O.RIPEN},[A.DOLLIV]:{0:O.RIPEN},[A.ARBOLIVA]:{0:O.RIPEN},[A.SQUAWKABILLY]:{0:O.MOXIE,1:O.MOXIE,2:O.MOXIE,3:O.MOXIE},[A.NACLI]:{0:O.SOLID_ROCK},[A.NACLSTACK]:{0:O.SOLID_ROCK},[A.GARGANACL]:{0:O.SOLID_ROCK},[A.CHARCADET]:{0:O.BATTLE_ARMOR},[A.ARMAROUGE]:{0:O.PRISM_ARMOR},[A.CERULEDGE]:{0:O.PRISM_ARMOR},[A.TADBULB]:{0:O.LEVITATE},[A.BELLIBOLT]:{0:O.STAMINA},[A.WATTREL]:{0:O.SHEER_FORCE},[A.KILOWATTREL]:{0:O.SHEER_FORCE},[A.MASCHIFF]:{0:O.STRONG_JAW},[A.MABOSSTIFF]:{0:O.STRONG_JAW},[A.SHROODLE]:{0:O.CORROSION},[A.GRAFAIAI]:{0:O.CORROSION},[A.BRAMBLIN]:{0:O.WANDERING_SPIRIT},[A.BRAMBLEGHAST]:{0:O.SHADOW_SHIELD},[A.TOEDSCOOL]:{0:O.RUN_AWAY},[A.TOEDSCRUEL]:{0:O.PRANKSTER},[A.KLAWF]:{0:O.WATER_ABSORB},[A.CAPSAKID]:{0:O.FLOWER_GIFT},[A.SCOVILLAIN]:{0:O.PARENTAL_BOND},[A.RELLOR]:{0:O.PRANKSTER},[A.RABSCA]:{0:O.PRANKSTER},[A.FLITTLE]:{0:O.DAZZLING},[A.ESPATHRA]:{0:O.DAZZLING},[A.TINKATINK]:{0:O.STEELWORKER},[A.TINKATUFF]:{0:O.STEELWORKER},[A.TINKATON]:{0:O.STEELWORKER},[A.WIGLETT]:{0:O.STURDY},[A.WUGTRIO]:{0:O.STURDY},[A.BOMBIRDIER]:{0:O.UNBURDEN},[A.FINIZEN]:{0:O.SWIFT_SWIM},[A.PALAFIN]:{0:O.EMERGENCY_EXIT,1:O.IRON_FIST},[A.VAROOM]:{0:O.LEVITATE},[A.REVAVROOM]:{0:O.LEVITATE,1:O.DARK_AURA,2:O.FLASH_FIRE,3:O.MERCILESS,4:O.FILTER,5:O.SCRAPPY},[A.CYCLIZAR]:{0:O.PROTEAN},[A.ORTHWORM]:{0:O.REGENERATOR},[A.GLIMMET]:{0:O.STURDY},[A.GLIMMORA]:{0:O.TERA_SHELL},[A.GREAVARD]:{0:O.UNAWARE},[A.HOUNDSTONE]:{0:O.UNAWARE},[A.FLAMIGO]:{0:O.MOXIE},[A.CETODDLE]:{0:O.REFRIGERATE},[A.CETITAN]:{0:O.REFRIGERATE},[A.VELUZA]:{0:O.SUPER_LUCK},[A.DONDOZO]:{0:O.DRAGONS_MAW},[A.TATSUGIRI]:{0:O.FLUFFY,1:O.FLUFFY,2:O.FLUFFY},[A.GREAT_TUSK]:{0:O.INTIMIDATE},[A.SCREAM_TAIL]:{0:O.UNAWARE},[A.BRUTE_BONNET]:{0:O.CHLOROPHYLL},[A.FLUTTER_MANE]:{0:O.DAZZLING},[A.SLITHER_WING]:{0:O.SCRAPPY},[A.SANDY_SHOCKS]:{0:O.ELECTRIC_SURGE},[A.IRON_TREADS]:{0:O.DAUNTLESS_SHIELD},[A.IRON_BUNDLE]:{0:O.SNOW_WARNING},[A.IRON_HANDS]:{0:O.IRON_FIST},[A.IRON_JUGULIS]:{0:O.LIGHTNING_ROD},[A.IRON_MOTH]:{0:O.LEVITATE},[A.IRON_THORNS]:{0:O.SAND_STREAM},[A.FRIGIBAX]:{0:O.INTIMIDATE},[A.ARCTIBAX]:{0:O.INTIMIDATE},[A.BAXCALIBUR]:{0:O.INTIMIDATE},[A.GIMMIGHOUL]:{0:O.HONEY_GATHER,1:O.HONEY_GATHER},[A.GHOLDENGO]:{0:O.HONEY_GATHER},[A.WO_CHIEN]:{0:O.VESSEL_OF_RUIN},[A.CHIEN_PAO]:{0:O.INTIMIDATE},[A.TING_LU]:{0:O.STAMINA},[A.CHI_YU]:{0:O.BERSERK},[A.ROARING_MOON]:{0:O.INTIMIDATE},[A.IRON_VALIANT]:{0:O.NEUROFORCE},[A.KORAIDON]:{0:O.THERMAL_EXCHANGE},[A.MIRAIDON]:{0:O.COMPOUND_EYES},[A.WALKING_WAKE]:{0:O.BEAST_BOOST},[A.IRON_LEAVES]:{0:O.SHARPNESS},[A.POLTCHAGEIST]:{0:O.TRIAGE,1:O.TRIAGE},[A.SINISTCHA]:{0:O.TRIAGE,1:O.TRIAGE},[A.OKIDOGI]:{0:O.DARK_AURA},[A.MUNKIDORI]:{0:O.MAGICIAN},[A.FEZANDIPITI]:{0:O.PIXILATE},[A.OGERPON]:{0:O.OPPORTUNIST,1:O.SUPER_LUCK,2:O.FLASH_FIRE,3:O.MAGIC_GUARD,4:O.OPPORTUNIST,5:O.SUPER_LUCK,6:O.FLASH_FIRE,7:O.MAGIC_GUARD},[A.GOUGING_FIRE]:{0:O.BEAST_BOOST},[A.RAGING_BOLT]:{0:O.BEAST_BOOST},[A.IRON_BOULDER]:{0:O.SHARPNESS},[A.IRON_CROWN]:{0:O.SHARPNESS},[A.TERAPAGOS]:{0:O.SHIELD_DUST,1:O.SHIELD_DUST,2:O.SHIELD_DUST},[A.PECHARUNT]:{0:O.TOXIC_CHAIN},[A.PALDEA_TAUROS]:{0:O.STAMINA,1:O.ADAPTABILITY,2:O.ADAPTABILITY},[A.PALDEA_WOOPER]:{0:O.POISON_TOUCH},[A.CLODSIRE]:{0:O.THICK_FAT},[A.BLOODMOON_URSALUNA]:{0:O.BERSERK}};async function E3(R,e,I,L=T){if(dt.hasOwnProperty(R))return;L.experimentalSprites&&aH(R)&&(e=`exp/${e}`);let S=oO;e.split("/").map(i=>S?S=S[i]:null),!(!S||S[I]!==1)&&(dt[R]=await L.cachedFetch(`./images/pokemon/variant/${e}.json`).then(i=>i.json()))}r(E3,"loadPokemonVariantAssets");var e3=(R=>(R[R.NORMAL=0]="NORMAL",R[R.ALOLA=1]="ALOLA",R[R.GALAR=2]="GALAR",R[R.HISUI=3]="HISUI",R[R.PALDEA=4]="PALDEA",R))(e3||{});const _7=[A.PIKACHU,A.RAICHU,A.EEVEE,A.JOLTEON,A.FLAREON,A.VAPOREON,A.ESPEON,A.UMBREON,A.LEAFEON,A.GLACEON,A.SYLVEON,A.PICHU,A.ROTOM,A.DIALGA,A.PALKIA,A.KYUREM,A.GENESECT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.ROCKRUFF,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.CRAMORANT,A.ZARUDE,A.CALYREX];function YA(R){return Array.isArray(R)&&(R=R[Math.floor(Math.random()*R.length)]),R>=2e3?hL.find(e=>e.speciesId===R):hL[R-1]}r(YA,"getPokemonSpecies");function sC(R,e){var L;const I=R>=2e3?hL.find(N=>N.speciesId===R):hL[R-1];return e<((L=I.forms)==null?void 0:L.length)?I.forms[e]:I}r(sC,"getPokemonSpeciesForm");function jy(R,e){const I=/([a-z]{2}.*?[aeiou(?:y$)\-\']+)(.*?)$/i,L=/([a-z]{2}.*?[aeiou(?:y$)\-\'])(.*?)$/i,[N,S]=[R,e].map(m=>/^(?:[^ ]+) /.exec(m)),[n,i]=[N,S].map(m=>m?m[0]:"");n&&(R=R.slice(n.length)),i&&(e=e.slice(i.length));const[C,o]=[R,e].map(m=>/ (?:[^ ]+)$/.exec(m)),[l,H]=[C,o].map(m=>m?m[0]:"");l&&(R=R.slice(0,-l.length)),H&&(e=e.slice(0,-H.length));const P=R.split(/ /g),K=e.split(/ /g),f=I.exec(R),h=L.exec(e);let F,w;if(F=P.length===1?f?f[1]:R:P[P.length-1],K.length===1)if(h){const m=F.slice(F.length-1),y=h[1].slice(h.length-1);if(w=(/[\-']/.test(y)?y:"")+h[2]||y,m===w[0])if(/[aiu]/.test(m))w=w.slice(1);else{const x=new RegExp(`[^${m}]`).exec(w);(x==null?void 0:x.index)!==void 0&&x.index>0&&(w=w.slice(x.index))}}else w=e;else w=K[K.length-1];return P.length>1&&(F=`${P.slice(0,P.length-1).join(" ")} ${F}`),w=`${w.slice(0,1).toLowerCase()}${w.slice(1)}`,`${n||i}${F}${w}${H||l}`}r(jy,"getFusedSpeciesName");const Su=class Su{constructor(e,I,L,N,S,n,i,C,o,l,H,P,K,f,h,F,w,m,y){this.type1=e,this.type2=I,this.height=L,this.weight=N,this.ability1=S,this.ability2=n===O.NONE?S:n,this.abilityHidden=i,this.baseTotal=C,this.baseStats=[o,l,H,P,K,f],this.catchRate=h,this.baseFriendship=F,this.baseExp=w,this.genderDiffs=m,this.isStarterSelectable=y}getRootSpeciesId(e=!1){let I=this.speciesId;for(;Fe.hasOwnProperty(I)&&(!e||!FR.hasOwnProperty(I));)I=Fe[I];return I}get generation(){return this._generation}set generation(e){this._generation=e}get formIndex(){return this._formIndex}set formIndex(e){this._formIndex=e}isOfType(e){return this.type1===e||this.type2!==null&&this.type2===e}getAbilityCount(){return this.abilityHidden!==O.NONE?3:2}getAbility(e){let I;return e===0?I=this.ability1:e===1?I=this.ability2:I=this.abilityHidden,I}getPassiveAbility(e){SA(e)&&(e=this.formIndex);let I=this.speciesId;for(;!(I in TT)||!(e in TT[I]);)if(Fe.hasOwnProperty(I))I=Fe[I];else return 0 in TT[I]?TT[I][0]:(this.speciesId,O.RUN_AWAY);return TT[I][e]}getLevelMoves(){return rN.hasOwnProperty(this.speciesId)&&rN[this.speciesId].hasOwnProperty(this.formIndex)?rN[this.speciesId][this.formIndex].slice(0):km[this.speciesId].slice(0)}getRegion(){return Math.floor(this.speciesId/2e3)}isObtainable(){return this.generation<=9||Fe.hasOwnProperty(this.speciesId)}isCatchable(){return this.isObtainable()&&$4.indexOf(this.speciesId)===-1}isRegional(){return this.getRegion()>0}isTrainerForbidden(){return[A.ETERNAL_FLOETTE,A.BLOODMOON_URSALUNA].includes(this.speciesId)}isRareRegional(){switch(this.getRegion()){case 3:return!0}return!1}getBaseStatTotal(){return this.baseStats.reduce((e,I)=>I+e)}getBaseStat(e){return this.baseStats[e]}getBaseExp(){let e=this.baseExp;switch(this.getFormSpriteKey()){case eA.MEGA:case eA.MEGA_X:case eA.MEGA_Y:case eA.PRIMAL:case eA.GIGANTAMAX:case eA.ETERNAMAX:e*=1.5;break}return e}getSpriteAtlasPath(e,I,L,N,S){const n=this.getSpriteId(e,I,L,N,S).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(n)?"variant/":""}${n}`}getBaseSpriteKey(e,I){(I===void 0||this instanceof Y)&&(I=this.formIndex);const L=this.getFormSpriteKey(I);return`${this.genderDiffs&&e&&![eA.MEGA,eA.GIGANTAMAX].includes(L)?"female__":""}${this.speciesId}${L?`-${L}`:""}`}getSpriteId(e,I,L,N=0,S=!1){const n=this.getBaseSpriteKey(e,I);let i=oO;`${S?"back__":""}${n}`.split("__").map(o=>i?i=i[o]:null);const C=i;return`${S?"back__":""}${L&&(!C||!N&&!C[N||0])?"shiny__":""}${n}${L&&C&&C[N]===2?`_${N+1}`:""}`}getSpriteKey(e,I,L,N,S){return`pkmn__${this.getSpriteId(e,I,L,N,S)}`}getVariantDataIndex(e){var S;let I=null,L=this.speciesId;const N=YA(this.speciesId);return N.forms.length>0&&e!==void 0&&(I=(S=N.forms[e])==null?void 0:S.getFormSpriteKey(e),I&&(L=`${this.speciesId}-${I}`)),L}getIconAtlasKey(e,I,L){const N=this.getVariantDataIndex(e),S=I&&oO[N]&&L!==void 0&&oO[N][L];return`pokemon_icons_${this.generation}${S?"v":""}`}getIconId(e,I,L,N){I===void 0&&(I=this.formIndex);const S=this.getVariantDataIndex(I);let n=this.speciesId.toString();const i=L&&oO[S]&&N!==void 0&&oO[S][N];switch(L&&!i&&(n+="s"),this.speciesId){case A.DODUO:case A.DODRIO:case A.MEGANIUM:case A.TORCHIC:case A.COMBUSKEN:case A.BLAZIKEN:case A.HIPPOPOTAS:case A.HIPPOWDON:case A.UNFEZANT:case A.FRILLISH:case A.JELLICENT:case A.PYROAR:n+=e?"-f":"";break}let C=this.getFormSpriteKey(I);if(C)switch(this.speciesId){case A.DUDUNSPARCE:break;case A.ZACIAN:case A.ZAMAZENTA:C.startsWith("behemoth")&&(C="crowned");default:n+=`-${C}`;break}return i&&(n+=`_${N+1}`),n}getCryKey(e){let I=this.speciesId;if(this.speciesId>2e3)switch(this.speciesId){case A.GALAR_SLOWPOKE:break;case A.ETERNAL_FLOETTE:break;case A.BLOODMOON_URSALUNA:break;default:I=I%2e3;break}let L=I.toString();const N=YA(I).forms;if(N.length){e!==void 0&&e>=N.length&&(console.warn(`Attempted accessing form with index ${e} of species ${YA(I).getName()} with only ${N.length||0} forms`),e=Math.min(e,N.length-1));const S=N[e||0].formKey;switch(S){case eA.MEGA:case eA.MEGA_X:case eA.MEGA_Y:case eA.GIGANTAMAX:case eA.GIGANTAMAX_SINGLE:case eA.GIGANTAMAX_RAPID:case"white":case"black":case"therian":case"sky":case"gorging":case"gulping":case"no-ice":case"hangry":case"crowned":case"eternamax":case"four":case"droopy":case"stretchy":case"hero":case"roaming":case"complete":case"10-complete":case"10":case"10-pc":case"super":case"unbound":case"pau":case"pompom":case"sensu":case"dusk":case"midnight":case"school":case"dawn-wings":case"dusk-mane":case"ultra":L+=`-${S}`;break}}return`cry/${L}`}validateStarterMoveset(e,I){const L=this.getRootSpeciesId();for(const N of e){if(lI.hasOwnProperty(L)){const S=lI[L].findIndex(n=>n===N);if(S>-1&&I&1<<S)continue}if(rN.hasOwnProperty(this.speciesId)&&rN[this.speciesId].hasOwnProperty(this.formIndex)){if(!rN[this.speciesId][this.formIndex].find(S=>S[0]<=5&&S[1]===N))return!1}else if(!km[this.speciesId].find(S=>S[0]<=5&&S[1]===N))return!1}return!0}async loadVariantColors(e,I,L,N=!1,S){let n=this.getBaseSpriteKey(I,S);if(N&&(n="back__"+n),dt.hasOwnProperty(n))return;const i=oO[this.getVariantDataIndex(S)];!i||i[L]!==1||await nH("pkmn__"+n,T.experimentalSprites&&aH(e),n.replace("__","/"))}async loadAssets(e,I,L=!1,N,S=!1,n=!1){const i=this.getSpriteKey(e,I,L,N,n);return T.loadPokemonAtlas(i,this.getSpriteAtlasPath(e,I,L,N,n)),T.load.audio(this.getCryKey(I),`audio/${this.getCryKey(I)}.m4a`),SA(N)||await this.loadVariantColors(i,e,N,n,I),new Promise(C=>{T.load.once(Phaser.Loader.Events.COMPLETE,()=>{const o=console.warn;console.warn=()=>{};const l=T.anims.generateFrameNames(i,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=o,T.anims.exists(i)?T.anims.get(i).frameRate=10:T.anims.create({key:this.getSpriteKey(e,I,L,N,n),frames:l,frameRate:10,repeat:-1});const H=this.getSpriteAtlasPath(e,I,L,N,n).replace("variant/","").replace(/_[1-3]$/,"");SA(N)||E3(i,H,N).then(()=>C())}),S?T.load.isLoading()||T.load.start():C()})}cry(e,I){const L=this.getCryKey(this.formIndex);let N=T.sound.get(L);return N!=null&&N.pendingRemove&&(N=null),N=T.playSound(N??L,e),I&&N.stop(),N}generateCandyColors(){const e=T.textures.get(this.getSpriteKey(!1)),I=e.frames[e.firstFrame],L=e.getSourceImage(),N=document.createElement("canvas"),S=[],n=N.getContext("2d"),i=I;N.width=i.width,N.height=i.height,n==null||n.drawImage(L,i.cutX,i.cutY,i.width,i.height,0,0,i.width,i.height);const C=n==null?void 0:n.getImageData(i.cutX,i.cutY,i.width,i.height),o=C==null?void 0:C.data,l=[];if((o==null?void 0:o.length)!==void 0){for(let K=0;K<o.length;K+=4)if(o[K+3]){const f=o.slice(K,K+4),[h,F,w,m]=f;S.find(y=>y[0]===h&&y[1]===F&&y[2]===w)||S.push([h,F,w,m])}for(let K=0;K<o.length;K+=4)o.slice(K,K+3).reduce((h,F)=>h+F,0)&&l.push(YN({r:o[K],g:o[K+1],b:o[K+2],a:o[K+3]}))}let H=new Map;const P=Math.random;return Math.random=nI,T.executeWithSeedOffset(()=>{H=js.quantize(l,2)},0,"This result should not vary"),Math.random=P,Array.from(H.keys()).map(K=>Object.values(Q_(K)))}};r(Su,"PokemonSpeciesForm");let aC=Su;const Tu=class Tu extends aC{constructor(e,I,L,N,S,n,i,C,o,l,H,P,K,f,h,F,w,m,y,x,q,IA,$,tA,UA,RA,OA,...NA){super(i,C,o,l,H,P,K,f,h,F,w,m,y,x,q,IA,$,RA,!1),this.speciesId=e,this.formIndex=0,this.generation=I,this.subLegendary=L,this.legendary=N,this.mythical=S,this.species=n,this.growthRate=tA,this.malePercent=UA,this.genderDiffs=RA,this.canChangeForm=!!OA,this.forms=NA,this.localize(),NA.forEach((iA,KA)=>{iA.speciesId=e,iA.formIndex=KA,iA.generation=I})}getName(e){if(e!==void 0&&this.forms.length){const I=this.forms[e];let L;switch(I.formKey){case eA.MEGA:case eA.PRIMAL:case eA.ETERNAMAX:case eA.MEGA_X:case eA.MEGA_Y:L=I.formKey;break;default:I.formKey.indexOf(eA.GIGANTAMAX)>-1?L="gigantamax":L=null}if(L)return _.t(`battlePokemonForm:${L}`,{pokemonName:this.name})}return this.name}generateGender(){return SA(this.malePercent)?mA.GENDERLESS:nI()<=this.malePercent?mA.MALE:mA.FEMALE}getExpandedSpeciesName(){return this.speciesId<2e3?this.name:_.t(`pokemonForm:appendForm.${A[this.speciesId].split("_")[0]}`,{pokemonName:this.name})}getFormNameToDisplay(e=0,I=!1){var C,o;const L=(o=(C=this.forms)==null?void 0:C[e])==null?void 0:o.formKey,N=S_(L,"-",!1,!1)||"",S=S_(A[this.speciesId],"_",!0,!1);let n="";const i=this.getRegion();if(this.speciesId===A.ARCEUS)n=_.t(`pokemonInfo:Type.${N==null?void 0:N.toUpperCase()}`);else{if([eA.MEGA,eA.MEGA_X,eA.MEGA_Y,eA.PRIMAL,eA.GIGANTAMAX,eA.GIGANTAMAX_RAPID,eA.GIGANTAMAX_SINGLE,eA.ETERNAMAX].includes(L))return I?_.t(`battlePokemonForm:${L}`,{pokemonName:this.name}):_.t(`pokemonForm:battleForm.${L}`);if(i===0||this.speciesId===A.GALAR_DARMANITAN&&e>0||this.speciesId===A.PALDEA_TAUROS){const l=`pokemonForm:${S}${N}`;if(_.exists(l))n=_.t(l);else{const P=`pokemonForm:${S_(A[this.getRootSpeciesId()],"_",!0,!1)}${N}`;n=_.exists(P)?_.t(P):N}}else return I?this.getExpandedSpeciesName():this.speciesId===A.ETERNAL_FLOETTE?_.t("pokemonForm:floetteEternalFlower"):this.speciesId===A.BLOODMOON_URSALUNA?_.t("pokemonForm:ursalunaBloodmoon"):_.t(`pokemonForm:regionalForm.${e3[i]}`)}return I?_.t("pokemonForm:appendForm.GENERIC",{pokemonName:this.name,formName:n}):n}localize(){this.name=_.t(`pokemon:${A[this.speciesId].toLowerCase()}`)}getWildSpeciesForLevel(e,I,L,N){return this.getSpeciesForLevel(e,I,!1,(L?HA.WEAKER:HA.AVERAGE)+(N!=null&&N.isEndless?1:0))}getTrainerSpeciesForLevel(e,I=!1,L,N=0){return this.getSpeciesForLevel(e,I,!0,L,N)}getStrengthLevelDiff(e){switch(Math.min(e,HA.STRONGER)){case HA.WEAKEST:return 60;case HA.WEAKER:return 40;case HA.WEAK:return 20;case HA.AVERAGE:return 8;case HA.STRONG:return 4;default:return 0}}getSpeciesForLevel(e,I=!1,L=!1,N=HA.WEAKER,S=0){var f;const n=this.getPrevolutionLevels();if(n.length)for(let h=n.length-1;h>=0;h--){const F=n[h];if(e<F[1])return F[0]}if(!I||!lE.hasOwnProperty(this.speciesId)||((f=T.currentBattle)==null?void 0:f.waveIndex)===20&&T.gameMode.isClassic&&T.currentBattle.trainer)return this.speciesId;const i=lE[this.speciesId],C=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn"),o=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut"),l=new Map;let H=0,P=1;for(const h of i){if(h.level>e)continue;let F;const w=YA(h.speciesId),m=!this.isRegional()&&w.isRegional();if(!L&&m)F=0;else if(h.wildDelay===Q4.NONE)if(N===HA.STRONGER)F=1;else{const y=this.getStrengthLevelDiff(N),x=.875-.125*N;F=Math.min(x+C(Math.min(e-h.level,y)/y)*(1-x),1)}else{const y=Math.max(h.level-1+h.wildDelay*this.getStrengthLevelDiff(N),1);let x=Math.max(h.level>1?h.level:Math.floor(y/2),1);if(h.level<=1&&Fe.hasOwnProperty(this.speciesId)){const q=lE[Fe[this.speciesId]].find(IA=>IA.speciesId===this.speciesId).level;q>1&&(x=q)}F=Math.min(.65*C(Math.min(Math.max(e-x,0),y)/y)+.35*o(Math.min(Math.max(e-x,0),y*2.5)/(y*2.5)),1)}S>=80&&L&&N>HA.WEAKER&&(F=1,P=0),F>0&&(m&&(F/=w.isRareRegional()?16:4),H+=F,l.set(H,h.speciesId),1-F<P&&(P=1-F))}if(P===1||nI()<=P)return this.speciesId;const K=l.size===1?0:DA(H);for(const h of l.keys())if(K<h)return YA(l.get(h)).getSpeciesForLevel(e,!0,L,N,S);return this.speciesId}getEvolutionLevels(){const e=[];if(lE.hasOwnProperty(this.speciesId))for(const I of lE[this.speciesId]){const L=I.speciesId,N=I.level;e.push([L,N]);const S=YA(L).getEvolutionLevels();for(const n of S)e.push(n)}return e}getPrevolutionLevels(){const e=[],I=Object.keys(lE);for(const L of I)for(const N of lE[L])if(N.speciesId===this.speciesId&&(!this.forms.length||!N.evoFormKey||N.evoFormKey===this.forms[this.formIndex].formKey)&&e.every(S=>S[0]!==Number.parseInt(L))){const S=Number.parseInt(L),n=N.level;e.push([S,n]);const i=YA(S).getPrevolutionLevels();for(const C of i)e.push(C)}return e}getSimulatedEvolutionChain(e,I=!1,L=!1,N=!1){const S=[];if(Fe.hasOwnProperty(this.speciesId)){const n=this.getPrevolutionLevels().reverse(),i=N?0:I||L?I&&L?2.5:5:10;S.push([n[0][0],1]);for(let l=1;l<n.length;l++){const H=lE[n[l-1][0]].find(P=>P.speciesId===n[l][0]);S.push([n[l][0],Math.min(Math.max((H==null?void 0:H.level)+Math.round(pm(.5,1+i*.2)*Math.max(H==null?void 0:H.wildDelay,.5)*5)-1,2,H==null?void 0:H.level),e-1)])}const C=S[n.length-1][1],o=lE[n[n.length-1][0]].find(l=>l.speciesId===this.speciesId);S.push([this.speciesId,Math.min(Math.max(C+Math.round(pm(.5,1+i*.2)*Math.max(o==null?void 0:o.wildDelay,.5)*5),C+1,o==null?void 0:o.level),e)])}else S.push([this.speciesId,1]);return S}getCompatibleFusionSpeciesFilter(){const e=lE.hasOwnProperty(this.speciesId),I=Fe.hasOwnProperty(this.speciesId),L=this.subLegendary,N=this.legendary,S=this.mythical;return n=>(L||N||S||lE.hasOwnProperty(n.speciesId)===e&&Fe.hasOwnProperty(n.speciesId)===I)&&n.subLegendary===L&&n.legendary===N&&n.mythical===S&&(this.isTrainerForbidden()||!n.isTrainerForbidden())&&n.speciesId!==A.DITTO}hasVariants(){var I;let e=this.speciesId;if(this.forms.length>0){const L=(I=this.forms[this.formIndex])==null?void 0:I.formKey;L&&(e=`${e}-${L}`)}return oO.hasOwnProperty(e)||oO.hasOwnProperty(this.speciesId)}getFormSpriteKey(e){var I;return this.forms.length&&e!==void 0&&e>=this.forms.length&&(console.warn(`Attempted accessing form with index ${e} of species ${this.getName()} with only ${this.forms.length||0} forms`),e=Math.min(e,this.forms.length-1)),(I=this.forms)!=null&&I.length?this.forms[e||0].getFormSpriteKey():""}getFullUnlocksData(){var I;let e=0n;return e+=vR.NON_SHINY,e+=vR.SHINY,this.malePercent!==null&&(this.malePercent>0&&(e+=vR.MALE),this.malePercent<100&&(e+=vR.FEMALE)),e+=vR.DEFAULT_VARIANT,this.hasVariants()&&(e+=vR.VARIANT_2,e+=vR.VARIANT_3),e+=((I=this==null?void 0:this.forms)==null?void 0:I.length)>1?this.forms.map((L,N)=>L.isUnobtainable?0n:128n*2n**BigInt(N)).reduce((L,N)=>L+N,0n):vR.DEFAULT_FORM,e}};r(Tu,"PokemonSpecies");let M=Tu;const su=class su extends aC{constructor(e,I,L,N,S,n,i,C,o,l,H,P,K,f,h,F,w,m,y,x=!1,q=null,IA=!1,$=!1){super(L,N,S,n,i,C,o,l,H,P,K,f,h,F,w,m,y,x,IA||!I),this.starterSelectableKeys=["10","50","10-pc","50-pc","red","orange","yellow","green","blue","indigo","violet"],this.formName=e,this.formKey=I,this.formSpriteKey=q,this.isUnobtainable=$}getFormSpriteKey(e){return this.formSpriteKey!==null?this.formSpriteKey:this.formKey}};r(su,"PokemonForm");let Y=su;function G7(){const R=[],e=new Date;return e.setUTCHours(0,0,0,0),T.executeWithSeedOffset(()=>{for(;R.length<Yy;){const I=Number.parseInt(He(Object.keys(FR)),10),L=YA(I);R.includes(L)||R.push(L)}},0,e.getTime().toString()),R}r(G7,"getPokerusStarters");const hL=[];function AV(){hL.push(new M(A.BULBASAUR,1,!1,!1,!1,"Seed Pokémon",t.GRASS,t.POISON,.7,6.9,O.OVERGROW,O.NONE,O.CHLOROPHYLL,318,45,49,49,65,65,45,45,50,64,D.MEDIUM_SLOW,87.5,!1),new M(A.IVYSAUR,1,!1,!1,!1,"Seed Pokémon",t.GRASS,t.POISON,1,13,O.OVERGROW,O.NONE,O.CHLOROPHYLL,405,60,62,63,80,80,60,45,50,142,D.MEDIUM_SLOW,87.5,!1),new M(A.VENUSAUR,1,!1,!1,!1,"Seed Pokémon",t.GRASS,t.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,D.MEDIUM_SLOW,87.5,!0,!0,new Y("Normal","",t.GRASS,t.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,!0,null,!0),new Y("Mega",eA.MEGA,t.GRASS,t.POISON,2.4,155.5,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,625,80,100,123,122,120,80,45,50,263,!0),new Y("G-Max",eA.GIGANTAMAX,t.GRASS,t.POISON,24,999.9,O.EFFECT_SPORE,O.NONE,O.EFFECT_SPORE,625,120,122,90,108,105,80,45,50,263,!0)),new M(A.CHARMANDER,1,!1,!1,!1,"Lizard Pokémon",t.FIRE,null,.6,8.5,O.BLAZE,O.NONE,O.SOLAR_POWER,309,39,52,43,60,50,65,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.CHARMELEON,1,!1,!1,!1,"Flame Pokémon",t.FIRE,null,1.1,19,O.BLAZE,O.NONE,O.SOLAR_POWER,405,58,64,58,80,65,80,45,50,142,D.MEDIUM_SLOW,87.5,!1),new M(A.CHARIZARD,1,!1,!1,!1,"Flame Pokémon",t.FIRE,t.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.FIRE,t.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,!1,null,!0),new Y("Mega X",eA.MEGA_X,t.FIRE,t.DRAGON,1.7,110.5,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,634,78,130,111,130,85,100,45,50,267),new Y("Mega Y",eA.MEGA_Y,t.FIRE,t.FLYING,1.7,100.5,O.DROUGHT,O.NONE,O.DROUGHT,634,78,104,78,159,115,100,45,50,267),new Y("G-Max",eA.GIGANTAMAX,t.FIRE,t.FLYING,28,999.9,O.BERSERK,O.NONE,O.BERSERK,634,118,99,88,134,95,100,45,50,267)),new M(A.SQUIRTLE,1,!1,!1,!1,"Tiny Turtle Pokémon",t.WATER,null,.5,9,O.TORRENT,O.NONE,O.RAIN_DISH,314,44,48,65,50,64,43,45,50,63,D.MEDIUM_SLOW,87.5,!1),new M(A.WARTORTLE,1,!1,!1,!1,"Turtle Pokémon",t.WATER,null,1,22.5,O.TORRENT,O.NONE,O.RAIN_DISH,405,59,63,80,65,80,58,45,50,142,D.MEDIUM_SLOW,87.5,!1),new M(A.BLASTOISE,1,!1,!1,!1,"Shellfish Pokémon",t.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,!1,null,!0),new Y("Mega",eA.MEGA,t.WATER,null,1.6,101.1,O.MEGA_LAUNCHER,O.NONE,O.MEGA_LAUNCHER,630,79,103,120,135,115,78,45,50,265),new Y("G-Max",eA.GIGANTAMAX,t.WATER,t.STEEL,25,999.9,O.SHELL_ARMOR,O.NONE,O.SHELL_ARMOR,630,119,108,125,105,110,63,45,50,265)),new M(A.CATERPIE,1,!1,!1,!1,"Worm Pokémon",t.BUG,null,.3,2.9,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,30,35,20,20,45,255,50,39,D.MEDIUM_FAST,50,!1),new M(A.METAPOD,1,!1,!1,!1,"Cocoon Pokémon",t.BUG,null,.7,9.9,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,20,55,25,25,30,120,50,72,D.MEDIUM_FAST,50,!1),new M(A.BUTTERFREE,1,!1,!1,!1,"Butterfly Pokémon",t.BUG,t.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,D.MEDIUM_FAST,50,!0,!0,new Y("Normal","",t.BUG,t.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,!0,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.BUG,t.FLYING,17,999.9,O.COMPOUND_EYES,O.NONE,O.COMPOUND_EYES,495,80,40,75,120,95,85,45,50,198,!0)),new M(A.WEEDLE,1,!1,!1,!1,"Hairy Bug Pokémon",t.BUG,t.POISON,.3,3.2,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,40,35,30,20,20,50,255,70,39,D.MEDIUM_FAST,50,!1),new M(A.KAKUNA,1,!1,!1,!1,"Cocoon Pokémon",t.BUG,t.POISON,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,45,25,50,25,25,35,120,70,72,D.MEDIUM_FAST,50,!1),new M(A.BEEDRILL,1,!1,!1,!1,"Poison Bee Pokémon",t.BUG,t.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,198,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.BUG,t.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,198,!1,null,!0),new Y("Mega",eA.MEGA,t.BUG,t.POISON,1.4,40.5,O.ADAPTABILITY,O.NONE,O.ADAPTABILITY,495,65,150,40,15,80,145,45,70,198)),new M(A.PIDGEY,1,!1,!1,!1,"Tiny Bird Pokémon",t.NORMAL,t.FLYING,.3,1.8,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,251,40,45,40,35,35,56,255,70,50,D.MEDIUM_SLOW,50,!1),new M(A.PIDGEOTTO,1,!1,!1,!1,"Bird Pokémon",t.NORMAL,t.FLYING,1.1,30,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,349,63,60,55,50,50,71,120,70,122,D.MEDIUM_SLOW,50,!1),new M(A.PIDGEOT,1,!1,!1,!1,"Bird Pokémon",t.NORMAL,t.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,240,D.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",t.NORMAL,t.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,240,!1,null,!0),new Y("Mega",eA.MEGA,t.NORMAL,t.FLYING,2.2,50.5,O.NO_GUARD,O.NO_GUARD,O.NO_GUARD,579,83,80,80,135,80,121,45,70,240)),new M(A.RATTATA,1,!1,!1,!1,"Mouse Pokémon",t.NORMAL,null,.3,3.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,253,30,56,35,25,35,72,255,70,51,D.MEDIUM_FAST,50,!0),new M(A.RATICATE,1,!1,!1,!1,"Mouse Pokémon",t.NORMAL,null,.7,18.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,413,55,81,60,50,70,97,127,70,145,D.MEDIUM_FAST,50,!0),new M(A.SPEAROW,1,!1,!1,!1,"Tiny Bird Pokémon",t.NORMAL,t.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.SNIPER,262,40,60,30,31,31,70,255,70,52,D.MEDIUM_FAST,50,!1),new M(A.FEAROW,1,!1,!1,!1,"Beak Pokémon",t.NORMAL,t.FLYING,1.2,38,O.KEEN_EYE,O.NONE,O.SNIPER,442,65,90,65,61,61,100,90,70,155,D.MEDIUM_FAST,50,!1),new M(A.EKANS,1,!1,!1,!1,"Snake Pokémon",t.POISON,null,2,6.9,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,288,35,60,44,40,54,55,255,70,58,D.MEDIUM_FAST,50,!1),new M(A.ARBOK,1,!1,!1,!1,"Cobra Pokémon",t.POISON,null,3.5,65,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,448,60,95,69,65,79,80,90,70,157,D.MEDIUM_FAST,50,!1),new M(A.PIKACHU,1,!1,!1,!1,"Mouse Pokémon",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,D.MEDIUM_FAST,50,!0,!0,new Y("Normal","",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,!0,null,!0),new Y("Partner","partner",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Cosplay","cosplay",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Cool Cosplay","cool-cosplay",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Beauty Cosplay","beauty-cosplay",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Cute Cosplay","cute-cosplay",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Smart Cosplay","smart-cosplay",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("Tough Cosplay","tough-cosplay",t.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.ELECTRIC,null,21,999.9,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,530,125,95,60,90,70,90,190,50,112)),new M(A.RAICHU,1,!1,!1,!1,"Mouse Pokémon",t.ELECTRIC,null,.8,30,O.STATIC,O.NONE,O.LIGHTNING_ROD,485,60,90,55,90,80,110,75,50,243,D.MEDIUM_FAST,50,!0),new M(A.SANDSHREW,1,!1,!1,!1,"Mouse Pokémon",t.GROUND,null,.6,12,O.SAND_VEIL,O.NONE,O.SAND_RUSH,300,50,75,85,20,30,40,255,50,60,D.MEDIUM_FAST,50,!1),new M(A.SANDSLASH,1,!1,!1,!1,"Mouse Pokémon",t.GROUND,null,1,29.5,O.SAND_VEIL,O.NONE,O.SAND_RUSH,450,75,100,110,45,55,65,90,50,158,D.MEDIUM_FAST,50,!1),new M(A.NIDORAN_F,1,!1,!1,!1,"Poison Pin Pokémon",t.POISON,null,.4,7,O.POISON_POINT,O.RIVALRY,O.HUSTLE,275,55,47,52,40,40,41,235,50,55,D.MEDIUM_SLOW,0,!1),new M(A.NIDORINA,1,!1,!1,!1,"Poison Pin Pokémon",t.POISON,null,.8,20,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,70,62,67,55,55,56,120,50,128,D.MEDIUM_SLOW,0,!1),new M(A.NIDOQUEEN,1,!1,!1,!1,"Drill Pokémon",t.POISON,t.GROUND,1.3,60,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,90,92,87,75,85,76,45,50,253,D.MEDIUM_SLOW,0,!1),new M(A.NIDORAN_M,1,!1,!1,!1,"Poison Pin Pokémon",t.POISON,null,.5,9,O.POISON_POINT,O.RIVALRY,O.HUSTLE,273,46,57,40,40,40,50,235,50,55,D.MEDIUM_SLOW,100,!1),new M(A.NIDORINO,1,!1,!1,!1,"Poison Pin Pokémon",t.POISON,null,.9,19.5,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,61,72,57,55,55,65,120,50,128,D.MEDIUM_SLOW,100,!1),new M(A.NIDOKING,1,!1,!1,!1,"Drill Pokémon",t.POISON,t.GROUND,1.4,62,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,81,102,77,85,75,85,45,50,253,D.MEDIUM_SLOW,100,!1),new M(A.CLEFAIRY,1,!1,!1,!1,"Fairy Pokémon",t.FAIRY,null,.6,7.5,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,323,70,45,48,60,65,35,150,140,113,D.FAST,25,!1),new M(A.CLEFABLE,1,!1,!1,!1,"Fairy Pokémon",t.FAIRY,null,1.3,40,O.CUTE_CHARM,O.MAGIC_GUARD,O.UNAWARE,483,95,70,73,95,90,60,25,140,242,D.FAST,25,!1),new M(A.VULPIX,1,!1,!1,!1,"Fox Pokémon",t.FIRE,null,.6,9.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,299,38,41,40,50,65,65,190,50,60,D.MEDIUM_FAST,25,!1),new M(A.NINETALES,1,!1,!1,!1,"Fox Pokémon",t.FIRE,null,1.1,19.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,505,73,76,75,81,100,100,75,50,177,D.MEDIUM_FAST,25,!1),new M(A.JIGGLYPUFF,1,!1,!1,!1,"Balloon Pokémon",t.NORMAL,t.FAIRY,.5,5.5,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,270,115,45,20,45,25,20,170,50,95,D.FAST,25,!1),new M(A.WIGGLYTUFF,1,!1,!1,!1,"Balloon Pokémon",t.NORMAL,t.FAIRY,1,12,O.CUTE_CHARM,O.COMPETITIVE,O.FRISK,435,140,70,45,85,50,45,50,50,218,D.FAST,25,!1),new M(A.ZUBAT,1,!1,!1,!1,"Bat Pokémon",t.POISON,t.FLYING,.8,7.5,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,245,40,45,35,30,40,55,255,50,49,D.MEDIUM_FAST,50,!0),new M(A.GOLBAT,1,!1,!1,!1,"Bat Pokémon",t.POISON,t.FLYING,1.6,55,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,455,75,80,70,65,75,90,90,50,159,D.MEDIUM_FAST,50,!0),new M(A.ODDISH,1,!1,!1,!1,"Weed Pokémon",t.GRASS,t.POISON,.5,5.4,O.CHLOROPHYLL,O.NONE,O.RUN_AWAY,320,45,50,55,75,65,30,255,50,64,D.MEDIUM_SLOW,50,!1),new M(A.GLOOM,1,!1,!1,!1,"Weed Pokémon",t.GRASS,t.POISON,.8,8.6,O.CHLOROPHYLL,O.NONE,O.STENCH,395,60,65,70,85,75,40,120,50,138,D.MEDIUM_SLOW,50,!0),new M(A.VILEPLUME,1,!1,!1,!1,"Flower Pokémon",t.GRASS,t.POISON,1.2,18.6,O.CHLOROPHYLL,O.NONE,O.EFFECT_SPORE,490,75,80,85,110,90,50,45,50,245,D.MEDIUM_SLOW,50,!0),new M(A.PARAS,1,!1,!1,!1,"Mushroom Pokémon",t.BUG,t.GRASS,.3,5.4,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,285,35,70,55,45,55,25,190,70,57,D.MEDIUM_FAST,50,!1),new M(A.PARASECT,1,!1,!1,!1,"Mushroom Pokémon",t.BUG,t.GRASS,1,29.5,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,405,60,95,80,60,80,30,75,70,142,D.MEDIUM_FAST,50,!1),new M(A.VENONAT,1,!1,!1,!1,"Insect Pokémon",t.BUG,t.POISON,1,30,O.COMPOUND_EYES,O.TINTED_LENS,O.RUN_AWAY,305,60,55,50,40,55,45,190,70,61,D.MEDIUM_FAST,50,!1),new M(A.VENOMOTH,1,!1,!1,!1,"Poison Moth Pokémon",t.BUG,t.POISON,1.5,12.5,O.SHIELD_DUST,O.TINTED_LENS,O.WONDER_SKIN,450,70,65,60,90,75,90,75,70,158,D.MEDIUM_FAST,50,!1),new M(A.DIGLETT,1,!1,!1,!1,"Mole Pokémon",t.GROUND,null,.2,.8,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,265,10,55,25,35,45,95,255,50,53,D.MEDIUM_FAST,50,!1),new M(A.DUGTRIO,1,!1,!1,!1,"Mole Pokémon",t.GROUND,null,.7,33.3,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,425,35,100,50,50,70,120,50,50,149,D.MEDIUM_FAST,50,!1),new M(A.MEOWTH,1,!1,!1,!1,"Scratch Cat Pokémon",t.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.NORMAL,null,33,999.9,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,540,115,110,65,65,70,115,255,50,58)),new M(A.PERSIAN,1,!1,!1,!1,"Classy Cat Pokémon",t.NORMAL,null,1,32,O.LIMBER,O.TECHNICIAN,O.UNNERVE,440,65,70,60,65,65,115,90,50,154,D.MEDIUM_FAST,50,!1),new M(A.PSYDUCK,1,!1,!1,!1,"Duck Pokémon",t.WATER,null,.8,19.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,320,50,52,48,65,50,55,190,50,64,D.MEDIUM_FAST,50,!1),new M(A.GOLDUCK,1,!1,!1,!1,"Duck Pokémon",t.WATER,null,1.7,76.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,500,80,82,78,95,80,85,75,50,175,D.MEDIUM_FAST,50,!1),new M(A.MANKEY,1,!1,!1,!1,"Pig Monkey Pokémon",t.FIGHTING,null,.5,28,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,305,40,80,35,35,45,70,190,70,61,D.MEDIUM_FAST,50,!1),new M(A.PRIMEAPE,1,!1,!1,!1,"Pig Monkey Pokémon",t.FIGHTING,null,1,32,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,455,65,105,60,60,70,95,75,70,159,D.MEDIUM_FAST,50,!1),new M(A.GROWLITHE,1,!1,!1,!1,"Puppy Pokémon",t.FIRE,null,.7,19,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,350,55,70,45,70,50,60,190,50,70,D.SLOW,75,!1),new M(A.ARCANINE,1,!1,!1,!1,"Legendary Pokémon",t.FIRE,null,1.9,155,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,555,90,110,80,100,80,95,75,50,194,D.SLOW,75,!1),new M(A.POLIWAG,1,!1,!1,!1,"Tadpole Pokémon",t.WATER,null,.6,12.4,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,300,40,50,40,40,40,90,255,50,60,D.MEDIUM_SLOW,50,!1),new M(A.POLIWHIRL,1,!1,!1,!1,"Tadpole Pokémon",t.WATER,null,1,20,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,385,65,65,65,50,50,90,120,50,135,D.MEDIUM_SLOW,50,!1),new M(A.POLIWRATH,1,!1,!1,!1,"Tadpole Pokémon",t.WATER,t.FIGHTING,1.3,54,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,510,90,95,95,70,90,70,45,50,255,D.MEDIUM_SLOW,50,!1),new M(A.ABRA,1,!1,!1,!1,"Psi Pokémon",t.PSYCHIC,null,.9,19.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,310,25,20,15,105,55,90,200,50,62,D.MEDIUM_SLOW,75,!1),new M(A.KADABRA,1,!1,!1,!1,"Psi Pokémon",t.PSYCHIC,null,1.3,56.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,400,40,35,30,120,70,105,100,50,140,D.MEDIUM_SLOW,75,!0),new M(A.ALAKAZAM,1,!1,!1,!1,"Psi Pokémon",t.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,D.MEDIUM_SLOW,75,!0,!0,new Y("Normal","",t.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,!0,null,!0),new Y("Mega",eA.MEGA,t.PSYCHIC,null,1.2,48,O.TRACE,O.TRACE,O.TRACE,600,55,50,65,175,105,150,50,50,250,!0)),new M(A.MACHOP,1,!1,!1,!1,"Superpower Pokémon",t.FIGHTING,null,.8,19.5,O.GUTS,O.NO_GUARD,O.STEADFAST,305,70,80,50,35,35,35,180,50,61,D.MEDIUM_SLOW,75,!1),new M(A.MACHOKE,1,!1,!1,!1,"Superpower Pokémon",t.FIGHTING,null,1.5,70.5,O.GUTS,O.NO_GUARD,O.STEADFAST,405,80,100,70,50,60,45,90,50,142,D.MEDIUM_SLOW,75,!1),new M(A.MACHAMP,1,!1,!1,!1,"Superpower Pokémon",t.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,D.MEDIUM_SLOW,75,!1,!0,new Y("Normal","",t.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.FIGHTING,null,25,999.9,O.GUTS,O.GUTS,O.GUTS,605,120,170,85,75,90,65,45,50,253)),new M(A.BELLSPROUT,1,!1,!1,!1,"Flower Pokémon",t.GRASS,t.POISON,.7,4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,300,50,75,35,70,30,40,255,70,60,D.MEDIUM_SLOW,50,!1),new M(A.WEEPINBELL,1,!1,!1,!1,"Flycatcher Pokémon",t.GRASS,t.POISON,1,6.4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,390,65,90,50,85,45,55,120,70,137,D.MEDIUM_SLOW,50,!1),new M(A.VICTREEBEL,1,!1,!1,!1,"Flycatcher Pokémon",t.GRASS,t.POISON,1.7,15.5,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,490,80,105,65,100,70,70,45,70,245,D.MEDIUM_SLOW,50,!1),new M(A.TENTACOOL,1,!1,!1,!1,"Jellyfish Pokémon",t.WATER,t.POISON,.9,45.5,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,335,40,40,35,50,100,70,190,50,67,D.SLOW,50,!1),new M(A.TENTACRUEL,1,!1,!1,!1,"Jellyfish Pokémon",t.WATER,t.POISON,1.6,55,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,515,80,70,65,80,120,100,60,50,180,D.SLOW,50,!1),new M(A.GEODUDE,1,!1,!1,!1,"Rock Pokémon",t.ROCK,t.GROUND,.4,20,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,300,40,80,100,30,30,20,255,70,60,D.MEDIUM_SLOW,50,!1),new M(A.GRAVELER,1,!1,!1,!1,"Rock Pokémon",t.ROCK,t.GROUND,1,105,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,390,55,95,115,45,45,35,120,70,137,D.MEDIUM_SLOW,50,!1),new M(A.GOLEM,1,!1,!1,!1,"Megaton Pokémon",t.ROCK,t.GROUND,1.4,300,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,495,80,120,130,55,65,45,45,70,248,D.MEDIUM_SLOW,50,!1),new M(A.PONYTA,1,!1,!1,!1,"Fire Horse Pokémon",t.FIRE,null,1,30,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,410,50,85,55,65,65,90,190,50,82,D.MEDIUM_FAST,50,!1),new M(A.RAPIDASH,1,!1,!1,!1,"Fire Horse Pokémon",t.FIRE,null,1.7,95,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,500,65,100,70,80,80,105,60,50,175,D.MEDIUM_FAST,50,!1),new M(A.SLOWPOKE,1,!1,!1,!1,"Dopey Pokémon",t.WATER,t.PSYCHIC,1.2,36,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,D.MEDIUM_FAST,50,!1),new M(A.SLOWBRO,1,!1,!1,!1,"Hermit Crab Pokémon",t.WATER,t.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.WATER,t.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,!1,null,!0),new Y("Mega",eA.MEGA,t.WATER,t.PSYCHIC,2,120,O.SHELL_ARMOR,O.SHELL_ARMOR,O.SHELL_ARMOR,590,95,75,180,130,80,30,75,50,172)),new M(A.MAGNEMITE,1,!1,!1,!1,"Magnet Pokémon",t.ELECTRIC,t.STEEL,.3,6,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,325,25,35,70,95,55,45,190,50,65,D.MEDIUM_FAST,null,!1),new M(A.MAGNETON,1,!1,!1,!1,"Magnet Pokémon",t.ELECTRIC,t.STEEL,1,60,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,465,50,60,95,120,70,70,60,50,163,D.MEDIUM_FAST,null,!1),new M(A.FARFETCHD,1,!1,!1,!1,"Wild Duck Pokémon",t.NORMAL,t.FLYING,.8,15,O.KEEN_EYE,O.INNER_FOCUS,O.DEFIANT,377,52,90,55,58,62,60,45,50,132,D.MEDIUM_FAST,50,!1),new M(A.DODUO,1,!1,!1,!1,"Twin Bird Pokémon",t.NORMAL,t.FLYING,1.4,39.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,310,35,85,45,35,35,75,190,70,62,D.MEDIUM_FAST,50,!0),new M(A.DODRIO,1,!1,!1,!1,"Triple Bird Pokémon",t.NORMAL,t.FLYING,1.8,85.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,470,60,110,70,60,60,110,45,70,165,D.MEDIUM_FAST,50,!0),new M(A.SEEL,1,!1,!1,!1,"Sea Lion Pokémon",t.WATER,null,1.1,90,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,325,65,45,55,45,70,45,190,70,65,D.MEDIUM_FAST,50,!1),new M(A.DEWGONG,1,!1,!1,!1,"Sea Lion Pokémon",t.WATER,t.ICE,1.7,120,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,475,90,70,80,70,95,70,75,70,166,D.MEDIUM_FAST,50,!1),new M(A.GRIMER,1,!1,!1,!1,"Sludge Pokémon",t.POISON,null,.9,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,325,80,80,50,40,50,25,190,70,65,D.MEDIUM_FAST,50,!1),new M(A.MUK,1,!1,!1,!1,"Sludge Pokémon",t.POISON,null,1.2,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,500,105,105,75,65,100,50,75,70,175,D.MEDIUM_FAST,50,!1),new M(A.SHELLDER,1,!1,!1,!1,"Bivalve Pokémon",t.WATER,null,.3,4,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,305,30,65,100,45,25,40,190,50,61,D.SLOW,50,!1),new M(A.CLOYSTER,1,!1,!1,!1,"Bivalve Pokémon",t.WATER,t.ICE,1.5,132.5,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,525,50,95,180,85,45,70,60,50,184,D.SLOW,50,!1),new M(A.GASTLY,1,!1,!1,!1,"Gas Pokémon",t.GHOST,t.POISON,1.3,.1,O.LEVITATE,O.NONE,O.NONE,310,30,35,30,100,35,80,190,50,62,D.MEDIUM_SLOW,50,!1),new M(A.HAUNTER,1,!1,!1,!1,"Gas Pokémon",t.GHOST,t.POISON,1.6,.1,O.LEVITATE,O.NONE,O.NONE,405,45,50,45,115,55,95,90,50,142,D.MEDIUM_SLOW,50,!1),new M(A.GENGAR,1,!1,!1,!1,"Shadow Pokémon",t.GHOST,t.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,D.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",t.GHOST,t.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,!1,null,!0),new Y("Mega",eA.MEGA,t.GHOST,t.POISON,1.4,40.5,O.SHADOW_TAG,O.NONE,O.NONE,600,60,65,80,170,95,130,45,50,250),new Y("G-Max",eA.GIGANTAMAX,t.GHOST,t.POISON,20,999.9,O.CURSED_BODY,O.NONE,O.NONE,600,140,65,70,140,85,100,45,50,250)),new M(A.ONIX,1,!1,!1,!1,"Rock Snake Pokémon",t.ROCK,t.GROUND,8.8,210,O.ROCK_HEAD,O.STURDY,O.WEAK_ARMOR,385,35,45,160,30,45,70,45,50,77,D.MEDIUM_FAST,50,!1),new M(A.DROWZEE,1,!1,!1,!1,"Hypnosis Pokémon",t.PSYCHIC,null,1,32.4,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,328,60,48,45,43,90,42,190,70,66,D.MEDIUM_FAST,50,!1),new M(A.HYPNO,1,!1,!1,!1,"Hypnosis Pokémon",t.PSYCHIC,null,1.6,75.6,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,483,85,73,70,73,115,67,75,70,169,D.MEDIUM_FAST,50,!0),new M(A.KRABBY,1,!1,!1,!1,"River Crab Pokémon",t.WATER,null,.4,6.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,325,30,105,90,25,25,50,225,50,65,D.MEDIUM_FAST,50,!1),new M(A.KINGLER,1,!1,!1,!1,"Pincer Pokémon",t.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.WATER,null,19,999.9,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,575,92,145,140,60,65,73,60,50,166)),new M(A.VOLTORB,1,!1,!1,!1,"Ball Pokémon",t.ELECTRIC,null,.5,10.4,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,70,66,D.MEDIUM_FAST,null,!1),new M(A.ELECTRODE,1,!1,!1,!1,"Ball Pokémon",t.ELECTRIC,null,1.2,66.6,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,D.MEDIUM_FAST,null,!1),new M(A.EXEGGCUTE,1,!1,!1,!1,"Egg Pokémon",t.GRASS,t.PSYCHIC,.4,2.5,O.CHLOROPHYLL,O.NONE,O.HARVEST,325,60,40,80,60,45,40,90,50,65,D.SLOW,50,!1),new M(A.EXEGGUTOR,1,!1,!1,!1,"Coconut Pokémon",t.GRASS,t.PSYCHIC,2,120,O.CHLOROPHYLL,O.NONE,O.HARVEST,530,95,95,85,125,75,55,45,50,186,D.SLOW,50,!1),new M(A.CUBONE,1,!1,!1,!1,"Lonely Pokémon",t.GROUND,null,.4,6.5,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,320,50,50,95,40,50,35,190,50,64,D.MEDIUM_FAST,50,!1),new M(A.MAROWAK,1,!1,!1,!1,"Bone Keeper Pokémon",t.GROUND,null,1,45,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,425,60,80,110,50,80,45,75,50,149,D.MEDIUM_FAST,50,!1),new M(A.HITMONLEE,1,!1,!1,!1,"Kicking Pokémon",t.FIGHTING,null,1.5,49.8,O.LIMBER,O.RECKLESS,O.UNBURDEN,455,50,120,53,35,110,87,45,50,159,D.MEDIUM_FAST,100,!1),new M(A.HITMONCHAN,1,!1,!1,!1,"Punching Pokémon",t.FIGHTING,null,1.4,50.2,O.KEEN_EYE,O.IRON_FIST,O.INNER_FOCUS,455,50,105,79,35,110,76,45,50,159,D.MEDIUM_FAST,100,!1),new M(A.LICKITUNG,1,!1,!1,!1,"Licking Pokémon",t.NORMAL,null,1.2,65.5,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,385,90,55,75,60,75,30,45,50,77,D.MEDIUM_FAST,50,!1),new M(A.KOFFING,1,!1,!1,!1,"Poison Gas Pokémon",t.POISON,null,.6,1,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,340,40,65,95,60,45,35,190,50,68,D.MEDIUM_FAST,50,!1),new M(A.WEEZING,1,!1,!1,!1,"Poison Gas Pokémon",t.POISON,null,1.2,9.5,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,490,65,90,120,85,70,60,60,50,172,D.MEDIUM_FAST,50,!1),new M(A.RHYHORN,1,!1,!1,!1,"Spikes Pokémon",t.GROUND,t.ROCK,1,115,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,345,80,85,95,30,30,25,120,50,69,D.SLOW,50,!0),new M(A.RHYDON,1,!1,!1,!1,"Drill Pokémon",t.GROUND,t.ROCK,1.9,120,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,485,105,130,120,45,45,40,60,50,170,D.SLOW,50,!0),new M(A.CHANSEY,1,!1,!1,!1,"Egg Pokémon",t.NORMAL,null,1.1,34.6,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,450,250,5,5,35,105,50,30,140,395,D.FAST,0,!1),new M(A.TANGELA,1,!1,!1,!1,"Vine Pokémon",t.GRASS,null,1,35,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,435,65,55,115,100,40,60,45,50,87,D.MEDIUM_FAST,50,!1),new M(A.KANGASKHAN,1,!1,!1,!1,"Parent Pokémon",t.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,D.MEDIUM_FAST,0,!1,!0,new Y("Normal","",t.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,!1,null,!0),new Y("Mega",eA.MEGA,t.NORMAL,null,2.2,100,O.PARENTAL_BOND,O.PARENTAL_BOND,O.PARENTAL_BOND,590,105,125,100,60,100,100,45,50,172)),new M(A.HORSEA,1,!1,!1,!1,"Dragon Pokémon",t.WATER,null,.4,8,O.SWIFT_SWIM,O.SNIPER,O.DAMP,295,30,40,70,70,25,60,225,50,59,D.MEDIUM_FAST,50,!1),new M(A.SEADRA,1,!1,!1,!1,"Dragon Pokémon",t.WATER,null,1.2,25,O.POISON_POINT,O.SNIPER,O.DAMP,440,55,65,95,95,45,85,75,50,154,D.MEDIUM_FAST,50,!1),new M(A.GOLDEEN,1,!1,!1,!1,"Goldfish Pokémon",t.WATER,null,.6,15,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,320,45,67,60,35,50,63,225,50,64,D.MEDIUM_FAST,50,!0),new M(A.SEAKING,1,!1,!1,!1,"Goldfish Pokémon",t.WATER,null,1.3,39,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,450,80,92,65,65,80,68,60,50,158,D.MEDIUM_FAST,50,!0),new M(A.STARYU,1,!1,!1,!1,"Star Shape Pokémon",t.WATER,null,.8,34.5,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,340,30,45,55,70,55,85,225,50,68,D.SLOW,null,!1),new M(A.STARMIE,1,!1,!1,!1,"Mysterious Pokémon",t.WATER,t.PSYCHIC,1.1,80,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,520,60,75,85,100,85,115,60,50,182,D.SLOW,null,!1),new M(A.MR_MIME,1,!1,!1,!1,"Barrier Pokémon",t.PSYCHIC,t.FAIRY,1.3,54.5,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,460,40,45,65,100,120,90,45,50,161,D.MEDIUM_FAST,50,!1),new M(A.SCYTHER,1,!1,!1,!1,"Mantis Pokémon",t.BUG,t.FLYING,1.5,56,O.SWARM,O.TECHNICIAN,O.STEADFAST,500,70,110,80,55,80,105,45,50,100,D.MEDIUM_FAST,50,!0),new M(A.JYNX,1,!1,!1,!1,"Human Shape Pokémon",t.ICE,t.PSYCHIC,1.4,40.6,O.OBLIVIOUS,O.FOREWARN,O.DRY_SKIN,455,65,50,35,115,95,95,45,50,159,D.MEDIUM_FAST,0,!1),new M(A.ELECTABUZZ,1,!1,!1,!1,"Electric Pokémon",t.ELECTRIC,null,1.1,30,O.STATIC,O.NONE,O.VITAL_SPIRIT,490,65,83,57,95,85,105,45,50,172,D.MEDIUM_FAST,75,!1),new M(A.MAGMAR,1,!1,!1,!1,"Spitfire Pokémon",t.FIRE,null,1.3,44.5,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,495,65,95,57,100,85,93,45,50,173,D.MEDIUM_FAST,75,!1),new M(A.PINSIR,1,!1,!1,!1,"Stag Beetle Pokémon",t.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,D.SLOW,50,!1,!0,new Y("Normal","",t.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,!1,null,!0),new Y("Mega",eA.MEGA,t.BUG,t.FLYING,1.7,59,O.AERILATE,O.AERILATE,O.AERILATE,600,65,155,120,65,90,105,45,50,175)),new M(A.TAUROS,1,!1,!1,!1,"Wild Bull Pokémon",t.NORMAL,null,1.4,88.4,O.INTIMIDATE,O.ANGER_POINT,O.SHEER_FORCE,490,75,100,95,40,70,110,45,50,172,D.SLOW,100,!1),new M(A.MAGIKARP,1,!1,!1,!1,"Fish Pokémon",t.WATER,null,.9,10,O.SWIFT_SWIM,O.NONE,O.RATTLED,200,20,10,55,15,20,80,255,50,40,D.SLOW,50,!0),new M(A.GYARADOS,1,!1,!1,!1,"Atrocious Pokémon",t.WATER,t.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,D.SLOW,50,!0,!0,new Y("Normal","",t.WATER,t.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,!0,null,!0),new Y("Mega",eA.MEGA,t.WATER,t.DARK,6.5,305,O.MOLD_BREAKER,O.MOLD_BREAKER,O.MOLD_BREAKER,640,95,155,109,70,130,81,45,50,189,!0)),new M(A.LAPRAS,1,!1,!1,!1,"Transport Pokémon",t.WATER,t.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,D.SLOW,50,!1,!0,new Y("Normal","",t.WATER,t.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.WATER,t.ICE,24,999.9,O.SHIELD_DUST,O.SHIELD_DUST,O.SHIELD_DUST,635,170,97,85,107,111,65,45,50,187)),new M(A.DITTO,1,!1,!1,!1,"Transform Pokémon",t.NORMAL,null,.3,4,O.LIMBER,O.NONE,O.IMPOSTER,288,48,48,48,48,48,48,35,50,101,D.MEDIUM_FAST,null,!1),new M(A.EEVEE,1,!1,!1,!1,"Evolution Pokémon",t.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,D.MEDIUM_FAST,87.5,!1,!0,new Y("Normal","",t.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,!1,null,!0),new Y("Partner","partner",t.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,435,65,75,70,65,85,75,45,50,65,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.NORMAL,null,18,999.9,O.PROTEAN,O.PROTEAN,O.PROTEAN,535,110,95,70,90,85,85,45,50,65)),new M(A.VAPOREON,1,!1,!1,!1,"Bubble Jet Pokémon",t.WATER,null,1,29,O.WATER_ABSORB,O.NONE,O.HYDRATION,525,130,65,60,110,95,65,45,50,184,D.MEDIUM_FAST,87.5,!1),new M(A.JOLTEON,1,!1,!1,!1,"Lightning Pokémon",t.ELECTRIC,null,.8,24.5,O.VOLT_ABSORB,O.NONE,O.QUICK_FEET,525,65,65,60,110,95,130,45,50,184,D.MEDIUM_FAST,87.5,!1),new M(A.FLAREON,1,!1,!1,!1,"Flame Pokémon",t.FIRE,null,.9,25,O.FLASH_FIRE,O.NONE,O.GUTS,525,65,130,60,95,110,65,45,50,184,D.MEDIUM_FAST,87.5,!1),new M(A.PORYGON,1,!1,!1,!1,"Virtual Pokémon",t.NORMAL,null,.8,36.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,395,65,60,70,85,75,40,45,50,79,D.MEDIUM_FAST,null,!1),new M(A.OMANYTE,1,!1,!1,!1,"Spiral Pokémon",t.ROCK,t.WATER,.4,7.5,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,355,35,40,100,90,55,35,45,50,71,D.MEDIUM_FAST,87.5,!1),new M(A.OMASTAR,1,!1,!1,!1,"Spiral Pokémon",t.ROCK,t.WATER,1,35,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,495,70,60,125,115,70,55,45,50,173,D.MEDIUM_FAST,87.5,!1),new M(A.KABUTO,1,!1,!1,!1,"Shellfish Pokémon",t.ROCK,t.WATER,.5,11.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,355,30,80,90,55,45,55,45,50,71,D.MEDIUM_FAST,87.5,!1),new M(A.KABUTOPS,1,!1,!1,!1,"Shellfish Pokémon",t.ROCK,t.WATER,1.3,40.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,495,60,115,105,65,70,80,45,50,173,D.MEDIUM_FAST,87.5,!1),new M(A.AERODACTYL,1,!1,!1,!1,"Fossil Pokémon",t.ROCK,t.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,D.SLOW,87.5,!1,!0,new Y("Normal","",t.ROCK,t.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,!1,null,!0),new Y("Mega",eA.MEGA,t.ROCK,t.FLYING,2.1,79,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,615,80,135,85,70,95,150,45,50,180)),new M(A.SNORLAX,1,!1,!1,!1,"Sleeping Pokémon",t.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,D.SLOW,87.5,!1,!0,new Y("Normal","",t.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.NORMAL,null,35,999.9,O.HARVEST,O.HARVEST,O.HARVEST,640,210,135,70,90,115,20,25,50,189)),new M(A.ARTICUNO,1,!0,!1,!1,"Freeze Pokémon",t.ICE,t.FLYING,1.7,55.4,O.PRESSURE,O.NONE,O.SNOW_CLOAK,580,90,85,100,95,125,85,3,35,290,D.SLOW,null,!1),new M(A.ZAPDOS,1,!0,!1,!1,"Electric Pokémon",t.ELECTRIC,t.FLYING,1.6,52.6,O.PRESSURE,O.NONE,O.STATIC,580,90,90,85,125,90,100,3,35,290,D.SLOW,null,!1),new M(A.MOLTRES,1,!0,!1,!1,"Flame Pokémon",t.FIRE,t.FLYING,2,60,O.PRESSURE,O.NONE,O.FLAME_BODY,580,90,100,90,125,85,90,3,35,290,D.SLOW,null,!1),new M(A.DRATINI,1,!1,!1,!1,"Dragon Pokémon",t.DRAGON,null,1.8,3.3,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,300,41,64,45,50,50,50,45,35,60,D.SLOW,50,!1),new M(A.DRAGONAIR,1,!1,!1,!1,"Dragon Pokémon",t.DRAGON,null,4,16.5,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,420,61,84,65,70,70,70,45,35,147,D.SLOW,50,!1),new M(A.DRAGONITE,1,!1,!1,!1,"Dragon Pokémon",t.DRAGON,t.FLYING,2.2,210,O.INNER_FOCUS,O.NONE,O.MULTISCALE,600,91,134,95,100,100,80,45,35,300,D.SLOW,50,!1),new M(A.MEWTWO,1,!1,!0,!1,"Genetic Pokémon",t.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,D.SLOW,null,!1,!0,new Y("Normal","",t.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,!1,null,!0),new Y("Mega X",eA.MEGA_X,t.PSYCHIC,t.FIGHTING,2.3,127,O.STEADFAST,O.NONE,O.STEADFAST,780,106,190,100,154,100,130,3,0,340),new Y("Mega Y",eA.MEGA_Y,t.PSYCHIC,null,1.5,33,O.INSOMNIA,O.NONE,O.INSOMNIA,780,106,150,70,194,120,140,3,0,340)),new M(A.MEW,1,!1,!1,!0,"New Species Pokémon",t.PSYCHIC,null,.4,4,O.SYNCHRONIZE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,D.MEDIUM_SLOW,null,!1),new M(A.CHIKORITA,2,!1,!1,!1,"Leaf Pokémon",t.GRASS,null,.9,6.4,O.OVERGROW,O.NONE,O.LEAF_GUARD,318,45,49,65,49,65,45,45,70,64,D.MEDIUM_SLOW,87.5,!1),new M(A.BAYLEEF,2,!1,!1,!1,"Leaf Pokémon",t.GRASS,null,1.2,15.8,O.OVERGROW,O.NONE,O.LEAF_GUARD,405,60,62,80,63,80,60,45,70,142,D.MEDIUM_SLOW,87.5,!1),new M(A.MEGANIUM,2,!1,!1,!1,"Herb Pokémon",t.GRASS,null,1.8,100.5,O.OVERGROW,O.NONE,O.LEAF_GUARD,525,80,82,100,83,100,80,45,70,263,D.MEDIUM_SLOW,87.5,!0),new M(A.CYNDAQUIL,2,!1,!1,!1,"Fire Mouse Pokémon",t.FIRE,null,.5,7.9,O.BLAZE,O.NONE,O.FLASH_FIRE,309,39,52,43,60,50,65,45,70,62,D.MEDIUM_SLOW,87.5,!1),new M(A.QUILAVA,2,!1,!1,!1,"Volcano Pokémon",t.FIRE,null,.9,19,O.BLAZE,O.NONE,O.FLASH_FIRE,405,58,64,58,80,65,80,45,70,142,D.MEDIUM_SLOW,87.5,!1),new M(A.TYPHLOSION,2,!1,!1,!1,"Volcano Pokémon",t.FIRE,null,1.7,79.5,O.BLAZE,O.NONE,O.FLASH_FIRE,534,78,84,78,109,85,100,45,70,267,D.MEDIUM_SLOW,87.5,!1),new M(A.TOTODILE,2,!1,!1,!1,"Big Jaw Pokémon",t.WATER,null,.6,9.5,O.TORRENT,O.NONE,O.SHEER_FORCE,314,50,65,64,44,48,43,45,70,63,D.MEDIUM_SLOW,87.5,!1),new M(A.CROCONAW,2,!1,!1,!1,"Big Jaw Pokémon",t.WATER,null,1.1,25,O.TORRENT,O.NONE,O.SHEER_FORCE,405,65,80,80,59,63,58,45,70,142,D.MEDIUM_SLOW,87.5,!1),new M(A.FERALIGATR,2,!1,!1,!1,"Big Jaw Pokémon",t.WATER,null,2.3,88.8,O.TORRENT,O.NONE,O.SHEER_FORCE,530,85,105,100,79,83,78,45,70,265,D.MEDIUM_SLOW,87.5,!1),new M(A.SENTRET,2,!1,!1,!1,"Scout Pokémon",t.NORMAL,null,.8,6,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,215,35,46,34,35,45,20,255,70,43,D.MEDIUM_FAST,50,!1),new M(A.FURRET,2,!1,!1,!1,"Long Body Pokémon",t.NORMAL,null,1.8,32.5,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,415,85,76,64,45,55,90,90,70,145,D.MEDIUM_FAST,50,!1),new M(A.HOOTHOOT,2,!1,!1,!1,"Owl Pokémon",t.NORMAL,t.FLYING,.7,21.2,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,262,60,30,30,36,56,50,255,50,52,D.MEDIUM_FAST,50,!1),new M(A.NOCTOWL,2,!1,!1,!1,"Owl Pokémon",t.NORMAL,t.FLYING,1.6,40.8,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,452,100,50,50,86,96,70,90,50,158,D.MEDIUM_FAST,50,!1),new M(A.LEDYBA,2,!1,!1,!1,"Five Star Pokémon",t.BUG,t.FLYING,1,10.8,O.SWARM,O.EARLY_BIRD,O.RATTLED,265,40,20,30,40,80,55,255,70,53,D.FAST,50,!0),new M(A.LEDIAN,2,!1,!1,!1,"Five Star Pokémon",t.BUG,t.FLYING,1.4,35.6,O.SWARM,O.EARLY_BIRD,O.IRON_FIST,390,55,35,50,55,110,85,90,70,137,D.FAST,50,!0),new M(A.SPINARAK,2,!1,!1,!1,"String Spit Pokémon",t.BUG,t.POISON,.5,8.5,O.SWARM,O.INSOMNIA,O.SNIPER,250,40,60,40,40,40,30,255,70,50,D.FAST,50,!1),new M(A.ARIADOS,2,!1,!1,!1,"Long Leg Pokémon",t.BUG,t.POISON,1.1,33.5,O.SWARM,O.INSOMNIA,O.SNIPER,400,70,90,70,60,70,40,90,70,140,D.FAST,50,!1),new M(A.CROBAT,2,!1,!1,!1,"Bat Pokémon",t.POISON,t.FLYING,1.8,75,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,535,85,90,80,70,80,130,90,50,268,D.MEDIUM_FAST,50,!1),new M(A.CHINCHOU,2,!1,!1,!1,"Angler Pokémon",t.WATER,t.ELECTRIC,.5,12,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,330,75,38,38,56,56,67,190,50,66,D.SLOW,50,!1),new M(A.LANTURN,2,!1,!1,!1,"Light Pokémon",t.WATER,t.ELECTRIC,1.2,22.5,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,460,125,58,58,76,76,67,75,50,161,D.SLOW,50,!1),new M(A.PICHU,2,!1,!1,!1,"Tiny Mouse Pokémon",t.ELECTRIC,null,.3,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,D.MEDIUM_FAST,50,!1,!1,new Y("Normal","",t.ELECTRIC,null,1.4,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0),new Y("Spiky-Eared","spiky",t.ELECTRIC,null,1.4,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0)),new M(A.CLEFFA,2,!1,!1,!1,"Star Shape Pokémon",t.FAIRY,null,.3,3,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,218,50,25,28,45,55,15,150,140,44,D.FAST,25,!1),new M(A.IGGLYBUFF,2,!1,!1,!1,"Balloon Pokémon",t.NORMAL,t.FAIRY,.3,1,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,210,90,30,15,40,20,15,170,50,42,D.FAST,25,!1),new M(A.TOGEPI,2,!1,!1,!1,"Spike Ball Pokémon",t.FAIRY,null,.3,1.5,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,245,35,20,65,40,65,20,190,50,49,D.FAST,87.5,!1),new M(A.TOGETIC,2,!1,!1,!1,"Happiness Pokémon",t.FAIRY,t.FLYING,.6,3.2,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,405,55,40,85,80,105,40,75,50,142,D.FAST,87.5,!1),new M(A.NATU,2,!1,!1,!1,"Tiny Bird Pokémon",t.PSYCHIC,t.FLYING,.2,2,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,320,40,50,45,70,45,70,190,50,64,D.MEDIUM_FAST,50,!1),new M(A.XATU,2,!1,!1,!1,"Mystic Pokémon",t.PSYCHIC,t.FLYING,1.5,15,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,470,65,75,70,95,70,95,75,50,165,D.MEDIUM_FAST,50,!0),new M(A.MAREEP,2,!1,!1,!1,"Wool Pokémon",t.ELECTRIC,null,.6,7.8,O.STATIC,O.NONE,O.PLUS,280,55,40,40,65,45,35,235,70,56,D.MEDIUM_SLOW,50,!1),new M(A.FLAAFFY,2,!1,!1,!1,"Wool Pokémon",t.ELECTRIC,null,.8,13.3,O.STATIC,O.NONE,O.PLUS,365,70,55,55,80,60,45,120,70,128,D.MEDIUM_SLOW,50,!1),new M(A.AMPHAROS,2,!1,!1,!1,"Light Pokémon",t.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,255,D.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",t.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,255,!1,null,!0),new Y("Mega",eA.MEGA,t.ELECTRIC,t.DRAGON,1.4,61.5,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,610,90,95,105,165,110,45,45,70,255)),new M(A.BELLOSSOM,2,!1,!1,!1,"Flower Pokémon",t.GRASS,null,.4,5.8,O.CHLOROPHYLL,O.NONE,O.HEALER,490,75,80,95,90,100,50,45,50,245,D.MEDIUM_SLOW,50,!1),new M(A.MARILL,2,!1,!1,!1,"Aqua Mouse Pokémon",t.WATER,t.FAIRY,.4,8.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,250,70,20,50,20,50,40,190,50,88,D.FAST,50,!1),new M(A.AZUMARILL,2,!1,!1,!1,"Aqua Rabbit Pokémon",t.WATER,t.FAIRY,.8,28.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,420,100,50,80,60,80,50,75,50,210,D.FAST,50,!1),new M(A.SUDOWOODO,2,!1,!1,!1,"Imitation Pokémon",t.ROCK,null,1.2,38,O.STURDY,O.ROCK_HEAD,O.RATTLED,410,70,100,115,30,65,30,65,50,144,D.MEDIUM_FAST,50,!0),new M(A.POLITOED,2,!1,!1,!1,"Frog Pokémon",t.WATER,null,1.1,33.9,O.WATER_ABSORB,O.DAMP,O.DRIZZLE,500,90,75,75,90,100,70,45,50,250,D.MEDIUM_SLOW,50,!0),new M(A.HOPPIP,2,!1,!1,!1,"Cottonweed Pokémon",t.GRASS,t.FLYING,.4,.5,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,250,35,35,40,35,55,50,255,70,50,D.MEDIUM_SLOW,50,!1),new M(A.SKIPLOOM,2,!1,!1,!1,"Cottonweed Pokémon",t.GRASS,t.FLYING,.6,1,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,340,55,45,50,45,65,80,120,70,119,D.MEDIUM_SLOW,50,!1),new M(A.JUMPLUFF,2,!1,!1,!1,"Cottonweed Pokémon",t.GRASS,t.FLYING,.8,3,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,460,75,55,70,55,95,110,45,70,230,D.MEDIUM_SLOW,50,!1),new M(A.AIPOM,2,!1,!1,!1,"Long Tail Pokémon",t.NORMAL,null,.8,11.5,O.RUN_AWAY,O.PICKUP,O.SKILL_LINK,360,55,70,55,40,55,85,45,70,72,D.FAST,50,!0),new M(A.SUNKERN,2,!1,!1,!1,"Seed Pokémon",t.GRASS,null,.3,1.8,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,180,30,30,30,30,30,30,235,70,36,D.MEDIUM_SLOW,50,!1),new M(A.SUNFLORA,2,!1,!1,!1,"Sun Pokémon",t.GRASS,null,.8,8.5,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,425,75,75,55,105,85,30,120,70,149,D.MEDIUM_SLOW,50,!1),new M(A.YANMA,2,!1,!1,!1,"Clear Wing Pokémon",t.BUG,t.FLYING,1.2,38,O.SPEED_BOOST,O.COMPOUND_EYES,O.FRISK,390,65,65,45,75,45,95,75,70,78,D.MEDIUM_FAST,50,!1),new M(A.WOOPER,2,!1,!1,!1,"Water Fish Pokémon",t.WATER,t.GROUND,.4,8.5,O.DAMP,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,D.MEDIUM_FAST,50,!0),new M(A.QUAGSIRE,2,!1,!1,!1,"Water Fish Pokémon",t.WATER,t.GROUND,1.4,75,O.DAMP,O.WATER_ABSORB,O.UNAWARE,430,95,85,85,65,65,35,90,50,151,D.MEDIUM_FAST,50,!0),new M(A.ESPEON,2,!1,!1,!1,"Sun Pokémon",t.PSYCHIC,null,.9,26.5,O.SYNCHRONIZE,O.NONE,O.MAGIC_BOUNCE,525,65,65,60,130,95,110,45,50,184,D.MEDIUM_FAST,87.5,!1),new M(A.UMBREON,2,!1,!1,!1,"Moonlight Pokémon",t.DARK,null,1,27,O.SYNCHRONIZE,O.NONE,O.INNER_FOCUS,525,95,65,110,60,130,65,45,35,184,D.MEDIUM_FAST,87.5,!1),new M(A.MURKROW,2,!1,!1,!1,"Darkness Pokémon",t.DARK,t.FLYING,.5,2.1,O.INSOMNIA,O.SUPER_LUCK,O.PRANKSTER,405,60,85,42,85,42,91,30,35,81,D.MEDIUM_SLOW,50,!0),new M(A.SLOWKING,2,!1,!1,!1,"Royal Pokémon",t.WATER,t.PSYCHIC,2,79.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,80,100,110,30,70,50,172,D.MEDIUM_FAST,50,!1),new M(A.MISDREAVUS,2,!1,!1,!1,"Screech Pokémon",t.GHOST,null,.7,1,O.LEVITATE,O.NONE,O.NONE,435,60,60,60,85,85,85,45,35,87,D.FAST,50,!1),new M(A.UNOWN,2,!1,!1,!1,"Symbol Pokémon",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,D.MEDIUM_FAST,null,!1,!1,new Y("A","a",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("B","b",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("C","c",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("D","d",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("E","e",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("F","f",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("G","g",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("H","h",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("I","i",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("J","j",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("K","k",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("L","l",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("M","m",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("N","n",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("O","o",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("P","p",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("Q","q",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("R","r",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("S","s",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("T","t",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("U","u",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("V","v",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("W","w",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("X","x",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("Y","y",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("Z","z",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("!","exclamation",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new Y("?","question",t.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0)),new M(A.WOBBUFFET,2,!1,!1,!1,"Patient Pokémon",t.PSYCHIC,null,1.3,28.5,O.SHADOW_TAG,O.NONE,O.TELEPATHY,405,190,33,58,33,58,33,45,50,142,D.MEDIUM_FAST,50,!0),new M(A.GIRAFARIG,2,!1,!1,!1,"Long Neck Pokémon",t.NORMAL,t.PSYCHIC,1.5,41.5,O.INNER_FOCUS,O.EARLY_BIRD,O.SAP_SIPPER,455,70,80,65,90,65,85,60,70,159,D.MEDIUM_FAST,50,!0),new M(A.PINECO,2,!1,!1,!1,"Bagworm Pokémon",t.BUG,null,.6,7.2,O.STURDY,O.NONE,O.OVERCOAT,290,50,65,90,35,35,15,190,70,58,D.MEDIUM_FAST,50,!1),new M(A.FORRETRESS,2,!1,!1,!1,"Bagworm Pokémon",t.BUG,t.STEEL,1.2,125.8,O.STURDY,O.NONE,O.OVERCOAT,465,75,90,140,60,60,40,75,70,163,D.MEDIUM_FAST,50,!1),new M(A.DUNSPARCE,2,!1,!1,!1,"Land Snake Pokémon",t.NORMAL,null,1.5,14,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,415,100,70,70,65,65,45,190,50,145,D.MEDIUM_FAST,50,!1),new M(A.GLIGAR,2,!1,!1,!1,"Fly Scorpion Pokémon",t.GROUND,t.FLYING,1.1,64.8,O.HYPER_CUTTER,O.SAND_VEIL,O.IMMUNITY,430,65,75,105,35,65,85,60,70,86,D.MEDIUM_SLOW,50,!0),new M(A.STEELIX,2,!1,!1,!1,"Iron Snake Pokémon",t.STEEL,t.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,D.MEDIUM_FAST,50,!0,!0,new Y("Normal","",t.STEEL,t.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,!0,null,!0),new Y("Mega",eA.MEGA,t.STEEL,t.GROUND,10.5,740,O.SAND_FORCE,O.SAND_FORCE,O.SAND_FORCE,610,75,125,230,55,95,30,25,50,179,!0)),new M(A.SNUBBULL,2,!1,!1,!1,"Fairy Pokémon",t.FAIRY,null,.6,7.8,O.INTIMIDATE,O.RUN_AWAY,O.RATTLED,300,60,80,50,40,40,30,190,70,60,D.FAST,25,!1),new M(A.GRANBULL,2,!1,!1,!1,"Fairy Pokémon",t.FAIRY,null,1.4,48.7,O.INTIMIDATE,O.QUICK_FEET,O.RATTLED,450,90,120,75,60,60,45,75,70,158,D.FAST,25,!1),new M(A.QWILFISH,2,!1,!1,!1,"Balloon Pokémon",t.WATER,t.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,D.MEDIUM_FAST,50,!1),new M(A.SCIZOR,2,!1,!1,!1,"Pincer Pokémon",t.BUG,t.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,D.MEDIUM_FAST,50,!0,!0,new Y("Normal","",t.BUG,t.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,!0,null,!0),new Y("Mega",eA.MEGA,t.BUG,t.STEEL,2,125,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,600,70,150,140,65,100,75,25,50,175,!0)),new M(A.SHUCKLE,2,!1,!1,!1,"Mold Pokémon",t.BUG,t.ROCK,.6,20.5,O.STURDY,O.GLUTTONY,O.CONTRARY,505,20,10,230,10,230,5,190,50,177,D.MEDIUM_SLOW,50,!1),new M(A.HERACROSS,2,!1,!1,!1,"Single Horn Pokémon",t.BUG,t.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,D.SLOW,50,!0,!0,new Y("Normal","",t.BUG,t.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,!0,null,!0),new Y("Mega",eA.MEGA,t.BUG,t.FIGHTING,1.7,62.5,O.SKILL_LINK,O.SKILL_LINK,O.SKILL_LINK,600,80,185,115,40,105,75,45,50,175,!0)),new M(A.SNEASEL,2,!1,!1,!1,"Sharp Claw Pokémon",t.DARK,t.ICE,.9,28,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,D.MEDIUM_SLOW,50,!0),new M(A.TEDDIURSA,2,!1,!1,!1,"Little Bear Pokémon",t.NORMAL,null,.6,8.8,O.PICKUP,O.QUICK_FEET,O.HONEY_GATHER,330,60,80,50,50,50,40,120,70,66,D.MEDIUM_FAST,50,!1),new M(A.URSARING,2,!1,!1,!1,"Hibernator Pokémon",t.NORMAL,null,1.8,125.8,O.GUTS,O.QUICK_FEET,O.UNNERVE,500,90,130,75,75,75,55,60,70,175,D.MEDIUM_FAST,50,!0),new M(A.SLUGMA,2,!1,!1,!1,"Lava Pokémon",t.FIRE,null,.7,35,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,250,40,40,40,70,40,20,190,70,50,D.MEDIUM_FAST,50,!1),new M(A.MAGCARGO,2,!1,!1,!1,"Lava Pokémon",t.FIRE,t.ROCK,.8,55,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,430,60,50,120,90,80,30,75,70,151,D.MEDIUM_FAST,50,!1),new M(A.SWINUB,2,!1,!1,!1,"Pig Pokémon",t.ICE,t.GROUND,.4,6.5,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,250,50,50,40,30,30,50,225,50,50,D.SLOW,50,!1),new M(A.PILOSWINE,2,!1,!1,!1,"Swine Pokémon",t.ICE,t.GROUND,1.1,55.8,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,450,100,100,80,60,60,50,75,50,158,D.SLOW,50,!0),new M(A.CORSOLA,2,!1,!1,!1,"Coral Pokémon",t.WATER,t.ROCK,.6,5,O.HUSTLE,O.NATURAL_CURE,O.REGENERATOR,410,65,55,95,65,95,35,60,50,144,D.FAST,25,!1),new M(A.REMORAID,2,!1,!1,!1,"Jet Pokémon",t.WATER,null,.6,12,O.HUSTLE,O.SNIPER,O.MOODY,300,35,65,35,65,35,65,190,50,60,D.MEDIUM_FAST,50,!1),new M(A.OCTILLERY,2,!1,!1,!1,"Jet Pokémon",t.WATER,null,.9,28.5,O.SUCTION_CUPS,O.SNIPER,O.MOODY,480,75,105,75,105,75,45,75,50,168,D.MEDIUM_FAST,50,!0),new M(A.DELIBIRD,2,!1,!1,!1,"Delivery Pokémon",t.ICE,t.FLYING,.9,16,O.VITAL_SPIRIT,O.HUSTLE,O.INSOMNIA,330,45,55,45,65,45,75,45,50,116,D.FAST,50,!1),new M(A.MANTINE,2,!1,!1,!1,"Kite Pokémon",t.WATER,t.FLYING,2.1,220,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,485,85,40,70,80,140,70,25,50,170,D.SLOW,50,!1),new M(A.SKARMORY,2,!1,!1,!1,"Armor Bird Pokémon",t.STEEL,t.FLYING,1.7,50.5,O.KEEN_EYE,O.STURDY,O.WEAK_ARMOR,465,65,80,140,40,70,70,25,50,163,D.SLOW,50,!1),new M(A.HOUNDOUR,2,!1,!1,!1,"Dark Pokémon",t.DARK,t.FIRE,.6,10.8,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,330,45,60,30,80,50,65,120,35,66,D.SLOW,50,!1),new M(A.HOUNDOOM,2,!1,!1,!1,"Dark Pokémon",t.DARK,t.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,D.SLOW,50,!0,!0,new Y("Normal","",t.DARK,t.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,!0,null,!0),new Y("Mega",eA.MEGA,t.DARK,t.FIRE,1.9,49.5,O.SOLAR_POWER,O.SOLAR_POWER,O.SOLAR_POWER,600,75,90,90,140,90,115,45,35,175,!0)),new M(A.KINGDRA,2,!1,!1,!1,"Dragon Pokémon",t.WATER,t.DRAGON,1.8,152,O.SWIFT_SWIM,O.SNIPER,O.DAMP,540,75,95,95,95,95,85,45,50,270,D.MEDIUM_FAST,50,!1),new M(A.PHANPY,2,!1,!1,!1,"Long Nose Pokémon",t.GROUND,null,.5,33.5,O.PICKUP,O.NONE,O.SAND_VEIL,330,90,60,60,40,40,40,120,70,66,D.MEDIUM_FAST,50,!1),new M(A.DONPHAN,2,!1,!1,!1,"Armor Pokémon",t.GROUND,null,1.1,120,O.STURDY,O.NONE,O.SAND_VEIL,500,90,120,120,60,60,50,60,70,175,D.MEDIUM_FAST,50,!0),new M(A.PORYGON2,2,!1,!1,!1,"Virtual Pokémon",t.NORMAL,null,.6,32.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,515,85,80,90,105,95,60,45,50,180,D.MEDIUM_FAST,null,!1),new M(A.STANTLER,2,!1,!1,!1,"Big Horn Pokémon",t.NORMAL,null,1.4,71.2,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,465,73,95,62,85,65,85,45,70,163,D.SLOW,50,!1),new M(A.SMEARGLE,2,!1,!1,!1,"Painter Pokémon",t.NORMAL,null,1.2,58,O.OWN_TEMPO,O.TECHNICIAN,O.MOODY,250,55,20,35,20,45,75,45,70,88,D.FAST,50,!1),new M(A.TYROGUE,2,!1,!1,!1,"Scuffle Pokémon",t.FIGHTING,null,.7,21,O.GUTS,O.STEADFAST,O.VITAL_SPIRIT,210,35,35,35,35,35,35,75,50,42,D.MEDIUM_FAST,100,!1),new M(A.HITMONTOP,2,!1,!1,!1,"Handstand Pokémon",t.FIGHTING,null,1.4,48,O.INTIMIDATE,O.TECHNICIAN,O.STEADFAST,455,50,95,95,35,110,70,45,50,159,D.MEDIUM_FAST,100,!1),new M(A.SMOOCHUM,2,!1,!1,!1,"Kiss Pokémon",t.ICE,t.PSYCHIC,.4,6,O.OBLIVIOUS,O.FOREWARN,O.HYDRATION,305,45,30,15,85,65,65,45,50,61,D.MEDIUM_FAST,0,!1),new M(A.ELEKID,2,!1,!1,!1,"Electric Pokémon",t.ELECTRIC,null,.6,23.5,O.STATIC,O.NONE,O.VITAL_SPIRIT,360,45,63,37,65,55,95,45,50,72,D.MEDIUM_FAST,75,!1),new M(A.MAGBY,2,!1,!1,!1,"Live Coal Pokémon",t.FIRE,null,.7,21.4,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,365,45,75,37,70,55,83,45,50,73,D.MEDIUM_FAST,75,!1),new M(A.MILTANK,2,!1,!1,!1,"Milk Cow Pokémon",t.NORMAL,null,1.2,75.5,O.THICK_FAT,O.SCRAPPY,O.SAP_SIPPER,490,95,80,105,40,70,100,45,50,172,D.SLOW,0,!1),new M(A.BLISSEY,2,!1,!1,!1,"Happiness Pokémon",t.NORMAL,null,1.5,46.8,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,540,255,10,10,75,135,55,30,140,608,D.FAST,0,!1),new M(A.RAIKOU,2,!0,!1,!1,"Thunder Pokémon",t.ELECTRIC,null,1.9,178,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,90,85,75,115,100,115,3,35,290,D.SLOW,null,!1),new M(A.ENTEI,2,!0,!1,!1,"Volcano Pokémon",t.FIRE,null,2.1,198,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,115,115,85,90,75,100,3,35,290,D.SLOW,null,!1),new M(A.SUICUNE,2,!0,!1,!1,"Aurora Pokémon",t.WATER,null,2,187,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,100,75,115,90,115,85,3,35,290,D.SLOW,null,!1),new M(A.LARVITAR,2,!1,!1,!1,"Rock Skin Pokémon",t.ROCK,t.GROUND,.6,72,O.GUTS,O.NONE,O.SAND_VEIL,300,50,64,50,45,50,41,45,35,60,D.SLOW,50,!1),new M(A.PUPITAR,2,!1,!1,!1,"Hard Shell Pokémon",t.ROCK,t.GROUND,1.2,152,O.SHED_SKIN,O.NONE,O.SHED_SKIN,410,70,84,70,65,70,51,45,35,144,D.SLOW,50,!1),new M(A.TYRANITAR,2,!1,!1,!1,"Armor Pokémon",t.ROCK,t.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,D.SLOW,50,!1,!0,new Y("Normal","",t.ROCK,t.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,!1,null,!0),new Y("Mega",eA.MEGA,t.ROCK,t.DARK,2.5,255,O.SAND_STREAM,O.NONE,O.SAND_STREAM,700,100,164,150,95,120,71,45,35,300)),new M(A.LUGIA,2,!1,!0,!1,"Diving Pokémon",t.PSYCHIC,t.FLYING,5.2,216,O.PRESSURE,O.NONE,O.MULTISCALE,680,106,90,130,90,154,110,3,0,340,D.SLOW,null,!1),new M(A.HO_OH,2,!1,!0,!1,"Rainbow Pokémon",t.FIRE,t.FLYING,3.8,199,O.PRESSURE,O.NONE,O.REGENERATOR,680,106,130,90,110,154,90,3,0,340,D.SLOW,null,!1),new M(A.CELEBI,2,!1,!1,!0,"Time Travel Pokémon",t.PSYCHIC,t.GRASS,.6,5,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,D.MEDIUM_SLOW,null,!1),new M(A.TREECKO,3,!1,!1,!1,"Wood Gecko Pokémon",t.GRASS,null,.5,5,O.OVERGROW,O.NONE,O.UNBURDEN,310,40,45,35,65,55,70,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.GROVYLE,3,!1,!1,!1,"Wood Gecko Pokémon",t.GRASS,null,.9,21.6,O.OVERGROW,O.NONE,O.UNBURDEN,405,50,65,45,85,65,95,45,50,142,D.MEDIUM_SLOW,87.5,!1),new M(A.SCEPTILE,3,!1,!1,!1,"Forest Pokémon",t.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,!1,null,!0),new Y("Mega",eA.MEGA,t.GRASS,t.DRAGON,1.9,55.2,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,630,70,110,75,145,85,145,45,50,265)),new M(A.TORCHIC,3,!1,!1,!1,"Chick Pokémon",t.FIRE,null,.4,2.5,O.BLAZE,O.NONE,O.SPEED_BOOST,310,45,60,40,70,50,45,45,50,62,D.MEDIUM_SLOW,87.5,!0),new M(A.COMBUSKEN,3,!1,!1,!1,"Young Fowl Pokémon",t.FIRE,t.FIGHTING,.9,19.5,O.BLAZE,O.NONE,O.SPEED_BOOST,405,60,85,60,85,60,55,45,50,142,D.MEDIUM_SLOW,87.5,!0),new M(A.BLAZIKEN,3,!1,!1,!1,"Blaze Pokémon",t.FIRE,t.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,D.MEDIUM_SLOW,87.5,!0,!0,new Y("Normal","",t.FIRE,t.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,!0,null,!0),new Y("Mega",eA.MEGA,t.FIRE,t.FIGHTING,1.9,52,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,630,80,160,80,130,80,100,45,50,265,!0)),new M(A.MUDKIP,3,!1,!1,!1,"Mud Fish Pokémon",t.WATER,null,.4,7.6,O.TORRENT,O.NONE,O.DAMP,310,50,70,50,50,50,40,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.MARSHTOMP,3,!1,!1,!1,"Mud Fish Pokémon",t.WATER,t.GROUND,.7,28,O.TORRENT,O.NONE,O.DAMP,405,70,85,70,60,70,50,45,50,142,D.MEDIUM_SLOW,87.5,!1),new M(A.SWAMPERT,3,!1,!1,!1,"Mud Fish Pokémon",t.WATER,t.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.WATER,t.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,!1,null,!0),new Y("Mega",eA.MEGA,t.WATER,t.GROUND,1.9,102,O.SWIFT_SWIM,O.NONE,O.SWIFT_SWIM,635,100,150,110,95,110,70,45,50,268)),new M(A.POOCHYENA,3,!1,!1,!1,"Bite Pokémon",t.DARK,null,.5,13.6,O.RUN_AWAY,O.QUICK_FEET,O.RATTLED,220,35,55,35,30,30,35,255,70,56,D.MEDIUM_FAST,50,!1),new M(A.MIGHTYENA,3,!1,!1,!1,"Bite Pokémon",t.DARK,null,1,37,O.INTIMIDATE,O.QUICK_FEET,O.MOXIE,420,70,90,70,60,60,70,127,70,147,D.MEDIUM_FAST,50,!1),new M(A.ZIGZAGOON,3,!1,!1,!1,"Tiny Raccoon Pokémon",t.NORMAL,null,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,D.MEDIUM_FAST,50,!1),new M(A.LINOONE,3,!1,!1,!1,"Rushing Pokémon",t.NORMAL,null,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,D.MEDIUM_FAST,50,!1),new M(A.WURMPLE,3,!1,!1,!1,"Worm Pokémon",t.BUG,null,.3,3.6,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,45,35,20,30,20,255,70,56,D.MEDIUM_FAST,50,!1),new M(A.SILCOON,3,!1,!1,!1,"Cocoon Pokémon",t.BUG,null,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,D.MEDIUM_FAST,50,!1),new M(A.BEAUTIFLY,3,!1,!1,!1,"Butterfly Pokémon",t.BUG,t.FLYING,1,28.4,O.SWARM,O.NONE,O.RIVALRY,395,60,70,50,100,50,65,45,70,198,D.MEDIUM_FAST,50,!0),new M(A.CASCOON,3,!1,!1,!1,"Cocoon Pokémon",t.BUG,null,.7,11.5,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,D.MEDIUM_FAST,50,!1),new M(A.DUSTOX,3,!1,!1,!1,"Poison Moth Pokémon",t.BUG,t.POISON,1.2,31.6,O.SHIELD_DUST,O.NONE,O.COMPOUND_EYES,385,60,50,70,50,90,65,45,70,193,D.MEDIUM_FAST,50,!0),new M(A.LOTAD,3,!1,!1,!1,"Water Weed Pokémon",t.WATER,t.GRASS,.5,2.6,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,220,40,30,30,40,50,30,255,50,44,D.MEDIUM_SLOW,50,!1),new M(A.LOMBRE,3,!1,!1,!1,"Jolly Pokémon",t.WATER,t.GRASS,1.2,32.5,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,340,60,50,50,60,70,50,120,50,119,D.MEDIUM_SLOW,50,!1),new M(A.LUDICOLO,3,!1,!1,!1,"Carefree Pokémon",t.WATER,t.GRASS,1.5,55,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,480,80,70,70,90,100,70,45,50,240,D.MEDIUM_SLOW,50,!0),new M(A.SEEDOT,3,!1,!1,!1,"Acorn Pokémon",t.GRASS,null,.5,4,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,220,40,40,50,30,30,30,255,50,44,D.MEDIUM_SLOW,50,!1),new M(A.NUZLEAF,3,!1,!1,!1,"Wily Pokémon",t.GRASS,t.DARK,1,28,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,340,70,70,40,60,40,60,120,50,119,D.MEDIUM_SLOW,50,!0),new M(A.SHIFTRY,3,!1,!1,!1,"Wicked Pokémon",t.GRASS,t.DARK,1.3,59.6,O.CHLOROPHYLL,O.WIND_RIDER,O.PICKPOCKET,480,90,100,60,90,60,80,45,50,240,D.MEDIUM_SLOW,50,!0),new M(A.TAILLOW,3,!1,!1,!1,"Tiny Swallow Pokémon",t.NORMAL,t.FLYING,.3,2.3,O.GUTS,O.NONE,O.SCRAPPY,270,40,55,30,30,30,85,200,70,54,D.MEDIUM_SLOW,50,!1),new M(A.SWELLOW,3,!1,!1,!1,"Swallow Pokémon",t.NORMAL,t.FLYING,.7,19.8,O.GUTS,O.NONE,O.SCRAPPY,455,60,85,60,75,50,125,45,70,159,D.MEDIUM_SLOW,50,!1),new M(A.WINGULL,3,!1,!1,!1,"Seagull Pokémon",t.WATER,t.FLYING,.6,9.5,O.KEEN_EYE,O.HYDRATION,O.RAIN_DISH,270,40,30,30,55,30,85,190,50,54,D.MEDIUM_FAST,50,!1),new M(A.PELIPPER,3,!1,!1,!1,"Water Bird Pokémon",t.WATER,t.FLYING,1.2,28,O.KEEN_EYE,O.DRIZZLE,O.RAIN_DISH,440,60,50,100,95,70,65,45,50,154,D.MEDIUM_FAST,50,!1),new M(A.RALTS,3,!1,!1,!1,"Feeling Pokémon",t.PSYCHIC,t.FAIRY,.4,6.6,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,198,28,25,25,45,35,40,235,35,40,D.SLOW,50,!1),new M(A.KIRLIA,3,!1,!1,!1,"Emotion Pokémon",t.PSYCHIC,t.FAIRY,.8,20.2,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,278,38,35,35,65,55,50,120,35,97,D.SLOW,50,!1),new M(A.GARDEVOIR,3,!1,!1,!1,"Embrace Pokémon",t.PSYCHIC,t.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,D.SLOW,50,!1,!0,new Y("Normal","",t.PSYCHIC,t.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,!1,null,!0),new Y("Mega",eA.MEGA,t.PSYCHIC,t.FAIRY,1.6,48.4,O.PIXILATE,O.PIXILATE,O.PIXILATE,618,68,85,65,165,135,100,45,35,259)),new M(A.SURSKIT,3,!1,!1,!1,"Pond Skater Pokémon",t.BUG,t.WATER,.5,1.7,O.SWIFT_SWIM,O.NONE,O.RAIN_DISH,269,40,30,32,50,52,65,200,70,54,D.MEDIUM_FAST,50,!1),new M(A.MASQUERAIN,3,!1,!1,!1,"Eyeball Pokémon",t.BUG,t.FLYING,.8,3.6,O.INTIMIDATE,O.NONE,O.UNNERVE,454,70,60,62,100,82,80,75,70,159,D.MEDIUM_FAST,50,!1),new M(A.SHROOMISH,3,!1,!1,!1,"Mushroom Pokémon",t.GRASS,null,.4,4.5,O.EFFECT_SPORE,O.POISON_HEAL,O.QUICK_FEET,295,60,40,60,40,60,35,255,70,59,D.FLUCTUATING,50,!1),new M(A.BRELOOM,3,!1,!1,!1,"Mushroom Pokémon",t.GRASS,t.FIGHTING,1.2,39.2,O.EFFECT_SPORE,O.POISON_HEAL,O.TECHNICIAN,460,60,130,80,60,60,70,90,70,161,D.FLUCTUATING,50,!1),new M(A.SLAKOTH,3,!1,!1,!1,"Slacker Pokémon",t.NORMAL,null,.8,24,O.TRUANT,O.NONE,O.STALL,280,60,60,60,35,35,30,255,70,56,D.SLOW,50,!1),new M(A.VIGOROTH,3,!1,!1,!1,"Wild Monkey Pokémon",t.NORMAL,null,1.4,46.5,O.VITAL_SPIRIT,O.NONE,O.INSOMNIA,440,80,80,80,55,55,90,120,70,154,D.SLOW,50,!1),new M(A.SLAKING,3,!1,!1,!1,"Lazy Pokémon",t.NORMAL,null,2,130.5,O.TRUANT,O.NONE,O.STALL,670,150,160,100,95,65,100,45,70,285,D.SLOW,50,!1),new M(A.NINCADA,3,!1,!1,!1,"Trainee Pokémon",t.BUG,t.GROUND,.5,5.5,O.COMPOUND_EYES,O.NONE,O.RUN_AWAY,266,31,45,90,30,30,40,255,50,53,D.ERRATIC,50,!1),new M(A.NINJASK,3,!1,!1,!1,"Ninja Pokémon",t.BUG,t.FLYING,.8,12,O.SPEED_BOOST,O.NONE,O.INFILTRATOR,456,61,90,45,50,50,160,120,50,160,D.ERRATIC,50,!1),new M(A.SHEDINJA,3,!1,!1,!1,"Shed Pokémon",t.BUG,t.GHOST,.8,1.2,O.WONDER_GUARD,O.NONE,O.NONE,236,1,90,45,30,30,40,45,50,83,D.ERRATIC,null,!1),new M(A.WHISMUR,3,!1,!1,!1,"Whisper Pokémon",t.NORMAL,null,.6,16.3,O.SOUNDPROOF,O.NONE,O.RATTLED,240,64,51,23,51,23,28,190,50,48,D.MEDIUM_SLOW,50,!1),new M(A.LOUDRED,3,!1,!1,!1,"Big Voice Pokémon",t.NORMAL,null,1,40.5,O.SOUNDPROOF,O.NONE,O.SCRAPPY,360,84,71,43,71,43,48,120,50,126,D.MEDIUM_SLOW,50,!1),new M(A.EXPLOUD,3,!1,!1,!1,"Loud Noise Pokémon",t.NORMAL,null,1.5,84,O.SOUNDPROOF,O.NONE,O.SCRAPPY,490,104,91,63,91,73,68,45,50,245,D.MEDIUM_SLOW,50,!1),new M(A.MAKUHITA,3,!1,!1,!1,"Guts Pokémon",t.FIGHTING,null,1,86.4,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,237,72,60,30,20,30,25,180,70,47,D.FLUCTUATING,75,!1),new M(A.HARIYAMA,3,!1,!1,!1,"Arm Thrust Pokémon",t.FIGHTING,null,2.3,253.8,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,474,144,120,60,40,60,50,200,70,166,D.FLUCTUATING,75,!1),new M(A.AZURILL,3,!1,!1,!1,"Polka Dot Pokémon",t.NORMAL,t.FAIRY,.2,2,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,190,50,20,40,20,40,20,150,50,38,D.FAST,25,!1),new M(A.NOSEPASS,3,!1,!1,!1,"Compass Pokémon",t.ROCK,null,1,97,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,375,30,45,135,45,90,30,255,70,75,D.MEDIUM_FAST,50,!1),new M(A.SKITTY,3,!1,!1,!1,"Kitten Pokémon",t.NORMAL,null,.6,11,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,260,50,45,45,35,35,50,255,70,52,D.FAST,25,!1),new M(A.DELCATTY,3,!1,!1,!1,"Prim Pokémon",t.NORMAL,null,1.1,32.6,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,400,70,65,65,55,55,90,60,70,140,D.FAST,25,!1),new M(A.SABLEYE,3,!1,!1,!1,"Darkness Pokémon",t.DARK,t.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,D.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",t.DARK,t.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,!1,null,!0),new Y("Mega",eA.MEGA,t.DARK,t.GHOST,.5,161,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,480,50,85,125,85,115,20,45,35,133)),new M(A.MAWILE,3,!1,!1,!1,"Deceiver Pokémon",t.STEEL,t.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,D.FAST,50,!1,!0,new Y("Normal","",t.STEEL,t.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,!1,null,!0),new Y("Mega",eA.MEGA,t.STEEL,t.FAIRY,1,23.5,O.HUGE_POWER,O.HUGE_POWER,O.HUGE_POWER,480,50,105,125,55,95,50,45,50,133)),new M(A.ARON,3,!1,!1,!1,"Iron Armor Pokémon",t.STEEL,t.ROCK,.4,60,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,330,50,70,100,40,40,30,180,35,66,D.SLOW,50,!1),new M(A.LAIRON,3,!1,!1,!1,"Iron Armor Pokémon",t.STEEL,t.ROCK,.9,120,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,430,60,90,140,50,50,40,90,35,151,D.SLOW,50,!1),new M(A.AGGRON,3,!1,!1,!1,"Iron Armor Pokémon",t.STEEL,t.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,D.SLOW,50,!1,!0,new Y("Normal","",t.STEEL,t.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,!1,null,!0),new Y("Mega",eA.MEGA,t.STEEL,null,2.2,395,O.FILTER,O.FILTER,O.FILTER,630,70,140,230,60,80,50,45,35,265)),new M(A.MEDITITE,3,!1,!1,!1,"Meditate Pokémon",t.FIGHTING,t.PSYCHIC,.6,11.2,O.PURE_POWER,O.NONE,O.TELEPATHY,280,30,40,55,40,55,60,180,70,56,D.MEDIUM_FAST,50,!0),new M(A.MEDICHAM,3,!1,!1,!1,"Meditate Pokémon",t.FIGHTING,t.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,D.MEDIUM_FAST,50,!0,!0,new Y("Normal","",t.FIGHTING,t.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,!0,null,!0),new Y("Mega",eA.MEGA,t.FIGHTING,t.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.PURE_POWER,510,60,100,85,80,85,100,90,70,144,!0)),new M(A.ELECTRIKE,3,!1,!1,!1,"Lightning Pokémon",t.ELECTRIC,null,.6,15.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,295,40,45,40,65,40,65,120,50,59,D.SLOW,50,!1),new M(A.MANECTRIC,3,!1,!1,!1,"Discharge Pokémon",t.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,D.SLOW,50,!1,!0,new Y("Normal","",t.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,!1,null,!0),new Y("Mega",eA.MEGA,t.ELECTRIC,null,1.8,44,O.INTIMIDATE,O.INTIMIDATE,O.INTIMIDATE,575,70,75,80,135,80,135,45,50,166)),new M(A.PLUSLE,3,!1,!1,!1,"Cheering Pokémon",t.ELECTRIC,null,.4,4.2,O.PLUS,O.NONE,O.LIGHTNING_ROD,405,60,50,40,85,75,95,200,70,142,D.MEDIUM_FAST,50,!1),new M(A.MINUN,3,!1,!1,!1,"Cheering Pokémon",t.ELECTRIC,null,.4,4.2,O.MINUS,O.NONE,O.VOLT_ABSORB,405,60,40,50,75,85,95,200,70,142,D.MEDIUM_FAST,50,!1),new M(A.VOLBEAT,3,!1,!1,!1,"Firefly Pokémon",t.BUG,null,.7,17.7,O.ILLUMINATE,O.SWARM,O.PRANKSTER,430,65,73,75,47,85,85,150,70,151,D.ERRATIC,100,!1),new M(A.ILLUMISE,3,!1,!1,!1,"Firefly Pokémon",t.BUG,null,.6,17.7,O.OBLIVIOUS,O.TINTED_LENS,O.PRANKSTER,430,65,47,75,73,85,85,150,70,151,D.FLUCTUATING,0,!1),new M(A.ROSELIA,3,!1,!1,!1,"Thorn Pokémon",t.GRASS,t.POISON,.3,2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,400,50,60,45,100,80,65,150,50,140,D.MEDIUM_SLOW,50,!0),new M(A.GULPIN,3,!1,!1,!1,"Stomach Pokémon",t.POISON,null,.4,10.3,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,302,70,43,53,43,53,40,225,70,60,D.FLUCTUATING,50,!0),new M(A.SWALOT,3,!1,!1,!1,"Poison Bag Pokémon",t.POISON,null,1.7,80,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,467,100,73,83,73,83,55,75,70,163,D.FLUCTUATING,50,!0),new M(A.CARVANHA,3,!1,!1,!1,"Savage Pokémon",t.WATER,t.DARK,.8,20.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,305,45,90,20,65,20,65,225,35,61,D.SLOW,50,!1),new M(A.SHARPEDO,3,!1,!1,!1,"Brutal Pokémon",t.WATER,t.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,D.SLOW,50,!1,!0,new Y("Normal","",t.WATER,t.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,!1,null,!0),new Y("Mega",eA.MEGA,t.WATER,t.DARK,2.5,130.3,O.STRONG_JAW,O.NONE,O.STRONG_JAW,560,70,140,70,110,65,105,60,35,161)),new M(A.WAILMER,3,!1,!1,!1,"Ball Whale Pokémon",t.WATER,null,2,130,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,400,130,70,35,70,35,60,125,50,80,D.FLUCTUATING,50,!1),new M(A.WAILORD,3,!1,!1,!1,"Float Whale Pokémon",t.WATER,null,14.5,398,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,500,170,90,45,90,45,60,60,50,175,D.FLUCTUATING,50,!1),new M(A.NUMEL,3,!1,!1,!1,"Numb Pokémon",t.FIRE,t.GROUND,.7,24,O.OBLIVIOUS,O.SIMPLE,O.OWN_TEMPO,305,60,60,40,65,45,35,255,70,61,D.MEDIUM_FAST,50,!0),new M(A.CAMERUPT,3,!1,!1,!1,"Eruption Pokémon",t.FIRE,t.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,D.MEDIUM_FAST,50,!0,!0,new Y("Normal","",t.FIRE,t.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,!0,null,!0),new Y("Mega",eA.MEGA,t.FIRE,t.GROUND,2.5,320.5,O.SHEER_FORCE,O.SHEER_FORCE,O.SHEER_FORCE,560,70,120,100,145,105,20,150,70,161)),new M(A.TORKOAL,3,!1,!1,!1,"Coal Pokémon",t.FIRE,null,.5,80.4,O.WHITE_SMOKE,O.DROUGHT,O.SHELL_ARMOR,470,70,85,140,85,70,20,90,50,165,D.MEDIUM_FAST,50,!1),new M(A.SPOINK,3,!1,!1,!1,"Bounce Pokémon",t.PSYCHIC,null,.7,30.6,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,330,60,25,35,70,80,60,255,70,66,D.FAST,50,!1),new M(A.GRUMPIG,3,!1,!1,!1,"Manipulate Pokémon",t.PSYCHIC,null,.9,71.5,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,470,80,45,65,90,110,80,60,70,165,D.FAST,50,!1),new M(A.SPINDA,3,!1,!1,!1,"Spot Panda Pokémon",t.NORMAL,null,1.1,5,O.OWN_TEMPO,O.TANGLED_FEET,O.CONTRARY,360,60,60,60,60,60,60,255,70,126,D.FAST,50,!1),new M(A.TRAPINCH,3,!1,!1,!1,"Ant Pit Pokémon",t.GROUND,null,.7,15,O.HYPER_CUTTER,O.ARENA_TRAP,O.SHEER_FORCE,290,45,100,45,45,45,10,255,50,58,D.MEDIUM_SLOW,50,!1),new M(A.VIBRAVA,3,!1,!1,!1,"Vibration Pokémon",t.GROUND,t.DRAGON,1.1,15.3,O.LEVITATE,O.NONE,O.NONE,340,50,70,50,50,50,70,120,50,119,D.MEDIUM_SLOW,50,!1),new M(A.FLYGON,3,!1,!1,!1,"Mystic Pokémon",t.GROUND,t.DRAGON,2,82,O.LEVITATE,O.NONE,O.NONE,520,80,100,80,80,80,100,45,50,260,D.MEDIUM_SLOW,50,!1),new M(A.CACNEA,3,!1,!1,!1,"Cactus Pokémon",t.GRASS,null,.4,51.3,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,335,50,85,40,85,40,35,190,35,67,D.MEDIUM_SLOW,50,!1),new M(A.CACTURNE,3,!1,!1,!1,"Scarecrow Pokémon",t.GRASS,t.DARK,1.3,77.4,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,475,70,115,60,115,60,55,60,35,166,D.MEDIUM_SLOW,50,!0),new M(A.SWABLU,3,!1,!1,!1,"Cotton Bird Pokémon",t.NORMAL,t.FLYING,.4,1.2,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,310,45,40,60,40,75,50,255,50,62,D.ERRATIC,50,!1),new M(A.ALTARIA,3,!1,!1,!1,"Humming Pokémon",t.DRAGON,t.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,D.ERRATIC,50,!1,!0,new Y("Normal","",t.DRAGON,t.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,!1,null,!0),new Y("Mega",eA.MEGA,t.DRAGON,t.FAIRY,1.5,20.6,O.PIXILATE,O.NONE,O.PIXILATE,590,75,110,110,110,105,80,45,50,172)),new M(A.ZANGOOSE,3,!1,!1,!1,"Cat Ferret Pokémon",t.NORMAL,null,1.3,40.3,O.IMMUNITY,O.NONE,O.TOXIC_BOOST,458,73,115,60,60,60,90,90,70,160,D.ERRATIC,50,!1),new M(A.SEVIPER,3,!1,!1,!1,"Fang Snake Pokémon",t.POISON,null,2.7,52.5,O.SHED_SKIN,O.NONE,O.INFILTRATOR,458,73,100,60,100,60,65,90,70,160,D.FLUCTUATING,50,!1),new M(A.LUNATONE,3,!1,!1,!1,"Meteorite Pokémon",t.ROCK,t.PSYCHIC,1,168,O.LEVITATE,O.NONE,O.NONE,460,90,55,65,95,85,70,45,50,161,D.FAST,null,!1),new M(A.SOLROCK,3,!1,!1,!1,"Meteorite Pokémon",t.ROCK,t.PSYCHIC,1.2,154,O.LEVITATE,O.NONE,O.NONE,460,90,95,85,55,65,70,45,50,161,D.FAST,null,!1),new M(A.BARBOACH,3,!1,!1,!1,"Whiskers Pokémon",t.WATER,t.GROUND,.4,1.9,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,288,50,48,43,46,41,60,190,50,58,D.MEDIUM_FAST,50,!1),new M(A.WHISCASH,3,!1,!1,!1,"Whiskers Pokémon",t.WATER,t.GROUND,.9,23.6,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,468,110,78,73,76,71,60,75,50,164,D.MEDIUM_FAST,50,!1),new M(A.CORPHISH,3,!1,!1,!1,"Ruffian Pokémon",t.WATER,null,.6,11.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,308,43,80,65,50,35,35,205,50,62,D.FLUCTUATING,50,!1),new M(A.CRAWDAUNT,3,!1,!1,!1,"Rogue Pokémon",t.WATER,t.DARK,1.1,32.8,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,468,63,120,85,90,55,55,155,50,164,D.FLUCTUATING,50,!1),new M(A.BALTOY,3,!1,!1,!1,"Clay Doll Pokémon",t.GROUND,t.PSYCHIC,.5,21.5,O.LEVITATE,O.NONE,O.NONE,300,40,40,55,40,70,55,255,50,60,D.MEDIUM_FAST,null,!1),new M(A.CLAYDOL,3,!1,!1,!1,"Clay Doll Pokémon",t.GROUND,t.PSYCHIC,1.5,108,O.LEVITATE,O.NONE,O.NONE,500,60,70,105,70,120,75,90,50,175,D.MEDIUM_FAST,null,!1),new M(A.LILEEP,3,!1,!1,!1,"Sea Lily Pokémon",t.ROCK,t.GRASS,1,23.8,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,355,66,41,77,61,87,23,45,50,71,D.ERRATIC,87.5,!1),new M(A.CRADILY,3,!1,!1,!1,"Barnacle Pokémon",t.ROCK,t.GRASS,1.5,60.4,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,495,86,81,97,81,107,43,45,50,173,D.ERRATIC,87.5,!1),new M(A.ANORITH,3,!1,!1,!1,"Old Shrimp Pokémon",t.ROCK,t.BUG,.7,12.5,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,355,45,95,50,40,50,75,45,50,71,D.ERRATIC,87.5,!1),new M(A.ARMALDO,3,!1,!1,!1,"Plate Pokémon",t.ROCK,t.BUG,1.5,68.2,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,495,75,125,100,70,80,45,45,50,173,D.ERRATIC,87.5,!1),new M(A.FEEBAS,3,!1,!1,!1,"Fish Pokémon",t.WATER,null,.6,7.4,O.SWIFT_SWIM,O.OBLIVIOUS,O.ADAPTABILITY,200,20,15,20,10,55,80,255,50,40,D.ERRATIC,50,!1),new M(A.MILOTIC,3,!1,!1,!1,"Tender Pokémon",t.WATER,null,6.2,162,O.MARVEL_SCALE,O.COMPETITIVE,O.CUTE_CHARM,540,95,60,79,100,125,81,60,50,189,D.ERRATIC,50,!0),new M(A.CASTFORM,3,!1,!1,!1,"Weather Pokémon",t.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,D.MEDIUM_FAST,50,!1,!0,new Y("Normal Form","",t.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,!1,null,!0),new Y("Sunny Form","sunny",t.FIRE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new Y("Rainy Form","rainy",t.WATER,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new Y("Snowy Form","snowy",t.ICE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147)),new M(A.KECLEON,3,!1,!1,!1,"Color Swap Pokémon",t.NORMAL,null,1,22,O.COLOR_CHANGE,O.NONE,O.PROTEAN,440,60,90,70,60,120,40,200,70,154,D.MEDIUM_SLOW,50,!1),new M(A.SHUPPET,3,!1,!1,!1,"Puppet Pokémon",t.GHOST,null,.6,2.3,O.INSOMNIA,O.FRISK,O.CURSED_BODY,295,44,75,35,63,33,45,225,35,59,D.FAST,50,!1),new M(A.BANETTE,3,!1,!1,!1,"Marionette Pokémon",t.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,D.FAST,50,!1,!0,new Y("Normal","",t.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,!1,null,!0),new Y("Mega",eA.MEGA,t.GHOST,null,1.2,13,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,555,64,165,75,93,83,75,45,35,159)),new M(A.DUSKULL,3,!1,!1,!1,"Requiem Pokémon",t.GHOST,null,.8,15,O.LEVITATE,O.NONE,O.FRISK,295,20,40,90,30,90,25,190,35,59,D.FAST,50,!1),new M(A.DUSCLOPS,3,!1,!1,!1,"Beckon Pokémon",t.GHOST,null,1.6,30.6,O.PRESSURE,O.NONE,O.FRISK,455,40,70,130,60,130,25,90,35,159,D.FAST,50,!1),new M(A.TROPIUS,3,!1,!1,!1,"Fruit Pokémon",t.GRASS,t.FLYING,2,100,O.CHLOROPHYLL,O.SOLAR_POWER,O.HARVEST,460,99,68,83,72,87,51,200,70,161,D.SLOW,50,!1),new M(A.CHIMECHO,3,!1,!1,!1,"Wind Chime Pokémon",t.PSYCHIC,null,.6,1,O.LEVITATE,O.NONE,O.NONE,455,75,50,80,95,90,65,45,70,159,D.FAST,50,!1),new M(A.ABSOL,3,!1,!1,!1,"Disaster Pokémon",t.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,D.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",t.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,!1,null,!0),new Y("Mega",eA.MEGA,t.DARK,null,1.2,49,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,565,65,150,60,115,60,115,30,35,163)),new M(A.WYNAUT,3,!1,!1,!1,"Bright Pokémon",t.PSYCHIC,null,.6,14,O.SHADOW_TAG,O.NONE,O.TELEPATHY,260,95,23,48,23,48,23,125,50,52,D.MEDIUM_FAST,50,!1),new M(A.SNORUNT,3,!1,!1,!1,"Snow Hat Pokémon",t.ICE,null,.7,16.8,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,300,50,50,50,50,50,50,190,50,60,D.MEDIUM_FAST,50,!1),new M(A.GLALIE,3,!1,!1,!1,"Face Pokémon",t.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,!1,null,!0),new Y("Mega",eA.MEGA,t.ICE,null,2.1,350.2,O.REFRIGERATE,O.REFRIGERATE,O.REFRIGERATE,580,80,120,80,120,80,100,75,50,168)),new M(A.SPHEAL,3,!1,!1,!1,"Clap Pokémon",t.ICE,t.WATER,.8,39.5,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,290,70,40,50,55,50,25,255,50,58,D.MEDIUM_SLOW,50,!1),new M(A.SEALEO,3,!1,!1,!1,"Ball Roll Pokémon",t.ICE,t.WATER,1.1,87.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,410,90,60,70,75,70,45,120,50,144,D.MEDIUM_SLOW,50,!1),new M(A.WALREIN,3,!1,!1,!1,"Ice Break Pokémon",t.ICE,t.WATER,1.4,150.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,530,110,80,90,95,90,65,45,50,265,D.MEDIUM_SLOW,50,!1),new M(A.CLAMPERL,3,!1,!1,!1,"Bivalve Pokémon",t.WATER,null,.4,52.5,O.SHELL_ARMOR,O.NONE,O.RATTLED,345,35,64,85,74,55,32,255,70,69,D.ERRATIC,50,!1),new M(A.HUNTAIL,3,!1,!1,!1,"Deep Sea Pokémon",t.WATER,null,1.7,27,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,485,55,104,105,94,75,52,60,70,170,D.ERRATIC,50,!1),new M(A.GOREBYSS,3,!1,!1,!1,"South Sea Pokémon",t.WATER,null,1.8,22.6,O.SWIFT_SWIM,O.NONE,O.HYDRATION,485,55,84,105,114,75,52,60,70,170,D.ERRATIC,50,!1),new M(A.RELICANTH,3,!1,!1,!1,"Longevity Pokémon",t.WATER,t.ROCK,1,23.4,O.SWIFT_SWIM,O.ROCK_HEAD,O.STURDY,485,100,90,130,45,65,55,25,50,170,D.SLOW,87.5,!0),new M(A.LUVDISC,3,!1,!1,!1,"Rendezvous Pokémon",t.WATER,null,.6,8.7,O.SWIFT_SWIM,O.NONE,O.HYDRATION,330,43,30,55,40,65,97,225,70,116,D.FAST,25,!1),new M(A.BAGON,3,!1,!1,!1,"Rock Head Pokémon",t.DRAGON,null,.6,42.1,O.ROCK_HEAD,O.NONE,O.SHEER_FORCE,300,45,75,60,40,30,50,45,35,60,D.SLOW,50,!1),new M(A.SHELGON,3,!1,!1,!1,"Endurance Pokémon",t.DRAGON,null,1.1,110.5,O.ROCK_HEAD,O.NONE,O.OVERCOAT,420,65,95,100,60,50,50,45,35,147,D.SLOW,50,!1),new M(A.SALAMENCE,3,!1,!1,!1,"Dragon Pokémon",t.DRAGON,t.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,D.SLOW,50,!1,!0,new Y("Normal","",t.DRAGON,t.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,!1,null,!0),new Y("Mega",eA.MEGA,t.DRAGON,t.FLYING,1.8,112.6,O.AERILATE,O.NONE,O.AERILATE,700,95,145,130,120,90,120,45,35,300)),new M(A.BELDUM,3,!1,!1,!1,"Iron Ball Pokémon",t.STEEL,t.PSYCHIC,.6,95.2,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,300,40,55,80,35,60,30,45,35,60,D.SLOW,null,!1),new M(A.METANG,3,!1,!1,!1,"Iron Claw Pokémon",t.STEEL,t.PSYCHIC,1.2,202.5,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,420,60,75,100,55,80,50,25,35,147,D.SLOW,null,!1),new M(A.METAGROSS,3,!1,!1,!1,"Iron Leg Pokémon",t.STEEL,t.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,10,35,300,D.SLOW,null,!1,!0,new Y("Normal","",t.STEEL,t.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,3,35,300,!1,null,!0),new Y("Mega",eA.MEGA,t.STEEL,t.PSYCHIC,2.5,942.9,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,700,80,145,150,105,110,110,3,35,300)),new M(A.REGIROCK,3,!0,!1,!1,"Rock Peak Pokémon",t.ROCK,null,1.7,230,O.CLEAR_BODY,O.NONE,O.STURDY,580,80,100,200,50,100,50,3,35,290,D.SLOW,null,!1),new M(A.REGICE,3,!0,!1,!1,"Iceberg Pokémon",t.ICE,null,1.8,175,O.CLEAR_BODY,O.NONE,O.ICE_BODY,580,80,50,100,100,200,50,3,35,290,D.SLOW,null,!1),new M(A.REGISTEEL,3,!0,!1,!1,"Iron Pokémon",t.STEEL,null,1.9,205,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,580,80,75,150,75,150,50,3,35,290,D.SLOW,null,!1),new M(A.LATIAS,3,!0,!1,!1,"Eon Pokémon",t.DRAGON,t.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,D.SLOW,0,!1,!0,new Y("Normal","",t.DRAGON,t.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,!1,null,!0),new Y("Mega",eA.MEGA,t.DRAGON,t.PSYCHIC,1.8,52,O.LEVITATE,O.NONE,O.NONE,700,80,100,120,140,150,110,3,90,300)),new M(A.LATIOS,3,!0,!1,!1,"Eon Pokémon",t.DRAGON,t.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,D.SLOW,100,!1,!0,new Y("Normal","",t.DRAGON,t.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,!1,null,!0),new Y("Mega",eA.MEGA,t.DRAGON,t.PSYCHIC,2.3,70,O.LEVITATE,O.NONE,O.NONE,700,80,130,100,160,120,110,3,90,300)),new M(A.KYOGRE,3,!1,!0,!1,"Sea Basin Pokémon",t.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,D.SLOW,null,!1,!0,new Y("Normal","",t.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,!1,null,!0),new Y("Primal","primal",t.WATER,null,9.8,430,O.PRIMORDIAL_SEA,O.NONE,O.NONE,770,100,150,90,180,160,90,3,0,335)),new M(A.GROUDON,3,!1,!0,!1,"Continent Pokémon",t.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,D.SLOW,null,!1,!0,new Y("Normal","",t.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,!1,null,!0),new Y("Primal","primal",t.GROUND,t.FIRE,5,999.7,O.DESOLATE_LAND,O.NONE,O.NONE,770,100,180,160,150,90,90,3,0,335)),new M(A.RAYQUAZA,3,!1,!0,!1,"Sky High Pokémon",t.DRAGON,t.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,3,0,340,D.SLOW,null,!1,!0,new Y("Normal","",t.DRAGON,t.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,3,0,340,!1,null,!0),new Y("Mega",eA.MEGA,t.DRAGON,t.FLYING,10.8,392,O.DELTA_STREAM,O.NONE,O.NONE,780,105,180,100,180,100,115,3,0,340)),new M(A.JIRACHI,3,!1,!1,!0,"Wish Pokémon",t.STEEL,t.PSYCHIC,.3,1.1,O.SERENE_GRACE,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,D.SLOW,null,!1),new M(A.DEOXYS,3,!1,!1,!0,"DNA Pokémon",t.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,300,D.SLOW,null,!1,!0,new Y("Normal Forme","normal",t.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,300,!1,"",!0),new Y("Attack Forme","attack",t.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,180,20,180,20,150,3,0,300),new Y("Defense Forme","defense",t.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,70,160,70,160,90,3,0,300),new Y("Speed Forme","speed",t.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,95,90,95,90,180,3,0,300)),new M(A.TURTWIG,4,!1,!1,!1,"Tiny Leaf Pokémon",t.GRASS,null,.4,10.2,O.OVERGROW,O.NONE,O.SHELL_ARMOR,318,55,68,64,45,55,31,45,70,64,D.MEDIUM_SLOW,87.5,!1),new M(A.GROTLE,4,!1,!1,!1,"Grove Pokémon",t.GRASS,null,1.1,97,O.OVERGROW,O.NONE,O.SHELL_ARMOR,405,75,89,85,55,65,36,45,70,142,D.MEDIUM_SLOW,87.5,!1),new M(A.TORTERRA,4,!1,!1,!1,"Continent Pokémon",t.GRASS,t.GROUND,2.2,310,O.OVERGROW,O.NONE,O.SHELL_ARMOR,525,95,109,105,75,85,56,45,70,263,D.MEDIUM_SLOW,87.5,!1),new M(A.CHIMCHAR,4,!1,!1,!1,"Chimp Pokémon",t.FIRE,null,.5,6.2,O.BLAZE,O.NONE,O.IRON_FIST,309,44,58,44,58,44,61,45,70,62,D.MEDIUM_SLOW,87.5,!1),new M(A.MONFERNO,4,!1,!1,!1,"Playful Pokémon",t.FIRE,t.FIGHTING,.9,22,O.BLAZE,O.NONE,O.IRON_FIST,405,64,78,52,78,52,81,45,70,142,D.MEDIUM_SLOW,87.5,!1),new M(A.INFERNAPE,4,!1,!1,!1,"Flame Pokémon",t.FIRE,t.FIGHTING,1.2,55,O.BLAZE,O.NONE,O.IRON_FIST,534,76,104,71,104,71,108,45,70,267,D.MEDIUM_SLOW,87.5,!1),new M(A.PIPLUP,4,!1,!1,!1,"Penguin Pokémon",t.WATER,null,.4,5.2,O.TORRENT,O.NONE,O.COMPETITIVE,314,53,51,53,61,56,40,45,70,63,D.MEDIUM_SLOW,87.5,!1),new M(A.PRINPLUP,4,!1,!1,!1,"Penguin Pokémon",t.WATER,null,.8,23,O.TORRENT,O.NONE,O.COMPETITIVE,405,64,66,68,81,76,50,45,70,142,D.MEDIUM_SLOW,87.5,!1),new M(A.EMPOLEON,4,!1,!1,!1,"Emperor Pokémon",t.WATER,t.STEEL,1.7,84.5,O.TORRENT,O.NONE,O.COMPETITIVE,530,84,86,88,111,101,60,45,70,265,D.MEDIUM_SLOW,87.5,!1),new M(A.STARLY,4,!1,!1,!1,"Starling Pokémon",t.NORMAL,t.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.RECKLESS,245,40,55,30,30,30,60,255,70,49,D.MEDIUM_SLOW,50,!0),new M(A.STARAVIA,4,!1,!1,!1,"Starling Pokémon",t.NORMAL,t.FLYING,.6,15.5,O.INTIMIDATE,O.NONE,O.RECKLESS,340,55,75,50,40,40,80,120,70,119,D.MEDIUM_SLOW,50,!0),new M(A.STARAPTOR,4,!1,!1,!1,"Predator Pokémon",t.NORMAL,t.FLYING,1.2,24.9,O.INTIMIDATE,O.NONE,O.RECKLESS,485,85,120,70,50,60,100,45,70,243,D.MEDIUM_SLOW,50,!0),new M(A.BIDOOF,4,!1,!1,!1,"Plump Mouse Pokémon",t.NORMAL,null,.5,20,O.SIMPLE,O.UNAWARE,O.MOODY,250,59,45,40,35,40,31,255,70,50,D.MEDIUM_FAST,50,!0),new M(A.BIBAREL,4,!1,!1,!1,"Beaver Pokémon",t.NORMAL,t.WATER,1,31.5,O.SIMPLE,O.UNAWARE,O.MOODY,410,79,85,60,55,60,71,127,70,144,D.MEDIUM_FAST,50,!0),new M(A.KRICKETOT,4,!1,!1,!1,"Cricket Pokémon",t.BUG,null,.3,2.2,O.SHED_SKIN,O.NONE,O.RUN_AWAY,194,37,25,41,25,41,25,255,70,39,D.MEDIUM_SLOW,50,!0),new M(A.KRICKETUNE,4,!1,!1,!1,"Cricket Pokémon",t.BUG,null,1,25.5,O.SWARM,O.NONE,O.TECHNICIAN,384,77,85,51,55,51,65,45,70,134,D.MEDIUM_SLOW,50,!0),new M(A.SHINX,4,!1,!1,!1,"Flash Pokémon",t.ELECTRIC,null,.5,9.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,263,45,65,34,40,34,45,235,50,53,D.MEDIUM_SLOW,50,!0),new M(A.LUXIO,4,!1,!1,!1,"Spark Pokémon",t.ELECTRIC,null,.9,30.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,363,60,85,49,60,49,60,120,100,127,D.MEDIUM_SLOW,50,!0),new M(A.LUXRAY,4,!1,!1,!1,"Gleam Eyes Pokémon",t.ELECTRIC,null,1.4,42,O.RIVALRY,O.INTIMIDATE,O.GUTS,523,80,120,79,95,79,70,45,50,262,D.MEDIUM_SLOW,50,!0),new M(A.BUDEW,4,!1,!1,!1,"Bud Pokémon",t.GRASS,t.POISON,.2,1.2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,280,40,30,35,50,70,55,255,50,56,D.MEDIUM_SLOW,50,!1),new M(A.ROSERADE,4,!1,!1,!1,"Bouquet Pokémon",t.GRASS,t.POISON,.9,14.5,O.NATURAL_CURE,O.POISON_POINT,O.TECHNICIAN,515,60,70,65,125,105,90,75,50,258,D.MEDIUM_SLOW,50,!0),new M(A.CRANIDOS,4,!1,!1,!1,"Head Butt Pokémon",t.ROCK,null,.9,31.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,350,67,125,40,30,30,58,45,70,70,D.ERRATIC,87.5,!1),new M(A.RAMPARDOS,4,!1,!1,!1,"Head Butt Pokémon",t.ROCK,null,1.6,102.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,495,97,165,60,65,50,58,45,70,173,D.ERRATIC,87.5,!1),new M(A.SHIELDON,4,!1,!1,!1,"Shield Pokémon",t.ROCK,t.STEEL,.5,57,O.STURDY,O.NONE,O.SOUNDPROOF,350,30,42,118,42,88,30,45,70,70,D.ERRATIC,87.5,!1),new M(A.BASTIODON,4,!1,!1,!1,"Shield Pokémon",t.ROCK,t.STEEL,1.3,149.5,O.STURDY,O.NONE,O.SOUNDPROOF,495,60,52,168,47,138,30,45,70,173,D.ERRATIC,87.5,!1),new M(A.BURMY,4,!1,!1,!1,"Bagworm Pokémon",t.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,D.MEDIUM_FAST,50,!1,!0,new Y("Plant Cloak","plant",t.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new Y("Sandy Cloak","sandy",t.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new Y("Trash Cloak","trash",t.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0)),new M(A.WORMADAM,4,!1,!1,!1,"Bagworm Pokémon",t.BUG,t.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,D.MEDIUM_FAST,0,!1,!1,new Y("Plant Cloak","plant",t.BUG,t.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,!1,null,!0),new Y("Sandy Cloak","sandy",t.BUG,t.GROUND,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,79,105,59,85,36,45,70,148,!1,null,!0),new Y("Trash Cloak","trash",t.BUG,t.STEEL,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,69,95,69,95,36,45,70,148,!1,null,!0)),new M(A.MOTHIM,4,!1,!1,!1,"Moth Pokémon",t.BUG,t.FLYING,.9,23.3,O.SWARM,O.NONE,O.TINTED_LENS,424,70,94,50,94,50,66,45,70,148,D.MEDIUM_FAST,100,!1),new M(A.COMBEE,4,!1,!1,!1,"Tiny Bee Pokémon",t.BUG,t.FLYING,.3,5.5,O.HONEY_GATHER,O.NONE,O.HUSTLE,244,30,30,42,30,42,70,120,50,49,D.MEDIUM_SLOW,87.5,!0),new M(A.VESPIQUEN,4,!1,!1,!1,"Beehive Pokémon",t.BUG,t.FLYING,1.2,38.5,O.PRESSURE,O.NONE,O.UNNERVE,474,70,80,102,80,102,40,45,50,166,D.MEDIUM_SLOW,0,!1),new M(A.PACHIRISU,4,!1,!1,!1,"EleSquirrel Pokémon",t.ELECTRIC,null,.4,3.9,O.RUN_AWAY,O.PICKUP,O.VOLT_ABSORB,405,60,45,70,45,90,95,200,100,142,D.MEDIUM_FAST,50,!0),new M(A.BUIZEL,4,!1,!1,!1,"Sea Weasel Pokémon",t.WATER,null,.7,29.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,330,55,65,35,60,30,85,190,70,66,D.MEDIUM_FAST,50,!0),new M(A.FLOATZEL,4,!1,!1,!1,"Sea Weasel Pokémon",t.WATER,null,1.1,33.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,495,85,105,55,85,50,115,75,70,173,D.MEDIUM_FAST,50,!0),new M(A.CHERUBI,4,!1,!1,!1,"Cherry Pokémon",t.GRASS,null,.4,3.3,O.CHLOROPHYLL,O.NONE,O.NONE,275,45,35,45,62,53,35,190,50,55,D.MEDIUM_FAST,50,!1),new M(A.CHERRIM,4,!1,!1,!1,"Blossom Pokémon",t.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,D.MEDIUM_FAST,50,!1,!0,new Y("Overcast Form","overcast",t.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,!1,null,!0),new Y("Sunshine Form","sunshine",t.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158)),new M(A.SHELLOS,4,!1,!1,!1,"Sea Slug Pokémon",t.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,D.MEDIUM_FAST,50,!1,!1,new Y("East Sea","east",t.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0),new Y("West Sea","west",t.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0)),new M(A.GASTRODON,4,!1,!1,!1,"Sea Slug Pokémon",t.WATER,t.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,D.MEDIUM_FAST,50,!1,!1,new Y("East Sea","east",t.WATER,t.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0),new Y("West Sea","west",t.WATER,t.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0)),new M(A.AMBIPOM,4,!1,!1,!1,"Long Tail Pokémon",t.NORMAL,null,1.2,20.3,O.TECHNICIAN,O.PICKUP,O.SKILL_LINK,482,75,100,66,60,66,115,45,100,169,D.FAST,50,!0),new M(A.DRIFLOON,4,!1,!1,!1,"Balloon Pokémon",t.GHOST,t.FLYING,.4,1.2,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,348,90,50,34,60,44,70,125,50,70,D.FLUCTUATING,50,!1),new M(A.DRIFBLIM,4,!1,!1,!1,"Blimp Pokémon",t.GHOST,t.FLYING,1.2,15,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,498,150,80,44,90,54,80,60,50,174,D.FLUCTUATING,50,!1),new M(A.BUNEARY,4,!1,!1,!1,"Rabbit Pokémon",t.NORMAL,null,.4,5.5,O.RUN_AWAY,O.KLUTZ,O.LIMBER,350,55,66,44,44,56,85,190,0,70,D.MEDIUM_FAST,50,!1),new M(A.LOPUNNY,4,!1,!1,!1,"Rabbit Pokémon",t.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,!1,null,!0),new Y("Mega",eA.MEGA,t.NORMAL,t.FIGHTING,1.3,28.3,O.SCRAPPY,O.SCRAPPY,O.SCRAPPY,580,65,136,94,54,96,135,60,140,168)),new M(A.MISMAGIUS,4,!1,!1,!1,"Magical Pokémon",t.GHOST,null,.9,4.4,O.LEVITATE,O.NONE,O.NONE,495,60,60,60,105,105,105,45,35,173,D.FAST,50,!1),new M(A.HONCHKROW,4,!1,!1,!1,"Big Boss Pokémon",t.DARK,t.FLYING,.9,27.3,O.INSOMNIA,O.SUPER_LUCK,O.MOXIE,505,100,125,52,105,52,71,30,35,177,D.MEDIUM_SLOW,50,!1),new M(A.GLAMEOW,4,!1,!1,!1,"Catty Pokémon",t.NORMAL,null,.5,3.9,O.LIMBER,O.OWN_TEMPO,O.KEEN_EYE,310,49,55,42,42,37,85,190,70,62,D.FAST,25,!1),new M(A.PURUGLY,4,!1,!1,!1,"Tiger Cat Pokémon",t.NORMAL,null,1,43.8,O.THICK_FAT,O.OWN_TEMPO,O.DEFIANT,452,71,82,64,64,59,112,75,70,158,D.FAST,25,!1),new M(A.CHINGLING,4,!1,!1,!1,"Bell Pokémon",t.PSYCHIC,null,.2,.6,O.LEVITATE,O.NONE,O.NONE,285,45,30,50,65,50,45,120,70,57,D.FAST,50,!1),new M(A.STUNKY,4,!1,!1,!1,"Skunk Pokémon",t.POISON,t.DARK,.4,19.2,O.STENCH,O.AFTERMATH,O.KEEN_EYE,329,63,63,47,41,41,74,225,50,66,D.MEDIUM_FAST,50,!1),new M(A.SKUNTANK,4,!1,!1,!1,"Skunk Pokémon",t.POISON,t.DARK,1,38,O.STENCH,O.AFTERMATH,O.KEEN_EYE,479,103,93,67,71,61,84,60,50,168,D.MEDIUM_FAST,50,!1),new M(A.BRONZOR,4,!1,!1,!1,"Bronze Pokémon",t.STEEL,t.PSYCHIC,.5,60.5,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,300,57,24,86,24,86,23,255,50,60,D.MEDIUM_FAST,null,!1),new M(A.BRONZONG,4,!1,!1,!1,"Bronze Bell Pokémon",t.STEEL,t.PSYCHIC,1.3,187,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,500,67,89,116,79,116,33,90,50,175,D.MEDIUM_FAST,null,!1),new M(A.BONSLY,4,!1,!1,!1,"Bonsai Pokémon",t.ROCK,null,.5,15,O.STURDY,O.ROCK_HEAD,O.RATTLED,290,50,80,95,10,45,10,255,50,58,D.MEDIUM_FAST,50,!1),new M(A.MIME_JR,4,!1,!1,!1,"Mime Pokémon",t.PSYCHIC,t.FAIRY,.6,13,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,310,20,25,45,70,90,60,145,50,62,D.MEDIUM_FAST,50,!1),new M(A.HAPPINY,4,!1,!1,!1,"Playhouse Pokémon",t.NORMAL,null,.6,24.4,O.NATURAL_CURE,O.SERENE_GRACE,O.FRIEND_GUARD,220,100,5,5,15,65,30,130,140,110,D.FAST,0,!1),new M(A.CHATOT,4,!1,!1,!1,"Music Note Pokémon",t.NORMAL,t.FLYING,.5,1.9,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,411,76,65,45,92,42,91,30,35,144,D.MEDIUM_SLOW,50,!1),new M(A.SPIRITOMB,4,!1,!1,!1,"Forbidden Pokémon",t.GHOST,t.DARK,1,108,O.PRESSURE,O.NONE,O.INFILTRATOR,485,50,92,108,92,108,35,100,50,170,D.MEDIUM_FAST,50,!1),new M(A.GIBLE,4,!1,!1,!1,"Land Shark Pokémon",t.DRAGON,t.GROUND,.7,20.5,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,300,58,70,45,40,45,42,45,50,60,D.SLOW,50,!0),new M(A.GABITE,4,!1,!1,!1,"Cave Pokémon",t.DRAGON,t.GROUND,1.4,56,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,410,68,90,65,50,55,82,45,50,144,D.SLOW,50,!0),new M(A.GARCHOMP,4,!1,!1,!1,"Mach Pokémon",t.DRAGON,t.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,D.SLOW,50,!0,!0,new Y("Normal","",t.DRAGON,t.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,!0,null,!0),new Y("Mega",eA.MEGA,t.DRAGON,t.GROUND,1.9,95,O.SAND_FORCE,O.NONE,O.SAND_FORCE,700,108,170,115,120,95,92,45,50,300,!0)),new M(A.MUNCHLAX,4,!1,!1,!1,"Big Eater Pokémon",t.NORMAL,null,.6,105,O.PICKUP,O.THICK_FAT,O.GLUTTONY,390,135,85,40,40,85,5,50,50,78,D.SLOW,87.5,!1),new M(A.RIOLU,4,!1,!1,!1,"Emanation Pokémon",t.FIGHTING,null,.7,20.2,O.STEADFAST,O.INNER_FOCUS,O.PRANKSTER,285,40,70,40,35,40,60,75,50,57,D.MEDIUM_SLOW,87.5,!1),new M(A.LUCARIO,4,!1,!1,!1,"Aura Pokémon",t.FIGHTING,t.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.FIGHTING,t.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,!1,null,!0),new Y("Mega",eA.MEGA,t.FIGHTING,t.STEEL,1.3,57.5,O.ADAPTABILITY,O.ADAPTABILITY,O.ADAPTABILITY,625,70,145,88,140,70,112,45,50,184)),new M(A.HIPPOPOTAS,4,!1,!1,!1,"Hippo Pokémon",t.GROUND,null,.8,49.5,O.SAND_STREAM,O.NONE,O.SAND_FORCE,330,68,72,78,38,42,32,140,50,66,D.SLOW,50,!0),new M(A.HIPPOWDON,4,!1,!1,!1,"Heavyweight Pokémon",t.GROUND,null,2,300,O.SAND_STREAM,O.NONE,O.SAND_FORCE,525,108,112,118,68,72,47,60,50,184,D.SLOW,50,!0),new M(A.SKORUPI,4,!1,!1,!1,"Scorpion Pokémon",t.POISON,t.BUG,.8,12,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,330,40,50,90,30,55,65,120,50,66,D.SLOW,50,!1),new M(A.DRAPION,4,!1,!1,!1,"Ogre Scorpion Pokémon",t.POISON,t.DARK,1.3,61.5,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,500,70,90,110,60,75,95,45,50,175,D.SLOW,50,!1),new M(A.CROAGUNK,4,!1,!1,!1,"Toxic Mouth Pokémon",t.POISON,t.FIGHTING,.7,23,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,300,48,61,40,61,40,50,140,100,60,D.MEDIUM_FAST,50,!0),new M(A.TOXICROAK,4,!1,!1,!1,"Toxic Mouth Pokémon",t.POISON,t.FIGHTING,1.3,44.4,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,490,83,106,65,86,65,85,75,50,172,D.MEDIUM_FAST,50,!0),new M(A.CARNIVINE,4,!1,!1,!1,"Bug Catcher Pokémon",t.GRASS,null,1.4,27,O.LEVITATE,O.NONE,O.NONE,454,74,100,72,90,72,46,200,70,159,D.SLOW,50,!1),new M(A.FINNEON,4,!1,!1,!1,"Wing Fish Pokémon",t.WATER,null,.4,7,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,330,49,49,56,49,61,66,190,70,66,D.ERRATIC,50,!0),new M(A.LUMINEON,4,!1,!1,!1,"Neon Pokémon",t.WATER,null,1.2,24,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,460,69,69,76,69,86,91,75,70,161,D.ERRATIC,50,!0),new M(A.MANTYKE,4,!1,!1,!1,"Kite Pokémon",t.WATER,t.FLYING,1,65,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,345,45,20,50,60,120,50,25,50,69,D.SLOW,50,!1),new M(A.SNOVER,4,!1,!1,!1,"Frost Tree Pokémon",t.GRASS,t.ICE,1,50.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,334,60,62,50,62,60,40,120,50,67,D.SLOW,50,!0),new M(A.ABOMASNOW,4,!1,!1,!1,"Frost Tree Pokémon",t.GRASS,t.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,D.SLOW,50,!0,!0,new Y("Normal","",t.GRASS,t.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,!0,null,!0),new Y("Mega",eA.MEGA,t.GRASS,t.ICE,2.7,185,O.SNOW_WARNING,O.NONE,O.SNOW_WARNING,594,90,132,105,132,105,30,60,50,173,!0)),new M(A.WEAVILE,4,!1,!1,!1,"Sharp Claw Pokémon",t.DARK,t.ICE,1.1,34,O.PRESSURE,O.NONE,O.PICKPOCKET,510,70,120,65,45,85,125,45,35,179,D.MEDIUM_SLOW,50,!0),new M(A.MAGNEZONE,4,!1,!1,!1,"Magnet Area Pokémon",t.ELECTRIC,t.STEEL,1.2,180,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,535,70,70,115,130,90,60,30,50,268,D.MEDIUM_FAST,null,!1),new M(A.LICKILICKY,4,!1,!1,!1,"Licking Pokémon",t.NORMAL,null,1.7,140,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,515,110,85,95,80,95,50,30,50,180,D.MEDIUM_FAST,50,!1),new M(A.RHYPERIOR,4,!1,!1,!1,"Drill Pokémon",t.GROUND,t.ROCK,2.4,282.8,O.LIGHTNING_ROD,O.SOLID_ROCK,O.RECKLESS,535,115,140,130,55,55,40,30,50,268,D.SLOW,50,!0),new M(A.TANGROWTH,4,!1,!1,!1,"Vine Pokémon",t.GRASS,null,2,128.6,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,535,100,100,125,110,50,50,30,50,187,D.MEDIUM_FAST,50,!0),new M(A.ELECTIVIRE,4,!1,!1,!1,"Thunderbolt Pokémon",t.ELECTRIC,null,1.8,138.6,O.MOTOR_DRIVE,O.NONE,O.VITAL_SPIRIT,540,75,123,67,95,85,95,30,50,270,D.MEDIUM_FAST,75,!1),new M(A.MAGMORTAR,4,!1,!1,!1,"Blast Pokémon",t.FIRE,null,1.6,68,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,540,75,95,67,125,95,83,30,50,270,D.MEDIUM_FAST,75,!1),new M(A.TOGEKISS,4,!1,!1,!1,"Jubilee Pokémon",t.FAIRY,t.FLYING,1.5,38,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,545,85,50,95,120,115,80,30,50,273,D.FAST,87.5,!1),new M(A.YANMEGA,4,!1,!1,!1,"Ogre Darner Pokémon",t.BUG,t.FLYING,1.9,51.5,O.SPEED_BOOST,O.TINTED_LENS,O.FRISK,515,86,76,86,116,56,95,30,70,180,D.MEDIUM_FAST,50,!1),new M(A.LEAFEON,4,!1,!1,!1,"Verdant Pokémon",t.GRASS,null,1,25.5,O.LEAF_GUARD,O.NONE,O.CHLOROPHYLL,525,65,110,130,60,65,95,45,35,184,D.MEDIUM_FAST,87.5,!1),new M(A.GLACEON,4,!1,!1,!1,"Fresh Snow Pokémon",t.ICE,null,.8,25.9,O.SNOW_CLOAK,O.NONE,O.ICE_BODY,525,65,60,110,130,95,65,45,35,184,D.MEDIUM_FAST,87.5,!1),new M(A.GLISCOR,4,!1,!1,!1,"Fang Scorpion Pokémon",t.GROUND,t.FLYING,2,42.5,O.HYPER_CUTTER,O.SAND_VEIL,O.POISON_HEAL,510,75,95,125,45,75,95,30,70,179,D.MEDIUM_SLOW,50,!1),new M(A.MAMOSWINE,4,!1,!1,!1,"Twin Tusk Pokémon",t.ICE,t.GROUND,2.5,291,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,530,110,130,80,70,60,80,50,50,265,D.SLOW,50,!0),new M(A.PORYGON_Z,4,!1,!1,!1,"Virtual Pokémon",t.NORMAL,null,.9,34,O.ADAPTABILITY,O.DOWNLOAD,O.ANALYTIC,535,85,80,70,135,75,90,30,50,268,D.MEDIUM_FAST,null,!1),new M(A.GALLADE,4,!1,!1,!1,"Blade Pokémon",t.PSYCHIC,t.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,D.SLOW,100,!1,!0,new Y("Normal","",t.PSYCHIC,t.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,!1,null,!0),new Y("Mega",eA.MEGA,t.PSYCHIC,t.FIGHTING,1.6,56.4,O.INNER_FOCUS,O.INNER_FOCUS,O.INNER_FOCUS,618,68,165,95,65,115,110,45,35,259)),new M(A.PROBOPASS,4,!1,!1,!1,"Compass Pokémon",t.ROCK,t.STEEL,1.4,340,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,525,60,55,145,75,150,40,60,70,184,D.MEDIUM_FAST,50,!1),new M(A.DUSKNOIR,4,!1,!1,!1,"Gripper Pokémon",t.GHOST,null,2.2,106.6,O.PRESSURE,O.NONE,O.FRISK,525,45,100,135,65,135,45,45,35,263,D.FAST,50,!1),new M(A.FROSLASS,4,!1,!1,!1,"Snow Land Pokémon",t.ICE,t.GHOST,1.3,26.6,O.SNOW_CLOAK,O.NONE,O.CURSED_BODY,480,70,80,70,80,70,110,75,50,168,D.MEDIUM_FAST,0,!1),new M(A.ROTOM,4,!1,!1,!1,"Plasma Pokémon",t.ELECTRIC,t.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,D.MEDIUM_FAST,null,!1,!1,new Y("Normal","",t.ELECTRIC,t.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,!1,null,!0),new Y("Heat","heat",t.ELECTRIC,t.FIRE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new Y("Wash","wash",t.ELECTRIC,t.WATER,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new Y("Frost","frost",t.ELECTRIC,t.ICE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new Y("Fan","fan",t.ELECTRIC,t.FLYING,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new Y("Mow","mow",t.ELECTRIC,t.GRASS,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0)),new M(A.UXIE,4,!0,!1,!1,"Knowledge Pokémon",t.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,75,130,75,130,95,3,140,290,D.SLOW,null,!1),new M(A.MESPRIT,4,!0,!1,!1,"Emotion Pokémon",t.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,80,105,105,105,105,80,3,140,290,D.SLOW,null,!1),new M(A.AZELF,4,!0,!1,!1,"Willpower Pokémon",t.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,125,70,125,70,115,3,140,290,D.SLOW,null,!1),new M(A.DIALGA,4,!1,!0,!1,"Temporal Pokémon",t.STEEL,t.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,D.SLOW,null,!1,!1,new Y("Normal","",t.STEEL,t.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,!1,null,!0),new Y("Origin Forme","origin",t.STEEL,t.DRAGON,7,848.7,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,100,120,150,120,90,3,0,340)),new M(A.PALKIA,4,!1,!0,!1,"Spatial Pokémon",t.WATER,t.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,D.SLOW,null,!1,!1,new Y("Normal","",t.WATER,t.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,!1,null,!0),new Y("Origin Forme","origin",t.WATER,t.DRAGON,6.3,659,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,100,100,150,120,120,3,0,340)),new M(A.HEATRAN,4,!0,!1,!1,"Lava Dome Pokémon",t.FIRE,t.STEEL,1.7,430,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,600,91,90,106,130,106,77,3,100,300,D.SLOW,50,!1),new M(A.REGIGIGAS,4,!0,!1,!1,"Colossal Pokémon",t.NORMAL,null,3.7,420,O.SLOW_START,O.NONE,O.NORMALIZE,670,110,160,110,80,110,100,3,0,335,D.SLOW,null,!1),new M(A.GIRATINA,4,!1,!0,!1,"Renegade Pokémon",t.GHOST,t.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,D.SLOW,null,!1,!0,new Y("Altered Forme","altered",t.GHOST,t.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,!1,null,!0),new Y("Origin Forme","origin",t.GHOST,t.DRAGON,6.9,650,O.LEVITATE,O.NONE,O.LEVITATE,680,150,120,100,120,100,90,3,0,340)),new M(A.CRESSELIA,4,!0,!1,!1,"Lunar Pokémon",t.PSYCHIC,null,1.5,85.6,O.LEVITATE,O.NONE,O.NONE,580,120,70,110,75,120,85,3,100,300,D.SLOW,0,!1),new M(A.PHIONE,4,!1,!1,!0,"Sea Drifter Pokémon",t.WATER,null,.4,3.1,O.HYDRATION,O.NONE,O.NONE,480,80,80,80,80,80,80,30,70,240,D.SLOW,null,!1),new M(A.MANAPHY,4,!1,!1,!0,"Seafaring Pokémon",t.WATER,null,.3,1.4,O.HYDRATION,O.NONE,O.NONE,600,100,100,100,100,100,100,3,70,300,D.SLOW,null,!1),new M(A.DARKRAI,4,!1,!1,!0,"Pitch-Black Pokémon",t.DARK,null,1.5,50.5,O.BAD_DREAMS,O.NONE,O.NONE,600,70,90,90,135,90,125,3,0,300,D.SLOW,null,!1),new M(A.SHAYMIN,4,!1,!1,!0,"Gratitude Pokémon",t.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,D.MEDIUM_SLOW,null,!1,!0,new Y("Land Forme","land",t.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,!1,null,!0),new Y("Sky Forme","sky",t.GRASS,t.FLYING,.4,5.2,O.SERENE_GRACE,O.NONE,O.NONE,600,100,103,75,120,75,127,45,100,300)),new M(A.ARCEUS,4,!1,!1,!0,"Alpha Pokémon",t.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,D.SLOW,null,!1,!0,new Y("Normal","normal",t.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,!1,null,!0),new Y("Fighting","fighting",t.FIGHTING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Flying","flying",t.FLYING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Poison","poison",t.POISON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Ground","ground",t.GROUND,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Rock","rock",t.ROCK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Bug","bug",t.BUG,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Ghost","ghost",t.GHOST,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Steel","steel",t.STEEL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Fire","fire",t.FIRE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Water","water",t.WATER,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Grass","grass",t.GRASS,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Electric","electric",t.ELECTRIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Psychic","psychic",t.PSYCHIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Ice","ice",t.ICE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Dragon","dragon",t.DRAGON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Dark","dark",t.DARK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("Fairy","fairy",t.FAIRY,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new Y("???","unknown",t.UNKNOWN,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,!1,null,!1,!0)),new M(A.VICTINI,5,!1,!1,!0,"Victory Pokémon",t.PSYCHIC,t.FIRE,.4,4,O.VICTORY_STAR,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,D.SLOW,null,!1),new M(A.SNIVY,5,!1,!1,!1,"Grass Snake Pokémon",t.GRASS,null,.6,8.1,O.OVERGROW,O.NONE,O.CONTRARY,308,45,45,55,45,55,63,45,70,62,D.MEDIUM_SLOW,87.5,!1),new M(A.SERVINE,5,!1,!1,!1,"Grass Snake Pokémon",t.GRASS,null,.8,16,O.OVERGROW,O.NONE,O.CONTRARY,413,60,60,75,60,75,83,45,70,145,D.MEDIUM_SLOW,87.5,!1),new M(A.SERPERIOR,5,!1,!1,!1,"Regal Pokémon",t.GRASS,null,3.3,63,O.OVERGROW,O.NONE,O.CONTRARY,528,75,75,95,75,95,113,45,70,264,D.MEDIUM_SLOW,87.5,!1),new M(A.TEPIG,5,!1,!1,!1,"Fire Pig Pokémon",t.FIRE,null,.5,9.9,O.BLAZE,O.NONE,O.THICK_FAT,308,65,63,45,45,45,45,45,70,62,D.MEDIUM_SLOW,87.5,!1),new M(A.PIGNITE,5,!1,!1,!1,"Fire Pig Pokémon",t.FIRE,t.FIGHTING,1,55.5,O.BLAZE,O.NONE,O.THICK_FAT,418,90,93,55,70,55,55,45,70,146,D.MEDIUM_SLOW,87.5,!1),new M(A.EMBOAR,5,!1,!1,!1,"Mega Fire Pig Pokémon",t.FIRE,t.FIGHTING,1.6,150,O.BLAZE,O.NONE,O.RECKLESS,528,110,123,65,100,65,65,45,70,264,D.MEDIUM_SLOW,87.5,!1),new M(A.OSHAWOTT,5,!1,!1,!1,"Sea Otter Pokémon",t.WATER,null,.5,5.9,O.TORRENT,O.NONE,O.SHELL_ARMOR,308,55,55,45,63,45,45,45,70,62,D.MEDIUM_SLOW,87.5,!1),new M(A.DEWOTT,5,!1,!1,!1,"Discipline Pokémon",t.WATER,null,.8,24.5,O.TORRENT,O.NONE,O.SHELL_ARMOR,413,75,75,60,83,60,60,45,70,145,D.MEDIUM_SLOW,87.5,!1),new M(A.SAMUROTT,5,!1,!1,!1,"Formidable Pokémon",t.WATER,null,1.5,94.6,O.TORRENT,O.NONE,O.SHELL_ARMOR,528,95,100,85,108,70,70,45,70,264,D.MEDIUM_SLOW,87.5,!1),new M(A.PATRAT,5,!1,!1,!1,"Scout Pokémon",t.NORMAL,null,.5,11.6,O.RUN_AWAY,O.KEEN_EYE,O.ANALYTIC,255,45,55,39,35,39,42,255,70,51,D.MEDIUM_FAST,50,!1),new M(A.WATCHOG,5,!1,!1,!1,"Lookout Pokémon",t.NORMAL,null,1.1,27,O.ILLUMINATE,O.KEEN_EYE,O.ANALYTIC,420,60,85,69,60,69,77,255,70,147,D.MEDIUM_FAST,50,!1),new M(A.LILLIPUP,5,!1,!1,!1,"Puppy Pokémon",t.NORMAL,null,.4,4.1,O.VITAL_SPIRIT,O.PICKUP,O.RUN_AWAY,275,45,60,45,25,45,55,255,50,55,D.MEDIUM_SLOW,50,!1),new M(A.HERDIER,5,!1,!1,!1,"Loyal Dog Pokémon",t.NORMAL,null,.9,14.7,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,370,65,80,65,35,65,60,120,50,130,D.MEDIUM_SLOW,50,!1),new M(A.STOUTLAND,5,!1,!1,!1,"Big-Hearted Pokémon",t.NORMAL,null,1.2,61,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,500,85,110,90,45,90,80,45,50,250,D.MEDIUM_SLOW,50,!1),new M(A.PURRLOIN,5,!1,!1,!1,"Devious Pokémon",t.DARK,null,.4,10.1,O.LIMBER,O.UNBURDEN,O.PRANKSTER,281,41,50,37,50,37,66,255,50,56,D.MEDIUM_FAST,50,!1),new M(A.LIEPARD,5,!1,!1,!1,"Cruel Pokémon",t.DARK,null,1.1,37.5,O.LIMBER,O.UNBURDEN,O.PRANKSTER,446,64,88,50,88,50,106,90,50,156,D.MEDIUM_FAST,50,!1),new M(A.PANSAGE,5,!1,!1,!1,"Grass Monkey Pokémon",t.GRASS,null,.6,10.5,O.GLUTTONY,O.NONE,O.OVERGROW,316,50,53,48,53,48,64,190,70,63,D.MEDIUM_FAST,87.5,!1),new M(A.SIMISAGE,5,!1,!1,!1,"Thorn Monkey Pokémon",t.GRASS,null,1.1,30.5,O.GLUTTONY,O.NONE,O.OVERGROW,498,75,98,63,98,63,101,75,70,174,D.MEDIUM_FAST,87.5,!1),new M(A.PANSEAR,5,!1,!1,!1,"High Temp Pokémon",t.FIRE,null,.6,11,O.GLUTTONY,O.NONE,O.BLAZE,316,50,53,48,53,48,64,190,70,63,D.MEDIUM_FAST,87.5,!1),new M(A.SIMISEAR,5,!1,!1,!1,"Ember Pokémon",t.FIRE,null,1,28,O.GLUTTONY,O.NONE,O.BLAZE,498,75,98,63,98,63,101,75,70,174,D.MEDIUM_FAST,87.5,!1),new M(A.PANPOUR,5,!1,!1,!1,"Spray Pokémon",t.WATER,null,.6,13.5,O.GLUTTONY,O.NONE,O.TORRENT,316,50,53,48,53,48,64,190,70,63,D.MEDIUM_FAST,87.5,!1),new M(A.SIMIPOUR,5,!1,!1,!1,"Geyser Pokémon",t.WATER,null,1,29,O.GLUTTONY,O.NONE,O.TORRENT,498,75,98,63,98,63,101,75,70,174,D.MEDIUM_FAST,87.5,!1),new M(A.MUNNA,5,!1,!1,!1,"Dream Eater Pokémon",t.PSYCHIC,null,.6,23.3,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,292,76,25,45,67,55,24,190,50,58,D.FAST,50,!1),new M(A.MUSHARNA,5,!1,!1,!1,"Drowsing Pokémon",t.PSYCHIC,null,1.1,60.5,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,487,116,55,85,107,95,29,75,50,170,D.FAST,50,!1),new M(A.PIDOVE,5,!1,!1,!1,"Tiny Pigeon Pokémon",t.NORMAL,t.FLYING,.3,2.1,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,264,50,55,50,36,30,43,255,50,53,D.MEDIUM_SLOW,50,!1),new M(A.TRANQUILL,5,!1,!1,!1,"Wild Pigeon Pokémon",t.NORMAL,t.FLYING,.6,15,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,358,62,77,62,50,42,65,120,50,125,D.MEDIUM_SLOW,50,!1),new M(A.UNFEZANT,5,!1,!1,!1,"Proud Pokémon",t.NORMAL,t.FLYING,1.2,29,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,488,80,115,80,65,55,93,45,50,244,D.MEDIUM_SLOW,50,!0),new M(A.BLITZLE,5,!1,!1,!1,"Electrified Pokémon",t.ELECTRIC,null,.8,29.8,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,295,45,60,32,50,32,76,190,70,59,D.MEDIUM_FAST,50,!1),new M(A.ZEBSTRIKA,5,!1,!1,!1,"Thunderbolt Pokémon",t.ELECTRIC,null,1.6,79.5,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,497,75,100,63,80,63,116,75,70,174,D.MEDIUM_FAST,50,!1),new M(A.ROGGENROLA,5,!1,!1,!1,"Mantle Pokémon",t.ROCK,null,.4,18,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,280,55,75,85,25,25,15,255,50,56,D.MEDIUM_SLOW,50,!1),new M(A.BOLDORE,5,!1,!1,!1,"Ore Pokémon",t.ROCK,null,.9,102,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,390,70,105,105,50,40,20,120,50,137,D.MEDIUM_SLOW,50,!1),new M(A.GIGALITH,5,!1,!1,!1,"Compressed Pokémon",t.ROCK,null,1.7,260,O.STURDY,O.SAND_STREAM,O.SAND_FORCE,515,85,135,130,60,80,25,45,50,258,D.MEDIUM_SLOW,50,!1),new M(A.WOOBAT,5,!1,!1,!1,"Bat Pokémon",t.PSYCHIC,t.FLYING,.4,2.1,O.UNAWARE,O.KLUTZ,O.SIMPLE,323,65,45,43,55,43,72,190,50,65,D.MEDIUM_FAST,50,!1),new M(A.SWOOBAT,5,!1,!1,!1,"Courting Pokémon",t.PSYCHIC,t.FLYING,.9,10.5,O.UNAWARE,O.KLUTZ,O.SIMPLE,425,67,57,55,77,55,114,45,50,149,D.MEDIUM_FAST,50,!1),new M(A.DRILBUR,5,!1,!1,!1,"Mole Pokémon",t.GROUND,null,.3,8.5,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,328,60,85,40,30,45,68,120,50,66,D.MEDIUM_FAST,50,!1),new M(A.EXCADRILL,5,!1,!1,!1,"Subterrene Pokémon",t.GROUND,t.STEEL,.7,40.4,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,508,110,135,60,50,65,88,60,50,178,D.MEDIUM_FAST,50,!1),new M(A.AUDINO,5,!1,!1,!1,"Hearing Pokémon",t.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,D.FAST,50,!1,!0,new Y("Normal","",t.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,!1,null,!0),new Y("Mega",eA.MEGA,t.NORMAL,t.FAIRY,1.5,32,O.REGENERATOR,O.REGENERATOR,O.REGENERATOR,545,103,60,126,80,126,50,255,50,390)),new M(A.TIMBURR,5,!1,!1,!1,"Muscular Pokémon",t.FIGHTING,null,.6,12.5,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,305,75,80,55,25,35,35,180,70,61,D.MEDIUM_SLOW,75,!1),new M(A.GURDURR,5,!1,!1,!1,"Muscular Pokémon",t.FIGHTING,null,1.2,40,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,405,85,105,85,40,50,40,90,50,142,D.MEDIUM_SLOW,75,!1),new M(A.CONKELDURR,5,!1,!1,!1,"Muscular Pokémon",t.FIGHTING,null,1.4,87,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,505,105,140,95,55,65,45,45,50,253,D.MEDIUM_SLOW,75,!1),new M(A.TYMPOLE,5,!1,!1,!1,"Tadpole Pokémon",t.WATER,null,.5,4.5,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,294,50,50,40,50,40,64,255,50,59,D.MEDIUM_SLOW,50,!1),new M(A.PALPITOAD,5,!1,!1,!1,"Vibration Pokémon",t.WATER,t.GROUND,.8,17,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,384,75,65,55,65,55,69,120,50,134,D.MEDIUM_SLOW,50,!1),new M(A.SEISMITOAD,5,!1,!1,!1,"Vibration Pokémon",t.WATER,t.GROUND,1.5,62,O.SWIFT_SWIM,O.POISON_TOUCH,O.WATER_ABSORB,509,105,95,75,85,75,74,45,50,255,D.MEDIUM_SLOW,50,!1),new M(A.THROH,5,!1,!1,!1,"Judo Pokémon",t.FIGHTING,null,1.3,55.5,O.GUTS,O.INNER_FOCUS,O.MOLD_BREAKER,465,120,100,85,30,85,45,45,50,163,D.MEDIUM_FAST,100,!1),new M(A.SAWK,5,!1,!1,!1,"Karate Pokémon",t.FIGHTING,null,1.4,51,O.STURDY,O.INNER_FOCUS,O.MOLD_BREAKER,465,75,125,75,30,75,85,45,50,163,D.MEDIUM_FAST,100,!1),new M(A.SEWADDLE,5,!1,!1,!1,"Sewing Pokémon",t.BUG,t.GRASS,.3,2.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,310,45,53,70,40,60,42,255,70,62,D.MEDIUM_SLOW,50,!1),new M(A.SWADLOON,5,!1,!1,!1,"Leaf-Wrapped Pokémon",t.BUG,t.GRASS,.5,7.3,O.LEAF_GUARD,O.CHLOROPHYLL,O.OVERCOAT,380,55,63,90,50,80,42,120,70,133,D.MEDIUM_SLOW,50,!1),new M(A.LEAVANNY,5,!1,!1,!1,"Nurturing Pokémon",t.BUG,t.GRASS,1.2,20.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,500,75,103,80,70,80,92,45,70,250,D.MEDIUM_SLOW,50,!1),new M(A.VENIPEDE,5,!1,!1,!1,"Centipede Pokémon",t.BUG,t.POISON,.4,5.3,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,260,30,45,59,30,39,57,255,50,52,D.MEDIUM_SLOW,50,!1),new M(A.WHIRLIPEDE,5,!1,!1,!1,"Curlipede Pokémon",t.BUG,t.POISON,1.2,58.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,360,40,55,99,40,79,47,120,50,126,D.MEDIUM_SLOW,50,!1),new M(A.SCOLIPEDE,5,!1,!1,!1,"Megapede Pokémon",t.BUG,t.POISON,2.5,200.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,485,60,100,89,55,69,112,45,50,243,D.MEDIUM_SLOW,50,!1),new M(A.COTTONEE,5,!1,!1,!1,"Cotton Puff Pokémon",t.GRASS,t.FAIRY,.3,.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,280,40,27,60,37,50,66,190,50,56,D.MEDIUM_FAST,50,!1),new M(A.WHIMSICOTT,5,!1,!1,!1,"Windveiled Pokémon",t.GRASS,t.FAIRY,.7,6.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,480,60,67,85,77,75,116,75,50,168,D.MEDIUM_FAST,50,!1),new M(A.PETILIL,5,!1,!1,!1,"Bulb Pokémon",t.GRASS,null,.5,6.6,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,280,45,35,50,70,50,30,190,50,56,D.MEDIUM_FAST,0,!1),new M(A.LILLIGANT,5,!1,!1,!1,"Flowering Pokémon",t.GRASS,null,1.1,16.3,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,480,70,60,75,110,75,90,75,50,168,D.MEDIUM_FAST,0,!1),new M(A.BASCULIN,5,!1,!1,!1,"Hostile Pokémon",t.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,190,50,161,D.MEDIUM_FAST,50,!1,!1,new Y("Red-Striped Form","red-striped",t.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,190,50,161,!1,null,!0),new Y("Blue-Striped Form","blue-striped",t.WATER,null,1,18,O.ROCK_HEAD,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,190,50,161,!1,null,!0),new Y("White-Striped Form","white-striped",t.WATER,null,1,18,O.RATTLED,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,190,50,161,!1,null,!0)),new M(A.SANDILE,5,!1,!1,!1,"Desert Croc Pokémon",t.GROUND,t.DARK,.7,15.2,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,292,50,72,35,35,35,65,180,50,58,D.MEDIUM_SLOW,50,!1),new M(A.KROKOROK,5,!1,!1,!1,"Desert Croc Pokémon",t.GROUND,t.DARK,1,33.4,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,351,60,82,45,45,45,74,90,50,123,D.MEDIUM_SLOW,50,!1),new M(A.KROOKODILE,5,!1,!1,!1,"Intimidation Pokémon",t.GROUND,t.DARK,1.5,96.3,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,519,95,117,80,65,70,92,45,50,260,D.MEDIUM_SLOW,50,!1),new M(A.DARUMAKA,5,!1,!1,!1,"Zen Charm Pokémon",t.FIRE,null,.6,37.5,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,D.MEDIUM_SLOW,50,!1),new M(A.DARMANITAN,5,!1,!1,!1,"Blazing Pokémon",t.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,D.MEDIUM_SLOW,50,!1,!0,new Y("Standard Mode","",t.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new Y("Zen Mode","zen",t.FIRE,t.PSYCHIC,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,540,105,30,105,140,105,55,60,50,189)),new M(A.MARACTUS,5,!1,!1,!1,"Cactus Pokémon",t.GRASS,null,1,28,O.WATER_ABSORB,O.CHLOROPHYLL,O.STORM_DRAIN,461,75,86,67,106,67,60,255,50,161,D.MEDIUM_FAST,50,!1),new M(A.DWEBBLE,5,!1,!1,!1,"Rock Inn Pokémon",t.BUG,t.ROCK,.3,14.5,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,325,50,65,85,35,35,55,190,50,65,D.MEDIUM_FAST,50,!1),new M(A.CRUSTLE,5,!1,!1,!1,"Stone Home Pokémon",t.BUG,t.ROCK,1.4,200,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,485,70,105,125,65,75,45,75,50,170,D.MEDIUM_FAST,50,!1),new M(A.SCRAGGY,5,!1,!1,!1,"Shedding Pokémon",t.DARK,t.FIGHTING,.6,11.8,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,348,50,75,70,35,70,48,180,35,70,D.MEDIUM_FAST,50,!1),new M(A.SCRAFTY,5,!1,!1,!1,"Hoodlum Pokémon",t.DARK,t.FIGHTING,1.1,30,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,488,65,90,115,45,115,58,90,50,171,D.MEDIUM_FAST,50,!1),new M(A.SIGILYPH,5,!1,!1,!1,"Avianoid Pokémon",t.PSYCHIC,t.FLYING,1.4,14,O.WONDER_SKIN,O.MAGIC_GUARD,O.TINTED_LENS,490,72,58,80,103,80,97,45,50,172,D.MEDIUM_FAST,50,!1),new M(A.YAMASK,5,!1,!1,!1,"Spirit Pokémon",t.GHOST,null,.5,1.5,O.MUMMY,O.NONE,O.NONE,303,38,30,85,55,65,30,190,50,61,D.MEDIUM_FAST,50,!1),new M(A.COFAGRIGUS,5,!1,!1,!1,"Coffin Pokémon",t.GHOST,null,1.7,76.5,O.MUMMY,O.NONE,O.NONE,483,58,50,145,95,105,30,90,50,169,D.MEDIUM_FAST,50,!1),new M(A.TIRTOUGA,5,!1,!1,!1,"Prototurtle Pokémon",t.WATER,t.ROCK,.7,16.5,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,355,54,78,103,53,45,22,45,50,71,D.MEDIUM_FAST,87.5,!1),new M(A.CARRACOSTA,5,!1,!1,!1,"Prototurtle Pokémon",t.WATER,t.ROCK,1.2,81,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,495,74,108,133,83,65,32,45,50,173,D.MEDIUM_FAST,87.5,!1),new M(A.ARCHEN,5,!1,!1,!1,"First Bird Pokémon",t.ROCK,t.FLYING,.5,9.5,O.DEFEATIST,O.NONE,O.WIMP_OUT,401,55,112,45,74,45,70,45,50,71,D.MEDIUM_FAST,87.5,!1),new M(A.ARCHEOPS,5,!1,!1,!1,"First Bird Pokémon",t.ROCK,t.FLYING,1.4,32,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,567,75,140,65,112,65,110,45,50,177,D.MEDIUM_FAST,87.5,!1),new M(A.TRUBBISH,5,!1,!1,!1,"Trash Bag Pokémon",t.POISON,null,.6,31,O.STENCH,O.STICKY_HOLD,O.AFTERMATH,329,50,50,62,40,62,65,190,50,66,D.MEDIUM_FAST,50,!1),new M(A.GARBODOR,5,!1,!1,!1,"Trash Heap Pokémon",t.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.POISON,t.STEEL,21,999.9,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,574,115,121,102,81,102,53,60,50,166)),new M(A.ZORUA,5,!1,!1,!1,"Tricky Fox Pokémon",t.DARK,null,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,40,65,40,80,40,65,75,50,66,D.MEDIUM_SLOW,87.5,!1),new M(A.ZOROARK,5,!1,!1,!1,"Illusion Fox Pokémon",t.DARK,null,1.6,81.1,O.ILLUSION,O.NONE,O.NONE,510,60,105,60,120,60,105,45,50,179,D.MEDIUM_SLOW,87.5,!1),new M(A.MINCCINO,5,!1,!1,!1,"Chinchilla Pokémon",t.NORMAL,null,.4,5.8,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,300,55,50,40,40,40,75,255,50,60,D.FAST,25,!1),new M(A.CINCCINO,5,!1,!1,!1,"Scarf Pokémon",t.NORMAL,null,.5,7.5,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,470,75,95,60,65,60,115,60,50,165,D.FAST,25,!1),new M(A.GOTHITA,5,!1,!1,!1,"Fixation Pokémon",t.PSYCHIC,null,.4,5.8,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,290,45,30,50,55,65,45,200,50,58,D.MEDIUM_SLOW,25,!1),new M(A.GOTHORITA,5,!1,!1,!1,"Manipulate Pokémon",t.PSYCHIC,null,.7,18,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,390,60,45,70,75,85,55,100,50,137,D.MEDIUM_SLOW,25,!1),new M(A.GOTHITELLE,5,!1,!1,!1,"Astral Body Pokémon",t.PSYCHIC,null,1.5,44,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,490,70,55,95,95,110,65,50,50,245,D.MEDIUM_SLOW,25,!1),new M(A.SOLOSIS,5,!1,!1,!1,"Cell Pokémon",t.PSYCHIC,null,.3,1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,290,45,30,40,105,50,20,200,50,58,D.MEDIUM_SLOW,50,!1),new M(A.DUOSION,5,!1,!1,!1,"Mitosis Pokémon",t.PSYCHIC,null,.6,8,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,370,65,40,50,125,60,30,100,50,130,D.MEDIUM_SLOW,50,!1),new M(A.REUNICLUS,5,!1,!1,!1,"Multiplying Pokémon",t.PSYCHIC,null,1,20.1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,490,110,65,75,125,85,30,50,50,245,D.MEDIUM_SLOW,50,!1),new M(A.DUCKLETT,5,!1,!1,!1,"Water Bird Pokémon",t.WATER,t.FLYING,.5,5.5,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,305,62,44,50,44,50,55,190,70,61,D.MEDIUM_FAST,50,!1),new M(A.SWANNA,5,!1,!1,!1,"White Bird Pokémon",t.WATER,t.FLYING,1.3,24.2,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,473,75,87,63,87,63,98,45,70,166,D.MEDIUM_FAST,50,!1),new M(A.VANILLITE,5,!1,!1,!1,"Fresh Snow Pokémon",t.ICE,null,.4,5.7,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,305,36,50,50,65,60,44,255,50,61,D.SLOW,50,!1),new M(A.VANILLISH,5,!1,!1,!1,"Icy Snow Pokémon",t.ICE,null,1.1,41,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,395,51,65,65,80,75,59,120,50,138,D.SLOW,50,!1),new M(A.VANILLUXE,5,!1,!1,!1,"Snowstorm Pokémon",t.ICE,null,1.3,57.5,O.ICE_BODY,O.SNOW_WARNING,O.WEAK_ARMOR,535,71,95,85,110,95,79,45,50,268,D.SLOW,50,!1),new M(A.DEERLING,5,!1,!1,!1,"Season Pokémon",t.NORMAL,t.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,D.MEDIUM_FAST,50,!1,!0,new Y("Spring Form","spring",t.NORMAL,t.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new Y("Summer Form","summer",t.NORMAL,t.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new Y("Autumn Form","autumn",t.NORMAL,t.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new Y("Winter Form","winter",t.NORMAL,t.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0)),new M(A.SAWSBUCK,5,!1,!1,!1,"Season Pokémon",t.NORMAL,t.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,D.MEDIUM_FAST,50,!1,!0,new Y("Spring Form","spring",t.NORMAL,t.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new Y("Summer Form","summer",t.NORMAL,t.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new Y("Autumn Form","autumn",t.NORMAL,t.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new Y("Winter Form","winter",t.NORMAL,t.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0)),new M(A.EMOLGA,5,!1,!1,!1,"Sky Squirrel Pokémon",t.ELECTRIC,t.FLYING,.4,5,O.STATIC,O.NONE,O.MOTOR_DRIVE,428,55,75,60,75,60,103,200,50,150,D.MEDIUM_FAST,50,!1),new M(A.KARRABLAST,5,!1,!1,!1,"Clamping Pokémon",t.BUG,null,.5,5.9,O.SWARM,O.SHED_SKIN,O.NO_GUARD,315,50,75,45,40,45,60,200,50,63,D.MEDIUM_FAST,50,!1),new M(A.ESCAVALIER,5,!1,!1,!1,"Cavalry Pokémon",t.BUG,t.STEEL,1,33,O.SWARM,O.SHELL_ARMOR,O.OVERCOAT,495,70,135,105,60,105,20,75,50,173,D.MEDIUM_FAST,50,!1),new M(A.FOONGUS,5,!1,!1,!1,"Mushroom Pokémon",t.GRASS,t.POISON,.2,1,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,294,69,55,45,55,55,15,190,50,59,D.MEDIUM_FAST,50,!1),new M(A.AMOONGUSS,5,!1,!1,!1,"Mushroom Pokémon",t.GRASS,t.POISON,.6,10.5,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,464,114,85,70,85,80,30,75,50,162,D.MEDIUM_FAST,50,!1),new M(A.FRILLISH,5,!1,!1,!1,"Floating Pokémon",t.WATER,t.GHOST,1.2,33,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,335,55,40,50,65,85,40,190,50,67,D.MEDIUM_FAST,50,!0),new M(A.JELLICENT,5,!1,!1,!1,"Floating Pokémon",t.WATER,t.GHOST,2.2,135,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,480,100,60,70,85,105,60,60,50,168,D.MEDIUM_FAST,50,!0),new M(A.ALOMOMOLA,5,!1,!1,!1,"Caring Pokémon",t.WATER,null,1.2,31.6,O.HEALER,O.HYDRATION,O.REGENERATOR,470,165,75,80,40,45,65,75,70,165,D.FAST,50,!1),new M(A.JOLTIK,5,!1,!1,!1,"Attaching Pokémon",t.BUG,t.ELECTRIC,.1,.6,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,319,50,47,50,57,50,65,190,50,64,D.MEDIUM_FAST,50,!1),new M(A.GALVANTULA,5,!1,!1,!1,"EleSpider Pokémon",t.BUG,t.ELECTRIC,.8,14.3,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,472,70,77,60,97,60,108,75,50,165,D.MEDIUM_FAST,50,!1),new M(A.FERROSEED,5,!1,!1,!1,"Thorn Seed Pokémon",t.GRASS,t.STEEL,.6,18.8,O.IRON_BARBS,O.NONE,O.ANTICIPATION,305,44,50,91,24,86,10,255,50,61,D.MEDIUM_FAST,50,!1),new M(A.FERROTHORN,5,!1,!1,!1,"Thorn Pod Pokémon",t.GRASS,t.STEEL,1,110,O.IRON_BARBS,O.NONE,O.ANTICIPATION,489,74,94,131,54,116,20,90,50,171,D.MEDIUM_FAST,50,!1),new M(A.KLINK,5,!1,!1,!1,"Gear Pokémon",t.STEEL,null,.3,21,O.PLUS,O.MINUS,O.CLEAR_BODY,300,40,55,70,45,60,30,130,50,60,D.MEDIUM_SLOW,null,!1),new M(A.KLANG,5,!1,!1,!1,"Gear Pokémon",t.STEEL,null,.6,51,O.PLUS,O.MINUS,O.CLEAR_BODY,440,60,80,95,70,85,50,60,50,154,D.MEDIUM_SLOW,null,!1),new M(A.KLINKLANG,5,!1,!1,!1,"Gear Pokémon",t.STEEL,null,.6,81,O.PLUS,O.MINUS,O.CLEAR_BODY,520,60,100,115,70,85,90,30,50,260,D.MEDIUM_SLOW,null,!1),new M(A.TYNAMO,5,!1,!1,!1,"EleFish Pokémon",t.ELECTRIC,null,.2,.3,O.LEVITATE,O.NONE,O.NONE,275,35,55,40,45,40,60,190,70,55,D.SLOW,50,!1),new M(A.EELEKTRIK,5,!1,!1,!1,"EleFish Pokémon",t.ELECTRIC,null,1.2,22,O.LEVITATE,O.NONE,O.NONE,405,65,85,70,75,70,40,60,70,142,D.SLOW,50,!1),new M(A.EELEKTROSS,5,!1,!1,!1,"EleFish Pokémon",t.ELECTRIC,null,2.1,80.5,O.LEVITATE,O.NONE,O.NONE,515,85,115,80,105,80,50,30,70,258,D.SLOW,50,!1),new M(A.ELGYEM,5,!1,!1,!1,"Cerebral Pokémon",t.PSYCHIC,null,.5,9,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,335,55,55,55,85,55,30,255,50,67,D.MEDIUM_FAST,50,!1),new M(A.BEHEEYEM,5,!1,!1,!1,"Cerebral Pokémon",t.PSYCHIC,null,1,34.5,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,485,75,75,75,125,95,40,90,50,170,D.MEDIUM_FAST,50,!1),new M(A.LITWICK,5,!1,!1,!1,"Candle Pokémon",t.GHOST,t.FIRE,.3,3.1,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,275,50,30,55,65,55,20,190,50,55,D.MEDIUM_SLOW,50,!1),new M(A.LAMPENT,5,!1,!1,!1,"Lamp Pokémon",t.GHOST,t.FIRE,.6,13,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,370,60,40,60,95,60,55,90,50,130,D.MEDIUM_SLOW,50,!1),new M(A.CHANDELURE,5,!1,!1,!1,"Luring Pokémon",t.GHOST,t.FIRE,1,34.3,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,520,60,55,90,145,90,80,45,50,260,D.MEDIUM_SLOW,50,!1),new M(A.AXEW,5,!1,!1,!1,"Tusk Pokémon",t.DRAGON,null,.6,18,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,320,46,87,60,30,40,57,75,35,64,D.SLOW,50,!1),new M(A.FRAXURE,5,!1,!1,!1,"Axe Jaw Pokémon",t.DRAGON,null,1,36,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,410,66,117,70,40,50,67,60,35,144,D.SLOW,50,!1),new M(A.HAXORUS,5,!1,!1,!1,"Axe Jaw Pokémon",t.DRAGON,null,1.8,105.5,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,540,76,147,90,60,70,97,45,35,270,D.SLOW,50,!1),new M(A.CUBCHOO,5,!1,!1,!1,"Chill Pokémon",t.ICE,null,.5,8.5,O.SNOW_CLOAK,O.SLUSH_RUSH,O.RATTLED,305,55,70,40,60,40,40,120,50,61,D.MEDIUM_FAST,50,!1),new M(A.BEARTIC,5,!1,!1,!1,"Freezing Pokémon",t.ICE,null,2.6,260,O.SNOW_CLOAK,O.SLUSH_RUSH,O.SWIFT_SWIM,505,95,130,80,70,80,50,60,50,177,D.MEDIUM_FAST,50,!1),new M(A.CRYOGONAL,5,!1,!1,!1,"Crystallizing Pokémon",t.ICE,null,1.1,148,O.LEVITATE,O.NONE,O.NONE,515,80,50,50,95,135,105,25,50,180,D.MEDIUM_FAST,null,!1),new M(A.SHELMET,5,!1,!1,!1,"Snail Pokémon",t.BUG,null,.4,7.7,O.HYDRATION,O.SHELL_ARMOR,O.OVERCOAT,305,50,40,85,40,65,25,200,50,61,D.MEDIUM_FAST,50,!1),new M(A.ACCELGOR,5,!1,!1,!1,"Shell Out Pokémon",t.BUG,null,.8,25.3,O.HYDRATION,O.STICKY_HOLD,O.UNBURDEN,495,80,70,40,100,60,145,75,50,173,D.MEDIUM_FAST,50,!1),new M(A.STUNFISK,5,!1,!1,!1,"Trap Pokémon",t.GROUND,t.ELECTRIC,.7,11,O.STATIC,O.LIMBER,O.SAND_VEIL,471,109,66,84,81,99,32,75,70,165,D.MEDIUM_FAST,50,!1),new M(A.MIENFOO,5,!1,!1,!1,"Martial Arts Pokémon",t.FIGHTING,null,.9,20,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,350,45,85,50,55,50,65,180,50,70,D.MEDIUM_SLOW,50,!1),new M(A.MIENSHAO,5,!1,!1,!1,"Martial Arts Pokémon",t.FIGHTING,null,1.4,35.5,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,510,65,125,60,95,60,105,45,50,179,D.MEDIUM_SLOW,50,!1),new M(A.DRUDDIGON,5,!1,!1,!1,"Cave Pokémon",t.DRAGON,null,1.6,139,O.ROUGH_SKIN,O.SHEER_FORCE,O.MOLD_BREAKER,485,77,120,90,60,90,48,45,50,170,D.MEDIUM_FAST,50,!1),new M(A.GOLETT,5,!1,!1,!1,"Automaton Pokémon",t.GROUND,t.GHOST,1,92,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,303,59,74,50,35,50,35,190,50,61,D.MEDIUM_FAST,null,!1),new M(A.GOLURK,5,!1,!1,!1,"Automaton Pokémon",t.GROUND,t.GHOST,2.8,330,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,483,89,124,80,55,80,55,90,50,169,D.MEDIUM_FAST,null,!1),new M(A.PAWNIARD,5,!1,!1,!1,"Sharp Blade Pokémon",t.DARK,t.STEEL,.5,10.2,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,340,45,85,70,40,40,60,120,35,68,D.MEDIUM_FAST,50,!1),new M(A.BISHARP,5,!1,!1,!1,"Sword Blade Pokémon",t.DARK,t.STEEL,1.6,70,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,490,65,125,100,60,70,70,45,35,172,D.MEDIUM_FAST,50,!1),new M(A.BOUFFALANT,5,!1,!1,!1,"Bash Buffalo Pokémon",t.NORMAL,null,1.6,94.6,O.RECKLESS,O.SAP_SIPPER,O.SOUNDPROOF,490,95,110,95,40,95,55,45,50,172,D.MEDIUM_FAST,50,!1),new M(A.RUFFLET,5,!1,!1,!1,"Eaglet Pokémon",t.NORMAL,t.FLYING,.5,10.5,O.KEEN_EYE,O.SHEER_FORCE,O.HUSTLE,350,70,83,50,37,50,60,190,50,70,D.SLOW,100,!1),new M(A.BRAVIARY,5,!1,!1,!1,"Valiant Pokémon",t.NORMAL,t.FLYING,1.5,41,O.KEEN_EYE,O.SHEER_FORCE,O.DEFIANT,510,100,123,75,57,75,80,60,50,179,D.SLOW,100,!1),new M(A.VULLABY,5,!1,!1,!1,"Diapered Pokémon",t.DARK,t.FLYING,.5,9,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,370,70,55,75,45,65,60,190,35,74,D.SLOW,0,!1),new M(A.MANDIBUZZ,5,!1,!1,!1,"Bone Vulture Pokémon",t.DARK,t.FLYING,1.2,39.5,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,510,110,65,105,55,95,80,60,35,179,D.SLOW,0,!1),new M(A.HEATMOR,5,!1,!1,!1,"Anteater Pokémon",t.FIRE,null,1.4,58,O.GLUTTONY,O.FLASH_FIRE,O.WHITE_SMOKE,484,85,97,66,105,66,65,90,50,169,D.MEDIUM_FAST,50,!1),new M(A.DURANT,5,!1,!1,!1,"Iron Ant Pokémon",t.BUG,t.STEEL,.3,33,O.SWARM,O.HUSTLE,O.TRUANT,484,58,109,112,48,48,109,90,50,169,D.MEDIUM_FAST,50,!1),new M(A.DEINO,5,!1,!1,!1,"Irate Pokémon",t.DARK,t.DRAGON,.8,17.3,O.HUSTLE,O.NONE,O.NONE,300,52,65,50,45,50,38,45,35,60,D.SLOW,50,!1),new M(A.ZWEILOUS,5,!1,!1,!1,"Hostile Pokémon",t.DARK,t.DRAGON,1.4,50,O.HUSTLE,O.NONE,O.NONE,420,72,85,70,65,70,58,45,35,147,D.SLOW,50,!1),new M(A.HYDREIGON,5,!1,!1,!1,"Brutal Pokémon",t.DARK,t.DRAGON,1.8,160,O.LEVITATE,O.NONE,O.NONE,600,92,105,90,125,90,98,45,35,300,D.SLOW,50,!1),new M(A.LARVESTA,5,!1,!1,!1,"Torch Pokémon",t.BUG,t.FIRE,1.1,28.8,O.FLAME_BODY,O.NONE,O.SWARM,360,55,85,55,50,55,60,45,50,72,D.SLOW,50,!1),new M(A.VOLCARONA,5,!1,!1,!1,"Sun Pokémon",t.BUG,t.FIRE,1.6,46,O.FLAME_BODY,O.NONE,O.SWARM,550,85,60,65,135,105,100,15,50,275,D.SLOW,50,!1),new M(A.COBALION,5,!0,!1,!1,"Iron Will Pokémon",t.STEEL,t.FIGHTING,2.1,250,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,129,90,72,108,3,35,290,D.SLOW,null,!1),new M(A.TERRAKION,5,!0,!1,!1,"Cavern Pokémon",t.ROCK,t.FIGHTING,1.9,260,O.JUSTIFIED,O.NONE,O.NONE,580,91,129,90,72,90,108,3,35,290,D.SLOW,null,!1),new M(A.VIRIZION,5,!0,!1,!1,"Grassland Pokémon",t.GRASS,t.FIGHTING,2,200,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,72,90,129,108,3,35,290,D.SLOW,null,!1),new M(A.TORNADUS,5,!0,!1,!1,"Cyclone Pokémon",t.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,D.SLOW,100,!1,!0,new Y("Incarnate Forme","incarnate",t.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new Y("Therian Forme","therian",t.FLYING,null,1.4,63,O.REGENERATOR,O.NONE,O.REGENERATOR,580,79,100,80,110,90,121,3,90,290)),new M(A.THUNDURUS,5,!0,!1,!1,"Bolt Strike Pokémon",t.ELECTRIC,t.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,D.SLOW,100,!1,!0,new Y("Incarnate Forme","incarnate",t.ELECTRIC,t.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new Y("Therian Forme","therian",t.ELECTRIC,t.FLYING,3,61,O.VOLT_ABSORB,O.NONE,O.VOLT_ABSORB,580,79,105,70,145,80,101,3,90,290)),new M(A.RESHIRAM,5,!1,!0,!1,"Vast White Pokémon",t.DRAGON,t.FIRE,3.2,330,O.TURBOBLAZE,O.NONE,O.NONE,680,100,120,100,150,120,90,3,0,340,D.SLOW,null,!1),new M(A.ZEKROM,5,!1,!0,!1,"Deep Black Pokémon",t.DRAGON,t.ELECTRIC,2.9,345,O.TERAVOLT,O.NONE,O.NONE,680,100,150,120,120,100,90,3,0,340,D.SLOW,null,!1),new M(A.LANDORUS,5,!0,!1,!1,"Abundance Pokémon",t.GROUND,t.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,D.SLOW,100,!1,!0,new Y("Incarnate Forme","incarnate",t.GROUND,t.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,!1,null,!0),new Y("Therian Forme","therian",t.GROUND,t.FLYING,1.3,68,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,89,145,90,105,80,91,3,90,300)),new M(A.KYUREM,5,!1,!0,!1,"Boundary Pokémon",t.DRAGON,t.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,D.SLOW,null,!1,!0,new Y("Normal","",t.DRAGON,t.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,!1,null,!0),new Y("Black","black",t.DRAGON,t.ICE,3.3,325,O.TERAVOLT,O.NONE,O.NONE,700,125,170,100,120,90,95,3,0,350),new Y("White","white",t.DRAGON,t.ICE,3.6,325,O.TURBOBLAZE,O.NONE,O.NONE,700,125,120,90,170,100,95,3,0,350)),new M(A.KELDEO,5,!1,!1,!0,"Colt Pokémon",t.WATER,t.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,D.SLOW,null,!1,!0,new Y("Ordinary Form","ordinary",t.WATER,t.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,!1,null,!0),new Y("Resolute","resolute",t.WATER,t.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290)),new M(A.MELOETTA,5,!1,!1,!0,"Melody Pokémon",t.NORMAL,t.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,300,D.SLOW,null,!1,!0,new Y("Aria Forme","aria",t.NORMAL,t.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,300,!1,null,!0),new Y("Pirouette Forme","pirouette",t.NORMAL,t.FIGHTING,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,128,90,77,77,128,3,100,300,!1,null,!0)),new M(A.GENESECT,5,!1,!1,!0,"Paleozoic Pokémon",t.BUG,t.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,D.SLOW,null,!1,!0,new Y("Normal","",t.BUG,t.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,!1,null,!0),new Y("Shock Drive","shock",t.BUG,t.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new Y("Burn Drive","burn",t.BUG,t.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new Y("Chill Drive","chill",t.BUG,t.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new Y("Douse Drive","douse",t.BUG,t.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300)),new M(A.CHESPIN,6,!1,!1,!1,"Spiny Nut Pokémon",t.GRASS,null,.4,9,O.OVERGROW,O.NONE,O.BULLETPROOF,313,56,61,65,48,45,38,45,70,63,D.MEDIUM_SLOW,87.5,!1),new M(A.QUILLADIN,6,!1,!1,!1,"Spiny Armor Pokémon",t.GRASS,null,.7,29,O.OVERGROW,O.NONE,O.BULLETPROOF,405,61,78,95,56,58,57,45,70,142,D.MEDIUM_SLOW,87.5,!1),new M(A.CHESNAUGHT,6,!1,!1,!1,"Spiny Armor Pokémon",t.GRASS,t.FIGHTING,1.6,90,O.OVERGROW,O.NONE,O.BULLETPROOF,530,88,107,122,74,75,64,45,70,265,D.MEDIUM_SLOW,87.5,!1),new M(A.FENNEKIN,6,!1,!1,!1,"Fox Pokémon",t.FIRE,null,.4,9.4,O.BLAZE,O.NONE,O.MAGICIAN,307,40,45,40,62,60,60,45,70,61,D.MEDIUM_SLOW,87.5,!1),new M(A.BRAIXEN,6,!1,!1,!1,"Fox Pokémon",t.FIRE,null,1,14.5,O.BLAZE,O.NONE,O.MAGICIAN,409,59,59,58,90,70,73,45,70,143,D.MEDIUM_SLOW,87.5,!1),new M(A.DELPHOX,6,!1,!1,!1,"Fox Pokémon",t.FIRE,t.PSYCHIC,1.5,39,O.BLAZE,O.NONE,O.MAGICIAN,534,75,69,72,114,100,104,45,70,267,D.MEDIUM_SLOW,87.5,!1),new M(A.FROAKIE,6,!1,!1,!1,"Bubble Frog Pokémon",t.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,D.MEDIUM_SLOW,87.5,!1,!1,new Y("Normal","",t.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,null,!0),new Y("Battle Bond","battle-bond",t.WATER,null,.3,7,O.TORRENT,O.NONE,O.TORRENT,314,41,56,40,62,44,71,45,70,63,!1,"",!0)),new M(A.FROGADIER,6,!1,!1,!1,"Bubble Frog Pokémon",t.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,D.MEDIUM_SLOW,87.5,!1,!1,new Y("Normal","",t.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,null,!0),new Y("Battle Bond","battle-bond",t.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.NONE,405,54,63,52,83,56,97,45,70,142,!1,"",!0)),new M(A.GRENINJA,6,!1,!1,!1,"Ninja Pokémon",t.WATER,t.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,265,D.MEDIUM_SLOW,87.5,!1,!1,new Y("Normal","",t.WATER,t.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,265,!1,null,!0),new Y("Battle Bond","battle-bond",t.WATER,t.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,530,72,95,67,103,71,122,45,70,265,!1,"",!0),new Y("Ash","ash",t.WATER,t.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.NONE,640,72,145,67,153,71,132,45,70,265)),new M(A.BUNNELBY,6,!1,!1,!1,"Digging Pokémon",t.NORMAL,null,.4,5,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,237,38,36,38,32,36,57,255,50,47,D.MEDIUM_FAST,50,!1),new M(A.DIGGERSBY,6,!1,!1,!1,"Digging Pokémon",t.NORMAL,t.GROUND,1,42.4,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,423,85,56,77,50,77,78,127,50,148,D.MEDIUM_FAST,50,!1),new M(A.FLETCHLING,6,!1,!1,!1,"Tiny Robin Pokémon",t.NORMAL,t.FLYING,.3,1.7,O.BIG_PECKS,O.NONE,O.GALE_WINGS,278,45,50,43,40,38,62,255,50,56,D.MEDIUM_SLOW,50,!1),new M(A.FLETCHINDER,6,!1,!1,!1,"Ember Pokémon",t.FIRE,t.FLYING,.7,16,O.FLAME_BODY,O.NONE,O.GALE_WINGS,382,62,73,55,56,52,84,120,50,134,D.MEDIUM_SLOW,50,!1),new M(A.TALONFLAME,6,!1,!1,!1,"Scorching Pokémon",t.FIRE,t.FLYING,1.2,24.5,O.FLAME_BODY,O.NONE,O.GALE_WINGS,499,78,81,71,74,69,126,45,50,175,D.MEDIUM_SLOW,50,!1),new M(A.SCATTERBUG,6,!1,!1,!1,"Scatterdust Pokémon",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,D.MEDIUM_FAST,50,!1,!1,new Y("Meadow Pattern","meadow",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Icy Snow Pattern","icy-snow",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Polar Pattern","polar",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Tundra Pattern","tundra",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Continental Pattern","continental",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Garden Pattern","garden",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Elegant Pattern","elegant",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Modern Pattern","modern",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Marine Pattern","marine",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Archipelago Pattern","archipelago",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("High Plains Pattern","high-plains",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Sandstorm Pattern","sandstorm",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("River Pattern","river",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Monsoon Pattern","monsoon",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Savanna Pattern","savanna",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Sun Pattern","sun",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Ocean Pattern","ocean",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Jungle Pattern","jungle",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Fancy Pattern","fancy",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new Y("Poké Ball Pattern","poke-ball",t.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0)),new M(A.SPEWPA,6,!1,!1,!1,"Scatterdust Pokémon",t.BUG,null,.3,8.4,O.SHED_SKIN,O.SHED_SKIN,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,D.MEDIUM_FAST,50,!1,!1,new Y("Meadow Pattern","meadow",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Icy Snow Pattern","icy-snow",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Polar Pattern","polar",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Tundra Pattern","tundra",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Continental Pattern","continental",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Garden Pattern","garden",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Elegant Pattern","elegant",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Modern Pattern","modern",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Marine Pattern","marine",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Archipelago Pattern","archipelago",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("High Plains Pattern","high-plains",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Sandstorm Pattern","sandstorm",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("River Pattern","river",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Monsoon Pattern","monsoon",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Savanna Pattern","savanna",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Sun Pattern","sun",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Ocean Pattern","ocean",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Jungle Pattern","jungle",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Fancy Pattern","fancy",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new Y("Poké Ball Pattern","poke-ball",t.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0)),new M(A.VIVILLON,6,!1,!1,!1,"Scale Pokémon",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,D.MEDIUM_FAST,50,!1,!1,new Y("Meadow Pattern","meadow",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Icy Snow Pattern","icy-snow",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Polar Pattern","polar",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Tundra Pattern","tundra",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Continental Pattern","continental",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Garden Pattern","garden",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Elegant Pattern","elegant",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Modern Pattern","modern",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Marine Pattern","marine",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Archipelago Pattern","archipelago",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("High Plains Pattern","high-plains",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Sandstorm Pattern","sandstorm",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("River Pattern","river",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Monsoon Pattern","monsoon",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Savanna Pattern","savanna",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Sun Pattern","sun",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Ocean Pattern","ocean",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Jungle Pattern","jungle",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Fancy Pattern","fancy",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new Y("Poké Ball Pattern","poke-ball",t.BUG,t.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0)),new M(A.LITLEO,6,!1,!1,!1,"Lion Cub Pokémon",t.FIRE,t.NORMAL,.6,13.5,O.RIVALRY,O.UNNERVE,O.MOXIE,369,62,50,58,73,54,72,220,70,74,D.MEDIUM_SLOW,12.5,!1),new M(A.PYROAR,6,!1,!1,!1,"Royal Pokémon",t.FIRE,t.NORMAL,1.5,81.5,O.RIVALRY,O.UNNERVE,O.MOXIE,507,86,68,72,109,66,106,65,70,177,D.MEDIUM_SLOW,12.5,!0),new M(A.FLABEBE,6,!1,!1,!1,"Single Bloom Pokémon",t.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,D.MEDIUM_FAST,0,!1,!1,new Y("Red Flower","red",t.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("Yellow Flower","yellow",t.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("Orange Flower","orange",t.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("Blue Flower","blue",t.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new Y("White Flower","white",t.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0)),new M(A.FLOETTE,6,!1,!1,!1,"Single Bloom Pokémon",t.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,D.MEDIUM_FAST,0,!1,!1,new Y("Red Flower","red",t.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("Yellow Flower","yellow",t.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("Orange Flower","orange",t.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("Blue Flower","blue",t.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new Y("White Flower","white",t.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0)),new M(A.FLORGES,6,!1,!1,!1,"Garden Pokémon",t.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,D.MEDIUM_FAST,0,!1,!1,new Y("Red Flower","red",t.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new Y("Yellow Flower","yellow",t.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new Y("Orange Flower","orange",t.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new Y("Blue Flower","blue",t.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new Y("White Flower","white",t.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0)),new M(A.SKIDDO,6,!1,!1,!1,"Mount Pokémon",t.GRASS,null,.9,31,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,350,66,65,48,62,57,52,200,70,70,D.MEDIUM_FAST,50,!1),new M(A.GOGOAT,6,!1,!1,!1,"Mount Pokémon",t.GRASS,null,1.7,91,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,531,123,100,62,97,81,68,45,70,186,D.MEDIUM_FAST,50,!1),new M(A.PANCHAM,6,!1,!1,!1,"Playful Pokémon",t.FIGHTING,null,.6,8,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,348,67,82,62,46,48,43,220,50,70,D.MEDIUM_FAST,50,!1),new M(A.PANGORO,6,!1,!1,!1,"Daunting Pokémon",t.FIGHTING,t.DARK,2.1,136,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,495,95,124,78,69,71,58,65,50,173,D.MEDIUM_FAST,50,!1),new M(A.FURFROU,6,!1,!1,!1,"Poodle Pokémon",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,D.MEDIUM_FAST,50,!1,!0,new Y("Natural Form","",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Heart Trim","heart",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Star Trim","star",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Diamond Trim","diamond",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Debutante Trim","debutante",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Matron Trim","matron",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Dandy Trim","dandy",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("La Reine Trim","la-reine",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Kabuki Trim","kabuki",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new Y("Pharaoh Trim","pharaoh",t.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0)),new M(A.ESPURR,6,!1,!1,!1,"Restraint Pokémon",t.PSYCHIC,null,.3,3.5,O.KEEN_EYE,O.INFILTRATOR,O.OWN_TEMPO,355,62,48,54,63,60,68,190,50,71,D.MEDIUM_FAST,50,!1),new M(A.MEOWSTIC,6,!1,!1,!1,"Constraint Pokémon",t.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,D.MEDIUM_FAST,50,!1,!1,new Y("Male","male",t.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,!1,"",!0),new Y("Female","female",t.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.COMPETITIVE,466,74,48,76,83,81,104,75,50,163,!1,null,!0)),new M(A.HONEDGE,6,!1,!1,!1,"Sword Pokémon",t.STEEL,t.GHOST,.8,2,O.NO_GUARD,O.NONE,O.NONE,325,45,80,100,35,37,28,180,50,65,D.MEDIUM_FAST,50,!1),new M(A.DOUBLADE,6,!1,!1,!1,"Sword Pokémon",t.STEEL,t.GHOST,.8,4.5,O.NO_GUARD,O.NONE,O.NONE,448,59,110,150,45,49,35,90,50,157,D.MEDIUM_FAST,50,!1),new M(A.AEGISLASH,6,!1,!1,!1,"Royal Sword Pokémon",t.STEEL,t.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,D.MEDIUM_FAST,50,!1,!0,new Y("Shield Forme","shield",t.STEEL,t.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,!1,"",!0),new Y("Blade Forme","blade",t.STEEL,t.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,140,50,140,50,60,45,50,250)),new M(A.SPRITZEE,6,!1,!1,!1,"Perfume Pokémon",t.FAIRY,null,.2,.5,O.HEALER,O.NONE,O.AROMA_VEIL,341,78,52,60,63,65,23,200,50,68,D.MEDIUM_FAST,50,!1),new M(A.AROMATISSE,6,!1,!1,!1,"Fragrance Pokémon",t.FAIRY,null,.8,15.5,O.HEALER,O.NONE,O.AROMA_VEIL,462,101,72,72,99,89,29,140,50,162,D.MEDIUM_FAST,50,!1),new M(A.SWIRLIX,6,!1,!1,!1,"Cotton Candy Pokémon",t.FAIRY,null,.4,3.5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,341,62,48,66,59,57,49,200,50,68,D.MEDIUM_FAST,50,!1),new M(A.SLURPUFF,6,!1,!1,!1,"Meringue Pokémon",t.FAIRY,null,.8,5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,480,82,80,86,85,75,72,140,50,168,D.MEDIUM_FAST,50,!1),new M(A.INKAY,6,!1,!1,!1,"Revolving Pokémon",t.DARK,t.PSYCHIC,.4,3.5,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,288,53,54,53,37,46,45,190,50,58,D.MEDIUM_FAST,50,!1),new M(A.MALAMAR,6,!1,!1,!1,"Overturning Pokémon",t.DARK,t.PSYCHIC,1.5,47,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,482,86,92,88,68,75,73,80,50,169,D.MEDIUM_FAST,50,!1),new M(A.BINACLE,6,!1,!1,!1,"Two-Handed Pokémon",t.ROCK,t.WATER,.5,31,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,306,42,52,67,39,56,50,120,50,61,D.MEDIUM_FAST,50,!1),new M(A.BARBARACLE,6,!1,!1,!1,"Collective Pokémon",t.ROCK,t.WATER,1.3,96,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,500,72,105,115,54,86,68,45,50,175,D.MEDIUM_FAST,50,!1),new M(A.SKRELP,6,!1,!1,!1,"Mock Kelp Pokémon",t.POISON,t.WATER,.5,7.3,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,320,50,60,60,60,60,30,225,50,64,D.MEDIUM_FAST,50,!1),new M(A.DRAGALGE,6,!1,!1,!1,"Mock Kelp Pokémon",t.POISON,t.DRAGON,1.8,81.5,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,494,65,75,90,97,123,44,55,50,173,D.MEDIUM_FAST,50,!1),new M(A.CLAUNCHER,6,!1,!1,!1,"Water Gun Pokémon",t.WATER,null,.5,8.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,330,50,53,62,58,63,44,225,50,66,D.SLOW,50,!1),new M(A.CLAWITZER,6,!1,!1,!1,"Howitzer Pokémon",t.WATER,null,1.3,35.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,500,71,73,88,120,89,59,55,50,100,D.SLOW,50,!1),new M(A.HELIOPTILE,6,!1,!1,!1,"Generator Pokémon",t.ELECTRIC,t.NORMAL,.5,6,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,289,44,38,33,61,43,70,190,50,58,D.MEDIUM_FAST,50,!1),new M(A.HELIOLISK,6,!1,!1,!1,"Generator Pokémon",t.ELECTRIC,t.NORMAL,1,21,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,481,62,55,52,109,94,109,75,50,168,D.MEDIUM_FAST,50,!1),new M(A.TYRUNT,6,!1,!1,!1,"Royal Heir Pokémon",t.ROCK,t.DRAGON,.8,26,O.STRONG_JAW,O.NONE,O.STURDY,362,58,89,77,45,45,48,45,50,72,D.MEDIUM_FAST,87.5,!1),new M(A.TYRANTRUM,6,!1,!1,!1,"Despot Pokémon",t.ROCK,t.DRAGON,2.5,270,O.STRONG_JAW,O.NONE,O.ROCK_HEAD,521,82,121,119,69,59,71,45,50,182,D.MEDIUM_FAST,87.5,!1),new M(A.AMAURA,6,!1,!1,!1,"Tundra Pokémon",t.ROCK,t.ICE,1.3,25.2,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,362,77,59,50,67,63,46,45,50,72,D.MEDIUM_FAST,87.5,!1),new M(A.AURORUS,6,!1,!1,!1,"Tundra Pokémon",t.ROCK,t.ICE,2.7,225,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,521,123,77,72,99,92,58,45,50,104,D.MEDIUM_FAST,87.5,!1),new M(A.SYLVEON,6,!1,!1,!1,"Intertwining Pokémon",t.FAIRY,null,1,23.5,O.CUTE_CHARM,O.NONE,O.PIXILATE,525,95,65,65,110,130,60,45,50,184,D.MEDIUM_FAST,87.5,!1),new M(A.HAWLUCHA,6,!1,!1,!1,"Wrestling Pokémon",t.FIGHTING,t.FLYING,.8,21.5,O.LIMBER,O.UNBURDEN,O.MOLD_BREAKER,500,78,92,75,74,63,118,100,50,175,D.MEDIUM_FAST,50,!1),new M(A.DEDENNE,6,!1,!1,!1,"Antenna Pokémon",t.ELECTRIC,t.FAIRY,.2,2.2,O.CHEEK_POUCH,O.PICKUP,O.PLUS,431,67,58,57,81,67,101,180,50,151,D.MEDIUM_FAST,50,!1),new M(A.CARBINK,6,!1,!1,!1,"Jewel Pokémon",t.ROCK,t.FAIRY,.3,5.7,O.CLEAR_BODY,O.NONE,O.STURDY,500,50,50,150,50,150,50,60,50,100,D.SLOW,null,!1),new M(A.GOOMY,6,!1,!1,!1,"Soft Tissue Pokémon",t.DRAGON,null,.3,2.8,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,300,45,50,35,55,75,40,45,35,60,D.SLOW,50,!1),new M(A.SLIGGOO,6,!1,!1,!1,"Soft Tissue Pokémon",t.DRAGON,null,.8,17.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,452,68,75,53,83,113,60,45,35,158,D.SLOW,50,!1),new M(A.GOODRA,6,!1,!1,!1,"Dragon Pokémon",t.DRAGON,null,2,150.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,600,90,100,70,110,150,80,45,35,300,D.SLOW,50,!1),new M(A.KLEFKI,6,!1,!1,!1,"Key Ring Pokémon",t.STEEL,t.FAIRY,.2,3,O.PRANKSTER,O.NONE,O.MAGICIAN,470,57,80,91,80,87,75,75,50,165,D.FAST,50,!1),new M(A.PHANTUMP,6,!1,!1,!1,"Stump Pokémon",t.GHOST,t.GRASS,.4,7,O.NATURAL_CURE,O.FRISK,O.HARVEST,309,43,70,48,50,60,38,120,50,62,D.MEDIUM_FAST,50,!1),new M(A.TREVENANT,6,!1,!1,!1,"Elder Tree Pokémon",t.GHOST,t.GRASS,1.5,71,O.NATURAL_CURE,O.FRISK,O.HARVEST,474,85,110,76,65,82,56,60,50,166,D.MEDIUM_FAST,50,!1),new M(A.PUMPKABOO,6,!1,!1,!1,"Pumpkin Pokémon",t.GHOST,t.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,D.MEDIUM_FAST,50,!1,!1,new Y("Average Size","",t.GHOST,t.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,!1,null,!0),new Y("Small Size","small",t.GHOST,t.GRASS,.3,3.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,44,66,70,44,55,56,120,50,67,!1,"",!0),new Y("Large Size","large",t.GHOST,t.GRASS,.5,7.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,54,66,70,44,55,46,120,50,67,!1,"",!0),new Y("Super Size","super",t.GHOST,t.GRASS,.8,15,O.PICKUP,O.FRISK,O.INSOMNIA,335,59,66,70,44,55,41,120,50,67,!1,"",!0)),new M(A.GOURGEIST,6,!1,!1,!1,"Pumpkin Pokémon",t.GHOST,t.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,D.MEDIUM_FAST,50,!1,!1,new Y("Average Size","",t.GHOST,t.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,!1,null,!0),new Y("Small Size","small",t.GHOST,t.GRASS,.7,9.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,55,85,122,58,75,99,60,50,173,!1,"",!0),new Y("Large Size","large",t.GHOST,t.GRASS,1.1,14,O.PICKUP,O.FRISK,O.INSOMNIA,494,75,95,122,58,75,69,60,50,173,!1,"",!0),new Y("Super Size","super",t.GHOST,t.GRASS,1.7,39,O.PICKUP,O.FRISK,O.INSOMNIA,494,85,100,122,58,75,54,60,50,173,!1,"",!0)),new M(A.BERGMITE,6,!1,!1,!1,"Ice Chunk Pokémon",t.ICE,null,1,99.5,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,304,55,69,85,32,35,28,190,50,61,D.MEDIUM_FAST,50,!1),new M(A.AVALUGG,6,!1,!1,!1,"Iceberg Pokémon",t.ICE,null,2,505,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,514,95,117,184,44,46,28,55,50,180,D.MEDIUM_FAST,50,!1),new M(A.NOIBAT,6,!1,!1,!1,"Sound Wave Pokémon",t.FLYING,t.DRAGON,.5,8,O.FRISK,O.INFILTRATOR,O.TELEPATHY,245,40,30,35,45,40,55,190,50,49,D.MEDIUM_FAST,50,!1),new M(A.NOIVERN,6,!1,!1,!1,"Sound Wave Pokémon",t.FLYING,t.DRAGON,1.5,85,O.FRISK,O.INFILTRATOR,O.TELEPATHY,535,85,70,80,97,80,123,45,50,187,D.MEDIUM_FAST,50,!1),new M(A.XERNEAS,6,!1,!0,!1,"Life Pokémon",t.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,D.SLOW,null,!1,!0,new Y("Neutral Mode","neutral",t.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,!1,null,!0),new Y("Active Mode","active",t.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340)),new M(A.YVELTAL,6,!1,!0,!1,"Destruction Pokémon",t.DARK,t.FLYING,5.8,203,O.DARK_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,D.SLOW,null,!1),new M(A.ZYGARDE,6,!1,!0,!1,"Order Pokémon",t.DRAGON,t.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,D.SLOW,null,!1,!1,new Y("50% Forme","50",t.DRAGON,t.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new Y("10% Forme","10",t.DRAGON,t.GROUND,1.2,33.5,O.AURA_BREAK,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,243,!1,null,!0),new Y("50% Forme Power Construct","50-pc",t.DRAGON,t.GROUND,5,305,O.POWER_CONSTRUCT,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new Y("10% Forme Power Construct","10-pc",t.DRAGON,t.GROUND,1.2,33.5,O.POWER_CONSTRUCT,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,243,!1,"10",!0),new Y("Complete Forme (50% PC)","complete",t.DRAGON,t.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,354),new Y("Complete Forme (10% PC)","10-complete",t.DRAGON,t.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,354,!1,"complete")),new M(A.DIANCIE,6,!1,!1,!0,"Jewel Pokémon",t.ROCK,t.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,D.SLOW,null,!1,!0,new Y("Normal","",t.ROCK,t.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,!1,null,!0),new Y("Mega",eA.MEGA,t.ROCK,t.FAIRY,1.1,27.8,O.MAGIC_BOUNCE,O.NONE,O.NONE,700,50,160,110,160,110,110,3,50,300)),new M(A.HOOPA,6,!1,!1,!0,"Mischief Pokémon",t.PSYCHIC,t.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,300,D.SLOW,null,!1,!1,new Y("Hoopa Confined","",t.PSYCHIC,t.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,300,!1,null,!0),new Y("Hoopa Unbound","unbound",t.PSYCHIC,t.DARK,6.5,490,O.MAGICIAN,O.NONE,O.NONE,680,80,160,60,170,130,80,3,100,340)),new M(A.VOLCANION,6,!1,!1,!0,"Steam Pokémon",t.FIRE,t.WATER,1.7,195,O.WATER_ABSORB,O.NONE,O.NONE,600,80,110,120,130,90,70,3,100,300,D.SLOW,null,!1),new M(A.ROWLET,7,!1,!1,!1,"Grass Quill Pokémon",t.GRASS,t.FLYING,.3,1.5,O.OVERGROW,O.NONE,O.LONG_REACH,320,68,55,55,50,50,42,45,50,64,D.MEDIUM_SLOW,87.5,!1),new M(A.DARTRIX,7,!1,!1,!1,"Blade Quill Pokémon",t.GRASS,t.FLYING,.7,16,O.OVERGROW,O.NONE,O.LONG_REACH,420,78,75,75,70,70,52,45,50,147,D.MEDIUM_SLOW,87.5,!1),new M(A.DECIDUEYE,7,!1,!1,!1,"Arrow Quill Pokémon",t.GRASS,t.GHOST,1.6,36.6,O.OVERGROW,O.NONE,O.LONG_REACH,530,78,107,75,100,100,70,45,50,265,D.MEDIUM_SLOW,87.5,!1),new M(A.LITTEN,7,!1,!1,!1,"Fire Cat Pokémon",t.FIRE,null,.4,4.3,O.BLAZE,O.NONE,O.INTIMIDATE,320,45,65,40,60,40,70,45,50,64,D.MEDIUM_SLOW,87.5,!1),new M(A.TORRACAT,7,!1,!1,!1,"Fire Cat Pokémon",t.FIRE,null,.7,25,O.BLAZE,O.NONE,O.INTIMIDATE,420,65,85,50,80,50,90,45,50,147,D.MEDIUM_SLOW,87.5,!1),new M(A.INCINEROAR,7,!1,!1,!1,"Heel Pokémon",t.FIRE,t.DARK,1.8,83,O.BLAZE,O.NONE,O.INTIMIDATE,530,95,115,90,80,90,60,45,50,265,D.MEDIUM_SLOW,87.5,!1),new M(A.POPPLIO,7,!1,!1,!1,"Sea Lion Pokémon",t.WATER,null,.4,7.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,320,50,54,54,66,56,40,45,50,64,D.MEDIUM_SLOW,87.5,!1),new M(A.BRIONNE,7,!1,!1,!1,"Pop Star Pokémon",t.WATER,null,.6,17.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,420,60,69,69,91,81,50,45,50,147,D.MEDIUM_SLOW,87.5,!1),new M(A.PRIMARINA,7,!1,!1,!1,"Soloist Pokémon",t.WATER,t.FAIRY,1.8,44,O.TORRENT,O.NONE,O.LIQUID_VOICE,530,80,74,74,126,116,60,45,50,265,D.MEDIUM_SLOW,87.5,!1),new M(A.PIKIPEK,7,!1,!1,!1,"Woodpecker Pokémon",t.NORMAL,t.FLYING,.3,1.2,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,265,35,75,30,30,30,65,255,70,53,D.MEDIUM_FAST,50,!1),new M(A.TRUMBEAK,7,!1,!1,!1,"Bugle Beak Pokémon",t.NORMAL,t.FLYING,.6,14.8,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,355,55,85,50,40,50,75,120,70,124,D.MEDIUM_FAST,50,!1),new M(A.TOUCANNON,7,!1,!1,!1,"Cannon Pokémon",t.NORMAL,t.FLYING,1.1,26,O.KEEN_EYE,O.SKILL_LINK,O.SHEER_FORCE,485,80,120,75,75,75,60,45,70,243,D.MEDIUM_FAST,50,!1),new M(A.YUNGOOS,7,!1,!1,!1,"Loitering Pokémon",t.NORMAL,null,.4,6,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,253,48,70,30,30,30,45,255,70,51,D.MEDIUM_FAST,50,!1),new M(A.GUMSHOOS,7,!1,!1,!1,"Stakeout Pokémon",t.NORMAL,null,.7,14.2,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,418,88,110,60,55,60,45,127,70,146,D.MEDIUM_FAST,50,!1),new M(A.GRUBBIN,7,!1,!1,!1,"Larva Pokémon",t.BUG,null,.4,4.4,O.SWARM,O.NONE,O.NONE,300,47,62,45,55,45,46,255,50,60,D.MEDIUM_FAST,50,!1),new M(A.CHARJABUG,7,!1,!1,!1,"Battery Pokémon",t.BUG,t.ELECTRIC,.5,10.5,O.BATTERY,O.NONE,O.NONE,400,57,82,95,55,75,36,120,50,140,D.MEDIUM_FAST,50,!1),new M(A.VIKAVOLT,7,!1,!1,!1,"Stag Beetle Pokémon",t.BUG,t.ELECTRIC,1.5,45,O.LEVITATE,O.NONE,O.NONE,500,77,70,90,145,75,43,45,50,250,D.MEDIUM_FAST,50,!1),new M(A.CRABRAWLER,7,!1,!1,!1,"Boxing Pokémon",t.FIGHTING,null,.6,7,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,338,47,82,57,42,47,63,225,70,68,D.MEDIUM_FAST,50,!1),new M(A.CRABOMINABLE,7,!1,!1,!1,"Woolly Crab Pokémon",t.FIGHTING,t.ICE,1.7,180,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,478,97,132,77,62,67,43,60,70,167,D.MEDIUM_FAST,50,!1),new M(A.ORICORIO,7,!1,!1,!1,"Dancing Pokémon",t.FIRE,t.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,D.MEDIUM_FAST,25,!1,!1,new Y("Baile Style","baile",t.FIRE,t.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,"",!0),new Y("Pom-Pom Style","pompom",t.ELECTRIC,t.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new Y("Pau Style","pau",t.PSYCHIC,t.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new Y("Sensu Style","sensu",t.GHOST,t.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0)),new M(A.CUTIEFLY,7,!1,!1,!1,"Bee Fly Pokémon",t.BUG,t.FAIRY,.1,.2,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,304,40,45,40,55,40,84,190,50,61,D.MEDIUM_FAST,50,!1),new M(A.RIBOMBEE,7,!1,!1,!1,"Bee Fly Pokémon",t.BUG,t.FAIRY,.2,.5,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,464,60,55,60,95,70,124,75,50,162,D.MEDIUM_FAST,50,!1),new M(A.ROCKRUFF,7,!1,!1,!1,"Puppy Pokémon",t.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,D.MEDIUM_FAST,50,!1,!1,new Y("Normal","",t.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,!1,null,!0),new Y("Own Tempo","own-tempo",t.ROCK,null,.5,9.2,O.OWN_TEMPO,O.NONE,O.OWN_TEMPO,280,45,65,40,30,40,60,190,50,56,!1,"",!0)),new M(A.LYCANROC,7,!1,!1,!1,"Wolf Pokémon",t.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,D.MEDIUM_FAST,50,!1,!1,new Y("Midday Form","midday",t.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,!1,"",!0),new Y("Midnight Form","midnight",t.ROCK,null,1.1,25,O.KEEN_EYE,O.VITAL_SPIRIT,O.NO_GUARD,487,85,115,75,55,75,82,90,50,170,!1,null,!0),new Y("Dusk Form","dusk",t.ROCK,null,.8,25,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,487,75,117,65,55,65,110,90,50,170,!1,null,!0)),new M(A.WISHIWASHI,7,!1,!1,!1,"Small Fry Pokémon",t.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,D.FAST,50,!1,!1,new Y("Solo Form","",t.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,!1,null,!0),new Y("School","school",t.WATER,null,8.2,78.6,O.SCHOOLING,O.NONE,O.NONE,620,45,140,130,140,135,30,60,50,217)),new M(A.MAREANIE,7,!1,!1,!1,"Brutal Star Pokémon",t.POISON,t.WATER,.4,8,O.MERCILESS,O.LIMBER,O.REGENERATOR,305,50,53,62,43,52,45,190,50,61,D.MEDIUM_FAST,50,!1),new M(A.TOXAPEX,7,!1,!1,!1,"Brutal Star Pokémon",t.POISON,t.WATER,.7,14.5,O.MERCILESS,O.LIMBER,O.REGENERATOR,495,50,63,152,53,142,35,75,50,173,D.MEDIUM_FAST,50,!1),new M(A.MUDBRAY,7,!1,!1,!1,"Donkey Pokémon",t.GROUND,null,1,110,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,385,70,100,70,45,55,45,190,50,77,D.MEDIUM_FAST,50,!1),new M(A.MUDSDALE,7,!1,!1,!1,"Draft Horse Pokémon",t.GROUND,null,2.5,920,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,500,100,125,100,55,85,35,60,50,175,D.MEDIUM_FAST,50,!1),new M(A.DEWPIDER,7,!1,!1,!1,"Water Bubble Pokémon",t.WATER,t.BUG,.3,4,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,269,38,40,52,40,72,27,200,50,54,D.MEDIUM_FAST,50,!1),new M(A.ARAQUANID,7,!1,!1,!1,"Water Bubble Pokémon",t.WATER,t.BUG,1.8,82,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,454,68,70,92,50,132,42,100,50,159,D.MEDIUM_FAST,50,!1),new M(A.FOMANTIS,7,!1,!1,!1,"Sickle Grass Pokémon",t.GRASS,null,.3,1.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,250,40,55,35,50,35,35,190,50,50,D.MEDIUM_FAST,50,!1),new M(A.LURANTIS,7,!1,!1,!1,"Bloom Sickle Pokémon",t.GRASS,null,.9,18.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,480,70,105,90,80,90,45,75,50,168,D.MEDIUM_FAST,50,!1),new M(A.MORELULL,7,!1,!1,!1,"Illuminating Pokémon",t.GRASS,t.FAIRY,.2,1.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,285,40,35,55,65,75,15,190,50,57,D.MEDIUM_FAST,50,!1),new M(A.SHIINOTIC,7,!1,!1,!1,"Illuminating Pokémon",t.GRASS,t.FAIRY,1,11.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,405,60,45,80,90,100,30,75,50,142,D.MEDIUM_FAST,50,!1),new M(A.SALANDIT,7,!1,!1,!1,"Toxic Lizard Pokémon",t.POISON,t.FIRE,.6,4.8,O.CORROSION,O.NONE,O.OBLIVIOUS,320,48,44,40,71,40,77,120,50,64,D.MEDIUM_FAST,87.5,!1),new M(A.SALAZZLE,7,!1,!1,!1,"Toxic Lizard Pokémon",t.POISON,t.FIRE,1.2,22.2,O.CORROSION,O.NONE,O.OBLIVIOUS,480,68,64,60,111,60,117,45,50,168,D.MEDIUM_FAST,0,!1),new M(A.STUFFUL,7,!1,!1,!1,"Flailing Pokémon",t.NORMAL,t.FIGHTING,.5,6.8,O.FLUFFY,O.KLUTZ,O.CUTE_CHARM,340,70,75,50,45,50,50,140,50,68,D.MEDIUM_FAST,50,!1),new M(A.BEWEAR,7,!1,!1,!1,"Strong Arm Pokémon",t.NORMAL,t.FIGHTING,2.1,135,O.FLUFFY,O.KLUTZ,O.UNNERVE,500,120,125,80,55,60,60,70,50,175,D.MEDIUM_FAST,50,!1),new M(A.BOUNSWEET,7,!1,!1,!1,"Fruit Pokémon",t.GRASS,null,.3,3.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,210,42,30,38,30,38,32,235,50,42,D.MEDIUM_SLOW,0,!1),new M(A.STEENEE,7,!1,!1,!1,"Fruit Pokémon",t.GRASS,null,.7,8.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,290,52,40,48,40,48,62,120,50,102,D.MEDIUM_SLOW,0,!1),new M(A.TSAREENA,7,!1,!1,!1,"Fruit Pokémon",t.GRASS,null,1.2,21.4,O.LEAF_GUARD,O.QUEENLY_MAJESTY,O.SWEET_VEIL,510,72,120,98,50,98,72,45,50,255,D.MEDIUM_SLOW,0,!1),new M(A.COMFEY,7,!1,!1,!1,"Posy Picker Pokémon",t.FAIRY,null,.1,.3,O.FLOWER_VEIL,O.TRIAGE,O.NATURAL_CURE,485,51,52,90,82,110,100,60,50,170,D.FAST,25,!1),new M(A.ORANGURU,7,!1,!1,!1,"Sage Pokémon",t.NORMAL,t.PSYCHIC,1.5,76,O.INNER_FOCUS,O.TELEPATHY,O.SYMBIOSIS,490,90,60,80,90,110,60,45,50,172,D.SLOW,50,!1),new M(A.PASSIMIAN,7,!1,!1,!1,"Teamwork Pokémon",t.FIGHTING,null,2,82.8,O.RECEIVER,O.NONE,O.DEFIANT,490,100,120,90,40,60,80,45,50,172,D.SLOW,50,!1),new M(A.WIMPOD,7,!1,!1,!1,"Turn Tail Pokémon",t.BUG,t.WATER,.5,12,O.WIMP_OUT,O.NONE,O.RUN_AWAY,230,25,35,40,20,30,80,90,50,46,D.MEDIUM_FAST,50,!1),new M(A.GOLISOPOD,7,!1,!1,!1,"Hard Scale Pokémon",t.BUG,t.WATER,2,108,O.EMERGENCY_EXIT,O.NONE,O.ANTICIPATION,530,75,125,140,60,90,40,45,50,186,D.MEDIUM_FAST,50,!1),new M(A.SANDYGAST,7,!1,!1,!1,"Sand Heap Pokémon",t.GHOST,t.GROUND,.5,70,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,320,55,55,80,70,45,15,140,50,64,D.MEDIUM_FAST,50,!1),new M(A.PALOSSAND,7,!1,!1,!1,"Sand Castle Pokémon",t.GHOST,t.GROUND,1.3,250,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,480,85,75,110,100,75,35,60,50,168,D.MEDIUM_FAST,50,!1),new M(A.PYUKUMUKU,7,!1,!1,!1,"Sea Cucumber Pokémon",t.WATER,null,.3,1.2,O.INNARDS_OUT,O.NONE,O.UNAWARE,410,55,60,130,30,130,5,60,50,144,D.FAST,50,!1),new M(A.TYPE_NULL,7,!0,!1,!1,"Synthetic Pokémon",t.NORMAL,null,1.9,120.5,O.BATTLE_ARMOR,O.NONE,O.NONE,534,95,95,95,95,95,59,3,0,107,D.SLOW,null,!1),new M(A.SILVALLY,7,!0,!1,!1,"Synthetic Pokémon",t.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,D.SLOW,null,!1,!1,new Y("Type: Normal","normal",t.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,!1,"",!0),new Y("Type: Fighting","fighting",t.FIGHTING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Flying","flying",t.FLYING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Poison","poison",t.POISON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Ground","ground",t.GROUND,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Rock","rock",t.ROCK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Bug","bug",t.BUG,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Ghost","ghost",t.GHOST,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Steel","steel",t.STEEL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Fire","fire",t.FIRE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Water","water",t.WATER,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Grass","grass",t.GRASS,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Electric","electric",t.ELECTRIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Psychic","psychic",t.PSYCHIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Ice","ice",t.ICE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Dragon","dragon",t.DRAGON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Dark","dark",t.DARK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new Y("Type: Fairy","fairy",t.FAIRY,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285)),new M(A.MINIOR,7,!1,!1,!1,"Meteor Pokémon",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,D.MEDIUM_SLOW,null,!1,!1,new Y("Red Meteor Form","red-meteor",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Orange Meteor Form","orange-meteor",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Yellow Meteor Form","yellow-meteor",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Green Meteor Form","green-meteor",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Blue Meteor Form","blue-meteor",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Indigo Meteor Form","indigo-meteor",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Violet Meteor Form","violet-meteor",t.ROCK,t.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new Y("Red Core Form","red",t.ROCK,t.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new Y("Orange Core Form","orange",t.ROCK,t.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new Y("Yellow Core Form","yellow",t.ROCK,t.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new Y("Green Core Form","green",t.ROCK,t.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new Y("Blue Core Form","blue",t.ROCK,t.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new Y("Indigo Core Form","indigo",t.ROCK,t.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new Y("Violet Core Form","violet",t.ROCK,t.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0)),new M(A.KOMALA,7,!1,!1,!1,"Drowsing Pokémon",t.NORMAL,null,.4,19.9,O.COMATOSE,O.NONE,O.NONE,480,65,115,65,75,95,65,45,70,168,D.SLOW,50,!1),new M(A.TURTONATOR,7,!1,!1,!1,"Blast Turtle Pokémon",t.FIRE,t.DRAGON,2,212,O.SHELL_ARMOR,O.NONE,O.NONE,485,60,78,135,91,85,36,70,50,170,D.MEDIUM_FAST,50,!1),new M(A.TOGEDEMARU,7,!1,!1,!1,"Roly-Poly Pokémon",t.ELECTRIC,t.STEEL,.3,3.3,O.IRON_BARBS,O.LIGHTNING_ROD,O.STURDY,435,65,98,63,40,73,96,180,50,152,D.MEDIUM_FAST,50,!1),new M(A.MIMIKYU,7,!1,!1,!1,"Disguise Pokémon",t.GHOST,t.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,D.MEDIUM_FAST,50,!1,!1,new Y("Disguised Form","disguised",t.GHOST,t.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,!1,null,!0),new Y("Busted Form","busted",t.GHOST,t.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167)),new M(A.BRUXISH,7,!1,!1,!1,"Gnash Teeth Pokémon",t.WATER,t.PSYCHIC,.9,19,O.DAZZLING,O.STRONG_JAW,O.WONDER_SKIN,475,68,105,70,70,70,92,80,70,166,D.MEDIUM_FAST,50,!1),new M(A.DRAMPA,7,!1,!1,!1,"Placid Pokémon",t.NORMAL,t.DRAGON,3,185,O.BERSERK,O.SAP_SIPPER,O.CLOUD_NINE,485,78,60,85,135,91,36,70,50,170,D.MEDIUM_FAST,50,!1),new M(A.DHELMISE,7,!1,!1,!1,"Sea Creeper Pokémon",t.GHOST,t.GRASS,3.9,210,O.STEELWORKER,O.NONE,O.NONE,517,70,131,100,86,90,40,25,50,181,D.MEDIUM_FAST,null,!1),new M(A.JANGMO_O,7,!1,!1,!1,"Scaly Pokémon",t.DRAGON,null,.6,29.7,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,300,45,55,65,45,45,45,45,50,60,D.SLOW,50,!1),new M(A.HAKAMO_O,7,!1,!1,!1,"Scaly Pokémon",t.DRAGON,t.FIGHTING,1.2,47,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,420,55,75,90,65,70,65,45,50,147,D.SLOW,50,!1),new M(A.KOMMO_O,7,!1,!1,!1,"Scaly Pokémon",t.DRAGON,t.FIGHTING,1.6,78.2,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,600,75,110,125,100,105,85,45,50,300,D.SLOW,50,!1),new M(A.TAPU_KOKO,7,!0,!1,!1,"Land Spirit Pokémon",t.ELECTRIC,t.FAIRY,1.8,20.5,O.ELECTRIC_SURGE,O.NONE,O.TELEPATHY,570,70,115,85,95,75,130,3,50,285,D.SLOW,null,!1),new M(A.TAPU_LELE,7,!0,!1,!1,"Land Spirit Pokémon",t.PSYCHIC,t.FAIRY,1.2,18.6,O.PSYCHIC_SURGE,O.NONE,O.TELEPATHY,570,70,85,75,130,115,95,3,50,285,D.SLOW,null,!1),new M(A.TAPU_BULU,7,!0,!1,!1,"Land Spirit Pokémon",t.GRASS,t.FAIRY,1.9,45.5,O.GRASSY_SURGE,O.NONE,O.TELEPATHY,570,70,130,115,85,95,75,3,50,285,D.SLOW,null,!1),new M(A.TAPU_FINI,7,!0,!1,!1,"Land Spirit Pokémon",t.WATER,t.FAIRY,1.3,21.2,O.MISTY_SURGE,O.NONE,O.TELEPATHY,570,70,75,115,95,130,85,3,50,285,D.SLOW,null,!1),new M(A.COSMOG,7,!0,!1,!1,"Nebula Pokémon",t.PSYCHIC,null,.2,.1,O.UNAWARE,O.NONE,O.NONE,200,43,29,31,29,31,37,3,0,40,D.SLOW,null,!1),new M(A.COSMOEM,7,!0,!1,!1,"Protostar Pokémon",t.PSYCHIC,null,.1,999.9,O.STURDY,O.NONE,O.NONE,400,43,29,131,29,131,37,3,0,140,D.SLOW,null,!1),new M(A.SOLGALEO,7,!1,!0,!1,"Sunne Pokémon",t.PSYCHIC,t.STEEL,3.4,230,O.FULL_METAL_BODY,O.NONE,O.NONE,680,137,137,107,113,89,97,3,0,340,D.SLOW,null,!1),new M(A.LUNALA,7,!1,!0,!1,"Moone Pokémon",t.PSYCHIC,t.GHOST,4,120,O.SHADOW_SHIELD,O.NONE,O.NONE,680,137,113,89,137,107,97,3,0,340,D.SLOW,null,!1),new M(A.NIHILEGO,7,!0,!1,!1,"Parasite Pokémon",t.ROCK,t.POISON,1.2,55.5,O.BEAST_BOOST,O.NONE,O.NONE,570,109,53,47,127,131,103,45,0,285,D.SLOW,null,!1),new M(A.BUZZWOLE,7,!0,!1,!1,"Swollen Pokémon",t.BUG,t.FIGHTING,2.4,333.6,O.BEAST_BOOST,O.NONE,O.NONE,570,107,139,139,53,53,79,45,0,285,D.SLOW,null,!1),new M(A.PHEROMOSA,7,!0,!1,!1,"Lissome Pokémon",t.BUG,t.FIGHTING,1.8,25,O.BEAST_BOOST,O.NONE,O.NONE,570,71,137,37,137,37,151,45,0,285,D.SLOW,null,!1),new M(A.XURKITREE,7,!0,!1,!1,"Glowing Pokémon",t.ELECTRIC,null,3.8,100,O.BEAST_BOOST,O.NONE,O.NONE,570,83,89,71,173,71,83,45,0,285,D.SLOW,null,!1),new M(A.CELESTEELA,7,!0,!1,!1,"Launch Pokémon",t.STEEL,t.FLYING,9.2,999.9,O.BEAST_BOOST,O.NONE,O.NONE,570,97,101,103,107,101,61,45,0,285,D.SLOW,null,!1),new M(A.KARTANA,7,!0,!1,!1,"Drawn Sword Pokémon",t.GRASS,t.STEEL,.3,.1,O.BEAST_BOOST,O.NONE,O.NONE,570,59,181,131,59,31,109,45,0,285,D.SLOW,null,!1),new M(A.GUZZLORD,7,!0,!1,!1,"Junkivore Pokémon",t.DARK,t.DRAGON,5.5,888,O.BEAST_BOOST,O.NONE,O.NONE,570,223,101,53,97,53,43,45,0,285,D.SLOW,null,!1),new M(A.NECROZMA,7,!1,!0,!1,"Prism Pokémon",t.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,3,0,300,D.SLOW,null,!1,!1,new Y("Normal","",t.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,3,0,300,!1,null,!0),new Y("Dusk Mane","dusk-mane",t.PSYCHIC,t.STEEL,3.8,460,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,157,127,113,109,77,3,0,340),new Y("Dawn Wings","dawn-wings",t.PSYCHIC,t.GHOST,4.2,350,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,113,109,157,127,77,3,0,340),new Y("Ultra","ultra",t.PSYCHIC,t.DRAGON,7.5,230,O.NEUROFORCE,O.NONE,O.NONE,754,97,167,97,167,97,129,3,0,377)),new M(A.MAGEARNA,7,!1,!1,!0,"Artificial Pokémon",t.STEEL,t.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,D.SLOW,null,!1,!1,new Y("Normal","",t.STEEL,t.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0),new Y("Original","original",t.STEEL,t.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0)),new M(A.MARSHADOW,7,!1,!1,!0,"Gloomdweller Pokémon",t.FIGHTING,t.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,D.SLOW,null,!1,!0,new Y("Normal","",t.FIGHTING,t.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!0),new Y("Zenith","zenith",t.FIGHTING,t.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!1,!0)),new M(A.POIPOLE,7,!0,!1,!1,"Poison Pin Pokémon",t.POISON,null,.6,1.8,O.BEAST_BOOST,O.NONE,O.NONE,420,67,73,67,73,67,73,45,0,210,D.SLOW,null,!1),new M(A.NAGANADEL,7,!0,!1,!1,"Poison Pin Pokémon",t.POISON,t.DRAGON,3.6,150,O.BEAST_BOOST,O.NONE,O.NONE,540,73,73,73,127,73,121,45,0,270,D.SLOW,null,!1),new M(A.STAKATAKA,7,!0,!1,!1,"Rampart Pokémon",t.ROCK,t.STEEL,5.5,820,O.BEAST_BOOST,O.NONE,O.NONE,570,61,131,211,53,101,13,30,0,285,D.SLOW,null,!1),new M(A.BLACEPHALON,7,!0,!1,!1,"Fireworks Pokémon",t.FIRE,t.GHOST,1.8,13,O.BEAST_BOOST,O.NONE,O.NONE,570,53,127,53,151,79,107,30,0,285,D.SLOW,null,!1),new M(A.ZERAORA,7,!1,!1,!0,"Thunderclap Pokémon",t.ELECTRIC,null,1.5,44.5,O.VOLT_ABSORB,O.NONE,O.NONE,600,88,112,75,102,80,143,3,0,300,D.SLOW,null,!1),new M(A.MELTAN,7,!1,!1,!0,"Hex Nut Pokémon",t.STEEL,null,.2,8,O.MAGNET_PULL,O.NONE,O.NONE,300,46,65,65,55,35,34,3,0,150,D.SLOW,null,!1),new M(A.MELMETAL,7,!1,!1,!0,"Hex Nut Pokémon",t.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,D.SLOW,null,!1,!0,new Y("Normal","",t.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.STEEL,null,25,999.9,O.IRON_FIST,O.NONE,O.NONE,700,170,158,158,95,75,44,3,0,300)),new M(A.GROOKEY,8,!1,!1,!1,"Chimp Pokémon",t.GRASS,null,.3,5,O.OVERGROW,O.NONE,O.GRASSY_SURGE,310,50,65,50,40,40,65,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.THWACKEY,8,!1,!1,!1,"Beat Pokémon",t.GRASS,null,.7,14,O.OVERGROW,O.NONE,O.GRASSY_SURGE,420,70,85,70,55,60,80,45,50,147,D.MEDIUM_SLOW,87.5,!1),new M(A.RILLABOOM,8,!1,!1,!1,"Drummer Pokémon",t.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.GRASS,null,28,999.9,O.GRASSY_SURGE,O.NONE,O.GRASSY_SURGE,630,125,140,105,90,85,85,45,50,265)),new M(A.SCORBUNNY,8,!1,!1,!1,"Rabbit Pokémon",t.FIRE,null,.3,4.5,O.BLAZE,O.NONE,O.LIBERO,310,50,71,40,40,40,69,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.RABOOT,8,!1,!1,!1,"Rabbit Pokémon",t.FIRE,null,.6,9,O.BLAZE,O.NONE,O.LIBERO,420,65,86,60,55,60,94,45,50,147,D.MEDIUM_SLOW,87.5,!1),new M(A.CINDERACE,8,!1,!1,!1,"Striker Pokémon",t.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.FIRE,null,27,999.9,O.LIBERO,O.NONE,O.LIBERO,630,100,141,80,95,80,134,45,50,265)),new M(A.SOBBLE,8,!1,!1,!1,"Water Lizard Pokémon",t.WATER,null,.3,4,O.TORRENT,O.NONE,O.SNIPER,310,50,40,40,70,40,70,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.DRIZZILE,8,!1,!1,!1,"Water Lizard Pokémon",t.WATER,null,.7,11.5,O.TORRENT,O.NONE,O.SNIPER,420,65,60,55,95,55,90,45,50,147,D.MEDIUM_SLOW,87.5,!1),new M(A.INTELEON,8,!1,!1,!1,"Secret Agent Pokémon",t.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,D.MEDIUM_SLOW,87.5,!1,!0,new Y("Normal","",t.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.WATER,null,40,999.9,O.SNIPER,O.NONE,O.SNIPER,630,95,117,67,147,67,137,45,50,265)),new M(A.SKWOVET,8,!1,!1,!1,"Cheeky Pokémon",t.NORMAL,null,.3,2.5,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,275,70,55,55,35,35,25,255,50,55,D.MEDIUM_FAST,50,!1),new M(A.GREEDENT,8,!1,!1,!1,"Greedy Pokémon",t.NORMAL,null,.6,6,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,460,120,95,95,55,75,20,90,50,161,D.MEDIUM_FAST,50,!1),new M(A.ROOKIDEE,8,!1,!1,!1,"Tiny Bird Pokémon",t.FLYING,null,.2,1.8,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,245,38,47,35,33,35,57,255,50,49,D.MEDIUM_SLOW,50,!1),new M(A.CORVISQUIRE,8,!1,!1,!1,"Raven Pokémon",t.FLYING,null,.8,16,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,365,68,67,55,43,55,77,120,50,128,D.MEDIUM_SLOW,50,!1),new M(A.CORVIKNIGHT,8,!1,!1,!1,"Raven Pokémon",t.FLYING,t.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,D.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",t.FLYING,t.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.FLYING,t.STEEL,14,999.9,O.MIRROR_ARMOR,O.MIRROR_ARMOR,O.MIRROR_ARMOR,595,118,112,135,63,90,77,45,50,248)),new M(A.BLIPBUG,8,!1,!1,!1,"Larva Pokémon",t.BUG,null,.4,8,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,180,25,20,20,25,45,45,255,50,36,D.MEDIUM_FAST,50,!1),new M(A.DOTTLER,8,!1,!1,!1,"Radome Pokémon",t.BUG,t.PSYCHIC,.4,19.5,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,335,50,35,80,50,90,30,120,50,117,D.MEDIUM_FAST,50,!1),new M(A.ORBEETLE,8,!1,!1,!1,"Seven Spot Pokémon",t.BUG,t.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.BUG,t.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.BUG,t.PSYCHIC,14,999.9,O.TRACE,O.TRACE,O.TRACE,605,75,50,140,100,150,90,45,50,253)),new M(A.NICKIT,8,!1,!1,!1,"Fox Pokémon",t.DARK,null,.6,8.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,245,40,28,28,47,52,50,255,50,49,D.FAST,50,!1),new M(A.THIEVUL,8,!1,!1,!1,"Fox Pokémon",t.DARK,null,1.2,19.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,455,70,58,58,87,92,90,127,50,159,D.FAST,50,!1),new M(A.GOSSIFLEUR,8,!1,!1,!1,"Flowering Pokémon",t.GRASS,null,.4,2.2,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,250,40,40,60,40,60,10,190,50,50,D.MEDIUM_FAST,50,!1),new M(A.ELDEGOSS,8,!1,!1,!1,"Cotton Bloom Pokémon",t.GRASS,null,.5,2.5,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,460,60,50,90,80,120,60,75,50,161,D.MEDIUM_FAST,50,!1),new M(A.WOOLOO,8,!1,!1,!1,"Sheep Pokémon",t.NORMAL,null,.6,6,O.FLUFFY,O.RUN_AWAY,O.BULLETPROOF,270,42,40,55,40,45,48,255,50,122,D.MEDIUM_FAST,50,!1),new M(A.DUBWOOL,8,!1,!1,!1,"Sheep Pokémon",t.NORMAL,null,1.3,43,O.FLUFFY,O.STEADFAST,O.BULLETPROOF,490,72,80,100,60,90,88,127,50,172,D.MEDIUM_FAST,50,!1),new M(A.CHEWTLE,8,!1,!1,!1,"Snapping Pokémon",t.WATER,null,.3,8.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,284,50,64,50,38,38,44,255,50,57,D.MEDIUM_FAST,50,!1),new M(A.DREDNAW,8,!1,!1,!1,"Bite Pokémon",t.WATER,t.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.WATER,t.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.WATER,t.ROCK,24,999.9,O.STRONG_JAW,O.STRONG_JAW,O.STRONG_JAW,585,115,137,115,61,83,74,75,50,170)),new M(A.YAMPER,8,!1,!1,!1,"Puppy Pokémon",t.ELECTRIC,null,.3,13.5,O.BALL_FETCH,O.NONE,O.RATTLED,270,59,45,50,40,50,26,255,50,54,D.FAST,50,!1),new M(A.BOLTUND,8,!1,!1,!1,"Dog Pokémon",t.ELECTRIC,null,1,34,O.STRONG_JAW,O.NONE,O.COMPETITIVE,490,69,90,60,90,60,121,45,50,172,D.FAST,50,!1),new M(A.ROLYCOLY,8,!1,!1,!1,"Coal Pokémon",t.ROCK,null,.3,12,O.STEAM_ENGINE,O.HEATPROOF,O.FLASH_FIRE,240,30,40,50,40,50,30,255,50,48,D.MEDIUM_SLOW,50,!1),new M(A.CARKOL,8,!1,!1,!1,"Coal Pokémon",t.ROCK,t.FIRE,1.1,78,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,410,80,60,90,60,70,50,120,50,144,D.MEDIUM_SLOW,50,!1),new M(A.COALOSSAL,8,!1,!1,!1,"Coal Pokémon",t.ROCK,t.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,D.MEDIUM_SLOW,50,!1,!0,new Y("Normal","",t.ROCK,t.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.ROCK,t.FIRE,42,999.9,O.STEAM_ENGINE,O.STEAM_ENGINE,O.STEAM_ENGINE,610,140,100,132,95,100,43,45,50,255)),new M(A.APPLIN,8,!1,!1,!1,"Apple Core Pokémon",t.GRASS,t.DRAGON,.2,.5,O.RIPEN,O.GLUTTONY,O.BULLETPROOF,260,40,40,80,40,40,20,255,50,52,D.ERRATIC,50,!1),new M(A.FLAPPLE,8,!1,!1,!1,"Apple Wing Pokémon",t.GRASS,t.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,D.ERRATIC,50,!1,!0,new Y("Normal","",t.GRASS,t.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.GRASS,t.DRAGON,24,999.9,O.HUSTLE,O.HUSTLE,O.HUSTLE,585,100,125,90,105,70,95,45,50,170)),new M(A.APPLETUN,8,!1,!1,!1,"Apple Nectar Pokémon",t.GRASS,t.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,D.ERRATIC,50,!1,!0,new Y("Normal","",t.GRASS,t.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.GRASS,t.DRAGON,24,999.9,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,585,150,100,95,115,95,30,45,50,170)),new M(A.SILICOBRA,8,!1,!1,!1,"Sand Snake Pokémon",t.GROUND,null,2.2,7.6,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,315,52,57,75,35,50,46,255,50,63,D.MEDIUM_FAST,50,!1),new M(A.SANDACONDA,8,!1,!1,!1,"Sand Snake Pokémon",t.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.GROUND,null,22,999.9,O.SAND_SPIT,O.SAND_SPIT,O.SAND_SPIT,610,102,137,140,70,80,81,120,50,179)),new M(A.CRAMORANT,8,!1,!1,!1,"Gulp Pokémon",t.FLYING,t.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,D.MEDIUM_FAST,50,!1,!1,new Y("Normal","",t.FLYING,t.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,!1,null,!0),new Y("Gulping Form","gulping",t.FLYING,t.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166),new Y("Gorging Form","gorging",t.FLYING,t.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166)),new M(A.ARROKUDA,8,!1,!1,!1,"Rush Pokémon",t.WATER,null,.5,1,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,280,41,63,40,40,30,66,255,50,56,D.SLOW,50,!1),new M(A.BARRASKEWDA,8,!1,!1,!1,"Skewer Pokémon",t.WATER,null,1.3,30,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,490,61,123,60,60,50,136,60,50,172,D.SLOW,50,!1),new M(A.TOXEL,8,!1,!1,!1,"Baby Pokémon",t.ELECTRIC,t.POISON,.4,11,O.RATTLED,O.STATIC,O.KLUTZ,242,40,38,35,54,35,40,75,50,48,D.MEDIUM_SLOW,50,!1),new M(A.TOXTRICITY,8,!1,!1,!1,"Punk Pokémon",t.ELECTRIC,t.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,D.MEDIUM_SLOW,50,!1,!0,new Y("Amped Form","amped",t.ELECTRIC,t.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"",!0),new Y("Low-Key Form","lowkey",t.ELECTRIC,t.POISON,1.6,40,O.PUNK_ROCK,O.MINUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"lowkey",!0),new Y("G-Max",eA.GIGANTAMAX,t.ELECTRIC,t.POISON,24,999.9,O.PUNK_ROCK,O.PUNK_ROCK,O.PUNK_ROCK,602,114,105,82,137,82,82,45,50,176)),new M(A.SIZZLIPEDE,8,!1,!1,!1,"Radiator Pokémon",t.FIRE,t.BUG,.7,1,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,305,50,65,45,50,50,45,190,50,61,D.MEDIUM_FAST,50,!1),new M(A.CENTISKORCH,8,!1,!1,!1,"Radiator Pokémon",t.FIRE,t.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.FIRE,t.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.FIRE,t.BUG,75,999.9,O.FLASH_FIRE,O.FLASH_FIRE,O.FLASH_FIRE,625,130,125,75,94,100,101,75,50,184)),new M(A.CLOBBOPUS,8,!1,!1,!1,"Tantrum Pokémon",t.FIGHTING,null,.6,4,O.LIMBER,O.NONE,O.TECHNICIAN,310,50,68,60,50,50,32,180,50,62,D.MEDIUM_SLOW,50,!1),new M(A.GRAPPLOCT,8,!1,!1,!1,"Jujitsu Pokémon",t.FIGHTING,null,1.6,39,O.LIMBER,O.NONE,O.TECHNICIAN,480,80,118,90,70,80,42,45,50,168,D.MEDIUM_SLOW,50,!1),new M(A.SINISTEA,8,!1,!1,!1,"Black Tea Pokémon",t.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,D.MEDIUM_FAST,null,!1,!1,new Y("Phony Form","phony",t.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0),new Y("Antique Form","antique",t.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0,!0)),new M(A.POLTEAGEIST,8,!1,!1,!1,"Black Tea Pokémon",t.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,D.MEDIUM_FAST,null,!1,!1,new Y("Phony Form","phony",t.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0),new Y("Antique Form","antique",t.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0,!0)),new M(A.HATENNA,8,!1,!1,!1,"Calm Pokémon",t.PSYCHIC,null,.4,3.4,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,265,42,30,45,56,53,39,235,50,53,D.SLOW,0,!1),new M(A.HATTREM,8,!1,!1,!1,"Serene Pokémon",t.PSYCHIC,null,.6,4.8,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,370,57,40,65,86,73,49,120,50,130,D.SLOW,0,!1),new M(A.HATTERENE,8,!1,!1,!1,"Silent Pokémon",t.PSYCHIC,t.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,D.SLOW,0,!1,!0,new Y("Normal","",t.PSYCHIC,t.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.PSYCHIC,t.FAIRY,26,999.9,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,610,87,100,110,146,118,49,45,50,255)),new M(A.IMPIDIMP,8,!1,!1,!1,"Wily Pokémon",t.DARK,t.FAIRY,.4,5.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,265,45,45,30,55,40,50,255,50,53,D.MEDIUM_FAST,100,!1),new M(A.MORGREM,8,!1,!1,!1,"Devious Pokémon",t.DARK,t.FAIRY,.8,12.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,370,65,60,45,75,55,70,120,50,130,D.MEDIUM_FAST,100,!1),new M(A.GRIMMSNARL,8,!1,!1,!1,"Bulk Up Pokémon",t.DARK,t.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,D.MEDIUM_FAST,100,!1,!0,new Y("Normal","",t.DARK,t.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.DARK,t.FAIRY,32,999.9,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,610,130,138,75,110,92,65,45,50,255)),new M(A.OBSTAGOON,8,!1,!1,!1,"Blocking Pokémon",t.DARK,t.NORMAL,1.6,46,O.RECKLESS,O.GUTS,O.DEFIANT,520,93,90,101,60,81,95,45,50,260,D.MEDIUM_FAST,50,!1),new M(A.PERRSERKER,8,!1,!1,!1,"Viking Pokémon",t.STEEL,null,.8,28,O.BATTLE_ARMOR,O.TOUGH_CLAWS,O.STEELY_SPIRIT,440,70,110,100,50,60,50,90,50,154,D.MEDIUM_FAST,50,!1),new M(A.CURSOLA,8,!1,!1,!1,"Coral Pokémon",t.GHOST,null,1,.4,O.WEAK_ARMOR,O.NONE,O.PERISH_BODY,510,60,95,50,145,130,30,30,50,179,D.FAST,25,!1),new M(A.SIRFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",t.FIGHTING,null,.8,117,O.STEADFAST,O.NONE,O.SCRAPPY,507,62,135,95,68,82,65,45,50,177,D.MEDIUM_FAST,50,!1),new M(A.MR_RIME,8,!1,!1,!1,"Comedian Pokémon",t.ICE,t.PSYCHIC,1.5,58.2,O.TANGLED_FEET,O.SCREEN_CLEANER,O.ICE_BODY,520,80,85,75,110,100,70,45,50,182,D.MEDIUM_FAST,50,!1),new M(A.RUNERIGUS,8,!1,!1,!1,"Grudge Pokémon",t.GROUND,t.GHOST,1.6,66.6,O.WANDERING_SPIRIT,O.NONE,O.NONE,483,58,95,145,50,105,30,90,50,169,D.MEDIUM_FAST,50,!1),new M(A.MILCERY,8,!1,!1,!1,"Cream Pokémon",t.FAIRY,null,.2,.3,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,270,45,40,40,50,61,34,200,50,54,D.MEDIUM_FAST,0,!1),new M(A.ALCREMIE,8,!1,!1,!1,"Cream Pokémon",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,D.MEDIUM_FAST,0,!1,!0,new Y("Vanilla Cream","vanilla-cream",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,"",!0),new Y("Ruby Cream","ruby-cream",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Matcha Cream","matcha-cream",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Mint Cream","mint-cream",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Lemon Cream","lemon-cream",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Salted Cream","salted-cream",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Ruby Swirl","ruby-swirl",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Caramel Swirl","caramel-swirl",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("Rainbow Swirl","rainbow-swirl",t.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.FAIRY,null,30,999.9,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,595,105,70,85,130,141,64,100,50,173)),new M(A.FALINKS,8,!1,!1,!1,"Formation Pokémon",t.FIGHTING,null,3,62,O.BATTLE_ARMOR,O.NONE,O.DEFIANT,470,65,100,100,70,60,75,45,50,165,D.MEDIUM_FAST,null,!1),new M(A.PINCURCHIN,8,!1,!1,!1,"Sea Urchin Pokémon",t.ELECTRIC,null,.3,1,O.LIGHTNING_ROD,O.NONE,O.ELECTRIC_SURGE,435,48,101,95,91,85,15,75,50,152,D.MEDIUM_FAST,50,!1),new M(A.SNOM,8,!1,!1,!1,"Worm Pokémon",t.ICE,t.BUG,.3,3.8,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,185,30,25,35,45,30,20,190,50,37,D.MEDIUM_FAST,50,!1),new M(A.FROSMOTH,8,!1,!1,!1,"Frost Moth Pokémon",t.ICE,t.BUG,1.3,42,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,475,70,65,60,125,90,65,75,50,166,D.MEDIUM_FAST,50,!1),new M(A.STONJOURNER,8,!1,!1,!1,"Big Rock Pokémon",t.ROCK,null,2.5,520,O.POWER_SPOT,O.NONE,O.NONE,470,100,125,135,20,20,70,60,50,165,D.SLOW,50,!1),new M(A.EISCUE,8,!1,!1,!1,"Penguin Pokémon",t.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,D.SLOW,50,!1,!1,new Y("Ice Face","",t.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,!1,null,!0),new Y("No Ice","no-ice",t.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,70,65,50,130,60,50,165)),new M(A.INDEEDEE,8,!1,!1,!1,"Emotion Pokémon",t.PSYCHIC,t.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,D.FAST,50,!1,!1,new Y("Male","male",t.PSYCHIC,t.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,!1,"",!0),new Y("Female","female",t.PSYCHIC,t.NORMAL,.9,28,O.OWN_TEMPO,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,70,55,65,95,105,85,30,140,166,!1,null,!0)),new M(A.MORPEKO,8,!1,!1,!1,"Two-Sided Pokémon",t.ELECTRIC,t.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,D.MEDIUM_FAST,50,!1,!1,new Y("Full Belly Mode","full-belly",t.ELECTRIC,t.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,!1,"",!0),new Y("Hangry Mode","hangry",t.ELECTRIC,t.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153)),new M(A.CUFANT,8,!1,!1,!1,"Copperderm Pokémon",t.STEEL,null,1.2,100,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,330,72,80,49,40,49,40,190,50,66,D.MEDIUM_FAST,50,!1),new M(A.COPPERAJAH,8,!1,!1,!1,"Copperderm Pokémon",t.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.STEEL,t.GROUND,23,999.9,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,600,177,155,79,90,79,20,90,50,175)),new M(A.DRACOZOLT,8,!1,!1,!1,"Fossil Pokémon",t.ELECTRIC,t.DRAGON,1.8,190,O.VOLT_ABSORB,O.HUSTLE,O.SAND_RUSH,505,90,100,90,80,70,75,45,50,177,D.SLOW,null,!1),new M(A.ARCTOZOLT,8,!1,!1,!1,"Fossil Pokémon",t.ELECTRIC,t.ICE,2.3,150,O.VOLT_ABSORB,O.STATIC,O.SLUSH_RUSH,505,90,100,90,90,80,55,45,50,177,D.SLOW,null,!1),new M(A.DRACOVISH,8,!1,!1,!1,"Fossil Pokémon",t.WATER,t.DRAGON,2.3,215,O.WATER_ABSORB,O.STRONG_JAW,O.SAND_RUSH,505,90,90,100,70,80,75,45,50,177,D.SLOW,null,!1),new M(A.ARCTOVISH,8,!1,!1,!1,"Fossil Pokémon",t.WATER,t.ICE,2,175,O.WATER_ABSORB,O.ICE_BODY,O.SLUSH_RUSH,505,90,90,100,80,90,55,45,50,177,D.SLOW,null,!1),new M(A.DURALUDON,8,!1,!1,!1,"Alloy Pokémon",t.STEEL,t.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,D.MEDIUM_FAST,50,!1,!0,new Y("Normal","",t.STEEL,t.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,!1,null,!0),new Y("G-Max",eA.GIGANTAMAX,t.STEEL,t.DRAGON,43,999.9,O.LIGHTNING_ROD,O.LIGHTNING_ROD,O.LIGHTNING_ROD,635,100,110,120,175,60,70,45,50,187)),new M(A.DREEPY,8,!1,!1,!1,"Lingering Pokémon",t.DRAGON,t.GHOST,.5,2,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,270,28,60,30,40,30,82,45,50,54,D.SLOW,50,!1),new M(A.DRAKLOAK,8,!1,!1,!1,"Caretaker Pokémon",t.DRAGON,t.GHOST,1.4,11,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,410,68,80,50,60,50,102,45,50,144,D.SLOW,50,!1),new M(A.DRAGAPULT,8,!1,!1,!1,"Stealth Pokémon",t.DRAGON,t.GHOST,3,50,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,600,88,120,75,100,75,142,45,50,300,D.SLOW,50,!1),new M(A.ZACIAN,8,!1,!0,!1,"Warrior Pokémon",t.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,D.SLOW,null,!1,!1,new Y("Hero of Many Battles","hero-of-many-battles",t.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new Y("Crowned","crowned",t.FAIRY,t.STEEL,2.8,355,O.INTREPID_SWORD,O.NONE,O.NONE,700,92,150,115,80,115,148,10,0,360)),new M(A.ZAMAZENTA,8,!1,!0,!1,"Warrior Pokémon",t.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,D.SLOW,null,!1,!1,new Y("Hero of Many Battles","hero-of-many-battles",t.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new Y("Crowned","crowned",t.FIGHTING,t.STEEL,2.9,785,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,700,92,120,140,80,140,128,10,0,360)),new M(A.ETERNATUS,8,!1,!0,!1,"Gigantic Pokémon",t.POISON,t.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,D.SLOW,null,!1,!0,new Y("Normal","",t.POISON,t.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,!1,null,!0),new Y("E-Max","eternamax",t.POISON,t.DRAGON,100,999.9,O.PRESSURE,O.NONE,O.NONE,1125,255,115,250,125,250,130,255,0,345)),new M(A.KUBFU,8,!0,!1,!1,"Wushu Pokémon",t.FIGHTING,null,.6,12,O.INNER_FOCUS,O.NONE,O.NONE,385,60,90,60,53,50,72,3,50,77,D.SLOW,87.5,!1),new M(A.URSHIFU,8,!0,!1,!1,"Wushu Pokémon",t.FIGHTING,t.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,D.SLOW,87.5,!1,!0,new Y("Single Strike Style","single-strike",t.FIGHTING,t.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,"",!0),new Y("Rapid Strike Style","rapid-strike",t.FIGHTING,t.WATER,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,null,!0),new Y("G-Max Single Strike Style",eA.GIGANTAMAX_SINGLE,t.FIGHTING,t.DARK,29,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,145,115,83,70,112,3,50,275),new Y("G-Max Rapid Strike Style",eA.GIGANTAMAX_RAPID,t.FIGHTING,t.WATER,26,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,145,115,83,70,112,3,50,275)),new M(A.ZARUDE,8,!1,!1,!0,"Rogue Monkey Pokémon",t.DARK,t.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,D.SLOW,null,!1,!1,new Y("Normal","",t.DARK,t.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0),new Y("Dada","dada",t.DARK,t.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0)),new M(A.REGIELEKI,8,!0,!1,!1,"Electron Pokémon",t.ELECTRIC,null,1.2,145,O.TRANSISTOR,O.NONE,O.NONE,580,80,100,50,100,50,200,3,35,290,D.SLOW,null,!1),new M(A.REGIDRAGO,8,!0,!1,!1,"Dragon Orb Pokémon",t.DRAGON,null,2.1,200,O.DRAGONS_MAW,O.NONE,O.NONE,580,200,100,50,100,50,80,3,35,290,D.SLOW,null,!1),new M(A.GLASTRIER,8,!0,!1,!1,"Wild Horse Pokémon",t.ICE,null,2.2,800,O.CHILLING_NEIGH,O.NONE,O.NONE,580,100,145,130,65,110,30,3,35,290,D.SLOW,null,!1),new M(A.SPECTRIER,8,!0,!1,!1,"Swift Horse Pokémon",t.GHOST,null,2,44.5,O.GRIM_NEIGH,O.NONE,O.NONE,580,100,65,60,145,80,130,3,35,290,D.SLOW,null,!1),new M(A.CALYREX,8,!1,!0,!1,"King Pokémon",t.PSYCHIC,t.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,D.SLOW,null,!1,!0,new Y("Normal","",t.PSYCHIC,t.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,!1,null,!0),new Y("Ice","ice",t.PSYCHIC,t.ICE,2.4,809.1,O.AS_ONE_GLASTRIER,O.NONE,O.NONE,680,100,165,150,85,130,50,3,100,340),new Y("Shadow","shadow",t.PSYCHIC,t.GHOST,2.4,53.6,O.AS_ONE_SPECTRIER,O.NONE,O.NONE,680,100,85,80,165,100,150,3,100,340)),new M(A.WYRDEER,8,!1,!1,!1,"Big Horn Pokémon",t.NORMAL,t.PSYCHIC,1.8,95.1,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,525,103,105,72,105,75,65,45,50,263,D.SLOW,50,!1),new M(A.KLEAVOR,8,!1,!1,!1,"Axe Pokémon",t.BUG,t.ROCK,1.8,89,O.SWARM,O.SHEER_FORCE,O.SHARPNESS,500,70,135,95,45,70,85,15,50,175,D.MEDIUM_FAST,50,!1),new M(A.URSALUNA,8,!1,!1,!1,"Peat Pokémon",t.GROUND,t.NORMAL,2.4,290,O.GUTS,O.BULLETPROOF,O.UNNERVE,550,130,140,105,45,80,50,20,50,275,D.MEDIUM_FAST,50,!1),new M(A.BASCULEGION,8,!1,!1,!1,"Big Fish Pokémon",t.WATER,t.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,45,50,265,D.MEDIUM_FAST,50,!1,!1,new Y("Male","male",t.WATER,t.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,45,50,265,!1,"",!0),new Y("Female","female",t.WATER,t.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,92,65,100,75,78,45,50,265,!1,null,!0)),new M(A.SNEASLER,8,!1,!1,!1,"Free Climb Pokémon",t.FIGHTING,t.POISON,1.3,43,O.PRESSURE,O.UNBURDEN,O.POISON_TOUCH,510,80,130,60,40,80,120,20,50,102,D.MEDIUM_SLOW,50,!1),new M(A.OVERQWIL,8,!1,!1,!1,"Pin Cluster Pokémon",t.DARK,t.POISON,2.5,60.5,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,510,85,115,95,65,65,85,45,50,179,D.MEDIUM_FAST,50,!1),new M(A.ENAMORUS,8,!0,!1,!1,"Love-Hate Pokémon",t.FAIRY,t.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,D.SLOW,0,!1,!0,new Y("Incarnate Forme","incarnate",t.FAIRY,t.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,!1,null,!0),new Y("Therian Forme","therian",t.FAIRY,t.FLYING,1.6,48,O.OVERCOAT,O.NONE,O.OVERCOAT,580,74,115,110,135,100,46,3,50,116)),new M(A.SPRIGATITO,9,!1,!1,!1,"Grass Cat Pokémon",t.GRASS,null,.4,4.1,O.OVERGROW,O.NONE,O.PROTEAN,310,40,61,54,45,45,65,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.FLORAGATO,9,!1,!1,!1,"Grass Cat Pokémon",t.GRASS,null,.9,12.2,O.OVERGROW,O.NONE,O.PROTEAN,410,61,80,63,60,63,83,45,50,144,D.MEDIUM_SLOW,87.5,!1),new M(A.MEOWSCARADA,9,!1,!1,!1,"Magician Pokémon",t.GRASS,t.DARK,1.5,31.2,O.OVERGROW,O.NONE,O.PROTEAN,530,76,110,70,81,70,123,45,50,265,D.MEDIUM_SLOW,87.5,!1),new M(A.FUECOCO,9,!1,!1,!1,"Fire Croc Pokémon",t.FIRE,null,.4,9.8,O.BLAZE,O.NONE,O.UNAWARE,310,67,45,59,63,40,36,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.CROCALOR,9,!1,!1,!1,"Fire Croc Pokémon",t.FIRE,null,1,30.7,O.BLAZE,O.NONE,O.UNAWARE,411,81,55,78,90,58,49,45,50,144,D.MEDIUM_SLOW,87.5,!1),new M(A.SKELEDIRGE,9,!1,!1,!1,"Singer Pokémon",t.FIRE,t.GHOST,1.6,326.5,O.BLAZE,O.NONE,O.UNAWARE,530,104,75,100,110,75,66,45,50,265,D.MEDIUM_SLOW,87.5,!1),new M(A.QUAXLY,9,!1,!1,!1,"Duckling Pokémon",t.WATER,null,.5,6.1,O.TORRENT,O.NONE,O.MOXIE,310,55,65,45,50,45,50,45,50,62,D.MEDIUM_SLOW,87.5,!1),new M(A.QUAXWELL,9,!1,!1,!1,"Practicing Pokémon",t.WATER,null,1.2,21.5,O.TORRENT,O.NONE,O.MOXIE,410,70,85,65,65,60,65,45,50,144,D.MEDIUM_SLOW,87.5,!1),new M(A.QUAQUAVAL,9,!1,!1,!1,"Dancer Pokémon",t.WATER,t.FIGHTING,1.8,61.9,O.TORRENT,O.NONE,O.MOXIE,530,85,120,80,85,75,85,45,50,265,D.MEDIUM_SLOW,87.5,!1),new M(A.LECHONK,9,!1,!1,!1,"Hog Pokémon",t.NORMAL,null,.5,10.2,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,254,54,45,40,35,45,35,255,50,51,D.MEDIUM_FAST,50,!1),new M(A.OINKOLOGNE,9,!1,!1,!1,"Hog Pokémon",t.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,D.MEDIUM_FAST,50,!1,!1,new Y("Male","male",t.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,!1,"",!0),new Y("Female","female",t.NORMAL,null,1,120,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,489,115,90,70,59,90,65,100,50,171,!1,null,!0)),new M(A.TAROUNTULA,9,!1,!1,!1,"String Ball Pokémon",t.BUG,null,.3,4,O.INSOMNIA,O.NONE,O.STAKEOUT,210,35,41,45,29,40,20,255,50,42,D.ERRATIC,50,!1),new M(A.SPIDOPS,9,!1,!1,!1,"Trap Pokémon",t.BUG,null,1,16.5,O.INSOMNIA,O.NONE,O.STAKEOUT,404,60,79,92,52,86,35,120,50,141,D.ERRATIC,50,!1),new M(A.NYMBLE,9,!1,!1,!1,"Grasshopper Pokémon",t.BUG,null,.2,1,O.SWARM,O.NONE,O.TINTED_LENS,210,33,46,40,21,25,45,190,20,42,D.MEDIUM_FAST,50,!1),new M(A.LOKIX,9,!1,!1,!1,"Grasshopper Pokémon",t.BUG,t.DARK,1,17.5,O.SWARM,O.NONE,O.TINTED_LENS,450,71,102,78,52,55,92,30,0,158,D.MEDIUM_FAST,50,!1),new M(A.PAWMI,9,!1,!1,!1,"Mouse Pokémon",t.ELECTRIC,null,.3,2.5,O.STATIC,O.NATURAL_CURE,O.IRON_FIST,240,45,50,20,40,25,60,190,50,48,D.MEDIUM_FAST,50,!1),new M(A.PAWMO,9,!1,!1,!1,"Mouse Pokémon",t.ELECTRIC,t.FIGHTING,.4,6.5,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,350,60,75,40,50,40,85,80,50,123,D.MEDIUM_FAST,50,!1),new M(A.PAWMOT,9,!1,!1,!1,"Hands-On Pokémon",t.ELECTRIC,t.FIGHTING,.9,41,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,490,70,115,70,70,60,105,45,50,245,D.MEDIUM_FAST,50,!1),new M(A.TANDEMAUS,9,!1,!1,!1,"Couple Pokémon",t.NORMAL,null,.3,1.8,O.RUN_AWAY,O.PICKUP,O.OWN_TEMPO,305,50,50,45,40,45,75,150,50,61,D.FAST,null,!1),new M(A.MAUSHOLD,9,!1,!1,!1,"Family Pokémon",t.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165,D.FAST,null,!1,!1,new Y("Family of Four","four",t.NORMAL,null,.3,2.8,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165),new Y("Family of Three","three",t.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165)),new M(A.FIDOUGH,9,!1,!1,!1,"Puppy Pokémon",t.FAIRY,null,.3,10.9,O.OWN_TEMPO,O.NONE,O.KLUTZ,312,37,55,70,30,55,65,190,50,62,D.MEDIUM_SLOW,50,!1),new M(A.DACHSBUN,9,!1,!1,!1,"Dog Pokémon",t.FAIRY,null,.5,14.9,O.WELL_BAKED_BODY,O.NONE,O.AROMA_VEIL,477,57,80,115,50,80,95,90,50,167,D.MEDIUM_SLOW,50,!1),new M(A.SMOLIV,9,!1,!1,!1,"Olive Pokémon",t.GRASS,t.NORMAL,.3,6.5,O.EARLY_BIRD,O.NONE,O.HARVEST,260,41,35,45,58,51,30,255,50,52,D.MEDIUM_SLOW,50,!1),new M(A.DOLLIV,9,!1,!1,!1,"Olive Pokémon",t.GRASS,t.NORMAL,.6,11.9,O.EARLY_BIRD,O.NONE,O.HARVEST,354,52,53,60,78,78,33,120,50,124,D.MEDIUM_SLOW,50,!1),new M(A.ARBOLIVA,9,!1,!1,!1,"Olive Pokémon",t.GRASS,t.NORMAL,1.4,48.2,O.SEED_SOWER,O.NONE,O.HARVEST,510,78,69,90,125,109,39,45,50,255,D.MEDIUM_SLOW,50,!1),new M(A.SQUAWKABILLY,9,!1,!1,!1,"Parrot Pokémon",t.NORMAL,t.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,D.ERRATIC,50,!1,!1,new Y("Green Plumage","green-plumage",t.NORMAL,t.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new Y("Blue Plumage","blue-plumage",t.NORMAL,t.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new Y("Yellow Plumage","yellow-plumage",t.NORMAL,t.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new Y("White Plumage","white-plumage",t.NORMAL,t.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0)),new M(A.NACLI,9,!1,!1,!1,"Rock Salt Pokémon",t.ROCK,null,.4,16,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,280,55,55,75,35,35,25,255,50,56,D.MEDIUM_SLOW,50,!1),new M(A.NACLSTACK,9,!1,!1,!1,"Rock Salt Pokémon",t.ROCK,null,.6,105,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,355,60,60,100,35,65,35,120,50,124,D.MEDIUM_SLOW,50,!1),new M(A.GARGANACL,9,!1,!1,!1,"Rock Salt Pokémon",t.ROCK,null,2.3,240,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,500,100,100,130,45,90,35,45,50,250,D.MEDIUM_SLOW,50,!1),new M(A.CHARCADET,9,!1,!1,!1,"Fire Child Pokémon",t.FIRE,null,.6,10.5,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,255,40,50,40,50,40,35,90,50,51,D.SLOW,50,!1),new M(A.ARMAROUGE,9,!1,!1,!1,"Fire Warrior Pokémon",t.FIRE,t.PSYCHIC,1.5,85,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,85,60,100,125,80,75,25,20,263,D.SLOW,50,!1),new M(A.CERULEDGE,9,!1,!1,!1,"Fire Blades Pokémon",t.FIRE,t.GHOST,1.6,62,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,75,125,80,60,100,85,25,20,263,D.SLOW,50,!1),new M(A.TADBULB,9,!1,!1,!1,"EleTadpole Pokémon",t.ELECTRIC,null,.3,.4,O.OWN_TEMPO,O.STATIC,O.DAMP,272,61,31,41,59,35,45,190,50,54,D.MEDIUM_FAST,50,!1),new M(A.BELLIBOLT,9,!1,!1,!1,"EleFrog Pokémon",t.ELECTRIC,null,1.2,113,O.ELECTROMORPHOSIS,O.STATIC,O.DAMP,495,109,64,91,103,83,45,50,50,173,D.MEDIUM_FAST,50,!1),new M(A.WATTREL,9,!1,!1,!1,"Storm Petrel Pokémon",t.ELECTRIC,t.FLYING,.4,3.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,280,40,40,35,55,40,70,180,50,56,D.MEDIUM_SLOW,50,!1),new M(A.KILOWATTREL,9,!1,!1,!1,"Frigatebird Pokémon",t.ELECTRIC,t.FLYING,1.4,38.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,490,70,70,60,105,60,125,90,50,172,D.MEDIUM_SLOW,50,!1),new M(A.MASCHIFF,9,!1,!1,!1,"Rascal Pokémon",t.DARK,null,.5,16,O.INTIMIDATE,O.RUN_AWAY,O.STAKEOUT,340,60,78,60,40,51,51,150,50,68,D.MEDIUM_SLOW,50,!1),new M(A.MABOSSTIFF,9,!1,!1,!1,"Boss Pokémon",t.DARK,null,1.1,61,O.INTIMIDATE,O.GUARD_DOG,O.STAKEOUT,505,80,120,90,60,70,85,75,50,177,D.MEDIUM_SLOW,50,!1),new M(A.SHROODLE,9,!1,!1,!1,"Toxic Mouse Pokémon",t.POISON,t.NORMAL,.2,.7,O.UNBURDEN,O.PICKPOCKET,O.PRANKSTER,290,40,65,35,40,35,75,190,50,58,D.MEDIUM_SLOW,50,!1),new M(A.GRAFAIAI,9,!1,!1,!1,"Toxic Monkey Pokémon",t.POISON,t.NORMAL,.7,27.2,O.UNBURDEN,O.POISON_TOUCH,O.PRANKSTER,485,63,95,65,80,72,110,90,50,170,D.MEDIUM_SLOW,50,!1),new M(A.BRAMBLIN,9,!1,!1,!1,"Tumbleweed Pokémon",t.GRASS,t.GHOST,.6,.6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,275,40,65,30,45,35,60,190,50,55,D.MEDIUM_FAST,50,!1),new M(A.BRAMBLEGHAST,9,!1,!1,!1,"Tumbleweed Pokémon",t.GRASS,t.GHOST,1.2,6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,480,55,115,70,80,70,90,45,50,168,D.MEDIUM_FAST,50,!1),new M(A.TOEDSCOOL,9,!1,!1,!1,"Woodear Pokémon",t.GROUND,t.GRASS,.9,33,O.MYCELIUM_MIGHT,O.NONE,O.NONE,335,40,40,35,50,100,70,190,50,67,D.MEDIUM_SLOW,50,!1),new M(A.TOEDSCRUEL,9,!1,!1,!1,"Woodear Pokémon",t.GROUND,t.GRASS,1.9,58,O.MYCELIUM_MIGHT,O.NONE,O.NONE,515,80,70,65,80,120,100,90,50,180,D.MEDIUM_SLOW,50,!1),new M(A.KLAWF,9,!1,!1,!1,"Ambush Pokémon",t.ROCK,null,1.3,79,O.ANGER_SHELL,O.SHELL_ARMOR,O.REGENERATOR,450,70,100,115,35,55,75,120,50,158,D.MEDIUM_FAST,50,!1),new M(A.CAPSAKID,9,!1,!1,!1,"Spicy Pepper Pokémon",t.GRASS,null,.3,3,O.CHLOROPHYLL,O.INSOMNIA,O.KLUTZ,304,50,62,40,62,40,50,190,50,61,D.MEDIUM_FAST,50,!1),new M(A.SCOVILLAIN,9,!1,!1,!1,"Spicy Pepper Pokémon",t.GRASS,t.FIRE,.9,15,O.CHLOROPHYLL,O.INSOMNIA,O.MOODY,486,65,108,65,108,65,75,75,50,170,D.MEDIUM_FAST,50,!1),new M(A.RELLOR,9,!1,!1,!1,"Rolling Pokémon",t.BUG,null,.2,1,O.COMPOUND_EYES,O.NONE,O.SHED_SKIN,270,41,50,60,31,58,30,190,50,54,D.FAST,50,!1),new M(A.RABSCA,9,!1,!1,!1,"Rolling Pokémon",t.BUG,t.PSYCHIC,.3,3.5,O.SYNCHRONIZE,O.NONE,O.TELEPATHY,470,75,50,85,115,100,45,45,50,165,D.FAST,50,!1),new M(A.FLITTLE,9,!1,!1,!1,"Frill Pokémon",t.PSYCHIC,null,.2,1.5,O.ANTICIPATION,O.FRISK,O.SPEED_BOOST,255,30,35,30,55,30,75,120,50,51,D.MEDIUM_SLOW,50,!1),new M(A.ESPATHRA,9,!1,!1,!1,"Ostrich Pokémon",t.PSYCHIC,null,1.9,90,O.OPPORTUNIST,O.FRISK,O.SPEED_BOOST,481,95,60,60,101,60,105,60,50,168,D.MEDIUM_SLOW,50,!1),new M(A.TINKATINK,9,!1,!1,!1,"Metalsmith Pokémon",t.FAIRY,t.STEEL,.4,8.9,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,297,50,45,45,35,64,58,190,50,59,D.MEDIUM_SLOW,0,!1),new M(A.TINKATUFF,9,!1,!1,!1,"Hammer Pokémon",t.FAIRY,t.STEEL,.7,59.1,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,380,65,55,55,45,82,78,90,50,133,D.MEDIUM_SLOW,0,!1),new M(A.TINKATON,9,!1,!1,!1,"Hammer Pokémon",t.FAIRY,t.STEEL,.7,112.8,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,506,85,75,77,70,105,94,45,50,253,D.MEDIUM_SLOW,0,!1),new M(A.WIGLETT,9,!1,!1,!1,"Garden Eel Pokémon",t.WATER,null,1.2,1.8,O.GOOEY,O.RATTLED,O.SAND_VEIL,245,10,55,25,35,25,95,255,50,49,D.MEDIUM_FAST,50,!1),new M(A.WUGTRIO,9,!1,!1,!1,"Garden Eel Pokémon",t.WATER,null,1.2,5.4,O.GOOEY,O.RATTLED,O.SAND_VEIL,425,35,100,50,50,70,120,50,50,149,D.MEDIUM_FAST,50,!1),new M(A.BOMBIRDIER,9,!1,!1,!1,"Item Drop Pokémon",t.FLYING,t.DARK,1.5,42.9,O.BIG_PECKS,O.KEEN_EYE,O.ROCKY_PAYLOAD,485,70,103,85,60,85,82,25,50,243,D.SLOW,50,!1),new M(A.FINIZEN,9,!1,!1,!1,"Dolphin Pokémon",t.WATER,null,1.3,60.2,O.WATER_VEIL,O.NONE,O.NONE,315,70,45,40,45,40,75,200,50,63,D.SLOW,50,!1),new M(A.PALAFIN,9,!1,!1,!1,"Dolphin Pokémon",t.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.NONE,457,100,70,72,53,62,100,45,50,160,D.SLOW,50,!1,!0,new Y("Zero Form","zero",t.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,457,100,70,72,53,62,100,45,50,160,!1,null,!0),new Y("Hero Form","hero",t.WATER,null,1.8,97.4,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,650,100,160,97,106,87,100,45,50,160)),new M(A.VAROOM,9,!1,!1,!1,"Single-Cyl Pokémon",t.STEEL,t.POISON,1,35,O.OVERCOAT,O.NONE,O.SLOW_START,300,45,70,63,30,45,47,190,50,60,D.MEDIUM_FAST,50,!1),new M(A.REVAVROOM,9,!1,!1,!1,"Multi-Cyl Pokémon",t.STEEL,t.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,D.MEDIUM_FAST,50,!1,!1,new Y("Normal","",t.STEEL,t.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,!1,null,!0),new Y("Segin Starmobile","segin-starmobile",t.STEEL,t.DARK,1.8,240,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new Y("Schedar Starmobile","schedar-starmobile",t.STEEL,t.FIRE,1.8,240,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new Y("Navi Starmobile","navi-starmobile",t.STEEL,t.POISON,1.8,240,O.TOXIC_DEBRIS,O.NONE,O.TOXIC_DEBRIS,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new Y("Ruchbah Starmobile","ruchbah-starmobile",t.STEEL,t.FAIRY,1.8,240,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new Y("Caph Starmobile","caph-starmobile",t.STEEL,t.FIGHTING,1.8,240,O.STAMINA,O.NONE,O.STAMINA,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0)),new M(A.CYCLIZAR,9,!1,!1,!1,"Mount Pokémon",t.DRAGON,t.NORMAL,1.6,63,O.SHED_SKIN,O.NONE,O.REGENERATOR,501,70,95,65,85,65,121,190,50,175,D.MEDIUM_SLOW,50,!1),new M(A.ORTHWORM,9,!1,!1,!1,"Earthworm Pokémon",t.STEEL,null,2.5,310,O.EARTH_EATER,O.NONE,O.SAND_VEIL,480,70,85,145,60,55,65,25,50,240,D.SLOW,50,!1),new M(A.GLIMMET,9,!1,!1,!1,"Ore Pokémon",t.ROCK,t.POISON,.7,8,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,350,48,35,42,105,60,60,70,50,70,D.MEDIUM_SLOW,50,!1),new M(A.GLIMMORA,9,!1,!1,!1,"Ore Pokémon",t.ROCK,t.POISON,1.5,45,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,525,83,55,90,130,81,86,25,50,184,D.MEDIUM_SLOW,50,!1),new M(A.GREAVARD,9,!1,!1,!1,"Ghost Dog Pokémon",t.GHOST,null,.6,35,O.PICKUP,O.NONE,O.FLUFFY,290,50,61,60,30,55,34,120,50,58,D.MEDIUM_SLOW,50,!1),new M(A.HOUNDSTONE,9,!1,!1,!1,"Ghost Dog Pokémon",t.GHOST,null,2,15,O.SAND_RUSH,O.NONE,O.FLUFFY,488,72,101,100,50,97,68,60,50,171,D.MEDIUM_SLOW,50,!1),new M(A.FLAMIGO,9,!1,!1,!1,"Synchronize Pokémon",t.FLYING,t.FIGHTING,1.6,37,O.SCRAPPY,O.TANGLED_FEET,O.COSTAR,500,82,115,74,75,64,90,100,50,175,D.MEDIUM_SLOW,50,!1),new M(A.CETODDLE,9,!1,!1,!1,"Terra Whale Pokémon",t.ICE,null,1.2,45,O.THICK_FAT,O.SNOW_CLOAK,O.SHEER_FORCE,334,108,68,45,30,40,43,150,50,67,D.MEDIUM_SLOW,50,!1),new M(A.CETITAN,9,!1,!1,!1,"Terra Whale Pokémon",t.ICE,null,4.5,700,O.THICK_FAT,O.SLUSH_RUSH,O.SHEER_FORCE,521,170,113,65,45,55,73,50,50,182,D.MEDIUM_SLOW,50,!1),new M(A.VELUZA,9,!1,!1,!1,"Jettison Pokémon",t.WATER,t.PSYCHIC,2.5,90,O.MOLD_BREAKER,O.NONE,O.SHARPNESS,478,90,102,73,78,65,70,100,50,167,D.FAST,50,!1),new M(A.DONDOZO,9,!1,!1,!1,"Big Catfish Pokémon",t.WATER,null,12,220,O.UNAWARE,O.OBLIVIOUS,O.WATER_VEIL,530,150,100,115,65,65,35,25,50,265,D.SLOW,50,!1),new M(A.TATSUGIRI,9,!1,!1,!1,"Mimicry Pokémon",t.DRAGON,t.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,D.MEDIUM_SLOW,50,!1,!1,new Y("Curly Form","curly",t.DRAGON,t.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new Y("Droopy Form","droopy",t.DRAGON,t.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new Y("Stretchy Form","stretchy",t.DRAGON,t.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0)),new M(A.ANNIHILAPE,9,!1,!1,!1,"Rage Monkey Pokémon",t.FIGHTING,t.GHOST,1.2,56,O.VITAL_SPIRIT,O.INNER_FOCUS,O.DEFIANT,535,110,115,80,50,90,90,45,50,268,D.MEDIUM_FAST,50,!1),new M(A.CLODSIRE,9,!1,!1,!1,"Spiny Fish Pokémon",t.POISON,t.GROUND,1.8,223,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,430,130,75,60,45,100,20,90,50,151,D.MEDIUM_FAST,50,!1),new M(A.FARIGIRAF,9,!1,!1,!1,"Long Neck Pokémon",t.NORMAL,t.PSYCHIC,3.2,160,O.CUD_CHEW,O.ARMOR_TAIL,O.SAP_SIPPER,520,120,90,70,110,70,60,45,50,260,D.MEDIUM_FAST,50,!1),new M(A.DUDUNSPARCE,9,!1,!1,!1,"Land Snake Pokémon",t.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,D.MEDIUM_FAST,50,!1,!1,new Y("Two-Segment Form","two-segment",t.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,!1,""),new Y("Three-Segment Form","three-segment",t.NORMAL,null,4.5,47.4,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182)),new M(A.KINGAMBIT,9,!1,!1,!1,"Big Blade Pokémon",t.DARK,t.STEEL,2,120,O.DEFIANT,O.SUPREME_OVERLORD,O.PRESSURE,550,100,135,120,60,85,50,25,50,275,D.MEDIUM_FAST,50,!1),new M(A.GREAT_TUSK,9,!1,!1,!1,"Paradox Pokémon",t.GROUND,t.FIGHTING,2.2,320,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,131,131,53,53,87,30,0,285,D.SLOW,null,!1),new M(A.SCREAM_TAIL,9,!1,!1,!1,"Paradox Pokémon",t.FAIRY,t.PSYCHIC,1.2,8,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,65,99,65,115,111,50,0,285,D.SLOW,null,!1),new M(A.BRUTE_BONNET,9,!1,!1,!1,"Paradox Pokémon",t.GRASS,t.DARK,1.2,21,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,111,127,99,79,99,55,50,0,285,D.SLOW,null,!1),new M(A.FLUTTER_MANE,9,!1,!1,!1,"Paradox Pokémon",t.GHOST,t.FAIRY,1.4,4,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,55,55,55,135,135,135,30,0,285,D.SLOW,null,!1),new M(A.SLITHER_WING,9,!1,!1,!1,"Paradox Pokémon",t.BUG,t.FIGHTING,3.2,92,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,135,79,85,105,81,30,0,285,D.SLOW,null,!1),new M(A.SANDY_SHOCKS,9,!1,!1,!1,"Paradox Pokémon",t.ELECTRIC,t.GROUND,2.3,60,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,81,97,121,85,101,30,0,285,D.SLOW,null,!1),new M(A.IRON_TREADS,9,!1,!1,!1,"Paradox Pokémon",t.GROUND,t.STEEL,.9,240,O.QUARK_DRIVE,O.NONE,O.NONE,570,90,112,120,72,70,106,30,0,285,D.SLOW,null,!1),new M(A.IRON_BUNDLE,9,!1,!1,!1,"Paradox Pokémon",t.ICE,t.WATER,.6,11,O.QUARK_DRIVE,O.NONE,O.NONE,570,56,80,114,124,60,136,50,0,285,D.SLOW,null,!1),new M(A.IRON_HANDS,9,!1,!1,!1,"Paradox Pokémon",t.FIGHTING,t.ELECTRIC,1.8,380.7,O.QUARK_DRIVE,O.NONE,O.NONE,570,154,140,108,50,68,50,50,0,285,D.SLOW,null,!1),new M(A.IRON_JUGULIS,9,!1,!1,!1,"Paradox Pokémon",t.DARK,t.FLYING,1.3,111,O.QUARK_DRIVE,O.NONE,O.NONE,570,94,80,86,122,80,108,30,0,285,D.SLOW,null,!1),new M(A.IRON_MOTH,9,!1,!1,!1,"Paradox Pokémon",t.FIRE,t.POISON,1.2,36,O.QUARK_DRIVE,O.NONE,O.NONE,570,80,70,60,140,110,110,30,0,285,D.SLOW,null,!1),new M(A.IRON_THORNS,9,!1,!1,!1,"Paradox Pokémon",t.ROCK,t.ELECTRIC,1.6,303,O.QUARK_DRIVE,O.NONE,O.NONE,570,100,134,110,70,84,72,30,0,285,D.SLOW,null,!1),new M(A.FRIGIBAX,9,!1,!1,!1,"Ice Fin Pokémon",t.DRAGON,t.ICE,.5,17,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,320,65,75,45,35,45,55,45,50,64,D.SLOW,50,!1),new M(A.ARCTIBAX,9,!1,!1,!1,"Ice Fin Pokémon",t.DRAGON,t.ICE,.8,30,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,423,90,95,66,45,65,62,25,50,148,D.SLOW,50,!1),new M(A.BAXCALIBUR,9,!1,!1,!1,"Ice Dragon Pokémon",t.DRAGON,t.ICE,2.1,210,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,600,115,145,92,75,86,87,10,50,300,D.SLOW,50,!1),new M(A.GIMMIGHOUL,9,!1,!1,!1,"Coin Chest Pokémon",t.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,D.SLOW,null,!1,!1,new Y("Chest Form","chest",t.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,!1,"",!0),new Y("Roaming Form","roaming",t.GHOST,null,.1,1,O.RUN_AWAY,O.NONE,O.NONE,300,45,30,25,75,45,80,45,50,60,!1,null,!0)),new M(A.GHOLDENGO,9,!1,!1,!1,"Coin Entity Pokémon",t.STEEL,t.GHOST,1.2,30,O.GOOD_AS_GOLD,O.NONE,O.NONE,550,87,60,95,133,91,84,45,50,275,D.SLOW,null,!1),new M(A.WO_CHIEN,9,!0,!1,!1,"Ruinous Pokémon",t.DARK,t.GRASS,1.5,74.2,O.TABLETS_OF_RUIN,O.NONE,O.NONE,570,85,85,100,95,135,70,6,0,285,D.SLOW,null,!1),new M(A.CHIEN_PAO,9,!0,!1,!1,"Ruinous Pokémon",t.DARK,t.ICE,1.9,152.2,O.SWORD_OF_RUIN,O.NONE,O.NONE,570,80,120,80,90,65,135,6,0,285,D.SLOW,null,!1),new M(A.TING_LU,9,!0,!1,!1,"Ruinous Pokémon",t.DARK,t.GROUND,2.7,699.7,O.VESSEL_OF_RUIN,O.NONE,O.NONE,570,155,110,125,55,80,45,6,0,285,D.SLOW,null,!1),new M(A.CHI_YU,9,!0,!1,!1,"Ruinous Pokémon",t.DARK,t.FIRE,.4,4.9,O.BEADS_OF_RUIN,O.NONE,O.NONE,570,55,80,80,135,120,100,6,0,285,D.SLOW,null,!1),new M(A.ROARING_MOON,9,!1,!1,!1,"Paradox Pokémon",t.DRAGON,t.DARK,2,380,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,139,71,55,101,119,10,0,295,D.SLOW,null,!1),new M(A.IRON_VALIANT,9,!1,!1,!1,"Paradox Pokémon",t.FAIRY,t.FIGHTING,1.4,35,O.QUARK_DRIVE,O.NONE,O.NONE,590,74,130,90,120,60,116,10,0,295,D.SLOW,null,!1),new M(A.KORAIDON,9,!1,!0,!1,"Paradox Pokémon",t.FIGHTING,t.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,D.SLOW,null,!1,!1,new Y("Apex Build","apex-build",t.FIGHTING,t.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0)),new M(A.MIRAIDON,9,!1,!0,!1,"Paradox Pokémon",t.ELECTRIC,t.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,D.SLOW,null,!1,!1,new Y("Ultimate Mode","ultimate-mode",t.ELECTRIC,t.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0)),new M(A.WALKING_WAKE,9,!1,!1,!1,"Paradox Pokémon",t.WATER,t.DRAGON,3.5,280,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,99,83,91,125,83,109,10,0,295,D.SLOW,null,!1),new M(A.IRON_LEAVES,9,!1,!1,!1,"Paradox Pokémon",t.GRASS,t.PSYCHIC,1.5,125,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,130,88,70,108,104,10,0,295,D.SLOW,null,!1),new M(A.DIPPLIN,9,!1,!1,!1,"Candy Apple Pokémon",t.GRASS,t.DRAGON,.4,4.4,O.SUPERSWEET_SYRUP,O.GLUTTONY,O.STICKY_HOLD,485,80,80,110,95,80,40,45,50,170,D.ERRATIC,50,!1),new M(A.POLTCHAGEIST,9,!1,!1,!1,"Matcha Pokémon",t.GRASS,t.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,D.SLOW,null,!1,!1,new Y("Counterfeit Form","counterfeit",t.GRASS,t.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0),new Y("Artisan Form","artisan",t.GRASS,t.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!1,!0)),new M(A.SINISTCHA,9,!1,!1,!1,"Matcha Pokémon",t.GRASS,t.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,D.SLOW,null,!1,!1,new Y("Unremarkable Form","unremarkable",t.GRASS,t.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178),new Y("Masterpiece Form","masterpiece",t.GRASS,t.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,!1,null,!1,!0)),new M(A.OKIDOGI,9,!0,!1,!1,"Retainer Pokémon",t.POISON,t.FIGHTING,1.8,92.2,O.TOXIC_CHAIN,O.NONE,O.GUARD_DOG,555,88,128,115,58,86,80,3,0,276,D.SLOW,100,!1),new M(A.MUNKIDORI,9,!0,!1,!1,"Retainer Pokémon",t.POISON,t.PSYCHIC,1,12.2,O.TOXIC_CHAIN,O.NONE,O.FRISK,555,88,75,66,130,90,106,3,0,276,D.SLOW,100,!1),new M(A.FEZANDIPITI,9,!0,!1,!1,"Retainer Pokémon",t.POISON,t.FAIRY,1.4,30.1,O.TOXIC_CHAIN,O.NONE,O.TECHNICIAN,555,88,91,82,70,125,99,3,0,276,D.SLOW,100,!1),new M(A.OGERPON,9,!0,!1,!1,"Mask Pokémon",t.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,D.SLOW,0,!1,!1,new Y("Teal Mask","teal-mask",t.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,!1,null,!0),new Y("Wellspring Mask","wellspring-mask",t.GRASS,t.WATER,1.2,39.8,O.WATER_ABSORB,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Hearthflame Mask","hearthflame-mask",t.GRASS,t.FIRE,1.2,39.8,O.MOLD_BREAKER,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Cornerstone Mask","cornerstone-mask",t.GRASS,t.ROCK,1.2,39.8,O.STURDY,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Teal Mask Terastallized","teal-mask-tera",t.GRASS,null,1.2,39.8,O.EMBODY_ASPECT_TEAL,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Wellspring Mask Terastallized","wellspring-mask-tera",t.GRASS,t.WATER,1.2,39.8,O.EMBODY_ASPECT_WELLSPRING,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Hearthflame Mask Terastallized","hearthflame-mask-tera",t.GRASS,t.FIRE,1.2,39.8,O.EMBODY_ASPECT_HEARTHFLAME,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new Y("Cornerstone Mask Terastallized","cornerstone-mask-tera",t.GRASS,t.ROCK,1.2,39.8,O.EMBODY_ASPECT_CORNERSTONE,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275)),new M(A.ARCHALUDON,9,!1,!1,!1,"Alloy Pokémon",t.STEEL,t.DRAGON,2,60,O.STAMINA,O.STURDY,O.STALWART,600,90,105,130,125,65,85,10,50,300,D.MEDIUM_FAST,50,!1),new M(A.HYDRAPPLE,9,!1,!1,!1,"Apple Hydra Pokémon",t.GRASS,t.DRAGON,1.8,93,O.SUPERSWEET_SYRUP,O.REGENERATOR,O.STICKY_HOLD,540,106,80,110,120,80,44,10,50,270,D.ERRATIC,50,!1),new M(A.GOUGING_FIRE,9,!1,!1,!1,"Paradox Pokémon",t.FIRE,t.DRAGON,3.5,590,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,115,121,65,93,91,10,0,295,D.SLOW,null,!1),new M(A.RAGING_BOLT,9,!1,!1,!1,"Paradox Pokémon",t.ELECTRIC,t.DRAGON,5.2,480,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,125,73,91,137,89,75,10,0,295,D.SLOW,null,!1),new M(A.IRON_BOULDER,9,!1,!1,!1,"Paradox Pokémon",t.ROCK,t.PSYCHIC,1.5,162.5,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,120,80,68,108,124,10,0,295,D.SLOW,null,!1),new M(A.IRON_CROWN,9,!1,!1,!1,"Paradox Pokémon",t.STEEL,t.PSYCHIC,1.6,156,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,72,100,122,108,98,10,0,295,D.SLOW,null,!1),new M(A.TERAPAGOS,9,!1,!0,!1,"Tera Pokémon",t.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,D.SLOW,50,!1,!1,new Y("Normal Form","",t.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,!1,null,!0),new Y("Terastal Form","terastal",t.NORMAL,null,.3,16,O.TERA_SHELL,O.NONE,O.NONE,600,95,95,110,105,110,85,5,50,120),new Y("Stellar Form","stellar",t.NORMAL,null,1.7,77,O.TERAFORM_ZERO,O.NONE,O.NONE,700,160,105,110,130,110,85,5,50,140)),new M(A.PECHARUNT,9,!1,!1,!0,"Subjugation Pokémon",t.POISON,t.GHOST,.3,.3,O.POISON_PUPPETEER,O.NONE,O.NONE,600,88,88,160,88,88,88,3,0,300,D.SLOW,null,!1),new M(A.ALOLA_RATTATA,7,!1,!1,!1,"Mouse Pokémon",t.DARK,t.NORMAL,.3,3.8,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,253,30,56,35,25,35,72,255,70,51,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_RATICATE,7,!1,!1,!1,"Mouse Pokémon",t.DARK,t.NORMAL,.7,25.5,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,413,75,71,70,40,80,77,127,70,145,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_RAICHU,7,!1,!1,!1,"Mouse Pokémon",t.ELECTRIC,t.PSYCHIC,.7,21,O.SURGE_SURFER,O.NONE,O.NONE,485,60,85,50,95,85,110,75,50,243,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_SANDSHREW,7,!1,!1,!1,"Mouse Pokémon",t.ICE,t.STEEL,.7,40,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,300,50,75,90,10,35,40,255,50,60,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_SANDSLASH,7,!1,!1,!1,"Mouse Pokémon",t.ICE,t.STEEL,1.2,55,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,450,75,100,120,25,65,65,90,50,158,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_VULPIX,7,!1,!1,!1,"Fox Pokémon",t.ICE,null,.6,9.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,299,38,41,40,50,65,65,190,50,60,D.MEDIUM_FAST,25,!1),new M(A.ALOLA_NINETALES,7,!1,!1,!1,"Fox Pokémon",t.ICE,t.FAIRY,1.1,19.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,505,73,67,75,81,100,109,75,50,177,D.MEDIUM_FAST,25,!1),new M(A.ALOLA_DIGLETT,7,!1,!1,!1,"Mole Pokémon",t.GROUND,t.STEEL,.2,1,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,265,10,55,30,35,45,90,255,50,53,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_DUGTRIO,7,!1,!1,!1,"Mole Pokémon",t.GROUND,t.STEEL,.7,66.6,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,425,35,100,60,50,70,110,50,50,149,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_MEOWTH,7,!1,!1,!1,"Scratch Cat Pokémon",t.DARK,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.RATTLED,290,40,35,35,50,40,90,255,50,58,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_PERSIAN,7,!1,!1,!1,"Classy Cat Pokémon",t.DARK,null,1.1,33,O.FUR_COAT,O.TECHNICIAN,O.RATTLED,440,65,60,60,75,65,115,90,50,154,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_GEODUDE,7,!1,!1,!1,"Rock Pokémon",t.ROCK,t.ELECTRIC,.4,20.3,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,300,40,80,100,30,30,20,255,70,60,D.MEDIUM_SLOW,50,!1),new M(A.ALOLA_GRAVELER,7,!1,!1,!1,"Rock Pokémon",t.ROCK,t.ELECTRIC,1,110,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,390,55,95,115,45,45,35,120,70,137,D.MEDIUM_SLOW,50,!1),new M(A.ALOLA_GOLEM,7,!1,!1,!1,"Megaton Pokémon",t.ROCK,t.ELECTRIC,1.7,316,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,495,80,120,130,55,65,45,45,70,223,D.MEDIUM_SLOW,50,!1),new M(A.ALOLA_GRIMER,7,!1,!1,!1,"Sludge Pokémon",t.POISON,t.DARK,.7,42,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,325,80,80,50,40,50,25,190,70,65,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_MUK,7,!1,!1,!1,"Sludge Pokémon",t.POISON,t.DARK,1,52,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,500,105,105,75,65,100,50,75,70,175,D.MEDIUM_FAST,50,!1),new M(A.ALOLA_EXEGGUTOR,7,!1,!1,!1,"Coconut Pokémon",t.GRASS,t.DRAGON,10.9,415.6,O.FRISK,O.NONE,O.HARVEST,530,95,105,85,125,75,45,45,50,186,D.SLOW,50,!1),new M(A.ALOLA_MAROWAK,7,!1,!1,!1,"Bone Keeper Pokémon",t.FIRE,t.GHOST,1,34,O.CURSED_BODY,O.LIGHTNING_ROD,O.ROCK_HEAD,425,60,80,110,50,80,45,75,50,149,D.MEDIUM_FAST,50,!1),new M(A.ETERNAL_FLOETTE,6,!0,!1,!1,"Single Bloom Pokémon",t.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,551,74,65,67,125,128,92,120,70,243,D.MEDIUM_FAST,0,!1),new M(A.GALAR_MEOWTH,8,!1,!1,!1,"Scratch Cat Pokémon",t.STEEL,null,.4,7.5,O.PICKUP,O.TOUGH_CLAWS,O.UNNERVE,290,50,65,55,40,40,40,255,50,58,D.MEDIUM_FAST,50,!1),new M(A.GALAR_PONYTA,8,!1,!1,!1,"Fire Horse Pokémon",t.PSYCHIC,null,.8,24,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,410,50,85,55,65,65,90,190,50,82,D.MEDIUM_FAST,50,!1),new M(A.GALAR_RAPIDASH,8,!1,!1,!1,"Fire Horse Pokémon",t.PSYCHIC,t.FAIRY,1.7,80,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,500,65,100,70,80,80,105,60,50,175,D.MEDIUM_FAST,50,!1),new M(A.GALAR_SLOWPOKE,8,!1,!1,!1,"Dopey Pokémon",t.PSYCHIC,null,1.2,36,O.GLUTTONY,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,D.MEDIUM_FAST,50,!1),new M(A.GALAR_SLOWBRO,8,!1,!1,!1,"Hermit Crab Pokémon",t.POISON,t.PSYCHIC,1.6,70.5,O.QUICK_DRAW,O.OWN_TEMPO,O.REGENERATOR,490,95,100,95,100,70,30,75,50,172,D.MEDIUM_FAST,50,!1),new M(A.GALAR_FARFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",t.FIGHTING,null,.8,42,O.STEADFAST,O.NONE,O.SCRAPPY,377,52,95,55,58,62,55,45,50,132,D.MEDIUM_FAST,50,!1),new M(A.GALAR_WEEZING,8,!1,!1,!1,"Poison Gas Pokémon",t.POISON,t.FAIRY,3,16,O.LEVITATE,O.NEUTRALIZING_GAS,O.MISTY_SURGE,490,65,90,120,85,70,60,60,50,172,D.MEDIUM_FAST,50,!1),new M(A.GALAR_MR_MIME,8,!1,!1,!1,"Barrier Pokémon",t.ICE,t.PSYCHIC,1.4,56.8,O.VITAL_SPIRIT,O.SCREEN_CLEANER,O.ICE_BODY,460,50,65,65,90,90,100,45,50,161,D.MEDIUM_FAST,50,!1),new M(A.GALAR_ARTICUNO,8,!0,!1,!1,"Freeze Pokémon",t.PSYCHIC,t.FLYING,1.7,50.9,O.COMPETITIVE,O.NONE,O.NONE,580,90,85,85,125,100,95,3,35,290,D.SLOW,null,!1),new M(A.GALAR_ZAPDOS,8,!0,!1,!1,"Electric Pokémon",t.FIGHTING,t.FLYING,1.6,58.2,O.DEFIANT,O.NONE,O.NONE,580,90,125,90,85,90,100,3,35,290,D.SLOW,null,!1),new M(A.GALAR_MOLTRES,8,!0,!1,!1,"Flame Pokémon",t.DARK,t.FLYING,2,66,O.BERSERK,O.NONE,O.NONE,580,90,85,90,100,125,90,3,35,290,D.SLOW,null,!1),new M(A.GALAR_SLOWKING,8,!1,!1,!1,"Royal Pokémon",t.POISON,t.PSYCHIC,1.8,79.5,O.CURIOUS_MEDICINE,O.OWN_TEMPO,O.REGENERATOR,490,95,65,80,110,110,30,70,50,172,D.MEDIUM_FAST,50,!1),new M(A.GALAR_CORSOLA,8,!1,!1,!1,"Coral Pokémon",t.GHOST,null,.6,.5,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,410,60,55,100,65,100,30,60,50,144,D.FAST,25,!1),new M(A.GALAR_ZIGZAGOON,8,!1,!1,!1,"Tiny Raccoon Pokémon",t.DARK,t.NORMAL,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,D.MEDIUM_FAST,50,!1),new M(A.GALAR_LINOONE,8,!1,!1,!1,"Rushing Pokémon",t.DARK,t.NORMAL,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,D.MEDIUM_FAST,50,!1),new M(A.GALAR_DARUMAKA,8,!1,!1,!1,"Zen Charm Pokémon",t.ICE,null,.7,40,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,D.MEDIUM_SLOW,50,!1),new M(A.GALAR_DARMANITAN,8,!1,!1,!1,"Blazing Pokémon",t.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,D.MEDIUM_SLOW,50,!1,!0,new Y("Standard Mode","",t.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new Y("Zen Mode","zen",t.ICE,t.FIRE,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,540,105,160,55,30,55,135,60,50,189)),new M(A.GALAR_YAMASK,8,!1,!1,!1,"Spirit Pokémon",t.GROUND,t.GHOST,.5,1.5,O.WANDERING_SPIRIT,O.NONE,O.NONE,303,38,55,85,30,65,30,190,50,61,D.MEDIUM_FAST,50,!1),new M(A.GALAR_STUNFISK,8,!1,!1,!1,"Trap Pokémon",t.GROUND,t.STEEL,.7,20.5,O.MIMICRY,O.NONE,O.NONE,471,109,81,99,66,84,32,75,70,165,D.MEDIUM_FAST,50,!1),new M(A.HISUI_GROWLITHE,8,!1,!1,!1,"Puppy Pokémon",t.FIRE,t.ROCK,.8,22.7,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,350,60,75,45,65,50,55,190,50,70,D.SLOW,75,!1),new M(A.HISUI_ARCANINE,8,!1,!1,!1,"Legendary Pokémon",t.FIRE,t.ROCK,2,168,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,555,95,115,80,95,80,90,85,50,194,D.SLOW,75,!1),new M(A.HISUI_VOLTORB,8,!1,!1,!1,"Ball Pokémon",t.ELECTRIC,t.GRASS,.5,13,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,80,66,D.MEDIUM_FAST,null,!1),new M(A.HISUI_ELECTRODE,8,!1,!1,!1,"Ball Pokémon",t.ELECTRIC,t.GRASS,1.2,81,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,D.MEDIUM_FAST,null,!1),new M(A.HISUI_TYPHLOSION,8,!1,!1,!1,"Volcano Pokémon",t.FIRE,t.GHOST,1.6,69.8,O.BLAZE,O.NONE,O.FRISK,534,73,84,78,119,85,95,45,70,240,D.MEDIUM_SLOW,87.5,!1),new M(A.HISUI_QWILFISH,8,!1,!1,!1,"Balloon Pokémon",t.DARK,t.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,D.MEDIUM_FAST,50,!1),new M(A.HISUI_SNEASEL,8,!1,!1,!1,"Sharp Claw Pokémon",t.FIGHTING,t.POISON,.9,27,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,D.MEDIUM_SLOW,50,!0),new M(A.HISUI_SAMUROTT,8,!1,!1,!1,"Formidable Pokémon",t.WATER,t.DARK,1.5,58.2,O.TORRENT,O.NONE,O.SHARPNESS,528,90,108,80,100,65,85,45,80,238,D.MEDIUM_SLOW,87.5,!1),new M(A.HISUI_LILLIGANT,8,!1,!1,!1,"Flowering Pokémon",t.GRASS,t.FIGHTING,1.2,19.2,O.CHLOROPHYLL,O.HUSTLE,O.LEAF_GUARD,480,70,105,75,50,75,105,75,50,168,D.MEDIUM_FAST,0,!1),new M(A.HISUI_ZORUA,8,!1,!1,!1,"Tricky Fox Pokémon",t.NORMAL,t.GHOST,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,35,60,40,85,40,70,75,50,66,D.MEDIUM_SLOW,87.5,!1),new M(A.HISUI_ZOROARK,8,!1,!1,!1,"Illusion Fox Pokémon",t.NORMAL,t.GHOST,1.6,83,O.ILLUSION,O.NONE,O.NONE,510,55,100,60,125,60,110,45,50,179,D.MEDIUM_SLOW,87.5,!1),new M(A.HISUI_BRAVIARY,8,!1,!1,!1,"Valiant Pokémon",t.PSYCHIC,t.FLYING,1.7,43.4,O.KEEN_EYE,O.SHEER_FORCE,O.TINTED_LENS,510,110,83,70,112,70,65,60,50,179,D.SLOW,100,!1),new M(A.HISUI_SLIGGOO,8,!1,!1,!1,"Soft Tissue Pokémon",t.STEEL,t.DRAGON,.7,68.5,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,452,58,75,83,83,113,40,45,35,158,D.SLOW,50,!1),new M(A.HISUI_GOODRA,8,!1,!1,!1,"Dragon Pokémon",t.STEEL,t.DRAGON,1.7,334.1,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,600,80,100,100,110,150,60,45,35,270,D.SLOW,50,!1),new M(A.HISUI_AVALUGG,8,!1,!1,!1,"Iceberg Pokémon",t.ICE,t.ROCK,1.4,262.4,O.STRONG_JAW,O.ICE_BODY,O.STURDY,514,95,127,184,34,36,38,55,50,180,D.MEDIUM_FAST,50,!1),new M(A.HISUI_DECIDUEYE,8,!1,!1,!1,"Arrow Quill Pokémon",t.GRASS,t.FIGHTING,1.6,37,O.OVERGROW,O.NONE,O.SCRAPPY,530,88,112,80,95,95,60,45,50,239,D.MEDIUM_SLOW,87.5,!1),new M(A.PALDEA_TAUROS,9,!1,!1,!1,"Wild Bull Pokémon",t.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,D.SLOW,100,!1,!1,new Y("Combat Breed","combat",t.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,"",!0),new Y("Blaze Breed","blaze",t.FIGHTING,t.FIRE,1.4,85,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0),new Y("Aqua Breed","aqua",t.FIGHTING,t.WATER,1.4,110,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0)),new M(A.PALDEA_WOOPER,9,!1,!1,!1,"Water Fish Pokémon",t.POISON,t.GROUND,.4,11,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,D.MEDIUM_FAST,50,!1),new M(A.BLOODMOON_URSALUNA,9,!0,!1,!1,"Peat Pokémon",t.GROUND,t.NORMAL,2.7,333,O.MINDS_EYE,O.NONE,O.NONE,555,113,70,120,135,65,52,75,50,278,D.MEDIUM_FAST,50,!1))}r(AV,"initSpecies");var xO=(R=>(R[R.DEFAULT=0]="DEFAULT",R[R.FINAL_BOSS=1]="FINAL_BOSS",R))(xO||{});function Q(R,e=!0){if(!R)return"Missigno";switch(T.currentBattle.battleSpec){case xO.DEFAULT:return R.isEnemy()?R.hasTrainer()?_.t("battle:foePokemonWithAffix",{pokemonName:R.getNameToRender(e)}):_.t("battle:wildPokemonWithAffix",{pokemonName:R.getNameToRender(e)}):R.getNameToRender(e);case xO.FINAL_BOSS:return R.isEnemy()?_.t("battle:foePokemonWithAffix",{pokemonName:R.getNameToRender(e)}):R.getNameToRender(e);default:return R.getNameToRender(e)}}r(Q,"getPokemonNameWithAffix");var bA=(R=>(R[R.NONE=0]="NONE",R[R.MISTY=1]="MISTY",R[R.ELECTRIC=2]="ELECTRIC",R[R.GRASSY=3]="GRASSY",R[R.PSYCHIC=4]="PSYCHIC",R))(bA||{});const au=class au{constructor(e,I){this.terrainType=e,this.turnsLeft=I||0}lapse(){return this.turnsLeft?!!--this.turnsLeft:!0}getAttackTypeMultiplier(e){switch(this.terrainType){case 2:if(e===t.ELECTRIC)return 1.3;break;case 3:if(e===t.GRASS)return 1.3;break;case 4:if(e===t.PSYCHIC)return 1.3;break}return 1}isMoveTerrainCancelled(e,I,L){switch(this.terrainType){case 4:if(!L.hasAttr("ProtectAttr"))return L.getPriority(e)>0&&e.getOpponents(!0).some(N=>I.includes(N.getBattlerIndex())&&N.isGrounded())}return!1}};r(au,"Terrain");let OG=au;function EV(R){switch(R){case 1:return _.t("terrain:misty");case 2:return _.t("terrain:electric");case 3:return _.t("terrain:grassy");case 4:return _.t("terrain:psychic")}return""}r(EV,"getTerrainName");function P7(R){switch(R){case 1:return[232,136,200];case 2:return[248,248,120];case 3:return[120,200,80];case 4:return[160,64,160]}return[0,0,0]}r(P7,"getTerrainColor");var B=(R=>(R[R.COMMON=0]="COMMON",R[R.RARE=1]="RARE",R[R.EPIC=2]="EPIC",R[R.LEGENDARY=3]="LEGENDARY",R))(B||{}),rI=(R=>(R[R.DEFAULT=0]="DEFAULT",R[R.LEGACY=1]="LEGACY",R))(rI||{}),p=(R=>(R[R.COMMON=0]="COMMON",R[R.GREAT=1]="GREAT",R[R.ULTRA=2]="ULTRA",R[R.ROGUE=3]="ROGUE",R[R.MASTER=4]="MASTER",R[R.LUXURY=5]="LUXURY",R))(p||{}),XA=(R=>(R[R.MESSAGE=0]="MESSAGE",R[R.WINDOW=1]="WINDOW",R[R.WINDOW_ALT=2]="WINDOW_ALT",R[R.BATTLE_INFO=3]="BATTLE_INFO",R[R.PARTY=4]="PARTY",R[R.PARTY_RED=5]="PARTY_RED",R[R.SUMMARY=6]="SUMMARY",R[R.SUMMARY_ALT=7]="SUMMARY_ALT",R[R.SUMMARY_RED=8]="SUMMARY_RED",R[R.SUMMARY_BLUE=9]="SUMMARY_BLUE",R[R.SUMMARY_PINK=10]="SUMMARY_PINK",R[R.SUMMARY_GOLD=11]="SUMMARY_GOLD",R[R.SUMMARY_GRAY=12]="SUMMARY_GRAY",R[R.SUMMARY_GREEN=13]="SUMMARY_GREEN",R[R.MONEY=14]="MONEY",R[R.MONEY_WINDOW=15]="MONEY_WINDOW",R[R.STATS_LABEL=16]="STATS_LABEL",R[R.STATS_VALUE=17]="STATS_VALUE",R[R.SETTINGS_VALUE=18]="SETTINGS_VALUE",R[R.SETTINGS_LABEL=19]="SETTINGS_LABEL",R[R.SETTINGS_SELECTED=20]="SETTINGS_SELECTED",R[R.SETTINGS_LOCKED=21]="SETTINGS_LOCKED",R[R.TOOLTIP_TITLE=22]="TOOLTIP_TITLE",R[R.TOOLTIP_CONTENT=23]="TOOLTIP_CONTENT",R[R.MOVE_INFO_CONTENT=24]="MOVE_INFO_CONTENT",R[R.MOVE_PP_FULL=25]="MOVE_PP_FULL",R[R.MOVE_PP_HALF_FULL=26]="MOVE_PP_HALF_FULL",R[R.MOVE_PP_NEAR_EMPTY=27]="MOVE_PP_NEAR_EMPTY",R[R.MOVE_PP_EMPTY=28]="MOVE_PP_EMPTY",R[R.SMALLER_WINDOW_ALT=29]="SMALLER_WINDOW_ALT",R[R.BGM_BAR=30]="BGM_BAR",R[R.PERFECT_IV=31]="PERFECT_IV",R[R.ME_OPTION_DEFAULT=32]="ME_OPTION_DEFAULT",R[R.ME_OPTION_SPECIAL=33]="ME_OPTION_SPECIAL",R[R.SHADOW_TEXT=34]="SHADOW_TEXT",R))(XA||{});function oE(R,e,I,L,N){const{scale:S,styleOptions:n,shadowColor:i,shadowXpos:C,shadowYpos:o}=E_(L,T.uiTheme,N),l=T.add.text(R,e,I,n);return l.setScale(S),l.setShadow(C,o,i),n.lineSpacing||l.setLineSpacing(S*30),l.lineSpacing<12&&_.resolvedLanguage==="ja"&&l.setLineSpacing(l.lineSpacing+35),l}r(oE,"addTextObject");function H7(R,e,I){const{scale:L,styleOptions:N,shadowColor:S,shadowXpos:n,shadowYpos:i}=E_(e,T.uiTheme,I);R.setScale(L),R.setShadow(n,i,S),N.lineSpacing||R.setLineSpacing(L*30),R.lineSpacing<12&&_.resolvedLanguage==="ja"&&R.setLineSpacing(R.lineSpacing+35)}r(H7,"setTextStyle");function IG(R,e,I,L,N){const{scale:S,styleOptions:n,shadowColor:i,shadowXpos:C,shadowYpos:o}=E_(L,T.uiTheme,N),l=new ay(T,R,e,I,n);return T.add.existing(l),l.setScale(S),l.setShadow(C,o,i),n.lineSpacing||l.setLineSpacing(S*60),l.lineSpacing<12&&_.resolvedLanguage==="ja"&&l.setLineSpacing(l.lineSpacing+35),l}r(IG,"addBBCodeTextObject");function u7(R,e,I,L,N,S){const{scale:n,styleOptions:i}=E_(N,T.uiTheme,S),C=new ny(T,R,e,I,L,i);return T.add.existing(C),C.setScale(n),C}r(u7,"addTextInputObject");function E_(R,e,I){var l;const L=_.resolvedLanguage;let N=4,S=5,n=.1666666667;const i=96;let C={fontFamily:"emerald",fontSize:96,color:nS(R,!1,e),padding:{bottom:6}};switch(_.resolvedLanguage==="ja"&&(n=.1388888889,C.padding={top:2,bottom:4}),R){case 6:case 7:case 9:case 8:case 10:case 11:case 12:case 13:case 1:case 2:case 32:case 33:N=3,S=3;break;case 16:{let H="96px";switch(L){case"de":N=3,S=3,H="80px";break;default:H="96px";break}C.fontSize=H;break}case 17:{N=3,S=3;let H="96px";switch(L){case"de":H="80px";break;default:H="96px";break}C.fontSize=H;break}case 0:case 19:case 21:case 20:break;case 3:case 14:case 15:case 22:C.fontSize=i-24,N=3.5,S=3.5;break;case 4:case 5:C.fontSize=i-30,C.fontFamily="pkmnems";break;case 23:C.fontSize=i-32,N=3,S=3;break;case 24:C.fontSize=i-40,N=3,S=3;break;case 29:C.fontSize=i-36,N=3,S=3;break;case 30:C.fontSize=i-24,N=3,S=3;break}const o=nS(R,!0,e);if(I){if(I.fontSize){const H=Number.parseInt(I.fontSize.toString().slice(0,-2))/Number.parseInt(((l=C.fontSize)==null?void 0:l.toString().slice(0,-2))??"1");N*=H}C=Object.assign(C,I)}return{scale:n,styleOptions:C,shadowColor:o,shadowXpos:N,shadowYpos:S}}r(E_,"getTextStyleOptions");function kI(R,e,I=rI.DEFAULT){return`[color=${nS(e,!1,I)}][shadow=${nS(e,!0,I)}]${R}`}r(kI,"getBBCodeFrag");function eV(R,e,I,L){let N=kI(R,e,I)+"[/color][/shadow]";const S=[...N.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];return N=N.replace(/@\[MONEY\]/g,n=>"@[MONEY_WINDOW]"),N=N.replace(/@\[([^{]*)\]{([^}]*)}/gi,(n,i,C)=>"[/color][/shadow]"+kI(C,XA[i],I)+"[/color][/shadow]"+S),N.replace(/\[color=[^\[]*\]\[shadow=[^\[]*\]\[\/color\]\[\/shadow\]/gi,"")}r(eV,"getTextWithColors");function nS(R,e,I=rI.DEFAULT){const L=I===rI.LEGACY;switch(R){case 0:return e?"#6b5a73":"#f8f8f8";case 1:case 24:case 25:case 23:case 18:return L?e?"#d0d0c8":"#484848":e?"#6b5a73":"#f8f8f8";case 26:return L?e?"#ebd773":"#a68e17":e?"#6e672c":"#ccbe00";case 27:return L?e?"#f7b18b":"#d64b00":e?"#69402a":"#d64b00";case 28:return L?e?"#fca2a2":"#e13d3d":e?"#632929":"#e13d3d";case 2:return e?"#d0d0c8":"#484848";case 3:return L?e?"#ded6b5":"#404040":e?"#6b5a73":"#f8f8f8";case 4:return e?"#707070":"#f8f8f8";case 5:return e?"#984038":"#f89890";case 6:return e?"#636363":"#f8f8f8";case 7:return L?e?"#636363":"#f8f8f8":e?"#d0d0c8":"#484848";case 8:case 22:return e?"#ffbd73":"#e70808";case 9:return e?"#006090":"#40c8f8";case 10:return e?"#984038":"#f89890";case 11:case 14:return e?"#a0a060":"#e8e8a8";case 15:return L?e?"#c07800":"#f8b050":e?"#a0a060":"#e8e8a8";case 21:case 12:return e?"#636363":"#a0a0a0";case 16:return e?"#c07800":"#f8b050";case 17:return L?e?"#d0d0c8":"#484848":e?"#6b5a73":"#f8f8f8";case 13:return e?"#306850":"#78c850";case 19:case 31:return e?"#c07800":"#f8b050";case 20:return e?"#f83018":"#f88880";case 29:return e?"#d0d0c8":"#484848";case 30:return e?"#6b5a73":"#f8f8f8";case 32:return e?"#6b5a73":"#f8f8f8";case 33:return L?e?"#c07800":"#f8b050":e?"#306850":"#78c850";case 34:return L?"#d0d0c8":"#6b5a73"}}r(nS,"getTextColor");function oT(R){switch(R){case p.COMMON:return 16316664;case p.GREAT:return 4823288;case p.ULTRA:return 16306232;case p.ROGUE:return 14369603;case p.MASTER:return 14889413;case p.LUXURY:return 15158296}}r(oT,"getModifierTierTextTint");function c7(R){switch(R){case B.COMMON:return oT(p.COMMON);case B.RARE:return oT(p.GREAT);case B.EPIC:return oT(p.ULTRA);case B.LEGENDARY:return oT(p.MASTER)}}r(c7,"getEggTierTextTint");var WA=(R=>(R[R.MYSTERIOUS_CHALLENGERS=0]="MYSTERIOUS_CHALLENGERS",R[R.MYSTERIOUS_CHEST=1]="MYSTERIOUS_CHEST",R[R.DARK_DEAL=2]="DARK_DEAL",R[R.FIGHT_OR_FLIGHT=3]="FIGHT_OR_FLIGHT",R[R.SLUMBERING_SNORLAX=4]="SLUMBERING_SNORLAX",R[R.TRAINING_SESSION=5]="TRAINING_SESSION",R[R.DEPARTMENT_STORE_SALE=6]="DEPARTMENT_STORE_SALE",R[R.SHADY_VITAMIN_DEALER=7]="SHADY_VITAMIN_DEALER",R[R.FIELD_TRIP=8]="FIELD_TRIP",R[R.SAFARI_ZONE=9]="SAFARI_ZONE",R[R.LOST_AT_SEA=10]="LOST_AT_SEA",R[R.FIERY_FALLOUT=11]="FIERY_FALLOUT",R[R.THE_STRONG_STUFF=12]="THE_STRONG_STUFF",R[R.THE_POKEMON_SALESMAN=13]="THE_POKEMON_SALESMAN",R[R.AN_OFFER_YOU_CANT_REFUSE=14]="AN_OFFER_YOU_CANT_REFUSE",R[R.DELIBIRDY=15]="DELIBIRDY",R[R.ABSOLUTE_AVARICE=16]="ABSOLUTE_AVARICE",R[R.A_TRAINERS_TEST=17]="A_TRAINERS_TEST",R[R.TRASH_TO_TREASURE=18]="TRASH_TO_TREASURE",R[R.BERRIES_ABOUND=19]="BERRIES_ABOUND",R[R.CLOWNING_AROUND=20]="CLOWNING_AROUND",R[R.PART_TIMER=21]="PART_TIMER",R[R.DANCING_LESSONS=22]="DANCING_LESSONS",R[R.WEIRD_DREAM=23]="WEIRD_DREAM",R[R.THE_WINSTRATE_CHALLENGE=24]="THE_WINSTRATE_CHALLENGE",R[R.TELEPORTING_HIJINKS=25]="TELEPORTING_HIJINKS",R[R.BUG_TYPE_SUPERFAN=26]="BUG_TYPE_SUPERFAN",R[R.FUN_AND_GAMES=27]="FUN_AND_GAMES",R[R.UNCOMMON_BREED=28]="UNCOMMON_BREED",R[R.GLOBAL_TRADE_SYSTEM=29]="GLOBAL_TRADE_SYSTEM",R[R.THE_EXPERT_POKEMON_BREEDER=30]="THE_EXPERT_POKEMON_BREEDER",R))(WA||{}),xE=(R=>(R[R.COMMON=66]="COMMON",R[R.GREAT=40]="GREAT",R[R.ULTRA=19]="ULTRA",R[R.ROGUE=3]="ROGUE",R[R.MASTER=0]="MASTER",R))(xE||{}),QA=(R=>(R[R.SINGLE_GENERATION=0]="SINGLE_GENERATION",R[R.SINGLE_TYPE=1]="SINGLE_TYPE",R[R.LOWER_MAX_STARTER_COST=2]="LOWER_MAX_STARTER_COST",R[R.LOWER_STARTER_POINTS=3]="LOWER_STARTER_POINTS",R[R.FRESH_START=4]="FRESH_START",R[R.INVERSE_BATTLE=5]="INVERSE_BATTLE",R[R.FLIP_STAT=6]="FLIP_STAT",R))(QA||{});const $e=[{name:"Winter Holiday Update",eventType:0,shinyMultiplier:2,upgradeUnlockedVouchers:!0,startDate:new Date(Date.UTC(2024,11,21,0)),endDate:new Date(Date.UTC(2025,0,4,0)),bannerKey:"winter_holidays2024-event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:A.GIMMIGHOUL,blockEvolution:!0},{species:A.DELIBIRD},{species:A.STANTLER},{species:A.CYNDAQUIL},{species:A.PIPLUP},{species:A.CHESPIN},{species:A.BALTOY},{species:A.SNOVER},{species:A.CHINGLING},{species:A.LITWICK},{species:A.CUBCHOO},{species:A.SWIRLIX},{species:A.AMAURA},{species:A.MUDBRAY},{species:A.ROLYCOLY},{species:A.MILCERY},{species:A.SMOLIV},{species:A.ALOLA_VULPIX},{species:A.GALAR_DARUMAKA},{species:A.IRON_BUNDLE}],delibirdyBuff:["CATCHING_CHARM","SHINY_CHARM","ABILITY_CHARM","EXP_CHARM","SUPER_EXP_CHARM","HEALING_CHARM"],weather:[{weatherType:Z.SNOW,weight:1}],mysteryEncounterTierChanges:[{mysteryEncounter:WA.DELIBIRDY,tier:xE.COMMON},{mysteryEncounter:WA.PART_TIMER,disable:!0},{mysteryEncounter:WA.AN_OFFER_YOU_CANT_REFUSE,disable:!0},{mysteryEncounter:WA.FIELD_TRIP,disable:!0},{mysteryEncounter:WA.DEPARTMENT_STORE_SALE,disable:!0}],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"Year of the Snake",eventType:2,luckBoost:1,startDate:new Date(Date.UTC(2025,0,29,0)),endDate:new Date(Date.UTC(2025,1,3,0)),bannerKey:"yearofthesnakeevent",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:A.EKANS},{species:A.ONIX},{species:A.DRATINI},{species:A.CLEFFA},{species:A.UMBREON},{species:A.DUNSPARCE},{species:A.TEDDIURSA},{species:A.SEVIPER},{species:A.LUNATONE},{species:A.CHINGLING},{species:A.SNIVY},{species:A.DARUMAKA},{species:A.DRAMPA},{species:A.SILICOBRA},{species:A.BLOODMOON_URSALUNA}],luckBoostedSpecies:[A.EKANS,A.ARBOK,A.ONIX,A.STEELIX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.CLEFFA,A.CLEFAIRY,A.CLEFABLE,A.UMBREON,A.DUNSPARCE,A.DUDUNSPARCE,A.TEDDIURSA,A.URSARING,A.URSALUNA,A.SEVIPER,A.LUNATONE,A.RAYQUAZA,A.CHINGLING,A.CHIMECHO,A.CRESSELIA,A.DARKRAI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.DARUMAKA,A.DARMANITAN,A.ZYGARDE,A.DRAMPA,A.LUNALA,A.BLACEPHALON,A.SILICOBRA,A.SANDACONDA,A.ROARING_MOON,A.BLOODMOON_URSALUNA],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"Valentine",eventType:0,startDate:new Date(Date.UTC(2025,1,10)),endDate:new Date(Date.UTC(2025,1,21)),boostFusions:!0,shinyMultiplier:2,bannerKey:"valentines2025event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:A.NIDORAN_F},{species:A.NIDORAN_M},{species:A.IGGLYBUFF},{species:A.SMOOCHUM},{species:A.VOLBEAT},{species:A.ILLUMISE},{species:A.ROSELIA},{species:A.LUVDISC},{species:A.WOOBAT},{species:A.FRILLISH},{species:A.ALOMOMOLA},{species:A.FURFROU,formIndex:1},{species:A.ESPURR},{species:A.SPRITZEE},{species:A.SWIRLIX},{species:A.APPLIN},{species:A.MILCERY},{species:A.INDEEDEE},{species:A.TANDEMAUS},{species:A.ENAMORUS}],luckBoostedSpecies:[A.LUVDISC],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"PKMNDAY2025",eventType:2,startDate:new Date(Date.UTC(2025,1,27)),endDate:new Date(Date.UTC(2025,2,4)),classicFriendshipMultiplier:4,bannerKey:"pkmnday2025event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:A.PIKACHU,formIndex:1,blockEvolution:!0},{species:A.EEVEE,formIndex:1,blockEvolution:!0},{species:A.CHIKORITA},{species:A.TOTODILE},{species:A.TEPIG}],luckBoostedSpecies:[A.PICHU,A.PIKACHU,A.RAICHU,A.ALOLA_RAICHU,A.PSYDUCK,A.GOLDUCK,A.EEVEE,A.FLAREON,A.JOLTEON,A.VAPOREON,A.ESPEON,A.UMBREON,A.LEAFEON,A.GLACEON,A.SYLVEON,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.ZYGARDE,A.ETERNAL_FLOETTE],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"April Fools 2025",eventType:2,startDate:new Date(Date.UTC(2025,2,31)),endDate:new Date(Date.UTC(2025,3,3)),bannerKey:"aprf25",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","es-MX","pt-BR","zh-CN"],trainerShinyChance:13107,music:[["title","title_afd"],["battle_rival_3","battle_rival_3_afd"]],dailyRunChallenges:[{challenge:QA.INVERSE_BATTLE,value:1}]},{name:"Shining Spring",eventType:0,startDate:new Date(Date.UTC(2025,4,3)),endDate:new Date(Date.UTC(2025,4,13)),bannerKey:"spr25event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","es-MX","pt-BR","zh-CN"],shinyMultiplier:2,upgradeUnlockedVouchers:!0,eventEncounters:[{species:A.HOPPIP},{species:A.CELEBI},{species:A.VOLBEAT},{species:A.ILLUMISE},{species:A.SPOINK},{species:A.LILEEP},{species:A.SHINX},{species:A.PACHIRISU},{species:A.CHERUBI},{species:A.MUNCHLAX},{species:A.TEPIG},{species:A.PANSAGE},{species:A.PANSEAR},{species:A.PANPOUR},{species:A.DARUMAKA},{species:A.ARCHEN},{species:A.DEERLING,formIndex:0},{species:A.CLAUNCHER},{species:A.WISHIWASHI},{species:A.DRAMPA},{species:A.JANGMO_O},{species:A.APPLIN}],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]}],nu=class nu{isActive(e){return e.startDate<new Date&&new Date<e.endDate}activeEvent(){return $e.find(e=>this.isActive(e))}isEventActive(){return $e.some(e=>this.isActive(e))}activeEventHasBanner(){return $e.filter(I=>this.isActive(I)&&I.hasOwnProperty("bannerKey")).length>0}getShinyMultiplier(){let e=1;const I=$e.filter(L=>L.eventType===0&&this.isActive(L));for(const L of I)e*=L.shinyMultiplier??1;return e}getEventBannerFilename(){var e;return((e=$e.find(I=>this.isActive(I)))==null?void 0:e.bannerKey)??""}getEventBannerLangs(){var I;const e=[];return e.push(...(I=$e.find(L=>this.isActive(L)&&!SA(L.availableLangs)))==null?void 0:I.availableLangs),e}getEventEncounters(){const e=[];return $e.filter(I=>this.isActive(I)).map(I=>{SA(I.eventEncounters)||e.push(...I.eventEncounters)}),e}getClassicFriendshipMultiplier(){let e=Wy;const I=$e.filter(L=>this.isActive(L));for(const L of I)!SA(L.classicFriendshipMultiplier)&&L.classicFriendshipMultiplier>e&&(e=L.classicFriendshipMultiplier);return e}getUpgradeUnlockedVouchers(){return $e.some(e=>this.isActive(e)&&(e.upgradeUnlockedVouchers??!1))}getDelibirdyBuff(){const e=[];return $e.filter(I=>this.isActive(I)).map(I=>{SA(I.delibirdyBuff)||e.push(...I.delibirdyBuff)}),e}getWeather(){const e=[];return $e.filter(I=>this.isActive(I)).map(I=>{SA(I.weather)||e.push(...I.weather)}),e}getAllMysteryEncounterChanges(){const e=[];return $e.filter(I=>this.isActive(I)).map(I=>{SA(I.mysteryEncounterTierChanges)||e.push(...I.mysteryEncounterTierChanges)}),e}getEventMysteryEncountersDisabled(){const e=[];return $e.filter(I=>this.isActive(I)&&!SA(I.mysteryEncounterTierChanges)).map(I=>{var L;(L=I.mysteryEncounterTierChanges)==null||L.map(N=>{N.disable&&e.push(N.mysteryEncounter)})}),e}getMysteryEncounterTierForEvent(e,I){let L=I;return $e.filter(N=>this.isActive(N)&&!SA(N.mysteryEncounterTierChanges)).map(N=>{var S;(S=N.mysteryEncounterTierChanges)==null||S.map(n=>{n.mysteryEncounter===e&&(L=n.tier??I)})}),L}getEventLuckBoost(){let e=0;const I=$e.filter(L=>this.isActive(L)&&!SA(L.luckBoost));for(const L of I)e+=L.luckBoost;return e}getEventLuckBoostedSpecies(){const e=[];return $e.filter(I=>this.isActive(I)).map(I=>{SA(I.luckBoostedSpecies)||e.push(...I.luckBoostedSpecies.filter(L=>!e.includes(L)))}),e}areFusionsBoosted(){return $e.some(e=>this.isActive(e)&&e.boostFusions)}getFixedBattleEventRewards(e){const I=[];return $e.filter(L=>this.isActive(L)&&!SA(L.classicWaveRewards)).map(L=>{I.push(...L.classicWaveRewards.filter(N=>N.wave===e).map(N=>N.type))}),I}getClassicTrainerShinyChance(){let e=0;return $e.filter(L=>this.isActive(L)&&!SA(L.trainerShinyChance)).map(L=>e+=L.trainerShinyChance),e}getEventBgmReplacement(e){let I=e;return $e.map(L=>{this.isActive(L)&&!SA(L.music)&&L.music.map(N=>{N[0]===e&&(`${L.name}${N[0]}${N[1]}`,I=N[1])})}),I}startEventChallenges(){var I;const e=(I=this.activeEvent())==null?void 0:I.dailyRunChallenges;e==null||e.forEach(L=>T.gameMode.setChallengeValue(L.challenge,L.value))}};r(nu,"TimedEventManager");let tG=nu;const ru=class ru extends Phaser.GameObjects.Container{constructor(e,I,L){super(T,e,I),this.availableWidth=T.scaledCanvas.width,this.event=L,this.setVisible(!1)}setWidth(e){var I;if(e!==this.availableWidth){this.availableWidth=e;const L=this.availableWidth/2+(((I=this.event)==null?void 0:I.xOffset)??0);this.banner&&(this.banner.x=L),this.eventTimerText&&(this.eventTimerText.x=L)}}setup(){var I;const e=_.resolvedLanguage;if((I=this.event)!=null&&I.bannerKey){let L=this.event.bannerKey;e&&this.event.availableLangs&&this.event.availableLangs.length>0&&(this.event.availableLangs.includes(e)?L+="-"+e:L+="-en"),this.event.bannerKey;const N=5,S=this.event.eventType!==1,n=T.game.canvas.height/6-N-(S?10:0)-(this.event.yOffset??0);this.banner=new Phaser.GameObjects.Image(T,this.availableWidth/2,n-N,L),this.banner.setName("img-event-banner"),this.banner.setOrigin(.5,1),this.banner.setScale(this.event.scale??.18),S&&(this.eventTimerText=oE(this.banner.x,this.banner.y+2,this.timeToGo(this.event.endDate),XA.WINDOW),this.eventTimerText.setName("text-event-timer"),this.eventTimerText.setScale(.15),this.eventTimerText.setOrigin(.5,0),this.add(this.eventTimerText)),this.add(this.banner)}}show(){this.setVisible(!0),this.updateCountdown(),this.eventTimer=setInterval(()=>{this.updateCountdown()},1e3)}clear(){this.setVisible(!1),this.eventTimer&&clearInterval(this.eventTimer),this.eventTimer=null}timeToGo(e){function I(o){return(o<10?"0":"")+o}r(I,"z");const L=new Date;let N=Math.abs(e.getTime()-L.getTime());N=Math.abs(N);const S=N/864e5|0,n=N%864e5/36e5|0,i=N%36e5/6e4|0,C=Math.round(N%6e4/1e3);return _.t("menu:eventTimer",{days:I(S),hours:I(n),mins:I(i),secs:I(C)})}updateCountdown(){this.event&&this.event.eventType!==1&&this.eventTimerText.setText(this.timeToGo(this.event.endDate))}};r(ru,"TimedEventDisplay");let Jm=ru;const pe=new tG,iu=class iu{constructor(e,I){this.weatherType=e,this.turnsLeft=this.isImmutable()?0:I||0}lapse(){return this.isImmutable()?!0:this.turnsLeft?!!--this.turnsLeft:!0}isImmutable(){switch(this.weatherType){case Z.HEAVY_RAIN:case Z.HARSH_SUN:case Z.STRONG_WINDS:return!0}return!1}isDamaging(){switch(this.weatherType){case Z.SANDSTORM:case Z.HAIL:return!0}return!1}isTypeDamageImmune(e){switch(this.weatherType){case Z.SANDSTORM:return e===t.GROUND||e===t.ROCK||e===t.STEEL;case Z.HAIL:return e===t.ICE}return!1}getAttackTypeMultiplier(e){switch(this.weatherType){case Z.SUNNY:case Z.HARSH_SUN:if(e===t.FIRE)return 1.5;if(e===t.WATER)return .5;break;case Z.RAIN:case Z.HEAVY_RAIN:if(e===t.FIRE)return .5;if(e===t.WATER)return 1.5;break}return 1}isMoveWeatherCancelled(e,I){const L=e.getMoveType(I);switch(this.weatherType){case Z.HARSH_SUN:return I.is("AttackMove")&&L===t.WATER;case Z.HEAVY_RAIN:return I.is("AttackMove")&&L===t.FIRE}return!1}isEffectSuppressed(){const e=T.getField(!0);for(const I of e){let L=I.getAbility().getAttrs("SuppressWeatherEffectAbAttr")[0];if(L||(L=I.hasPassive()?I.getPassiveAbility().getAttrs("SuppressWeatherEffectAbAttr")[0]:null),L&&(!this.isImmutable()||L.affectsImmutable))return!0}return!1}};r(iu,"Weather");let nC=iu;function $m(R){switch(R){case Z.SUNNY:return _.t("weather:sunnyStartMessage");case Z.RAIN:return _.t("weather:rainStartMessage");case Z.SANDSTORM:return _.t("weather:sandstormStartMessage");case Z.HAIL:return _.t("weather:hailStartMessage");case Z.SNOW:return _.t("weather:snowStartMessage");case Z.FOG:return _.t("weather:fogStartMessage");case Z.HEAVY_RAIN:return _.t("weather:heavyRainStartMessage");case Z.HARSH_SUN:return _.t("weather:harshSunStartMessage");case Z.STRONG_WINDS:return _.t("weather:strongWindsStartMessage")}return null}r($m,"getWeatherStartMessage");function B7(R){switch(R){case Z.SUNNY:return _.t("weather:sunnyLapseMessage");case Z.RAIN:return _.t("weather:rainLapseMessage");case Z.SANDSTORM:return _.t("weather:sandstormLapseMessage");case Z.HAIL:return _.t("weather:hailLapseMessage");case Z.SNOW:return _.t("weather:snowLapseMessage");case Z.FOG:return _.t("weather:fogLapseMessage");case Z.HEAVY_RAIN:return _.t("weather:heavyRainLapseMessage");case Z.HARSH_SUN:return _.t("weather:harshSunLapseMessage");case Z.STRONG_WINDS:return _.t("weather:strongWindsLapseMessage")}return null}r(B7,"getWeatherLapseMessage");function K7(R,e){switch(R){case Z.SANDSTORM:return _.t("weather:sandstormDamageMessage",{pokemonNameWithAffix:Q(e)});case Z.HAIL:return _.t("weather:hailDamageMessage",{pokemonNameWithAffix:Q(e)})}return null}r(K7,"getWeatherDamageMessage");function RV(R){switch(R){case Z.SUNNY:return _.t("weather:sunnyClearMessage");case Z.RAIN:return _.t("weather:rainClearMessage");case Z.SANDSTORM:return _.t("weather:sandstormClearMessage");case Z.HAIL:return _.t("weather:hailClearMessage");case Z.SNOW:return _.t("weather:snowClearMessage");case Z.FOG:return _.t("weather:fogClearMessage");case Z.HEAVY_RAIN:return _.t("weather:heavyRainClearMessage");case Z.HARSH_SUN:return _.t("weather:harshSunClearMessage");case Z.STRONG_WINDS:return _.t("weather:strongWindsClearMessage")}return null}r(RV,"getWeatherClearMessage");function OV(R){switch(R){case Z.HARSH_SUN:return _.t("weather:harshSunContinueMessage");case Z.HEAVY_RAIN:return _.t("weather:heavyRainContinueMessage");case Z.STRONG_WINDS:return _.t("weather:strongWindsContinueMessage")}return null}r(OV,"getLegendaryWeatherContinuesMessage");function IV(R){switch(R){case Z.HARSH_SUN:return _.t("weather:harshSunEffectMessage");case Z.HEAVY_RAIN:return _.t("weather:heavyRainEffectMessage")}return _.t("weather:defaultEffectMessage")}r(IV,"getWeatherBlockMessage");function tV(R){switch(R){case bA.MISTY:return _.t("terrain:mistyStartMessage");case bA.ELECTRIC:return _.t("terrain:electricStartMessage");case bA.GRASSY:return _.t("terrain:grassyStartMessage");case bA.PSYCHIC:return _.t("terrain:psychicStartMessage");default:return console.warn("getTerrainStartMessage not defined. Using default null"),null}}r(tV,"getTerrainStartMessage");function LV(R){switch(R){case bA.MISTY:return _.t("terrain:mistyClearMessage");case bA.ELECTRIC:return _.t("terrain:electricClearMessage");case bA.GRASSY:return _.t("terrain:grassyClearMessage");case bA.PSYCHIC:return _.t("terrain:psychicClearMessage");default:return console.warn("getTerrainClearMessage not defined. Using default null"),null}}r(LV,"getTerrainClearMessage");function NV(R,e){return e===bA.MISTY?_.t("terrain:mistyBlockMessage",{pokemonNameWithAffix:Q(R)}):_.t("terrain:defaultBlockMessage",{pokemonNameWithAffix:Q(R),terrainName:EV(e)})}r(NV,"getTerrainBlockMessage");function f7(R){var L;let e=[];const I=R.getTimeOfDay()<2;switch(R.biomeType){case s.GRASS:e=[{weatherType:Z.NONE,weight:7}],I&&e.push({weatherType:Z.SUNNY,weight:3});break;case s.TALL_GRASS:e=[{weatherType:Z.NONE,weight:8},{weatherType:Z.RAIN,weight:5}],I&&e.push({weatherType:Z.SUNNY,weight:8});break;case s.FOREST:e=[{weatherType:Z.NONE,weight:8},{weatherType:Z.RAIN,weight:5}];break;case s.SEA:e=[{weatherType:Z.NONE,weight:3},{weatherType:Z.RAIN,weight:12}];break;case s.SWAMP:e=[{weatherType:Z.NONE,weight:3},{weatherType:Z.RAIN,weight:4},{weatherType:Z.FOG,weight:1}];break;case s.BEACH:e=[{weatherType:Z.NONE,weight:8},{weatherType:Z.RAIN,weight:3}],I&&e.push({weatherType:Z.SUNNY,weight:5});break;case s.LAKE:e=[{weatherType:Z.NONE,weight:10},{weatherType:Z.RAIN,weight:5},{weatherType:Z.FOG,weight:1}];break;case s.SEABED:e=[{weatherType:Z.RAIN,weight:1}];break;case s.BADLANDS:e=[{weatherType:Z.NONE,weight:8},{weatherType:Z.SANDSTORM,weight:2}],I&&e.push({weatherType:Z.SUNNY,weight:5});break;case s.DESERT:e=[{weatherType:Z.SANDSTORM,weight:2}],I&&e.push({weatherType:Z.SUNNY,weight:2});break;case s.ICE_CAVE:e=[{weatherType:Z.NONE,weight:3},{weatherType:Z.SNOW,weight:4},{weatherType:Z.HAIL,weight:1}];break;case s.MEADOW:e=[{weatherType:Z.NONE,weight:2}],I&&e.push({weatherType:Z.SUNNY,weight:2});break;case s.VOLCANO:e=[{weatherType:I?Z.SUNNY:Z.NONE,weight:1}];break;case s.GRAVEYARD:e=[{weatherType:Z.NONE,weight:3},{weatherType:Z.FOG,weight:1}];break;case s.JUNGLE:e=[{weatherType:Z.NONE,weight:8},{weatherType:Z.RAIN,weight:2}];break;case s.SNOWY_FOREST:e=[{weatherType:Z.SNOW,weight:7},{weatherType:Z.HAIL,weight:1}];break;case s.ISLAND:e=[{weatherType:Z.NONE,weight:5},{weatherType:Z.RAIN,weight:1}],I&&e.push({weatherType:Z.SUNNY,weight:2});break}if(R.biomeType===s.TOWN&&pe.isEventActive()&&((L=pe.getWeather())==null||L.map(N=>e.push(N))),e.length>1){let N=0;for(const i of e)N+=i.weight;const S=DA(N);let n=0;for(const i of e)if(n+=i.weight,S<n)return i.weatherType}return e.length?e[0].weatherType:Z.NONE}r(f7,"getRandomWeatherType");var kE=(R=>(R[R.USER=0]="USER",R[R.TARGET=1]="TARGET",R[R.GRAPHIC=2]="GRAPHIC",R))(kE||{}),AL=(R=>(R[R.TARGET=1]="TARGET",R[R.USER=2]="USER",R[R.USER_TARGET=3]="USER_TARGET",R[R.SCREEN=4]="SCREEN",R))(AL||{}),ot=(R=>(R[R.NORMAL=0]="NORMAL",R[R.ADD=1]="ADD",R[R.SUBTRACT=2]="SUBTRACT",R))(ot||{}),et=(R=>(R[R.FLY_CHARGING=1e3]="FLY_CHARGING",R[R.BOUNCE_CHARGING=1001]="BOUNCE_CHARGING",R[R.DIG_CHARGING=1002]="DIG_CHARGING",R[R.FUTURE_SIGHT_CHARGING=1003]="FUTURE_SIGHT_CHARGING",R[R.DIVE_CHARGING=1004]="DIVE_CHARGING",R[R.SOLAR_BEAM_CHARGING=1005]="SOLAR_BEAM_CHARGING",R[R.SHADOW_FORCE_CHARGING=1006]="SHADOW_FORCE_CHARGING",R[R.SKULL_BASH_CHARGING=1007]="SKULL_BASH_CHARGING",R[R.FREEZE_SHOCK_CHARGING=1008]="FREEZE_SHOCK_CHARGING",R[R.SKY_DROP_CHARGING=1009]="SKY_DROP_CHARGING",R[R.SKY_ATTACK_CHARGING=1010]="SKY_ATTACK_CHARGING",R[R.ICE_BURN_CHARGING=1011]="ICE_BURN_CHARGING",R[R.DOOM_DESIRE_CHARGING=1012]="DOOM_DESIRE_CHARGING",R[R.RAZOR_WIND_CHARGING=1013]="RAZOR_WIND_CHARGING",R[R.PHANTOM_FORCE_CHARGING=1014]="PHANTOM_FORCE_CHARGING",R[R.GEOMANCY_CHARGING=1015]="GEOMANCY_CHARGING",R[R.SHADOW_BLADE_CHARGING=1016]="SHADOW_BLADE_CHARGING",R[R.SOLAR_BLADE_CHARGING=1017]="SOLAR_BLADE_CHARGING",R[R.BEAK_BLAST_CHARGING=1018]="BEAK_BLAST_CHARGING",R[R.METEOR_BEAM_CHARGING=1019]="METEOR_BEAM_CHARGING",R[R.ELECTRO_SHOT_CHARGING=1020]="ELECTRO_SHOT_CHARGING",R))(et||{}),jE=(R=>(R[R.USE_ITEM=2e3]="USE_ITEM",R[R.HEALTH_UP=2001]="HEALTH_UP",R[R.TERASTALLIZE=2002]="TERASTALLIZE",R[R.POISON=2010]="POISON",R[R.TOXIC=2011]="TOXIC",R[R.PARALYSIS=2012]="PARALYSIS",R[R.SLEEP=2013]="SLEEP",R[R.FROZEN=2014]="FROZEN",R[R.BURN=2015]="BURN",R[R.CONFUSION=2016]="CONFUSION",R[R.ATTRACT=2017]="ATTRACT",R[R.BIND=2018]="BIND",R[R.WRAP=2019]="WRAP",R[R.CURSE_NO_GHOST=2020]="CURSE_NO_GHOST",R[R.LEECH_SEED=2021]="LEECH_SEED",R[R.FIRE_SPIN=2022]="FIRE_SPIN",R[R.PROTECT=2023]="PROTECT",R[R.COVET=2024]="COVET",R[R.WHIRLPOOL=2025]="WHIRLPOOL",R[R.BIDE=2026]="BIDE",R[R.SAND_TOMB=2027]="SAND_TOMB",R[R.QUICK_GUARD=2028]="QUICK_GUARD",R[R.WIDE_GUARD=2029]="WIDE_GUARD",R[R.CURSE=2030]="CURSE",R[R.MAGMA_STORM=2031]="MAGMA_STORM",R[R.CLAMP=2032]="CLAMP",R[R.SNAP_TRAP=2033]="SNAP_TRAP",R[R.THUNDER_CAGE=2034]="THUNDER_CAGE",R[R.INFESTATION=2035]="INFESTATION",R[R.ORDER_UP_CURLY=2036]="ORDER_UP_CURLY",R[R.ORDER_UP_DROOPY=2037]="ORDER_UP_DROOPY",R[R.ORDER_UP_STRETCHY=2038]="ORDER_UP_STRETCHY",R[R.RAGING_BULL_FIRE=2039]="RAGING_BULL_FIRE",R[R.RAGING_BULL_WATER=2040]="RAGING_BULL_WATER",R[R.SALT_CURE=2041]="SALT_CURE",R[R.POWDER=2042]="POWDER",R[R.SUNNY=2100]="SUNNY",R[R.RAIN=2101]="RAIN",R[R.SANDSTORM=2102]="SANDSTORM",R[R.HAIL=2103]="HAIL",R[R.SNOW=2104]="SNOW",R[R.WIND=2105]="WIND",R[R.HEAVY_RAIN=2106]="HEAVY_RAIN",R[R.HARSH_SUN=2107]="HARSH_SUN",R[R.STRONG_WINDS=2108]="STRONG_WINDS",R[R.MISTY_TERRAIN=2110]="MISTY_TERRAIN",R[R.ELECTRIC_TERRAIN=2111]="ELECTRIC_TERRAIN",R[R.GRASSY_TERRAIN=2112]="GRASSY_TERRAIN",R[R.PSYCHIC_TERRAIN=2113]="PSYCHIC_TERRAIN",R[R.LOCK_ON=2120]="LOCK_ON",R))(jE||{}),AA=(R=>(R[R.USER=0]="USER",R[R.OTHER=1]="OTHER",R[R.ALL_OTHERS=2]="ALL_OTHERS",R[R.NEAR_OTHER=3]="NEAR_OTHER",R[R.ALL_NEAR_OTHERS=4]="ALL_NEAR_OTHERS",R[R.NEAR_ENEMY=5]="NEAR_ENEMY",R[R.ALL_NEAR_ENEMIES=6]="ALL_NEAR_ENEMIES",R[R.RANDOM_NEAR_ENEMY=7]="RANDOM_NEAR_ENEMY",R[R.ALL_ENEMIES=8]="ALL_ENEMIES",R[R.ATTACKER=9]="ATTACKER",R[R.NEAR_ALLY=10]="NEAR_ALLY",R[R.ALLY=11]="ALLY",R[R.USER_OR_NEAR_ALLY=12]="USER_OR_NEAR_ALLY",R[R.USER_AND_ALLIES=13]="USER_AND_ALLIES",R[R.ALL=14]="ALL",R[R.USER_SIDE=15]="USER_SIDE",R[R.ENEMY_SIDE=16]="ENEMY_SIDE",R[R.BOTH_SIDES=17]="BOTH_SIDES",R[R.PARTY=18]="PARTY",R[R.CURSE=19]="CURSE",R))(AA||{}),G=(R=>(R[R.PHYSICAL=0]="PHYSICAL",R[R.SPECIAL=1]="SPECIAL",R[R.STATUS=2]="STATUS",R))(G||{}),_E=(R=>(R[R.EFFECTIVE=1]="EFFECTIVE",R[R.SUPER_EFFECTIVE=2]="SUPER_EFFECTIVE",R[R.NOT_VERY_EFFECTIVE=3]="NOT_VERY_EFFECTIVE",R[R.ONE_HIT_KO=4]="ONE_HIT_KO",R[R.NO_EFFECT=5]="NO_EFFECT",R[R.STATUS=6]="STATUS",R[R.HEAL=7]="HEAL",R[R.FAIL=8]="FAIL",R[R.MISS=9]="MISS",R[R.INDIRECT=10]="INDIRECT",R[R.IMMUNE=11]="IMMUNE",R[R.CONFUSION=12]="CONFUSION",R[R.INDIRECT_KO=13]="INDIRECT_KO",R))(_E||{}),J=(R=>(R[R.NONE=0]="NONE",R[R.POISON=1]="POISON",R[R.TOXIC=2]="TOXIC",R[R.PARALYSIS=3]="PARALYSIS",R[R.SLEEP=4]="SLEEP",R[R.FREEZE=5]="FREEZE",R[R.BURN=6]="BURN",R[R.FAINT=7]="FAINT",R))(J||{});function Aa(R,e,I,L,N,S,n=!1,i=!1,C=[]){if(!(R!=null&&R.canApplyAbility(e))||e&&R.getPassiveAbility().id===R.getAbility().id)return;const o=e?R.getPassiveAbility():R.getAbility();if(!(n&&o.getAttrs(I).some(l=>{l.is("PostSummonAbAttr")&&l.shouldActivateOnGain()})))for(const l of o.getAttrs(I)){const H=l.getCondition();let P=!1;if(H&&!H(R)||!N(l,e))continue;T.phaseManager.setPhaseQueueSplice(),l.showAbility&&!i&&(T.phaseManager.queueAbilityDisplay(R,e,!0),P=!0);const K=l.getTriggerMessage(R,o.name,S);K&&(i||T.phaseManager.queueMessage(K),C.push(K)),L(l,e),P&&T.phaseManager.queueAbilityDisplay(R,e,!1),i||R.waveData.abilitiesApplied.add(o.id),T.phaseManager.clearPhaseQueueSplice()}}r(Aa,"applySingleAbAttrs");function Ie(R,e,I,L,N,S=!1,n=[],i=!1){for(const C of[!1,!0])e&&(Aa(e,C,R,I,L,N,i,S,n),T.phaseManager.clearPhaseQueueSplice())}r(Ie,"applyAbAttrsInternal");function SE(R,e,I,L=!1,...N){Ie(R,e,(S,n)=>S.apply(e,n,L,I,N),(S,n)=>S.canApply(e,n,L,N),N,L)}r(SE,"applyAbAttrs");function SV(R,e,I=!1,...L){Ie(R,e,(N,S)=>N.applyPostBattleInit(e,S,I,L),(N,S)=>N.canApplyPostBattleInit(e,S,I,L),L,I)}r(SV,"applyPostBattleInitAbAttrs");function ZI(R,e,I,L,N,S=!1,...n){Ie(R,e,(i,C)=>i.applyPreDefend(e,C,S,I,L,N,n),(i,C)=>i.canApplyPreDefend(e,C,S,I,L,N,n),n,S)}r(ZI,"applyPreDefendAbAttrs");function F7(R,e,I,L,N,S=!1,...n){Ie(R,e,(i,C)=>i.applyPostDefend(e,C,S,I,L,N,n),(i,C)=>i.canApplyPostDefend(e,C,S,I,L,N,n),n,S)}r(F7,"applyPostDefendAbAttrs");function TV(R,e,I,L,N,S=!1,...n){Ie(R,e,(i,C)=>i.applyPostMoveUsed(e,I,L,N,S,n),(i,C)=>i.canApplyPostMoveUsed(e,I,L,N,S,n),n,S)}r(TV,"applyPostMoveUsedAbAttrs");function n_(R,e,I,L,N=!1,...S){Ie(R,e,(n,i)=>n.applyStatStage(e,i,N,I,L,S),(n,i)=>n.canApplyStatStage(e,i,N,I,L,S),S)}r(n_,"applyStatMultiplierAbAttrs");function r_(R,e,I,L,N=!1,S,n,...i){Ie(R,e,(C,o)=>C.applyAllyStat(e,o,N,I,L,S,n,i),(C,o)=>C.canApplyAllyStat(e,o,N,I,L,S,n,i),i,N)}r(r_,"applyAllyStatMultiplierAbAttrs");function Y7(R,e,I,L,N=!1,...S){Ie(R,e,(n,i)=>n.applyPostSetStatus(e,L,i,I,N,S),(n,i)=>n.canApplyPostSetStatus(e,L,i,I,N,S),S,N)}r(Y7,"applyPostSetStatusAbAttrs");function sV(R,e,I,L,N=!1,S,n){Ie(R,e,(i,C)=>i.applyPostDamage(e,I,C,N,S,n),(i,C)=>i.canApplyPostDamage(e,I,C,N,S,n),S)}r(sV,"applyPostDamageAbAttrs");function aV(R,e,I,L,N,S,n=!1,...i){Ie(R,e,(C,o)=>C.applyFieldStat(e,o,n,I,L,N,S,i),(C,o)=>C.canApplyFieldStat(e,o,n,I,L,N,S,i),i)}r(aV,"applyFieldStatMultiplierAbAttrs");function hI(R,e,I,L,N=!1,...S){Ie(R,e,(n,i)=>n.applyPreAttack(e,i,N,I,L,S),(n,i)=>n.canApplyPreAttack(e,i,N,I,L,S),S,N)}r(hI,"applyPreAttackAbAttrs");function W7(R,e,I=!1,...L){Ie(R,e,N=>N.applyExecutedMove(e,I),N=>N.canApplyExecutedMove(e,I),L,I)}r(W7,"applyExecutedMoveAbAttrs");function nV(R,e,I,L,N,S=!1,...n){Ie(R,e,(i,C)=>i.applyPostAttack(e,C,S,I,L,N,n),(i,C)=>i.canApplyPostAttack(e,C,S,I,L,N,n),n,S)}r(nV,"applyPostAttackAbAttrs");function h7(R,e,I,L=!1,...N){Ie(R,e,(S,n)=>S.applyPostKnockOut(e,n,L,I,N),(S,n)=>S.canApplyPostKnockOut(e,n,L,I,N),N,L)}r(h7,"applyPostKnockOutAbAttrs");function d7(R,e,I=!1,...L){Ie(R,e,(N,S)=>N.applyPostVictory(e,S,I,L),(N,S)=>N.canApplyPostVictory(e,S,I,L),L,I)}r(d7,"applyPostVictoryAbAttrs");function rV(R,e,I=!1,L=!1,...N){Aa(e,I,R,(S,n)=>S.applyPostSummon(e,n,L,N),(S,n)=>S.canApplyPostSummon(e,n,L,N),N,!1,L)}r(rV,"applyPostSummonAbAttrs");function p7(R,e,...I){Ie(R,e,(L,N)=>L.applyPreSummon(e,N,I),(L,N)=>L.canApplyPreSummon(e,N,I),I)}r(p7,"applyPreSummonAbAttrs");function g7(R,e,I=!1,...L){Ie(R,e,(N,S)=>N.applyPreSwitchOut(e,S,I,L),(N,S)=>N.canApplyPreSwitchOut(e,S,I,L),L,I)}r(g7,"applyPreSwitchOutAbAttrs");function iV(R,e,I=!1,...L){Ie(R,e,(N,S)=>N.applyPreLeaveField(e,S,I,L),(N,S)=>N.canApplyPreLeaveField(e,S,I,L),L,I)}r(iV,"applyPreLeaveFieldAbAttrs");function m7(R,e,I,L,N=!1,...S){Ie(R,e,(n,i)=>n.applyPreStatStageChange(e,i,N,I,L,S),(n,i)=>n.canApplyPreStatStageChange(e,i,N,I,L,S),S,N)}r(m7,"applyPreStatStageChangeAbAttrs");function y7(R,e,I,L,N,S=!1,...n){Ie(R,e,(i,C)=>i.applyPostStatStageChange(e,S,I,L,N,n),(i,C)=>i.canApplyPostStatStageChange(e,S,I,L,N,n),n,S)}r(y7,"applyPostStatStageChangeAbAttrs");function qm(R,e,I,L,N=!1,...S){Ie(R,e,(n,i)=>n.applyPreSetStatus(e,i,N,I,L,S),(n,i)=>n.canApplyPreSetStatus(e,i,N,I,L,S),S,N)}r(qm,"applyPreSetStatusAbAttrs");function qr(R,e,I,L,N=!1,...S){Ie(R,e,(n,i)=>n.applyPreApplyBattlerTag(e,i,N,I,L,S),(n,i)=>n.canApplyPreApplyBattlerTag(e,i,N,I,L,S),S,N)}r(qr,"applyPreApplyBattlerTagAbAttrs");function V7(R,e,I,L,N=!1,...S){Ie(R,e,(n,i)=>n.applyPreWeatherEffect(e,i,N,I,L,S),(n,i)=>n.canApplyPreWeatherEffect(e,i,N,I,L,S),S,N)}r(V7,"applyPreWeatherEffectAbAttrs");function w7(R,e,I=!1,...L){Ie(R,e,(N,S)=>N.applyPostTurn(e,S,I,L),(N,S)=>N.canApplyPostTurn(e,S,I,L),L,I)}r(w7,"applyPostTurnAbAttrs");function CV(R,e,I,L=!1,...N){Ie(R,e,(S,n)=>S.applyPostWeatherChange(e,n,L,I,N),(S,n)=>S.canApplyPostWeatherChange(e,n,L,I,N),N,L)}r(CV,"applyPostWeatherChangeAbAttrs");function v7(R,e,I,L=!1,...N){Ie(R,e,(S,n)=>S.applyPostWeatherLapse(e,n,L,I,N),(S,n)=>S.canApplyPostWeatherLapse(e,n,L,I,N),N,L)}r(v7,"applyPostWeatherLapseAbAttrs");function UV(R,e,I,L=!1,...N){Ie(R,e,(S,n)=>S.applyPostTerrainChange(e,n,L,I,N),(S,n)=>S.canApplyPostTerrainChange(e,n,L,I,N),N,L)}r(UV,"applyPostTerrainChangeAbAttrs");function oV(R,e,I,L,N,S=!1,...n){Ie(R,e,(i,C)=>i.applyCheckTrapped(e,C,S,I,L,n),(i,C)=>i.canApplyCheckTrapped(e,C,S,I,L,n),n,S,N)}r(oV,"applyCheckTrappedAbAttrs");function x7(R,e,I=!1,...L){Ie(R,e,(N,S)=>N.applyPostBattle(e,S,I,L),(N,S)=>N.canApplyPostBattle(e,S,I,L),L,I)}r(x7,"applyPostBattleAbAttrs");function Z7(R,e,I,L,N,S=!1,...n){Ie(R,e,(i,C)=>i.applyPostFaint(e,C,S,I,L,N,n),(i,C)=>i.canApplyPostFaint(e,C,S,I,L,N,n),n,S)}r(Z7,"applyPostFaintAbAttrs");function e_(R,e,I=!1,...L){Ie(R,e,(N,S)=>N.applyPostItemLost(e,I,L),(N,S)=>N.canApplyPostItemLost(e,I,L),L)}r(e_,"applyPostItemLostAbAttrs");function LG(R,e=!1,I=!1,...L){Aa(R,e,"PostSummonAbAttr",(N,S)=>N.applyPostSummon(R,S,I,L),(N,S)=>N.canApplyPostSummon(R,S,I,L),L,!0,I)}r(LG,"applyOnGainAbAttrs");function NG(R,e=!1,I=!1,...L){Aa(R,e,"PreLeaveFieldAbAttr",(N,S)=>N.applyPreLeaveField(R,S,I,[...L,!0]),(N,S)=>N.canApplyPreLeaveField(R,S,I,[...L,!0]),L,!0,I),Aa(R,e,"IllusionBreakAbAttr",(N,S)=>N.apply(R,S,I,null,L),(N,S)=>N.canApply(R,S,I,L),L,!0,I)}r(NG,"applyOnLoseAbAttrs");var c=(R=>(R[R.HP=0]="HP",R[R.ATK=1]="ATK",R[R.DEF=2]="DEF",R[R.SPATK=3]="SPATK",R[R.SPDEF=4]="SPDEF",R[R.SPD=5]="SPD",R[R.ACC=6]="ACC",R[R.EVA=7]="EVA",R))(c||{});const BT=[0,1,2,3,4,5],dL=[1,2,3,4,5],MI=[1,2,3,4,5,6,7],R3=[1,2,3,4,5,6];function b7(R,e){return R===1?e?"battle:statRose":"battle:statFell":R===2?e?"battle:statSharplyRose":"battle:statHarshlyFell":R>2&&R<=6?e?"battle:statRoseDrastically":"battle:statSeverelyFell":e?"battle:statWontGoAnyHigher":"battle:statWontGoAnyLower"}r(b7,"getStatStageChangeDescriptionKey");function aR(R){return`pokemonInfo:Stat.${c[R]}`}r(aR,"getStatKey");function GN(R){return`pokemonInfo:Stat.${c[R]}shortened`}r(GN,"getShortenedStatKey");var JA=(R=>(R[R.NONE=0]="NONE",R[R.MAKES_CONTACT=1]="MAKES_CONTACT",R[R.IGNORE_PROTECT=2]="IGNORE_PROTECT",R[R.SOUND_BASED=4]="SOUND_BASED",R[R.HIDE_USER=8]="HIDE_USER",R[R.HIDE_TARGET=16]="HIDE_TARGET",R[R.BITING_MOVE=32]="BITING_MOVE",R[R.PULSE_MOVE=64]="PULSE_MOVE",R[R.PUNCHING_MOVE=128]="PUNCHING_MOVE",R[R.SLICING_MOVE=256]="SLICING_MOVE",R[R.RECKLESS_MOVE=512]="RECKLESS_MOVE",R[R.BALLBOMB_MOVE=1024]="BALLBOMB_MOVE",R[R.POWDER_MOVE=2048]="POWDER_MOVE",R[R.DANCE_MOVE=4096]="DANCE_MOVE",R[R.WIND_MOVE=8192]="WIND_MOVE",R[R.TRIAGE_MOVE=16384]="TRIAGE_MOVE",R[R.IGNORE_ABILITIES=32768]="IGNORE_ABILITIES",R[R.CHECK_ALL_HITS=65536]="CHECK_ALL_HITS",R[R.IGNORE_SUBSTITUTE=131072]="IGNORE_SUBSTITUTE",R[R.REDIRECT_COUNTER=262144]="REDIRECT_COUNTER",R[R.REFLECTABLE=524288]="REFLECTABLE",R))(JA||{});const MV={},Cu=class Cu{constructor(){this.SEED_OVERRIDE="",this.DAILY_RUN_SEED_OVERRIDE=null,this.WEATHER_OVERRIDE=Z.NONE,this.BATTLE_STYLE_OVERRIDE=null,this.STARTING_WAVE_OVERRIDE=0,this.STARTING_BIOME_OVERRIDE=null,this.ARENA_TINT_OVERRIDE=null,this.XP_MULTIPLIER_OVERRIDE=null,this.LEVEL_CAP_OVERRIDE=0,this.NEVER_CRIT_OVERRIDE=!1,this.STARTING_MONEY_OVERRIDE=0,this.WAIVE_SHOP_FEES_OVERRIDE=!1,this.WAIVE_ROLL_FEE_OVERRIDE=!1,this.FREE_CANDY_UPGRADE_OVERRIDE=!1,this.POKEBALL_OVERRIDE={active:!1,pokeballs:{[MA.POKEBALL]:5,[MA.GREAT_BALL]:0,[MA.ULTRA_BALL]:0,[MA.ROGUE_BALL]:0,[MA.MASTER_BALL]:0}},this.ITEM_UNLOCK_OVERRIDE=[],this.BYPASS_TUTORIAL_SKIP_OVERRIDE=!1,this.ACHIEVEMENTS_REUNLOCK_OVERRIDE=!1,this.STATUS_ACTIVATION_OVERRIDE=null,this.CONFUSION_ACTIVATION_OVERRIDE=null,this.STARTER_FORM_OVERRIDES={},this.STARTING_LEVEL_OVERRIDE=0,this.STARTER_SPECIES_OVERRIDE=0,this.STARTER_FUSION_OVERRIDE=!1,this.STARTER_FUSION_SPECIES_OVERRIDE=0,this.ABILITY_OVERRIDE=O.NONE,this.PASSIVE_ABILITY_OVERRIDE=O.NONE,this.HAS_PASSIVE_ABILITY_OVERRIDE=null,this.STATUS_OVERRIDE=J.NONE,this.GENDER_OVERRIDE=null,this.MOVESET_OVERRIDE=[],this.SHINY_OVERRIDE=null,this.VARIANT_OVERRIDE=null,this.OPP_SPECIES_OVERRIDE=0,this.OPP_FUSION_OVERRIDE=!1,this.OPP_FUSION_SPECIES_OVERRIDE=0,this.OPP_LEVEL_OVERRIDE=0,this.OPP_ABILITY_OVERRIDE=O.NONE,this.OPP_PASSIVE_ABILITY_OVERRIDE=O.NONE,this.OPP_HAS_PASSIVE_ABILITY_OVERRIDE=null,this.OPP_STATUS_OVERRIDE=J.NONE,this.OPP_GENDER_OVERRIDE=null,this.OPP_MOVESET_OVERRIDE=[],this.OPP_SHINY_OVERRIDE=null,this.OPP_VARIANT_OVERRIDE=null,this.OPP_IVS_OVERRIDE=[],this.OPP_FORM_OVERRIDES={},this.OPP_HEALTH_SEGMENTS_OVERRIDE=0,this.EGG_IMMEDIATE_HATCH_OVERRIDE=!1,this.EGG_TIER_OVERRIDE=null,this.EGG_SHINY_OVERRIDE=!1,this.EGG_VARIANT_OVERRIDE=null,this.EGG_FREE_GACHA_PULLS_OVERRIDE=!1,this.EGG_GACHA_PULL_COUNT_OVERRIDE=0,this.UNLIMITED_EGG_COUNT_OVERRIDE=!1,this.MYSTERY_ENCOUNTER_RATE_OVERRIDE=null,this.MYSTERY_ENCOUNTER_TIER_OVERRIDE=null,this.MYSTERY_ENCOUNTER_OVERRIDE=null,this.STARTING_MODIFIER_OVERRIDE=[],this.OPP_MODIFIER_OVERRIDE=[],this.STARTING_HELD_ITEMS_OVERRIDE=[],this.OPP_HELD_ITEMS_OVERRIDE=[],this.ITEM_REWARD_OVERRIDE=[],this.DISABLE_STANDARD_TRAINERS_OVERRIDE=!1,this.BATTLE_TYPE_OVERRIDE=null,this.RANDOM_TRAINER_OVERRIDE=null}};r(Cu,"DefaultOverrides");let SG=Cu;const DV=new SG,aE={...DV,...MV};function O3(R,e,I,L,N){L.attrs.filter(S=>R(S)).forEach(S=>S.apply(e,I,L,N))}r(O3,"applyMoveAttrsInternal");function lV(R,e,I,L,N){L.chargeAttrs.filter(S=>R(S)).forEach(S=>S.apply(e,I,L,N))}r(lV,"applyMoveChargeAttrsInternal");function Ce(R,e,I,L,...N){O3(S=>S.is(R),e,I,L,N)}r(Ce,"applyMoveAttrs");function k7(R,e,I,L,...N){O3(R,e,I,L,N)}r(k7,"applyFilteredMoveAttrs");function X7(R,e,I,L,...N){lV(S=>S.is(R),e,I,L,N)}r(X7,"applyMoveChargeAttrs");var aA=(R=>(R[R.NONE=0]="NONE",R[R.ABOMASITE=1]="ABOMASITE",R[R.ABSOLITE=2]="ABSOLITE",R[R.AERODACTYLITE=3]="AERODACTYLITE",R[R.AGGRONITE=4]="AGGRONITE",R[R.ALAKAZITE=5]="ALAKAZITE",R[R.ALTARIANITE=6]="ALTARIANITE",R[R.AMPHAROSITE=7]="AMPHAROSITE",R[R.AUDINITE=8]="AUDINITE",R[R.BANETTITE=9]="BANETTITE",R[R.BEEDRILLITE=10]="BEEDRILLITE",R[R.BLASTOISINITE=11]="BLASTOISINITE",R[R.BLAZIKENITE=12]="BLAZIKENITE",R[R.CAMERUPTITE=13]="CAMERUPTITE",R[R.CHARIZARDITE_X=14]="CHARIZARDITE_X",R[R.CHARIZARDITE_Y=15]="CHARIZARDITE_Y",R[R.DIANCITE=16]="DIANCITE",R[R.GALLADITE=17]="GALLADITE",R[R.GARCHOMPITE=18]="GARCHOMPITE",R[R.GARDEVOIRITE=19]="GARDEVOIRITE",R[R.GENGARITE=20]="GENGARITE",R[R.GLALITITE=21]="GLALITITE",R[R.GYARADOSITE=22]="GYARADOSITE",R[R.HERACRONITE=23]="HERACRONITE",R[R.HOUNDOOMINITE=24]="HOUNDOOMINITE",R[R.KANGASKHANITE=25]="KANGASKHANITE",R[R.LATIASITE=26]="LATIASITE",R[R.LATIOSITE=27]="LATIOSITE",R[R.LOPUNNITE=28]="LOPUNNITE",R[R.LUCARIONITE=29]="LUCARIONITE",R[R.MANECTITE=30]="MANECTITE",R[R.MAWILITE=31]="MAWILITE",R[R.MEDICHAMITE=32]="MEDICHAMITE",R[R.METAGROSSITE=33]="METAGROSSITE",R[R.MEWTWONITE_X=34]="MEWTWONITE_X",R[R.MEWTWONITE_Y=35]="MEWTWONITE_Y",R[R.PIDGEOTITE=36]="PIDGEOTITE",R[R.PINSIRITE=37]="PINSIRITE",R[R.RAYQUAZITE=38]="RAYQUAZITE",R[R.SABLENITE=39]="SABLENITE",R[R.SALAMENCITE=40]="SALAMENCITE",R[R.SCEPTILITE=41]="SCEPTILITE",R[R.SCIZORITE=42]="SCIZORITE",R[R.SHARPEDONITE=43]="SHARPEDONITE",R[R.SLOWBRONITE=44]="SLOWBRONITE",R[R.STEELIXITE=45]="STEELIXITE",R[R.SWAMPERTITE=46]="SWAMPERTITE",R[R.TYRANITARITE=47]="TYRANITARITE",R[R.VENUSAURITE=48]="VENUSAURITE",R[R.BLUE_ORB=50]="BLUE_ORB",R[R.RED_ORB=51]="RED_ORB",R[R.ADAMANT_CRYSTAL=52]="ADAMANT_CRYSTAL",R[R.LUSTROUS_GLOBE=53]="LUSTROUS_GLOBE",R[R.GRISEOUS_CORE=54]="GRISEOUS_CORE",R[R.REVEAL_GLASS=55]="REVEAL_GLASS",R[R.MAX_MUSHROOMS=56]="MAX_MUSHROOMS",R[R.DARK_STONE=57]="DARK_STONE",R[R.LIGHT_STONE=58]="LIGHT_STONE",R[R.PRISON_BOTTLE=59]="PRISON_BOTTLE",R[R.RUSTED_SWORD=60]="RUSTED_SWORD",R[R.RUSTED_SHIELD=61]="RUSTED_SHIELD",R[R.ICY_REINS_OF_UNITY=62]="ICY_REINS_OF_UNITY",R[R.SHADOW_REINS_OF_UNITY=63]="SHADOW_REINS_OF_UNITY",R[R.ULTRANECROZIUM_Z=64]="ULTRANECROZIUM_Z",R[R.SHARP_METEORITE=100]="SHARP_METEORITE",R[R.HARD_METEORITE=101]="HARD_METEORITE",R[R.SMOOTH_METEORITE=102]="SMOOTH_METEORITE",R[R.GRACIDEA=103]="GRACIDEA",R[R.SHOCK_DRIVE=104]="SHOCK_DRIVE",R[R.BURN_DRIVE=105]="BURN_DRIVE",R[R.CHILL_DRIVE=106]="CHILL_DRIVE",R[R.DOUSE_DRIVE=107]="DOUSE_DRIVE",R[R.N_SOLARIZER=108]="N_SOLARIZER",R[R.N_LUNARIZER=109]="N_LUNARIZER",R[R.WELLSPRING_MASK=110]="WELLSPRING_MASK",R[R.HEARTHFLAME_MASK=111]="HEARTHFLAME_MASK",R[R.CORNERSTONE_MASK=112]="CORNERSTONE_MASK",R[R.FIST_PLATE=113]="FIST_PLATE",R[R.SKY_PLATE=114]="SKY_PLATE",R[R.TOXIC_PLATE=115]="TOXIC_PLATE",R[R.EARTH_PLATE=116]="EARTH_PLATE",R[R.STONE_PLATE=117]="STONE_PLATE",R[R.INSECT_PLATE=118]="INSECT_PLATE",R[R.SPOOKY_PLATE=119]="SPOOKY_PLATE",R[R.IRON_PLATE=120]="IRON_PLATE",R[R.FLAME_PLATE=121]="FLAME_PLATE",R[R.SPLASH_PLATE=122]="SPLASH_PLATE",R[R.MEADOW_PLATE=123]="MEADOW_PLATE",R[R.ZAP_PLATE=124]="ZAP_PLATE",R[R.MIND_PLATE=125]="MIND_PLATE",R[R.ICICLE_PLATE=126]="ICICLE_PLATE",R[R.DRACO_PLATE=127]="DRACO_PLATE",R[R.DREAD_PLATE=128]="DREAD_PLATE",R[R.PIXIE_PLATE=129]="PIXIE_PLATE",R[R.BLANK_PLATE=130]="BLANK_PLATE",R[R.LEGEND_PLATE=131]="LEGEND_PLATE",R[R.FIGHTING_MEMORY=132]="FIGHTING_MEMORY",R[R.FLYING_MEMORY=133]="FLYING_MEMORY",R[R.POISON_MEMORY=134]="POISON_MEMORY",R[R.GROUND_MEMORY=135]="GROUND_MEMORY",R[R.ROCK_MEMORY=136]="ROCK_MEMORY",R[R.BUG_MEMORY=137]="BUG_MEMORY",R[R.GHOST_MEMORY=138]="GHOST_MEMORY",R[R.STEEL_MEMORY=139]="STEEL_MEMORY",R[R.FIRE_MEMORY=140]="FIRE_MEMORY",R[R.WATER_MEMORY=141]="WATER_MEMORY",R[R.GRASS_MEMORY=142]="GRASS_MEMORY",R[R.ELECTRIC_MEMORY=143]="ELECTRIC_MEMORY",R[R.PSYCHIC_MEMORY=144]="PSYCHIC_MEMORY",R[R.ICE_MEMORY=145]="ICE_MEMORY",R[R.DRAGON_MEMORY=146]="DRAGON_MEMORY",R[R.DARK_MEMORY=147]="DARK_MEMORY",R[R.FAIRY_MEMORY=148]="FAIRY_MEMORY",R[R.NORMAL_MEMORY=149]="NORMAL_MEMORY",R))(aA||{});const Uu=class Uu{constructor(){this.description=""}canChange(e){return!0}hasTriggerType(e){return this instanceof e}};r(Uu,"SpeciesFormChangeTrigger");let OO=Uu;const ou=class ou extends OO{};r(ou,"SpeciesFormChangeManualTrigger");let TG=ou;const Mu=class Mu extends OO{constructor(){super(...arguments),this.description=_.t("pokemonEvolutions:Forms.ability")}};r(Mu,"SpeciesFormChangeAbilityTrigger");let DE=Mu;const Du=class Du{constructor(...e){this.description="",this.triggers=e,this.description=this.triggers.filter(I=>{var L;return((L=I==null?void 0:I.description)==null?void 0:L.length)>0}).map(I=>I.description).join(", ")}canChange(e){for(const I of this.triggers)if(!I.canChange(e))return!1;return!0}hasTriggerType(e){return!!this.triggers.find(I=>I.hasTriggerType(e))}};r(Du,"SpeciesFormChangeCompoundTrigger");let Ea=Du;const lu=class lu extends OO{constructor(e,I=!0){super(),this.item=e,this.active=I,this.description=this.active?_.t("pokemonEvolutions:Forms.item",{item:_.t(`modifierType:FormChangeItem.${aA[this.item]}`)}):_.t("pokemonEvolutions:Forms.deactivateItem",{item:_.t(`modifierType:FormChangeItem.${aA[this.item]}`)})}canChange(e){return!!T.findModifier(I=>{const L=I;return"formChangeItem"in L&&L.pokemonId===e.id&&L.formChangeItem===this.item&&L.active===this.active})}};r(lu,"SpeciesFormChangeItemTrigger");let rA=lu;const _u=class _u extends OO{constructor(...e){super(),this.timesOfDay=e,this.description=_.t("pokemonEvolutions:Forms.timeOfDay")}canChange(e){return this.timesOfDay.indexOf(T.arena.getTimeOfDay())>-1}};r(_u,"SpeciesFormChangeTimeOfDayTrigger");let zm=_u;const Gu=class Gu extends OO{constructor(e=!1){super(),this.active=e,this.description=this.active?_.t("pokemonEvolutions:Forms.enter"):_.t("pokemonEvolutions:Forms.leave")}canChange(e){return e.isActive(!0)===this.active}};r(Gu,"SpeciesFormChangeActiveTrigger");let UO=Gu;const Pu=class Pu extends OO{constructor(e,I=!1){super(),this.statusEffects=ue(e),this.invert=I}canChange(e){var I;return this.statusEffects.indexOf(((I=e.status)==null?void 0:I.effect)||J.NONE)>-1!==this.invert}};r(Pu,"SpeciesFormChangeStatusEffectTrigger");let jm=Pu;const Hu=class Hu extends OO{constructor(e,I=!0){super(),this.move=e,this.known=I;const L=E[this.move].split("_").filter(N=>N).map((N,S)=>S?`${N[0]}${N.slice(1).toLowerCase()}`:N.toLowerCase()).join("");this.description=I?_.t("pokemonEvolutions:Forms.moveLearned",{move:_.t(`move:${L}.name`)}):_.t("pokemonEvolutions:Forms.moveForgotten",{move:_.t(`move:${L}.name`)})}canChange(e){return!!e.moveset.filter(I=>I.moveId===this.move).length===this.known}};r(Hu,"SpeciesFormChangeMoveLearnedTrigger");let ea=Hu;const uu=class uu extends OO{constructor(e,I=!0){super(),this.movePredicate=typeof e=="function"?e:L=>L===e,this.used=I}};r(uu,"SpeciesFormChangeMoveTrigger");let rC=uu;const cu=class cu extends rC{constructor(){super(...arguments),this.description=_.t("pokemonEvolutions:Forms.preMove")}canChange(e){const I=T.currentBattle.turnCommands[e.getBattlerIndex()];return!!(I!=null&&I.move)&&this.movePredicate(I.move.move)===this.used}};r(cu,"SpeciesFormChangePreMoveTrigger");let Ra=cu;const Bu=class Bu extends rC{constructor(){super(...arguments),this.description=_.t("pokemonEvolutions:Forms.postMove")}canChange(e){return e.summonData&&!!e.getLastXMoves(1).filter(I=>this.movePredicate(I.move)).length===this.used}};r(Bu,"SpeciesFormChangePostMoveTrigger");let iC=Bu;const Ku=class Ku extends iC{canChange(e){return T.gameMode.hasChallenge(QA.SINGLE_TYPE)||e.hasAbility(O.SHEER_FORCE)?!1:super.canChange(e)}};r(Ku,"MeloettaFormChangePostMoveTrigger");let CC=Ku;const fu=class fu extends OO{constructor(e){super(),this.formKey=e,this.description=""}canChange(e){return this.formKey===e.species.forms[T.getSpeciesFormIndex(e.species,e.gender,e.getNature(),!0)].formKey}};r(fu,"SpeciesDefaultFormMatchTrigger");let UC=fu;const Fu=class Fu extends OO{};r(Fu,"SpeciesFormChangeTeraTrigger");let EL=Fu;const Yu=class Yu extends OO{};r(Yu,"SpeciesFormChangeLapseTeraTrigger");let _t=Yu;const Wu=class Wu extends OO{constructor(e,I){super(),this.ability=e,this.weathers=I,this.description=_.t("pokemonEvolutions:Forms.weather")}canChange(e){var S,n;const I=((S=T.arena.weather)==null?void 0:S.weatherType)??Z.NONE,L=(n=T.arena.weather)==null?void 0:n.isEffectSuppressed();return!e.summonData.abilitySuppressed&&!L&&e.hasAbility(this.ability)&&this.weathers.includes(I)}};r(Wu,"SpeciesFormChangeWeatherTrigger");let CO=Wu;const hu=class hu extends OO{constructor(e,I){super(),this.ability=e,this.weathers=I,this.description=_.t("pokemonEvolutions:Forms.weatherRevert")}canChange(e){var I,L;if(e.hasAbility(this.ability,!1,!0)){const N=((I=T.arena.weather)==null?void 0:I.weatherType)??Z.NONE,S=(L=T.arena.weather)==null?void 0:L.isEffectSuppressed(),n=e.summonData.abilitySuppressed,i=e.summonData.ability,C=i!==this.ability&&i!==O.NONE;if(this.weathers.includes(N)||S||n||C)return!0}return!1}};r(hu,"SpeciesFormChangeRevertWeatherFormTrigger");let dI=hu;function Q7(R,e,I){const L=e.formKey.indexOf(eA.MEGA)>-1,N=e.formKey.indexOf(eA.GIGANTAMAX)>-1,S=e.formKey.indexOf(eA.ETERNAMAX)>-1,n=!L&&e.formKey===R.species.forms[0].formKey;return L?_.t("battlePokemonForm:megaChange",{preName:I,pokemonName:R.name}):N?_.t("battlePokemonForm:gigantamaxChange",{preName:I,pokemonName:R.name}):S?_.t("battlePokemonForm:eternamaxChange",{preName:I,pokemonName:R.name}):n?_.t("battlePokemonForm:revertChange",{pokemonName:Q(R)}):R.getAbility().id===O.DISGUISE?_.t("battlePokemonForm:disguiseChange"):_.t("battlePokemonForm:formChange",{preName:I})}r(Q7,"getSpeciesFormChangeMessage");const du=class du{constructor(e,I=0,L){this.toxicTurnCount=0,this.effect=e,this.toxicTurnCount=I,this.sleepTurnsRemaining=L}incrementTurn(){this.toxicTurnCount++,this.sleepTurnsRemaining&&this.sleepTurnsRemaining--}isPostTurn(){return this.effect===J.POISON||this.effect===J.TOXIC||this.effect===J.BURN}};r(du,"Status");let pL=du;function rS(R){switch(R){case J.POISON:return"statusEffect:poison";case J.TOXIC:return"statusEffect:toxic";case J.PARALYSIS:return"statusEffect:paralysis";case J.SLEEP:return"statusEffect:sleep";case J.FREEZE:return"statusEffect:freeze";case J.BURN:return"statusEffect:burn";default:return"statusEffect:none"}}r(rS,"getStatusEffectMessageKey");function J7(R,e,I){if(R===J.NONE)return"";if(!I){const N=`${rS(R)}.obtain`;return _.t(N,{pokemonNameWithAffix:e})}const L=`${rS(R)}.obtainSource`;return _.t(L,{pokemonNameWithAffix:e,sourceText:I})}r(J7,"getStatusEffectObtainText");function _V(R,e){if(R===J.NONE)return"";const I=`${rS(R)}.activation`;return _.t(I,{pokemonNameWithAffix:e})}r(_V,"getStatusEffectActivationText");function GV(R,e){if(R===J.NONE)return"";const I=`${rS(R)}.overlap`;return _.t(I,{pokemonNameWithAffix:e})}r(GV,"getStatusEffectOverlapText");function $t(R,e){if(R===J.NONE)return"";const I=`${rS(R)}.heal`;return _.t(I,{pokemonNameWithAffix:e})}r($t,"getStatusEffectHealText");function I3(R){if(R===J.NONE)return"";const e=`${rS(R)}.description`;return _.t(e)}r(I3,"getStatusEffectDescriptor");function PV(R){switch(R){case J.POISON:case J.TOXIC:case J.PARALYSIS:case J.BURN:return 1.5;case J.SLEEP:case J.FREEZE:return 2.5}return 1}r(PV,"getStatusEffectCatchRateMultiplier");function HV(R,e){return!R||R.effect===J.NONE||R.effect===J.FAINT?e:!e||e.effect===J.NONE||e.effect===J.FAINT||ry(0,2)?R:e}r(HV,"getRandomStatus");function KT(){return[J.POISON,J.TOXIC,J.PARALYSIS,J.SLEEP,J.FREEZE,J.BURN]}r(KT,"getNonVolatileStatusEffects");function A2(R){return KT().includes(R)}r(A2,"isNonVolatileStatusEffect");var De=(R=>(R[R.PENDING=0]="PENDING",R[R.SUCCESS=1]="SUCCESS",R[R.FAIL=2]="FAIL",R[R.MISS=3]="MISS",R[R.OTHER=4]="OTHER",R))(De||{}),d=(R=>(R.NONE="NONE",R.RECHARGING="RECHARGING",R.FLINCHED="FLINCHED",R.INTERRUPTED="INTERRUPTED",R.CONFUSED="CONFUSED",R.INFATUATED="INFATUATED",R.SEEDED="SEEDED",R.NIGHTMARE="NIGHTMARE",R.FRENZY="FRENZY",R.CHARGING="CHARGING",R.ENCORE="ENCORE",R.HELPING_HAND="HELPING_HAND",R.INGRAIN="INGRAIN",R.OCTOLOCK="OCTOLOCK",R.AQUA_RING="AQUA_RING",R.DROWSY="DROWSY",R.TRAPPED="TRAPPED",R.BIND="BIND",R.WRAP="WRAP",R.FIRE_SPIN="FIRE_SPIN",R.WHIRLPOOL="WHIRLPOOL",R.CLAMP="CLAMP",R.SAND_TOMB="SAND_TOMB",R.MAGMA_STORM="MAGMA_STORM",R.SNAP_TRAP="SNAP_TRAP",R.THUNDER_CAGE="THUNDER_CAGE",R.INFESTATION="INFESTATION",R.PROTECTED="PROTECTED",R.SPIKY_SHIELD="SPIKY_SHIELD",R.KINGS_SHIELD="KINGS_SHIELD",R.OBSTRUCT="OBSTRUCT",R.SILK_TRAP="SILK_TRAP",R.BANEFUL_BUNKER="BANEFUL_BUNKER",R.BURNING_BULWARK="BURNING_BULWARK",R.ENDURING="ENDURING",R.STURDY="STURDY",R.PERISH_SONG="PERISH_SONG",R.TRUANT="TRUANT",R.SLOW_START="SLOW_START",R.PROTOSYNTHESIS="PROTOSYNTHESIS",R.QUARK_DRIVE="QUARK_DRIVE",R.FLYING="FLYING",R.UNDERGROUND="UNDERGROUND",R.UNDERWATER="UNDERWATER",R.HIDDEN="HIDDEN",R.FIRE_BOOST="FIRE_BOOST",R.CRIT_BOOST="CRIT_BOOST",R.ALWAYS_CRIT="ALWAYS_CRIT",R.IGNORE_ACCURACY="IGNORE_ACCURACY",R.BYPASS_SLEEP="BYPASS_SLEEP",R.IGNORE_FLYING="IGNORE_FLYING",R.SALT_CURED="SALT_CURED",R.CURSED="CURSED",R.CHARGED="CHARGED",R.ROOSTED="ROOSTED",R.FLOATING="FLOATING",R.MINIMIZED="MINIMIZED",R.DESTINY_BOND="DESTINY_BOND",R.CENTER_OF_ATTENTION="CENTER_OF_ATTENTION",R.ICE_FACE="ICE_FACE",R.DISGUISE="DISGUISE",R.STOCKPILING="STOCKPILING",R.RECEIVE_DOUBLE_DAMAGE="RECEIVE_DOUBLE_DAMAGE",R.ALWAYS_GET_HIT="ALWAYS_GET_HIT",R.DISABLED="DISABLED",R.SUBSTITUTE="SUBSTITUTE",R.IGNORE_GHOST="IGNORE_GHOST",R.IGNORE_DARK="IGNORE_DARK",R.GULP_MISSILE_ARROKUDA="GULP_MISSILE_ARROKUDA",R.GULP_MISSILE_PIKACHU="GULP_MISSILE_PIKACHU",R.BEAK_BLAST_CHARGING="BEAK_BLAST_CHARGING",R.SHELL_TRAP="SHELL_TRAP",R.DRAGON_CHEER="DRAGON_CHEER",R.NO_RETREAT="NO_RETREAT",R.GORILLA_TACTICS="GORILLA_TACTICS",R.UNBURDEN="UNBURDEN",R.THROAT_CHOPPED="THROAT_CHOPPED",R.TAR_SHOT="TAR_SHOT",R.BURNED_UP="BURNED_UP",R.DOUBLE_SHOCKED="DOUBLE_SHOCKED",R.AUTOTOMIZED="AUTOTOMIZED",R.MYSTERY_ENCOUNTER_POST_SUMMON="MYSTERY_ENCOUNTER_POST_SUMMON",R.POWER_TRICK="POWER_TRICK",R.HEAL_BLOCK="HEAL_BLOCK",R.TORMENT="TORMENT",R.TAUNT="TAUNT",R.IMPRISON="IMPRISON",R.SYRUP_BOMB="SYRUP_BOMB",R.ELECTRIFIED="ELECTRIFIED",R.TELEKINESIS="TELEKINESIS",R.COMMANDED="COMMANDED",R.GRUDGE="GRUDGE",R.PSYCHO_SHIFT="PSYCHO_SHIFT",R.ENDURE_TOKEN="ENDURE_TOKEN",R.POWDER="POWDER",R.MAGIC_COAT="MAGIC_COAT",R))(d||{}),Yt=(R=>(R[R.SUBSTITUTE_ADD=0]="SUBSTITUTE_ADD",R[R.SUBSTITUTE_PRE_MOVE=1]="SUBSTITUTE_PRE_MOVE",R[R.SUBSTITUTE_POST_MOVE=2]="SUBSTITUTE_POST_MOVE",R[R.SUBSTITUTE_REMOVE=3]="SUBSTITUTE_REMOVE",R[R.COMMANDER_APPLY=4]="COMMANDER_APPLY",R[R.COMMANDER_REMOVE=5]="COMMANDER_REMOVE",R))(Yt||{}),BA=(R=>(R[R.FAINT=0]="FAINT",R[R.MOVE=1]="MOVE",R[R.PRE_MOVE=2]="PRE_MOVE",R[R.AFTER_MOVE=3]="AFTER_MOVE",R[R.MOVE_EFFECT=4]="MOVE_EFFECT",R[R.TURN_END=5]="TURN_END",R[R.HIT=6]="HIT",R[R.AFTER_HIT=7]="AFTER_HIT",R[R.CUSTOM=8]="CUSTOM",R))(BA||{});const pu=class pu{constructor(e,I,L,N,S,n=!1){this.tagType=e,this.lapseTypes=ue(I),this.turnCount=L,this.sourceMove=N,this.sourceId=S,this.isBatonPassable=n}canAdd(e){return!0}onAdd(e){}onRemove(e){}onOverlap(e){}lapse(e,I){return--this.turnCount>0}getDescriptor(){return""}isSourceLinked(){return!1}getMoveName(){return this.sourceMove?FA[this.sourceMove].name:null}loadTag(e){this.turnCount=e.turnCount,this.sourceMove=e.sourceMove,this.sourceId=e.sourceId}getSourcePokemon(){return this.sourceId?T.getPokemonById(this.sourceId):null}};r(pu,"BattlerTag");let CE=pu;const gu=class gu extends CE{constructor(e,I,L,N,S){super(e,I,L,N,S)}lapse(e,I){if(I===BA.PRE_MOVE){const L=T.phaseManager.getCurrentPhase(),N=L.move;return this.isMoveRestricted(N.moveId,e)&&(this.interruptedText(e,N.moveId)&&T.phaseManager.queueMessage(this.interruptedText(e,N.moveId)),L.cancel()),!0}return super.lapse(e,I)}isMoveTargetRestricted(e,I,L){return!1}interruptedText(e,I){return""}};r(gu,"MoveRestrictionBattlerTag");let bO=gu;const mu=class mu extends bO{constructor(){super(d.THROAT_CHOPPED,[BA.TURN_END,BA.PRE_MOVE],2,E.THROAT_CHOP)}isMoveRestricted(e){return FA[e].hasFlag(JA.SOUND_BASED)}selectionDeniedText(e,I){return _.t("battle:moveCannotBeSelected",{moveName:FA[I].name})}interruptedText(e,I){return _.t("battle:throatChopInterruptedMove",{pokemonName:Q(e)})}};r(mu,"ThroatChoppedTag");let sG=mu;const yu=class yu extends bO{constructor(e){super(d.DISABLED,[BA.PRE_MOVE,BA.TURN_END],4,E.DISABLE,e),this.moveId=E.NONE}isMoveRestricted(e){return e===this.moveId}onAdd(e){super.onAdd(e);const I=e.getLastXMoves(-1).find(L=>!L.virtual);SA(I)||I.move===E.STRUGGLE||I.move===E.NONE||(this.moveId=I.move,T.phaseManager.queueMessage(_.t("battlerTags:disabledOnAdd",{pokemonNameWithAffix:Q(e),moveName:FA[this.moveId].name})))}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:disabledLapse",{pokemonNameWithAffix:Q(e),moveName:FA[this.moveId].name}))}selectionDeniedText(e,I){return _.t("battle:moveDisabled",{moveName:FA[I].name})}interruptedText(e,I){return _.t("battle:disableInterruptedMove",{pokemonNameWithAffix:Q(e),moveName:FA[I].name})}loadTag(e){super.loadTag(e),this.moveId=e.moveId}};r(yu,"DisabledTag");let aG=yu;const Fl=class Fl extends bO{constructor(){super(d.GORILLA_TACTICS,BA.CUSTOM,0),this.moveId=E.NONE}isMoveRestricted(e){return e!==this.moveId}canAdd(e){return this.getLastValidMove(e)!==void 0&&!e.getTag(Fl)}onAdd(e){const I=this.getLastValidMove(e);I&&(this.moveId=I,e.setStat(c.ATK,e.getStat(c.ATK,!1)*1.5,!1))}loadTag(e){super.loadTag(e),this.moveId=e.moveId}selectionDeniedText(e,I){return _.t("battle:canOnlyUseMove",{moveName:FA[this.moveId].name,pokemonName:Q(e)})}getLastValidMove(e){const I=e.getLastXMoves().find(L=>L.move!==E.NONE&&L.move!==E.STRUGGLE&&!L.virtual);return I==null?void 0:I.move}};r(Fl,"GorillaTacticsTag");let nG=Fl;const Vu=class Vu extends CE{constructor(e){super(d.RECHARGING,[BA.PRE_MOVE,BA.TURN_END],2,e)}onAdd(e){super.onAdd(e),e.getMoveQueue().push({move:E.NONE,targets:[]})}lapse(e,I){return I===BA.PRE_MOVE&&(T.phaseManager.queueMessage(_.t("battlerTags:rechargingLapse",{pokemonNameWithAffix:Q(e)})),T.phaseManager.getCurrentPhase().cancel(),e.getMoveQueue().shift()),super.lapse(e,I)}};r(Vu,"RechargingTag");let rG=Vu;const wu=class wu extends CE{constructor(){super(d.BEAK_BLAST_CHARGING,[BA.PRE_MOVE,BA.TURN_END,BA.AFTER_HIT],1,E.BEAK_BLAST)}onAdd(e){new VC(et.BEAK_BLAST_CHARGING,this.sourceMove,e).play(),T.phaseManager.queueMessage(_.t("moveTriggers:startedHeatingUpBeak",{pokemonName:Q(e)}))}lapse(e,I){if(I===BA.AFTER_HIT){const L=rH();return L!=null&&L.move.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:L.attacker,target:e})&&L.attacker.trySetStatus(J.BURN,!0,e),!0}return super.lapse(e,I)}};r(wu,"BeakBlastChargingTag");let iG=wu;const vu=class vu extends CE{constructor(){super(d.SHELL_TRAP,[BA.TURN_END,BA.AFTER_HIT],1),this.activated=!1}onAdd(e){T.phaseManager.queueMessage(_.t("moveTriggers:setUpShellTrap",{pokemonName:Q(e)}))}lapse(e,I){if(I===BA.AFTER_HIT){const L=rH();if((L==null?void 0:L.move.category)===G.PHYSICAL&&e.isOpponent(L.attacker)){const N=T.phaseManager.phaseQueue.findIndex(n=>n.is("MovePhase")&&n.pokemon===e),S=T.phaseManager.phaseQueue.findIndex(n=>n.is("MovePhase"));if(N!==-1&&N!==S){const n=T.phaseManager.phaseQueue.splice(N,1)[0];T.phaseManager.prependToPhase(n,"MovePhase")}this.activated=!0}return!0}return super.lapse(e,I)}};r(vu,"ShellTrapTag");let oC=vu;const Yl=class Yl extends CE{constructor(e,I,L,N,S){super(e,I,L,N,S,!0)}canAdd(e){const I=T.getPokemonById(this.sourceId),L=FA[this.sourceMove],N=e.isOfType(t.GHOST),S=e.getTag(Yl),n=L.hitsSubstitute(I,e);return!S&&!N&&!n}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(this.getTrapMessage(e))}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:trappedOnRemove",{pokemonNameWithAffix:Q(e),moveName:this.getMoveName()}))}getDescriptor(){return _.t("battlerTags:trappedDesc")}isSourceLinked(){return!0}getTrapMessage(e){return _.t("battlerTags:trappedOnAdd",{pokemonNameWithAffix:Q(e)})}};r(Yl,"TrappedTag");let WO=Yl;const xu=class xu extends WO{constructor(e){super(d.NO_RETREAT,BA.CUSTOM,0,E.NO_RETREAT,e)}canAdd(e){return!e.getTag(WO)}};r(xu,"NoRetreatTag");let CG=xu;const Zu=class Zu extends CE{constructor(e){super(d.FLINCHED,[BA.PRE_MOVE,BA.TURN_END],1,e)}lapse(e,I){return I===BA.PRE_MOVE?(T.phaseManager.getCurrentPhase().cancel(),T.phaseManager.queueMessage(_.t("battlerTags:flinchedLapse",{pokemonNameWithAffix:Q(e)})),SE("FlinchEffectAbAttr",e,null),!0):super.lapse(e,I)}getDescriptor(){return _.t("battlerTags:flinchedDesc")}};r(Zu,"FlinchedTag");let UG=Zu;const bu=class bu extends CE{constructor(e){super(d.INTERRUPTED,BA.PRE_MOVE,0,e)}canAdd(e){return!!e.getTag(d.FLYING)}onAdd(e){super.onAdd(e),e.getMoveQueue().shift(),e.pushMoveHistory({move:E.NONE,result:De.OTHER,targets:[]})}lapse(e,I){return T.phaseManager.getCurrentPhase().cancel(),super.lapse(e,I)}};r(bu,"InterruptedTag");let oG=bu;const ku=class ku extends CE{constructor(e,I){super(d.CONFUSED,BA.MOVE,e,I,void 0,!0)}canAdd(e){var I;return((I=T.arena.terrain)==null?void 0:I.terrainType)!==bA.MISTY||!e.isGrounded()}onAdd(e){super.onAdd(e),T.phaseManager.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),void 0,jE.CONFUSION),T.phaseManager.queueMessage(_.t("battlerTags:confusedOnAdd",{pokemonNameWithAffix:Q(e)}))}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:confusedOnRemove",{pokemonNameWithAffix:Q(e)}))}onOverlap(e){super.onOverlap(e),T.phaseManager.queueMessage(_.t("battlerTags:confusedOnOverlap",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){if(!(I!==BA.CUSTOM&&super.lapse(e,I)))return!1;const N=T.phaseManager;if(N.queueMessage(_.t("battlerTags:confusedLapse",{pokemonNameWithAffix:Q(e)})),N.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),void 0,jE.CONFUSION),e.randBattleSeedInt(3)===0||aE.CONFUSION_ACTIVATION_OVERRIDE===!0){const S=e.getEffectiveStat(c.ATK),n=e.getEffectiveStat(c.DEF),i=UE(((2*e.level/5+2)*40*S/n/50+2)*(e.randBattleSeedIntRange(85,100)/100));N.queueMessage(_.t("battlerTags:confusedLapseHurtItself")),e.damageAndUpdate(i,{result:_E.CONFUSION}),N.getCurrentPhase().cancel()}return!0}getDescriptor(){return _.t("battlerTags:confusedDesc")}};r(ku,"ConfusedTag");let MG=ku;const Xu=class Xu extends CE{constructor(e,I){super(d.DESTINY_BOND,BA.PRE_MOVE,1,e,I,!0)}lapse(e,I){if(I!==BA.CUSTOM)return super.lapse(e,I);const L=this.sourceId?T.getPokemonById(this.sourceId):null;return L!=null&&L.isFainted()?(L==null?void 0:L.getAlly())===e?!1:e.isBossImmune()?(T.phaseManager.queueMessage(_.t("battlerTags:destinyBondLapseIsBoss",{pokemonNameWithAffix:Q(e)})),!1):(T.phaseManager.queueMessage(_.t("battlerTags:destinyBondLapse",{pokemonNameWithAffix:Q(L),pokemonNameWithAffix2:Q(e)})),e.damageAndUpdate(e.hp,{result:_E.INDIRECT_KO,ignoreSegments:!0}),!1):!0}};r(Xu,"DestinyBondTag");let DG=Xu;const Qu=class Qu extends CE{constructor(e,I){super(d.INFATUATED,BA.MOVE,1,e,I)}canAdd(e){if(this.sourceId){const I=T.getPokemonById(this.sourceId);return I?e.isOppositeGender(I):(console.warn("canAdd: this.sourceId is not a valid pokemon id!",this.sourceId),!1)}return console.warn("canAdd: this.sourceId is undefined"),!1}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:infatuatedOnAdd",{pokemonNameWithAffix:Q(e),sourcePokemonName:Q(T.getPokemonById(this.sourceId)??void 0)}))}onOverlap(e){super.onOverlap(e),T.phaseManager.queueMessage(_.t("battlerTags:infatuatedOnOverlap",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){const L=I!==BA.CUSTOM||super.lapse(e,I),N=T.phaseManager;return L&&(N.queueMessage(_.t("battlerTags:infatuatedLapse",{pokemonNameWithAffix:Q(e),sourcePokemonName:Q(T.getPokemonById(this.sourceId)??void 0)})),N.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),void 0,jE.ATTRACT),e.randBattleSeedInt(2)&&(N.queueMessage(_.t("battlerTags:infatuatedLapseImmobilize",{pokemonNameWithAffix:Q(e)})),N.getCurrentPhase().cancel())),L}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:infatuatedOnRemove",{pokemonNameWithAffix:Q(e)}))}isSourceLinked(){return!0}getDescriptor(){return _.t("battlerTags:infatuatedDesc")}};r(Qu,"InfatuatedTag");let lG=Qu;const Ju=class Ju extends CE{constructor(e){super(d.SEEDED,BA.TURN_END,1,E.LEECH_SEED,e,!0)}loadTag(e){super.loadTag(e),this.sourceIndex=e.sourceIndex}canAdd(e){return!e.isOfType(t.GRASS)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:seededOnAdd",{pokemonNameWithAffix:Q(e)})),this.sourceIndex=T.getPokemonById(this.sourceId).getBattlerIndex()}lapse(e,I){const L=I!==BA.CUSTOM||super.lapse(e,I);if(L){const N=e.getOpponents().find(S=>S.getBattlerIndex()===this.sourceIndex);if(N){const S=new nE(!1);if(SE("BlockNonDirectDamageAbAttr",e,S),!S.value){T.phaseManager.unshiftNew("CommonAnimPhase",N.getBattlerIndex(),e.getBattlerIndex(),jE.LEECH_SEED);const n=e.damageAndUpdate(UE(e.getMaxHp()/8),{result:_E.INDIRECT}),i=e.hasAbilityWithAttr("ReverseDrainAbAttr",!1);T.phaseManager.unshiftNew("PokemonHealPhase",N.getBattlerIndex(),i?n*-1:n,i?_.t("battlerTags:seededLapseShed",{pokemonNameWithAffix:Q(e)}):_.t("battlerTags:seededLapse",{pokemonNameWithAffix:Q(e)}),!1,!0)}}}return L}getDescriptor(){return _.t("battlerTags:seedDesc")}};r(Ju,"SeedTag");let _G=Ju;const $u=class $u extends CE{constructor(){super(d.POWDER,[BA.PRE_MOVE,BA.TURN_END],1)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:powderOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){if(I===BA.PRE_MOVE){const L=T.phaseManager.getCurrentPhase();if(L!=null&&L.is("MovePhase")){const N=L.move.getMove(),S=T.arena.weather;if(e.getMoveType(N)===t.FIRE&&!(S&&S.weatherType===Z.HEAVY_RAIN&&!S.isEffectSuppressed())){L.fail(),L.showMoveText();const n=e.getBattlerIndex();T.phaseManager.unshiftNew("CommonAnimPhase",n,n,jE.POWDER);const i=new nE(!1);SE("BlockNonDirectDamageAbAttr",e,i),i.value||e.damageAndUpdate(Math.floor(e.getMaxHp()/4),{result:_E.INDIRECT}),T.phaseManager.queueMessage(_.t("battlerTags:powderLapse",{moveName:N.name}))}}return!0}return super.lapse(e,I)}};r($u,"PowderTag");let GG=$u;const qu=class qu extends CE{constructor(){super(d.NIGHTMARE,BA.TURN_END,1,E.NIGHTMARE)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:nightmareOnAdd",{pokemonNameWithAffix:Q(e)}))}onOverlap(e){super.onOverlap(e),T.phaseManager.queueMessage(_.t("battlerTags:nightmareOnOverlap",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){const L=I!==BA.CUSTOM||super.lapse(e,I);if(L){const N=T.phaseManager;N.queueMessage(_.t("battlerTags:nightmareLapse",{pokemonNameWithAffix:Q(e)})),N.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),void 0,jE.CURSE);const S=new nE(!1);SE("BlockNonDirectDamageAbAttr",e,S),S.value||e.damageAndUpdate(UE(e.getMaxHp()/4),{result:_E.INDIRECT})}return L}getDescriptor(){return _.t("battlerTags:nightmareDesc")}};r(qu,"NightmareTag");let PG=qu;const zu=class zu extends CE{constructor(e,I,L){super(d.FRENZY,BA.CUSTOM,e,I,L)}onRemove(e){super.onRemove(e),this.turnCount<2&&e.addTag(d.CONFUSED,e.randBattleSeedIntRange(2,4))}};r(zu,"FrenzyTag");let HG=zu;const ju=class ju extends bO{constructor(e){super(d.ENCORE,[BA.CUSTOM,BA.AFTER_MOVE],3,E.ENCORE,e)}loadTag(e){super.loadTag(e),this.moveId=e.moveId}canAdd(e){const I=e.getLastXMoves(1);if(!I.length)return!1;const L=I[0];if(!L.move||L.virtual)return!1;switch(L.move){case E.MIMIC:case E.MIRROR_MOVE:case E.TRANSFORM:case E.STRUGGLE:case E.SKETCH:case E.SLEEP_TALK:case E.ENCORE:return!1}return this.moveId=L.move,!0}onAdd(e){if(super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:encoreOnAdd",{pokemonNameWithAffix:Q(e)})),T.phaseManager.findPhase(L=>L.is("MovePhase")&&L.pokemon===e)){const L=e.getMoveset().find(N=>N.moveId===this.moveId);if(L){const N=e.getLastXMoves(1)[0];T.phaseManager.tryReplacePhase(S=>S.is("MovePhase")&&S.pokemon===e,T.phaseManager.create("MovePhase",e,N.targets??[],L))}}}lapse(e,I){if(I===BA.CUSTOM){const L=e.getMoveset().find(N=>N.moveId===this.moveId);return!SA(L)&&L.getPpRatio()>0}return super.lapse(e,I)}isMoveRestricted(e,I){return e!==this.moveId}selectionDeniedText(e,I){return _.t("battle:moveDisabled",{moveName:FA[I].name})}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:encoreOnRemove",{pokemonNameWithAffix:Q(e)}))}};r(ju,"EncoreTag");let Oa=ju;const A1=class A1 extends CE{constructor(e){super(d.HELPING_HAND,BA.TURN_END,1,E.HELPING_HAND,e)}onAdd(e){T.phaseManager.queueMessage(_.t("battlerTags:helpingHandOnAdd",{pokemonNameWithAffix:Q(T.getPokemonById(this.sourceId)??void 0),pokemonName:Q(e)}))}};r(A1,"HelpingHandTag");let MC=A1;const E1=class E1 extends WO{constructor(e){super(d.INGRAIN,BA.TURN_END,1,E.INGRAIN,e)}canAdd(e){return!e.getTag(d.TRAPPED)}lapse(e,I){const L=I!==BA.CUSTOM||super.lapse(e,I);return L&&T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/16),_.t("battlerTags:ingrainLapse",{pokemonNameWithAffix:Q(e)}),!0),L}getTrapMessage(e){return _.t("battlerTags:ingrainOnTrap",{pokemonNameWithAffix:Q(e)})}getDescriptor(){return _.t("battlerTags:ingrainDesc")}};r(E1,"IngrainTag");let uG=E1;const e1=class e1 extends WO{constructor(e){super(d.OCTOLOCK,BA.TURN_END,1,E.OCTOLOCK,e)}lapse(e,I){return I!==BA.CUSTOM||super.lapse(e,I)?(T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!1,[c.DEF,c.SPDEF],-1),!0):!1}};r(e1,"OctolockTag");let cG=e1;const R1=class R1 extends CE{constructor(){super(d.AQUA_RING,BA.TURN_END,1,E.AQUA_RING,void 0,!0)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:aquaRingOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){const L=I!==BA.CUSTOM||super.lapse(e,I);return L&&T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/16),_.t("battlerTags:aquaRingLapse",{moveName:this.getMoveName(),pokemonName:Q(e)}),!0),L}};r(R1,"AquaRingTag");let BG=R1;const O1=class O1 extends CE{constructor(){super(d.MINIMIZED,BA.TURN_END,1,E.MINIMIZE)}onAdd(e){super.onAdd(e)}lapse(e,I){return I!==BA.CUSTOM||super.lapse(e,I)}onRemove(e){super.onRemove(e)}};r(O1,"MinimizeTag");let KG=O1;const I1=class I1 extends CE{constructor(){super(d.DROWSY,BA.TURN_END,2,E.YAWN)}canAdd(e){var I;return((I=T.arena.terrain)==null?void 0:I.terrainType)!==bA.ELECTRIC||!e.isGrounded()}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:drowsyOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){return super.lapse(e,I)?!0:(e.trySetStatus(J.SLEEP,!0),!1)}getDescriptor(){return _.t("battlerTags:drowsyDesc")}};r(I1,"DrowsyTag");let fG=I1;const t1=class t1 extends WO{constructor(e,I,L,N,S){super(e,BA.TURN_END,L,N,S),this.commonAnim=I}loadTag(e){super.loadTag(e),this.commonAnim=e.commonAnim}canAdd(e){return!e.getTag(WO)&&!e.getTag(d.SUBSTITUTE)}lapse(e,I){const L=super.lapse(e,I);if(L){const N=T.phaseManager;N.queueMessage(_.t("battlerTags:damagingTrapLapse",{pokemonNameWithAffix:Q(e),moveName:this.getMoveName()})),N.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),void 0,this.commonAnim);const S=new nE(!1);SE("BlockNonDirectDamageAbAttr",e,S),S.value||e.damageAndUpdate(UE(e.getMaxHp()/8),{result:_E.INDIRECT})}return L}};r(t1,"DamagingTrapTag");let kO=t1;const L1=class L1 extends kO{constructor(e,I){super(d.BIND,jE.BIND,e,E.BIND,I)}getTrapMessage(e){return _.t("battlerTags:bindOnTrap",{pokemonNameWithAffix:Q(e),sourcePokemonName:Q(T.getPokemonById(this.sourceId)??void 0),moveName:this.getMoveName()})}};r(L1,"BindTag");let FG=L1;const N1=class N1 extends kO{constructor(e,I){super(d.WRAP,jE.WRAP,e,E.WRAP,I)}getTrapMessage(e){return _.t("battlerTags:wrapOnTrap",{pokemonNameWithAffix:Q(e),sourcePokemonName:Q(T.getPokemonById(this.sourceId)??void 0)})}};r(N1,"WrapTag");let YG=N1;const S1=class S1 extends kO{constructor(e,I,L,N,S){super(e,I,L,N,S)}getTrapMessage(e){return _.t("battlerTags:vortexOnTrap",{pokemonNameWithAffix:Q(e)})}};r(S1,"VortexTrapTag");let DC=S1;const T1=class T1 extends DC{constructor(e,I){super(d.FIRE_SPIN,jE.FIRE_SPIN,e,E.FIRE_SPIN,I)}};r(T1,"FireSpinTag");let WG=T1;const s1=class s1 extends DC{constructor(e,I){super(d.WHIRLPOOL,jE.WHIRLPOOL,e,E.WHIRLPOOL,I)}};r(s1,"WhirlpoolTag");let hG=s1;const a1=class a1 extends kO{constructor(e,I){super(d.CLAMP,jE.CLAMP,e,E.CLAMP,I)}getTrapMessage(e){return _.t("battlerTags:clampOnTrap",{sourcePokemonNameWithAffix:Q(T.getPokemonById(this.sourceId)??void 0),pokemonName:Q(e)})}};r(a1,"ClampTag");let dG=a1;const n1=class n1 extends kO{constructor(e,I){super(d.SAND_TOMB,jE.SAND_TOMB,e,E.SAND_TOMB,I)}getTrapMessage(e){return _.t("battlerTags:sandTombOnTrap",{pokemonNameWithAffix:Q(e),moveName:this.getMoveName()})}};r(n1,"SandTombTag");let pG=n1;const r1=class r1 extends kO{constructor(e,I){super(d.MAGMA_STORM,jE.MAGMA_STORM,e,E.MAGMA_STORM,I)}getTrapMessage(e){return _.t("battlerTags:magmaStormOnTrap",{pokemonNameWithAffix:Q(e)})}};r(r1,"MagmaStormTag");let gG=r1;const i1=class i1 extends kO{constructor(e,I){super(d.SNAP_TRAP,jE.SNAP_TRAP,e,E.SNAP_TRAP,I)}getTrapMessage(e){return _.t("battlerTags:snapTrapOnTrap",{pokemonNameWithAffix:Q(e)})}};r(i1,"SnapTrapTag");let mG=i1;const C1=class C1 extends kO{constructor(e,I){super(d.THUNDER_CAGE,jE.THUNDER_CAGE,e,E.THUNDER_CAGE,I)}getTrapMessage(e){return _.t("battlerTags:thunderCageOnTrap",{pokemonNameWithAffix:Q(e),sourcePokemonNameWithAffix:Q(T.getPokemonById(this.sourceId)??void 0)})}};r(C1,"ThunderCageTag");let yG=C1;const U1=class U1 extends kO{constructor(e,I){super(d.INFESTATION,jE.INFESTATION,e,E.INFESTATION,I)}getTrapMessage(e){return _.t("battlerTags:infestationOnTrap",{pokemonNameWithAffix:Q(e),sourcePokemonNameWithAffix:Q(T.getPokemonById(this.sourceId)??void 0)})}};r(U1,"InfestationTag");let VG=U1;const o1=class o1 extends CE{constructor(e,I=d.PROTECTED){super(I,BA.TURN_END,0,e)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:protectedOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){if(I===BA.CUSTOM){new yC(jE.PROTECT,e).play(),T.phaseManager.queueMessage(_.t("battlerTags:protectedLapse",{pokemonNameWithAffix:Q(e)}));const L=T.phaseManager.getCurrentPhase();return L!=null&&L.is("MoveEffectPhase")&&L.stopMultiHit(e),!0}return super.lapse(e,I)}};r(o1,"ProtectedTag");let lC=o1;const M1=class M1 extends lC{onContact(e,I){}lapse(e,I){const L=super.lapse(e,I),N=rH();return I===BA.CUSTOM&&N&&N.move.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N.attacker,target:e})&&this.onContact(N.attacker,e),L}};r(M1,"ContactProtectedTag");let _C=M1;const D1=class D1 extends _C{constructor(e,I){super(e,d.SPIKY_SHIELD),this.damageRatio=I}loadTag(e){super.loadTag(e),this.damageRatio=e.damageRatio}onContact(e,I){const L=new nE(!1);SE("BlockNonDirectDamageAbAttr",I,L),L.value||e.damageAndUpdate(UE(e.getMaxHp()*(1/this.damageRatio)),{result:_E.INDIRECT})}};r(D1,"ContactDamageProtectedTag");let wG=D1;const l1=class l1 extends _C{};r(l1,"DamageProtectedTag");let GC=l1;const _1=class _1 extends GC{constructor(e,I,L){super(e,I),this.statusEffect=L}onContact(e,I){e.trySetStatus(this.statusEffect,!0,I)}};r(_1,"ContactSetStatusProtectedTag");let PC=_1;const G1=class G1 extends GC{constructor(e,I,L,N){super(e,I),this.stat=L,this.levels=N}loadTag(e){super.loadTag(e),this.stat=e.stat,this.levels=e.levels}onContact(e,I){T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!1,[this.stat],this.levels)}};r(G1,"ContactStatStageChangeProtectedTag");let fT=G1;const P1=class P1 extends CE{constructor(e,I,L){super(e,I,0,L)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:enduringOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){return I===BA.CUSTOM?(T.phaseManager.queueMessage(_.t("battlerTags:enduringLapse",{pokemonNameWithAffix:Q(e)})),!0):super.lapse(e,I)}};r(P1,"EnduringTag");let HC=P1;const H1=class H1 extends CE{constructor(e){super(d.STURDY,BA.TURN_END,0,e)}lapse(e,I){return I===BA.CUSTOM?(T.phaseManager.queueMessage(_.t("battlerTags:sturdyLapse",{pokemonNameWithAffix:Q(e)})),!0):super.lapse(e,I)}};r(H1,"SturdyTag");let vG=H1;const u1=class u1 extends CE{constructor(e){super(d.PERISH_SONG,BA.TURN_END,e,E.PERISH_SONG,void 0,!0)}canAdd(e){return!e.isBossImmune()}lapse(e,I){const L=super.lapse(e,I);return L?T.phaseManager.queueMessage(_.t("battlerTags:perishSongLapse",{pokemonNameWithAffix:Q(e),turnCount:this.turnCount})):e.damageAndUpdate(e.hp,{result:_E.INDIRECT_KO,ignoreSegments:!0}),L}};r(u1,"PerishSongTag");let xG=u1;const c1=class c1 extends CE{constructor(e){super(d.CENTER_OF_ATTENTION,BA.TURN_END,1,e),this.powder=this.sourceMove===E.RAGE_POWDER}canAdd(e){return!(e.isPlayer()?T.getPlayerField():T.getEnemyField()).find(L=>L.getTag(d.CENTER_OF_ATTENTION))}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:centerOfAttentionOnAdd",{pokemonNameWithAffix:Q(e)}))}};r(c1,"CenterOfAttentionTag");let uC=c1;const B1=class B1 extends CE{constructor(e,I,L,N){super(e,L,N),this.ability=I}loadTag(e){super.loadTag(e),this.ability=e.ability}};r(B1,"AbilityBattlerTag");let iS=B1;const K1=class K1 extends iS{constructor(){super(d.UNBURDEN,O.UNBURDEN,BA.CUSTOM,1)}onAdd(e){super.onAdd(e)}onRemove(e){super.onRemove(e)}};r(K1,"UnburdenTag");let ZG=K1;const f1=class f1 extends iS{constructor(){super(d.TRUANT,O.TRUANT,BA.MOVE,1)}lapse(e,I){if(!e.hasAbility(O.TRUANT))return super.lapse(e,I);const L=e.getAbility().id!==O.TRUANT,N=e.getLastXMoves().find(()=>!0);return N&&N.move!==E.NONE&&(T.phaseManager.getCurrentPhase().cancel(),T.phaseManager.queueAbilityDisplay(e,L,!0),T.phaseManager.queueMessage(_.t("battlerTags:truantLapse",{pokemonNameWithAffix:Q(e)})),T.phaseManager.queueAbilityDisplay(e,L,!1)),!0}};r(f1,"TruantTag");let bG=f1;const F1=class F1 extends iS{constructor(){super(d.SLOW_START,O.SLOW_START,BA.TURN_END,5)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:slowStartOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){return e.hasAbility(this.ability)||(this.turnCount=1),super.lapse(e,I)}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:slowStartOnRemove",{pokemonNameWithAffix:Q(e)}),null,!1,null)}};r(F1,"SlowStartTag");let kG=F1;const Y1=class Y1 extends iS{constructor(e,I){super(e,I,BA.CUSTOM,1)}loadTag(e){super.loadTag(e),this.stat=e.stat,this.multiplier=e.multiplier}onAdd(e){super.onAdd(e);let I;dL.map(L=>e.getEffectiveStat(L,void 0,void 0,void 0,void 0,void 0,void 0,void 0,!0)).reduce((L,N,S)=>N>L?(I=dL[S],N):L,0),I=I,this.stat=I,this.multiplier=this.stat===c.SPD?1.5:1.3,T.phaseManager.queueMessage(_.t("battlerTags:highestStatBoostOnAdd",{pokemonNameWithAffix:Q(e),statName:_.t(aR(I))}),null,!1,null,!0)}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:highestStatBoostOnRemove",{pokemonNameWithAffix:Q(e),abilityName:fe[this.ability].name}))}};r(Y1,"HighestStatBoostTag");let Ia=Y1;const W1=class W1 extends Ia{constructor(e,I,...L){super(e,I),this.weatherTypes=L}loadTag(e){super.loadTag(e),this.weatherTypes=e.weatherTypes.map(I=>I)}};r(W1,"WeatherHighestStatBoostTag");let XG=W1;const h1=class h1 extends Ia{constructor(e,I,...L){super(e,I),this.terrainTypes=L}loadTag(e){super.loadTag(e),this.terrainTypes=e.terrainTypes.map(I=>I)}};r(h1,"TerrainHighestStatBoostTag");let QG=h1;const d1=class d1 extends CE{constructor(e,I,L){super(e,BA.MOVE_EFFECT,I,L)}onAdd(e){super.onAdd(e),e.setVisible(!1)}onRemove(e){T.tweens.addCounter({duration:xR(2),onComplete:r(()=>e.setVisible(!0),"onComplete")})}};r(d1,"SemiInvulnerableTag");let CS=d1;const p1=class p1 extends CE{constructor(e,I,L,N=1){super(e,BA.TURN_END,N,I,void 0,!0),this.immuneType=L}loadTag(e){super.loadTag(e),this.immuneType=e.immuneType}};r(p1,"TypeImmuneTag");let cC=p1;const g1=class g1 extends cC{constructor(e,I,L){super(e,I,t.GROUND,L)}onAdd(e){super.onAdd(e),this.sourceMove===E.MAGNET_RISE&&T.phaseManager.queueMessage(_.t("battlerTags:magnetRisenOnAdd",{pokemonNameWithAffix:Q(e)}))}onRemove(e){super.onRemove(e),this.sourceMove===E.MAGNET_RISE&&T.phaseManager.queueMessage(_.t("battlerTags:magnetRisenOnRemove",{pokemonNameWithAffix:Q(e)}))}};r(g1,"FloatingTag");let JG=g1;const m1=class m1 extends CE{constructor(e,I,L,N,S){super(e,BA.TURN_END,1,I),this.boostedType=L,this.boostValue=N,this.oneUse=S}loadTag(e){super.loadTag(e),this.boostedType=e.boostedType,this.boostValue=e.boostValue,this.oneUse=e.oneUse}lapse(e,I){return I!==BA.CUSTOM||super.lapse(e,I)}onAdd(e){T.phaseManager.queueMessage(_.t("abilityTriggers:typeImmunityPowerBoost",{pokemonNameWithAffix:Q(e),typeName:_.t(`pokemonInfo:Type.${t[this.boostedType]}`)}))}onOverlap(e){T.phaseManager.queueMessage(_.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:Q(e)}))}};r(m1,"TypeBoostTag");let ta=m1;const y1=class y1 extends CE{constructor(e,I){super(e,BA.TURN_END,1,I,void 0,!0)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:critBoostOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){return I!==BA.CUSTOM||super.lapse(e,I)}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:critBoostOnRemove",{pokemonNameWithAffix:Q(e)}))}};r(y1,"CritBoostTag");let La=y1;const V1=class V1 extends La{constructor(){super(d.CRIT_BOOST,E.DRAGON_CHEER)}onAdd(e){super.onAdd(e),this.typesOnAdd=e.getTypes(!0)}};r(V1,"DragonCheerTag");let BC=V1;const w1=class w1 extends CE{constructor(e){super(d.SALT_CURED,BA.TURN_END,1,E.SALT_CURE,e)}loadTag(e){super.loadTag(e),this.sourceIndex=e.sourceIndex}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:saltCuredOnAdd",{pokemonNameWithAffix:Q(e)})),this.sourceIndex=T.getPokemonById(this.sourceId).getBattlerIndex()}lapse(e,I){const L=I!==BA.CUSTOM||super.lapse(e,I);if(L){T.phaseManager.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),e.getBattlerIndex(),jE.SALT_CURE);const N=new nE(!1);if(SE("BlockNonDirectDamageAbAttr",e,N),!N.value){const S=e.isOfType(t.STEEL)||e.isOfType(t.WATER);e.damageAndUpdate(UE(S?e.getMaxHp()/4:e.getMaxHp()/8),{result:_E.INDIRECT}),T.phaseManager.queueMessage(_.t("battlerTags:saltCuredLapse",{pokemonNameWithAffix:Q(e),moveName:this.getMoveName()}))}}return L}};r(w1,"SaltCuredTag");let $G=w1;const v1=class v1 extends CE{constructor(e){super(d.CURSED,BA.TURN_END,1,E.CURSE,e,!0)}loadTag(e){super.loadTag(e),this.sourceIndex=e.sourceIndex}onAdd(e){super.onAdd(e),this.sourceIndex=T.getPokemonById(this.sourceId).getBattlerIndex()}lapse(e,I){const L=I!==BA.CUSTOM||super.lapse(e,I);if(L){T.phaseManager.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),e.getBattlerIndex(),jE.SALT_CURE);const N=new nE(!1);SE("BlockNonDirectDamageAbAttr",e,N),N.value||(e.damageAndUpdate(UE(e.getMaxHp()/4),{result:_E.INDIRECT}),T.phaseManager.queueMessage(_.t("battlerTags:cursedLapse",{pokemonNameWithAffix:Q(e)})))}return L}};r(v1,"CursedTag");let qG=v1;const x1=class x1 extends CE{constructor(e,I,L){super(e,I,1,L)}};r(x1,"RemovedTypeTag");let Na=x1;const Z1=class Z1 extends CE{constructor(e,I,L){super(e,I,1,L)}};r(Z1,"GroundedTag");let Sa=Z1;const b1=class b1 extends CE{constructor(){super(d.ROOSTED,BA.TURN_END,1,E.ROOST)}onRemove(e){const I=e.getTypes(),L=e.getTypes(!1,!1,!0),N=I.includes(t.GRASS)&&!L.includes(t.GRASS),S=I.includes(t.GHOST)&&!L.includes(t.GHOST);if(this.isBaseFlying){let n=[];this.isBasePureFlying?N||S?(n=I.filter(i=>i!==t.NORMAL),n.push(t.FLYING)):n=[t.FLYING]:(n=[...I],n.push(t.FLYING)),e.summonData.types=n,e.updateInfo()}}onAdd(e){const I=e.getTypes(),L=e.getTypes(!1,!1,!0),N=L.length===2,S=I.length===2;if(this.isBaseFlying=L.includes(t.FLYING),this.isBasePureFlying=L[0]===t.FLYING&&L.length===1,this.isBaseFlying){let n;this.isBasePureFlying&&!S?n=[t.NORMAL]:e.getTag(Na)&&N&&!S?n=[t.UNKNOWN]:n=I.filter(i=>i!==t.FLYING),e.summonData.types=n,e.updateInfo()}}};r(b1,"RoostedTag");let zG=b1;const k1=class k1 extends CE{constructor(e){super(e,BA.CUSTOM,1)}canAdd(e){return e.formIndex===0}onAdd(e){super.onAdd(e),e.formIndex!==0&&T.triggerPokemonFormChange(e,DE)}onRemove(e){super.onRemove(e),T.triggerPokemonFormChange(e,DE)}};r(k1,"FormBlockDamageTag");let KC=k1;const X1=class X1 extends KC{canAdd(e){var N;const I=(N=T.arena.weather)==null?void 0:N.weatherType,L=I===Z.HAIL||I===Z.SNOW;return super.canAdd(e)||L}};r(X1,"IceFaceBlockDamageTag");let jG=X1;const Q1=class Q1 extends CE{constructor(e){super(d.COMMANDED,BA.CUSTOM,0,E.NONE,e)}get tatsugiriFormKey(){return this._tatsugiriFormKey}onAdd(e){var I;this._tatsugiriFormKey=((I=this.getSourcePokemon())==null?void 0:I.getFormKey())??"curly",T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],2)}onRemove(e){var I;(I=this.getSourcePokemon())!=null&&I.isActive(!0)&&T.triggerPokemonBattleAnim(e,Yt.COMMANDER_REMOVE)}loadTag(e){super.loadTag(e),this._tatsugiriFormKey=e._tatsugiriFormKey}};r(Q1,"CommandedTag");let fC=Q1;const J1=class J1 extends CE{constructor(e=E.NONE){super(d.STOCKPILING,BA.CUSTOM,1,e),this.stockpiledCount=0,this.statChangeCounts={[c.DEF]:0,[c.SPDEF]:0},this.onStatStagesChanged=(I,L,N)=>{const S=N[L.indexOf(c.DEF)]??0,n=N[L.indexOf(c.SPDEF)]??0;S&&this.statChangeCounts[c.DEF]++,n&&this.statChangeCounts[c.SPDEF]++}}loadTag(e){var I,L;super.loadTag(e),this.stockpiledCount=e.stockpiledCount||0,this.statChangeCounts={[c.DEF]:((I=e.statChangeCounts)==null?void 0:I[c.DEF])??0,[c.SPDEF]:((L=e.statChangeCounts)==null?void 0:L[c.SPDEF])??0}}onAdd(e){this.stockpiledCount<3&&(this.stockpiledCount++,T.phaseManager.queueMessage(_.t("battlerTags:stockpilingOnAdd",{pokemonNameWithAffix:Q(e),stockpiledCount:this.stockpiledCount})),T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.SPDEF,c.DEF],1,!0,!1,!0,this.onStatStagesChanged))}onOverlap(e){this.onAdd(e)}onRemove(e){const I=this.statChangeCounts[c.DEF],L=this.statChangeCounts[c.SPDEF];I&&T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.DEF],-I,!0,!1,!0),L&&T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.SPDEF],-L,!0,!1,!0)}};r(J1,"StockpilingTag");let gL=J1;const $1=class $1 extends CE{constructor(e,I){super(e,BA.HIT,0,I)}lapse(e,I){if(e.getTag(d.UNDERWATER))return!0;const L=T.phaseManager.getCurrentPhase();if(L!=null&&L.is("MoveEffectPhase")){const N=L.getUserPokemon();if(!N)return!1;if(L.move.hitsSubstitute(N,e))return!0;const S=new nE(!1);SE("BlockNonDirectDamageAbAttr",N,S),S.value||N.damageAndUpdate(Math.max(1,Math.floor(N.getMaxHp()/4)),{result:_E.INDIRECT}),this.tagType===d.GULP_MISSILE_ARROKUDA?T.phaseManager.unshiftNew("StatStageChangePhase",N.getBattlerIndex(),!1,[c.DEF],-1):N.trySetStatus(J.PARALYSIS,!0,e)}return!1}canAdd(e){const I=[E.SURF,E.DIVE].includes(this.sourceMove),L=e.formIndex===0&&!e.getTag(d.GULP_MISSILE_ARROKUDA)&&!e.getTag(d.GULP_MISSILE_PIKACHU),N=e.species.speciesId===A.CRAMORANT;return I&&L&&N}onAdd(e){super.onAdd(e),T.triggerPokemonFormChange(e,DE)}onRemove(e){super.onRemove(e),T.triggerPokemonFormChange(e,DE)}};r($1,"GulpMissileTag");let FC=$1;const q1=class q1 extends CE{constructor(e,I,L,N){super(e,BA.CUSTOM,1,I),this.defenderType=L,this.allowedTypes=N}loadTag(e){super.loadTag(e),this.defenderType=e.defenderType,this.allowedTypes=e.allowedTypes}ignoreImmunity(e,I){return e===this.defenderType&&this.allowedTypes.includes(I)}};r(q1,"ExposedTag");let US=q1;const z1=class z1 extends bO{constructor(e,I){super(d.HEAL_BLOCK,[BA.PRE_MOVE,BA.TURN_END],e,I)}onActivation(e){return _.t("battle:battlerTagsHealBlock",{pokemonNameWithAffix:Q(e)})}isMoveRestricted(e){return FA[e].hasFlag(JA.TRIAGE_MOVE)&&FA[e].category===G.STATUS}isMoveTargetRestricted(e,I,L){const N=new VA(FA[e].category);return Ce("StatusCategoryOnAllyAttr",I,L,FA[e],N),FA[e].hasAttr("HealOnAllyAttr")&&N.value===G.STATUS}selectionDeniedText(e,I){return _.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:Q(e),moveName:FA[I].name,healBlockName:FA[E.HEAL_BLOCK].name})}interruptedText(e,I){return _.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:Q(e),moveName:FA[I].name,healBlockName:FA[E.HEAL_BLOCK].name})}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battle:battlerTagsHealBlockOnRemove",{pokemonNameWithAffix:Q(e)}),null,!1,null)}};r(z1,"HealBlockTag");let AP=z1;const j1=class j1 extends CE{constructor(){super(d.TAR_SHOT,BA.CUSTOM,0)}canAdd(e){return!e.isTerastallized}onAdd(e){T.phaseManager.queueMessage(_.t("battlerTags:tarShotOnAdd",{pokemonNameWithAffix:Q(e)}))}};r(j1,"TarShotTag");let YC=j1;const Ac=class Ac extends CE{constructor(){super(d.ELECTRIFIED,BA.TURN_END,1,E.ELECTRIFY)}onAdd(e){T.phaseManager.queueMessage(_.t("battlerTags:electrifiedOnAdd",{pokemonNameWithAffix:Q(e)}))}};r(Ac,"ElectrifiedTag");let EP=Ac;const Ec=class Ec extends CE{constructor(e=E.AUTOTOMIZE){super(d.AUTOTOMIZED,BA.CUSTOM,1,e),this.autotomizeCount=0}onAdd(e){e.getWeight()>.1&&T.phaseManager.queueMessage(_.t("battlerTags:autotomizeOnAdd",{pokemonNameWithAffix:Q(e)})),this.autotomizeCount+=1}onOverlap(e){this.onAdd(e)}};r(Ec,"AutotomizedTag");let WC=Ec;const ec=class ec extends CE{constructor(e,I){super(d.SUBSTITUTE,[BA.PRE_MOVE,BA.AFTER_MOVE,BA.HIT],0,e,I,!0)}onAdd(e){this.hp=Math.floor(T.getPokemonById(this.sourceId).getMaxHp()/4),this.sourceInFocus=!1,T.triggerPokemonBattleAnim(e,Yt.SUBSTITUTE_ADD),this.sourceMove===E.SHED_TAIL?T.phaseManager.queueMessage(_.t("battlerTags:shedTailOnAdd",{pokemonNameWithAffix:Q(e)}),1500):T.phaseManager.queueMessage(_.t("battlerTags:substituteOnAdd",{pokemonNameWithAffix:Q(e)}),1500),e.findAndRemoveTags(I=>I instanceof kO)}onRemove(e){this.sourceInFocus?this.sprite.destroy():T.triggerPokemonBattleAnim(e,Yt.SUBSTITUTE_REMOVE,[this.sprite]),T.phaseManager.queueMessage(_.t("battlerTags:substituteOnRemove",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){switch(I){case BA.PRE_MOVE:this.onPreMove(e);break;case BA.AFTER_MOVE:this.onAfterMove(e);break;case BA.HIT:this.onHit(e);break}return I!==BA.CUSTOM}onPreMove(e){T.triggerPokemonBattleAnim(e,Yt.SUBSTITUTE_PRE_MOVE,[this.sprite]),this.sourceInFocus=!0}onAfterMove(e){T.triggerPokemonBattleAnim(e,Yt.SUBSTITUTE_POST_MOVE,[this.sprite]),this.sourceInFocus=!1}onHit(e){const I=T.phaseManager.getCurrentPhase();if(I!=null&&I.is("MoveEffectPhase")){const L=I.getUserPokemon();if(!L)return;const N=I.move;L.turnData.hitCount===L.turnData.hitsLeft&&N.hitsSubstitute(L,e)&&T.phaseManager.queueMessage(_.t("battlerTags:substituteOnHit",{pokemonNameWithAffix:Q(e)}))}}loadTag(e){super.loadTag(e),this.hp=e.hp}};r(ec,"SubstituteTag");let LI=ec;const Rc=class Rc extends CE{constructor(){super(d.MYSTERY_ENCOUNTER_POST_SUMMON,BA.CUSTOM,1)}onAdd(e){super.onAdd(e)}lapse(e,I){const L=super.lapse(e,I);if(I===BA.CUSTOM){const N=new nE(!1);SE("ProtectStatAbAttr",e,N),SE("ConditionalUserFieldProtectStatAbAttr",e,N,!1,e),N.value||e.mysteryEncounterBattleEffects&&e.mysteryEncounterBattleEffects(e)}return L}onRemove(e){super.onRemove(e)}};r(Rc,"MysteryEncounterPostSummonTag");let eP=Rc;const Oc=class Oc extends bO{constructor(e){super(d.TORMENT,BA.AFTER_MOVE,1,E.TORMENT,e)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:tormentOnAdd",{pokemonNameWithAffix:Q(e)}),1500)}lapse(e,I){return e.isActive(!0)}isMoveRestricted(e,I){if(!I)return!1;const L=I.getLastXMoves(1)[0];if(!L)return!1;const S=FA[L.move].hasAttr("ConsecutiveUseDoublePowerAttr")||I.getTag(d.FRENZY),n=L.result===De.SUCCESS||L.result===De.MISS;return L.move===e&&n&&L.move!==E.STRUGGLE&&!S}selectionDeniedText(e,I){return _.t("battle:moveDisabledTorment",{pokemonNameWithAffix:Q(e)})}};r(Oc,"TormentTag");let RP=Oc;const Ic=class Ic extends bO{constructor(){super(d.TAUNT,[BA.PRE_MOVE,BA.AFTER_MOVE],4,E.TAUNT)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:tauntOnAdd",{pokemonNameWithAffix:Q(e)}),1500)}onRemove(e){super.onRemove(e),T.phaseManager.queueMessage(_.t("battlerTags:tauntOnRemove",{pokemonNameWithAffix:Q(e)}))}isMoveRestricted(e){return FA[e].category===G.STATUS}selectionDeniedText(e,I){return _.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:Q(e),moveName:FA[I].name})}interruptedText(e,I){return _.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:Q(e),moveName:FA[I].name})}};r(Ic,"TauntTag");let OP=Ic;var TS;let uV=(TS=class extends bO{constructor(e){super(d.IMPRISON,[BA.PRE_MOVE,BA.AFTER_MOVE],1,E.IMPRISON,e)}lapse(e,I){const L=this.getSourcePokemon();return L?I===BA.PRE_MOVE?super.lapse(e,I)&&L.isActive(!0):L.isActive(!0):!1}isMoveRestricted(e,I){const L=this.getSourcePokemon();if(L){const N=L.getMoveset().map(S=>S.moveId);return(N==null?void 0:N.includes(e))&&L.isActive(!0)}return!1}selectionDeniedText(e,I){return _.t("battle:moveDisabledImprison",{pokemonNameWithAffix:Q(e),moveName:FA[I].name})}interruptedText(e,I){return _.t("battle:moveDisabledImprison",{pokemonNameWithAffix:Q(e),moveName:FA[I].name})}},r(TS,"ImprisonTag"),TS);const tc=class tc extends CE{constructor(e){super(d.SYRUP_BOMB,BA.TURN_END,3,E.SYRUP_BOMB,e)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:syrupBombOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I){var L;return this.sourceId&&!((L=T.getPokemonById(this.sourceId))!=null&&L.isActive(!0))?!1:(T.phaseManager.queueMessage(_.t("battlerTags:syrupBombLapse",{pokemonNameWithAffix:Q(e)})),T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.SPD],-1,!0,!1,!0),--this.turnCount>0)}};r(tc,"SyrupBombTag");let IP=tc;const Lc=class Lc extends CE{constructor(e){super(d.TELEKINESIS,[BA.PRE_MOVE,BA.AFTER_MOVE],3,e,void 0,!0)}onAdd(e){T.phaseManager.queueMessage(_.t("battlerTags:telekinesisOnAdd",{pokemonNameWithAffix:Q(e)}))}};r(Lc,"TelekinesisTag");let tP=Lc;const Nc=class Nc extends CE{constructor(e,I){super(d.POWER_TRICK,BA.CUSTOM,0,e,I,!0)}onAdd(e){this.swapStat(e),T.phaseManager.queueMessage(_.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:Q(e)}))}onRemove(e){this.swapStat(e),T.phaseManager.queueMessage(_.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:Q(e)}))}onOverlap(e){e.removeTag(this.tagType)}swapStat(e){const I=e.getStat(c.ATK,!1);e.setStat(c.ATK,e.getStat(c.DEF,!1),!1),e.setStat(c.DEF,I,!1)}};r(Nc,"PowerTrickTag");let hC=Nc;const Sc=class Sc extends CE{constructor(){super(d.GRUDGE,[BA.CUSTOM,BA.PRE_MOVE],1,E.GRUDGE)}onAdd(e){super.onAdd(e),T.phaseManager.queueMessage(_.t("battlerTags:grudgeOnAdd",{pokemonNameWithAffix:Q(e)}))}lapse(e,I,L){if(I===BA.CUSTOM&&L){if(L.isActive()&&e.isOpponent(L)){const N=e.turnData.attacksReceived[0],S=L.getMoveset().find(n=>n.moveId===N.move);S&&N.move!==E.STRUGGLE&&(S.ppUsed=S.getMovePp(),T.phaseManager.queueMessage(_.t("battlerTags:grudgeLapse",{pokemonNameWithAffix:Q(e),moveName:S.getName()})))}return!1}return super.lapse(e,I)}};r(Sc,"GrudgeTag");let LP=Sc;const Tc=class Tc extends CE{constructor(){super(d.PSYCHO_SHIFT,BA.AFTER_MOVE,1,E.PSYCHO_SHIFT)}lapse(e,I){return e.status&&e.isActive(!0)&&(T.phaseManager.queueMessage($t(e.status.effect,Q(e))),e.resetStatus(),e.updateInfo()),!1}};r(Tc,"PsychoShiftTag");let NP=Tc;const sc=class sc extends CE{constructor(){super(d.MAGIC_COAT,BA.TURN_END,1,E.MAGIC_COAT)}onAdd(e){T.phaseManager.queueMessage(_.t("battlerTags:magicCoatOnAdd",{pokemonNameWithAffix:Q(e)}))}};r(sc,"MagicCoatTag");let SP=sc;function t3(R,e,I,L){switch(R){case d.RECHARGING:return new rG(I);case d.BEAK_BLAST_CHARGING:return new iG;case d.SHELL_TRAP:return new oC;case d.FLINCHED:return new UG(I);case d.INTERRUPTED:return new oG(I);case d.CONFUSED:return new MG(e,I);case d.INFATUATED:return new lG(I,L);case d.SEEDED:return new _G(L);case d.POWDER:return new GG;case d.NIGHTMARE:return new PG;case d.FRENZY:return new HG(e,I,L);case d.CHARGING:return new CE(R,BA.CUSTOM,1,I,L);case d.ENCORE:return new Oa(L);case d.HELPING_HAND:return new MC(L);case d.INGRAIN:return new uG(L);case d.AQUA_RING:return new BG;case d.DROWSY:return new fG;case d.TRAPPED:return new WO(R,BA.CUSTOM,e,I,L);case d.NO_RETREAT:return new CG(L);case d.BIND:return new FG(e,L);case d.WRAP:return new YG(e,L);case d.FIRE_SPIN:return new WG(e,L);case d.WHIRLPOOL:return new hG(e,L);case d.CLAMP:return new dG(e,L);case d.SAND_TOMB:return new pG(e,L);case d.MAGMA_STORM:return new gG(e,L);case d.SNAP_TRAP:return new mG(e,L);case d.THUNDER_CAGE:return new yG(e,L);case d.INFESTATION:return new VG(e,L);case d.PROTECTED:return new lC(I);case d.SPIKY_SHIELD:return new wG(I,8);case d.KINGS_SHIELD:return new fT(I,R,c.ATK,-1);case d.OBSTRUCT:return new fT(I,R,c.DEF,-2);case d.SILK_TRAP:return new fT(I,R,c.SPD,-1);case d.BANEFUL_BUNKER:return new PC(I,R,J.POISON);case d.BURNING_BULWARK:return new PC(I,R,J.BURN);case d.ENDURING:return new HC(R,BA.TURN_END,I);case d.ENDURE_TOKEN:return new HC(R,BA.AFTER_HIT,I);case d.STURDY:return new vG(I);case d.PERISH_SONG:return new xG(e);case d.CENTER_OF_ATTENTION:return new uC(I);case d.TRUANT:return new bG;case d.SLOW_START:return new kG;case d.PROTOSYNTHESIS:return new XG(R,O.PROTOSYNTHESIS,Z.SUNNY,Z.HARSH_SUN);case d.QUARK_DRIVE:return new QG(R,O.QUARK_DRIVE,bA.ELECTRIC);case d.FLYING:case d.UNDERGROUND:case d.UNDERWATER:case d.HIDDEN:return new CS(R,e,I);case d.FIRE_BOOST:return new ta(R,I,t.FIRE,1.5,!1);case d.CRIT_BOOST:return new La(R,I);case d.DRAGON_CHEER:return new BC;case d.ALWAYS_CRIT:case d.IGNORE_ACCURACY:return new CE(R,BA.TURN_END,2,I);case d.ALWAYS_GET_HIT:case d.RECEIVE_DOUBLE_DAMAGE:return new CE(R,BA.PRE_MOVE,1,I);case d.BYPASS_SLEEP:return new CE(R,BA.TURN_END,e,I);case d.IGNORE_FLYING:return new Sa(R,BA.CUSTOM,I);case d.ROOSTED:return new zG;case d.BURNED_UP:return new Na(R,BA.CUSTOM,I);case d.DOUBLE_SHOCKED:return new Na(R,BA.CUSTOM,I);case d.SALT_CURED:return new $G(L);case d.CURSED:return new qG(L);case d.CHARGED:return new ta(R,I,t.ELECTRIC,2,!0);case d.FLOATING:return new JG(R,I,e);case d.MINIMIZED:return new KG;case d.DESTINY_BOND:return new DG(I,L);case d.ICE_FACE:return new jG(R);case d.DISGUISE:return new KC(R);case d.COMMANDED:return new fC(L);case d.STOCKPILING:return new gL(I);case d.OCTOLOCK:return new cG(L);case d.DISABLED:return new aG(L);case d.IGNORE_GHOST:return new US(R,I,t.GHOST,[t.NORMAL,t.FIGHTING]);case d.IGNORE_DARK:return new US(R,I,t.DARK,[t.PSYCHIC]);case d.GULP_MISSILE_ARROKUDA:case d.GULP_MISSILE_PIKACHU:return new FC(R,I);case d.TAR_SHOT:return new YC;case d.ELECTRIFIED:return new EP;case d.THROAT_CHOPPED:return new sG;case d.GORILLA_TACTICS:return new nG;case d.UNBURDEN:return new ZG;case d.SUBSTITUTE:return new LI(I,L);case d.AUTOTOMIZED:return new WC;case d.MYSTERY_ENCOUNTER_POST_SUMMON:return new eP;case d.HEAL_BLOCK:return new AP(e,I);case d.TORMENT:return new RP(L);case d.TAUNT:return new OP;case d.IMPRISON:return new uV(L);case d.SYRUP_BOMB:return new IP(L);case d.TELEKINESIS:return new tP(I);case d.POWER_TRICK:return new hC(I,L);case d.GRUDGE:return new LP;case d.PSYCHO_SHIFT:return new NP;case d.MAGIC_COAT:return new SP;case d.NONE:default:return new CE(R,BA.CUSTOM,e,I,L)}}r(t3,"getBattlerTag");function cV(R){const e=t3(R.tagType,R.turnCount,R.sourceMove,R.sourceId);return e.loadTag(R),e}r(cV,"loadBattlerTag");function rH(R){const e=T.phaseManager.getCurrentPhase();return e!=null&&e.is("MoveEffectPhase")?{phase:e,attacker:e.getPokemon(),move:e.move}:null}r(rH,"getMoveEffectPhaseData");var KO=(R=>(R[R.MAGMA_BG=0]="MAGMA_BG",R[R.MAGMA_SPOUT=1]="MAGMA_SPOUT",R[R.SMOKESCREEN=2]="SMOKESCREEN",R[R.DANCE=3]="DANCE",R))(KO||{});const ac=class ac{constructor(e){if(this.frameTimedEvents=new Map,e){this.id=e.id,this.graphic=e.graphic;const I=e.frames;I.map(N=>{for(let S=0;S<N.length;S++)N[S]=new TP(N[S])}),this.frames=I;const L=e.frameTimedEvents;for(const N of Object.keys(L)){const S=[];for(const n of L[N]){let i;switch(n.eventType){case"AnimTimedSoundEvent":i=new Ta(n.frameIndex,n.resourceName,n);break;case"AnimTimedAddBgEvent":i=new sa(n.frameIndex,n.resourceName,n);break;case"AnimTimedUpdateBgEvent":i=new mC(n.frameIndex,n.resourceName,n);break}i&&S.push(i)}this.frameTimedEvents.set(Number.parseInt(N),S)}this.position=e.position,this.hue=e.hue}else this.frames=[]}getSoundResourceNames(){const e=new Set;for(const I of this.frameTimedEvents.values())for(const L of I)L instanceof Ta&&L.resourceName&&e.add(L.resourceName);return Array.from(e.values())}getBackgroundResourceNames(){const e=new Set;for(const I of this.frameTimedEvents.values())for(const L of I)L instanceof sa&&L.resourceName&&e.add(L.resourceName);return Array.from(e.values())}};r(ac,"AnimConfig");let ZO=ac;const nc=class nc{constructor(e,I,L,N,S,n,i,C,o,l,H,P,K,f,h,F,w,m,y,x,q,IA,$,tA,UA,RA){if(this.x=RA?e:((e||0)-128)*.5,this.y=RA?I:((I||0)-224)*.5,L?this.zoomX=L:RA&&(this.zoomX=0),N?this.zoomY=N:RA&&(this.zoomY=0),S?this.angle=S:RA&&(this.angle=0),n?this.mirror=n:RA&&(this.mirror=!1),i?this.visible=i:RA&&(this.visible=!1),C?this.blendType=C:RA&&(this.blendType=ot.NORMAL),!RA){let OA=kE.GRAPHIC;switch(o){case-2:OA=kE.TARGET;break;case-1:OA=kE.USER;break}this.target=OA,this.graphicFrame=o>=0?o:0}l?this.opacity=l:RA&&(this.opacity=0),H||P||K||f?this.color=[H||0,P||0,K||0,f||0]:RA&&(this.color=[0,0,0,0]),h||F||w||m?this.tone=[h||0,F||0,w||0,m||0]:RA&&(this.tone=[0,0,0,0]),y||x||q||IA?this.flash=[y||0,x||0,q||0,IA||0]:RA&&(this.flash=[0,0,0,0]),$?this.locked=$:RA&&(this.locked=!1),tA?this.priority=tA:RA&&(this.priority=0),this.focus=UA||AL.TARGET}};r(nc,"AnimFrame");let dC=nc;const rc=class rc extends dC{constructor(e){const I=e.color||[0,0,0,0],L=e.tone||[0,0,0,0],N=e.flash||[0,0,0,0];super(e.x,e.y,e.zoomX,e.zoomY,e.angle,e.mirror,e.visible,e.blendType,e.graphicFrame,e.opacity,I[0],I[1],I[2],I[3],L[0],L[1],L[2],L[3],N[0],N[1],N[2],N[3],e.locked,e.priority,e.focus,!0),this.target=e.target,this.graphicFrame=e.graphicFrame}};r(rc,"ImportedAnimFrame");let TP=rc;const ic=class ic{constructor(e,I){this.frameIndex=e,this.resourceName=I}};r(ic,"AnimTimedEvent");let pC=ic;const Cc=class Cc extends pC{constructor(e,I,L){super(e,I),this.volume=100,this.pitch=100,L&&(this.volume=L.volume,this.pitch=L.pitch)}execute(e){const I={rate:this.pitch*.01,volume:this.volume*.01};if(this.resourceName){try{T.playSound(`battle_anims/${this.resourceName}`,I)}catch(L){console.error(L)}return Math.ceil(T.sound.get(`battle_anims/${this.resourceName}`).totalDuration*1e3/33.33)}return Math.ceil(e.user.cry(I).totalDuration*1e3/33.33)}getEventType(){return"AnimTimedSoundEvent"}};r(Cc,"AnimTimedSoundEvent");let Ta=Cc;const Uc=class Uc extends pC{constructor(e,I,L){super(e,I),this.bgX=0,this.bgY=0,this.opacity=0,this.duration=0,L&&(this.bgX=L.bgX,this.bgY=L.bgY,this.opacity=L.opacity,this.duration=L.duration)}};r(Uc,"AnimTimedBgEvent");let gC=Uc;const oc=class oc extends gC{execute(e,I){const L={};return this.bgX!==void 0&&(L.x=this.bgX*.5-320),this.bgY!==void 0&&(L.y=this.bgY*.5-284),this.opacity!==void 0&&(L.alpha=(this.opacity||0)/255),Object.keys(L).length&&T.tweens.add(Object.assign({targets:e.bgSprite,duration:xR(this.duration*3)},L)),this.duration*2}getEventType(){return"AnimTimedUpdateBgEvent"}};r(oc,"AnimTimedUpdateBgEvent");let mC=oc;const Mc=class Mc extends gC{execute(e,I){e.bgSprite&&e.bgSprite.destroy(),e.bgSprite=this.resourceName?T.add.tileSprite(this.bgX-320,this.bgY-284,896,576,this.resourceName):T.add.rectangle(this.bgX-320,this.bgY-284,896,576,0),e.bgSprite.setOrigin(0,0),e.bgSprite.setScale(1.25),e.bgSprite.setAlpha(this.opacity/255),T.field.add(e.bgSprite);const L=T.getEnemyPokemon(!1)??T.getPlayerPokemon(!1);return SA(I)?L!=null&&L.isOnField()&&T.field.moveBelow(e.bgSprite,L):T.field.moveTo(e.bgSprite,I),T.tweens.add({targets:e.bgSprite,duration:xR(this.duration*3)}),this.duration*2}getEventType(){return"AnimTimedAddBgEvent"}};r(Mc,"AnimTimedAddBgEvent");let sa=Mc;const ZR=new Map,bR=new Map,R_=new Map,FT=new Map;function $7(){return new Promise(R=>{const e=sS(jE),I=nR(jE),L=[];for(let N=0;N<I.length;N++){const S=I[N];L.push(T.cachedFetch(`./battle-anims/common-${e[N].toLowerCase().replace(/\_/g,"-")}.json`).then(n=>n.json()).then(n=>R_.set(S,new ZO(n))))}Promise.allSettled(L).then(()=>R())})}r($7,"initCommonAnims");function L3(R){return new Promise(e=>{if(ZR.has(R))if(ZR.get(R)!==null)e();else{const I=setInterval(()=>{if(ZR.get(R)!==null){const L=FA[R].isChargingMove()?FA[R]:FA[R].getAttrs("DelayedAttackAttr")[0]??FA[R].getAttrs("BeakBlastHeaderAttr")[0];if(L&&bR.get(L.chargeAnim)===null)return;clearInterval(I),e()}},50)}else{ZR.set(R,null);const I=FA[R].is("AttackMove")?E.TACKLE:FA[R].is("SelfStatusMove")?E.FOCUS_ENERGY:E.TAIL_WHIP;r(N=>{T.cachedFetch(`./battle-anims/${x4(N)}.json`).then(S=>{const n=S.headers.get("content-type");return!S.ok||(n==null?void 0:n.indexOf("application/json"))===-1?(E2(N,I),e2(N,S.status,S.statusText),e()):S.json()}).then(S=>{Array.isArray(S)?(ni(N,S[0]),ni(N,S[1])):ni(N,S);const n=FA[N].isChargingMove()?FA[N]:FA[N].getAttrs("DelayedAttackAttr")[0]??FA[N].getAttrs("BeakBlastHeaderAttr")[0];n?BV(n.chargeAnim).then(()=>e()):e()}).catch(S=>(E2(N,I),e2(N,S),e()))},"fetchAnimAndResolve")(R)}})}r(L3,"initMoveAnim");function E2(R,e){ni(R,ZR.get(e))}r(E2,"useDefaultAnim");function e2(R,...e){const I=x4(R);console.warn(`Could not load animation file for move '${I}'`,...e)}r(e2,"logMissingMoveAnim");async function q7(R){const e=ue(R),I=sS(KO),L=[];for(const N of e)FT.has(N)&&!SA(FT.get(N))||L.push(T.cachedFetch(`./battle-anims/encounter-${I[N].toLowerCase().replace(/\_/g,"-")}.json`).then(S=>S.json()).then(S=>FT.set(N,new ZO(S))));await Promise.allSettled(L)}r(q7,"initEncounterAnims");function BV(R){return new Promise(e=>{if(bR.has(R))if(bR.get(R)!==null)e();else{const I=setInterval(()=>{bR.get(R)!==null&&(clearInterval(I),e())},50)}else bR.set(R,null),T.cachedFetch(`./battle-anims/${et[R].toLowerCase().replace(/\_/g,"-")}.json`).then(I=>I.json()).then(I=>{Array.isArray(I)?(i_(R,I[0]),i_(R,I[1])):i_(R,I),e()})})}r(BV,"initMoveChargeAnim");function ni(R,e){const I=new ZO(e);if(ZR.get(R)===null){ZR.set(R,I);return}ZR.set(R,[ZR.get(R),I])}r(ni,"populateMoveAnim");function i_(R,e){const I=new ZO(e);if(bR.get(R)===null){bR.set(R,I);return}bR.set(R,[bR.get(R),I])}r(i_,"populateMoveChargeAnim");function z7(R){return new Promise(e=>{iH(Array.from(R_.values()),R).then(()=>e())})}r(z7,"loadCommonAnimAssets");async function j7(R){await iH(Array.from(FT.values()),R)}r(j7,"loadEncounterAnimAssets");function N3(R,e){return new Promise(I=>{const L=R.flatMap(N=>ZR.get(N));for(const N of R){const S=FA[N].isChargingMove()?FA[N]:FA[N].getAttrs("DelayedAttackAttr")[0]??FA[N].getAttrs("BeakBlastHeaderAttr")[0];if(S){const n=bR.get(S.chargeAnim);L.push(n instanceof ZO?n:n[0]),Array.isArray(n)&&L.push(n[1])}}iH(L,e).then(()=>I())})}r(N3,"loadMoveAnimAssets");function iH(R,e){return new Promise(I=>{var S;const L=new Set,N=new Set;for(const n of R){if(!((S=n.frames)!=null&&S.length))continue;const i=n.getSoundResourceNames();for(const o of i)N.add(o);const C=n.getBackgroundResourceNames();for(const o of C)L.add(o);n.graphic&&T.loadSpritesheet(n.graphic,"battle_anims",96)}for(const n of L)T.loadImage(n,"battle_anims");for(const n of N)T.loadSe(n,"battle_anims",n);e?(T.load.once(wR.Loader.Events.COMPLETE,()=>I()),T.load.isLoading()||T.load.start()):I()})}r(iH,"loadAnimAssets");const C_=106,U_=116,o_=234,M_=52;function KV(R,e,I,L,N,S,n,i,C,o){const l=fV(R,e,I,L,C,o);return FV(N,S,n,i,l[0],l[1])}r(KV,"transformPoint");function fV(R,e,I,L,N,S){const n=I-R,i=L-e,C=n===0?0:(N-R)/n,o=i===0?0:(S-e)/i;return[C,o]}r(fV,"yAxisIntersect");function FV(R,e,I,L,N,S){const n=I-R,i=L-e,C=R+N*n,o=e+S*i;return[C,o]}r(FV,"repositionY");function YV(R,e,I,L){return R===e?!1:R<e?I>L:I<L}r(YV,"isReversed");const Dc=class Dc{constructor(e,I,L=!1){this.user=e??null,this.target=I??null,this.sprites=[],this.playRegardlessOfIssues=L}isHideUser(){return!1}isHideTarget(){return!1}getGraphicFrameData(e,I){var w,m;const L=new Map([[kE.GRAPHIC,new Map],[kE.USER,new Map],[kE.TARGET,new Map]]),N=this.isOppAnim(),S=N?this.target:this.user,n=N?this.user:this.target,i=I&&S!==n?n.getTag(d.SUBSTITUTE):null,C=S.x,o=S.y,l=S.getSprite().displayHeight/2,H=((w=i==null?void 0:i.sprite)==null?void 0:w.x)??n.x,P=((m=i==null?void 0:i.sprite)==null?void 0:m.y)??n.y,K=((i==null?void 0:i.sprite)??n.getSprite()).displayHeight/2;let f=0,h=0,F=0;for(const y of e){let x=y.x+106,q=y.y+116,IA=y.zoomX/100*(y.mirror?-1:1);const $=y.zoomY/100;switch(y.focus){case AL.TARGET:x+=H-o_,q+=P-K-M_;break;case AL.USER:x+=C-C_,q+=o-l-U_;break;case AL.USER_TARGET:{const RA=KV(this.srcLine[0],this.srcLine[1],this.srcLine[2],this.srcLine[3],this.dstLine[0],this.dstLine[1]-l,this.dstLine[2],this.dstLine[3]-K,x,q);x=RA[0],q=RA[1],y.target===kE.GRAPHIC&&YV(this.srcLine[0],this.srcLine[2],this.dstLine[0],this.dstLine[2])&&(IA=IA*-1)}break}const tA=-y.angle,UA=y.target===kE.GRAPHIC?f++:y.target===kE.USER?h++:F++;L.get(y.target).set(UA,{x,y:q,scaleX:IA,scaleY:$,angle:tA})}return L}play(e,I){var y,x;const L=this.isOppAnim(),N=L?this.target:this.user,S=L?this.user:this.target;if(!(S!=null&&S.isOnField())&&!this.playRegardlessOfIssues){I&&I();return}const n=e&&N!==S?S.getTag(LI):null,i=N.getSprite(),C=(n==null?void 0:n.sprite)??S.getSprite(),o={[kE.GRAPHIC]:[],[kE.USER]:[],[kE.TARGET]:[]},l=[],H=r(()=>{i.setPosition(0,0),i.setScale(1),i.setAlpha(1),i.pipelineData.tone=[0,0,0,0],i.setAngle(0),n?(C.setPosition(S.x-S.getSubstituteOffset()[0],S.y-S.getSubstituteOffset()[1]),C.setScale(S.getSpriteScale()*(S.isPlayer()?.5:1)),C.setAlpha(1)):(C.setPosition(0,0),C.setScale(1),C.setAlpha(1)),C.pipelineData.tone=[0,0,0,0],C.setAngle(0);const q=L?C:i,IA=L?i:C;!this.isHideUser()&&q&&q.setVisible(!0),!this.isHideTarget()&&(IA!==q||!this.isHideUser())&&IA.setVisible(!0);for(const $ of Object.values(o).flat())$&&$.destroy();this.bgSprite&&this.bgSprite.destroy(),I&&I()},"cleanUpAndComplete");if(!T.moveAnimations&&!this.playRegardlessOfIssues)return H();const P=this.getAnim(),K=N.x,f=N.y,h=((y=n==null?void 0:n.sprite)==null?void 0:y.x)??S.x,F=((x=n==null?void 0:n.sprite)==null?void 0:x.y)??S.y;this.srcLine=[C_,U_,o_,M_],this.dstLine=[K,f,h,F];let w=(P==null?void 0:P.frames.length)??0,m=0;T.tweens.addCounter({duration:xR(3),repeat:(P==null?void 0:P.frames.length)??0,onRepeat:r(()=>{m||(i.setVisible(!1),C.setVisible(!1));const q=P.frames[m],IA=this.getGraphicFrameData(P.frames[m],e);let $=0,tA=0,UA=0;for(const OA of q)if(OA.target!==kE.GRAPHIC){const NA=OA.target===kE.USER;if(NA&&S===N||this.playRegardlessOfIssues&&OA.target===kE.TARGET&&!S.isOnField())continue;const iA=o[NA?kE.USER:kE.TARGET],KA=NA?i:C;if((NA?$:tA)===iA.length)if(NA||!n){const LE=T.addPokemonSprite(NA?N:S,0,0,KA.texture,KA.frame.name,!0);["spriteColors","fusionSpriteColors"].map(cA=>LE.pipelineData[cA]=(NA?N:S).getSprite().pipelineData[cA]),LE.setPipelineData("spriteKey",(NA?N:S).getBattleSpriteKey()),LE.setPipelineData("shiny",(NA?N:S).shiny),LE.setPipelineData("variant",(NA?N:S).variant),LE.setPipelineData("ignoreFieldPos",!0),KA.on("animationupdate",(cA,nA)=>LE.setFrame(nA.textureFrame)),T.field.add(LE),iA.push(LE)}else{const LE=T.addFieldSprite(KA.x,KA.y,KA.texture);KA.on("animationupdate",(cA,nA)=>LE.setFrame(nA.textureFrame)),T.field.add(LE),iA.push(LE)}const wA=NA?$++:tA++,vA=iA[wA],$A=IA.get(OA.target).get(wA),RE=NA||!n?KA.parentContainer.scale:S.getSpriteScale()*(S.isPlayer()?.5:1);vA.setPosition($A.x,$A.y-KA.height/2*(RE-1)),vA.setAngle($A.angle),vA.setScale($A.scaleX*RE,$A.scaleY*RE),vA.setData("locked",OA.locked),vA.setAlpha(OA.opacity/255),vA.pipelineData.tone=OA.tone,vA.setVisible(OA.visible&&(NA?N.visible:S.visible)),vA.setBlendMode(OA.blendType===ot.NORMAL?wR.BlendModes.NORMAL:OA.blendType===ot.ADD?wR.BlendModes.ADD:wR.BlendModes.DIFFERENCE)}else{const NA=o[kE.GRAPHIC];if(UA===NA.length){const vA=T.addFieldSprite(0,0,P.graphic,1);NA.push(vA),T.field.add(vA),l.push(1)}const iA=UA++,KA=NA[iA];l[iA]!==OA.priority&&(l[iA]=OA.priority,r($A=>{let RE,LE=T.field.bringToTop;$A===0?(RE=T.getEnemyField().find(cA=>cA)??T.getPlayerField().find(cA=>cA),LE=T.field.moveBelow):$A===2&&this.bgSprite?(LE=T.field.moveAbove,RE=this.bgSprite):($A===2||$A===3)&&(LE=$A===2?T.field.moveBelow:T.field.moveAbove,OA.focus===AL.USER?RE=this.user:OA.focus===AL.TARGET&&(RE=this.target)),RE&&T.field.exists(RE)?LE.bind(T.field)(KA,RE):T.field.bringToTop(KA)},"setSpritePriority")(OA.priority)),KA.setFrame(OA.graphicFrame);const wA=IA.get(OA.target).get(iA);KA.setPosition(wA.x,wA.y),KA.setAngle(wA.angle),KA.setScale(wA.scaleX,wA.scaleY),KA.setAlpha(OA.opacity/255),KA.setVisible(OA.visible),KA.setBlendMode(OA.blendType===ot.NORMAL?wR.BlendModes.NORMAL:OA.blendType===ot.ADD?wR.BlendModes.ADD:wR.BlendModes.DIFFERENCE)}if(P!=null&&P.frameTimedEvents.has(m)){const OA=P.frames.length-m;for(const NA of P.frameTimedEvents.get(m))w=Math.max(OA+NA.execute(this),w)}const RA=nR(kE);for(const OA of RA){const NA=OA===kE.GRAPHIC?UA:OA===kE.USER?$:tA;if(NA<o[OA].length){const iA=o[OA].slice(NA,o[OA].length);for(const KA of iA)if(!KA.getData("locked")){const wA=o[OA].indexOf(KA);o[OA].splice(wA,1),OA===kE.GRAPHIC&&l.splice(wA,1),KA.destroy()}}}m++,w--},"onRepeat"),onComplete:r(()=>{for(const q of Object.values(o).flat())q&&!q.getData("locked")&&q.destroy();w?T.tweens.addCounter({duration:xR(w),onComplete:r(()=>H(),"onComplete")}):H()},"onComplete")})}getGraphicFrameDataWithoutTarget(e,I,L){var C;const N=new Map([[kE.GRAPHIC,new Map],[kE.USER,new Map],[kE.TARGET,new Map]]);let S=0,n=0,i=0;for(const o of e){let{x:l,y:H}=o;const P=o.zoomX/100*(o.mirror?-1:1),K=o.zoomY/100;l+=I,H+=L;const f=-o.angle,h=o.target===kE.GRAPHIC?S++:o.target===kE.USER?n++:i++;(C=N.get(o.target))==null||C.set(h,{x:l,y:H,scaleX:P,scaleY:K,angle:f})}return N}playWithoutTargets(e,I,L,N,S){const n={[kE.GRAPHIC]:[],[kE.USER]:[],[kE.TARGET]:[]},i=r(()=>{for(const P of Object.values(n).flat())P&&P.destroy();this.bgSprite&&this.bgSprite.destroy(),S&&S()},"cleanUpAndComplete");if(!T.moveAnimations&&!this.playRegardlessOfIssues)return i();const C=this.getAnim();this.srcLine=[C_,U_,o_,M_],this.dstLine=[150,75,e,I];let o=C.frames.length,l=0,H=T.field.getAll().slice(0);T.tweens.addCounter({duration:xR(3)*L,repeat:C.frames.length,onRepeat:r(()=>{var F;H=T.field.getAll().slice(0);const P=C.frames[l],K=this.getGraphicFrameDataWithoutTarget(C.frames[l],e,I);let f=0;for(const w of P){if(w.target!==kE.GRAPHIC)continue;const m=n[kE.GRAPHIC];if(f===m.length){const IA=T.addFieldSprite(0,0,C.graphic,1);m.push(IA),T.field.add(IA)}const y=f++,x=m[y];SA(w.priority)||r($=>{if(H.length>$){const tA=T.field.getIndex(H[$]);T.field.moveTo(x,tA)}else T.field.moveTo(x,T.field.getAll().length-1)},"setSpritePriority")(w.priority),x.setFrame(w.graphicFrame);const q=(F=K.get(w.target))==null?void 0:F.get(y);q&&(x.setPosition(q.x,q.y),x.setAngle(q.angle),x.setScale(q.scaleX,q.scaleY),x.setAlpha(w.opacity/255),x.setVisible(w.visible),x.setBlendMode(w.blendType===ot.NORMAL?wR.BlendModes.NORMAL:w.blendType===ot.ADD?wR.BlendModes.ADD:wR.BlendModes.DIFFERENCE))}if(C!=null&&C.frameTimedEvents.get(l)){const w=C.frames.length-l;for(const m of C.frameTimedEvents.get(l))o=Math.max(w+m.execute(this,N),o)}const h=nR(kE);for(const w of h){const m=f;if(m<n[w].length){const y=n[w].slice(m,n[w].length);for(const x of y)if(!x.getData("locked")){const q=n[w].indexOf(x);n[w].splice(q,1),x.destroy()}}}l++,o--},"onRepeat"),onComplete:r(()=>{for(const P of Object.values(n).flat())P&&!P.getData("locked")&&P.destroy();o?T.tweens.addCounter({duration:xR(o),onComplete:r(()=>i(),"onComplete")}):i()},"onComplete")})}};r(Dc,"BattleAnim");let aa=Dc;const lc=class lc extends aa{constructor(e,I,L,N=!1){super(I,L||I,N),this.commonAnim=e}getAnim(){return this.commonAnim?R_.get(this.commonAnim)??null:null}isOppAnim(){return!1}};r(lc,"CommonBattleAnim");let yC=lc;const _c=class _c extends aa{constructor(e,I,L,N=!1){super(I,T.getField()[L]??I,N),this.move=e}getAnim(){var e,I;return ZR.get(this.move)instanceof ZO?ZR.get(this.move):(I=ZR.get(this.move))==null?void 0:I[(e=this.user)!=null&&e.isPlayer()?0:1]}isOppAnim(){var e;return!((e=this.user)!=null&&e.isPlayer())&&Array.isArray(ZR.get(this.move))}isHideUser(){return FA[this.move].hasFlag(JA.HIDE_USER)}isHideTarget(){return FA[this.move].hasFlag(JA.HIDE_TARGET)}};r(_c,"MoveAnim");let sP=_c;const Gc=class Gc extends sP{constructor(e,I,L){super(I,L,0),this.chargeAnim=e}isOppAnim(){var e;return!((e=this.user)!=null&&e.isPlayer())&&Array.isArray(bR.get(this.chargeAnim))}getAnim(){var e,I;return bR.get(this.chargeAnim)instanceof ZO?bR.get(this.chargeAnim):(I=bR.get(this.chargeAnim))==null?void 0:I[(e=this.user)!=null&&e.isPlayer()?0:1]}};r(Gc,"MoveChargeAnim");let VC=Gc;const Pc=class Pc extends aa{constructor(e,I,L,N){super(I,L??I,!0),this.encounterAnim=e,this.oppAnim=N??!1}getAnim(){return FT.get(this.encounterAnim)??null}isOppAnim(){return this.oppAnim}};r(Pc,"EncounterBattleAnim");let Et=Pc;async function AZ(){const e=sS(jE).map(l=>l.toLowerCase()).map(l=>l.replace(/\_/g,"")),I=nR(jE),N=sS(et).map(l=>l.toLowerCase()).map(l=>l.replace(/\_/g," ")),S=nR(et),n=/name: (?:Common:)?(Opp )?(.*)/,i={};for(const l of nR(E).slice(1)){const H=E[l].toUpperCase().replace(/\_/g,"");i[H]=l}const C=[],o=[];for(let l=0;l<o.length;l++){const H=o[l].split("@").slice(1),P=H.find(y=>y.startsWith("name: "));let K,f,h;if(!P.startsWith("name: Move:")&&!(K=P.startsWith("name: OppMove:"))){const x=n.exec(P)[2].toLowerCase();e.indexOf(x)>-1?f=I[e.indexOf(x)]:N.indexOf(x)>-1&&(K=P.startsWith("name: Opp "),h=S[N.indexOf(x)])}const F=P.indexOf(":",5)+1,w=P.slice(F,P.indexOf(`
`,F));if(!i.hasOwnProperty(w)&&!f&&!h)continue;const m=f||h?new ZO:new ZO;m instanceof ZO&&(m.id=i[w]),f?R_.set(f,m):h?bR.set(h,K?[bR.get(h),m]:m):ZR.set(i[w],K?[ZR.get(i[w]),m]:m);for(let y=0;y<H.length;y++){const x=H[y],q=x.slice(0,x.indexOf(":")),IA=x.slice(q.length+1,x.lastIndexOf(`
`)).trim();switch(q){case"array":{const $=IA.split("  - - - ").slice(1);for(let tA=0;tA<$.length;tA++){m.frames.push([]);const RA=$[tA].split("    - - ");for(let OA=0;OA<RA.length;OA++){const NA=RA[OA].replace(/ {6}\- /g,"").split(`
`),iA=new dC(Number.parseFloat(NA[0]),Number.parseFloat(NA[1]),Number.parseFloat(NA[2]),Number.parseFloat(NA[11]),Number.parseFloat(NA[3]),Number.parseInt(NA[4])===1,Number.parseInt(NA[6])===1,Number.parseInt(NA[5]),Number.parseInt(NA[7]),Number.parseInt(NA[8]),Number.parseInt(NA[12]),Number.parseInt(NA[13]),Number.parseInt(NA[14]),Number.parseInt(NA[15]),Number.parseInt(NA[16]),Number.parseInt(NA[17]),Number.parseInt(NA[18]),Number.parseInt(NA[19]),Number.parseInt(NA[21]),Number.parseInt(NA[22]),Number.parseInt(NA[23]),Number.parseInt(NA[24]),Number.parseInt(NA[20])===1,Number.parseInt(NA[25]),Number.parseInt(NA[26]));m.frames[tA].push(iA)}}break}case"graphic":{const $=IA!=="''"?IA:"";m.graphic=$.indexOf(".")>-1?$.slice(0,IA.indexOf(".")):$;break}case"timing":{const $=IA.split("- !ruby/object:PBAnimTiming ").slice(1);for(let tA=0;tA<$.length;tA++){const UA=$[tA].replace(/\n/g," ").replace(/[ ]{2,}/g," ").replace(/[a-z]+: ! '', /gi,"").replace(/name: (.*?),/,'name: "$1",').replace(/flashColor: !ruby\/object:Color { alpha: ([\d\.]+), blue: ([\d\.]+), green: ([\d\.]+), red: ([\d\.]+)}/,"flashRed: $4, flashGreen: $3, flashBlue: $2, flashAlpha: $1"),RA=Number.parseInt(/frame: (\d+)/.exec(UA)[1]);let OA=/name: "(.*?)"/.exec(UA)[1].replace("''","");const NA=Number.parseInt(/timingType: (\d)/.exec(UA)[1]);let iA;switch(NA){case 0:if(OA&&OA.indexOf(".")===-1){let vA;["wav","mp3","m4a"].every($A=>C.indexOf(`${OA}.${$A}`)>-1?(vA=$A,!1):!0),vA||(vA=".wav"),OA+=`.${vA}`}iA=new Ta(RA,OA);break;case 1:iA=new sa(RA,OA.slice(0,OA.indexOf(".")));break;case 2:iA=new mC(RA,OA.slice(0,OA.indexOf(".")));break}if(!iA)continue;const KA=/([a-z]+): (.*?)(?:,|\})/gi;let wA;for(;wA=KA.exec(UA);){const vA=wA[1];let $A=wA[2];switch(vA){case"bgX":case"bgY":$A=Number.parseFloat($A);break;case"volume":case"pitch":case"opacity":case"colorRed":case"colorGreen":case"colorBlue":case"colorAlpha":case"duration":case"flashScope":case"flashRed":case"flashGreen":case"flashBlue":case"flashAlpha":case"flashDuration":$A=Number.parseInt($A);break}iA.hasOwnProperty(vA)&&(iA[vA]=$A)}m.frameTimedEvents.has(RA)||m.frameTimedEvents.set(RA,[]),m.frameTimedEvents.get(RA).push(iA)}break}case"position":m.position=Number.parseInt(IA);break;case"hue":m.hue=Number.parseInt(IA);break}}}}r(AZ,"populateAnims");var CA=(R=>(R.NONE="NONE",R.MUD_SPORT="MUD_SPORT",R.WATER_SPORT="WATER_SPORT",R.SPIKES="SPIKES",R.TOXIC_SPIKES="TOXIC_SPIKES",R.MIST="MIST",R.FUTURE_SIGHT="FUTURE_SIGHT",R.DOOM_DESIRE="DOOM_DESIRE",R.WISH="WISH",R.STEALTH_ROCK="STEALTH_ROCK",R.STICKY_WEB="STICKY_WEB",R.TRICK_ROOM="TRICK_ROOM",R.GRAVITY="GRAVITY",R.REFLECT="REFLECT",R.LIGHT_SCREEN="LIGHT_SCREEN",R.AURORA_VEIL="AURORA_VEIL",R.QUICK_GUARD="QUICK_GUARD",R.WIDE_GUARD="WIDE_GUARD",R.MAT_BLOCK="MAT_BLOCK",R.CRAFTY_SHIELD="CRAFTY_SHIELD",R.TAILWIND="TAILWIND",R.HAPPY_HOUR="HAPPY_HOUR",R.SAFEGUARD="SAFEGUARD",R.NO_CRIT="NO_CRIT",R.IMPRISON="IMPRISON",R.ION_DELUGE="ION_DELUGE",R.FIRE_GRASS_PLEDGE="FIRE_GRASS_PLEDGE",R.WATER_FIRE_PLEDGE="WATER_FIRE_PLEDGE",R.GRASS_WATER_PLEDGE="GRASS_WATER_PLEDGE",R.FAIRY_LOCK="FAIRY_LOCK",R.NEUTRALIZING_GAS="NEUTRALIZING_GAS",R))(CA||{}),hA=(R=>(R[R.BOTH=0]="BOTH",R[R.PLAYER=1]="PLAYER",R[R.ENEMY=2]="ENEMY",R))(hA||{});const Hc=class Hc{constructor(e,I,L,N,S=hA.BOTH){this.tagType=e,this.turnCount=I,this.sourceMove=L,this.sourceId=N,this.side=S}apply(e,I,...L){return!0}onAdd(e,I=!1){}onRemove(e,I=!1){I||T.phaseManager.queueMessage(_.t(`arenaTag:arenaOnRemove${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`,{moveName:this.getMoveName()}))}onOverlap(e,I){}lapse(e){return this.turnCount<1||!!--this.turnCount}getMoveName(){return this.sourceMove?FA[this.sourceMove].name:null}loadTag(e){this.turnCount=e.turnCount,this.sourceMove=e.sourceMove,this.sourceId=e.sourceId,this.side=e.side}getSourcePokemon(){return this.sourceId?T.getPokemonById(this.sourceId):null}getAffectedPokemon(){switch(this.side){case hA.PLAYER:return T.getPlayerField()??[];case hA.ENEMY:return T.getEnemyField()??[];case hA.BOTH:default:return T.getField(!0)??[]}}};r(Hc,"ArenaTag");let xe=Hc;const uc=class uc extends xe{constructor(e,I,L){super(CA.MIST,e,E.MIST,I,L)}onAdd(e,I=!1){if(super.onAdd(e),this.sourceId){const L=T.getPokemonById(this.sourceId);!I&&L?T.phaseManager.queueMessage(_.t("arenaTag:mistOnAdd",{pokemonNameWithAffix:Q(L)})):I||console.warn("Failed to get source for MistTag onAdd")}}apply(e,I,L,N){if(L){const S=new nE(!1);if(SE("InfiltratorAbAttr",L,null,!1,S),S.value)return!1}return N.value=!0,I||T.phaseManager.queueMessage(_.t("arenaTag:mistApply")),!0}};r(uc,"MistTag");let aP=uc;const cc=class cc extends xe{constructor(e,I,L,N,S,n){super(e,I,L,N,S),this.weakenedCategories=n}apply(e,I,L,N,S){if(this.weakenedCategories.includes(N)){const n=new nE(!1);return SE("InfiltratorAbAttr",L,null,!1,n),n.value?!1:(S.value=T.currentBattle.double?2732/4096:.5,!0)}return!1}};r(cc,"WeakenMoveScreenTag");let oS=cc;const Bc=class Bc extends oS{constructor(e,I,L){super(CA.REFLECT,e,E.REFLECT,I,L,[G.PHYSICAL])}onAdd(e,I=!1){I||T.phaseManager.queueMessage(_.t(`arenaTag:reflectOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}};r(Bc,"ReflectTag");let nP=Bc;const Kc=class Kc extends oS{constructor(e,I,L){super(CA.LIGHT_SCREEN,e,E.LIGHT_SCREEN,I,L,[G.SPECIAL])}onAdd(e,I=!1){I||T.phaseManager.queueMessage(_.t(`arenaTag:lightScreenOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}};r(Kc,"LightScreenTag");let rP=Kc;const fc=class fc extends oS{constructor(e,I,L){super(CA.AURORA_VEIL,e,E.AURORA_VEIL,I,L,[G.SPECIAL,G.PHYSICAL])}onAdd(e,I=!1){I||T.phaseManager.queueMessage(_.t(`arenaTag:auroraVeilOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}};r(fc,"AuroraVeilTag");let iP=fc;const Fc=class Fc extends xe{constructor(e,I,L,N,S,n=!1){super(e,1,I,L,N),this.protectConditionFunc=S,this.ignoresBypass=n}onAdd(e){T.phaseManager.queueMessage(_.t(`arenaTag:conditionalProtectOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`,{moveName:super.getMoveName()}))}onRemove(e){}apply(e,I,L,N,S,n,i){return this.side===hA.PLAYER===S.isPlayer()&&this.protectConditionFunc(e,n)?(L.value||(L.value=!0,I||(new yC(jE.PROTECT,S).play(),T.phaseManager.queueMessage(_.t("arenaTag:conditionalProtectApply",{moveName:super.getMoveName(),pokemonNameWithAffix:Q(S)})))),i.value=i.value||this.ignoresBypass,!0):!1}};r(Fc,"ConditionalProtectTag");let MS=Fc;const WV=r((R,e)=>{const I=FA[e],L=T.phaseManager.getCurrentPhase();if(L!=null&&L.is("MoveEffectPhase")){const N=L.getUserPokemon();if(N)return I.getPriority(N)>0}return I.priority>0},"QuickGuardConditionFunc"),Yc=class Yc extends MS{constructor(e,I){super(CA.QUICK_GUARD,E.QUICK_GUARD,e,I,WV)}};r(Yc,"QuickGuardTag");let CP=Yc;const hV=r((R,e)=>{switch(FA[e].moveTarget){case AA.ALL_ENEMIES:case AA.ALL_NEAR_ENEMIES:case AA.ALL_OTHERS:case AA.ALL_NEAR_OTHERS:return!0}return!1},"WideGuardConditionFunc"),Wc=class Wc extends MS{constructor(e,I){super(CA.WIDE_GUARD,E.WIDE_GUARD,e,I,hV)}};r(Wc,"WideGuardTag");let UP=Wc;const dV=r((R,e)=>FA[e].category!==G.STATUS,"MatBlockConditionFunc"),hc=class hc extends MS{constructor(e,I){super(CA.MAT_BLOCK,E.MAT_BLOCK,e,I,dV)}onAdd(e){if(this.sourceId){const I=T.getPokemonById(this.sourceId);I?T.phaseManager.queueMessage(_.t("arenaTag:matBlockOnAdd",{pokemonNameWithAffix:Q(I)})):console.warn("Failed to get source for MatBlockTag onAdd")}}};r(hc,"MatBlockTag");let oP=hc;const pV=r((R,e)=>{const I=FA[e];return I.category===G.STATUS&&I.moveTarget!==AA.ENEMY_SIDE&&I.moveTarget!==AA.BOTH_SIDES&&I.moveTarget!==AA.ALL},"CraftyShieldConditionFunc"),dc=class dc extends MS{constructor(e,I){super(CA.CRAFTY_SHIELD,E.CRAFTY_SHIELD,e,I,pV,!0)}};r(dc,"CraftyShieldTag");let MP=dc;const pc=class pc extends xe{constructor(e,I,L,N){super(CA.NO_CRIT,e,I,L,N)}onAdd(e){T.phaseManager.queueMessage(_.t(`arenaTag:noCritOnAdd${this.side===hA.PLAYER?"Player":"Enemy"}`,{moveName:this.getMoveName()}))}onRemove(e){const I=T.getPokemonById(this.sourceId);T.phaseManager.queueMessage(_.t("arenaTag:noCritOnRemove",{pokemonNameWithAffix:Q(I??void 0),moveName:this.getMoveName()}))}};r(pc,"NoCritTag");let wC=pc;const gc=class gc extends xe{constructor(e,I,L){super(CA.WISH,e,E.WISH,I,L)}onAdd(e){if(this.sourceId){const I=T.getPokemonById(this.sourceId);I?(this.battlerIndex=I.getBattlerIndex(),this.triggerMessage=_.t("arenaTag:wishTagOnAdd",{pokemonNameWithAffix:Q(I)}),this.healHp=UE(I.getMaxHp()/2)):console.warn("Failed to get source for WishTag onAdd")}}onRemove(e){const I=T.getField()[this.battlerIndex];I!=null&&I.isActive(!0)&&(T.phaseManager.queueMessage(this.triggerMessage),T.phaseManager.unshiftNew("PokemonHealPhase",I.getBattlerIndex(),this.healHp,null,!0,!1))}};r(gc,"WishTag");let DP=gc;const mc=class mc extends xe{constructor(e,I,L,N,S){super(e,I,N,S),this.weakenedType=L}apply(e,I,L,N){return L===this.weakenedType?(N.value*=.33,!0):!1}};r(mc,"WeakenMoveTypeTag");let na=mc;const yc=class yc extends na{constructor(e,I){super(CA.MUD_SPORT,e,t.ELECTRIC,E.MUD_SPORT,I)}onAdd(e){T.phaseManager.queueMessage(_.t("arenaTag:mudSportOnAdd"))}onRemove(e){T.phaseManager.queueMessage(_.t("arenaTag:mudSportOnRemove"))}};r(yc,"MudSportTag");let lP=yc;const Vc=class Vc extends na{constructor(e,I){super(CA.WATER_SPORT,e,t.FIRE,E.WATER_SPORT,I)}onAdd(e){T.phaseManager.queueMessage(_.t("arenaTag:waterSportOnAdd"))}onRemove(e){T.phaseManager.queueMessage(_.t("arenaTag:waterSportOnRemove"))}};r(Vc,"WaterSportTag");let _P=Vc;const wc=class wc extends xe{constructor(e){super(CA.ION_DELUGE,1,e)}onAdd(e){T.phaseManager.queueMessage(_.t("arenaTag:plasmaFistsOnAdd"))}onRemove(e){}apply(e,I,L){return L.value===t.NORMAL?(L.value=t.ELECTRIC,!0):!1}};r(wc,"IonDelugeTag");let GP=wc;const vc=class vc extends xe{constructor(e,I,L,N,S){super(e,0,I,L,N),this.layers=1,this.maxLayers=S}onOverlap(e,I){this.layers<this.maxLayers&&(this.layers++,this.onAdd(e))}apply(e,I,L){return this.side===hA.PLAYER!==L.isPlayer()?!1:this.activateTrap(L,I)}activateTrap(e,I){return!1}getMatchupScoreMultiplier(e){return e.isGrounded()?1:Phaser.Math.Linear(0,1/Math.pow(2,this.layers),Math.min(e.getHpRatio(),.5)*2)}loadTag(e){super.loadTag(e),this.layers=e.layers,this.maxLayers=e.maxLayers}};r(vc,"ArenaTrapTag");let yI=vc;const xc=class xc extends yI{constructor(e,I){super(CA.SPIKES,E.SPIKES,e,I,3)}onAdd(e,I=!1){super.onAdd(e);const L=this.sourceId?T.getPokemonById(this.sourceId):null;!I&&L&&T.phaseManager.queueMessage(_.t("arenaTag:spikesOnAdd",{moveName:this.getMoveName(),opponentDesc:L.getOpponentDescriptor()}))}activateTrap(e,I){if(!e.isGrounded())return!1;const L=new nE(!1);if(SE("BlockNonDirectDamageAbAttr",e,L),I||L.value)return!L.value;const N=1/(10-2*this.layers),S=UE(e.getMaxHp()*N);return T.phaseManager.queueMessage(_.t("arenaTag:spikesActivateTrap",{pokemonNameWithAffix:Q(e)})),e.damageAndUpdate(S,{result:_E.INDIRECT}),e.turnData.damageTaken+=S,!0}};r(xc,"SpikesTag");let PP=xc;const Zc=class Zc extends yI{constructor(e,I){super(CA.TOXIC_SPIKES,E.TOXIC_SPIKES,e,I,2),this.neutralized=!1}onAdd(e,I=!1){super.onAdd(e);const L=this.sourceId?T.getPokemonById(this.sourceId):null;!I&&L&&T.phaseManager.queueMessage(_.t("arenaTag:toxicSpikesOnAdd",{moveName:this.getMoveName(),opponentDesc:L.getOpponentDescriptor()}))}onRemove(e){this.neutralized||super.onRemove(e)}activateTrap(e,I){if(e.isGrounded()){if(I)return!0;if(e.isOfType(t.POISON)){if(this.neutralized=!0,T.arena.removeTag(this.tagType))return T.phaseManager.queueMessage(_.t("arenaTag:toxicSpikesActivateTrapPoison",{pokemonNameWithAffix:Q(e),moveName:this.getMoveName()})),!0}else if(!e.status){const L=this.layers>1;if(e.trySetStatus(L?J.TOXIC:J.POISON,!0,null,0,this.getMoveName()))return!0}}return!1}getMatchupScoreMultiplier(e){return e.isGrounded()||!e.canSetStatus(J.POISON,!0)?1:e.isOfType(t.POISON)?1.25:super.getMatchupScoreMultiplier(e)}};r(Zc,"ToxicSpikesTag");let HP=Zc;const bc=class bc extends xe{constructor(e,I,L,N,S=hA.BOTH){super(e,3,I,L,S),this.targetIndex=N,this.side=S}lapse(e){const I=super.lapse(e);return I||T.phaseManager.unshiftNew("MoveEffectPhase",this.sourceId,[this.targetIndex],FA[this.sourceMove],!1,!0),I}onRemove(e){}};r(bc,"DelayedAttackTag");let uP=bc;const kc=class kc extends yI{constructor(e,I){super(CA.STEALTH_ROCK,E.STEALTH_ROCK,e,I,1)}onAdd(e,I=!1){super.onAdd(e);const L=this.sourceId?T.getPokemonById(this.sourceId):null;!I&&L&&T.phaseManager.queueMessage(_.t("arenaTag:stealthRockOnAdd",{opponentDesc:L.getOpponentDescriptor()}))}getDamageHpRatio(e){const I=e.getAttackTypeEffectiveness(t.ROCK,void 0,!0);let L=0;switch(I){case 0:L=0;break;case .25:L=.03125;break;case .5:L=.0625;break;case 1:L=.125;break;case 2:L=.25;break;case 4:L=.5;break}return L}activateTrap(e,I){const L=new nE(!1);if(SE("BlockNonDirectDamageAbAttr",e,L),L.value)return!1;const N=this.getDamageHpRatio(e);if(!N)return!1;if(I)return!0;const S=UE(e.getMaxHp()*N);return T.phaseManager.queueMessage(_.t("arenaTag:stealthRockActivateTrap",{pokemonNameWithAffix:Q(e)})),e.damageAndUpdate(S,{result:_E.INDIRECT}),e.turnData.damageTaken+=S,!0}getMatchupScoreMultiplier(e){const I=this.getDamageHpRatio(e);return Phaser.Math.Linear(super.getMatchupScoreMultiplier(e),1,1-Math.pow(I,I))}};r(kc,"StealthRockTag");let cP=kc;const Xc=class Xc extends yI{constructor(e,I){super(CA.STICKY_WEB,E.STICKY_WEB,e,I,1)}onAdd(e,I=!1){super.onAdd(e);const L=this.sourceId?T.getPokemonById(this.sourceId):null;!I&&L&&T.phaseManager.queueMessage(_.t("arenaTag:stickyWebOnAdd",{moveName:this.getMoveName(),opponentDesc:L.getOpponentDescriptor()}))}activateTrap(e,I){if(e.isGrounded()){const L=new nE(!1);if(SE("ProtectStatAbAttr",e,L),I)return!L.value;if(!L.value){T.phaseManager.queueMessage(_.t("arenaTag:stickyWebActivateTrap",{pokemonName:e.getNameToRender()}));const N=new VA(-1);return T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!1,[c.SPD],N.value,!0,!1,!0,null,!1,!0),!0}}return!1}};r(Xc,"StickyWebTag");let BP=Xc;const Qc=class Qc extends xe{constructor(e,I){super(CA.TRICK_ROOM,e,E.TRICK_ROOM,I)}apply(e,I,L){return L.value=!L.value,!0}onAdd(e){const I=this.sourceId?T.getPokemonById(this.sourceId):null;I&&T.phaseManager.queueMessage(_.t("arenaTag:trickRoomOnAdd",{pokemonNameWithAffix:Q(I)}))}onRemove(e){T.phaseManager.queueMessage(_.t("arenaTag:trickRoomOnRemove"))}};r(Qc,"TrickRoomTag");let KP=Qc;const Jc=class Jc extends xe{constructor(e){super(CA.GRAVITY,e,E.GRAVITY)}onAdd(e){T.phaseManager.queueMessage(_.t("arenaTag:gravityOnAdd")),T.getField(!0).forEach(I=>{I!==null&&(I.removeTag(d.FLOATING),I.removeTag(d.TELEKINESIS),I.getTag(d.FLYING)&&I.addTag(d.INTERRUPTED))})}onRemove(e){T.phaseManager.queueMessage(_.t("arenaTag:gravityOnRemove"))}};r(Jc,"GravityTag");let fP=Jc;const $c=class $c extends xe{constructor(e,I,L){super(CA.TAILWIND,e,E.TAILWIND,I,L)}onAdd(e,I=!1){I||T.phaseManager.queueMessage(_.t(`arenaTag:tailwindOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`));const L=T.getPokemonById(this.sourceId),N=(L!=null&&L.isPlayer()?T.getPlayerField():T.getEnemyField())??[],S=T.phaseManager;for(const n of N)n.hasAbility(O.WIND_POWER)&&!n.getTag(d.CHARGED)&&(n.addTag(d.CHARGED),S.queueMessage(_.t("abilityTriggers:windPowerCharged",{pokemonName:Q(n),moveName:this.getMoveName()}))),n.hasAbility(O.WIND_RIDER)&&(S.queueAbilityDisplay(n,!1,!0),S.unshiftNew("StatStageChangePhase",n.getBattlerIndex(),!0,[c.ATK],1,!0),S.queueAbilityDisplay(n,!1,!1))}onRemove(e,I=!1){I||T.phaseManager.queueMessage(_.t(`arenaTag:tailwindOnRemove${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}};r($c,"TailwindTag");let FP=$c;const qc=class qc extends xe{constructor(e,I,L){super(CA.HAPPY_HOUR,e,E.HAPPY_HOUR,I,L)}onAdd(e){T.phaseManager.queueMessage(_.t("arenaTag:happyHourOnAdd"))}onRemove(e){T.phaseManager.queueMessage(_.t("arenaTag:happyHourOnRemove"))}};r(qc,"HappyHourTag");let YP=qc;const zc=class zc extends xe{constructor(e,I,L){super(CA.SAFEGUARD,e,E.SAFEGUARD,I,L)}onAdd(e){T.phaseManager.queueMessage(_.t(`arenaTag:safeguardOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}onRemove(e){T.phaseManager.queueMessage(_.t(`arenaTag:safeguardOnRemove${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}};r(zc,"SafeguardTag");let WP=zc;const jc=class jc extends xe{constructor(){super(CA.NONE,0)}};r(jc,"NoneTag");let hP=jc;const AB=class AB extends yI{constructor(e,I){super(CA.IMPRISON,E.IMPRISON,e,I,1)}onAdd(){const e=this.getSourcePokemon();if(e){const I=this.getAffectedPokemon();I==null||I.forEach(L=>{L.isAllowedInBattle()&&L.addTag(d.IMPRISON,1,E.IMPRISON,this.sourceId)}),T.phaseManager.queueMessage(_.t("battlerTags:imprisonOnAdd",{pokemonNameWithAffix:Q(e)}))}}lapse(){const e=this.getSourcePokemon();return e?e.isActive(!0):!1}activateTrap(e){const I=this.getSourcePokemon();return I!=null&&I.isActive(!0)&&e.isAllowedInBattle()&&e.addTag(d.IMPRISON,1,E.IMPRISON,this.sourceId),!0}onRemove(){const e=this.getAffectedPokemon();e==null||e.forEach(I=>{I.removeTag(d.IMPRISON)})}};r(AB,"ImprisonTag");let dP=AB;const EB=class EB extends xe{constructor(e,I){super(CA.FIRE_GRASS_PLEDGE,4,E.FIRE_PLEDGE,e,I)}onAdd(e){T.phaseManager.queueMessage(_.t(`arenaTag:fireGrassPledgeOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}lapse(e){return(this.side===hA.PLAYER?T.getPlayerField():T.getEnemyField()).filter(L=>!L.isOfType(t.FIRE)&&!L.switchOutStatus).forEach(L=>{T.phaseManager.queueMessage(_.t("arenaTag:fireGrassPledgeLapse",{pokemonNameWithAffix:Q(L)})),T.phaseManager.unshiftNew("CommonAnimPhase",L.getBattlerIndex(),L.getBattlerIndex(),jE.MAGMA_STORM),L.damageAndUpdate(UE(L.getMaxHp()/8),{result:_E.INDIRECT})}),super.lapse(e)}};r(EB,"FireGrassPledgeTag");let pP=EB;const eB=class eB extends xe{constructor(e,I){super(CA.WATER_FIRE_PLEDGE,4,E.WATER_PLEDGE,e,I)}onAdd(e){T.phaseManager.queueMessage(_.t(`arenaTag:waterFirePledgeOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}apply(e,I,L){return L.value*=2,!0}};r(eB,"WaterFirePledgeTag");let gP=eB;const RB=class RB extends xe{constructor(e,I){super(CA.GRASS_WATER_PLEDGE,4,E.GRASS_PLEDGE,e,I)}onAdd(e){T.phaseManager.queueMessage(_.t(`arenaTag:grassWaterPledgeOnAdd${this.side===hA.PLAYER?"Player":this.side===hA.ENEMY?"Enemy":""}`))}};r(RB,"GrassWaterPledgeTag");let mP=RB;const OB=class OB extends xe{constructor(e,I){super(CA.FAIRY_LOCK,e,E.FAIRY_LOCK,I)}onAdd(e){T.phaseManager.queueMessage(_.t("arenaTag:fairyLockOnAdd"))}};r(OB,"FairyLockTag");let yP=OB;const IB=class IB extends xe{constructor(e){super(CA.NEUTRALIZING_GAS,0,void 0,e),this.sourceCount=1,this.beingRemoved=!1}onAdd(e){const I=this.getSourcePokemon();if(I){this.playActivationMessage(I);for(const L of T.getField(!0))L&&L.id!==I.id&&[!0,!1].forEach(N=>NG(L,N))}}onOverlap(e,I){this.sourceCount++,this.playActivationMessage(I)}onSourceLeave(e){if(this.sourceCount--,this.sourceCount<=0)e.removeTag(CA.NEUTRALIZING_GAS);else if(this.sourceCount===1){const I=T.getField().filter(L=>L==null?void 0:L.hasAbilityWithAttr("PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr",!1))[0];LG(I,I.getAbility().hasAttr("PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr"))}}onRemove(e,I=!1){this.beingRemoved=!0,I||T.phaseManager.queueMessage(_.t("arenaTag:neutralizingGasOnRemove"));for(const L of T.getField(!0))L&&!L.hasAbilityWithAttr("PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr",!1)&&[!0,!1].forEach(N=>LG(L,N))}shouldApplyToSelf(){return this.sourceCount>1}isBeingRemoved(){return this.beingRemoved}playActivationMessage(e){e&&T.phaseManager.queueMessage(_.t("arenaTag:neutralizingGasOnAdd",{pokemonNameWithAffix:Q(e)}))}};r(IB,"SuppressAbilitiesTag");let VP=IB;function S3(R,e,I,L,N,S=hA.BOTH){switch(R){case CA.MIST:return new aP(e,L,S);case CA.QUICK_GUARD:return new CP(L,S);case CA.WIDE_GUARD:return new UP(L,S);case CA.MAT_BLOCK:return new oP(L,S);case CA.CRAFTY_SHIELD:return new MP(L,S);case CA.NO_CRIT:return new wC(e,I,L,S);case CA.MUD_SPORT:return new lP(e,L);case CA.WATER_SPORT:return new _P(e,L);case CA.ION_DELUGE:return new GP(I);case CA.SPIKES:return new PP(L,S);case CA.TOXIC_SPIKES:return new HP(L,S);case CA.FUTURE_SIGHT:case CA.DOOM_DESIRE:return new uP(R,I,L,N,S);case CA.WISH:return new DP(e,L,S);case CA.STEALTH_ROCK:return new cP(L,S);case CA.STICKY_WEB:return new BP(L,S);case CA.TRICK_ROOM:return new KP(e,L);case CA.GRAVITY:return new fP(e);case CA.REFLECT:return new nP(e,L,S);case CA.LIGHT_SCREEN:return new rP(e,L,S);case CA.AURORA_VEIL:return new iP(e,L,S);case CA.TAILWIND:return new FP(e,L,S);case CA.HAPPY_HOUR:return new YP(e,L,S);case CA.SAFEGUARD:return new WP(e,L,S);case CA.IMPRISON:return new dP(L,S);case CA.FIRE_GRASS_PLEDGE:return new pP(L,S);case CA.WATER_FIRE_PLEDGE:return new gP(L,S);case CA.GRASS_WATER_PLEDGE:return new mP(L,S);case CA.FAIRY_LOCK:return new yP(e,L);case CA.NEUTRALIZING_GAS:return new VP(L);default:return null}}r(S3,"getArenaTag");function EZ(R){const e=S3(R.tagType,R.turnCount,R.sourceMove,R.sourceId,R.targetIndex,R.side)??new hP;return e.loadTag(R),e}r(EZ,"loadArenaTag");var gV=(R=>(R.WEATHER_CHANGED="onWeatherChanged",R.TERRAIN_CHANGED="onTerrainChanged",R.TAG_ADDED="onTagAdded",R.TAG_REMOVED="onTagRemoved",R))(gV||{});const tB=class tB extends Event{constructor(e,I){super(e),this.duration=I}};r(tB,"ArenaEvent");let DS=tB;const LB=class LB extends DS{constructor(e,I,L){super("onWeatherChanged",L),this.oldWeatherType=e,this.newWeatherType=I}};r(LB,"WeatherChangedEvent");let wP=LB;const NB=class NB extends DS{constructor(e,I,L){super("onTerrainChanged",L),this.oldTerrainType=e,this.newTerrainType=I}};r(NB,"TerrainChangedEvent");let vP=NB;const SB=class SB extends DS{constructor(e,I,L,N,S){super("onTagAdded",L),this.arenaTagType=e,this.arenaTagSide=I,this.arenaTagLayers=N,this.arenaTagMaxLayers=S}};r(SB,"TagAddedEvent");let vC=SB;const TB=class TB extends DS{constructor(e,I,L){super("onTagRemoved",L),this.arenaTagType=e,this.arenaTagSide=I}};r(TB,"TagRemovedEvent");let PN=TB;var EE=(R=>(R[R.SITRUS=0]="SITRUS",R[R.LUM=1]="LUM",R[R.ENIGMA=2]="ENIGMA",R[R.LIECHI=3]="LIECHI",R[R.GANLON=4]="GANLON",R[R.PETAYA=5]="PETAYA",R[R.APICOT=6]="APICOT",R[R.SALAC=7]="SALAC",R[R.LANSAT=8]="LANSAT",R[R.STARF=9]="STARF",R[R.LEPPA=10]="LEPPA",R))(EE||{});function xP(R){return _.t(`berry:${EE[R]}.name`)}r(xP,"getBerryName");function mV(R){return _.t(`berry:${EE[R]}.effect`)}r(mV,"getBerryEffectDescription");function yV(R){switch(R){case EE.SITRUS:return e=>e.getHpRatio()<.5;case EE.LUM:return e=>!!e.status||!!e.getTag(d.CONFUSED);case EE.ENIGMA:return e=>!!e.turnData.attacksReceived.filter(I=>I.result===_E.SUPER_EFFECTIVE).length;case EE.LIECHI:case EE.GANLON:case EE.PETAYA:case EE.APICOT:case EE.SALAC:return e=>{const I=new VA(.25),L=R-EE.ENIGMA;return SE("ReduceBerryUseThresholdAbAttr",e,null,!1,I),e.getHpRatio()<I.value&&e.getStatStage(L)<6};case EE.LANSAT:return e=>{const I=new VA(.25);return SE("ReduceBerryUseThresholdAbAttr",e,null,!1,I),e.getHpRatio()<.25&&!e.getTag(d.CRIT_BOOST)};case EE.STARF:return e=>{const I=new VA(.25);return SE("ReduceBerryUseThresholdAbAttr",e,null,!1,I),e.getHpRatio()<.25};case EE.LEPPA:return e=>{const I=new VA(.25);return SE("ReduceBerryUseThresholdAbAttr",e,null,!1,I),!!e.getMoveset().find(L=>!L.getPpRatio())}}}r(yV,"getBerryPredicate");function CH(R){return e=>{switch(R){case EE.SITRUS:case EE.ENIGMA:{const I=new VA(UE(e.getMaxHp()/4));SE("DoubleBerryEffectAbAttr",e,null,!1,I),T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),I.value,_.t("battle:hpHealBerry",{pokemonNameWithAffix:Q(e),berryName:xP(R)}),!0)}break;case EE.LUM:e.status&&T.phaseManager.queueMessage($t(e.status.effect,Q(e))),e.resetStatus(!0,!0),e.updateInfo();break;case EE.LIECHI:case EE.GANLON:case EE.PETAYA:case EE.APICOT:case EE.SALAC:{const I=R-EE.ENIGMA,L=new VA(1);SE("DoubleBerryEffectAbAttr",e,null,!1,L),T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[I],L.value)}break;case EE.LANSAT:e.addTag(d.CRIT_BOOST);break;case EE.STARF:{const I=DA(c.SPD,c.ATK),L=new VA(2);SE("DoubleBerryEffectAbAttr",e,null,!1,L),T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[I],L.value)}break;case EE.LEPPA:{const I=e.getMoveset().find(L=>L.ppUsed===L.getMovePp())??e.getMoveset().find(L=>L.ppUsed<L.getMovePp());I&&(I.ppUsed=Math.max(I.ppUsed-10,0),T.phaseManager.queueMessage(_.t("battle:ppHealBerry",{pokemonNameWithAffix:Q(e),moveName:I.getName(),berryName:xP(R)})))}break;default:console.error("Incorrect BerryType %d passed to GetBerryEffectFunc",R)}}}r(CH,"getBerryEffectFunc");const T3=99;function lS(R){switch(R){case MA.POKEBALL:return"pb";case MA.GREAT_BALL:return"gb";case MA.ULTRA_BALL:return"ub";case MA.ROGUE_BALL:return"rb";case MA.MASTER_BALL:return"mb";case MA.LUXURY_BALL:return"lb"}}r(lS,"getPokeballAtlasKey");function ZP(R){let e;switch(R){case MA.POKEBALL:e=_.t("pokeball:pokeBall");break;case MA.GREAT_BALL:e=_.t("pokeball:greatBall");break;case MA.ULTRA_BALL:e=_.t("pokeball:ultraBall");break;case MA.ROGUE_BALL:e=_.t("pokeball:rogueBall");break;case MA.MASTER_BALL:e=_.t("pokeball:masterBall");break;case MA.LUXURY_BALL:e=_.t("pokeball:luxuryBall");break}return e}r(ZP,"getPokeballName");function bP(R){switch(R){case MA.POKEBALL:return 1;case MA.GREAT_BALL:return 1.5;case MA.ULTRA_BALL:return 2;case MA.ROGUE_BALL:return 3;case MA.MASTER_BALL:return-1;case MA.LUXURY_BALL:return 1}}r(bP,"getPokeballCatchMultiplier");function _S(R){switch(R){case MA.POKEBALL:return 13969705;case MA.GREAT_BALL:return 9745630;case MA.ULTRA_BALL:return 15125809;case MA.ROGUE_BALL:return 13969705;case MA.MASTER_BALL:return 10764733;case MA.LUXURY_BALL:return 16768618}}r(_S,"getPokeballTintColor");function eZ(R){var N;if(T.gameMode.isFreshStartChallenge())return 0;const e=T.gameData.getSpeciesCount(S=>!!S.caughtAttr),I=new VA(1);(N=T.findModifier(S=>S.is("CriticalCatchChanceBoosterModifier")))==null||N.apply(I);const L=T.gameMode.isDaily||e>800?2.5:e>600?2:e>400?1.5:e>200?1:e>100?.5:0;return Math.floor(I.value*L*Math.min(255,R)/6)}r(eZ,"getCriticalCaptureChance");function VV(R,e,I,L,N,S=!1){let n=1,i=e,C=I;const o=I-e,l=R.x,H=l+3,P=l-3;let K=4;const f=r(()=>{T.tweens.add({targets:R,y:I,duration:n*L,ease:"Cubic.easeIn",onComplete:r(()=>{T.playSound("se/pb_bounce_1",{volume:n}),n=n>.01?n*.5:0,n?(i=o*n,C=I-i,T.tweens.add({targets:R,y:C,duration:n*L,ease:"Cubic.easeOut",onComplete:r(()=>f(),"onComplete")})):N&&N()},"onComplete")})},"doBounce"),h=r(()=>{T.tweens.add({targets:R,x:P,duration:125,ease:"Linear",onComplete:r(()=>{T.tweens.add({targets:R,x:H,duration:125,ease:"Linear",onComplete:r(()=>{K--,K>0?h():T.tweens.add({targets:R,x:l,duration:60,ease:"Linear",onComplete:r(()=>T.time.delayedCall(500,f),"onComplete")})},"onComplete")})},"onComplete")})},"doCritShake");S?T.time.delayedCall(500,h):f()}r(VV,"doPokeballBounceAnim");var UH=(R=>(R[R.LEARN_MOVE=0]="LEARN_MOVE",R[R.MEMORY=1]="MEMORY",R[R.TM=2]="TM",R))(UH||{}),pI=(R=>(R[R.FIGHT=0]="FIGHT",R[R.BALL=1]="BALL",R[R.POKEMON=2]="POKEMON",R[R.RUN=3]="RUN",R[R.TERA=4]="TERA",R))(pI||{}),cE=(R=>(R[R.PLAYER=0]="PLAYER",R[R.WILD=1]="WILD",R[R.TRAINER=2]="TRAINER",R[R.ENEMY_BUFF=3]="ENEMY_BUFF",R[R.DAILY_STARTER=4]="DAILY_STARTER",R))(cE||{});const tT={},oN={},MN={},DN={},lN={};function xC(R){switch(R){case cE.PLAYER:return tT;case cE.WILD:return oN;case cE.TRAINER:return MN;case cE.ENEMY_BUFF:return DN;case cE.DAILY_STARTER:return lN}}r(xC,"getModifierPoolForType");function s3(R){const e=R();return e.id||(e.id=Object.keys(k).find(I=>k[I]===R)),e}r(s3,"getModifierType");var a3=(R=>(R.WHITE="#ffffff",R.OFF_WHITE="#f8f8f8",R.LIGHT_GREY="#a0a0a0",R.GREY="#484848",R.DARK_GREY="#404040",R.PINK="#f89890",R.RED="#e13d3d",R.RED2="#e70808",R.REDORANGE="#d64b00",R.ORANGE="#f8b050",R.LIGHT_YELLOW="#e8e8a8",R.YELLOW="#ccbe00",R.DARK_YELLOW="#a68e17",R.GREEN="#78c850",R.BLUE="#40c8f8",R.COMMON="#ffffff",R.GREAT="#3890f8",R.ULTRA="#f8d038",R.ROGUE="#d52929",R.MASTER="#e020c0",R.LUXURY="#e64a18",R))(a3||{}),n3=(R=>(R.NORMAL="#ADA594",R.FIGHTING="#A55239",R.FLYING="#9CADF7",R.POISON="#9141CB",R.GROUND="#AE7A3B",R.ROCK="#BDA55A",R.BUG="#ADBD21",R.GHOST="#6363B5",R.STEEL="#81A6BE",R.FIRE="#F75231",R.WATER="#399CFF",R.GRASS="#7BCE52",R.ELECTRIC="#FFC631",R.PSYCHIC="#EF4179",R.ICE="#5ACEE7",R.DRAGON="#7B63E7",R.DARK="#735A4A",R.FAIRY="#EF70EF",R))(n3||{}),r3=(R=>(R.NORMAL="#574F4A",R.FIGHTING="#4E637C",R.FLYING="#4E637C",R.POISON="#352166",R.GROUND="#572D1E",R.ROCK="#5F442D",R.BUG="#5F5010",R.GHOST="#323D5B",R.STEEL="#415C5F",R.FIRE="#7C1818",R.WATER="#1C4E80",R.GRASS="#4F6729",R.ELECTRIC="#804618",R.PSYCHIC="#782155",R.ICE="#2D5C74",R.DRAGON="#313874",R.DARK="#392725",R.FAIRY="#663878",R))(r3||{}),i3=(R=>(R.GREY="#636363",R.PURPLE="#6b5a73",R.LIGHT_GREY="#d0d0c8",R.BROWN="#69402a",R.PINK="#fca2a2",R.BRIGHT_RED="#f83018",R.RED="#984038",R.MAROON="#632929",R.GREEN="#306850",R.BLUE="#006090",R.LIGHT_YELLOW="#ded6b5",R.YELLOW="#ebd773",R.DARK_YELLOW="#a0a060",R.ORANGE="#c07800",R.LIGHT_ORANGE="#ffbd73",R))(i3||{});const zr=24,ZC=r((R,e)=>{const I=R.type.name.localeCompare(e.type.name),L=R.constructor.name.localeCompare(e.constructor.name),N=R instanceof GE&&R.pokemonId?R.pokemonId:4294967295,S=e instanceof GE&&e.pokemonId?e.pokemonId:4294967295;return N<S?1:N>S?-1:N===S?L===0?I:L:0},"modifierSortFunc"),sB=class sB extends Phaser.GameObjects.Container{constructor(e){super(T,1+(e?302:0),2),this.player=!e,this.setScale(.5)}updateModifiers(e,I=!1){this.removeAll(!0);const L=e.filter(i=>i.isIconVisible()),N=L.filter(i=>!i.pokemonId).sort(ZC),S=L.filter(i=>i.pokemonId).sort(ZC),n=I?N:N.concat(S);n.forEach((i,C)=>{const o=i.getIcon();C>=zr&&o.setVisible(!1),this.add(o),this.setModifierIconPosition(o,n.length),o.setInteractive(new Phaser.Geom.Rectangle(0,0,32,24),Phaser.Geom.Rectangle.Contains),o.on("pointerover",()=>{T.ui.showTooltip(i.type.name,i.type.getDescription()),this.modifierCache&&this.modifierCache.length>zr&&this.updateModifierOverflowVisibility(!0)}),o.on("pointerout",()=>{T.ui.hideTooltip(),this.modifierCache&&this.modifierCache.length>zr&&this.updateModifierOverflowVisibility(!1)})});for(const i of this.getAll())this.sendToBack(i);this.modifierCache=e}updateModifierOverflowVisibility(e){const I=this.getAll().reverse();for(const L of I.map(N=>N).slice(zr))L.setVisible(e)}setModifierIconPosition(e,I){const L=12+6*Math.max(Math.ceil(Math.min(I,24)/12)-2,0),N=this.getIndex(e)%L*26/(L/12),S=Math.floor(this.getIndex(e)/L)*20;e.setPosition(this.player?N:-N,S)}};r(sB,"ModifierBar");let kP=sB;const aB=class aB{constructor(e){this.type=e}is(e){const I=xV[e];return I?this instanceof I:!1}match(e){return!1}shouldApply(...e){return!0}};r(aB,"Modifier");let ra=aB;const nB=class nB extends ra{constructor(e,I=1){super(e),this.stackCount=I,this.virtualStackCount=0}add(e,I){for(const L of e)if(this.match(L))return L.incrementStack(this.stackCount,I);return I&&(this.virtualStackCount+=this.stackCount,this.stackCount=0),e.push(this),!0}getArgs(){return[]}incrementStack(e,I){return this.getStackCount()+e<=this.getMaxStackCount()?(I?this.virtualStackCount+=e:this.stackCount+=e,!0):!1}getStackCount(){return this.stackCount+this.virtualStackCount}getCountUnderMax(){return this.getMaxStackCount()-this.getStackCount()}isIconVisible(){return!0}getIcon(e){const I=T.add.container(0,0),L=T.add.sprite(0,12,"items");L.setFrame(this.type.iconImage),L.setOrigin(0,.5),I.add(L);const N=this.getIconStackText();N&&I.add(N);const S=this.getIconStackText(!0);return S&&I.add(S),I}getIconStackText(e){if(this.getMaxStackCount()===1||e&&!this.virtualStackCount)return null;const I=T.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return I.letterSpacing=-.5,this.getStackCount()>=this.getMaxStackCount()&&I.setTint(16291984),I.setOrigin(0,0),I}};r(nB,"PersistentModifier");let _e=nB;const rB=class rB extends ra{add(e){return!0}};r(rB,"ConsumableModifier");let pt=rB;const iB=class iB extends pt{constructor(e,I,L){super(e),this.pokeballType=I,this.count=L}apply(){const e=T.pokeballCounts;return e[this.pokeballType]=Math.min(e[this.pokeballType]+this.count,T3),!0}};r(iB,"AddPokeballModifier");let ia=iB;const CB=class CB extends pt{constructor(e,I,L){super(e),this.voucherType=I,this.count=L}apply(){const e=T.gameData.voucherCounts;return e[this.voucherType]+=this.count,!0}};r(CB,"AddVoucherModifier");let Ca=CB;const UB=class UB extends _e{constructor(e,I,L,N){super(e,N),this.maxBattles=I,this.battleCount=L??this.maxBattles}add(e,I){for(const L of e)if(this.match(L)){const N=L;return N.getBattleCount()<N.getMaxBattles()?(N.resetBattleCount(),T.playSound("se/restore"),!0):!1}return e.push(this),!0}lapse(...e){return this.battleCount--,this.battleCount>0}getIcon(){const e=super.getIcon(),I=Math.floor(120*(this.battleCount/this.maxBattles)+5),L=gm(I,.5,.9),N=gm(I,.7,.3),S=oE(27,0,this.battleCount.toString(),XA.PARTY,{fontSize:"66px",color:L});return S.setShadow(0,0),S.setStroke(N,16),S.setOrigin(1,0),e.add(S),e}getIconStackText(e){return null}getBattleCount(){return this.battleCount}resetBattleCount(){this.battleCount=this.maxBattles}setNewBattleCount(e){this.maxBattles=e,this.battleCount=e}getMaxBattles(){return this.maxBattles}getArgs(){return[this.maxBattles,this.battleCount]}getMaxStackCount(e){return 2}};r(UB,"LapsingPersistentModifier");let gt=UB;const bT=class bT extends gt{match(e){return e instanceof bT&&e.getMaxBattles()===this.getMaxBattles()}clone(){return new bT(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}apply(e){return e.value=e.value/4,!0}};r(bT,"DoubleBattleChanceBoosterModifier");let GS=bT;const kT=class kT extends gt{constructor(e,I,L,N,S){super(e,L,N,S),this.stat=I,this.boost=I!==c.ACC?.3:1}match(e){return e instanceof kT?e.stat===this.stat:!1}clone(){return new kT(this.type,this.stat,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}getArgs(){return[this.stat,...super.getArgs()]}shouldApply(e,I){return!!e&&!!I&&R3.includes(e)&&e===this.stat}apply(e,I){return I.value+=this.boost,!0}};r(kT,"TempStatStageBoosterModifier");let mL=kT;const XT=class XT extends gt{clone(){return new XT(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(e){return e instanceof XT}shouldApply(e){return!!e}apply(e){return e.value++,!0}};r(XT,"TempCritBoosterModifier");let PS=XT;const Wl=class Wl extends _e{clone(){return new Wl(this.type,this.stackCount)}apply(...e){return!0}getMaxStackCount(){return 1}};r(Wl,"MapModifier");let Ua=Wl;const hl=class hl extends _e{clone(){return new hl(this.type,this.stackCount)}apply(...e){return!0}getMaxStackCount(){return 1}};r(hl,"MegaEvolutionAccessModifier");let yL=hl;const dl=class dl extends _e{clone(){return new dl(this.type,this.stackCount)}apply(...e){return!0}getMaxStackCount(){return 1}};r(dl,"GigantamaxAccessModifier");let VL=dl;const pl=class pl extends _e{clone(){return new pl(this.type,this.stackCount)}apply(...e){return!0}getMaxStackCount(){return 1}};r(pl,"TerastallizeAccessModifier");let HS=pl;const oB=class oB extends _e{constructor(e,I,L){super(e,L),this.isTransferable=!0,this.pokemonId=I}match(e){return this.matchType(e)&&e.pokemonId===this.pokemonId}getArgs(){return[this.pokemonId]}shouldApply(e,...I){return!!e&&(this.pokemonId===-1||e.id===this.pokemonId)}isIconVisible(){var e;return!!((e=this.getPokemon())!=null&&e.isOnField())}getIcon(e){const I=e?super.getIcon():T.add.container(0,0);if(e)I.setScale(.5);else{const L=this.getPokemon();if(L){const i=T.addPokemonIcon(L,-2,10,0,.5,void 0,!0);I.add(i),I.setName(L.id.toString())}const N=T.add.sprite(16,this.virtualStackCount?8:16,"items");N.setScale(.5),N.setOrigin(0,.5),N.setTexture("items",this.type.iconImage),I.add(N);const S=this.getIconStackText();S&&I.add(S);const n=this.getIconStackText(!0);n&&I.add(n)}return I}getPokemon(){return this.pokemonId?T.getPokemonById(this.pokemonId)??void 0:void 0}getScoreMultiplier(){return 1}getMaxStackCount(e){const I=this.getPokemon();return I?I.isPlayer()&&e?T.getPlayerParty().map(L=>this.getMaxHeldItemCount(L)).reduce((L,N)=>Math.max(L,N),0):this.getMaxHeldItemCount(I):0}};r(oB,"PokemonHeldItemModifier");let GE=oB;const MB=class MB extends GE{constructor(e,I,L,N){super(e,I,N),this.isTransferable=!1,this.battlesLeft=L}lapse(...e){return!!--this.battlesLeft}getIcon(e){var L;const I=super.getIcon(e);if((L=this.getPokemon())!=null&&L.isPlayer()){const N=oE(27,0,this.battlesLeft.toString(),XA.PARTY,{fontSize:"66px",color:a3.PINK});N.setShadow(0,0),N.setStroke(i3.RED,16),N.setOrigin(1,0),I.add(N)}return I}getBattlesLeft(){return this.battlesLeft}getMaxStackCount(e){return 1}};r(MB,"LapsingPokemonHeldItemModifier");let bC=MB;const QT=class QT extends GE{constructor(e,I,L,N){super(e,I,N),this.isTransferable=!1,this.stat=L}matchType(e){return e instanceof QT?e.stat===this.stat:!1}clone(){return new QT(this.type,this.pokemonId,this.stat,this.stackCount)}getArgs(){return super.getArgs().concat(this.stat)}shouldApply(e,I){return super.shouldApply(e,I)&&Array.isArray(I)}apply(e,I){return I[this.stat]=Math.floor(I[this.stat]*(1+this.getStackCount()*.1)),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(e){return e.ivs[this.stat]}};r(QT,"BaseStatModifier");let uS=QT;const JT=class JT extends GE{constructor(e,I,L,N,S){super(e,I,S),this.isTransferable=!1,this.species=L,this.required=N}matchType(e){return e instanceof JT&&e.species===this.species&&e.required===this.required}clone(){return new JT(this.type,this.pokemonId,this.species,this.required,this.stackCount)}getArgs(){return super.getArgs().concat([this.species,this.required])}apply(){return!0}getIconStackText(e){if(this.getMaxStackCount()===1||e&&!this.virtualStackCount)return null;const I=T.getPokemonById(this.pokemonId);this.stackCount=I?I.evoCounter+I.getHeldItems().filter(N=>N instanceof QL).length+T.findModifiers(N=>N instanceof XO||N instanceof $L||N instanceof qL).length:this.stackCount;const L=T.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return L.letterSpacing=-.5,this.getStackCount()>=this.required&&L.setTint(16291984),L.setOrigin(0,0),L}getMaxHeldItemCount(e){return this.stackCount=e.evoCounter+e.getHeldItems().filter(I=>I instanceof QL).length+T.findModifiers(I=>I instanceof XO||I instanceof $L||I instanceof qL).length,999}};r(JT,"EvoTrackerModifier");let cS=JT;const $T=class $T extends GE{constructor(e,I,L,N){super(e,I,N),this.isTransferable=!1,this.statModifier=L}matchType(e){return e instanceof $T&&this.statModifier===e.statModifier}clone(){return new $T(this.type,this.pokemonId,this.statModifier,this.stackCount)}getArgs(){return super.getArgs().concat(this.statModifier)}shouldApply(e,I){return super.shouldApply(e,I)&&Array.isArray(I)}apply(e,I){return I.forEach((L,N)=>{const S=Math.floor(N===0?L+this.statModifier/2:L+this.statModifier);I[N]=Math.min(Math.max(S,1),999999)}),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(e){return 2}};r($T,"PokemonBaseStatTotalModifier");let BS=$T;const qT=class qT extends GE{constructor(e,I,L,N,S){super(e,I,S),this.isTransferable=!1,this.statModifier=L,this.stats=N}matchType(e){return e instanceof qT&&e.statModifier===this.statModifier&&this.stats.every(I=>e.stats.some(L=>I===L))}clone(){return new qT(this.type,this.pokemonId,this.statModifier,this.stats,this.stackCount)}getArgs(){return[...super.getArgs(),this.statModifier,this.stats]}shouldApply(e,I){return super.shouldApply(e,I)&&Array.isArray(I)}apply(e,I){return I.forEach((L,N)=>{if(this.stats.includes(N)){const S=Math.floor(L+this.statModifier);I[N]=Math.min(Math.max(S,1),999999)}}),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(e){return 1}};r(qT,"PokemonBaseStatFlatModifier");let KS=qT;const zT=class zT extends GE{constructor(){super(...arguments),this.isTransferable=!1}matchType(e){return e instanceof zT}clone(){return new zT(this.type,this.pokemonId,this.stackCount)}shouldApply(e,I,L){return super.shouldApply(e,I,L)&&!!L}apply(e,I,L){return I===c.HP?(L.value+=2*this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(L.value=Math.floor(L.value*1.1))):(L.value+=this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(L.value=Math.floor(L.value*1.05))),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(e){return 50}};r(zT,"PokemonIncrementingStatModifier");let wL=zT;const jT=class jT extends GE{constructor(e,I,L,N,S){super(e,I,S),this.stats=L,this.multiplier=N}clone(){return new jT(this.type,this.pokemonId,this.stats,this.multiplier,this.stackCount)}getArgs(){return[...super.getArgs(),this.stats,this.multiplier]}matchType(e){if(e instanceof jT){const I=e;if(I.multiplier===this.multiplier&&I.stats.length===this.stats.length)return I.stats.every((L,N)=>L===this.stats[N])}return!1}shouldApply(e,I,L){return super.shouldApply(e,I,L)&&this.stats.includes(I)}apply(e,I,L){return L.value*=this.multiplier,!0}getMaxHeldItemCount(e){return 1}};r(jT,"StatBoosterModifier");let vL=jT;const gl=class gl extends vL{matchType(e){return e instanceof gl}shouldApply(e,I,L){return super.shouldApply(e,I,L)&&!e.isMax()}apply(e,I,L){const N=e.getSpeciesForm(!0).speciesId in lE;return e.isFusion()&&e.getFusionSpeciesForm(!0).speciesId in lE!==N?(L.value*=1+(this.multiplier-1)/2,!0):N?super.apply(e,I,L):!1}};r(gl,"EvolutionStatBoosterModifier");let kC=gl;const As=class As extends vL{constructor(e,I,L,N,S,n){super(e,I,L,N,n),this.species=S}clone(){return new As(this.type,this.pokemonId,this.stats,this.multiplier,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(e){if(e instanceof As){const I=e;if(I.species.length===this.species.length)return super.matchType(e)&&I.species.every((L,N)=>L===this.species[N])}return!1}shouldApply(e,I,L){return super.shouldApply(e,I,L)&&(this.species.includes(e.getSpeciesForm(!0).speciesId)||e.isFusion()&&this.species.includes(e.getFusionSpeciesForm(!0).speciesId))}contains(e,I){return this.species.includes(e)&&this.stats.includes(I)}};r(As,"SpeciesStatBoosterModifier");let mt=As;const Es=class Es extends GE{constructor(e,I,L,N){super(e,I,N),this.stageIncrement=L}clone(){return new Es(this.type,this.pokemonId,this.stageIncrement,this.stackCount)}getArgs(){return super.getArgs().concat(this.stageIncrement)}matchType(e){return e instanceof Es?e.stageIncrement===this.stageIncrement:!1}apply(e,I){return I.value+=this.stageIncrement,!0}getMaxHeldItemCount(e){return 1}};r(Es,"CritBoosterModifier");let xL=Es;const es=class es extends xL{constructor(e,I,L,N,S){super(e,I,L,S),this.species=N}clone(){return new es(this.type,this.pokemonId,this.stageIncrement,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(e){return e instanceof es}shouldApply(e,I){return super.shouldApply(e,I)&&(this.species.includes(e.getSpeciesForm(!0).speciesId)||e.isFusion()&&this.species.includes(e.getFusionSpeciesForm(!0).speciesId))}};r(es,"SpeciesCritBoosterModifier");let fS=es;const Rs=class Rs extends GE{constructor(e,I,L,N,S){super(e,I,S),this.moveType=L,this.boostMultiplier=N*.01}matchType(e){if(e instanceof Rs){const I=e;return I.moveType===this.moveType&&I.boostMultiplier===this.boostMultiplier}return!1}clone(){return new Rs(this.type,this.pokemonId,this.moveType,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat([this.moveType,this.boostMultiplier*100])}shouldApply(e,I,L){return super.shouldApply(e,I,L)&&typeof I=="number"&&L instanceof VA&&this.moveType===I}apply(e,I,L){return I===this.moveType&&L.value>=1?(L.value=Math.floor(L.value*(1+this.getStackCount()*this.boostMultiplier)),!0):!1}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(e){return 99}};r(Rs,"AttackTypeBoosterModifier");let sI=Rs;const Os=class Os extends GE{matchType(e){return e instanceof Os}clone(){return new Os(this.type,this.pokemonId,this.stackCount)}shouldApply(e,I){return super.shouldApply(e,I)&&!!I}apply(e,I){return!I.value&&e.randBattleSeedInt(10)<this.getStackCount()?(I.value=!0,T.phaseManager.queueMessage(_.t("modifier:surviveDamageApply",{pokemonNameWithAffix:Q(e),typeName:this.type.name})),!0):!1}getMaxHeldItemCount(e){return 5}};r(Os,"SurviveDamageModifier");let FS=Os;const Is=class Is extends GE{matchType(e){return e instanceof Is}clone(){return new Is(this.type,this.pokemonId,this.stackCount)}shouldApply(e,I){return super.shouldApply(e,I)&&!!I}apply(e,I){var L;if(!I.value&&e.randBattleSeedInt(10)<this.getStackCount()){I.value=!0;const N=((L=T.currentBattle.turnCommands[e.getBattlerIndex()])==null?void 0:L.command)===pI.FIGHT,S=this.type.is("PokemonHeldItemModifierType")&&this.type.id==="QUICK_CLAW";return N&&S&&T.phaseManager.queueMessage(_.t("modifier:bypassSpeedChanceApply",{pokemonName:Q(e),itemName:_.t("modifierType:ModifierType.QUICK_CLAW.name")})),!0}return!1}getMaxHeldItemCount(e){return 3}};r(Is,"BypassSpeedChanceModifier");let ZL=Is;const ts=class ts extends GE{constructor(e,I,L){super(e,I,L),this.chance=10}matchType(e){return e instanceof ts}clone(){return new ts(this.type,this.pokemonId,this.stackCount)}shouldApply(e,I){return super.shouldApply(e,I)&&!!I}apply(e,I){return e.summonData&&!I.value&&e.randBattleSeedInt(100)<this.getStackCount()*this.chance?(I.value=!0,!0):!1}getMaxHeldItemCount(e){return 3}};r(ts,"FlinchChanceModifier");let oa=ts;const Ls=class Ls extends GE{matchType(e){return e instanceof Ls}clone(){return new Ls(this.type,this.pokemonId,this.stackCount)}apply(e){return e.isFullHp()?!1:(T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/16)*this.stackCount,_.t("modifier:turnHealApply",{pokemonNameWithAffix:Q(e),typeName:this.type.name}),!0),!0)}getMaxHeldItemCount(e){return 4}};r(Ls,"TurnHealModifier");let bL=Ls;const Ns=class Ns extends GE{constructor(e,I,L){switch(super(e,I,L),e.id){case"TOXIC_ORB":this.effect=J.TOXIC;break;case"FLAME_ORB":this.effect=J.BURN;break}}matchType(e){return e instanceof Ns}clone(){return new Ns(this.type,this.pokemonId,this.stackCount)}apply(e){return e.trySetStatus(this.effect,!0,void 0,void 0,this.type.name)}getMaxHeldItemCount(e){return 1}getStatusEffect(){return this.effect}};r(Ns,"TurnStatusEffectModifier");let yt=Ns;const Ss=class Ss extends GE{matchType(e){return e instanceof Ss}clone(){return new Ss(this.type,this.pokemonId,this.stackCount)}apply(e){return e.turnData.totalDamageDealt&&!e.isFullHp()&&T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.turnData.totalDamageDealt/8)*this.stackCount,_.t("modifier:hitHealApply",{pokemonNameWithAffix:Q(e),typeName:this.type.name}),!0),!0}getMaxHeldItemCount(e){return 4}};r(Ss,"HitHealModifier");let kL=Ss;const Ts=class Ts extends _e{match(e){return e instanceof Ts}clone(){return new Ts(this.type,this.stackCount)}shouldApply(e){return!!e}apply(e){return e.value+=this.getStackCount(),!0}getMaxStackCount(e){return 99}};r(Ts,"LevelIncrementBoosterModifier");let Rt=Ts;const ss=class ss extends GE{constructor(e,I,L,N){super(e,I,N),this.berryType=L,this.consumed=!1}matchType(e){return e instanceof ss&&e.berryType===this.berryType}clone(){return new ss(this.type,this.pokemonId,this.berryType,this.stackCount)}getArgs(){return super.getArgs().concat(this.berryType)}shouldApply(e){return!this.consumed&&super.shouldApply(e)&&yV(this.berryType)(e)}apply(e){const I=new nE(!1);return T.applyModifiers(Vt,e.isPlayer(),e,I),this.consumed=!I.value,CH(this.berryType)(e),e_("PostItemLostAbAttr",e,!1),e.recordEatenBerry(this.berryType,this.consumed),!0}getMaxHeldItemCount(e){return[EE.LUM,EE.LEPPA,EE.SITRUS,EE.ENIGMA].includes(this.berryType)?2:3}};r(ss,"BerryModifier");let ce=ss;const as=class as extends _e{match(e){return e instanceof as}clone(){return new as(this.type,this.stackCount)}shouldApply(e,I){return!!e&&!!I}apply(e,I){return I.value||(I.value=e.randBattleSeedInt(10)<this.getStackCount()*3),!0}getMaxStackCount(){return 3}};r(as,"PreserveBerryModifier");let Vt=as;const ns=class ns extends GE{matchType(e){return e instanceof ns}clone(){return new ns(this.type,this.pokemonId,this.stackCount)}apply(e){T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/2),_.t("modifier:pokemonInstantReviveApply",{pokemonNameWithAffix:Q(e),typeName:this.type.name}),!1,!1,!0),e.resetStatus(!0,!1,!0,!1);const I=e.isPlayer()?T.getPlayerField():T.getEnemyField();for(const L of I)SE("CommanderAbAttr",L,null,!1);return!0}getMaxHeldItemCount(e){return 1}};r(ns,"PokemonInstantReviveModifier");let YS=ns;const rs=class rs extends GE{matchType(e){return e instanceof rs}clone(){return new rs(this.type,this.pokemonId,this.stackCount)}apply(e){let I=!1;for(const L of MI)e.getStatStage(L)<0&&(e.setStatStage(L,0),I=!0);return I&&T.phaseManager.queueMessage(_.t("modifier:resetNegativeStatStageApply",{pokemonNameWithAffix:Q(e),typeName:this.type.name})),I}getMaxHeldItemCount(e){return 2}};r(rs,"ResetNegativeStatStageModifier");let Ma=rs;const is=class is extends GE{apply(e,I){return I.value+=2*this.stackCount,!0}matchType(e){return e instanceof is}clone(){return new is(this.type,this.pokemonId,this.stackCount)}getMaxHeldItemCount(e){return 2}};r(is,"FieldEffectModifier");let XL=is;const DB=class DB extends pt{constructor(e,I){super(e),this.pokemonId=I}shouldApply(e,...I){return!!e&&(this.pokemonId===-1||e.id===this.pokemonId)}getPokemon(){return T.getPlayerParty().find(e=>e.id===this.pokemonId)}};r(DB,"ConsumablePokemonModifier");let IO=DB;const lB=class lB extends IO{constructor(e,I,L){super(e,I),this.teraType=L}shouldApply(e){var I;return super.shouldApply(e)&&[e==null?void 0:e.species.speciesId,(I=e==null?void 0:e.fusionSpecies)==null?void 0:I.speciesId].filter(L=>L===A.TERAPAGOS||L===A.OGERPON||L===A.SHEDINJA).length===0}apply(e){return e.teraType=this.teraType,!0}};r(lB,"TerrastalizeModifier");let Da=lB;const _B=class _B extends IO{constructor(e,I,L,N,S,n){super(e,I),this.restorePoints=L,this.restorePercent=N,this.healStatus=S,this.fainted=!!n}shouldApply(e,I){return super.shouldApply(e)&&(this.fainted||!SA(I)&&typeof I=="number")}apply(e,I){if(!e.hp===this.fainted){let L=this.restorePoints;return this.fainted||(L=Math.floor(L*I)),(this.fainted||this.healStatus)&&e.resetStatus(!0,!0,!1,!1),e.hp=Math.min(e.hp+Math.max(Math.ceil(Math.max(Math.floor(this.restorePercent*.01*e.getMaxHp()),L)),1),e.getMaxHp()),!0}return!1}};r(_B,"PokemonHpRestoreModifier");let wt=_B;const GB=class GB extends IO{apply(e){return e.resetStatus(!0,!0,!1,!1),!0}};r(GB,"PokemonStatusHealModifier");let la=GB;const PB=class PB extends IO{constructor(e,I,L){super(e,I),this.moveIndex=L}};r(PB,"ConsumablePokemonMoveModifier");let WS=PB;const HB=class HB extends WS{constructor(e,I,L,N){super(e,I,L),this.restorePoints=N}apply(e){const I=e.getMoveset()[this.moveIndex];return I&&(I.ppUsed=this.restorePoints>-1?Math.max(I.ppUsed-this.restorePoints,0):0),!0}};r(HB,"PokemonPpRestoreModifier");let _a=HB;const uB=class uB extends IO{constructor(e,I,L){super(e,I),this.restorePoints=L}apply(e){for(const I of e.getMoveset())I&&(I.ppUsed=this.restorePoints>-1?Math.max(I.ppUsed-this.restorePoints,0):0);return!0}};r(uB,"PokemonAllMovePpRestoreModifier");let Ga=uB;const cB=class cB extends WS{constructor(e,I,L,N){super(e,I,L),this.upPoints=N}apply(e){const I=e.getMoveset()[this.moveIndex];return I&&!I.maxPpOverride&&(I.ppUp=Math.min(I.ppUp+this.upPoints,3)),!0}};r(cB,"PokemonPpUpModifier");let Pa=cB;const BB=class BB extends IO{constructor(e,I,L){super(e,I),this.nature=L}apply(e){return e.setCustomNature(this.nature),T.gameData.unlockSpeciesNature(e.species,this.nature),!0}};r(BB,"PokemonNatureChangeModifier");let Ha=BB;const KB=class KB extends IO{apply(e,I=new VA(1)){return T.applyModifiers(Rt,!0,I),e.level+=I.value,e.level<=T.getMaxExpLevel(!0)&&(e.exp=BO(e.level,e.species.growthRate),e.levelExp=0),e.addFriendship(hy),T.phaseManager.unshiftNew("LevelUpPhase",T.getPlayerParty().indexOf(e),e.level-I.value,e.level),!0}};r(KB,"PokemonLevelIncrementModifier");let hS=KB;const fB=class fB extends IO{apply(e){return T.phaseManager.unshiftNew("LearnMovePhase",T.getPlayerParty().indexOf(e),this.type.moveId,UH.TM),!0}};r(fB,"TmModifier");let ua=fB;const FB=class FB extends IO{constructor(e,I,L){super(e,I),this.levelMoveIndex=L}apply(e,I){return T.phaseManager.unshiftNew("LearnMovePhase",T.getPlayerParty().indexOf(e),e.getLearnableLevelMoves()[this.levelMoveIndex],UH.MEMORY,I),!0}};r(FB,"RememberMoveModifier");let ca=FB;const YB=class YB extends IO{apply(e){let I=lE.hasOwnProperty(e.species.speciesId)?lE[e.species.speciesId].find(L=>L.item===this.type.evolutionItem&&(L.evoFormKey===null||(L.preFormKey||"")===e.getFormKey())&&(!L.condition||L.condition.predicate(e))):null;return!I&&e.isFusion()&&(I=lE[e.fusionSpecies.speciesId].find(L=>L.item===this.type.evolutionItem&&(L.evoFormKey===null||(L.preFormKey||"")===e.getFusionFormKey())&&(!L.condition||L.condition.predicate(e))),I&&(I=new ft(e.species.speciesId,I))),I?(T.phaseManager.unshiftNew("EvolutionPhase",e,I,e.level-1),!0):!1}};r(YB,"EvolutionItemModifier");let Ba=YB;const WB=class WB extends IO{constructor(e,I,L){super(e,I),this.fusePokemonId=L}shouldApply(e,I){return super.shouldApply(e,I)&&!!I&&this.fusePokemonId===I.id}apply(e,I){return e.fuse(I),!0}};r(WB,"FusePokemonModifier");let Ka=WB;const Cs=class Cs extends _e{match(e){return e instanceof Cs}apply(){return!0}clone(){return new Cs(this.type,this.stackCount)}getMaxStackCount(){return 5}};r(Cs,"MultipleParticipantExpBonusModifier");let fa=Cs;const Us=class Us extends _e{constructor(e,I,L){super(e,L),this.multiplier=I}match(e){return e instanceof Us}clone(){return new Us(this.type,this.multiplier,this.stackCount)}getArgs(){return[this.multiplier]}apply(e){return e.value*=1+(this.multiplier-1)*this.getStackCount(),!0}getMaxStackCount(){return 5}};r(Us,"HealingBoosterModifier");let dS=Us;const os=class os extends _e{constructor(e,I,L){super(e,L),this.boostMultiplier=I*.01}match(e){return e instanceof os?e.boostMultiplier===this.boostMultiplier:!1}clone(){return new os(this.type,this.boostMultiplier*100,this.stackCount)}getArgs(){return[this.boostMultiplier*100]}apply(e){return e.value=Math.floor(e.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxStackCount(e){return this.boostMultiplier<1?this.boostMultiplier<.6?99:30:10}};r(os,"ExpBoosterModifier");let Fa=os;const Ms=class Ms extends GE{constructor(e,I,L,N){super(e,I,N),this.boostMultiplier=L*.01}matchType(e){return e instanceof Ms?e.boostMultiplier===this.boostMultiplier:!1}clone(){return new Ms(this.type,this.pokemonId,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.boostMultiplier*100)}shouldApply(e,I){return super.shouldApply(e,I)&&!!I}apply(e,I){return I.value=Math.floor(I.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxHeldItemCount(e){return 99}};r(Ms,"PokemonExpBoosterModifier");let Ya=Ms;const Ds=class Ds extends _e{match(e){return e instanceof Ds}clone(){return new Ds(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 5}};r(Ds,"ExpShareModifier");let Wa=Ds;const ls=class ls extends _e{match(e){return e instanceof ls}clone(){return new ls(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 4}};r(ls,"ExpBalanceModifier");let ha=ls;const _s=class _s extends GE{matchType(e){return e instanceof _s}clone(){return new _s(this.type,this.pokemonId,this.stackCount)}apply(e,I){return I.value=Math.floor(I.value*(1+.5*this.getStackCount())),!0}getMaxHeldItemCount(e){return 3}};r(_s,"PokemonFriendshipBoosterModifier");let pS=_s;const Gs=class Gs extends GE{matchType(e){return e instanceof Gs}clone(){return new Gs(this.type,this.pokemonId,this.stackCount)}apply(e,I){return I.value!==1?(I.value+=.1*this.getStackCount()*(I.value>1?1:-1),!0):!1}getMaxHeldItemCount(e){return 10}};r(Gs,"PokemonNatureWeightModifier");let gS=Gs;const Ps=class Ps extends GE{constructor(e,I,L,N){super(e,I,N),this.accuracyAmount=L}matchType(e){return e instanceof Ps?e.accuracyAmount===this.accuracyAmount:!1}clone(){return new Ps(this.type,this.pokemonId,this.accuracyAmount,this.stackCount)}getArgs(){return super.getArgs().concat(this.accuracyAmount)}shouldApply(e,I){return super.shouldApply(e,I)&&!!I}apply(e,I){return I.value=I.value+this.accuracyAmount*this.getStackCount(),!0}getMaxHeldItemCount(e){return 3}};r(Ps,"PokemonMoveAccuracyBoosterModifier");let mS=Ps;const Hs=class Hs extends GE{matchType(e){return e instanceof Hs}clone(){return new Hs(this.type,this.pokemonId,this.stackCount)}apply(e,I,L=null,N=null){return FA[I].canBeMultiStrikeEnhanced(e)?SA(L)?SA(N)?!1:this.applyDamageModifier(e,N):this.applyHitCountBoost(L):!1}applyHitCountBoost(e){return e.value+=this.getStackCount(),!0}applyDamageModifier(e,I){return e.turnData.hitsLeft===e.turnData.hitCount?(I.value*=1-.25*this.getStackCount(),!0):e.turnData.hitCount-e.turnData.hitsLeft!==this.getStackCount()+1?(I.value*=.25,!0):!1}getMaxHeldItemCount(e){return 2}};r(Hs,"PokemonMultiHitModifier");let Ot=Hs;const us=class us extends GE{constructor(e,I,L,N,S){super(e,I,S),this.isTransferable=!1,this.formChangeItem=L,this.active=N}matchType(e){return e instanceof us&&e.formChangeItem===this.formChangeItem}clone(){return new us(this.type,this.pokemonId,this.formChangeItem,this.active,this.stackCount)}getArgs(){return super.getArgs().concat(this.formChangeItem,this.active)}apply(e,I){const L=this.active&&!I;L&&(this.active=!1);const N=T.triggerPokemonFormChange(e,rA);return L&&(this.active=!0),N}getMaxHeldItemCount(e){return 1}};r(us,"PokemonFormChangeItemModifier");let VI=us;const hB=class hB extends pt{constructor(e,I){super(e),this.moneyMultiplier=I}apply(){const e=new VA(T.getWaveMoneyAmount(this.moneyMultiplier));return T.applyModifiers(XO,!0,e),T.addMoney(e.value),T.getPlayerParty().map(I=>{var L,N;if(((L=I.species)==null?void 0:L.speciesId)===A.GIMMIGHOUL||((N=I.fusionSpecies)==null?void 0:N.speciesId)===A.GIMMIGHOUL){I.evoCounter?I.evoCounter+=Math.min(Math.floor(this.moneyMultiplier),3):I.evoCounter=Math.min(Math.floor(this.moneyMultiplier),3);const S=s3(k.EVOLUTION_TRACKER_GIMMIGHOUL).newModifier(I);T.addModifier(S)}}),!0}};r(hB,"MoneyRewardModifier");let da=hB;const cs=class cs extends _e{match(e){return e instanceof cs}clone(){return new cs(this.type,this.stackCount)}apply(e){return e.value+=Math.floor(e.value*.2*this.getStackCount()),!0}getMaxStackCount(){return 5}};r(cs,"MoneyMultiplierModifier");let XO=cs;const Bs=class Bs extends GE{matchType(e){return e instanceof Bs}clone(){return new Bs(this.type,this.pokemonId,this.stackCount)}apply(e,I){const L=new VA(Math.floor(I.value*(.5*this.getStackCount())));return T.applyModifiers(XO,!0,L),T.addMoney(L.value),!0}getMaxHeldItemCount(e){return 5}};r(Bs,"DamageMoneyRewardModifier");let QL=Bs;const Ks=class Ks extends _e{match(e){return e instanceof Ks}apply(){const e=Math.floor(T.money*.1*this.getStackCount());T.addMoney(e);const I=navigator.language||"en-US",L=e.toLocaleString(I),N=_.t("modifier:moneyInterestApply",{moneyAmount:L,typeName:this.type.name});return T.phaseManager.queueMessage(N,void 0,!0),!0}clone(){return new Ks(this.type,this.stackCount)}getMaxStackCount(){return 5}};r(Ks,"MoneyInterestModifier");let pa=Ks;const fs=class fs extends _e{match(e){return e instanceof fs}clone(){return new fs(this.type,this.stackCount)}apply(e){return e.value*=Math.pow(2,-1-this.getStackCount()),!0}getMaxStackCount(){return 4}};r(fs,"HiddenAbilityRateBoosterModifier");let aI=fs;const Fs=class Fs extends _e{match(e){return e instanceof Fs}clone(){return new Fs(this.type,this.stackCount)}apply(e){return e.value*=Math.pow(2,1+this.getStackCount()),!0}getMaxStackCount(){return 4}};r(Fs,"ShinyRateBoosterModifier");let vt=Fs;const Ys=class Ys extends _e{match(e){return e instanceof Ys}clone(){return new Ys(this.type,this.stackCount)}apply(e){return e.value*=1.5+this.getStackCount()/2,!0}getMaxStackCount(){return 3}};r(Ys,"CriticalCatchChanceBoosterModifier");let ga=Ys;const Ws=class Ws extends _e{match(e){return e instanceof Ws}apply(){return!0}clone(){return new Ws(this.type,this.stackCount)}getMaxStackCount(){return 1}};r(Ws,"LockModifierTiersModifier");let ma=Ws;const hs=class hs extends _e{constructor(e,I,L){super(e,L),this.shopMultiplier=I??2.5}match(e){return e instanceof hs}clone(){return new hs(this.type,this.shopMultiplier,this.stackCount)}apply(e){return e.value=Math.floor(e.value*this.shopMultiplier),!0}getArgs(){return super.getArgs().concat(this.shopMultiplier)}getMaxStackCount(){return 1}};r(hs,"HealShopCostModifier");let yS=hs;const ds=class ds extends _e{match(e){return e instanceof ds}clone(){return new ds(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 1}};r(ds,"BoostBugSpawnModifier");let ya=ds;const ps=class ps extends GE{matchType(e){return e instanceof ps}clone(){return new ps(this.type,this.pokemonId,this.stackCount)}apply(){return!0}getMaxHeldItemCount(e){return 1}};r(ps,"SwitchEffectTransferModifier");let Va=ps;const dB=class dB extends GE{getTargets(e,...I){var L;return((L=e==null?void 0:e.getOpponents)==null?void 0:L.call(e))??[]}apply(e,I,...L){const N=this.getTargets(e,I);if(!N.length)return!1;const S=N[e.randBattleSeedInt(N.length)],n=this.getTransferredItemCount();if(!n)return!1;const i=[],C=T.findModifiers(o=>o instanceof GE&&o.pokemonId===S.id&&o.isTransferable,S.isPlayer());for(let o=0;o<n&&C.length;o++){const l=e.randBattleSeedInt(C.length),H=C[l];T.tryTransferHeldItemModifier(H,e,!1)&&(i.push(H.type),C.splice(l,1))}for(const o of i)T.phaseManager.queueMessage(this.getTransferMessage(e,S,o));return!!i.length}};r(dB,"HeldItemTransferModifier");let VS=dB;const gs=class gs extends VS{constructor(){super(...arguments),this.isTransferable=!0}matchType(e){return e instanceof gs}clone(){return new gs(this.type,this.pokemonId,this.stackCount)}getTransferredItemCount(){return this.getStackCount()}getTransferMessage(e,I,L){return _.t("modifier:turnHeldItemTransferApply",{pokemonNameWithAffix:Q(I),itemName:L.name,pokemonName:e.getNameToRender(),typeName:this.type.name})}getMaxHeldItemCount(e){return 1}setTransferrableFalse(){this.isTransferable=!1}};r(gs,"TurnHeldItemTransferModifier");let wS=gs;const ms=class ms extends VS{constructor(e,I,L,N){super(e,I,N),this.chance=L/100}getTargets(e,I){return I?[I]:[]}matchType(e){return e instanceof ms}clone(){return new ms(this.type,this.pokemonId,this.chance*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.chance*100)}getTransferredItemCount(){return nI()<=this.chance*this.getStackCount()?1:0}getTransferMessage(e,I,L){return _.t("modifier:contactHeldItemTransferApply",{pokemonNameWithAffix:Q(I),itemName:L.name,pokemonName:Q(e),typeName:this.type.name})}getMaxHeldItemCount(e){return 5}};r(ms,"ContactHeldItemTransferChanceModifier");let JL=ms;const ys=class ys extends _e{constructor(e,I){super(e)}match(e){return e instanceof ys}clone(){return new ys(this.type)}apply(){return!0}getMaxStackCount(){return 1}};r(ys,"IvScannerModifier");let vS=ys;const Vs=class Vs extends _e{match(e){return e instanceof Vs}clone(){return new Vs(this.type,this.stackCount)}apply(e){return e.value+=this.getStackCount(),!0}getMaxStackCount(){return 3}};r(Vs,"ExtraModifierModifier");let $L=Vs;const ws=class ws extends gt{add(e,I){for(const L of e)if(this.match(L)){const N=L,S=this.getMaxBattles()+N.getBattleCount();return N.setNewBattleCount(S),T.playSound("se/restore"),!0}return e.push(this),!0}clone(){return new ws(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(e){return e instanceof ws}apply(e){return e.value+=this.getStackCount(),!0}};r(ws,"TempExtraModifierModifier");let qL=ws;const pB=class pB extends _e{getMaxStackCount(){return 5}};r(pB,"EnemyPersistentModifier");let wI=pB;const gB=class gB extends wI{constructor(e,I,L){super(e,L),this.damageMultiplier=I}apply(e){return e.value=UE(e.value*Math.pow(this.damageMultiplier,this.getStackCount())),!0}getMaxStackCount(){return 99}};r(gB,"EnemyDamageMultiplierModifier");let wa=gB;const vs=class vs extends wa{constructor(e,I,L){super(e,1.05,L)}match(e){return e instanceof vs}clone(){return new vs(this.type,(this.damageMultiplier-1)*100,this.stackCount)}getArgs(){return[(this.damageMultiplier-1)*100]}getMaxStackCount(){return 999}};r(vs,"EnemyDamageBoosterModifier");let xS=vs;const xs=class xs extends wa{constructor(e,I,L){super(e,.975,L)}match(e){return e instanceof xs}clone(){return new xs(this.type,(1-this.damageMultiplier)*100,this.stackCount)}getArgs(){return[(1-this.damageMultiplier)*100]}getMaxStackCount(){return T.currentBattle.waveIndex<2e3?super.getMaxStackCount():999}};r(xs,"EnemyDamageReducerModifier");let ZS=xs;const Zs=class Zs extends wI{constructor(e,I,L){super(e,L),this.healPercent=2}match(e){return e instanceof Zs}clone(){return new Zs(this.type,this.healPercent,this.stackCount)}getArgs(){return[this.healPercent]}apply(e){return e.isFullHp()?!1:(T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),Math.max(Math.floor(e.getMaxHp()/(100/this.healPercent))*this.stackCount,1),_.t("modifier:enemyTurnHealApply",{pokemonNameWithAffix:Q(e)}),!0,!1,!1,!1,!0),!0)}getMaxStackCount(){return 10}};r(Zs,"EnemyTurnHealModifier");let va=Zs;const bs=class bs extends wI{constructor(e,I,L,N){super(e,N),this.effect=I,this.chance=.025*(this.effect===J.BURN||this.effect===J.POISON?2:1)}match(e){return e instanceof bs&&e.effect===this.effect}clone(){return new bs(this.type,this.effect,this.chance*100,this.stackCount)}getArgs(){return[this.effect,this.chance*100]}apply(e){return nI()<=this.chance*this.getStackCount()?e.trySetStatus(this.effect,!0):!1}getMaxStackCount(){return 10}};r(bs,"EnemyAttackStatusEffectChanceModifier");let xa=bs;const ks=class ks extends wI{constructor(e,I,L){super(e,L),this.chance=.025}match(e){return e instanceof ks}clone(){return new ks(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(e){return!e.status||nI()>this.chance*this.getStackCount()?!1:(T.phaseManager.queueMessage($t(e.status.effect,Q(e))),e.resetStatus(),e.updateInfo(),!0)}getMaxStackCount(){return 10}};r(ks,"EnemyStatusEffectHealChanceModifier");let Za=ks;const Xs=class Xs extends wI{constructor(e,I,L){super(e,L||10),this.chance=2}match(e){return e instanceof Xs}clone(){return new Xs(this.type,this.chance,this.stackCount)}getArgs(){return[this.chance]}apply(e){return e.waveData.endured||e.randBattleSeedInt(100)>=this.chance*this.getStackCount()?!1:(e.addTag(d.ENDURE_TOKEN,1),e.waveData.endured=!0,!0)}getMaxStackCount(){return 10}};r(Xs,"EnemyEndureChanceModifier");let ba=Xs;const Qs=class Qs extends wI{constructor(e,I,L){super(e,L),this.chance=I/100}match(e){return e instanceof Qs&&e.chance===this.chance}clone(){return new Qs(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(e){return nI()>this.chance*this.getStackCount()?!1:(e.value=!0,!0)}getMaxStackCount(){return 10}};r(Qs,"EnemyFusionChanceModifier");let bS=Qs;function wV(R=!0){const e=R?aE.STARTING_MODIFIER_OVERRIDE:aE.OPP_MODIFIER_OVERRIDE;if(!(!e||e.length===0||!T)){R||T.clearEnemyModifiers();for(const I of e){const L=k[I.name];let N=L();if(N.is("ModifierTypeGenerator")){const n="type"in I&&I.type!==null?[I.type]:void 0;N=N.generateType([],n)}const S=N&&N.withIdFromFunc(L).newModifier();S&&(S.stackCount=I.count||1,R?T.addModifier(S,!0,!1,!1,!0):T.addEnemyModifier(S,!0,!0))}}}r(wV,"overrideModifiers");function vV(R,e=!0){const I=e?aE.STARTING_HELD_ITEMS_OVERRIDE:aE.OPP_HELD_ITEMS_OVERRIDE;if(!(!I||I.length===0||!T)){e||T.clearEnemyHeldItemModifiers(R);for(const L of I){const N=k[L.name];let S=N();const n=L.count||1;if(S.is("ModifierTypeGenerator")){const C="type"in L&&L.type!==null?[L.type]:void 0;S=S.generateType([],C)}const i=S&&S.withIdFromFunc(N).newModifier(R);i&&(i.pokemonId=R.id,i.stackCount=n,e?T.addModifier(i,!0,!1,!1,!0):T.addEnemyModifier(i,!0,!0))}}}r(vV,"overrideHeldItems");const xV=Object.freeze({PersistentModifier:_e,ConsumableModifier:pt,AddPokeballModifier:ia,AddVoucherModifier:Ca,LapsingPersistentModifier:gt,DoubleBattleChanceBoosterModifier:GS,TempStatStageBoosterModifier:mL,TempCritBoosterModifier:PS,MapModifier:Ua,MegaEvolutionAccessModifier:yL,GigantamaxAccessModifier:VL,TerastallizeAccessModifier:HS,PokemonHeldItemModifier:GE,LapsingPokemonHeldItemModifier:bC,BaseStatModifier:uS,EvoTrackerModifier:cS,PokemonBaseStatTotalModifier:BS,PokemonBaseStatFlatModifier:KS,PokemonIncrementingStatModifier:wL,StatBoosterModifier:vL,SpeciesStatBoosterModifier:mt,CritBoosterModifier:xL,SpeciesCritBoosterModifier:fS,AttackTypeBoosterModifier:sI,SurviveDamageModifier:FS,BypassSpeedChanceModifier:ZL,FlinchChanceModifier:oa,TurnHealModifier:bL,TurnStatusEffectModifier:yt,HitHealModifier:kL,LevelIncrementBoosterModifier:Rt,BerryModifier:ce,PreserveBerryModifier:Vt,PokemonInstantReviveModifier:YS,ResetNegativeStatStageModifier:Ma,FieldEffectModifier:XL,ConsumablePokemonModifier:IO,TerrastalizeModifier:Da,PokemonHpRestoreModifier:wt,PokemonStatusHealModifier:la,ConsumablePokemonMoveModifier:WS,PokemonPpRestoreModifier:_a,PokemonAllMovePpRestoreModifier:Ga,PokemonPpUpModifier:Pa,PokemonNatureChangeModifier:Ha,PokemonLevelIncrementModifier:hS,TmModifier:ua,RememberMoveModifier:ca,EvolutionItemModifier:Ba,FusePokemonModifier:Ka,MultipleParticipantExpBonusModifier:fa,HealingBoosterModifier:dS,ExpBoosterModifier:Fa,PokemonExpBoosterModifier:Ya,ExpShareModifier:Wa,ExpBalanceModifier:ha,PokemonFriendshipBoosterModifier:pS,PokemonNatureWeightModifier:gS,PokemonMoveAccuracyBoosterModifier:mS,PokemonMultiHitModifier:Ot,PokemonFormChangeItemModifier:VI,MoneyRewardModifier:da,DamageMoneyRewardModifier:QL,MoneyInterestModifier:pa,HiddenAbilityRateBoosterModifier:aI,ShinyRateBoosterModifier:vt,CriticalCatchChanceBoosterModifier:ga,LockModifierTiersModifier:ma,HealShopCostModifier:yS,BoostBugSpawnModifier:ya,SwitchEffectTransferModifier:Va,HeldItemTransferModifier:VS,TurnHeldItemTransferModifier:wS,ContactHeldItemTransferChanceModifier:JL,IvScannerModifier:vS,ExtraModifierModifier:$L,TempExtraModifierModifier:qL,EnemyPersistentModifier:wI,EnemyDamageMultiplierModifier:wa,EnemyDamageBoosterModifier:xS,EnemyDamageReducerModifier:ZS,EnemyTurnHealModifier:va,EnemyAttackStatusEffectChanceModifier:xa,EnemyStatusEffectHealChanceModifier:Za,EnemyEndureChanceModifier:ba,EnemyFusionChanceModifier:bS,MoneyMultiplierModifier:XO}),RZ=Object.freeze(Object.defineProperty({__proto__:null,AddPokeballModifier:ia,AddVoucherModifier:Ca,AttackTypeBoosterModifier:sI,BaseStatModifier:uS,BerryModifier:ce,BoostBugSpawnModifier:ya,BypassSpeedChanceModifier:ZL,ConsumableModifier:pt,ConsumablePokemonModifier:IO,ConsumablePokemonMoveModifier:WS,ContactHeldItemTransferChanceModifier:JL,CritBoosterModifier:xL,CriticalCatchChanceBoosterModifier:ga,DamageMoneyRewardModifier:QL,DoubleBattleChanceBoosterModifier:GS,EnemyAttackStatusEffectChanceModifier:xa,EnemyDamageBoosterModifier:xS,EnemyDamageReducerModifier:ZS,EnemyEndureChanceModifier:ba,EnemyFusionChanceModifier:bS,EnemyPersistentModifier:wI,EnemyStatusEffectHealChanceModifier:Za,EnemyTurnHealModifier:va,EvoTrackerModifier:cS,EvolutionItemModifier:Ba,EvolutionStatBoosterModifier:kC,ExpBalanceModifier:ha,ExpBoosterModifier:Fa,ExpShareModifier:Wa,ExtraModifierModifier:$L,FieldEffectModifier:XL,FlinchChanceModifier:oa,FusePokemonModifier:Ka,GigantamaxAccessModifier:VL,HealShopCostModifier:yS,HealingBoosterModifier:dS,HeldItemTransferModifier:VS,HiddenAbilityRateBoosterModifier:aI,HitHealModifier:kL,IvScannerModifier:vS,LapsingPersistentModifier:gt,LapsingPokemonHeldItemModifier:bC,LevelIncrementBoosterModifier:Rt,LockModifierTiersModifier:ma,MapModifier:Ua,MegaEvolutionAccessModifier:yL,Modifier:ra,ModifierBar:kP,MoneyInterestModifier:pa,MoneyMultiplierModifier:XO,MoneyRewardModifier:da,MultipleParticipantExpBonusModifier:fa,PersistentModifier:_e,PokemonAllMovePpRestoreModifier:Ga,PokemonBaseStatFlatModifier:KS,PokemonBaseStatTotalModifier:BS,PokemonExpBoosterModifier:Ya,PokemonFormChangeItemModifier:VI,PokemonFriendshipBoosterModifier:pS,PokemonHeldItemModifier:GE,PokemonHpRestoreModifier:wt,PokemonIncrementingStatModifier:wL,PokemonInstantReviveModifier:YS,PokemonLevelIncrementModifier:hS,PokemonMoveAccuracyBoosterModifier:mS,PokemonMultiHitModifier:Ot,PokemonNatureChangeModifier:Ha,PokemonNatureWeightModifier:gS,PokemonPpRestoreModifier:_a,PokemonPpUpModifier:Pa,PokemonStatusHealModifier:la,PreserveBerryModifier:Vt,RememberMoveModifier:ca,ResetNegativeStatStageModifier:Ma,ShinyRateBoosterModifier:vt,SpeciesCritBoosterModifier:fS,SpeciesStatBoosterModifier:mt,StatBoosterModifier:vL,SurviveDamageModifier:FS,SwitchEffectTransferModifier:Va,TempCritBoosterModifier:PS,TempExtraModifierModifier:qL,TempStatStageBoosterModifier:mL,TerastallizeAccessModifier:HS,TerrastalizeModifier:Da,TmModifier:ua,TurnHealModifier:bL,TurnHeldItemTransferModifier:wS,TurnStatusEffectModifier:yt,modifierSortFunc:ZC,overrideHeldItems:vV,overrideModifiers:wV},Symbol.toStringTag,{value:"Module"})),mB=class mB{constructor(e,I,L=0){this.eventTarget=new EventTarget,this.biomeType=e,this.tags=[],this.bgm=I,this.trainerPool=UN[e],this.updatePoolsForTimeOfDay(),this.playerTerasUsed=0,this.playerFaints=L}init(){const e=oH(this.biomeType);T.arenaPlayer.setBiome(this.biomeType),T.arenaPlayerTransition.setBiome(this.biomeType),T.arenaEnemy.setBiome(this.biomeType),T.arenaNextEnemy.setBiome(this.biomeType),T.arenaBg.setTexture(`${e}_bg`),T.arenaBgTransition.setTexture(`${e}_bg`),this.updatePoolsForTimeOfDay()}updatePoolsForTimeOfDay(){const e=this.getTimeOfDay();if(e!==this.lastTimeOfDay){this.pokemonPool={};for(const I of Object.keys(rO[this.biomeType]))this.pokemonPool[I]=Object.assign([],rO[this.biomeType][I][a.ALL]).concat(rO[this.biomeType][I][e]);this.lastTimeOfDay=e}}randomSpecies(e,I,L,N,S){const n=T.gameMode.getOverrideSpecies(e);if(n)return n;const i=!!T.getEncounterBossSegments(e,I)&&!!this.pokemonPool[ne.BOSS].length&&(this.biomeType!==s.END||T.gameMode.isClassic||T.gameMode.isWaveFinal(e)),C=i?64:512;let o=0;typeof N<"u"&&(o=N*(i?.5:2));const l=DA(C-o);let H=i?l>=20?ne.BOSS:l>=6?ne.BOSS_RARE:l>=1?ne.BOSS_SUPER_RARE:ne.BOSS_ULTRA_RARE:l>=156?ne.COMMON:l>=32?ne.UNCOMMON:l>=6?ne.RARE:l>=1?ne.SUPER_RARE:ne.ULTRA_RARE;for(ne[H];!this.pokemonPool[H].length;)`${ne[H]}${ne[H-1]}`,H--;const P=this.pokemonPool[H];let K,f=!1;if(!P.length)K=T.randomSpecies(e,I);else{const F=P[DA(P.length)];let w;if(typeof F=="number")w=F;else{const m=Object.keys(F);for(let y=m.length-1;y>=0;y--){const x=Number.parseInt(m[y]);if(I>=x){const q=F[x];q.length>1?w=q[DA(q.length)]:w=q[0];break}}}if(K=YA(w),K.subLegendary||K.legendary||K.mythical)switch(!0){case K.baseTotal>=720:f=I<90;break;case K.baseTotal>=670:f=I<70;break;case K.baseTotal>=580:f=I<50;break;default:f=I<30;break}}if(f&&(L||0)<10)return this.randomSpecies(e,I,(L||0)+1);const h=K.getWildSpeciesForLevel(I,!0,S??i,T.gameMode);return h!==K.speciesId&&(A[K.speciesId],A[h],K=YA(h)),K}randomTrainerType(e,I=!1){const L=!!this.trainerPool[ne.BOSS].length&&(T.gameMode.isTrainerBoss(e,this.biomeType,T.offsetGym)||I);this.trainerPool;const N=DA(L?64:512);let S=L?N>=20?ne.BOSS:N>=6?ne.BOSS_RARE:N>=1?ne.BOSS_SUPER_RARE:ne.BOSS_ULTRA_RARE:N>=156?ne.COMMON:N>=32?ne.UNCOMMON:N>=6?ne.RARE:N>=1?ne.SUPER_RARE:ne.ULTRA_RARE;for(ne[S];S&&!this.trainerPool[S].length;)`${ne[S]}${ne[S-1]}`,S--;const n=this.trainerPool[S]||[];return n.length?n[DA(n.length)]:U.BREEDER}getSpeciesFormIndex(e){switch(e.speciesId){case A.BURMY:case A.WORMADAM:switch(this.biomeType){case s.BEACH:return 1;case s.SLUM:return 2}break;case A.ROTOM:switch(this.biomeType){case s.VOLCANO:return 1;case s.SEA:return 2;case s.ICE_CAVE:return 3;case s.MOUNTAIN:return 4;case s.TALL_GRASS:return 5}break;case A.LYCANROC:switch(this.getTimeOfDay()){case a.DAY:case a.DAWN:return 0;case a.DUSK:return 2;case a.NIGHT:return 1}break}return 0}getBgTerrainColorRatioForBiome(){switch(this.biomeType){case s.SPACE:return 1;case s.END:return 0}return 131/180}trySetWeatherOverride(e){return this.weather=new nC(e,0),T.phaseManager.unshiftNew("CommonAnimPhase",void 0,void 0,jE.SUNNY+(e-1)),T.phaseManager.queueMessage($m(e)),!0}canSetWeather(e){var I;return((I=this.weather)==null?void 0:I.weatherType)!==(e||void 0)}trySetWeather(e,I){var S,n,i,C;if(aE.WEATHER_OVERRIDE)return this.trySetWeatherOverride(aE.WEATHER_OVERRIDE);if(!this.canSetWeather(e))return!1;const L=((S=this.weather)==null?void 0:S.weatherType)||Z.NONE;if((n=this.weather)!=null&&n.isImmutable()&&![Z.HARSH_SUN,Z.HEAVY_RAIN,Z.STRONG_WINDS,Z.NONE].includes(e))return T.phaseManager.unshiftNew("CommonAnimPhase",void 0,void 0,jE.SUNNY+(L-1),!0),T.phaseManager.queueMessage(OV(L)),!1;const N=new VA(0);return SA(I)||(N.value=5,T.applyModifier(XL,I.isPlayer(),I,N)),this.weather=e?new nC(e,N.value):null,this.eventTarget.dispatchEvent(new wP(L,(i=this.weather)==null?void 0:i.weatherType,(C=this.weather)==null?void 0:C.turnsLeft)),this.weather?(T.phaseManager.unshiftNew("CommonAnimPhase",void 0,void 0,jE.SUNNY+(e-1),!0),T.phaseManager.queueMessage($m(e))):T.phaseManager.queueMessage(RV(L)),T.getField(!0).filter(o=>o.isOnField()).map(o=>{o.findAndRemoveTags(l=>"weatherTypes"in l&&!l.weatherTypes.find(H=>H===e)),CV("PostWeatherChangeAbAttr",o,e)}),!0}triggerWeatherBasedFormChanges(){T.getField(!0).forEach(e=>{const I=e.hasAbility(O.FORECAST)&&e.species.speciesId===A.CASTFORM,L=e.hasAbility(O.FLOWER_GIFT)&&e.species.speciesId===A.CHERRIM;(I||L)&&T.triggerPokemonFormChange(e,CO)})}triggerWeatherBasedFormChangesToNormal(){T.getField(!0).forEach(e=>{const I=e.hasAbility(O.FORECAST,!1,!0)&&e.species.speciesId===A.CASTFORM,L=e.hasAbility(O.FLOWER_GIFT,!1,!0)&&e.species.speciesId===A.CHERRIM;if(I||L)return T.triggerPokemonFormChange(e,dI)})}canSetTerrain(e){var I;return((I=this.terrain)==null?void 0:I.terrainType)!==(e||void 0)}trySetTerrain(e,I=!1,L){var n,i,C;if(!this.canSetTerrain(e))return!1;const N=((n=this.terrain)==null?void 0:n.terrainType)||bA.NONE,S=new VA(0);return SA(L)||(S.value=5,T.applyModifier(XL,L.isPlayer(),L,S)),this.terrain=e?new OG(e,S.value):null,this.eventTarget.dispatchEvent(new vP(N,(i=this.terrain)==null?void 0:i.terrainType,(C=this.terrain)==null?void 0:C.turnsLeft)),this.terrain?(I||T.phaseManager.unshiftNew("CommonAnimPhase",void 0,void 0,jE.MISTY_TERRAIN+(e-1)),T.phaseManager.queueMessage(tV(e))):T.phaseManager.queueMessage(LV(N)),T.getField(!0).filter(o=>o.isOnField()).map(o=>{o.findAndRemoveTags(l=>"terrainTypes"in l&&!l.terrainTypes.find(H=>H===e)),UV("PostTerrainChangeAbAttr",o,e),SE("TerrainEventTypeChangeAbAttr",o,null,!1)}),!0}isMoveWeatherCancelled(e,I){return!!this.weather&&!this.weather.isEffectSuppressed()&&this.weather.isMoveWeatherCancelled(e,I)}isMoveTerrainCancelled(e,I,L){return!!this.terrain&&this.terrain.isMoveTerrainCancelled(e,I,L)}getWeatherType(){var e;return((e=this.weather)==null?void 0:e.weatherType)??Z.NONE}getTerrainType(){var e;return((e=this.terrain)==null?void 0:e.terrainType)??bA.NONE}getAttackTypeMultiplier(e,I){let L=1;this.weather&&!this.weather.isEffectSuppressed()&&(L=this.weather.getAttackTypeMultiplier(e));let N=1;return this.terrain&&I&&(N=this.terrain.getAttackTypeMultiplier(e)),L*N}getTrainerChance(){switch(this.biomeType){case s.METROPOLIS:return 2;case s.SLUM:case s.BEACH:case s.DOJO:case s.CONSTRUCTION_SITE:return 4;case s.PLAINS:case s.GRASS:case s.LAKE:case s.CAVE:return 6;case s.TALL_GRASS:case s.FOREST:case s.SEA:case s.SWAMP:case s.MOUNTAIN:case s.BADLANDS:case s.DESERT:case s.MEADOW:case s.POWER_PLANT:case s.GRAVEYARD:case s.FACTORY:case s.SNOWY_FOREST:return 8;case s.ICE_CAVE:case s.VOLCANO:case s.RUINS:case s.WASTELAND:case s.JUNGLE:case s.FAIRY_CAVE:return 12;case s.SEABED:case s.ABYSS:case s.SPACE:case s.TEMPLE:return 16;default:return 0}}getTimeOfDay(){var I;switch(this.biomeType){case s.ABYSS:return a.NIGHT}const e=((((I=T.currentBattle)==null?void 0:I.waveIndex)||0)+T.waveCycleOffset)%40;return e<15?a.DAY:e<20?a.DUSK:e<35?a.NIGHT:a.DAWN}isOutside(){switch(this.biomeType){case s.SEABED:case s.CAVE:case s.ICE_CAVE:case s.POWER_PLANT:case s.DOJO:case s.FACTORY:case s.ABYSS:case s.FAIRY_CAVE:case s.TEMPLE:case s.LABORATORY:return!1;default:return!0}}overrideTint(){switch(aE.ARENA_TINT_OVERRIDE){case a.DUSK:return[98,48,73].map(e=>Math.round((e+128)/2));case a.NIGHT:return[64,64,64];case a.DAWN:case a.DAY:default:return[128,128,128]}}getDayTint(){if(aE.ARENA_TINT_OVERRIDE!==null)return this.overrideTint();switch(this.biomeType){case s.ABYSS:return[64,64,64];default:return[128,128,128]}}getDuskTint(){if(aE.ARENA_TINT_OVERRIDE)return this.overrideTint();if(!this.isOutside())return[0,0,0];switch(this.biomeType){default:return[98,48,73].map(e=>Math.round((e+128)/2))}}getNightTint(){if(aE.ARENA_TINT_OVERRIDE)return this.overrideTint();switch(this.biomeType){case s.ABYSS:case s.SPACE:case s.END:return this.getDayTint()}if(!this.isOutside())return[64,64,64];switch(this.biomeType){default:return[48,48,98]}}setIgnoreAbilities(e,I=null){this.ignoreAbilities=e,this.ignoringEffectSource=e?I:null}applyTagsForSide(e,I,L,...N){let S=typeof e=="string"?this.tags.filter(n=>n.tagType===e):this.tags.filter(n=>n instanceof e);I!==hA.BOTH&&(S=S.filter(n=>n.side===I)),S.forEach(n=>n.apply(this,L,...N))}applyTags(e,I,...L){this.applyTagsForSide(e,hA.BOTH,I,...L)}addTag(e,I,L,N,S=hA.BOTH,n=!1,i){const C=this.getTagOnSide(e,S);if(C){if(C.onOverlap(this,T.getPokemonById(N)),C instanceof yI){const{tagType:l,side:H,turnCount:P,layers:K,maxLayers:f}=C;this.eventTarget.dispatchEvent(new vC(l,H,P,K,f))}return!1}const o=S3(e,I||0,L,N,i,S);if(o){o.onAdd(this,n),this.tags.push(o);const{layers:l=0,maxLayers:H=0}=o instanceof yI?o:{};this.eventTarget.dispatchEvent(new vC(o.tagType,o.side,o.turnCount,l,H))}return!0}getTag(e){return this.getTagOnSide(e,hA.BOTH)}hasTag(e){return!!this.getTag(e)}getTagOnSide(e,I){return typeof e=="string"?this.tags.find(L=>L.tagType===e&&(I===hA.BOTH||L.side===hA.BOTH||L.side===I)):this.tags.find(L=>L instanceof e&&(I===hA.BOTH||L.side===hA.BOTH||L.side===I))}findTags(e){return this.findTagsOnSide(e,hA.BOTH)}findTagsOnSide(e,I){return this.tags.filter(L=>e(L)&&(I===hA.BOTH||L.side===hA.BOTH||L.side===I))}lapseTags(){this.tags.filter(e=>!e.lapse(this)).forEach(e=>{e.onRemove(this),this.tags.splice(this.tags.indexOf(e),1),this.eventTarget.dispatchEvent(new PN(e.tagType,e.side,e.turnCount))})}removeTag(e){const I=this.tags,L=I.find(N=>N.tagType===e);return L&&(L.onRemove(this),I.splice(I.indexOf(L),1),this.eventTarget.dispatchEvent(new PN(L.tagType,L.side,L.turnCount))),!!L}removeTagOnSide(e,I,L=!1){const N=this.getTagOnSide(e,I);return N&&(N.onRemove(this,L),this.tags.splice(this.tags.indexOf(N),1),this.eventTarget.dispatchEvent(new PN(N.tagType,N.side,N.turnCount))),!!N}removeAllTags(){for(;this.tags.length;)this.tags[0].onRemove(this),this.eventTarget.dispatchEvent(new PN(this.tags[0].tagType,this.tags[0].side,this.tags[0].turnCount)),this.tags.splice(0,1)}resetArenaEffects(){var e;((e=this.weather)==null?void 0:e.turnsLeft)!==0&&this.trySetWeather(Z.NONE),this.trySetTerrain(bA.NONE,!0),this.resetPlayerFaintCount(),this.removeAllTags()}preloadBgm(){T.loadBgm(this.bgm)}getBgmLoopPoint(){switch(this.biomeType){case s.TOWN:return 7.288;case s.PLAINS:return 17.485;case s.GRASS:return 1.995;case s.TALL_GRASS:return 9.608;case s.METROPOLIS:return 141.47;case s.FOREST:return .341;case s.SEA:return .024;case s.SWAMP:return 4.461;case s.BEACH:return 3.462;case s.LAKE:return 7.215;case s.SEABED:return 2.6;case s.MOUNTAIN:return 4.018;case s.BADLANDS:return 17.79;case s.CAVE:return 14.24;case s.DESERT:return 1.143;case s.ICE_CAVE:return 0;case s.MEADOW:return 3.891;case s.POWER_PLANT:return 9.447;case s.VOLCANO:return 17.637;case s.GRAVEYARD:return 13.711;case s.DOJO:return 6.205;case s.FACTORY:return 4.985;case s.RUINS:return 0;case s.WASTELAND:return 6.336;case s.ABYSS:return 5.13;case s.SPACE:return 20.036;case s.CONSTRUCTION_SITE:return 1.222;case s.JUNGLE:return 0;case s.FAIRY_CAVE:return 4.542;case s.TEMPLE:return 2.547;case s.ISLAND:return 2.751;case s.LABORATORY:return 114.862;case s.SLUM:return 0;case s.SNOWY_FOREST:return 3.047;case s.END:return 17.153;default:return console.warn(`missing bgm loop-point for biome "${s[this.biomeType]}" (=${this.biomeType})`),0}}resetPlayerFaintCount(){this.playerFaints=0}};r(mB,"Arena");let R2=mB;function oH(R){return s[R].toLowerCase()}r(oH,"getBiomeKey");function C3(R){switch(R){case s.METROPOLIS:case s.BEACH:case s.LAKE:case s.SEABED:case s.MOUNTAIN:case s.BADLANDS:case s.CAVE:case s.DESERT:case s.ICE_CAVE:case s.MEADOW:case s.POWER_PLANT:case s.VOLCANO:case s.GRAVEYARD:case s.FACTORY:case s.RUINS:case s.WASTELAND:case s.ABYSS:case s.CONSTRUCTION_SITE:case s.JUNGLE:case s.FAIRY_CAVE:case s.TEMPLE:case s.SNOWY_FOREST:case s.ISLAND:case s.LABORATORY:case s.END:return!0}return!1}r(C3,"getBiomeHasProps");const yB=class yB extends Phaser.GameObjects.Container{constructor(e){super(T,0,0),this.player=e,this.base=T.addFieldSprite(0,0,"plains_a",void 0,1),this.base.setOrigin(0,0),this.props=e?[]:new Array(3).fill(null).map(()=>{const I=T.addFieldSprite(0,0,"plains_b",void 0,1);return I.setOrigin(0,0),I.setVisible(!1),I})}setBiome(e,I){var n;const L=C3(e),N=oH(e),S=`${N}_${this.player?"a":"b"}`;if(e!==this.biome){if(this.base.setTexture(S),this.base.texture.frameTotal>1){const i=T.anims.generateFrameNames(S,{zeroPad:4,suffix:".png",start:1,end:this.base.texture.frameTotal-1});T.anims.exists(S)||T.anims.create({key:S,frames:i,frameRate:12,repeat:-1}),this.base.play(S)}else this.base.stop();this.add(this.base)}this.player||T.executeWithSeedOffset(()=>{this.propValue=I===void 0?L?DA(8):0:I,this.props.forEach((i,C)=>{const o=`${N}_b${L?`_${C+1}`:""}`;if(i.setTexture(o),L&&i.texture.frameTotal>1){const l=T.anims.generateFrameNames(o,{zeroPad:4,suffix:".png",start:1,end:i.texture.frameTotal-1});T.anims.exists(o)||T.anims.create({key:o,frames:l,frameRate:12,repeat:-1}),i.play(o)}else i.stop();i.setVisible(L&&!!(this.propValue&1<<C)),this.add(i)})},((n=T.currentBattle)==null?void 0:n.waveIndex)||0,T.waveSeed)}};r(yB,"ArenaBase");let O2=yB,jr;const VB=class VB extends Phaser.Loader.LoaderPlugin{get manifest(){return jr}set manifest(e){jr=e}addFile(e){e=ue(e),e.forEach(I=>{if(jr){const L=jr[`/${I.url.replace(/\/\//g,"/")}`];L&&(I.url+=`?t=${L}`)}}),super.addFile(e)}};r(VB,"CacheBustedLoaderPlugin");let XP=VB;const WN=[],wB=class wB extends Phaser.Scene{constructor(){super(...arguments),this.scaledCanvas={width:1920/6,height:1080/6}}getCachedUrl(e){const I=this.game.manifest;if(I){const L=I[`/${e}`];L&&(e+=`?t=${L}`)}return e}loadImage(e,I,L){L||(L=`${e}.png`),this.load.image(e,this.getCachedUrl(`images/${I}/${L}`)),I.startsWith("ui")&&(WN.push(e),I=I.replace("ui","ui/legacy"),this.load.image(`${e}_legacy`,this.getCachedUrl(`images/${I}/${L}`)))}loadSpritesheet(e,I,L,N){N||(N=`${e}.png`),this.load.spritesheet(e,this.getCachedUrl(`images/${I}/${N}`),{frameWidth:L,frameHeight:L}),I.startsWith("ui")&&(WN.push(e),I=I.replace("ui","ui/legacy"),this.load.spritesheet(`${e}_legacy`,this.getCachedUrl(`images/${I}/${N}`),{frameWidth:L,frameHeight:L}))}loadAtlas(e,I,L){L||(L=e),I&&(I+="/"),this.load.atlas(e,this.getCachedUrl(`images/${I}${L}.png`),this.getCachedUrl(`images/${I}${L}.json`)),I.startsWith("ui")&&(WN.push(e),I=I.replace("ui","ui/legacy"),this.load.atlas(`${e}_legacy`,this.getCachedUrl(`images/${I}${L}.png`),this.getCachedUrl(`images/${I}${L}.json`)))}loadSe(e,I,L){L||(L=`${e}.wav`),I?I+="/":I="se/",L=ue(L);for(const N of L)this.load.audio(I+e,this.getCachedUrl(`audio/${I}${N}`))}loadBgm(e,I){I||(I=`${e}.mp3`),this.load.audio(e,this.getCachedUrl(`audio/bgm/${I}`))}};r(wB,"SceneBase");let QP=wB;var MH=(R=>(R[R.NORMAL=0]="NORMAL",R[R.THIN=1]="THIN",R[R.XTHIN=2]="XTHIN",R))(MH||{});function YT(R){switch(R){case 1:return"_thin";case 2:return"_xthin";default:return""}}r(YT,"getWindowVariantSuffix");const ZV={[rI.DEFAULT]:{0:["#6b5a73","#DD5748","#7E4955"],1:["#6b5a73","#48DDAA","#4D7574"],2:["#6b5a73","#C5C5C5","#766D7E"],3:["#6b5a73","#EBC07C","#836C66"],4:["#686868","#E8E8E8","#919191"]},[rI.LEGACY]:{0:["#706880","#8888c8","#484868"],1:["#d04028","#e0a028","#902008"],2:["#48b840","#88d880","#089040"],3:["#2068d0","#80b0e0","#104888"],4:["#706880","#8888c8","#484868"]}};function zL(R,e,I,L,N,S,n,i,C){C===void 0&&(C=0);const o=T.uiTheme?6:8,l=T.add.nineslice(R,e,`window_${T.windowType}${YT(C)}`,void 0,I,L,o,o,o,o);if(l.setOrigin(0,0),S||N||n||i){const H=new Phaser.GameObjects.Rectangle(T,6*(R-(S?2:0)-(n||0)),6*(e+(N?2:0)+(i||0)),I-(S?2:0),L-(N?2:0),16777215);H.setOrigin(0),H.setScale(6);const P=H.createGeometryMask();l.setMask(P)}return l}r(zL,"addWindow");function bV(R){const e=[],I=[],L=r(n=>{var i,C;if(n.hasOwnProperty("children")&&n.children instanceof Phaser.GameObjects.DisplayList){const o=n.children;for(const l of o.getAll())L(l)}else if(n instanceof Phaser.GameObjects.Container)for(const o of n.getAll())L(o);else n instanceof Phaser.GameObjects.NineSlice?n.texture.key.startsWith("window_")?e.push([n,n.texture.key.endsWith(YT(2))?2:n.texture.key.endsWith(YT(1))?1:0]):((i=n.texture)==null?void 0:i.key)==="namebox"&&I.push(n):n instanceof Phaser.GameObjects.Sprite&&((C=n.texture)==null?void 0:C.key)==="bg"&&I.push(n)},"traverse");L(T),T.windowType=R;const N=document.documentElement.style;["base","light","dark"].map((n,i)=>N.setProperty(`--color-${n}`,ZV[T.uiTheme][R-1][i]));const S=`window_${R}`;for(const[n,i]of e)n.setTexture(`${S}${YT(i)}`);for(const n of I)n.setFrame(R)}r(bV,"updateWindowType");function OZ(){const R=T.add.image;T.add.image=function(L,N,S,n){let i=!1;typeof S=="string"&&T.uiTheme&&WN.includes(S)&&(i=!0,S+="_legacy");const C=R.apply(this,[L,N,S,n]);if(i){const o=C.setTexture;C.setTexture=function(l,H){return l+="_legacy",o.apply(this,[l,H])}}return C};const e=T.add.sprite;T.add.sprite=function(L,N,S,n){let i=!1;typeof S=="string"&&T.uiTheme&&WN.includes(S)&&(i=!0,S+="_legacy");const C=e.apply(this,[L,N,S,n]);if(i){const o=C.setTexture;C.setTexture=function(l,H){return l+="_legacy",o.apply(this,[l,H])}}return C};const I=T.add.nineslice;T.add.nineslice=function(L,N,S,n,i,C,o,l,H,P){let K=!1;typeof S=="string"&&T.uiTheme&&WN.includes(S)&&(K=!0,S+="_legacy");const f=I.apply(this,[L,N,S,n,i,C,o,l,H,P]);if(K){const h=f.setTexture;f.setTexture=function(F,w,m,y){return F+="_legacy",h.apply(this,[F,w,m,y])}}return f}}r(OZ,"addUiThemeOverrides");const vB=class vB{constructor(e,I,L,N,S=!1,...n){this.speciesId=e,this.preFormKey=I,this.formKey=L,this.trigger=N,this.quiet=S,this.conditions=n}canChange(e){if(e.species.speciesId!==this.speciesId||!e.species.forms.length)return!1;const I=e.species.forms.map(L=>L.formKey);if(I[e.formIndex]!==this.preFormKey||I[e.formIndex]===this.formKey)return!1;for(const L of this.conditions)if(!L.predicate(e))return!1;return this.trigger.canChange(e)}findTrigger(e){if(!this.trigger.hasTriggerType(e))return null;const I=this.trigger;return I instanceof Ea?I.triggers.find(L=>L.hasTriggerType(e)):I}};r(vB,"SpeciesFormChange");let EA=vB;const xB=class xB{constructor(e,I){this.predicate=e,this.enforceFunc=I}};r(xB,"SpeciesFormChangeCondition");let BE=xB;function iN(R){return new BE(e=>!!T.gameData.dexData[R].caughtAttr)}r(iN,"getSpeciesDependentFormChangeCondition");const xt={[A.VENUSAUR]:[new EA(A.VENUSAUR,"",eA.MEGA,new rA(aA.VENUSAURITE)),new EA(A.VENUSAUR,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.BLASTOISE]:[new EA(A.BLASTOISE,"",eA.MEGA,new rA(aA.BLASTOISINITE)),new EA(A.BLASTOISE,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.CHARIZARD]:[new EA(A.CHARIZARD,"",eA.MEGA_X,new rA(aA.CHARIZARDITE_X)),new EA(A.CHARIZARD,"",eA.MEGA_Y,new rA(aA.CHARIZARDITE_Y)),new EA(A.CHARIZARD,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.BUTTERFREE]:[new EA(A.BUTTERFREE,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.BEEDRILL]:[new EA(A.BEEDRILL,"",eA.MEGA,new rA(aA.BEEDRILLITE))],[A.PIDGEOT]:[new EA(A.PIDGEOT,"",eA.MEGA,new rA(aA.PIDGEOTITE))],[A.PIKACHU]:[new EA(A.PIKACHU,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.PIKACHU,"partner",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.MEOWTH]:[new EA(A.MEOWTH,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.ALAKAZAM]:[new EA(A.ALAKAZAM,"",eA.MEGA,new rA(aA.ALAKAZITE))],[A.MACHAMP]:[new EA(A.MACHAMP,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.SLOWBRO]:[new EA(A.SLOWBRO,"",eA.MEGA,new rA(aA.SLOWBRONITE))],[A.GENGAR]:[new EA(A.GENGAR,"",eA.MEGA,new rA(aA.GENGARITE)),new EA(A.GENGAR,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.KINGLER]:[new EA(A.KINGLER,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.KANGASKHAN]:[new EA(A.KANGASKHAN,"",eA.MEGA,new rA(aA.KANGASKHANITE))],[A.PINSIR]:[new EA(A.PINSIR,"",eA.MEGA,new rA(aA.PINSIRITE))],[A.GYARADOS]:[new EA(A.GYARADOS,"",eA.MEGA,new rA(aA.GYARADOSITE))],[A.LAPRAS]:[new EA(A.LAPRAS,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.EEVEE]:[new EA(A.EEVEE,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.EEVEE,"partner",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.SNORLAX]:[new EA(A.SNORLAX,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.AERODACTYL]:[new EA(A.AERODACTYL,"",eA.MEGA,new rA(aA.AERODACTYLITE))],[A.MEWTWO]:[new EA(A.MEWTWO,"",eA.MEGA_X,new rA(aA.MEWTWONITE_X)),new EA(A.MEWTWO,"",eA.MEGA_Y,new rA(aA.MEWTWONITE_Y))],[A.AMPHAROS]:[new EA(A.AMPHAROS,"",eA.MEGA,new rA(aA.AMPHAROSITE))],[A.STEELIX]:[new EA(A.STEELIX,"",eA.MEGA,new rA(aA.STEELIXITE))],[A.SCIZOR]:[new EA(A.SCIZOR,"",eA.MEGA,new rA(aA.SCIZORITE))],[A.HERACROSS]:[new EA(A.HERACROSS,"",eA.MEGA,new rA(aA.HERACRONITE))],[A.HOUNDOOM]:[new EA(A.HOUNDOOM,"",eA.MEGA,new rA(aA.HOUNDOOMINITE))],[A.TYRANITAR]:[new EA(A.TYRANITAR,"",eA.MEGA,new rA(aA.TYRANITARITE))],[A.SCEPTILE]:[new EA(A.SCEPTILE,"",eA.MEGA,new rA(aA.SCEPTILITE))],[A.BLAZIKEN]:[new EA(A.BLAZIKEN,"",eA.MEGA,new rA(aA.BLAZIKENITE))],[A.SWAMPERT]:[new EA(A.SWAMPERT,"",eA.MEGA,new rA(aA.SWAMPERTITE))],[A.GARDEVOIR]:[new EA(A.GARDEVOIR,"",eA.MEGA,new rA(aA.GARDEVOIRITE))],[A.SABLEYE]:[new EA(A.SABLEYE,"",eA.MEGA,new rA(aA.SABLENITE))],[A.MAWILE]:[new EA(A.MAWILE,"",eA.MEGA,new rA(aA.MAWILITE))],[A.AGGRON]:[new EA(A.AGGRON,"",eA.MEGA,new rA(aA.AGGRONITE))],[A.MEDICHAM]:[new EA(A.MEDICHAM,"",eA.MEGA,new rA(aA.MEDICHAMITE))],[A.MANECTRIC]:[new EA(A.MANECTRIC,"",eA.MEGA,new rA(aA.MANECTITE))],[A.SHARPEDO]:[new EA(A.SHARPEDO,"",eA.MEGA,new rA(aA.SHARPEDONITE))],[A.CAMERUPT]:[new EA(A.CAMERUPT,"",eA.MEGA,new rA(aA.CAMERUPTITE))],[A.ALTARIA]:[new EA(A.ALTARIA,"",eA.MEGA,new rA(aA.ALTARIANITE))],[A.CASTFORM]:[new EA(A.CASTFORM,"","sunny",new CO(O.FORECAST,[Z.SUNNY,Z.HARSH_SUN]),!0),new EA(A.CASTFORM,"rainy","sunny",new CO(O.FORECAST,[Z.SUNNY,Z.HARSH_SUN]),!0),new EA(A.CASTFORM,"snowy","sunny",new CO(O.FORECAST,[Z.SUNNY,Z.HARSH_SUN]),!0),new EA(A.CASTFORM,"","rainy",new CO(O.FORECAST,[Z.RAIN,Z.HEAVY_RAIN]),!0),new EA(A.CASTFORM,"sunny","rainy",new CO(O.FORECAST,[Z.RAIN,Z.HEAVY_RAIN]),!0),new EA(A.CASTFORM,"snowy","rainy",new CO(O.FORECAST,[Z.RAIN,Z.HEAVY_RAIN]),!0),new EA(A.CASTFORM,"","snowy",new CO(O.FORECAST,[Z.HAIL,Z.SNOW]),!0),new EA(A.CASTFORM,"sunny","snowy",new CO(O.FORECAST,[Z.HAIL,Z.SNOW]),!0),new EA(A.CASTFORM,"rainy","snowy",new CO(O.FORECAST,[Z.HAIL,Z.SNOW]),!0),new EA(A.CASTFORM,"sunny","",new dI(O.FORECAST,[Z.NONE,Z.SANDSTORM,Z.STRONG_WINDS,Z.FOG]),!0),new EA(A.CASTFORM,"rainy","",new dI(O.FORECAST,[Z.NONE,Z.SANDSTORM,Z.STRONG_WINDS,Z.FOG]),!0),new EA(A.CASTFORM,"snowy","",new dI(O.FORECAST,[Z.NONE,Z.SANDSTORM,Z.STRONG_WINDS,Z.FOG]),!0),new EA(A.CASTFORM,"sunny","",new UO,!0),new EA(A.CASTFORM,"rainy","",new UO,!0),new EA(A.CASTFORM,"snowy","",new UO,!0)],[A.BANETTE]:[new EA(A.BANETTE,"",eA.MEGA,new rA(aA.BANETTITE))],[A.ABSOL]:[new EA(A.ABSOL,"",eA.MEGA,new rA(aA.ABSOLITE))],[A.GLALIE]:[new EA(A.GLALIE,"",eA.MEGA,new rA(aA.GLALITITE))],[A.SALAMENCE]:[new EA(A.SALAMENCE,"",eA.MEGA,new rA(aA.SALAMENCITE))],[A.METAGROSS]:[new EA(A.METAGROSS,"",eA.MEGA,new rA(aA.METAGROSSITE))],[A.LATIAS]:[new EA(A.LATIAS,"",eA.MEGA,new rA(aA.LATIASITE))],[A.LATIOS]:[new EA(A.LATIOS,"",eA.MEGA,new rA(aA.LATIOSITE))],[A.KYOGRE]:[new EA(A.KYOGRE,"",eA.PRIMAL,new rA(aA.BLUE_ORB))],[A.GROUDON]:[new EA(A.GROUDON,"",eA.PRIMAL,new rA(aA.RED_ORB))],[A.RAYQUAZA]:[new EA(A.RAYQUAZA,"",eA.MEGA,new rA(aA.RAYQUAZITE))],[A.DEOXYS]:[new EA(A.DEOXYS,"normal","attack",new rA(aA.SHARP_METEORITE)),new EA(A.DEOXYS,"normal","defense",new rA(aA.HARD_METEORITE)),new EA(A.DEOXYS,"normal","speed",new rA(aA.SMOOTH_METEORITE))],[A.CHERRIM]:[new EA(A.CHERRIM,"overcast","sunshine",new CO(O.FLOWER_GIFT,[Z.SUNNY,Z.HARSH_SUN]),!0),new EA(A.CHERRIM,"sunshine","overcast",new dI(O.FLOWER_GIFT,[Z.NONE,Z.SANDSTORM,Z.STRONG_WINDS,Z.FOG,Z.HAIL,Z.HEAVY_RAIN,Z.SNOW,Z.RAIN]),!0),new EA(A.CHERRIM,"sunshine","overcast",new UO,!0)],[A.LOPUNNY]:[new EA(A.LOPUNNY,"",eA.MEGA,new rA(aA.LOPUNNITE))],[A.GARCHOMP]:[new EA(A.GARCHOMP,"",eA.MEGA,new rA(aA.GARCHOMPITE))],[A.LUCARIO]:[new EA(A.LUCARIO,"",eA.MEGA,new rA(aA.LUCARIONITE))],[A.ABOMASNOW]:[new EA(A.ABOMASNOW,"",eA.MEGA,new rA(aA.ABOMASITE))],[A.GALLADE]:[new EA(A.GALLADE,"",eA.MEGA,new rA(aA.GALLADITE))],[A.AUDINO]:[new EA(A.AUDINO,"",eA.MEGA,new rA(aA.AUDINITE))],[A.DIALGA]:[new EA(A.DIALGA,"",eA.ORIGIN,new rA(aA.ADAMANT_CRYSTAL))],[A.PALKIA]:[new EA(A.PALKIA,"",eA.ORIGIN,new rA(aA.LUSTROUS_GLOBE))],[A.GIRATINA]:[new EA(A.GIRATINA,"altered",eA.ORIGIN,new rA(aA.GRISEOUS_CORE))],[A.SHAYMIN]:[new EA(A.SHAYMIN,"land","sky",new rA(aA.GRACIDEA))],[A.ARCEUS]:[new EA(A.ARCEUS,"normal","fighting",new rA(aA.FIST_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","flying",new rA(aA.SKY_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","poison",new rA(aA.TOXIC_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","ground",new rA(aA.EARTH_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","rock",new rA(aA.STONE_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","bug",new rA(aA.INSECT_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","ghost",new rA(aA.SPOOKY_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","steel",new rA(aA.IRON_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","fire",new rA(aA.FLAME_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","water",new rA(aA.SPLASH_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","grass",new rA(aA.MEADOW_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","electric",new rA(aA.ZAP_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","psychic",new rA(aA.MIND_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","ice",new rA(aA.ICICLE_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","dragon",new rA(aA.DRACO_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","dark",new rA(aA.DREAD_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE))),new EA(A.ARCEUS,"normal","fairy",new rA(aA.PIXIE_PLATE),!0,new BE(R=>R.hasAbility(O.MULTITYPE)))],[A.DARMANITAN]:[new EA(A.DARMANITAN,"","zen",new DE,!0),new EA(A.DARMANITAN,"zen","",new DE,!0)],[A.GARBODOR]:[new EA(A.GARBODOR,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.TORNADUS]:[new EA(A.TORNADUS,eA.INCARNATE,eA.THERIAN,new rA(aA.REVEAL_GLASS))],[A.THUNDURUS]:[new EA(A.THUNDURUS,eA.INCARNATE,eA.THERIAN,new rA(aA.REVEAL_GLASS))],[A.LANDORUS]:[new EA(A.LANDORUS,eA.INCARNATE,eA.THERIAN,new rA(aA.REVEAL_GLASS))],[A.KYUREM]:[new EA(A.KYUREM,"","black",new rA(aA.DARK_STONE),!1,iN(A.ZEKROM)),new EA(A.KYUREM,"","white",new rA(aA.LIGHT_STONE),!1,iN(A.RESHIRAM))],[A.KELDEO]:[new EA(A.KELDEO,"ordinary","resolute",new ea(E.SECRET_SWORD),!1,new BE(()=>T.gameMode.isDaily!==!0)),new EA(A.KELDEO,"resolute","ordinary",new ea(E.SECRET_SWORD,!1),!1,new BE(()=>T.gameMode.isDaily!==!0))],[A.MELOETTA]:[new EA(A.MELOETTA,"aria","pirouette",new CC(E.RELIC_SONG),!0),new EA(A.MELOETTA,"pirouette","aria",new CC(E.RELIC_SONG),!0)],[A.GENESECT]:[new EA(A.GENESECT,"","shock",new rA(aA.SHOCK_DRIVE)),new EA(A.GENESECT,"","burn",new rA(aA.BURN_DRIVE)),new EA(A.GENESECT,"","chill",new rA(aA.CHILL_DRIVE)),new EA(A.GENESECT,"","douse",new rA(aA.DOUSE_DRIVE))],[A.GRENINJA]:[new EA(A.GRENINJA,"battle-bond","ash",new DE,!0),new EA(A.GRENINJA,"ash","battle-bond",new DE,!0)],[A.PALAFIN]:[new EA(A.PALAFIN,"zero","hero",new DE,!0),new EA(A.PALAFIN,"hero","zero",new DE,!0)],[A.AEGISLASH]:[new EA(A.AEGISLASH,"blade","shield",new Ra(E.KINGS_SHIELD),!0,new BE(R=>R.hasAbility(O.STANCE_CHANGE))),new EA(A.AEGISLASH,"shield","blade",new Ra(R=>FA[R].category!==G.STATUS),!0,new BE(R=>R.hasAbility(O.STANCE_CHANGE))),new EA(A.AEGISLASH,"blade","shield",new UO(!1),!0)],[A.XERNEAS]:[new EA(A.XERNEAS,"neutral","active",new UO(!0),!0),new EA(A.XERNEAS,"active","neutral",new UO(!1),!0)],[A.ZYGARDE]:[new EA(A.ZYGARDE,"50-pc","complete",new DE,!0),new EA(A.ZYGARDE,"complete","50-pc",new DE,!0),new EA(A.ZYGARDE,"10-pc","10-complete",new DE,!0),new EA(A.ZYGARDE,"10-complete","10-pc",new DE,!0)],[A.DIANCIE]:[new EA(A.DIANCIE,"",eA.MEGA,new rA(aA.DIANCITE))],[A.HOOPA]:[new EA(A.HOOPA,"","unbound",new rA(aA.PRISON_BOTTLE))],[A.WISHIWASHI]:[new EA(A.WISHIWASHI,"","school",new DE,!0),new EA(A.WISHIWASHI,"school","",new DE,!0)],[A.SILVALLY]:[new EA(A.SILVALLY,"normal","fighting",new rA(aA.FIGHTING_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","flying",new rA(aA.FLYING_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","poison",new rA(aA.POISON_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","ground",new rA(aA.GROUND_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","rock",new rA(aA.ROCK_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","bug",new rA(aA.BUG_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","ghost",new rA(aA.GHOST_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","steel",new rA(aA.STEEL_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","fire",new rA(aA.FIRE_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","water",new rA(aA.WATER_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","grass",new rA(aA.GRASS_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","electric",new rA(aA.ELECTRIC_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","psychic",new rA(aA.PSYCHIC_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","ice",new rA(aA.ICE_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","dragon",new rA(aA.DRAGON_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","dark",new rA(aA.DARK_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM))),new EA(A.SILVALLY,"normal","fairy",new rA(aA.FAIRY_MEMORY),!0,new BE(R=>R.hasAbility(O.RKS_SYSTEM)))],[A.MINIOR]:[new EA(A.MINIOR,"red-meteor","red",new DE,!0),new EA(A.MINIOR,"red","red-meteor",new DE,!0),new EA(A.MINIOR,"orange-meteor","orange",new DE,!0),new EA(A.MINIOR,"orange","orange-meteor",new DE,!0),new EA(A.MINIOR,"yellow-meteor","yellow",new DE,!0),new EA(A.MINIOR,"yellow","yellow-meteor",new DE,!0),new EA(A.MINIOR,"green-meteor","green",new DE,!0),new EA(A.MINIOR,"green","green-meteor",new DE,!0),new EA(A.MINIOR,"blue-meteor","blue",new DE,!0),new EA(A.MINIOR,"blue","blue-meteor",new DE,!0),new EA(A.MINIOR,"indigo-meteor","indigo",new DE,!0),new EA(A.MINIOR,"indigo","indigo-meteor",new DE,!0),new EA(A.MINIOR,"violet-meteor","violet",new DE,!0),new EA(A.MINIOR,"violet","violet-meteor",new DE,!0)],[A.MIMIKYU]:[new EA(A.MIMIKYU,"disguised","busted",new DE,!0),new EA(A.MIMIKYU,"busted","disguised",new DE,!0)],[A.NECROZMA]:[new EA(A.NECROZMA,"","dawn-wings",new rA(aA.N_LUNARIZER),!1,iN(A.LUNALA)),new EA(A.NECROZMA,"","dusk-mane",new rA(aA.N_SOLARIZER),!1,iN(A.SOLGALEO)),new EA(A.NECROZMA,"dawn-wings","ultra",new rA(aA.ULTRANECROZIUM_Z)),new EA(A.NECROZMA,"dusk-mane","ultra",new rA(aA.ULTRANECROZIUM_Z))],[A.MELMETAL]:[new EA(A.MELMETAL,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.RILLABOOM]:[new EA(A.RILLABOOM,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.CINDERACE]:[new EA(A.CINDERACE,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.INTELEON]:[new EA(A.INTELEON,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.CORVIKNIGHT]:[new EA(A.CORVIKNIGHT,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.ORBEETLE]:[new EA(A.ORBEETLE,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.DREDNAW]:[new EA(A.DREDNAW,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.COALOSSAL]:[new EA(A.COALOSSAL,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.FLAPPLE]:[new EA(A.FLAPPLE,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.APPLETUN]:[new EA(A.APPLETUN,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.SANDACONDA]:[new EA(A.SANDACONDA,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.CRAMORANT]:[new EA(A.CRAMORANT,"","gulping",new DE,!0,new BE(R=>R.getHpRatio()>=.5)),new EA(A.CRAMORANT,"","gorging",new DE,!0,new BE(R=>R.getHpRatio()<.5)),new EA(A.CRAMORANT,"gulping","",new DE,!0),new EA(A.CRAMORANT,"gorging","",new DE,!0),new EA(A.CRAMORANT,"gulping","",new UO(!1),!0),new EA(A.CRAMORANT,"gorging","",new UO(!1),!0)],[A.TOXTRICITY]:[new EA(A.TOXTRICITY,"amped",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.TOXTRICITY,"lowkey",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.TOXTRICITY,eA.GIGANTAMAX,"amped",new Ea(new rA(aA.MAX_MUSHROOMS,!1),new UC("amped"))),new EA(A.TOXTRICITY,eA.GIGANTAMAX,"lowkey",new Ea(new rA(aA.MAX_MUSHROOMS,!1),new UC("lowkey")))],[A.CENTISKORCH]:[new EA(A.CENTISKORCH,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.HATTERENE]:[new EA(A.HATTERENE,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.GRIMMSNARL]:[new EA(A.GRIMMSNARL,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.ALCREMIE]:[new EA(A.ALCREMIE,"vanilla-cream",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"ruby-cream",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"matcha-cream",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"mint-cream",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"lemon-cream",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"salted-cream",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"ruby-swirl",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"caramel-swirl",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS)),new EA(A.ALCREMIE,"rainbow-swirl",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.EISCUE]:[new EA(A.EISCUE,"","no-ice",new DE,!0),new EA(A.EISCUE,"no-ice","",new DE,!0)],[A.MORPEKO]:[new EA(A.MORPEKO,"full-belly","hangry",new DE,!0),new EA(A.MORPEKO,"hangry","full-belly",new DE,!0)],[A.COPPERAJAH]:[new EA(A.COPPERAJAH,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.DURALUDON]:[new EA(A.DURALUDON,"",eA.GIGANTAMAX,new rA(aA.MAX_MUSHROOMS))],[A.ZACIAN]:[new EA(A.ZACIAN,"hero-of-many-battles","crowned",new rA(aA.RUSTED_SWORD))],[A.ZAMAZENTA]:[new EA(A.ZAMAZENTA,"hero-of-many-battles","crowned",new rA(aA.RUSTED_SHIELD))],[A.ETERNATUS]:[new EA(A.ETERNATUS,"",eA.ETERNAMAX,new TG),new EA(A.ETERNATUS,"",eA.ETERNAMAX,new rA(aA.MAX_MUSHROOMS))],[A.URSHIFU]:[new EA(A.URSHIFU,"single-strike",eA.GIGANTAMAX_SINGLE,new rA(aA.MAX_MUSHROOMS)),new EA(A.URSHIFU,"rapid-strike",eA.GIGANTAMAX_RAPID,new rA(aA.MAX_MUSHROOMS))],[A.CALYREX]:[new EA(A.CALYREX,"","ice",new rA(aA.ICY_REINS_OF_UNITY),!1,iN(A.GLASTRIER)),new EA(A.CALYREX,"","shadow",new rA(aA.SHADOW_REINS_OF_UNITY),!1,iN(A.SPECTRIER))],[A.ENAMORUS]:[new EA(A.ENAMORUS,eA.INCARNATE,eA.THERIAN,new rA(aA.REVEAL_GLASS))],[A.OGERPON]:[new EA(A.OGERPON,"teal-mask","wellspring-mask",new rA(aA.WELLSPRING_MASK)),new EA(A.OGERPON,"teal-mask","hearthflame-mask",new rA(aA.HEARTHFLAME_MASK)),new EA(A.OGERPON,"teal-mask","cornerstone-mask",new rA(aA.CORNERSTONE_MASK)),new EA(A.OGERPON,"teal-mask","teal-mask-tera",new EL,!0),new EA(A.OGERPON,"teal-mask-tera","teal-mask",new _t,!0),new EA(A.OGERPON,"wellspring-mask","wellspring-mask-tera",new EL,!0),new EA(A.OGERPON,"wellspring-mask-tera","wellspring-mask",new _t,!0),new EA(A.OGERPON,"hearthflame-mask","hearthflame-mask-tera",new EL,!0),new EA(A.OGERPON,"hearthflame-mask-tera","hearthflame-mask",new _t,!0),new EA(A.OGERPON,"cornerstone-mask","cornerstone-mask-tera",new EL,!0),new EA(A.OGERPON,"cornerstone-mask-tera","cornerstone-mask",new _t,!0)],[A.TERAPAGOS]:[new EA(A.TERAPAGOS,"","terastal",new DE,!0),new EA(A.TERAPAGOS,"terastal","stellar",new EL,!0),new EA(A.TERAPAGOS,"stellar","terastal",new _t,!0)],[A.GALAR_DARMANITAN]:[new EA(A.GALAR_DARMANITAN,"","zen",new DE,!0),new EA(A.GALAR_DARMANITAN,"zen","",new DE,!0)]};function kV(){const R=Object.keys(xt);for(const e of R){const I=xt[e],L=[];for(const N of I){const S=N.findTrigger(rA);S&&!I.find(n=>N.formKey===n.preFormKey&&N.preFormKey===n.formKey)&&L.push(new EA(N.speciesId,N.formKey,N.preFormKey,new rA(S.item,!1)))}I.push(...L)}}r(kV,"initPokemonForms");const ml=class ml{constructor(e,I=0,L=0,N=!1,S){this.moveId=e,this.ppUsed=I,this.ppUp=L,this.virtual=N,this.maxPpOverride=S}isUsable(e,I=!1,L=!1){return this.moveId&&!L&&e.isMoveRestricted(this.moveId,e)||this.getMove().name.endsWith(" (N)")?!1:I||this.ppUsed<this.getMovePp()||this.getMove().pp===-1}getMove(){return FA[this.moveId]}usePp(e=1){this.ppUsed=Math.min(this.ppUsed+e,this.getMovePp())}getMovePp(){return this.maxPpOverride||this.getMove().pp+this.ppUp*UE(this.getMove().pp/5)}getPpRatio(){return 1-this.ppUsed/this.getMovePp()}getName(){return this.getMove().name}static loadMove(e){return new ml(e.moveId,e.ppUsed,e.ppUp,e.virtual,e.maxPpOverride)}};r(ml,"PokemonMove");let pA=ml;var vO=(R=>(R[R.CENTER=0]="CENTER",R[R.LEFT=1]="LEFT",R[R.RIGHT=2]="RIGHT",R))(vO||{});function JP(R,e){if(R===t.UNKNOWN||e===t.UNKNOWN)return 1;switch(e){case t.NORMAL:switch(R){case t.FIGHTING:return 2;case t.GHOST:return 0;default:return 1}case t.FIGHTING:switch(R){case t.FLYING:case t.PSYCHIC:case t.FAIRY:return 2;case t.ROCK:case t.BUG:case t.DARK:return .5;default:return 1}case t.FLYING:switch(R){case t.ROCK:case t.ELECTRIC:case t.ICE:return 2;case t.FIGHTING:case t.BUG:case t.GRASS:return .5;case t.GROUND:return 0;default:return 1}case t.POISON:switch(R){case t.GROUND:case t.PSYCHIC:return 2;case t.FIGHTING:case t.POISON:case t.BUG:case t.GRASS:case t.FAIRY:return .5;default:return 1}case t.GROUND:switch(R){case t.WATER:case t.GRASS:case t.ICE:return 2;case t.POISON:case t.ROCK:return .5;case t.ELECTRIC:return 0;default:return 1}case t.ROCK:switch(R){case t.FIGHTING:case t.GROUND:case t.STEEL:case t.WATER:case t.GRASS:return 2;case t.NORMAL:case t.FLYING:case t.POISON:case t.FIRE:return .5;default:return 1}case t.BUG:switch(R){case t.FLYING:case t.ROCK:case t.FIRE:return 2;case t.FIGHTING:case t.GROUND:case t.GRASS:return .5;default:return 1}case t.GHOST:switch(R){case t.GHOST:case t.DARK:return 2;case t.POISON:case t.BUG:return .5;case t.NORMAL:case t.FIGHTING:return 0;default:return 1}case t.STEEL:switch(R){case t.FIGHTING:case t.GROUND:case t.FIRE:return 2;case t.NORMAL:case t.FLYING:case t.ROCK:case t.BUG:case t.STEEL:case t.GRASS:case t.PSYCHIC:case t.ICE:case t.DRAGON:case t.FAIRY:return .5;case t.POISON:return 0;default:return 1}case t.FIRE:switch(R){case t.GROUND:case t.ROCK:case t.WATER:return 2;case t.BUG:case t.STEEL:case t.FIRE:case t.GRASS:case t.ICE:case t.FAIRY:return .5;default:return 1}case t.WATER:switch(R){case t.GRASS:case t.ELECTRIC:return 2;case t.STEEL:case t.FIRE:case t.WATER:case t.ICE:return .5;default:return 1}case t.GRASS:switch(R){case t.FLYING:case t.POISON:case t.BUG:case t.FIRE:case t.ICE:return 2;case t.GROUND:case t.WATER:case t.GRASS:case t.ELECTRIC:return .5;default:return 1}case t.ELECTRIC:switch(R){case t.GROUND:return 2;case t.FLYING:case t.STEEL:case t.ELECTRIC:return .5;default:return 1}case t.PSYCHIC:switch(R){case t.BUG:case t.GHOST:case t.DARK:return 2;case t.FIGHTING:case t.PSYCHIC:return .5;default:return 1}case t.ICE:switch(R){case t.FIGHTING:case t.ROCK:case t.STEEL:case t.FIRE:return 2;case t.ICE:return .5;default:return 1}case t.DRAGON:switch(R){case t.ICE:case t.DRAGON:case t.FAIRY:return 2;case t.FIRE:case t.WATER:case t.GRASS:case t.ELECTRIC:return .5;default:return 1}case t.DARK:switch(R){case t.FIGHTING:case t.BUG:case t.FAIRY:return 2;case t.GHOST:case t.DARK:return .5;case t.PSYCHIC:return 0;default:return 1}case t.FAIRY:switch(R){case t.POISON:case t.STEEL:return 2;case t.FIGHTING:case t.BUG:case t.DARK:return .5;case t.DRAGON:return 0;default:return 1}case t.STELLAR:return 1}return 1}r(JP,"getTypeDamageMultiplier");function IZ(R,e){switch(R){case 0:return"#929292";case .125:return"#FF5500";case .25:return"#FF7400";case .5:return"#FE8E00";case 1:return;case 2:return"#4AA500";case 4:return"#4BB400";case 8:return"#52C200"}}r(IZ,"getTypeDamageMultiplierColor");function Zt(R){switch(R){case t.NORMAL:return[168,168,120];case t.FIGHTING:return[192,48,40];case t.FLYING:return[168,144,240];case t.POISON:return[160,64,160];case t.GROUND:return[224,192,104];case t.ROCK:return[184,160,56];case t.BUG:return[168,184,32];case t.GHOST:return[112,88,152];case t.STEEL:return[184,184,208];case t.FIRE:return[240,128,48];case t.WATER:return[104,144,240];case t.GRASS:return[120,200,80];case t.ELECTRIC:return[248,208,48];case t.PSYCHIC:return[248,88,136];case t.ICE:return[152,216,216];case t.DRAGON:return[112,56,248];case t.DARK:return[112,88,72];case t.FAIRY:return[232,136,200];case t.STELLAR:return[255,255,255];default:return[0,0,0]}}r(Zt,"getTypeRgb");var yE=(R=>(R[R.WILD=0]="WILD",R[R.TRAINER=1]="TRAINER",R[R.CLEAR=2]="CLEAR",R[R.MYSTERY_ENCOUNTER=3]="MYSTERY_ENCOUNTER",R))(yE||{}),MT=(R=>(R.CANDY_UPGRADE_NOTIFICATION_CHANGED="onCandyUpgradeNotificationChanged",R.MOVE_USED="onMoveUsed",R.BERRY_USED="onBerryUsed",R.ENCOUNTER_PHASE="onEncounterPhase",R.TURN_INIT="onTurnInit",R.TURN_END="onTurnEnd",R.NEW_ARENA="onNewArena",R))(MT||{});const ZB=class ZB extends Event{constructor(e){super("onCandyUpgradeNotificationChanged"),this.newValue=e}};r(ZB,"CandyUpgradeNotificationChangedEvent");let $P=ZB;const bB=class bB extends Event{constructor(e,I,L){super("onMoveUsed"),this.pokemonId=e,this.move=I,this.ppUsed=L}};r(bB,"MoveUsedEvent");let ka=bB;const kB=class kB extends Event{constructor(e){super("onBerryUsed"),this.berryModifier=e}};r(kB,"BerryUsedEvent");let qP=kB;const XB=class XB extends Event{constructor(){super("onEncounterPhase")}};r(XB,"EncounterPhaseEvent");let I2=XB;const QB=class QB extends Event{constructor(){super("onTurnInit")}};r(QB,"TurnInitEvent");let t2=QB;const JB=class JB extends Event{constructor(e){super("onTurnEnd"),this.turnCount=e}};r(JB,"TurnEndEvent");let L2=JB;const $B=class $B extends Event{constructor(){super("onNewArena")}};r($B,"NewArenaEvent");let N2=$B;var KE=(R=>(R[R.ATTACKER=-1]="ATTACKER",R[R.PLAYER=0]="PLAYER",R[R.PLAYER_2=1]="PLAYER_2",R[R.ENEMY=2]="ENEMY",R[R.ENEMY_2=3]="ENEMY_2",R))(KE||{}),v=(R=>(R[R.NONE=0]="NONE",R[R.TRAINER=1]="TRAINER",R[R.TRAINER_PARTNER=2]="TRAINER_PARTNER",R))(v||{});const qB=class qB{start(){}end(){T.phaseManager.shiftPhase()}is(e){return this.phaseName===e}};r(qB,"Phase");let zP=qB;const zB=class zB extends zP{showEnemyTrainer(e=v.NONE){if(!T.currentBattle.trainer){console.warn("Enemy trainer is missing!");return}const I=T.currentBattle.trainer.getSprites(),L=T.currentBattle.trainer.getTintSprites();for(let N=0;N<I.length;N++){const S=!e||!N==(e===v.TRAINER)||I.length<2;[I[N],L[N]].map(n=>{S&&(n.x=e||I.length<2?0:N?16:-16),n.setVisible(S),n.clearTint()}),I[N].setVisible(S),L[N].setVisible(S),I[N].clearTint(),L[N].clearTint()}T.tweens.add({targets:T.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}hideEnemyTrainer(){T.tweens.add({targets:T.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};r(zB,"BattlePhase");let XC=zB;const jB=class jB extends XC{executeForAll(e){for(const I of T.getField(!0))e(I)}};r(jB,"FieldPhase");let jP=jB;const AK=class AK extends jP{constructor(e){super(),e=e??T.getField().find(I=>I==null?void 0:I.isActive()).getBattlerIndex(),e===void 0&&console.warn("There are no Pokemon on the field!"),this.battlerIndex=e,this.player=e<2,this.fieldIndex=e%2}getPokemon(){return this.battlerIndex>KE.ENEMY_2?T.getPokemonById(this.battlerIndex):T.getField()[this.battlerIndex]}};r(AK,"PokemonPhase");let A0=AK;const EK=class EK extends A0{constructor(e,I,L=!1){super(e),this.phaseName="MoveEndPhase",this.targets=I,this.wasFollowUp=L}start(){super.start();const e=this.getPokemon();!this.wasFollowUp&&(e!=null&&e.isActive(!0))&&e.lapseTags(BA.AFTER_MOVE),T.arena.setIgnoreAbilities(!1);for(const I of this.targets)I&&rV("PostSummonRemoveEffectAbAttr",I);this.end()}};r(EK,"MoveEndPhase");let E0=EK;function tZ(R){switch(R.moveTarget){case AA.BOTH_SIDES:case AA.USER_SIDE:case AA.ENEMY_SIDE:return!0}return!1}r(tZ,"isFieldTargeted");function jL(R,e,I){const L=new VA(0);R.getOpponents(!1).forEach(o=>Ce("VariableTargetAttr",R,o,FA[e],L));let N;FA[e].hasAttr("VariableTargetAttr")?N=L.value:I!==void 0?N=I:e?N=FA[e].moveTarget:e===void 0&&(N=AA.NEAR_ENEMY);const S=R.getOpponents(!1);let n=[],i=!1;const C=R.getAlly();switch(N){case AA.USER:case AA.PARTY:n=[R];break;case AA.NEAR_OTHER:case AA.OTHER:case AA.ALL_NEAR_OTHERS:case AA.ALL_OTHERS:n=SA(C)?S:S.concat([C]),i=N===AA.ALL_NEAR_OTHERS||N===AA.ALL_OTHERS;break;case AA.NEAR_ENEMY:case AA.ALL_NEAR_ENEMIES:case AA.ALL_ENEMIES:case AA.ENEMY_SIDE:n=S,i=N!==AA.NEAR_ENEMY;break;case AA.RANDOM_NEAR_ENEMY:n=[S[R.randBattleSeedInt(S.length)]];break;case AA.ATTACKER:return{targets:[-1],multiple:!1};case AA.NEAR_ALLY:case AA.ALLY:n=SA(C)?[]:[C];break;case AA.USER_OR_NEAR_ALLY:case AA.USER_AND_ALLIES:case AA.USER_SIDE:n=SA(C)?[R]:[R,C],i=N!==AA.USER_OR_NEAR_ALLY;break;case AA.ALL:case AA.BOTH_SIDES:n=(SA(C)?[R]:[R,C]).concat(S),i=!0;break;case AA.CURSE:{const o=SA(C)?[]:[C];n=R.getTypes(!0).includes(t.GHOST)?S.concat(o):[R]}break}return{targets:n.filter(o=>o==null?void 0:o.isActive(!0)).map(o=>o.getBattlerIndex()).filter(o=>o!==void 0),multiple:i}}r(jL,"getMoveTargets");const xI=r((R,e)=>{for(;R.getMoveQueue().length&&R.getMoveQueue()[0].move===e.id;)R.getMoveQueue().shift();return R.removeTag(d.FRENZY),!0},"frenzyMissFunc"),eK=class eK extends XC{constructor(e,I,L,N=!1,S=!1,n=!1,i=!1){super(),this.phaseName="MovePhase",this.failed=!1,this.cancelled=!1,this.reflected=!1,this.pokemon=e,this.targets=I,this.move=L,this.followUp=N,this.ignorePp=S,this.reflected=n,this.forcedLast=i}get pokemon(){return this._pokemon}set pokemon(e){this._pokemon=e}get move(){return this._move}set move(e){this._move=e}get targets(){return this._targets}set targets(e){this._targets=e}canMove(e=!1){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon,this.ignorePp,e)&&!!this.targets.length}fail(){this.failed=!0}cancel(){this.cancelled=!0}isForcedLast(){return this.forcedLast}start(){if(super.start(),E[this.move.moveId],!this.canMove(!0))return this.pokemon.isActive(!0)&&(this.fail(),this.showMoveText(),this.showFailedText()),this.end();this.pokemon.turnData.acted=!0,this.followUp&&(this.pokemon.turnData.hitsLeft=-1,this.pokemon.turnData.hitCount=0),(!this.followUp||this.reflected)&&this.move.getMove().doesFlagEffectApply({flag:JA.IGNORE_ABILITIES,user:this.pokemon,isFollowUp:this.followUp})&&T.arena.setIgnoreAbilities(!0,this.pokemon.getBattlerIndex()),this.resolveRedirectTarget(),this.resolveCounterAttackTarget(),this.resolvePreMoveStatusEffects(),this.lapsePreMoveAndMoveTags(),this.failed||this.cancelled||this.resolveFinalPreMoveCancellationChecks(),this.cancelled||this.failed?this.handlePreMoveFailures():this.move.getMove().isChargingMove()&&!this.pokemon.getTag(d.CHARGING)?this.chargeMove():this.useMove(),this.end()}resolveFinalPreMoveCancellationChecks(){const e=this.getActiveTargetPokemon(),I=this.pokemon.getMoveQueue();(e.length===0&&!this.move.getMove().hasAttr("AddArenaTrapTagAttr")||I.length&&I[0].move===E.NONE)&&(this.showMoveText(),this.showFailedText(),this.cancel())}getActiveTargetPokemon(){return T.getField(!0).filter(e=>this.targets.includes(e.getBattlerIndex()))}resolvePreMoveStatusEffects(){if(!this.followUp&&this.pokemon.status&&!this.pokemon.status.isPostTurn()){this.pokemon.status.incrementTurn();let e=!1,I=!1;switch(this.pokemon.status.effect){case J.PARALYSIS:e=(!this.pokemon.randBattleSeedInt(4)||aE.STATUS_ACTIVATION_OVERRIDE===!0)&&aE.STATUS_ACTIVATION_OVERRIDE!==!1;break;case J.SLEEP:{Ce("BypassSleepAttr",this.pokemon,null,this.move.getMove());const L=new VA(this.pokemon.status.sleepTurnsRemaining??0);SE("ReduceStatusEffectDurationAbAttr",this.pokemon,null,!1,this.pokemon.status.effect,L),this.pokemon.status.sleepTurnsRemaining=L.value,I=this.pokemon.status.sleepTurnsRemaining<=0,e=!I&&!this.pokemon.getTag(d.BYPASS_SLEEP);break}case J.FREEZE:I=!!this.move.getMove().findAttr(L=>L.is("HealStatusEffectAttr")&&L.selfTarget&&L.isOfEffect(J.FREEZE))||!this.pokemon.randBattleSeedInt(5)&&aE.STATUS_ACTIVATION_OVERRIDE!==!0||aE.STATUS_ACTIVATION_OVERRIDE===!1,e=!I;break}e?(this.cancel(),T.phaseManager.queueMessage(_V(this.pokemon.status.effect,Q(this.pokemon))),T.phaseManager.unshiftNew("CommonAnimPhase",this.pokemon.getBattlerIndex(),void 0,jE.POISON+(this.pokemon.status.effect-1))):I&&(T.phaseManager.queueMessage($t(this.pokemon.status.effect,Q(this.pokemon))),this.pokemon.resetStatus(),this.pokemon.updateInfo())}}lapsePreMoveAndMoveTags(){this.pokemon.lapseTags(BA.PRE_MOVE),!this.followUp&&this.canMove()&&!this.cancelled&&this.pokemon.lapseTags(BA.MOVE)}useMove(){var C,o,l;const e=this.getActiveTargetPokemon(),I=this.pokemon.getMoveQueue();if(T.triggerPokemonFormChange(this.pokemon,Ra),this.move.getMove().hasAttr("DelayedAttackAttr")){const H=T.arena.findTags(h=>h.tagType===CA.FUTURE_SIGHT),P=T.arena.findTags(h=>h.tagType===CA.DOOM_DESIRE);let K=!1;const f=e[0].getBattlerIndex();for(const h of H)if(h.targetIndex===f){K=!0;break}for(const h of P)if(h.targetIndex===f){K=!0;break}if(K)return this.showMoveText(),this.showFailedText(),this.end()}let N=!0;for(const H of this.move.getMove().getAttrs("PreUseInterruptAttr"))if(H.apply(this.pokemon,e[0],this.move.getMove())){N=!1;break}if(N&&this.showMoveText(),I.length>0&&(this.ignorePp=((C=I.shift())==null?void 0:C.ignorePP)??!1),((o=this.pokemon.getTag(d.CHARGING))==null?void 0:o.sourceMove)===this.move.moveId&&this.pokemon.lapseTag(d.CHARGING),!this.ignorePp){const H=1+this.getPpIncreaseFromPressure(e);this.move.usePp(H),T.eventTarget.dispatchEvent(new ka((l=this.pokemon)==null?void 0:l.id,this.move.getMove(),this.move.ppUsed))}const S=this.move.getMove();let n=!1,i=!1;if(N){const H=S.applyConditions(this.pokemon,e[0],S);i=T.arena.isMoveWeatherCancelled(this.pokemon,S),n=T.arena.isMoveTerrainCancelled(this.pokemon,this.targets,S),N=H&&!i&&!n}if(FA[this.move.moveId].hasAttr("CopyMoveAttr")||N&&(T.currentBattle.lastMove=this.move.moveId),N){const H=this.move.getMove();hI("PokemonTypeChangeAbAttr",this.pokemon,null,H),T.phaseManager.unshiftNew("MoveEffectPhase",this.pokemon.getBattlerIndex(),this.targets,H,this.reflected,this.move.virtual)}else{[E.ROAR,E.WHIRLWIND,E.TRICK_OR_TREAT,E.FORESTS_CURSE].includes(this.move.moveId)&&hI("PokemonTypeChangeAbAttr",this.pokemon,null,this.move.getMove()),this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:De.FAIL,virtual:this.move.virtual});const H=S.getFailedText(this.pokemon,e[0],S);let P;H?P=H:n?P=NV(e[0],T.arena.getTerrainType()):i&&(P=IV(T.arena.getWeatherType())),this.showFailedText(P),this.pokemon.lapseTags(BA.MOVE_EFFECT)}this.move.getMove().hasFlag(JA.DANCE_MOVE)&&!this.followUp&&T.getField(!0).forEach(H=>{TV("PostMoveUsedAbAttr",H,this.move,this.pokemon,this.targets)})}chargeMove(){const e=this.move.getMove(),I=this.getActiveTargetPokemon();if(e.applyConditions(this.pokemon,I[0],e))hI("PokemonTypeChangeAbAttr",this.pokemon,null,this.move.getMove()),this.showMoveText(),T.phaseManager.unshiftNew("MoveChargePhase",this.pokemon.getBattlerIndex(),this.targets[0],this.move);else{this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:De.FAIL,virtual:this.move.virtual});const L=e.getFailedText(this.pokemon,I[0],e);this.showMoveText(),this.showFailedText(L??void 0),this.pokemon.lapseTags(BA.MOVE_EFFECT)}}end(){T.phaseManager.unshiftNew("MoveEndPhase",this.pokemon.getBattlerIndex(),this.getActiveTargetPokemon(),this.followUp),super.end()}getPpIncreaseFromPressure(e){return this.pokemon.getOpponents().filter(L=>e.includes(L)&&L.isActive(!0)&&L.hasAbilityWithAttr("IncreasePpAbAttr")).length}resolveRedirectTarget(){if(this.targets.length===1){const e=this.targets[0],I=new VA(e);T.getField(!0).filter(N=>N!==this.pokemon).forEach(N=>SE("RedirectMoveAbAttr",N,null,!1,this.move.moveId,I,this.pokemon));let L=e!==I.value;this.pokemon.getOpponents().forEach(N=>{const S=N.getTag(uC);S&&(!S.powder||!this.pokemon.isOfType(t.GRASS)&&!this.pokemon.hasAbility(O.OVERCOAT))&&(I.value=N.getBattlerIndex(),L=!1)}),e!==I.value&&(this.move.getMove().getAttrs("BypassRedirectAttr").forEach(S=>{(!S.abilitiesOnly||L)&&(I.value=e)}),this.pokemon.hasAbilityWithAttr("BlockRedirectAbAttr")&&(I.value=e,T.phaseManager.queueAbilityDisplay(this.pokemon,this.pokemon.getPassiveAbility().hasAttr("BlockRedirectAbAttr"),!0),T.phaseManager.queueAbilityDisplay(this.pokemon,this.pokemon.getPassiveAbility().hasAttr("BlockRedirectAbAttr"),!1)),this.targets[0]=I.value)}}resolveCounterAttackTarget(){var e;if(this.targets.length===1&&this.targets[0]===KE.ATTACKER){if(this.pokemon.turnData.attacksReceived.length&&(this.targets[0]=this.pokemon.turnData.attacksReceived[0].sourceBattlerIndex,T.currentBattle.double&&this.move.getMove().hasFlag(JA.REDIRECT_COUNTER)&&T.getField()[this.targets[0]].hp===0)){const I=this.pokemon.isPlayer()?T.getEnemyField():T.getPlayerField();this.targets[0]=((e=I.find(L=>L.hp>0))==null?void 0:e.getBattlerIndex())??KE.ATTACKER}this.targets[0]===KE.ATTACKER&&(this.fail(),this.showMoveText(),this.showFailedText())}}handlePreMoveFailures(){var e,I;if(this.cancelled||this.failed){if(this.failed){const L=this.ignorePp?0:1;L&&this.move.usePp(),T.eventTarget.dispatchEvent(new ka((e=this.pokemon)==null?void 0:e.id,this.move.getMove(),L))}this.cancelled&&((I=this.pokemon.summonData.tags)!=null&&I.find(L=>L.tagType===d.FRENZY))&&xI(this.pokemon,this.move.getMove()),this.pokemon.pushMoveHistory({move:E.NONE,result:De.FAIL,targets:this.targets}),this.pokemon.lapseTags(BA.MOVE_EFFECT),this.pokemon.lapseTags(BA.AFTER_MOVE),this.pokemon.getMoveQueue().shift()}}showMoveText(){this.move.moveId!==E.NONE&&(this.pokemon.getTag(d.RECHARGING)||this.pokemon.getTag(d.INTERRUPTED)||(T.phaseManager.queueMessage(_.t(this.reflected?"battle:magicCoatActivated":"battle:useMove",{pokemonNameWithAffix:Q(this.pokemon),moveName:this.move.getName()}),500),Ce("PreMoveMessageAttr",this.pokemon,this.pokemon.getOpponents(!1)[0],this.move.getMove())))}showFailedText(e=_.t("battle:attackFailed")){T.phaseManager.queueMessage(e)}};r(eK,"MovePhase");let e0=eK,FO=null;const LZ=tH(32);function NZ(){return new Promise(R=>{iy.account.getInfo().then(([e,I])=>{if(!e){R([!1,I]);return}FO=e,R([!0,200])})})}r(NZ,"updateUserInfo");var ri={exports:{}};function XV(R){throw new Error('Could not dynamically require "'+R+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}r(XV,"commonjsRequire");var ii={exports:{}};const QV={},JV=Object.freeze(Object.defineProperty({__proto__:null,default:QV},Symbol.toStringTag,{value:"Module"})),$V=Cy(JV);var qV=ii.exports,S2;function ZE(){return S2||(S2=1,function(R,e){(function(I,L){R.exports=L()})(qV,function(){var I=I||function(L,N){var S;if(typeof window<"u"&&window.crypto&&(S=window.crypto),typeof self<"u"&&self.crypto&&(S=self.crypto),typeof globalThis<"u"&&globalThis.crypto&&(S=globalThis.crypto),!S&&typeof window<"u"&&window.msCrypto&&(S=window.msCrypto),!S&&typeof T_<"u"&&T_.crypto&&(S=T_.crypto),!S&&typeof XV=="function")try{S=$V}catch{}var n=r(function(){if(S){if(typeof S.getRandomValues=="function")try{return S.getRandomValues(new Uint32Array(1))[0]}catch{}if(typeof S.randomBytes=="function")try{return S.randomBytes(4).readInt32LE()}catch{}}throw new Error("Native crypto module could not be used to get secure random number.")},"cryptoSecureRandomInt"),i=Object.create||function(){function m(){}return r(m,"F"),function(y){var x;return m.prototype=y,x=new m,m.prototype=null,x}}(),C={},o=C.lib={},l=o.Base=function(){return{extend:r(function(m){var y=i(this);return m&&y.mixIn(m),(!y.hasOwnProperty("init")||this.init===y.init)&&(y.init=function(){y.$super.init.apply(this,arguments)}),y.init.prototype=y,y.$super=this,y},"extend"),create:r(function(){var m=this.extend();return m.init.apply(m,arguments),m},"create"),init:r(function(){},"init"),mixIn:r(function(m){for(var y in m)m.hasOwnProperty(y)&&(this[y]=m[y]);m.hasOwnProperty("toString")&&(this.toString=m.toString)},"mixIn"),clone:r(function(){return this.init.prototype.extend(this)},"clone")}}(),H=o.WordArray=l.extend({init:r(function(m,y){m=this.words=m||[],y!=N?this.sigBytes=y:this.sigBytes=m.length*4},"init"),toString:r(function(m){return(m||K).stringify(this)},"toString"),concat:r(function(m){var y=this.words,x=m.words,q=this.sigBytes,IA=m.sigBytes;if(this.clamp(),q%4)for(var $=0;$<IA;$++){var tA=x[$>>>2]>>>24-$%4*8&255;y[q+$>>>2]|=tA<<24-(q+$)%4*8}else for(var UA=0;UA<IA;UA+=4)y[q+UA>>>2]=x[UA>>>2];return this.sigBytes+=IA,this},"concat"),clamp:r(function(){var m=this.words,y=this.sigBytes;m[y>>>2]&=4294967295<<32-y%4*8,m.length=L.ceil(y/4)},"clamp"),clone:r(function(){var m=l.clone.call(this);return m.words=this.words.slice(0),m},"clone"),random:r(function(m){for(var y=[],x=0;x<m;x+=4)y.push(n());return new H.init(y,m)},"random")}),P=C.enc={},K=P.Hex={stringify:r(function(m){for(var y=m.words,x=m.sigBytes,q=[],IA=0;IA<x;IA++){var $=y[IA>>>2]>>>24-IA%4*8&255;q.push(($>>>4).toString(16)),q.push(($&15).toString(16))}return q.join("")},"stringify"),parse:r(function(m){for(var y=m.length,x=[],q=0;q<y;q+=2)x[q>>>3]|=parseInt(m.substr(q,2),16)<<24-q%8*4;return new H.init(x,y/2)},"parse")},f=P.Latin1={stringify:r(function(m){for(var y=m.words,x=m.sigBytes,q=[],IA=0;IA<x;IA++){var $=y[IA>>>2]>>>24-IA%4*8&255;q.push(String.fromCharCode($))}return q.join("")},"stringify"),parse:r(function(m){for(var y=m.length,x=[],q=0;q<y;q++)x[q>>>2]|=(m.charCodeAt(q)&255)<<24-q%4*8;return new H.init(x,y)},"parse")},h=P.Utf8={stringify:r(function(m){try{return decodeURIComponent(escape(f.stringify(m)))}catch{throw new Error("Malformed UTF-8 data")}},"stringify"),parse:r(function(m){return f.parse(unescape(encodeURIComponent(m)))},"parse")},F=o.BufferedBlockAlgorithm=l.extend({reset:r(function(){this._data=new H.init,this._nDataBytes=0},"reset"),_append:r(function(m){typeof m=="string"&&(m=h.parse(m)),this._data.concat(m),this._nDataBytes+=m.sigBytes},"_append"),_process:r(function(m){var y,x=this._data,q=x.words,IA=x.sigBytes,$=this.blockSize,tA=$*4,UA=IA/tA;m?UA=L.ceil(UA):UA=L.max((UA|0)-this._minBufferSize,0);var RA=UA*$,OA=L.min(RA*4,IA);if(RA){for(var NA=0;NA<RA;NA+=$)this._doProcessBlock(q,NA);y=q.splice(0,RA),x.sigBytes-=OA}return new H.init(y,OA)},"_process"),clone:r(function(){var m=l.clone.call(this);return m._data=this._data.clone(),m},"clone"),_minBufferSize:0});o.Hasher=F.extend({cfg:l.extend(),init:r(function(m){this.cfg=this.cfg.extend(m),this.reset()},"init"),reset:r(function(){F.reset.call(this),this._doReset()},"reset"),update:r(function(m){return this._append(m),this._process(),this},"update"),finalize:r(function(m){m&&this._append(m);var y=this._doFinalize();return y},"finalize"),blockSize:16,_createHelper:r(function(m){return function(y,x){return new m.init(x).finalize(y)}},"_createHelper"),_createHmacHelper:r(function(m){return function(y,x){return new w.HMAC.init(m,x).finalize(y)}},"_createHmacHelper")});var w=C.algo={};return C}(Math);return I})}(ii)),ii.exports}r(ZE,"requireCore");var Ci={exports:{}},zV=Ci.exports,T2;function O_(){return T2||(T2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(zV,function(I){return function(L){var N=I,S=N.lib,n=S.Base,i=S.WordArray,C=N.x64={};C.Word=n.extend({init:r(function(o,l){this.high=o,this.low=l},"init")}),C.WordArray=n.extend({init:r(function(o,l){o=this.words=o||[],l!=L?this.sigBytes=l:this.sigBytes=o.length*8},"init"),toX32:r(function(){for(var o=this.words,l=o.length,H=[],P=0;P<l;P++){var K=o[P];H.push(K.high),H.push(K.low)}return i.create(H,this.sigBytes)},"toX32"),clone:r(function(){for(var o=n.clone.call(this),l=o.words=this.words.slice(0),H=l.length,P=0;P<H;P++)l[P]=l[P].clone();return o},"clone")})}(),I})}(Ci)),Ci.exports}r(O_,"requireX64Core");var Ui={exports:{}},jV=Ui.exports,s2;function Aw(){return s2||(s2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(jV,function(I){return function(){if(typeof ArrayBuffer=="function"){var L=I,N=L.lib,S=N.WordArray,n=S.init,i=S.init=function(C){if(C instanceof ArrayBuffer&&(C=new Uint8Array(C)),(C instanceof Int8Array||typeof Uint8ClampedArray<"u"&&C instanceof Uint8ClampedArray||C instanceof Int16Array||C instanceof Uint16Array||C instanceof Int32Array||C instanceof Uint32Array||C instanceof Float32Array||C instanceof Float64Array)&&(C=new Uint8Array(C.buffer,C.byteOffset,C.byteLength)),C instanceof Uint8Array){for(var o=C.byteLength,l=[],H=0;H<o;H++)l[H>>>2]|=C[H]<<24-H%4*8;n.call(this,l,o)}else n.apply(this,arguments)};i.prototype=S}}(),I.lib.WordArray})}(Ui)),Ui.exports}r(Aw,"requireLibTypedarrays");var oi={exports:{}},Ew=oi.exports,a2;function ew(){return a2||(a2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(Ew,function(I){return function(){var L=I,N=L.lib,S=N.WordArray,n=L.enc;n.Utf16=n.Utf16BE={stringify:r(function(C){for(var o=C.words,l=C.sigBytes,H=[],P=0;P<l;P+=2){var K=o[P>>>2]>>>16-P%4*8&65535;H.push(String.fromCharCode(K))}return H.join("")},"stringify"),parse:r(function(C){for(var o=C.length,l=[],H=0;H<o;H++)l[H>>>1]|=C.charCodeAt(H)<<16-H%2*16;return S.create(l,o*2)},"parse")},n.Utf16LE={stringify:r(function(C){for(var o=C.words,l=C.sigBytes,H=[],P=0;P<l;P+=2){var K=i(o[P>>>2]>>>16-P%4*8&65535);H.push(String.fromCharCode(K))}return H.join("")},"stringify"),parse:r(function(C){for(var o=C.length,l=[],H=0;H<o;H++)l[H>>>1]|=i(C.charCodeAt(H)<<16-H%2*16);return S.create(l,o*2)},"parse")};function i(C){return C<<8&4278255360|C>>>8&16711935}r(i,"swapEndian")}(),I.enc.Utf16})}(oi)),oi.exports}r(ew,"requireEncUtf16");var Mi={exports:{}},Rw=Mi.exports,n2;function LN(){return n2||(n2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(Rw,function(I){return function(){var L=I,N=L.lib,S=N.WordArray,n=L.enc;n.Base64={stringify:r(function(C){var o=C.words,l=C.sigBytes,H=this._map;C.clamp();for(var P=[],K=0;K<l;K+=3)for(var f=o[K>>>2]>>>24-K%4*8&255,h=o[K+1>>>2]>>>24-(K+1)%4*8&255,F=o[K+2>>>2]>>>24-(K+2)%4*8&255,w=f<<16|h<<8|F,m=0;m<4&&K+m*.75<l;m++)P.push(H.charAt(w>>>6*(3-m)&63));var y=H.charAt(64);if(y)for(;P.length%4;)P.push(y);return P.join("")},"stringify"),parse:r(function(C){var o=C.length,l=this._map,H=this._reverseMap;if(!H){H=this._reverseMap=[];for(var P=0;P<l.length;P++)H[l.charCodeAt(P)]=P}var K=l.charAt(64);if(K){var f=C.indexOf(K);f!==-1&&(o=f)}return i(C,o,H)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function i(C,o,l){for(var H=[],P=0,K=0;K<o;K++)if(K%4){var f=l[C.charCodeAt(K-1)]<<K%4*2,h=l[C.charCodeAt(K)]>>>6-K%4*2,F=f|h;H[P>>>2]|=F<<24-P%4*8,P++}return S.create(H,P)}r(i,"parseLoop")}(),I.enc.Base64})}(Mi)),Mi.exports}r(LN,"requireEncBase64");var Di={exports:{}},Ow=Di.exports,r2;function Iw(){return r2||(r2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(Ow,function(I){return function(){var L=I,N=L.lib,S=N.WordArray,n=L.enc;n.Base64url={stringify:r(function(C,o){o===void 0&&(o=!0);var l=C.words,H=C.sigBytes,P=o?this._safe_map:this._map;C.clamp();for(var K=[],f=0;f<H;f+=3)for(var h=l[f>>>2]>>>24-f%4*8&255,F=l[f+1>>>2]>>>24-(f+1)%4*8&255,w=l[f+2>>>2]>>>24-(f+2)%4*8&255,m=h<<16|F<<8|w,y=0;y<4&&f+y*.75<H;y++)K.push(P.charAt(m>>>6*(3-y)&63));var x=P.charAt(64);if(x)for(;K.length%4;)K.push(x);return K.join("")},"stringify"),parse:r(function(C,o){o===void 0&&(o=!0);var l=C.length,H=o?this._safe_map:this._map,P=this._reverseMap;if(!P){P=this._reverseMap=[];for(var K=0;K<H.length;K++)P[H.charCodeAt(K)]=K}var f=H.charAt(64);if(f){var h=C.indexOf(f);h!==-1&&(l=h)}return i(C,l,P)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function i(C,o,l){for(var H=[],P=0,K=0;K<o;K++)if(K%4){var f=l[C.charCodeAt(K-1)]<<K%4*2,h=l[C.charCodeAt(K)]>>>6-K%4*2,F=f|h;H[P>>>2]|=F<<24-P%4*8,P++}return S.create(H,P)}r(i,"parseLoop")}(),I.enc.Base64url})}(Di)),Di.exports}r(Iw,"requireEncBase64url");var li={exports:{}},tw=li.exports,i2;function NN(){return i2||(i2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(tw,function(I){return function(L){var N=I,S=N.lib,n=S.WordArray,i=S.Hasher,C=N.algo,o=[];(function(){for(var h=0;h<64;h++)o[h]=L.abs(L.sin(h+1))*4294967296|0})();var l=C.MD5=i.extend({_doReset:r(function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878])},"_doReset"),_doProcessBlock:r(function(h,F){for(var w=0;w<16;w++){var m=F+w,y=h[m];h[m]=(y<<8|y>>>24)&16711935|(y<<24|y>>>8)&4278255360}var x=this._hash.words,q=h[F+0],IA=h[F+1],$=h[F+2],tA=h[F+3],UA=h[F+4],RA=h[F+5],OA=h[F+6],NA=h[F+7],iA=h[F+8],KA=h[F+9],wA=h[F+10],vA=h[F+11],$A=h[F+12],RE=h[F+13],LE=h[F+14],cA=h[F+15],nA=x[0],lA=x[1],TA=x[2],GA=x[3];nA=H(nA,lA,TA,GA,q,7,o[0]),GA=H(GA,nA,lA,TA,IA,12,o[1]),TA=H(TA,GA,nA,lA,$,17,o[2]),lA=H(lA,TA,GA,nA,tA,22,o[3]),nA=H(nA,lA,TA,GA,UA,7,o[4]),GA=H(GA,nA,lA,TA,RA,12,o[5]),TA=H(TA,GA,nA,lA,OA,17,o[6]),lA=H(lA,TA,GA,nA,NA,22,o[7]),nA=H(nA,lA,TA,GA,iA,7,o[8]),GA=H(GA,nA,lA,TA,KA,12,o[9]),TA=H(TA,GA,nA,lA,wA,17,o[10]),lA=H(lA,TA,GA,nA,vA,22,o[11]),nA=H(nA,lA,TA,GA,$A,7,o[12]),GA=H(GA,nA,lA,TA,RE,12,o[13]),TA=H(TA,GA,nA,lA,LE,17,o[14]),lA=H(lA,TA,GA,nA,cA,22,o[15]),nA=P(nA,lA,TA,GA,IA,5,o[16]),GA=P(GA,nA,lA,TA,OA,9,o[17]),TA=P(TA,GA,nA,lA,vA,14,o[18]),lA=P(lA,TA,GA,nA,q,20,o[19]),nA=P(nA,lA,TA,GA,RA,5,o[20]),GA=P(GA,nA,lA,TA,wA,9,o[21]),TA=P(TA,GA,nA,lA,cA,14,o[22]),lA=P(lA,TA,GA,nA,UA,20,o[23]),nA=P(nA,lA,TA,GA,KA,5,o[24]),GA=P(GA,nA,lA,TA,LE,9,o[25]),TA=P(TA,GA,nA,lA,tA,14,o[26]),lA=P(lA,TA,GA,nA,iA,20,o[27]),nA=P(nA,lA,TA,GA,RE,5,o[28]),GA=P(GA,nA,lA,TA,$,9,o[29]),TA=P(TA,GA,nA,lA,NA,14,o[30]),lA=P(lA,TA,GA,nA,$A,20,o[31]),nA=K(nA,lA,TA,GA,RA,4,o[32]),GA=K(GA,nA,lA,TA,iA,11,o[33]),TA=K(TA,GA,nA,lA,vA,16,o[34]),lA=K(lA,TA,GA,nA,LE,23,o[35]),nA=K(nA,lA,TA,GA,IA,4,o[36]),GA=K(GA,nA,lA,TA,UA,11,o[37]),TA=K(TA,GA,nA,lA,NA,16,o[38]),lA=K(lA,TA,GA,nA,wA,23,o[39]),nA=K(nA,lA,TA,GA,RE,4,o[40]),GA=K(GA,nA,lA,TA,q,11,o[41]),TA=K(TA,GA,nA,lA,tA,16,o[42]),lA=K(lA,TA,GA,nA,OA,23,o[43]),nA=K(nA,lA,TA,GA,KA,4,o[44]),GA=K(GA,nA,lA,TA,$A,11,o[45]),TA=K(TA,GA,nA,lA,cA,16,o[46]),lA=K(lA,TA,GA,nA,$,23,o[47]),nA=f(nA,lA,TA,GA,q,6,o[48]),GA=f(GA,nA,lA,TA,NA,10,o[49]),TA=f(TA,GA,nA,lA,LE,15,o[50]),lA=f(lA,TA,GA,nA,RA,21,o[51]),nA=f(nA,lA,TA,GA,$A,6,o[52]),GA=f(GA,nA,lA,TA,tA,10,o[53]),TA=f(TA,GA,nA,lA,wA,15,o[54]),lA=f(lA,TA,GA,nA,IA,21,o[55]),nA=f(nA,lA,TA,GA,iA,6,o[56]),GA=f(GA,nA,lA,TA,cA,10,o[57]),TA=f(TA,GA,nA,lA,OA,15,o[58]),lA=f(lA,TA,GA,nA,RE,21,o[59]),nA=f(nA,lA,TA,GA,UA,6,o[60]),GA=f(GA,nA,lA,TA,vA,10,o[61]),TA=f(TA,GA,nA,lA,$,15,o[62]),lA=f(lA,TA,GA,nA,KA,21,o[63]),x[0]=x[0]+nA|0,x[1]=x[1]+lA|0,x[2]=x[2]+TA|0,x[3]=x[3]+GA|0},"_doProcessBlock"),_doFinalize:r(function(){var h=this._data,F=h.words,w=this._nDataBytes*8,m=h.sigBytes*8;F[m>>>5]|=128<<24-m%32;var y=L.floor(w/4294967296),x=w;F[(m+64>>>9<<4)+15]=(y<<8|y>>>24)&16711935|(y<<24|y>>>8)&4278255360,F[(m+64>>>9<<4)+14]=(x<<8|x>>>24)&16711935|(x<<24|x>>>8)&4278255360,h.sigBytes=(F.length+1)*4,this._process();for(var q=this._hash,IA=q.words,$=0;$<4;$++){var tA=IA[$];IA[$]=(tA<<8|tA>>>24)&16711935|(tA<<24|tA>>>8)&4278255360}return q},"_doFinalize"),clone:r(function(){var h=i.clone.call(this);return h._hash=this._hash.clone(),h},"clone")});function H(h,F,w,m,y,x,q){var IA=h+(F&w|~F&m)+y+q;return(IA<<x|IA>>>32-x)+F}r(H,"FF");function P(h,F,w,m,y,x,q){var IA=h+(F&m|w&~m)+y+q;return(IA<<x|IA>>>32-x)+F}r(P,"GG");function K(h,F,w,m,y,x,q){var IA=h+(F^w^m)+y+q;return(IA<<x|IA>>>32-x)+F}r(K,"HH");function f(h,F,w,m,y,x,q){var IA=h+(w^(F|~m))+y+q;return(IA<<x|IA>>>32-x)+F}r(f,"II"),N.MD5=i._createHelper(l),N.HmacMD5=i._createHmacHelper(l)}(Math),I.MD5})}(li)),li.exports}r(NN,"requireMd5");var _i={exports:{}},Lw=_i.exports,C2;function U3(){return C2||(C2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(Lw,function(I){return function(){var L=I,N=L.lib,S=N.WordArray,n=N.Hasher,i=L.algo,C=[],o=i.SHA1=n.extend({_doReset:r(function(){this._hash=new S.init([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:r(function(l,H){for(var P=this._hash.words,K=P[0],f=P[1],h=P[2],F=P[3],w=P[4],m=0;m<80;m++){if(m<16)C[m]=l[H+m]|0;else{var y=C[m-3]^C[m-8]^C[m-14]^C[m-16];C[m]=y<<1|y>>>31}var x=(K<<5|K>>>27)+w+C[m];m<20?x+=(f&h|~f&F)+1518500249:m<40?x+=(f^h^F)+1859775393:m<60?x+=(f&h|f&F|h&F)-1894007588:x+=(f^h^F)-899497514,w=F,F=h,h=f<<30|f>>>2,f=K,K=x}P[0]=P[0]+K|0,P[1]=P[1]+f|0,P[2]=P[2]+h|0,P[3]=P[3]+F|0,P[4]=P[4]+w|0},"_doProcessBlock"),_doFinalize:r(function(){var l=this._data,H=l.words,P=this._nDataBytes*8,K=l.sigBytes*8;return H[K>>>5]|=128<<24-K%32,H[(K+64>>>9<<4)+14]=Math.floor(P/4294967296),H[(K+64>>>9<<4)+15]=P,l.sigBytes=H.length*4,this._process(),this._hash},"_doFinalize"),clone:r(function(){var l=n.clone.call(this);return l._hash=this._hash.clone(),l},"clone")});L.SHA1=n._createHelper(o),L.HmacSHA1=n._createHmacHelper(o)}(),I.SHA1})}(_i)),_i.exports}r(U3,"requireSha1");var Gi={exports:{}},Nw=Gi.exports,U2;function DH(){return U2||(U2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(Nw,function(I){return function(L){var N=I,S=N.lib,n=S.WordArray,i=S.Hasher,C=N.algo,o=[],l=[];(function(){function K(w){for(var m=L.sqrt(w),y=2;y<=m;y++)if(!(w%y))return!1;return!0}r(K,"isPrime");function f(w){return(w-(w|0))*4294967296|0}r(f,"getFractionalBits");for(var h=2,F=0;F<64;)K(h)&&(F<8&&(o[F]=f(L.pow(h,1/2))),l[F]=f(L.pow(h,1/3)),F++),h++})();var H=[],P=C.SHA256=i.extend({_doReset:r(function(){this._hash=new n.init(o.slice(0))},"_doReset"),_doProcessBlock:r(function(K,f){for(var h=this._hash.words,F=h[0],w=h[1],m=h[2],y=h[3],x=h[4],q=h[5],IA=h[6],$=h[7],tA=0;tA<64;tA++){if(tA<16)H[tA]=K[f+tA]|0;else{var UA=H[tA-15],RA=(UA<<25|UA>>>7)^(UA<<14|UA>>>18)^UA>>>3,OA=H[tA-2],NA=(OA<<15|OA>>>17)^(OA<<13|OA>>>19)^OA>>>10;H[tA]=RA+H[tA-7]+NA+H[tA-16]}var iA=x&q^~x&IA,KA=F&w^F&m^w&m,wA=(F<<30|F>>>2)^(F<<19|F>>>13)^(F<<10|F>>>22),vA=(x<<26|x>>>6)^(x<<21|x>>>11)^(x<<7|x>>>25),$A=$+vA+iA+l[tA]+H[tA],RE=wA+KA;$=IA,IA=q,q=x,x=y+$A|0,y=m,m=w,w=F,F=$A+RE|0}h[0]=h[0]+F|0,h[1]=h[1]+w|0,h[2]=h[2]+m|0,h[3]=h[3]+y|0,h[4]=h[4]+x|0,h[5]=h[5]+q|0,h[6]=h[6]+IA|0,h[7]=h[7]+$|0},"_doProcessBlock"),_doFinalize:r(function(){var K=this._data,f=K.words,h=this._nDataBytes*8,F=K.sigBytes*8;return f[F>>>5]|=128<<24-F%32,f[(F+64>>>9<<4)+14]=L.floor(h/4294967296),f[(F+64>>>9<<4)+15]=h,K.sigBytes=f.length*4,this._process(),this._hash},"_doFinalize"),clone:r(function(){var K=i.clone.call(this);return K._hash=this._hash.clone(),K},"clone")});N.SHA256=i._createHelper(P),N.HmacSHA256=i._createHmacHelper(P)}(Math),I.SHA256})}(Gi)),Gi.exports}r(DH,"requireSha256");var Pi={exports:{}},Sw=Pi.exports,o2;function Tw(){return o2||(o2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),DH())})(Sw,function(I){return function(){var L=I,N=L.lib,S=N.WordArray,n=L.algo,i=n.SHA256,C=n.SHA224=i.extend({_doReset:r(function(){this._hash=new S.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},"_doReset"),_doFinalize:r(function(){var o=i._doFinalize.call(this);return o.sigBytes-=4,o},"_doFinalize")});L.SHA224=i._createHelper(C),L.HmacSHA224=i._createHmacHelper(C)}(),I.SHA224})}(Pi)),Pi.exports}r(Tw,"requireSha224");var Hi={exports:{}},sw=Hi.exports,M2;function o3(){return M2||(M2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),O_())})(sw,function(I){return function(){var L=I,N=L.lib,S=N.Hasher,n=L.x64,i=n.Word,C=n.WordArray,o=L.algo;function l(){return i.create.apply(i,arguments)}r(l,"X64Word_create");var H=[l(1116352408,3609767458),l(1899447441,602891725),l(3049323471,3964484399),l(3921009573,2173295548),l(961987163,4081628472),l(1508970993,3053834265),l(2453635748,2937671579),l(2870763221,3664609560),l(3624381080,2734883394),l(310598401,1164996542),l(607225278,1323610764),l(1426881987,3590304994),l(1925078388,4068182383),l(2162078206,991336113),l(2614888103,633803317),l(3248222580,3479774868),l(3835390401,2666613458),l(4022224774,944711139),l(264347078,2341262773),l(604807628,2007800933),l(770255983,1495990901),l(1249150122,1856431235),l(1555081692,3175218132),l(1996064986,2198950837),l(2554220882,3999719339),l(2821834349,766784016),l(2952996808,2566594879),l(3210313671,3203337956),l(3336571891,1034457026),l(3584528711,2466948901),l(113926993,3758326383),l(338241895,168717936),l(666307205,1188179964),l(773529912,1546045734),l(1294757372,1522805485),l(1396182291,2643833823),l(1695183700,2343527390),l(1986661051,1014477480),l(2177026350,1206759142),l(2456956037,344077627),l(2730485921,1290863460),l(2820302411,3158454273),l(3259730800,3505952657),l(3345764771,106217008),l(3516065817,3606008344),l(3600352804,1432725776),l(4094571909,1467031594),l(275423344,851169720),l(430227734,3100823752),l(506948616,1363258195),l(659060556,3750685593),l(883997877,3785050280),l(958139571,3318307427),l(1322822218,3812723403),l(1537002063,2003034995),l(1747873779,3602036899),l(1955562222,1575990012),l(2024104815,1125592928),l(2227730452,2716904306),l(2361852424,442776044),l(2428436474,593698344),l(2756734187,3733110249),l(3204031479,2999351573),l(3329325298,3815920427),l(3391569614,3928383900),l(3515267271,566280711),l(3940187606,3454069534),l(4118630271,4000239992),l(116418474,1914138554),l(174292421,2731055270),l(289380356,3203993006),l(460393269,320620315),l(685471733,587496836),l(852142971,1086792851),l(1017036298,365543100),l(1126000580,2618297676),l(1288033470,3409855158),l(1501505948,4234509866),l(1607167915,987167468),l(1816402316,1246189591)],P=[];(function(){for(var f=0;f<80;f++)P[f]=l()})();var K=o.SHA512=S.extend({_doReset:r(function(){this._hash=new C.init([new i.init(1779033703,4089235720),new i.init(3144134277,2227873595),new i.init(1013904242,4271175723),new i.init(2773480762,1595750129),new i.init(1359893119,2917565137),new i.init(2600822924,725511199),new i.init(528734635,4215389547),new i.init(1541459225,327033209)])},"_doReset"),_doProcessBlock:r(function(f,h){for(var F=this._hash.words,w=F[0],m=F[1],y=F[2],x=F[3],q=F[4],IA=F[5],$=F[6],tA=F[7],UA=w.high,RA=w.low,OA=m.high,NA=m.low,iA=y.high,KA=y.low,wA=x.high,vA=x.low,$A=q.high,RE=q.low,LE=IA.high,cA=IA.low,nA=$.high,lA=$.low,TA=tA.high,GA=tA.low,zA=UA,jA=RA,ME=OA,eE=NA,gE=iA,ae=KA,ge=wA,NO=vA,WR=$A,oR=RE,SN=LE,Lt=cA,zt=nA,Nt=lA,TN=TA,St=GA,SO=0;SO<80;SO++){var XR,JO,Xr=P[SO];if(SO<16)JO=Xr.high=f[h+SO*2]|0,XR=Xr.low=f[h+SO*2+1]|0;else{var Pm=P[SO-15],sN=Pm.high,LT=Pm.low,z3=(sN>>>1|LT<<31)^(sN>>>8|LT<<24)^sN>>>7,Hm=(LT>>>1|sN<<31)^(LT>>>8|sN<<24)^(LT>>>7|sN<<25),um=P[SO-2],aN=um.high,NT=um.low,j3=(aN>>>19|NT<<13)^(aN<<3|NT>>>29)^aN>>>6,cm=(NT>>>19|aN<<13)^(NT<<3|aN>>>29)^(NT>>>6|aN<<26),Bm=P[SO-7],Ay=Bm.high,Ey=Bm.low,Km=P[SO-16],ey=Km.high,fm=Km.low;XR=Hm+Ey,JO=z3+Ay+(XR>>>0<Hm>>>0?1:0),XR=XR+cm,JO=JO+j3+(XR>>>0<cm>>>0?1:0),XR=XR+fm,JO=JO+ey+(XR>>>0<fm>>>0?1:0),Xr.high=JO,Xr.low=XR}var Ry=WR&SN^~WR&zt,Fm=oR&Lt^~oR&Nt,Oy=zA&ME^zA&gE^ME&gE,Iy=jA&eE^jA&ae^eE&ae,ty=(zA>>>28|jA<<4)^(zA<<30|jA>>>2)^(zA<<25|jA>>>7),Ym=(jA>>>28|zA<<4)^(jA<<30|zA>>>2)^(jA<<25|zA>>>7),Ly=(WR>>>14|oR<<18)^(WR>>>18|oR<<14)^(WR<<23|oR>>>9),Ny=(oR>>>14|WR<<18)^(oR>>>18|WR<<14)^(oR<<23|WR>>>9),Wm=H[SO],Sy=Wm.high,hm=Wm.low,lO=St+Ny,Tt=TN+Ly+(lO>>>0<St>>>0?1:0),lO=lO+Fm,Tt=Tt+Ry+(lO>>>0<Fm>>>0?1:0),lO=lO+hm,Tt=Tt+Sy+(lO>>>0<hm>>>0?1:0),lO=lO+XR,Tt=Tt+JO+(lO>>>0<XR>>>0?1:0),dm=Ym+Iy,Ty=ty+Oy+(dm>>>0<Ym>>>0?1:0);TN=zt,St=Nt,zt=SN,Nt=Lt,SN=WR,Lt=oR,oR=NO+lO|0,WR=ge+Tt+(oR>>>0<NO>>>0?1:0)|0,ge=gE,NO=ae,gE=ME,ae=eE,ME=zA,eE=jA,jA=lO+dm|0,zA=Tt+Ty+(jA>>>0<lO>>>0?1:0)|0}RA=w.low=RA+jA,w.high=UA+zA+(RA>>>0<jA>>>0?1:0),NA=m.low=NA+eE,m.high=OA+ME+(NA>>>0<eE>>>0?1:0),KA=y.low=KA+ae,y.high=iA+gE+(KA>>>0<ae>>>0?1:0),vA=x.low=vA+NO,x.high=wA+ge+(vA>>>0<NO>>>0?1:0),RE=q.low=RE+oR,q.high=$A+WR+(RE>>>0<oR>>>0?1:0),cA=IA.low=cA+Lt,IA.high=LE+SN+(cA>>>0<Lt>>>0?1:0),lA=$.low=lA+Nt,$.high=nA+zt+(lA>>>0<Nt>>>0?1:0),GA=tA.low=GA+St,tA.high=TA+TN+(GA>>>0<St>>>0?1:0)},"_doProcessBlock"),_doFinalize:r(function(){var f=this._data,h=f.words,F=this._nDataBytes*8,w=f.sigBytes*8;h[w>>>5]|=128<<24-w%32,h[(w+128>>>10<<5)+30]=Math.floor(F/4294967296),h[(w+128>>>10<<5)+31]=F,f.sigBytes=h.length*4,this._process();var m=this._hash.toX32();return m},"_doFinalize"),clone:r(function(){var f=S.clone.call(this);return f._hash=this._hash.clone(),f},"clone"),blockSize:1024/32});L.SHA512=S._createHelper(K),L.HmacSHA512=S._createHmacHelper(K)}(),I.SHA512})}(Hi)),Hi.exports}r(o3,"requireSha512");var ui={exports:{}},aw=ui.exports,D2;function nw(){return D2||(D2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),O_(),o3())})(aw,function(I){return function(){var L=I,N=L.x64,S=N.Word,n=N.WordArray,i=L.algo,C=i.SHA512,o=i.SHA384=C.extend({_doReset:r(function(){this._hash=new n.init([new S.init(3418070365,3238371032),new S.init(1654270250,914150663),new S.init(2438529370,812702999),new S.init(355462360,4144912697),new S.init(1731405415,4290775857),new S.init(2394180231,1750603025),new S.init(3675008525,1694076839),new S.init(1203062813,3204075428)])},"_doReset"),_doFinalize:r(function(){var l=C._doFinalize.call(this);return l.sigBytes-=16,l},"_doFinalize")});L.SHA384=C._createHelper(o),L.HmacSHA384=C._createHmacHelper(o)}(),I.SHA384})}(ui)),ui.exports}r(nw,"requireSha384");var ci={exports:{}},rw=ci.exports,l2;function iw(){return l2||(l2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),O_())})(rw,function(I){return function(L){var N=I,S=N.lib,n=S.WordArray,i=S.Hasher,C=N.x64,o=C.Word,l=N.algo,H=[],P=[],K=[];(function(){for(var F=1,w=0,m=0;m<24;m++){H[F+5*w]=(m+1)*(m+2)/2%64;var y=w%5,x=(2*F+3*w)%5;F=y,w=x}for(var F=0;F<5;F++)for(var w=0;w<5;w++)P[F+5*w]=w+(2*F+3*w)%5*5;for(var q=1,IA=0;IA<24;IA++){for(var $=0,tA=0,UA=0;UA<7;UA++){if(q&1){var RA=(1<<UA)-1;RA<32?tA^=1<<RA:$^=1<<RA-32}q&128?q=q<<1^113:q<<=1}K[IA]=o.create($,tA)}})();var f=[];(function(){for(var F=0;F<25;F++)f[F]=o.create()})();var h=l.SHA3=i.extend({cfg:i.cfg.extend({outputLength:512}),_doReset:r(function(){for(var F=this._state=[],w=0;w<25;w++)F[w]=new o.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},"_doReset"),_doProcessBlock:r(function(F,w){for(var m=this._state,y=this.blockSize/2,x=0;x<y;x++){var q=F[w+2*x],IA=F[w+2*x+1];q=(q<<8|q>>>24)&16711935|(q<<24|q>>>8)&4278255360,IA=(IA<<8|IA>>>24)&16711935|(IA<<24|IA>>>8)&4278255360;var $=m[x];$.high^=IA,$.low^=q}for(var tA=0;tA<24;tA++){for(var UA=0;UA<5;UA++){for(var RA=0,OA=0,NA=0;NA<5;NA++){var $=m[UA+5*NA];RA^=$.high,OA^=$.low}var iA=f[UA];iA.high=RA,iA.low=OA}for(var UA=0;UA<5;UA++)for(var KA=f[(UA+4)%5],wA=f[(UA+1)%5],vA=wA.high,$A=wA.low,RA=KA.high^(vA<<1|$A>>>31),OA=KA.low^($A<<1|vA>>>31),NA=0;NA<5;NA++){var $=m[UA+5*NA];$.high^=RA,$.low^=OA}for(var RE=1;RE<25;RE++){var RA,OA,$=m[RE],LE=$.high,cA=$.low,nA=H[RE];nA<32?(RA=LE<<nA|cA>>>32-nA,OA=cA<<nA|LE>>>32-nA):(RA=cA<<nA-32|LE>>>64-nA,OA=LE<<nA-32|cA>>>64-nA);var lA=f[P[RE]];lA.high=RA,lA.low=OA}var TA=f[0],GA=m[0];TA.high=GA.high,TA.low=GA.low;for(var UA=0;UA<5;UA++)for(var NA=0;NA<5;NA++){var RE=UA+5*NA,$=m[RE],zA=f[RE],jA=f[(UA+1)%5+5*NA],ME=f[(UA+2)%5+5*NA];$.high=zA.high^~jA.high&ME.high,$.low=zA.low^~jA.low&ME.low}var $=m[0],eE=K[tA];$.high^=eE.high,$.low^=eE.low}},"_doProcessBlock"),_doFinalize:r(function(){var F=this._data,w=F.words;this._nDataBytes*8;var m=F.sigBytes*8,y=this.blockSize*32;w[m>>>5]|=1<<24-m%32,w[(L.ceil((m+1)/y)*y>>>5)-1]|=128,F.sigBytes=w.length*4,this._process();for(var x=this._state,q=this.cfg.outputLength/8,IA=q/8,$=[],tA=0;tA<IA;tA++){var UA=x[tA],RA=UA.high,OA=UA.low;RA=(RA<<8|RA>>>24)&16711935|(RA<<24|RA>>>8)&4278255360,OA=(OA<<8|OA>>>24)&16711935|(OA<<24|OA>>>8)&4278255360,$.push(OA),$.push(RA)}return new n.init($,q)},"_doFinalize"),clone:r(function(){for(var F=i.clone.call(this),w=F._state=this._state.slice(0),m=0;m<25;m++)w[m]=w[m].clone();return F},"clone")});N.SHA3=i._createHelper(h),N.HmacSHA3=i._createHmacHelper(h)}(Math),I.SHA3})}(ci)),ci.exports}r(iw,"requireSha3");var Bi={exports:{}},Cw=Bi.exports,_2;function Uw(){return _2||(_2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(Cw,function(I){/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/return function(L){var N=I,S=N.lib,n=S.WordArray,i=S.Hasher,C=N.algo,o=n.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),l=n.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),H=n.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),P=n.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),K=n.create([0,1518500249,1859775393,2400959708,2840853838]),f=n.create([1352829926,1548603684,1836072691,2053994217,0]),h=C.RIPEMD160=i.extend({_doReset:r(function(){this._hash=n.create([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:r(function(IA,$){for(var tA=0;tA<16;tA++){var UA=$+tA,RA=IA[UA];IA[UA]=(RA<<8|RA>>>24)&16711935|(RA<<24|RA>>>8)&4278255360}var OA=this._hash.words,NA=K.words,iA=f.words,KA=o.words,wA=l.words,vA=H.words,$A=P.words,RE,LE,cA,nA,lA,TA,GA,zA,jA,ME;TA=RE=OA[0],GA=LE=OA[1],zA=cA=OA[2],jA=nA=OA[3],ME=lA=OA[4];for(var eE,tA=0;tA<80;tA+=1)eE=RE+IA[$+KA[tA]]|0,tA<16?eE+=F(LE,cA,nA)+NA[0]:tA<32?eE+=w(LE,cA,nA)+NA[1]:tA<48?eE+=m(LE,cA,nA)+NA[2]:tA<64?eE+=y(LE,cA,nA)+NA[3]:eE+=x(LE,cA,nA)+NA[4],eE=eE|0,eE=q(eE,vA[tA]),eE=eE+lA|0,RE=lA,lA=nA,nA=q(cA,10),cA=LE,LE=eE,eE=TA+IA[$+wA[tA]]|0,tA<16?eE+=x(GA,zA,jA)+iA[0]:tA<32?eE+=y(GA,zA,jA)+iA[1]:tA<48?eE+=m(GA,zA,jA)+iA[2]:tA<64?eE+=w(GA,zA,jA)+iA[3]:eE+=F(GA,zA,jA)+iA[4],eE=eE|0,eE=q(eE,$A[tA]),eE=eE+ME|0,TA=ME,ME=jA,jA=q(zA,10),zA=GA,GA=eE;eE=OA[1]+cA+jA|0,OA[1]=OA[2]+nA+ME|0,OA[2]=OA[3]+lA+TA|0,OA[3]=OA[4]+RE+GA|0,OA[4]=OA[0]+LE+zA|0,OA[0]=eE},"_doProcessBlock"),_doFinalize:r(function(){var IA=this._data,$=IA.words,tA=this._nDataBytes*8,UA=IA.sigBytes*8;$[UA>>>5]|=128<<24-UA%32,$[(UA+64>>>9<<4)+14]=(tA<<8|tA>>>24)&16711935|(tA<<24|tA>>>8)&4278255360,IA.sigBytes=($.length+1)*4,this._process();for(var RA=this._hash,OA=RA.words,NA=0;NA<5;NA++){var iA=OA[NA];OA[NA]=(iA<<8|iA>>>24)&16711935|(iA<<24|iA>>>8)&4278255360}return RA},"_doFinalize"),clone:r(function(){var IA=i.clone.call(this);return IA._hash=this._hash.clone(),IA},"clone")});function F(IA,$,tA){return IA^$^tA}r(F,"f1");function w(IA,$,tA){return IA&$|~IA&tA}r(w,"f2");function m(IA,$,tA){return(IA|~$)^tA}r(m,"f3");function y(IA,$,tA){return IA&tA|$&~tA}r(y,"f4");function x(IA,$,tA){return IA^($|~tA)}r(x,"f5");function q(IA,$){return IA<<$|IA>>>32-$}r(q,"rotl"),N.RIPEMD160=i._createHelper(h),N.HmacRIPEMD160=i._createHmacHelper(h)}(),I.RIPEMD160})}(Bi)),Bi.exports}r(Uw,"requireRipemd160");var Ki={exports:{}},ow=Ki.exports,G2;function lH(){return G2||(G2=1,function(R,e){(function(I,L){R.exports=L(ZE())})(ow,function(I){(function(){var L=I,N=L.lib,S=N.Base,n=L.enc,i=n.Utf8,C=L.algo;C.HMAC=S.extend({init:r(function(o,l){o=this._hasher=new o.init,typeof l=="string"&&(l=i.parse(l));var H=o.blockSize,P=H*4;l.sigBytes>P&&(l=o.finalize(l)),l.clamp();for(var K=this._oKey=l.clone(),f=this._iKey=l.clone(),h=K.words,F=f.words,w=0;w<H;w++)h[w]^=1549556828,F[w]^=909522486;K.sigBytes=f.sigBytes=P,this.reset()},"init"),reset:r(function(){var o=this._hasher;o.reset(),o.update(this._iKey)},"reset"),update:r(function(o){return this._hasher.update(o),this},"update"),finalize:r(function(o){var l=this._hasher,H=l.finalize(o);l.reset();var P=l.finalize(this._oKey.clone().concat(H));return P},"finalize")})})()})}(Ki)),Ki.exports}r(lH,"requireHmac");var fi={exports:{}},Mw=fi.exports,P2;function Dw(){return P2||(P2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),DH(),lH())})(Mw,function(I){return function(){var L=I,N=L.lib,S=N.Base,n=N.WordArray,i=L.algo,C=i.SHA256,o=i.HMAC,l=i.PBKDF2=S.extend({cfg:S.extend({keySize:128/32,hasher:C,iterations:25e4}),init:r(function(H){this.cfg=this.cfg.extend(H)},"init"),compute:r(function(H,P){for(var K=this.cfg,f=o.create(K.hasher,H),h=n.create(),F=n.create([1]),w=h.words,m=F.words,y=K.keySize,x=K.iterations;w.length<y;){var q=f.update(P).finalize(F);f.reset();for(var IA=q.words,$=IA.length,tA=q,UA=1;UA<x;UA++){tA=f.finalize(tA),f.reset();for(var RA=tA.words,OA=0;OA<$;OA++)IA[OA]^=RA[OA]}h.concat(q),m[0]++}return h.sigBytes=y*4,h},"compute")});L.PBKDF2=function(H,P,K){return l.create(K).compute(H,P)}}(),I.PBKDF2})}(fi)),fi.exports}r(Dw,"requirePbkdf2");var Fi={exports:{}},lw=Fi.exports,H2;function qt(){return H2||(H2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),U3(),lH())})(lw,function(I){return function(){var L=I,N=L.lib,S=N.Base,n=N.WordArray,i=L.algo,C=i.MD5,o=i.EvpKDF=S.extend({cfg:S.extend({keySize:128/32,hasher:C,iterations:1}),init:r(function(l){this.cfg=this.cfg.extend(l)},"init"),compute:r(function(l,H){for(var P,K=this.cfg,f=K.hasher.create(),h=n.create(),F=h.words,w=K.keySize,m=K.iterations;F.length<w;){P&&f.update(P),P=f.update(l).finalize(H),f.reset();for(var y=1;y<m;y++)P=f.finalize(P),f.reset();h.concat(P)}return h.sigBytes=w*4,h},"compute")});L.EvpKDF=function(l,H,P){return o.create(P).compute(l,H)}}(),I.EvpKDF})}(Fi)),Fi.exports}r(qt,"requireEvpkdf");var Yi={exports:{}},_w=Yi.exports,u2;function UR(){return u2||(u2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),qt())})(_w,function(I){I.lib.Cipher||function(L){var N=I,S=N.lib,n=S.Base,i=S.WordArray,C=S.BufferedBlockAlgorithm,o=N.enc;o.Utf8;var l=o.Base64,H=N.algo,P=H.EvpKDF,K=S.Cipher=C.extend({cfg:n.extend(),createEncryptor:r(function(RA,OA){return this.create(this._ENC_XFORM_MODE,RA,OA)},"createEncryptor"),createDecryptor:r(function(RA,OA){return this.create(this._DEC_XFORM_MODE,RA,OA)},"createDecryptor"),init:r(function(RA,OA,NA){this.cfg=this.cfg.extend(NA),this._xformMode=RA,this._key=OA,this.reset()},"init"),reset:r(function(){C.reset.call(this),this._doReset()},"reset"),process:r(function(RA){return this._append(RA),this._process()},"process"),finalize:r(function(RA){RA&&this._append(RA);var OA=this._doFinalize();return OA},"finalize"),keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function RA(OA){return typeof OA=="string"?UA:IA}return r(RA,"selectCipherStrategy"),function(OA){return{encrypt:r(function(NA,iA,KA){return RA(iA).encrypt(OA,NA,iA,KA)},"encrypt"),decrypt:r(function(NA,iA,KA){return RA(iA).decrypt(OA,NA,iA,KA)},"decrypt")}}}()});S.StreamCipher=K.extend({_doFinalize:r(function(){var RA=this._process(!0);return RA},"_doFinalize"),blockSize:1});var f=N.mode={},h=S.BlockCipherMode=n.extend({createEncryptor:r(function(RA,OA){return this.Encryptor.create(RA,OA)},"createEncryptor"),createDecryptor:r(function(RA,OA){return this.Decryptor.create(RA,OA)},"createDecryptor"),init:r(function(RA,OA){this._cipher=RA,this._iv=OA},"init")}),F=f.CBC=function(){var RA=h.extend();RA.Encryptor=RA.extend({processBlock:r(function(NA,iA){var KA=this._cipher,wA=KA.blockSize;OA.call(this,NA,iA,wA),KA.encryptBlock(NA,iA),this._prevBlock=NA.slice(iA,iA+wA)},"processBlock")}),RA.Decryptor=RA.extend({processBlock:r(function(NA,iA){var KA=this._cipher,wA=KA.blockSize,vA=NA.slice(iA,iA+wA);KA.decryptBlock(NA,iA),OA.call(this,NA,iA,wA),this._prevBlock=vA},"processBlock")});function OA(NA,iA,KA){var wA,vA=this._iv;vA?(wA=vA,this._iv=L):wA=this._prevBlock;for(var $A=0;$A<KA;$A++)NA[iA+$A]^=wA[$A]}return r(OA,"xorBlock"),RA}(),w=N.pad={},m=w.Pkcs7={pad:r(function(RA,OA){for(var NA=OA*4,iA=NA-RA.sigBytes%NA,KA=iA<<24|iA<<16|iA<<8|iA,wA=[],vA=0;vA<iA;vA+=4)wA.push(KA);var $A=i.create(wA,iA);RA.concat($A)},"pad"),unpad:r(function(RA){var OA=RA.words[RA.sigBytes-1>>>2]&255;RA.sigBytes-=OA},"unpad")};S.BlockCipher=K.extend({cfg:K.cfg.extend({mode:F,padding:m}),reset:r(function(){var RA;K.reset.call(this);var OA=this.cfg,NA=OA.iv,iA=OA.mode;this._xformMode==this._ENC_XFORM_MODE?RA=iA.createEncryptor:(RA=iA.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==RA?this._mode.init(this,NA&&NA.words):(this._mode=RA.call(iA,this,NA&&NA.words),this._mode.__creator=RA)},"reset"),_doProcessBlock:r(function(RA,OA){this._mode.processBlock(RA,OA)},"_doProcessBlock"),_doFinalize:r(function(){var RA,OA=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(OA.pad(this._data,this.blockSize),RA=this._process(!0)):(RA=this._process(!0),OA.unpad(RA)),RA},"_doFinalize"),blockSize:128/32});var y=S.CipherParams=n.extend({init:r(function(RA){this.mixIn(RA)},"init"),toString:r(function(RA){return(RA||this.formatter).stringify(this)},"toString")}),x=N.format={},q=x.OpenSSL={stringify:r(function(RA){var OA,NA=RA.ciphertext,iA=RA.salt;return iA?OA=i.create([1398893684,1701076831]).concat(iA).concat(NA):OA=NA,OA.toString(l)},"stringify"),parse:r(function(RA){var OA,NA=l.parse(RA),iA=NA.words;return iA[0]==1398893684&&iA[1]==1701076831&&(OA=i.create(iA.slice(2,4)),iA.splice(0,4),NA.sigBytes-=16),y.create({ciphertext:NA,salt:OA})},"parse")},IA=S.SerializableCipher=n.extend({cfg:n.extend({format:q}),encrypt:r(function(RA,OA,NA,iA){iA=this.cfg.extend(iA);var KA=RA.createEncryptor(NA,iA),wA=KA.finalize(OA),vA=KA.cfg;return y.create({ciphertext:wA,key:NA,iv:vA.iv,algorithm:RA,mode:vA.mode,padding:vA.padding,blockSize:RA.blockSize,formatter:iA.format})},"encrypt"),decrypt:r(function(RA,OA,NA,iA){iA=this.cfg.extend(iA),OA=this._parse(OA,iA.format);var KA=RA.createDecryptor(NA,iA).finalize(OA.ciphertext);return KA},"decrypt"),_parse:r(function(RA,OA){return typeof RA=="string"?OA.parse(RA,this):RA},"_parse")}),$=N.kdf={},tA=$.OpenSSL={execute:r(function(RA,OA,NA,iA,KA){if(iA||(iA=i.random(64/8)),KA)var wA=P.create({keySize:OA+NA,hasher:KA}).compute(RA,iA);else var wA=P.create({keySize:OA+NA}).compute(RA,iA);var vA=i.create(wA.words.slice(OA),NA*4);return wA.sigBytes=OA*4,y.create({key:wA,iv:vA,salt:iA})},"execute")},UA=S.PasswordBasedCipher=IA.extend({cfg:IA.cfg.extend({kdf:tA}),encrypt:r(function(RA,OA,NA,iA){iA=this.cfg.extend(iA);var KA=iA.kdf.execute(NA,RA.keySize,RA.ivSize,iA.salt,iA.hasher);iA.iv=KA.iv;var wA=IA.encrypt.call(this,RA,OA,KA.key,iA);return wA.mixIn(KA),wA},"encrypt"),decrypt:r(function(RA,OA,NA,iA){iA=this.cfg.extend(iA),OA=this._parse(OA,iA.format);var KA=iA.kdf.execute(NA,RA.keySize,RA.ivSize,OA.salt,iA.hasher);iA.iv=KA.iv;var wA=IA.decrypt.call(this,RA,OA,KA.key,iA);return wA},"decrypt")})}()})}(Yi)),Yi.exports}r(UR,"requireCipherCore");var Wi={exports:{}},Gw=Wi.exports,c2;function Pw(){return c2||(c2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(Gw,function(I){return I.mode.CFB=function(){var L=I.lib.BlockCipherMode.extend();L.Encryptor=L.extend({processBlock:r(function(S,n){var i=this._cipher,C=i.blockSize;N.call(this,S,n,C,i),this._prevBlock=S.slice(n,n+C)},"processBlock")}),L.Decryptor=L.extend({processBlock:r(function(S,n){var i=this._cipher,C=i.blockSize,o=S.slice(n,n+C);N.call(this,S,n,C,i),this._prevBlock=o},"processBlock")});function N(S,n,i,C){var o,l=this._iv;l?(o=l.slice(0),this._iv=void 0):o=this._prevBlock,C.encryptBlock(o,0);for(var H=0;H<i;H++)S[n+H]^=o[H]}return r(N,"generateKeystreamAndEncrypt"),L}(),I.mode.CFB})}(Wi)),Wi.exports}r(Pw,"requireModeCfb");var hi={exports:{}},Hw=hi.exports,B2;function uw(){return B2||(B2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(Hw,function(I){return I.mode.CTR=function(){var L=I.lib.BlockCipherMode.extend(),N=L.Encryptor=L.extend({processBlock:r(function(S,n){var i=this._cipher,C=i.blockSize,o=this._iv,l=this._counter;o&&(l=this._counter=o.slice(0),this._iv=void 0);var H=l.slice(0);i.encryptBlock(H,0),l[C-1]=l[C-1]+1|0;for(var P=0;P<C;P++)S[n+P]^=H[P]},"processBlock")});return L.Decryptor=N,L}(),I.mode.CTR})}(hi)),hi.exports}r(uw,"requireModeCtr");var di={exports:{}},cw=di.exports,K2;function Bw(){return K2||(K2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(cw,function(I){/** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */return I.mode.CTRGladman=function(){var L=I.lib.BlockCipherMode.extend();function N(i){if((i>>24&255)===255){var C=i>>16&255,o=i>>8&255,l=i&255;C===255?(C=0,o===255?(o=0,l===255?l=0:++l):++o):++C,i=0,i+=C<<16,i+=o<<8,i+=l}else i+=1<<24;return i}r(N,"incWord");function S(i){return(i[0]=N(i[0]))===0&&(i[1]=N(i[1])),i}r(S,"incCounter");var n=L.Encryptor=L.extend({processBlock:r(function(i,C){var o=this._cipher,l=o.blockSize,H=this._iv,P=this._counter;H&&(P=this._counter=H.slice(0),this._iv=void 0),S(P);var K=P.slice(0);o.encryptBlock(K,0);for(var f=0;f<l;f++)i[C+f]^=K[f]},"processBlock")});return L.Decryptor=n,L}(),I.mode.CTRGladman})}(di)),di.exports}r(Bw,"requireModeCtrGladman");var pi={exports:{}},Kw=pi.exports,f2;function fw(){return f2||(f2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(Kw,function(I){return I.mode.OFB=function(){var L=I.lib.BlockCipherMode.extend(),N=L.Encryptor=L.extend({processBlock:r(function(S,n){var i=this._cipher,C=i.blockSize,o=this._iv,l=this._keystream;o&&(l=this._keystream=o.slice(0),this._iv=void 0),i.encryptBlock(l,0);for(var H=0;H<C;H++)S[n+H]^=l[H]},"processBlock")});return L.Decryptor=N,L}(),I.mode.OFB})}(pi)),pi.exports}r(fw,"requireModeOfb");var gi={exports:{}},Fw=gi.exports,F2;function Yw(){return F2||(F2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(Fw,function(I){return I.mode.ECB=function(){var L=I.lib.BlockCipherMode.extend();return L.Encryptor=L.extend({processBlock:r(function(N,S){this._cipher.encryptBlock(N,S)},"processBlock")}),L.Decryptor=L.extend({processBlock:r(function(N,S){this._cipher.decryptBlock(N,S)},"processBlock")}),L}(),I.mode.ECB})}(gi)),gi.exports}r(Yw,"requireModeEcb");var mi={exports:{}},Ww=mi.exports,Y2;function hw(){return Y2||(Y2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(Ww,function(I){return I.pad.AnsiX923={pad:r(function(L,N){var S=L.sigBytes,n=N*4,i=n-S%n,C=S+i-1;L.clamp(),L.words[C>>>2]|=i<<24-C%4*8,L.sigBytes+=i},"pad"),unpad:r(function(L){var N=L.words[L.sigBytes-1>>>2]&255;L.sigBytes-=N},"unpad")},I.pad.Ansix923})}(mi)),mi.exports}r(hw,"requirePadAnsix923");var yi={exports:{}},dw=yi.exports,W2;function pw(){return W2||(W2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(dw,function(I){return I.pad.Iso10126={pad:r(function(L,N){var S=N*4,n=S-L.sigBytes%S;L.concat(I.lib.WordArray.random(n-1)).concat(I.lib.WordArray.create([n<<24],1))},"pad"),unpad:r(function(L){var N=L.words[L.sigBytes-1>>>2]&255;L.sigBytes-=N},"unpad")},I.pad.Iso10126})}(yi)),yi.exports}r(pw,"requirePadIso10126");var Vi={exports:{}},gw=Vi.exports,h2;function mw(){return h2||(h2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(gw,function(I){return I.pad.Iso97971={pad:r(function(L,N){L.concat(I.lib.WordArray.create([2147483648],1)),I.pad.ZeroPadding.pad(L,N)},"pad"),unpad:r(function(L){I.pad.ZeroPadding.unpad(L),L.sigBytes--},"unpad")},I.pad.Iso97971})}(Vi)),Vi.exports}r(mw,"requirePadIso97971");var wi={exports:{}},yw=wi.exports,d2;function Vw(){return d2||(d2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(yw,function(I){return I.pad.ZeroPadding={pad:r(function(L,N){var S=N*4;L.clamp(),L.sigBytes+=S-(L.sigBytes%S||S)},"pad"),unpad:r(function(L){for(var N=L.words,S=L.sigBytes-1,S=L.sigBytes-1;S>=0;S--)if(N[S>>>2]>>>24-S%4*8&255){L.sigBytes=S+1;break}},"unpad")},I.pad.ZeroPadding})}(wi)),wi.exports}r(Vw,"requirePadZeropadding");var vi={exports:{}},ww=vi.exports,p2;function vw(){return p2||(p2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(ww,function(I){return I.pad.NoPadding={pad:r(function(){},"pad"),unpad:r(function(){},"unpad")},I.pad.NoPadding})}(vi)),vi.exports}r(vw,"requirePadNopadding");var xi={exports:{}},xw=xi.exports,g2;function Zw(){return g2||(g2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),UR())})(xw,function(I){return function(L){var N=I,S=N.lib,n=S.CipherParams,i=N.enc,C=i.Hex,o=N.format;o.Hex={stringify:r(function(l){return l.ciphertext.toString(C)},"stringify"),parse:r(function(l){var H=C.parse(l);return n.create({ciphertext:H})},"parse")}}(),I.format.Hex})}(xi)),xi.exports}r(Zw,"requireFormatHex");var Zi={exports:{}},bw=Zi.exports,m2;function kw(){return m2||(m2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),LN(),NN(),qt(),UR())})(bw,function(I){return function(){var L=I,N=L.lib,S=N.BlockCipher,n=L.algo,i=[],C=[],o=[],l=[],H=[],P=[],K=[],f=[],h=[],F=[];(function(){for(var y=[],x=0;x<256;x++)x<128?y[x]=x<<1:y[x]=x<<1^283;for(var q=0,IA=0,x=0;x<256;x++){var $=IA^IA<<1^IA<<2^IA<<3^IA<<4;$=$>>>8^$&255^99,i[q]=$,C[$]=q;var tA=y[q],UA=y[tA],RA=y[UA],OA=y[$]*257^$*16843008;o[q]=OA<<24|OA>>>8,l[q]=OA<<16|OA>>>16,H[q]=OA<<8|OA>>>24,P[q]=OA;var OA=RA*16843009^UA*65537^tA*257^q*16843008;K[$]=OA<<24|OA>>>8,f[$]=OA<<16|OA>>>16,h[$]=OA<<8|OA>>>24,F[$]=OA,q?(q=tA^y[y[y[RA^tA]]],IA^=y[y[IA]]):q=IA=1}})();var w=[0,1,2,4,8,16,32,64,128,27,54],m=n.AES=S.extend({_doReset:r(function(){var y;if(!(this._nRounds&&this._keyPriorReset===this._key)){for(var x=this._keyPriorReset=this._key,q=x.words,IA=x.sigBytes/4,$=this._nRounds=IA+6,tA=($+1)*4,UA=this._keySchedule=[],RA=0;RA<tA;RA++)RA<IA?UA[RA]=q[RA]:(y=UA[RA-1],RA%IA?IA>6&&RA%IA==4&&(y=i[y>>>24]<<24|i[y>>>16&255]<<16|i[y>>>8&255]<<8|i[y&255]):(y=y<<8|y>>>24,y=i[y>>>24]<<24|i[y>>>16&255]<<16|i[y>>>8&255]<<8|i[y&255],y^=w[RA/IA|0]<<24),UA[RA]=UA[RA-IA]^y);for(var OA=this._invKeySchedule=[],NA=0;NA<tA;NA++){var RA=tA-NA;if(NA%4)var y=UA[RA];else var y=UA[RA-4];NA<4||RA<=4?OA[NA]=y:OA[NA]=K[i[y>>>24]]^f[i[y>>>16&255]]^h[i[y>>>8&255]]^F[i[y&255]]}}},"_doReset"),encryptBlock:r(function(y,x){this._doCryptBlock(y,x,this._keySchedule,o,l,H,P,i)},"encryptBlock"),decryptBlock:r(function(y,x){var q=y[x+1];y[x+1]=y[x+3],y[x+3]=q,this._doCryptBlock(y,x,this._invKeySchedule,K,f,h,F,C);var q=y[x+1];y[x+1]=y[x+3],y[x+3]=q},"decryptBlock"),_doCryptBlock:r(function(y,x,q,IA,$,tA,UA,RA){for(var OA=this._nRounds,NA=y[x]^q[0],iA=y[x+1]^q[1],KA=y[x+2]^q[2],wA=y[x+3]^q[3],vA=4,$A=1;$A<OA;$A++){var RE=IA[NA>>>24]^$[iA>>>16&255]^tA[KA>>>8&255]^UA[wA&255]^q[vA++],LE=IA[iA>>>24]^$[KA>>>16&255]^tA[wA>>>8&255]^UA[NA&255]^q[vA++],cA=IA[KA>>>24]^$[wA>>>16&255]^tA[NA>>>8&255]^UA[iA&255]^q[vA++],nA=IA[wA>>>24]^$[NA>>>16&255]^tA[iA>>>8&255]^UA[KA&255]^q[vA++];NA=RE,iA=LE,KA=cA,wA=nA}var RE=(RA[NA>>>24]<<24|RA[iA>>>16&255]<<16|RA[KA>>>8&255]<<8|RA[wA&255])^q[vA++],LE=(RA[iA>>>24]<<24|RA[KA>>>16&255]<<16|RA[wA>>>8&255]<<8|RA[NA&255])^q[vA++],cA=(RA[KA>>>24]<<24|RA[wA>>>16&255]<<16|RA[NA>>>8&255]<<8|RA[iA&255])^q[vA++],nA=(RA[wA>>>24]<<24|RA[NA>>>16&255]<<16|RA[iA>>>8&255]<<8|RA[KA&255])^q[vA++];y[x]=RE,y[x+1]=LE,y[x+2]=cA,y[x+3]=nA},"_doCryptBlock"),keySize:256/32});L.AES=S._createHelper(m)}(),I.AES})}(Zi)),Zi.exports}r(kw,"requireAes");var bi={exports:{}},Xw=bi.exports,y2;function Qw(){return y2||(y2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),LN(),NN(),qt(),UR())})(Xw,function(I){return function(){var L=I,N=L.lib,S=N.WordArray,n=N.BlockCipher,i=L.algo,C=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],o=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],l=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],H=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],P=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],K=i.DES=n.extend({_doReset:r(function(){for(var w=this._key,m=w.words,y=[],x=0;x<56;x++){var q=C[x]-1;y[x]=m[q>>>5]>>>31-q%32&1}for(var IA=this._subKeys=[],$=0;$<16;$++){for(var tA=IA[$]=[],UA=l[$],x=0;x<24;x++)tA[x/6|0]|=y[(o[x]-1+UA)%28]<<31-x%6,tA[4+(x/6|0)]|=y[28+(o[x+24]-1+UA)%28]<<31-x%6;tA[0]=tA[0]<<1|tA[0]>>>31;for(var x=1;x<7;x++)tA[x]=tA[x]>>>(x-1)*4+3;tA[7]=tA[7]<<5|tA[7]>>>27}for(var RA=this._invSubKeys=[],x=0;x<16;x++)RA[x]=IA[15-x]},"_doReset"),encryptBlock:r(function(w,m){this._doCryptBlock(w,m,this._subKeys)},"encryptBlock"),decryptBlock:r(function(w,m){this._doCryptBlock(w,m,this._invSubKeys)},"decryptBlock"),_doCryptBlock:r(function(w,m,y){this._lBlock=w[m],this._rBlock=w[m+1],f.call(this,4,252645135),f.call(this,16,65535),h.call(this,2,858993459),h.call(this,8,16711935),f.call(this,1,1431655765);for(var x=0;x<16;x++){for(var q=y[x],IA=this._lBlock,$=this._rBlock,tA=0,UA=0;UA<8;UA++)tA|=H[UA][(($^q[UA])&P[UA])>>>0];this._lBlock=$,this._rBlock=IA^tA}var RA=this._lBlock;this._lBlock=this._rBlock,this._rBlock=RA,f.call(this,1,1431655765),h.call(this,8,16711935),h.call(this,2,858993459),f.call(this,16,65535),f.call(this,4,252645135),w[m]=this._lBlock,w[m+1]=this._rBlock},"_doCryptBlock"),keySize:64/32,ivSize:64/32,blockSize:64/32});function f(w,m){var y=(this._lBlock>>>w^this._rBlock)&m;this._rBlock^=y,this._lBlock^=y<<w}r(f,"exchangeLR");function h(w,m){var y=(this._rBlock>>>w^this._lBlock)&m;this._lBlock^=y,this._rBlock^=y<<w}r(h,"exchangeRL"),L.DES=n._createHelper(K);var F=i.TripleDES=n.extend({_doReset:r(function(){var w=this._key,m=w.words;if(m.length!==2&&m.length!==4&&m.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var y=m.slice(0,2),x=m.length<4?m.slice(0,2):m.slice(2,4),q=m.length<6?m.slice(0,2):m.slice(4,6);this._des1=K.createEncryptor(S.create(y)),this._des2=K.createEncryptor(S.create(x)),this._des3=K.createEncryptor(S.create(q))},"_doReset"),encryptBlock:r(function(w,m){this._des1.encryptBlock(w,m),this._des2.decryptBlock(w,m),this._des3.encryptBlock(w,m)},"encryptBlock"),decryptBlock:r(function(w,m){this._des3.decryptBlock(w,m),this._des2.encryptBlock(w,m),this._des1.decryptBlock(w,m)},"decryptBlock"),keySize:192/32,ivSize:64/32,blockSize:64/32});L.TripleDES=n._createHelper(F)}(),I.TripleDES})}(bi)),bi.exports}r(Qw,"requireTripledes");var ki={exports:{}},Jw=ki.exports,V2;function $w(){return V2||(V2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),LN(),NN(),qt(),UR())})(Jw,function(I){return function(){var L=I,N=L.lib,S=N.StreamCipher,n=L.algo,i=n.RC4=S.extend({_doReset:r(function(){for(var l=this._key,H=l.words,P=l.sigBytes,K=this._S=[],f=0;f<256;f++)K[f]=f;for(var f=0,h=0;f<256;f++){var F=f%P,w=H[F>>>2]>>>24-F%4*8&255;h=(h+K[f]+w)%256;var m=K[f];K[f]=K[h],K[h]=m}this._i=this._j=0},"_doReset"),_doProcessBlock:r(function(l,H){l[H]^=C.call(this)},"_doProcessBlock"),keySize:256/32,ivSize:0});function C(){for(var l=this._S,H=this._i,P=this._j,K=0,f=0;f<4;f++){H=(H+1)%256,P=(P+l[H])%256;var h=l[H];l[H]=l[P],l[P]=h,K|=l[(l[H]+l[P])%256]<<24-f*8}return this._i=H,this._j=P,K}r(C,"generateKeystreamWord"),L.RC4=S._createHelper(i);var o=n.RC4Drop=i.extend({cfg:i.cfg.extend({drop:192}),_doReset:r(function(){i._doReset.call(this);for(var l=this.cfg.drop;l>0;l--)C.call(this)},"_doReset")});L.RC4Drop=S._createHelper(o)}(),I.RC4})}(ki)),ki.exports}r($w,"requireRc4");var Xi={exports:{}},qw=Xi.exports,w2;function zw(){return w2||(w2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),LN(),NN(),qt(),UR())})(qw,function(I){return function(){var L=I,N=L.lib,S=N.StreamCipher,n=L.algo,i=[],C=[],o=[],l=n.Rabbit=S.extend({_doReset:r(function(){for(var P=this._key.words,K=this.cfg.iv,f=0;f<4;f++)P[f]=(P[f]<<8|P[f]>>>24)&16711935|(P[f]<<24|P[f]>>>8)&4278255360;var h=this._X=[P[0],P[3]<<16|P[2]>>>16,P[1],P[0]<<16|P[3]>>>16,P[2],P[1]<<16|P[0]>>>16,P[3],P[2]<<16|P[1]>>>16],F=this._C=[P[2]<<16|P[2]>>>16,P[0]&4294901760|P[1]&65535,P[3]<<16|P[3]>>>16,P[1]&4294901760|P[2]&65535,P[0]<<16|P[0]>>>16,P[2]&4294901760|P[3]&65535,P[1]<<16|P[1]>>>16,P[3]&4294901760|P[0]&65535];this._b=0;for(var f=0;f<4;f++)H.call(this);for(var f=0;f<8;f++)F[f]^=h[f+4&7];if(K){var w=K.words,m=w[0],y=w[1],x=(m<<8|m>>>24)&16711935|(m<<24|m>>>8)&4278255360,q=(y<<8|y>>>24)&16711935|(y<<24|y>>>8)&4278255360,IA=x>>>16|q&4294901760,$=q<<16|x&65535;F[0]^=x,F[1]^=IA,F[2]^=q,F[3]^=$,F[4]^=x,F[5]^=IA,F[6]^=q,F[7]^=$;for(var f=0;f<4;f++)H.call(this)}},"_doReset"),_doProcessBlock:r(function(P,K){var f=this._X;H.call(this),i[0]=f[0]^f[5]>>>16^f[3]<<16,i[1]=f[2]^f[7]>>>16^f[5]<<16,i[2]=f[4]^f[1]>>>16^f[7]<<16,i[3]=f[6]^f[3]>>>16^f[1]<<16;for(var h=0;h<4;h++)i[h]=(i[h]<<8|i[h]>>>24)&16711935|(i[h]<<24|i[h]>>>8)&4278255360,P[K+h]^=i[h]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function H(){for(var P=this._X,K=this._C,f=0;f<8;f++)C[f]=K[f];K[0]=K[0]+1295307597+this._b|0,K[1]=K[1]+3545052371+(K[0]>>>0<C[0]>>>0?1:0)|0,K[2]=K[2]+886263092+(K[1]>>>0<C[1]>>>0?1:0)|0,K[3]=K[3]+1295307597+(K[2]>>>0<C[2]>>>0?1:0)|0,K[4]=K[4]+3545052371+(K[3]>>>0<C[3]>>>0?1:0)|0,K[5]=K[5]+886263092+(K[4]>>>0<C[4]>>>0?1:0)|0,K[6]=K[6]+1295307597+(K[5]>>>0<C[5]>>>0?1:0)|0,K[7]=K[7]+3545052371+(K[6]>>>0<C[6]>>>0?1:0)|0,this._b=K[7]>>>0<C[7]>>>0?1:0;for(var f=0;f<8;f++){var h=P[f]+K[f],F=h&65535,w=h>>>16,m=((F*F>>>17)+F*w>>>15)+w*w,y=((h&4294901760)*h|0)+((h&65535)*h|0);o[f]=m^y}P[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,P[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,P[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,P[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,P[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,P[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,P[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,P[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}r(H,"nextState"),L.Rabbit=S._createHelper(l)}(),I.Rabbit})}(Xi)),Xi.exports}r(zw,"requireRabbit");var Qi={exports:{}},jw=Qi.exports,v2;function A6(){return v2||(v2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),LN(),NN(),qt(),UR())})(jw,function(I){return function(){var L=I,N=L.lib,S=N.StreamCipher,n=L.algo,i=[],C=[],o=[],l=n.RabbitLegacy=S.extend({_doReset:r(function(){var P=this._key.words,K=this.cfg.iv,f=this._X=[P[0],P[3]<<16|P[2]>>>16,P[1],P[0]<<16|P[3]>>>16,P[2],P[1]<<16|P[0]>>>16,P[3],P[2]<<16|P[1]>>>16],h=this._C=[P[2]<<16|P[2]>>>16,P[0]&4294901760|P[1]&65535,P[3]<<16|P[3]>>>16,P[1]&4294901760|P[2]&65535,P[0]<<16|P[0]>>>16,P[2]&4294901760|P[3]&65535,P[1]<<16|P[1]>>>16,P[3]&4294901760|P[0]&65535];this._b=0;for(var F=0;F<4;F++)H.call(this);for(var F=0;F<8;F++)h[F]^=f[F+4&7];if(K){var w=K.words,m=w[0],y=w[1],x=(m<<8|m>>>24)&16711935|(m<<24|m>>>8)&4278255360,q=(y<<8|y>>>24)&16711935|(y<<24|y>>>8)&4278255360,IA=x>>>16|q&4294901760,$=q<<16|x&65535;h[0]^=x,h[1]^=IA,h[2]^=q,h[3]^=$,h[4]^=x,h[5]^=IA,h[6]^=q,h[7]^=$;for(var F=0;F<4;F++)H.call(this)}},"_doReset"),_doProcessBlock:r(function(P,K){var f=this._X;H.call(this),i[0]=f[0]^f[5]>>>16^f[3]<<16,i[1]=f[2]^f[7]>>>16^f[5]<<16,i[2]=f[4]^f[1]>>>16^f[7]<<16,i[3]=f[6]^f[3]>>>16^f[1]<<16;for(var h=0;h<4;h++)i[h]=(i[h]<<8|i[h]>>>24)&16711935|(i[h]<<24|i[h]>>>8)&4278255360,P[K+h]^=i[h]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function H(){for(var P=this._X,K=this._C,f=0;f<8;f++)C[f]=K[f];K[0]=K[0]+1295307597+this._b|0,K[1]=K[1]+3545052371+(K[0]>>>0<C[0]>>>0?1:0)|0,K[2]=K[2]+886263092+(K[1]>>>0<C[1]>>>0?1:0)|0,K[3]=K[3]+1295307597+(K[2]>>>0<C[2]>>>0?1:0)|0,K[4]=K[4]+3545052371+(K[3]>>>0<C[3]>>>0?1:0)|0,K[5]=K[5]+886263092+(K[4]>>>0<C[4]>>>0?1:0)|0,K[6]=K[6]+1295307597+(K[5]>>>0<C[5]>>>0?1:0)|0,K[7]=K[7]+3545052371+(K[6]>>>0<C[6]>>>0?1:0)|0,this._b=K[7]>>>0<C[7]>>>0?1:0;for(var f=0;f<8;f++){var h=P[f]+K[f],F=h&65535,w=h>>>16,m=((F*F>>>17)+F*w>>>15)+w*w,y=((h&4294901760)*h|0)+((h&65535)*h|0);o[f]=m^y}P[0]=o[0]+(o[7]<<16|o[7]>>>16)+(o[6]<<16|o[6]>>>16)|0,P[1]=o[1]+(o[0]<<8|o[0]>>>24)+o[7]|0,P[2]=o[2]+(o[1]<<16|o[1]>>>16)+(o[0]<<16|o[0]>>>16)|0,P[3]=o[3]+(o[2]<<8|o[2]>>>24)+o[1]|0,P[4]=o[4]+(o[3]<<16|o[3]>>>16)+(o[2]<<16|o[2]>>>16)|0,P[5]=o[5]+(o[4]<<8|o[4]>>>24)+o[3]|0,P[6]=o[6]+(o[5]<<16|o[5]>>>16)+(o[4]<<16|o[4]>>>16)|0,P[7]=o[7]+(o[6]<<8|o[6]>>>24)+o[5]|0}r(H,"nextState"),L.RabbitLegacy=S._createHelper(l)}(),I.RabbitLegacy})}(Qi)),Qi.exports}r(A6,"requireRabbitLegacy");var Ji={exports:{}},E6=Ji.exports,x2;function e6(){return x2||(x2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),LN(),NN(),qt(),UR())})(E6,function(I){return function(){var L=I,N=L.lib,S=N.BlockCipher,n=L.algo;const i=16,C=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],o=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var l={pbox:[],sbox:[]};function H(F,w){let m=w>>24&255,y=w>>16&255,x=w>>8&255,q=w&255,IA=F.sbox[0][m]+F.sbox[1][y];return IA=IA^F.sbox[2][x],IA=IA+F.sbox[3][q],IA}r(H,"F");function P(F,w,m){let y=w,x=m,q;for(let IA=0;IA<i;++IA)y=y^F.pbox[IA],x=H(F,y)^x,q=y,y=x,x=q;return q=y,y=x,x=q,x=x^F.pbox[i],y=y^F.pbox[i+1],{left:y,right:x}}r(P,"BlowFish_Encrypt");function K(F,w,m){let y=w,x=m,q;for(let IA=i+1;IA>1;--IA)y=y^F.pbox[IA],x=H(F,y)^x,q=y,y=x,x=q;return q=y,y=x,x=q,x=x^F.pbox[1],y=y^F.pbox[0],{left:y,right:x}}r(K,"BlowFish_Decrypt");function f(F,w,m){for(let $=0;$<4;$++){F.sbox[$]=[];for(let tA=0;tA<256;tA++)F.sbox[$][tA]=o[$][tA]}let y=0;for(let $=0;$<i+2;$++)F.pbox[$]=C[$]^w[y],y++,y>=m&&(y=0);let x=0,q=0,IA=0;for(let $=0;$<i+2;$+=2)IA=P(F,x,q),x=IA.left,q=IA.right,F.pbox[$]=x,F.pbox[$+1]=q;for(let $=0;$<4;$++)for(let tA=0;tA<256;tA+=2)IA=P(F,x,q),x=IA.left,q=IA.right,F.sbox[$][tA]=x,F.sbox[$][tA+1]=q;return!0}r(f,"BlowFishInit");var h=n.Blowfish=S.extend({_doReset:r(function(){if(this._keyPriorReset!==this._key){var F=this._keyPriorReset=this._key,w=F.words,m=F.sigBytes/4;f(l,w,m)}},"_doReset"),encryptBlock:r(function(F,w){var m=P(l,F[w],F[w+1]);F[w]=m.left,F[w+1]=m.right},"encryptBlock"),decryptBlock:r(function(F,w){var m=K(l,F[w],F[w+1]);F[w]=m.left,F[w+1]=m.right},"decryptBlock"),blockSize:64/32,keySize:128/32,ivSize:64/32});L.Blowfish=S._createHelper(h)}(),I.Blowfish})}(Ji)),Ji.exports}r(e6,"requireBlowfish");var R6=ri.exports,Z2;function O6(){return Z2||(Z2=1,function(R,e){(function(I,L,N){R.exports=L(ZE(),O_(),Aw(),ew(),LN(),Iw(),NN(),U3(),DH(),Tw(),o3(),nw(),iw(),Uw(),lH(),Dw(),qt(),UR(),Pw(),uw(),Bw(),fw(),Yw(),hw(),pw(),mw(),Vw(),vw(),Zw(),kw(),Qw(),$w(),zw(),A6(),e6())})(R6,function(I){return I})}(ri)),ri.exports}r(O6,"requireCryptoJs");var R0=O6();function I6(R){return JSON.parse(JSON.stringify(R))}r(I6,"deepCopy");function t6(R,e){for(const I of Object.keys(e))!(I in R)||typeof e[I]!=typeof R[I]||Array.isArray(e[I])!==Array.isArray(R[I])||(typeof e[I]!="object"||e[I]===null||Array.isArray(e[I])?R[I]=e[I]:t6(R[I],e[I]))}r(t6,"deepMergeSpriteData");function SZ(R,e){return(e?I=>btoa(encodeURIComponent(I)):I=>R0.AES.encrypt(I,Z4))(R)}r(SZ,"encrypt");function TZ(R,e){return(e?I=>decodeURIComponent(atob(I)):I=>R0.AES.decrypt(I,Z4).toString(R0.enc.Utf8))(R)}r(TZ,"decrypt");const M3="{}";let O0=M3;function sZ(){return JSON.parse(O0=localStorage.getItem(`starterPrefs_${FO==null?void 0:FO.username}`)||M3)}r(sZ,"loadStarterPreferences");function aZ(R){const e=JSON.stringify(R);e!==O0&&(localStorage.setItem(`starterPrefs_${FO==null?void 0:FO.username}`,e),O0=e)}r(aZ,"saveStarterPreferences");const L6=[],mI={[E.MEGA_PUNCH]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIKACHU,A.RAICHU,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.GENGAR,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.LEDYBA,A.LEDIAN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.QUAGSIRE,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GRUMPIG,A.SPINDA,A.FLYGON,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.KECLEON,A.DUSCLOPS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.JIRACHI,A.BUNEARY,A.LOPUNNY,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.GALLADE,A.DUSKNOIR,A.REGIGIGAS,A.VICTINI,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ZOROARK,A.REUNICLUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.HELIOLISK,A.HAWLUCHA,A.GOODRA,A.INCINEROAR,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.TURTONATOR,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.BUZZWOLE,A.GUZZLORD,A.MARSHADOW,A.ZERAORA,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.COALOSSAL,A.TOXTRICITY,A.CLOBBOPUS,A.GRAPPLOCT,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.MR_RIME,A.DRACOZOLT,A.ARCTOZOLT,A.KUBFU,A.URSHIFU,A.ZARUDE,[A.DEOXYS,"attack","defense","speed"],A.ALOLA_RAICHU,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN],[E.PAY_DAY]:[A.PIKACHU,A.RAICHU,A.NIDOQUEEN,A.NIDOKING,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.RHYDON,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.MEWTWO,A.MEW,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.ESPEON,A.UMBREON,A.SLOWKING,A.SKITTY,A.DELCATTY,A.MUNCHLAX,A.RHYPERIOR,A.LEAFEON,A.GLACEON,A.PURRLOIN,A.LIEPARD,A.ESPURR,A.MEOWSTIC,A.SYLVEON,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.ZERAORA,A.PERRSERKER,A.INDEEDEE,A.CALYREX,A.ANNIHILAPE,A.ALOLA_RAICHU,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING],[E.FIRE_PUNCH]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MANKEY,A.PRIMEAPE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.ELECTABUZZ,A.MAGMAR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.SENTRET,A.FURRET,A.FLAAFFY,A.AMPHAROS,A.SUDOWOODO,A.AIPOM,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.TEDDIURSA,A.URSARING,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.COMBUSKEN,A.BLAZIKEN,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.SABLEYE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.GULPIN,A.SWALOT,A.GRUMPIG,A.SPINDA,A.FLYGON,A.ZANGOOSE,A.KECLEON,A.DUSCLOPS,A.REGIROCK,A.GROUDON,A.JIRACHI,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.MUNCHLAX,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.VICTINI,A.PIGNITE,A.EMBOAR,A.WATCHOG,A.PANSEAR,A.SIMISEAR,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.REUNICLUS,A.EELEKTROSS,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.HEATMOR,A.MELOETTA,A.BRAIXEN,A.DELPHOX,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.HELIOLISK,A.HAWLUCHA,A.GOODRA,A.HOOPA,A.INCINEROAR,A.GUMSHOOS,[A.LYCANROC,"midnight"],A.KOMMO_O,A.MARSHADOW,A.BLACEPHALON,A.ZERAORA,A.CINDERACE,A.COALOSSAL,A.TOXTRICITY,A.GRIMMSNARL,A.OBSTAGOON,A.KUBFU,A.URSHIFU,A.URSALUNA,A.SNEASLER,A.PAWMOT,A.GARGANACL,A.ANNIHILAPE,A.SCREAM_TAIL,A.IRON_HANDS,A.IRON_THORNS,A.IRON_VALIANT,A.OKIDOGI,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_TYPHLOSION,A.HISUI_GOODRA,A.BLOODMOON_URSALUNA],[E.ICE_PUNCH]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.SLOWBRO,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.SMOOCHUM,A.ELEKID,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.GRUMPIG,A.SPINDA,A.ZANGOOSE,A.KECLEON,A.DUSCLOPS,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.JIRACHI,A.DEOXYS,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.WATCHOG,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SCRAGGY,A.SCRAFTY,A.REUNICLUS,A.CUBCHOO,A.BEARTIC,A.GOLETT,A.GOLURK,A.MELOETTA,A.FROGADIER,A.GRENINJA,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.HOOPA,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.STUFFUL,A.BEWEAR,A.KOMMO_O,A.TAPU_FINI,A.BUZZWOLE,A.MARSHADOW,A.MELMETAL,A.CLOBBOPUS,A.GRAPPLOCT,A.GRIMMSNARL,A.OBSTAGOON,A.MR_RIME,A.EISCUE,A.KUBFU,A.URSHIFU,A.URSALUNA,A.PAWMOT,A.GARGANACL,A.PALAFIN,A.CETITAN,A.ANNIHILAPE,A.SCREAM_TAIL,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_THORNS,A.IRON_VALIANT,A.OKIDOGI,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.BLOODMOON_URSALUNA],[E.THUNDER_PUNCH]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.PIKACHU,A.RAICHU,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MANKEY,A.PRIMEAPE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.ELECTABUZZ,A.MAGMAR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.PICHU,A.FLAAFFY,A.AMPHAROS,A.SUDOWOODO,A.AIPOM,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.TEDDIURSA,A.URSARING,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.GRUMPIG,A.SPINDA,A.FLYGON,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.KECLEON,A.DUSCLOPS,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.JIRACHI,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.PACHIRISU,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.VICTINI,A.PIGNITE,A.EMBOAR,A.WATCHOG,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.SCRAGGY,A.SCRAFTY,A.REUNICLUS,A.EELEKTROSS,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.HEATMOR,A.THUNDURUS,A.ZEKROM,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BRAIXEN,A.DELPHOX,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.HELIOLISK,A.HAWLUCHA,A.DEDENNE,A.GOODRA,A.HOOPA,A.INCINEROAR,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.STUFFUL,A.BEWEAR,[A.LYCANROC,"midnight"],A.KOMMO_O,A.TAPU_KOKO,A.BUZZWOLE,A.XURKITREE,A.MARSHADOW,A.ZERAORA,A.MELMETAL,A.TOXTRICITY,A.GRIMMSNARL,A.OBSTAGOON,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.KUBFU,A.URSHIFU,A.URSALUNA,A.FLORAGATO,A.MEOWSCARADA,A.PAWMO,A.PAWMOT,A.GARGANACL,A.ANNIHILAPE,A.SCREAM_TAIL,A.IRON_HANDS,A.IRON_THORNS,A.GHOLDENGO,A.IRON_VALIANT,A.OKIDOGI,A.ALOLA_RAICHU,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_SLOWKING,A.HISUI_TYPHLOSION,A.HISUI_GOODRA,A.BLOODMOON_URSALUNA],[E.SWORDS_DANCE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BEEDRILL,A.RATICATE,A.SANDSHREW,A.SANDSLASH,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.DIGLETT,A.DUGTRIO,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.RAPIDASH,A.FARFETCHD,A.DODUO,A.DODRIO,A.KRABBY,A.KINGLER,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.TANGELA,A.GOLDEEN,A.SEAKING,A.SCYTHER,A.PINSIR,A.KABUTOPS,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.LEDYBA,A.LEDIAN,A.ARIADOS,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.YANMA,A.GLIGAR,A.QWILFISH,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SKARMORY,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SHROOMISH,A.BRELOOM,A.NINJASK,A.MAWILE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.SOLROCK,A.CORPHISH,A.CRAWDAUNT,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.BANETTE,A.TROPIUS,A.ABSOL,A.WALREIN,A.GROUDON,A.RAYQUAZA,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.CHERUBI,A.CHERRIM,A.GIBLE,A.GABITE,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.TOXICROAK,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.YANMEGA,A.LEAFEON,A.GLISCOR,A.GALLADE,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.DRILBUR,A.EXCADRILL,A.LEAVANNY,A.SCOLIPEDE,A.LILLIGANT,A.DWEBBLE,A.CRUSTLE,A.SCRAFTY,A.ZORUA,A.ZOROARK,A.SAWSBUCK,A.KARRABLAST,A.ESCAVALIER,A.FERROTHORN,A.AXEW,A.FRAXURE,A.HAXORUS,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.COBALION,A.TERRAKION,A.VIRIZION,A.LANDORUS,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.HAWLUCHA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.ROCKRUFF,A.LYCANROC,A.FOMANTIS,A.LURANTIS,A.STUFFUL,A.BEWEAR,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.KOMALA,A.MIMIKYU,A.BRUXISH,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.KARTANA,A.NECROZMA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.RABOOT,A.CINDERACE,A.INTELEON,A.GREEDENT,A.DUBWOOL,A.DREDNAW,A.HATTERENE,A.PERRSERKER,A.SIRFETCHD,A.FALINKS,A.DURALUDON,A.ZACIAN,A.KUBFU,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.OVERQWIL,A.QUAQUAVAL,A.LOKIX,A.CERULEDGE,A.SHROODLE,A.GRAFAIAI,A.KLAWF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.FLAMIGO,A.KINGAMBIT,A.IRON_HANDS,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.IRON_LEAVES,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.IRON_BOULDER,A.IRON_CROWN,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_RAPIDASH,A.GALAR_FARFETCHD,[A.CALYREX,"ice"],A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.CUT]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BEEDRILL,A.RATTATA,A.RATICATE,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.FARFETCHD,A.KRABBY,A.KINGLER,A.LICKITUNG,A.RHYDON,A.TANGELA,A.KANGASKHAN,A.SCYTHER,A.PINSIR,A.KABUTOPS,A.DRAGONITE,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.BELLOSSOM,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.ESPEON,A.UMBREON,A.GLIGAR,A.STEELIX,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SKARMORY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.TYRANITAR,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.ZIGZAGOON,A.LINOONE,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.ROSELIA,A.CACNEA,A.CACTURNE,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.KECLEON,A.TROPIUS,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.GROUDON,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.BUDEW,A.ROSERADE,A.RAMPARDOS,A.VESPIQUEN,A.PACHIRISU,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.GIBLE,A.GABITE,A.GARCHOMP,A.SKORUPI,A.DRAPION,A.TOXICROAK,A.CARNIVINE,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.GLISCOR,A.GALLADE,A.DIALGA,A.PALKIA,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.DRILBUR,A.EXCADRILL,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.SCOLIPEDE,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.FERROTHORN,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.COBALION,A.TERRAKION,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.VOLCANION,A.KARTANA,A.OBSTAGOON,A.PERRSERKER,A.URSALUNA,A.BASCULEGION,A.KINGAMBIT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_TYPHLOSION,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY,A.BLOODMOON_URSALUNA],[E.FLY]:[A.CHARIZARD,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.FARFETCHD,A.DODUO,A.DODRIO,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.TOGETIC,A.XATU,A.MURKROW,A.DELIBIRD,A.SKARMORY,A.LUGIA,A.HO_OH,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.TROPIUS,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.STARLY,A.STARAVIA,A.STARAPTOR,A.DRIFLOON,A.DRIFBLIM,A.HONCHKROW,A.CHATOT,A.TOGEKISS,A.GIRATINA,A.ARCEUS,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.ARCHEOPS,A.DUCKLETT,A.SWANNA,A.GOLURK,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.GENESECT,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.VIKAVOLT,A.ORICORIO,A.DRAMPA,A.TAPU_KOKO,A.LUNALA,A.CELESTEELA,A.NAGANADEL,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.FLAPPLE,A.CRAMORANT,A.DRAGAPULT,A.ETERNATUS,A.ENAMORUS,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.BOMBIRDIER,A.FLAMIGO,A.IRON_JUGULIS,A.ROARING_MOON,A.FEZANDIPITI,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_BRAVIARY],[E.MEGA_KICK]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIKACHU,A.RAICHU,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GOLEM,A.SLOWBRO,A.GENGAR,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.KABUTOPS,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.QUAGSIRE,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GRUMPIG,A.SPINDA,A.FLYGON,A.CACTURNE,A.ZANGOOSE,A.KECLEON,A.DUSCLOPS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.JIRACHI,A.BUNEARY,A.LOPUNNY,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.GALLADE,A.DUSKNOIR,A.REGIGIGAS,A.VICTINI,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ZOROARK,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.HELIOLISK,A.HAWLUCHA,A.GOODRA,A.INCINEROAR,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.TSAREENA,A.ORANGURU,A.PASSIMIAN,A.TURTONATOR,A.HAKAMO_O,A.KOMMO_O,A.GUZZLORD,A.MARSHADOW,A.STAKATAKA,A.ZERAORA,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.DUBWOOL,A.COALOSSAL,A.TOXTRICITY,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.MR_RIME,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.KUBFU,A.URSHIFU,A.ZARUDE,A.QUAQUAVAL,A.FLAMIGO,[A.DEOXYS,"attack","defense","speed"],A.ALOLA_RAICHU,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ZAPDOS,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_LILLIGANT],[E.BODY_SLAM]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.VILEPLUME,A.PARAS,A.PARASECT,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.WEEPINBELL,A.VICTREEBEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.CLOYSTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.GOLDEEN,A.SEAKING,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.NOCTOWL,A.SPINARAK,A.ARIADOS,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SHUCKLE,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.DELIBIRD,A.MANTINE,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.LUXRAY,A.ROSERADE,A.SHIELDON,A.BASTIODON,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.DRIFLOON,A.DRIFBLIM,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SNOVER,A.ABOMASNOW,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.ARCEUS,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.SAMUROTT,A.BLITZLE,A.ZEBSTRIKA,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.CONKELDURR,A.THROH,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARMANITAN,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.GARBODOR,A.ZOROARK,A.GOTHITELLE,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.ALOMOMOLA,A.EELEKTRIK,A.EELEKTROSS,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.HEATMOR,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.CLAWITZER,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.BERGMITE,A.AVALUGG,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.BRIONNE,A.PRIMARINA,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.ARAQUANID,A.SALAZZLE,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.PALOSSAND,A.KOMALA,A.TURTONATOR,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.SOLGALEO,A.NIHILEGO,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.CORVIKNIGHT,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CLOBBOPUS,A.GRAPPLOCT,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.FALINKS,A.PINCURCHIN,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.WYRDEER,A.URSALUNA,A.ENAMORUS,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.FIDOUGH,A.DACHSBUN,A.NACLI,A.NACLSTACK,A.GARGANACL,A.MASCHIFF,A.MABOSSTIFF,A.KLAWF,A.ESPATHRA,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.WO_CHIEN,A.TING_LU,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.DIPPLIN,A.OKIDOGI,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARMANITAN,[A.CALYREX,"ice","shadow"],A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SAMUROTT,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.TAKE_DOWN]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.CHINCHOU,A.LANTURN,A.PICHU,A.IGGLYBUFF,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.DELIBIRD,A.MANTINE,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.STANTLER,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.MILOTIC,A.TROPIUS,A.CHIMECHO,A.SNORUNT,A.GLALIE,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.BELDUM,A.METANG,A.METAGROSS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.HAPPINY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.CROAGUNK,A.TOXICROAK,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.RHYPERIOR,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.FROSLASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.GIRATINA,A.ARCEUS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.BLITZLE,A.ROGGENROLA,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.DEERLING,A.SAWSBUCK,A.KARRABLAST,A.ESCAVALIER,A.ALOMOMOLA,A.EELEKTRIK,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.MIENFOO,A.MIENSHAO,A.PAWNIARD,A.BISHARP,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.FURFROU,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.TREVENANT,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MUDBRAY,A.MUDSDALE,A.FOMANTIS,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.ORANGURU,A.PASSIMIAN,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.MIMIKYU,A.BRUXISH,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.MAGEARNA,A.STAKATAKA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXTRICITY,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.FALINKS,A.PINCURCHIN,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.OKIDOGI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER],[E.DOUBLE_EDGE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TYROGUE,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.FLOATZEL,A.AMBIPOM,A.HONCHKROW,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.HIPPOPOTAS,A.HIPPOWDON,A.SNOVER,A.ABOMASNOW,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.PROBOPASS,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.SHAYMIN,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.BLITZLE,A.ZEBSTRIKA,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.CINCCINO,A.DUCKLETT,A.SWANNA,A.DEERLING,A.SAWSBUCK,A.AXEW,A.FRAXURE,A.HAXORUS,A.BEARTIC,A.MIENSHAO,A.GOLETT,A.GOLURK,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.KELDEO,A.CHESNAUGHT,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.SYLVEON,A.CARBINK,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIVERN,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.PASSIMIAN,A.MINIOR,A.KOMALA,A.HAKAMO_O,A.KOMMO_O,A.SOLGALEO,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SKWOVET,A.GREEDENT,A.CORVIKNIGHT,A.DREDNAW,A.ARROKUDA,A.BARRASKEWDA,A.PERRSERKER,A.EISCUE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.KUBFU,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,[A.CALYREX,"ice","shadow"],A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.OVERQWIL,A.LECHONK,A.OINKOLOGNE,A.LOKIX,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SQUAWKABILLY,A.NACLSTACK,A.GARGANACL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.ESPATHRA,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.SLITHER_WING,A.IRON_TREADS,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_THORNS,A.BAXCALIBUR,A.TING_LU,A.ROARING_MOON,A.KORAIDON,A.WALKING_WAKE,A.OKIDOGI,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_EXEGGUTOR,A.GALAR_MEOWTH,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_ZAPDOS,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_BRAVIARY,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.PIN_MISSILE]:[A.BEEDRILL,A.SANDSLASH,A.CLOYSTER,A.JOLTEON,A.OMASTAR,A.MEW,A.SPINARAK,A.ARIADOS,A.PINECO,A.FORRETRESS,A.QWILFISH,A.HERACROSS,A.ZIGZAGOON,A.LINOONE,A.ROSELIA,A.CACNEA,A.CACTURNE,A.BUDEW,A.ROSERADE,A.VESPIQUEN,A.SKORUPI,A.DRAPION,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.MARACTUS,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.MAREANIE,A.TOXAPEX,A.GOLISOPOD,A.TOGEDEMARU,A.POIPOLE,A.NAGANADEL,A.OBSTAGOON,A.CURSOLA,A.PINCURCHIN,A.OVERQWIL,A.IRON_THORNS,A.ALOLA_SANDSLASH,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_QWILFISH],[E.ROAR]:[A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BLASTOISE,A.RATICATE,A.NIDOQUEEN,A.NIDOKING,A.VULPIX,A.NINETALES,A.PERSIAN,A.GROWLITHE,A.ARCANINE,A.GOLEM,A.ONIX,A.RHYHORN,A.RHYDON,A.KANGASKHAN,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.CROCONAW,A.FERALIGATR,A.FLAAFFY,A.AMPHAROS,A.ESPEON,A.UMBREON,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.TEDDIURSA,A.URSARING,A.SWINUB,A.PILOSWINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.STANTLER,A.RAIKOU,A.ENTEI,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.HO_OH,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.LINOONE,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.ARON,A.LAIRON,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.ALTARIA,A.ZANGOOSE,A.TROPIUS,A.SEALEO,A.WALREIN,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.TURTWIG,A.GROTLE,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BUIZEL,A.FLOATZEL,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.GIBLE,A.GABITE,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.RHYPERIOR,A.LEAFEON,A.GLACEON,A.MAMOSWINE,A.DIALGA,A.PALKIA,A.HEATRAN,A.GIRATINA,A.ARCEUS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.BEARTIC,A.DRUDDIGON,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.AVALUGG,A.XERNEAS,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.GUMSHOOS,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.TYPE_NULL,A.SILVALLY,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_BULU,A.SOLGALEO,A.LUNALA,A.YAMPER,A.BOLTUND,A.ZAMAZENTA,A.ZARUDE,A.GLASTRIER,A.WYRDEER,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.GREAVARD,A.HOUNDSTONE,A.FARIGIRAF,A.GREAT_TUSK,A.SCREAM_TAIL,A.IRON_JUGULIS,A.ROARING_MOON,A.KORAIDON,A.WALKING_WAKE,A.OKIDOGI,A.ARCHALUDON,A.GOUGING_FIRE,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_RATICATE,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_PERSIAN,A.ALOLA_GOLEM,[A.URSHIFU,"single-strike"],A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.BLOODMOON_URSALUNA],[E.FLAMETHROWER]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GROWLITHE,A.ARCANINE,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MAGMAR,A.TAUROS,A.GYARADOS,A.FLAREON,A.AERODACTYL,A.SNORLAX,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SENTRET,A.FURRET,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.SLOWKING,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.SLUGMA,A.MAGCARGO,A.REMORAID,A.OCTILLERY,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.BLISSEY,A.ENTEI,A.TYRANITAR,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAWILE,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.FLYGON,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.SOLROCK,A.CASTFORM,A.KECLEON,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.GROUDON,A.RAYQUAZA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.STUNKY,A.SKUNTANK,A.HAPPINY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.WATCHOG,A.PANSEAR,A.SIMISEAR,A.AUDINO,A.DARUMAKA,A.DARMANITAN,A.ZOROARK,A.EELEKTROSS,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.DRUDDIGON,A.HEATMOR,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.RESHIRAM,A.GENESECT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.GOODRA,A.PUMPKABOO,A.GOURGEIST,A.NOIVERN,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SALANDIT,A.SALAZZLE,A.SILVALLY,A.TURTONATOR,A.DRAMPA,A.KOMMO_O,A.SOLGALEO,A.CELESTEELA,A.GUZZLORD,A.NAGANADEL,A.BLACEPHALON,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.CARKOL,A.COALOSSAL,A.CENTISKORCH,A.DRACOZOLT,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.SCOVILLAIN,A.DUDUNSPARCE,A.SCREAM_TAIL,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.WALKING_WAKE,A.GOUGING_FIRE,A.TERAPAGOS,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_ZOROARK,A.HISUI_GOODRA,[A.PALDEA_TAUROS,"blaze"]],[E.HYDRO_PUMP]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SHELLDER,A.CLOYSTER,A.KINGLER,A.LICKITUNG,A.RHYDON,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MAGIKARP,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.EXPLOUD,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.MILOTIC,A.CASTFORM,A.WALREIN,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.KYOGRE,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.MUNCHLAX,A.FINNEON,A.LUMINEON,A.MANTYKE,A.LICKILICKY,A.RHYPERIOR,A.PALKIA,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.DRILBUR,A.EXCADRILL,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.SWANNA,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.HYDREIGON,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.GOODRA,A.AVALUGG,A.VOLCANION,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.GRAPPLOCT,A.CURSOLA,A.PINCURCHIN,A.EISCUE,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DRAKLOAK,A.DRAGAPULT,A.BASCULEGION,A.OVERQWIL,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.CLODSIRE,A.IRON_BUNDLE,A.IRON_JUGULIS,A.ROARING_MOON,A.WALKING_WAKE,A.HYDRAPPLE,[A.ROTOM,"wash"],A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_GOODRA,[A.PALDEA_TAUROS,"aqua"],A.PALDEA_WOOPER],[E.SURF]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIKACHU,A.RAICHU,A.NIDOQUEEN,A.NIDOKING,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.LICKITUNG,A.RHYDON,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.PICHU,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.SNEASEL,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.MILTANK,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.ZANGOOSE,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.RAMPARDOS,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.GARCHOMP,A.MUNCHLAX,A.FINNEON,A.LUMINEON,A.MANTYKE,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.HERDIER,A.STOUTLAND,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.STUNFISK,A.DRUDDIGON,A.BOUFFALANT,A.HYDREIGON,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.SWIRLIX,A.SLURPUFF,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.GOODRA,A.BERGMITE,A.AVALUGG,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.WIMPOD,A.GOLISOPOD,A.SILVALLY,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.GRAPPLOCT,A.OBSTAGOON,A.CURSOLA,A.PINCURCHIN,A.EISCUE,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DRAKLOAK,A.DRAGAPULT,A.BASCULEGION,A.OVERQWIL,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.CLODSIRE,A.WALKING_WAKE,A.TERAPAGOS,A.ALOLA_RAICHU,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_STUNFISK,A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_GOODRA,[A.PALDEA_TAUROS,"combat","aqua"],A.PALDEA_WOOPER],[E.ICE_BEAM]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.JYNX,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.ARTICUNO,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.DUNSPARCE,A.QWILFISH,A.SNEASEL,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.KINGDRA,A.PORYGON2,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.AZURILL,A.SKITTY,A.DELCATTY,A.MAWILE,A.AGGRON,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.LUNATONE,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.REGICE,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.DEOXYS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.BUNEARY,A.LOPUNNY,A.MUNCHLAX,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.GLACEON,A.MAMOSWINE,A.PORYGON_Z,A.DUSKNOIR,A.FROSLASS,A.MESPRIT,A.DIALGA,A.PALKIA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.BASCULIN,A.SIGILYPH,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.GOLETT,A.GOLURK,A.KYUREM,A.GENESECT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.SLIGGOO,A.GOODRA,A.BERGMITE,A.AVALUGG,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CRABOMINABLE,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.GOLISOPOD,A.SILVALLY,A.BRUXISH,A.DRAMPA,A.TAPU_FINI,A.LUNALA,A.PHEROMOSA,A.MAGEARNA,A.MELMETAL,A.INTELEON,A.DREDNAW,A.CRAMORANT,A.BARRASKEWDA,A.OBSTAGOON,A.CURSOLA,A.MR_RIME,A.FROSMOTH,A.EISCUE,A.ARCTOZOLT,A.ARCTOVISH,A.GLASTRIER,A.BASCULEGION,A.OVERQWIL,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.CETODDLE,A.CETITAN,A.VELUZA,A.DUDUNSPARCE,A.SCREAM_TAIL,A.IRON_BUNDLE,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,[A.CALYREX,"ice"],A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG],[E.BLIZZARD]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.JYNX,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.ARTICUNO,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.DUNSPARCE,A.QWILFISH,A.SNEASEL,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.KINGDRA,A.PORYGON2,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.AZURILL,A.SKITTY,A.DELCATTY,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.ZANGOOSE,A.LUNATONE,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.REGICE,A.KYOGRE,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.LOPUNNY,A.MUNCHLAX,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.GLACEON,A.MAMOSWINE,A.PORYGON_Z,A.DUSKNOIR,A.FROSLASS,A.MESPRIT,A.DIALGA,A.PALKIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.KYUREM,A.GENESECT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.SLIGGOO,A.GOODRA,A.BERGMITE,A.AVALUGG,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CRABOMINABLE,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.GOLISOPOD,A.BRUXISH,A.DRAMPA,A.TAPU_FINI,A.LUNALA,A.PHEROMOSA,A.INTELEON,A.DREDNAW,A.CRAMORANT,A.BARRASKEWDA,A.OBSTAGOON,A.CURSOLA,A.MR_RIME,A.FROSMOTH,A.EISCUE,A.ARCTOZOLT,A.ARCTOVISH,A.GLASTRIER,A.BASCULEGION,A.OVERQWIL,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.CETODDLE,A.CETITAN,A.VELUZA,A.DUDUNSPARCE,A.SCREAM_TAIL,A.IRON_BUNDLE,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,[A.ROTOM,"frost"],A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,[A.CALYREX,"ice"],A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG],[E.PSYBEAM]:[A.BUTTERFREE,A.CLEFAIRY,A.CLEFABLE,A.PARAS,A.VENONAT,A.VENOMOTH,A.PSYDUCK,A.GOLDUCK,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.KOFFING,A.WEEZING,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.PORYGON,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.SPINARAK,A.CHINCHOU,A.CLEFFA,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.REMORAID,A.OCTILLERY,A.MANTINE,A.PORYGON2,A.STANTLER,A.DUSTOX,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.SPINDA,A.BALTOY,A.CLAYDOL,A.KECLEON,A.SHUPPET,A.BANETTE,A.CHIMECHO,A.WORMADAM,A.MOTHIM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.FINNEON,A.LUMINEON,A.PORYGON_Z,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.MUNNA,A.MUSHARNA,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.VIVILLON,A.ESPURR,A.MEOWSTIC,A.INKAY,A.MALAMAR,A.HOOPA,A.ORANGURU,A.TAPU_LELE,A.MAGEARNA,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.MR_RIME,A.INDEEDEE,A.CALYREX,A.WYRDEER,A.ARMAROUGE,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.FARIGIRAF,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_VALIANT,A.MUNKIDORI,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.HISUI_BRAVIARY],[E.HYPER_BEAM]:[A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEOT,A.RATICATE,A.FEAROW,A.ARBOK,A.RAICHU,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.CLEFABLE,A.NINETALES,A.WIGGLYTUFF,A.GOLBAT,A.VILEPLUME,A.PARASECT,A.VENOMOTH,A.DUGTRIO,A.PERSIAN,A.GOLDUCK,A.PRIMEAPE,A.ARCANINE,A.POLIWRATH,A.ALAKAZAM,A.MACHAMP,A.VICTREEBEL,A.TENTACRUEL,A.GOLEM,A.RAPIDASH,A.SLOWBRO,A.MAGNETON,A.DODRIO,A.DEWGONG,A.MUK,A.CLOYSTER,A.GENGAR,A.HYPNO,A.KINGLER,A.ELECTRODE,A.EXEGGUTOR,A.MAROWAK,A.LICKITUNG,A.WEEZING,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.SEADRA,A.SEAKING,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMASTAR,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.FURRET,A.NOCTOWL,A.LEDIAN,A.ARIADOS,A.CROBAT,A.LANTURN,A.TOGETIC,A.XATU,A.AMPHAROS,A.BELLOSSOM,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.JUMPLUFF,A.SUNFLORA,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.FORRETRESS,A.DUNSPARCE,A.STEELIX,A.GRANBULL,A.SCIZOR,A.HERACROSS,A.URSARING,A.MAGCARGO,A.PILOSWINE,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.HOUNDOOM,A.KINGDRA,A.DONPHAN,A.PORYGON2,A.STANTLER,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.MIGHTYENA,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.SWELLOW,A.PELIPPER,A.KIRLIA,A.GARDEVOIR,A.MASQUERAIN,A.BRELOOM,A.SLAKING,A.NINJASK,A.SHEDINJA,A.EXPLOUD,A.HARIYAMA,A.DELCATTY,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDICHAM,A.MANECTRIC,A.SWALOT,A.SHARPEDO,A.WAILORD,A.CAMERUPT,A.TORKOAL,A.GRUMPIG,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACTURNE,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.WHISCASH,A.CRAWDAUNT,A.CLAYDOL,A.CRADILY,A.ARMALDO,A.MILOTIC,A.BANETTE,A.DUSCLOPS,A.TROPIUS,A.ABSOL,A.GLALIE,A.WALREIN,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.STARAPTOR,A.BIBAREL,A.KRICKETUNE,A.LUXRAY,A.ROSERADE,A.RAMPARDOS,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.FLOATZEL,A.CHERRIM,A.GASTRODON,A.AMBIPOM,A.DRIFBLIM,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.PURUGLY,A.SKUNTANK,A.BRONZONG,A.SPIRITOMB,A.GARCHOMP,A.LUCARIO,A.HIPPOWDON,A.DRAPION,A.TOXICROAK,A.CARNIVINE,A.LUMINEON,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SERPERIOR,A.EMBOAR,A.SAMUROTT,A.WATCHOG,A.STOUTLAND,A.LIEPARD,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.MUSHARNA,A.UNFEZANT,A.ZEBSTRIKA,A.GIGALITH,A.SWOOBAT,A.EXCADRILL,A.AUDINO,A.CONKELDURR,A.SEISMITOAD,A.LEAVANNY,A.SCOLIPEDE,A.WHIMSICOTT,A.LILLIGANT,A.KROOKODILE,A.DARMANITAN,A.CRUSTLE,A.SCRAFTY,A.SIGILYPH,A.COFAGRIGUS,A.CARRACOSTA,A.ARCHEOPS,A.GARBODOR,A.ZOROARK,A.CINCCINO,A.GOTHITELLE,A.REUNICLUS,A.SWANNA,A.VANILLUXE,A.SAWSBUCK,A.ESCAVALIER,A.AMOONGUSS,A.JELLICENT,A.ALOMOMOLA,A.GALVANTULA,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTROSS,A.BEHEEYEM,A.CHANDELURE,A.HAXORUS,A.BEARTIC,A.CRYOGONAL,A.ACCELGOR,A.MIENSHAO,A.DRUDDIGON,A.GOLURK,A.BISHARP,A.BRAVIARY,A.MANDIBUZZ,A.HYDREIGON,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESNAUGHT,A.DELPHOX,A.GRENINJA,A.DIGGERSBY,A.TALONFLAME,A.VIVILLON,A.PYROAR,A.FLORGES,A.GOGOAT,A.PANGORO,A.MEOWSTIC,A.AEGISLASH,A.AROMATISSE,A.SLURPUFF,A.MALAMAR,A.BARBARACLE,A.DRAGALGE,A.CLAWITZER,A.HELIOLISK,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOODRA,A.KLEFKI,A.TREVENANT,A.GOURGEIST,A.AVALUGG,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.DECIDUEYE,A.INCINEROAR,A.PRIMARINA,A.GUMSHOOS,A.VIKAVOLT,A.CRABOMINABLE,A.RIBOMBEE,A.TOXAPEX,A.MUDSDALE,A.LURANTIS,A.SHIINOTIC,A.SALAZZLE,A.BEWEAR,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.NAGANADEL,A.BLACEPHALON,A.ZERAORA,A.MELMETAL,A.RILLABOOM,A.CINDERACE,A.INTELEON,A.GREEDENT,A.CORVIKNIGHT,A.ORBEETLE,A.THIEVUL,A.ELDEGOSS,A.DUBWOOL,A.DREDNAW,A.BOLTUND,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SANDACONDA,A.CRAMORANT,A.BARRASKEWDA,A.TOXTRICITY,A.CENTISKORCH,A.GRAPPLOCT,A.POLTEAGEIST,A.HATTERENE,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.MEOWSCARADA,A.SKELEDIRGE,A.QUAQUAVAL,A.OINKOLOGNE,A.PAWMOT,A.MAUSHOLD,A.DACHSBUN,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLSTACK,A.GARGANACL,A.BELLIBOLT,A.KILOWATTREL,A.MABOSSTIFF,A.BRAMBLEGHAST,A.TOEDSCRUEL,A.KLAWF,A.SCOVILLAIN,A.RABSCA,A.ESPATHRA,A.WUGTRIO,A.BOMBIRDIER,A.PALAFIN,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMORA,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.BAXCALIBUR,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.ARCHALUDON,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSLASH,A.ALOLA_NINETALES,A.ALOLA_DUGTRIO,A.ALOLA_PERSIAN,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_RAPIDASH,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_LINOONE,A.GALAR_DARMANITAN,A.HISUI_ARCANINE,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.BLOODMOON_URSALUNA,[A.BASCULIN,"blue-striped","red-striped"]],[E.LOW_KICK]:[A.SANDSHREW,A.SANDSLASH,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.PONYTA,A.RAPIDASH,A.DODUO,A.DODRIO,A.DROWZEE,A.HYPNO,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.KANGASKHAN,A.ELECTABUZZ,A.MAGMAR,A.KABUTOPS,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.FLAAFFY,A.AMPHAROS,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.GIRAFARIG,A.SNUBBULL,A.GRANBULL,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.TYROGUE,A.HITMONTOP,A.ELEKID,A.MAGBY,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.ARMALDO,A.KECLEON,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.BONSLY,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.ELECTIVIRE,A.MAGMORTAR,A.GALLADE,A.PIGNITE,A.EMBOAR,A.PATRAT,A.WATCHOG,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.BLITZLE,A.ZEBSTRIKA,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.LEAVANNY,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.CARRACOSTA,A.ZOROARK,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.HEATMOR,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BRAIXEN,A.DELPHOX,A.FROGADIER,A.GRENINJA,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.BARBARACLE,A.HELIOLISK,A.HAWLUCHA,A.DECIDUEYE,A.INCINEROAR,A.MUDBRAY,A.MUDSDALE,A.BEWEAR,A.TSAREENA,A.PASSIMIAN,A.KOMALA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.PHEROMOSA,A.MARSHADOW,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.STONJOURNER,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.KUBFU,A.URSHIFU,A.ZARUDE,A.URSALUNA,A.SNEASLER,A.FLORAGATO,A.MEOWSCARADA,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.SPIDOPS,A.LOKIX,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.GRAFAIAI,A.ESPATHRA,A.FLAMIGO,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.KINGAMBIT,A.SLITHER_WING,A.IRON_HANDS,A.IRON_THORNS,A.GHOLDENGO,A.IRON_VALIANT,A.KORAIDON,A.WALKING_WAKE,A.OKIDOGI,A.OGERPON,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_ZAPDOS,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.COUNTER]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PARAS,A.PARASECT,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWPOKE,A.SLOWBRO,A.GENGAR,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.SNORLAX,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.LEDYBA,A.LEDIAN,A.TOGEPI,A.TOGETIC,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.WOBBUFFET,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.SNUBBULL,A.GRANBULL,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.MILTANK,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.TAILLOW,A.SWELLOW,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.CORPHISH,A.CRAWDAUNT,A.KECLEON,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.SHIELDON,A.BASTIODON,A.RIOLU,A.LUCARIO,A.SHELLOS,A.GASTRODON,A.CROAGUNK,A.TOXICROAK,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SAWK,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.ZORUA,A.ZOROARK,A.KARRABLAST,A.ESCAVALIER,A.ACCELGOR,A.AXEW,A.FRAXURE,A.HAXORUS,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.GOOMY,A.SLIGGOO,A.GOODRA,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.PASSIMIAN,A.PYUKUMUKU,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.BUZZWOLE,A.MARSHADOW,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SKWOVET,A.GREEDENT,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.FALINKS,A.KUBFU,A.URSHIFU,A.QUAQUAVAL,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.FINIZEN,A.PALAFIN,A.TATSUGIRI,A.KORAIDON,A.OKIDOGI,A.OGERPON,A.IRON_BOULDER],[E.STRENGTH]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATICATE,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.GENGAR,A.ONIX,A.KRABBY,A.KINGLER,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.JOLTEON,A.FLAREON,A.AERODACTYL,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.BAYLEEF,A.MEGANIUM,A.QUILAVA,A.TYPHLOSION,A.CROCONAW,A.FERALIGATR,A.FURRET,A.LEDIAN,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.QUAGSIRE,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.TYROGUE,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.TYRANITAR,A.LUGIA,A.HO_OH,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.MIGHTYENA,A.LINOONE,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.DELCATTY,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.GULPIN,A.SWALOT,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.CLAYDOL,A.CRADILY,A.ARMALDO,A.KECLEON,A.DUSCLOPS,A.TROPIUS,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BUIZEL,A.FLOATZEL,A.GASTRODON,A.AMBIPOM,A.LOPUNNY,A.SKUNTANK,A.BRONZONG,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.SAMUROTT,A.WATCHOG,A.HERDIER,A.STOUTLAND,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SCOLIPEDE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.REUNICLUS,A.FERROTHORN,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.HAWLUCHA,A.GOODRA,A.PHANTUMP,A.TREVENANT,A.BERGMITE,A.AVALUGG,A.ZYGARDE,A.VOLCANION,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.OBSTAGOON,A.CUFANT,A.COPPERAJAH,A.URSALUNA,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SAMUROTT,A.HISUI_BRAVIARY,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.BLOODMOON_URSALUNA],[E.SOLAR_BEAM]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.ARCANINE,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.PONYTA,A.RAPIDASH,A.EXEGGCUTE,A.EXEGGUTOR,A.LICKITUNG,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.MR_MIME,A.TAUROS,A.LAPRAS,A.PORYGON,A.SNORLAX,A.MOLTRES,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.TYPHLOSION,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.PORYGON2,A.STANTLER,A.MILTANK,A.BLISSEY,A.ENTEI,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.BLAZIKEN,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.SKITTY,A.DELCATTY,A.MAWILE,A.AGGRON,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CAMERUPT,A.TORKOAL,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.CASTFORM,A.KECLEON,A.TROPIUS,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.INFERNAPE,A.BUDEW,A.ROSERADE,A.WORMADAM,A.MOTHIM,A.CHERUBI,A.CHERRIM,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.MUNCHLAX,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.LICKILICKY,A.TANGROWTH,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.PORYGON_Z,A.UXIE,A.HEATRAN,A.CRESSELIA,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.GIGALITH,A.AUDINO,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SIGILYPH,A.GARBODOR,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.FOONGUS,A.AMOONGUSS,A.FERROSEED,A.FERROTHORN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.CRYOGONAL,A.GOLURK,A.HEATMOR,A.LARVESTA,A.VOLCARONA,A.VIRIZION,A.RESHIRAM,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.HELIOLISK,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.NOIBAT,A.NOIVERN,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.VIKAVOLT,A.RIBOMBEE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.MINIOR,A.TURTONATOR,A.DRAMPA,A.DHELMISE,A.TAPU_BULU,A.SOLGALEO,A.LUNALA,A.XURKITREE,A.CELESTEELA,A.NECROZMA,A.MAGEARNA,A.BLACEPHALON,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.DOTTLER,A.ORBEETLE,A.GOSSIFLEUR,A.ELDEGOSS,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.CENTISKORCH,A.MR_RIME,A.ALCREMIE,A.DURALUDON,A.DRAGAPULT,A.ZAMAZENTA,A.ETERNATUS,A.ZARUDE,A.CALYREX,A.WYRDEER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.SKELEDIRGE,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.ARMAROUGE,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.GLIMMORA,A.DUDUNSPARCE,A.BRUTE_BONNET,A.IRON_MOTH,A.WO_CHIEN,A.KORAIDON,A.MIRAIDON,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_NINETALES,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_MR_MIME,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.FIRE_SPIN]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.VULPIX,A.NINETALES,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.MAGMAR,A.FLAREON,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SLUGMA,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.ENTEI,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.FLYGON,A.ALTARIA,A.SOLROCK,A.BAGON,A.SHELGON,A.SALAMENCE,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.SKUNTANK,A.MAGMORTAR,A.HEATRAN,A.VICTINI,A.PANSEAR,A.SIMISEAR,A.DARUMAKA,A.DARMANITAN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.HEATMOR,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.TURTONATOR,A.SOLGALEO,A.BLACEPHALON,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.CARKOL,A.COALOSSAL,A.SIZZLIPEDE,A.CENTISKORCH,A.DRACOZOLT,A.ETERNATUS,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.IRON_MOTH,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.GOUGING_FIRE,A.ALOLA_MAROWAK,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,[A.PALDEA_TAUROS,"blaze"]],[E.THUNDERBOLT]:[A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.MAGNEMITE,A.MAGNETON,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.VOLTORB,A.ELECTRODE,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.STARYU,A.STARMIE,A.MR_MIME,A.ELECTABUZZ,A.TAUROS,A.GYARADOS,A.LAPRAS,A.JOLTEON,A.PORYGON,A.SNORLAX,A.ZAPDOS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.AIPOM,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.PORYGON2,A.STANTLER,A.ELEKID,A.MILTANK,A.BLISSEY,A.RAIKOU,A.TYRANITAR,A.LUGIA,A.HO_OH,A.ZIGZAGOON,A.LINOONE,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ZANGOOSE,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.ABSOL,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.PACHIRISU,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.GLAMEOW,A.PURUGLY,A.MIME_JR,A.MUNCHLAX,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.BLITZLE,A.ZEBSTRIKA,A.AUDINO,A.GARBODOR,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.STUNFISK,A.GOLURK,A.THUNDURUS,A.ZEKROM,A.MELOETTA,A.GENESECT,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.SKRELP,A.DRAGALGE,A.HELIOPTILE,A.HELIOLISK,A.AMAURA,A.AURORUS,A.DEDENNE,A.GOOMY,A.SLIGGOO,A.GOODRA,A.XERNEAS,A.HOOPA,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.ORANGURU,A.SILVALLY,A.TOGEDEMARU,A.MIMIKYU,A.DRAMPA,A.TAPU_KOKO,A.TAPU_LELE,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.XURKITREE,A.MAGEARNA,A.NAGANADEL,A.ZERAORA,A.MELTAN,A.MELMETAL,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.OBSTAGOON,A.PERRSERKER,A.MR_RIME,A.PINCURCHIN,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.REGIELEKI,A.WYRDEER,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.CYCLIZAR,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.FLUTTER_MANE,A.SANDY_SHOCKS,A.IRON_HANDS,A.IRON_THORNS,A.GHOLDENGO,A.IRON_VALIANT,A.MIRAIDON,A.ARCHALUDON,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_RAICHU,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.THUNDER_WAVE]:[A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.GENGAR,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.CHANSEY,A.STARYU,A.STARMIE,A.MR_MIME,A.ELECTABUZZ,A.GYARADOS,A.JOLTEON,A.PORYGON,A.ZAPDOS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.AIPOM,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.FORRETRESS,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.REMORAID,A.OCTILLERY,A.PORYGON2,A.STANTLER,A.ELEKID,A.MILTANK,A.BLISSEY,A.RAIKOU,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.ZIGZAGOON,A.LINOONE,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.VIGOROTH,A.SLAKING,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.SPOINK,A.GRUMPIG,A.ZANGOOSE,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.CHIMECHO,A.ABSOL,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.MIME_JR,A.HAPPINY,A.MAGNEZONE,A.ELECTIVIRE,A.TOGEKISS,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.MUSHARNA,A.BLITZLE,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SIGILYPH,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.TYNAMO,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.STUNFISK,A.PAWNIARD,A.BISHARP,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.THUNDURUS,A.ZEKROM,A.MELOETTA,A.GENESECT,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HELIOPTILE,A.HELIOLISK,A.AMAURA,A.AURORUS,A.DEDENNE,A.KLEFKI,A.XERNEAS,A.HOOPA,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.TYPE_NULL,A.SILVALLY,A.TOGEDEMARU,A.MIMIKYU,A.DRAMPA,A.TAPU_KOKO,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.XURKITREE,A.NECROZMA,A.MAGEARNA,A.ZERAORA,A.MELTAN,A.MELMETAL,A.WOOLOO,A.DUBWOOL,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.MR_RIME,A.PINCURCHIN,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.REGIELEKI,A.WYRDEER,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.FARIGIRAF,A.KINGAMBIT,A.SCREAM_TAIL,A.FLUTTER_MANE,A.SANDY_SHOCKS,A.IRON_THORNS,A.GHOLDENGO,A.IRON_VALIANT,A.MIRAIDON,A.ARCHALUDON,A.RAGING_BOLT,A.ALOLA_RAICHU,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_STUNFISK,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.THUNDER]:[A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.MAGNEMITE,A.MAGNETON,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.VOLTORB,A.ELECTRODE,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.STARYU,A.STARMIE,A.MR_MIME,A.ELECTABUZZ,A.TAUROS,A.GYARADOS,A.LAPRAS,A.JOLTEON,A.PORYGON,A.SNORLAX,A.ZAPDOS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.AIPOM,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.PORYGON2,A.STANTLER,A.ELEKID,A.MILTANK,A.BLISSEY,A.RAIKOU,A.TYRANITAR,A.LUGIA,A.HO_OH,A.ZIGZAGOON,A.LINOONE,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ZANGOOSE,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.ABSOL,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.PACHIRISU,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.LOPUNNY,A.MISMAGIUS,A.GLAMEOW,A.PURUGLY,A.MIME_JR,A.MUNCHLAX,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.PORYGON_Z,A.PROBOPASS,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.WATCHOG,A.STOUTLAND,A.BLITZLE,A.ZEBSTRIKA,A.AUDINO,A.CINCCINO,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.EMOLGA,A.GALVANTULA,A.FERROTHORN,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.STUNFISK,A.THUNDURUS,A.ZEKROM,A.MELOETTA,A.GENESECT,A.AROMATISSE,A.SLURPUFF,A.DRAGALGE,A.HELIOPTILE,A.HELIOLISK,A.AURORUS,A.DEDENNE,A.SLIGGOO,A.GOODRA,A.XERNEAS,A.CHARJABUG,A.VIKAVOLT,A.ORANGURU,A.TOGEDEMARU,A.MIMIKYU,A.DRAMPA,A.TAPU_KOKO,A.TAPU_LELE,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.XURKITREE,A.ZERAORA,A.MELMETAL,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.OBSTAGOON,A.PERRSERKER,A.MR_RIME,A.PINCURCHIN,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.REGIELEKI,A.WYRDEER,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.FLUTTER_MANE,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.GHOLDENGO,A.MIRAIDON,A.ARCHALUDON,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_RAICHU,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.MAROWAK,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.EARTHQUAKE]:[A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWPOKE,A.SLOWBRO,A.ONIX,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.PINSIR,A.TAUROS,A.GYARADOS,A.AERODACTYL,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.SUDOWOODO,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SHUCKLE,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.MANTINE,A.PHANPY,A.DONPHAN,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.SCEPTILE,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.ARON,A.LAIRON,A.AGGRON,A.SWALOT,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.ALTARIA,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.CRADILY,A.ARMALDO,A.DUSCLOPS,A.TROPIUS,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.RELICANTH,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.GASTRODON,A.BRONZOR,A.BRONZONG,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.MANTYKE,A.ABOMASNOW,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.ARCEUS,A.EMBOAR,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.HAXORUS,A.BEARTIC,A.STUNFISK,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.HYDREIGON,A.TERRAKION,A.LANDORUS,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.GOGOAT,A.PANGORO,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AURORUS,A.GOODRA,A.TREVENANT,A.AVALUGG,A.ZYGARDE,A.VOLCANION,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.WISHIWASHI,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.KOMALA,A.TURTONATOR,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.SOLGALEO,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.STAKATAKA,A.MELMETAL,A.RILLABOOM,A.GREEDENT,A.DREDNAW,A.COALOSSAL,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.DRACOVISH,A.REGIDRAGO,A.WYRDEER,A.URSALUNA,A.SKELEDIRGE,A.NACLI,A.NACLSTACK,A.GARGANACL,A.ORTHWORM,A.CETODDLE,A.CETITAN,A.DONDOZO,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.GREAT_TUSK,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.BAXCALIBUR,A.TING_LU,A.ROARING_MOON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.TERAPAGOS,[A.WORMADAM,"sandy"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_TYPHLOSION,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.DIG]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PARAS,A.PARASECT,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.ONIX,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.KANGASKHAN,A.PINSIR,A.TAUROS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CLEFFA,A.IGGLYBUFF,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.SLOWKING,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.PHANPY,A.DONPHAN,A.STANTLER,A.HITMONTOP,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.MAKUHITA,A.HARIYAMA,A.SKITTY,A.DELCATTY,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.NUMEL,A.CAMERUPT,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.CRADILY,A.ANORITH,A.ARMALDO,A.KECLEON,A.REGIROCK,A.GROUDON,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.GASTRODON,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.HEATRAN,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.HEATMOR,A.DURANT,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.MEOWSTIC,A.BINACLE,A.BARBARACLE,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.PHANTUMP,A.TREVENANT,A.ZYGARDE,A.VOLCANION,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.SKWOVET,A.GREEDENT,A.NICKIT,A.THIEVUL,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.GRAPPLOCT,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.CUFANT,A.COPPERAJAH,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.ZARUDE,A.WYRDEER,A.URSALUNA,A.SNEASLER,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.NACLI,A.NACLSTACK,A.GARGANACL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.KLAWF,A.RELLOR,A.RABSCA,A.WIGLETT,A.WUGTRIO,A.ORTHWORM,A.GREAVARD,A.HOUNDSTONE,A.ANNIHILAPE,A.CLODSIRE,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.TING_LU,A.ROARING_MOON,A.KORAIDON,A.OKIDOGI,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.TOXIC]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.TOXTRICITY,A.ETERNATUS,A.SNEASLER,A.OVERQWIL,A.BELLIBOLT,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.VAROOM,A.REVAVROOM,A.GLIMMET,A.GLIMMORA,A.CLODSIRE,A.DUDUNSPARCE,A.IRON_MOTH,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.PALDEA_WOOPER],[E.PSYCHIC]:[A.BUTTERFREE,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.VENONAT,A.VENOMOTH,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.CHANSEY,A.STARYU,A.STARMIE,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.LAPRAS,A.PORYGON,A.SNORLAX,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.SPINARAK,A.ARIADOS,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.POLITOED,A.YANMA,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.BLISSEY,A.LUGIA,A.HO_OH,A.CELEBI,A.BEAUTIFLY,A.DUSTOX,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.SPINDA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.GOREBYSS,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.WORMADAM,A.MOTHIM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.MUNCHLAX,A.LUCARIO,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.GIRATINA,A.CRESSELIA,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.WHIMSICOTT,A.DARMANITAN,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.GARBODOR,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.GOLETT,A.GOLURK,A.LARVESTA,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.MELOETTA,A.GENESECT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.AURORUS,A.SYLVEON,A.CARBINK,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.DIANCIE,A.HOOPA,A.PRIMARINA,A.CUTIEFLY,A.RIBOMBEE,A.ORANGURU,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.MIMIKYU,A.BRUXISH,A.TAPU_LELE,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.NECROZMA,A.MAGEARNA,A.BLACEPHALON,A.DOTTLER,A.ORBEETLE,A.THIEVUL,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.CURSOLA,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.INDEEDEE,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.ENAMORUS,A.ARMAROUGE,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.VELUZA,A.FARIGIRAF,A.SCREAM_TAIL,A.IRON_MOTH,A.GHOLDENGO,A.CHI_YU,A.IRON_VALIANT,A.MUNKIDORI,A.IRON_BOULDER,A.IRON_CROWN,A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.HISUI_ZOROARK,A.HISUI_BRAVIARY],[E.AGILITY]:[A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.VULPIX,A.NINETALES,A.ZUBAT,A.GOLBAT,A.PARAS,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.FARFETCHD,A.DODUO,A.DODRIO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.HITMONCHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARMIE,A.SCYTHER,A.JOLTEON,A.PORYGON,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.FERALIGATR,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.AIPOM,A.GIRAFARIG,A.DUNSPARCE,A.GLIGAR,A.QWILFISH,A.SCIZOR,A.SNEASEL,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.KINGDRA,A.PORYGON2,A.STANTLER,A.HITMONTOP,A.RAIKOU,A.ENTEI,A.SUICUNE,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.NINJASK,A.SHEDINJA,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.CARVANHA,A.SHARPEDO,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.GOREBYSS,A.LUVDISC,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.LUXRAY,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.CHATOT,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.FINNEON,A.LUMINEON,A.MANTYKE,A.WEAVILE,A.GLISCOR,A.PORYGON_Z,A.GALLADE,A.ARCEUS,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.SEWADDLE,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.BASCULIN,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.ELGYEM,A.BEHEEYEM,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.RUFFLET,A.BRAVIARY,A.DURANT,A.TORNADUS,A.THUNDURUS,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.HELIOPTILE,A.HELIOLISK,A.HAWLUCHA,A.DEDENNE,A.NOIBAT,A.NOIVERN,A.VIKAVOLT,A.ORICORIO,A.RIBOMBEE,A.LYCANROC,A.SALANDIT,A.SALAZZLE,A.TOGEDEMARU,A.BRUXISH,A.TAPU_KOKO,A.SOLGALEO,A.LUNALA,A.PHEROMOSA,A.MAGEARNA,A.MARSHADOW,A.ZERAORA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.WOOLOO,A.DUBWOOL,A.BOLTUND,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.HATTERENE,A.FALINKS,A.EISCUE,A.MORPEKO,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.REGIELEKI,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.QUAQUAVAL,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.WATTREL,A.KILOWATTREL,A.FLITTLE,A.ESPATHRA,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.CYCLIZAR,A.FLAMIGO,A.VELUZA,A.FARIGIRAF,A.DUDUNSPARCE,A.IRON_BUNDLE,A.IRON_MOTH,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.FEZANDIPITI,A.IRON_BOULDER,[A.DEOXYS,"speed"],A.ALOLA_RAICHU,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY],[E.NIGHT_SHADE]:[A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.VENONAT,A.VENOMOTH,A.KADABRA,A.ALAKAZAM,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.SPINARAK,A.ARIADOS,A.NATU,A.XATU,A.MURKROW,A.MISDREAVUS,A.GARDEVOIR,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.DEOXYS,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.BRONZONG,A.CHATOT,A.SPIRITOMB,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.DARKRAI,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.GOLETT,A.GOLURK,A.DELPHOX,A.PHANTUMP,A.TREVENANT,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.SANDYGAST,A.PALOSSAND,A.MIMIKYU,A.LUNALA,A.BLACEPHALON,A.SINISTEA,A.POLTEAGEIST,A.CURSOLA,A.RUNERIGUS,A.DRAKLOAK,A.DRAGAPULT,A.SPECTRIER,A.BASCULEGION,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.BRAMBLIN,A.BRAMBLEGHAST,A.ESPATHRA,A.GREAVARD,A.HOUNDSTONE,A.ANNIHILAPE,A.FARIGIRAF,A.FLUTTER_MANE,A.GIMMIGHOUL,A.GHOLDENGO,A.POLTCHAGEIST,A.SINISTCHA,A.MUNKIDORI,A.PECHARUNT,A.GALAR_CORSOLA,A.GALAR_YAMASK,[A.CALYREX,"shadow"],A.HISUI_TYPHLOSION,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.SCREECH]:[A.RATTATA,A.EKANS,A.ARBOK,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GOLBAT,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.TENTACOOL,A.TENTACRUEL,A.MAGNEMITE,A.MAGNETON,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.ONIX,A.VOLTORB,A.ELECTRODE,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.KOFFING,A.WEEZING,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.IGGLYBUFF,A.MAREEP,A.POLITOED,A.AIPOM,A.YANMA,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNEASEL,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.ELEKID,A.MAGBY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.SHIFTRY,A.NINJASK,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.ARON,A.LAIRON,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.VIBRAVA,A.FLYGON,A.SEVIPER,A.ANORITH,A.ARMALDO,A.KECLEON,A.SHUPPET,A.BANETTE,A.HUNTAIL,A.KRICKETUNE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.VESPIQUEN,A.AMBIPOM,A.STUNKY,A.SKUNTANK,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.ELECTIVIRE,A.MAGMORTAR,A.YANMEGA,A.GLISCOR,A.OSHAWOTT,A.PATRAT,A.PURRLOIN,A.LIEPARD,A.BLITZLE,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.MARACTUS,A.GARBODOR,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.KLINK,A.KLANG,A.KLINKLANG,A.ELGYEM,A.BEHEEYEM,A.PAWNIARD,A.BISHARP,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.GENESECT,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.BINACLE,A.BARBARACLE,A.NOIBAT,A.NOIVERN,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.WIMPOD,A.GOLISOPOD,A.PYUKUMUKU,A.MIMIKYU,A.BRUXISH,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.KARTANA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.SILICOBRA,A.SANDACONDA,A.TOXTRICITY,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.MR_RIME,A.FALINKS,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.ETERNATUS,A.REGIELEKI,A.SNEASLER,A.NYMBLE,A.LOKIX,A.TOEDSCOOL,A.TOEDSCRUEL,A.VAROOM,A.REVAVROOM,A.ANNIHILAPE,A.DUDUNSPARCE,A.SANDY_SHOCKS,A.IRON_MOTH,A.IRON_THORNS,A.KORAIDON,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ZAPDOS,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_STUNFISK,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_SNEASEL],[E.DOUBLE_TEAM]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.NAGANADEL,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.CONFUSE_RAY]:[A.VULPIX,A.NINETALES,A.ZUBAT,A.GOLBAT,A.VENONAT,A.VENOMOTH,A.PSYDUCK,A.GOLDUCK,A.TENTACOOL,A.TENTACRUEL,A.MAGNEMITE,A.MAGNETON,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.HYPNO,A.STARYU,A.STARMIE,A.MR_MIME,A.MAGMAR,A.LAPRAS,A.KABUTO,A.KABUTOPS,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.CHINCHOU,A.LANTURN,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.ESPEON,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.GIRAFARIG,A.CORSOLA,A.MANTINE,A.STANTLER,A.MAGBY,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHEDINJA,A.SABLEYE,A.VOLBEAT,A.ILLUMISE,A.SPOINK,A.GRUMPIG,A.LILEEP,A.CRADILY,A.FEEBAS,A.MILOTIC,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.JIRACHI,A.SHINX,A.LUXIO,A.LUXRAY,A.VESPIQUEN,A.MISMAGIUS,A.HONCHKROW,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.SKORUPI,A.DRAPION,A.FINNEON,A.LUMINEON,A.MANTYKE,A.MAGNEZONE,A.MAGMORTAR,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.WATCHOG,A.ZORUA,A.ZOROARK,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.EELEKTROSS,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.CRYOGONAL,A.GOLETT,A.GOLURK,A.DELPHOX,A.VIVILLON,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.MORELULL,A.SHIINOTIC,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.MIMIKYU,A.LUNALA,A.MAGEARNA,A.BLACEPHALON,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.CURSOLA,A.MR_RIME,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.SPECTRIER,A.WYRDEER,A.BASCULEGION,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FARIGIRAF,A.BRUTE_BONNET,A.FLUTTER_MANE,A.IRON_MOTH,A.GIMMIGHOUL,A.GHOLDENGO,A.CHI_YU,A.IRON_VALIANT,A.MIRAIDON,A.MUNKIDORI,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MR_MIME,A.GALAR_CORSOLA,[A.CALYREX,"shadow"],A.HISUI_TYPHLOSION,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.LIGHT_SCREEN]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PARAS,A.PARASECT,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.CLOYSTER,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CHANSEY,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.JOLTEON,A.ARTICUNO,A.ZAPDOS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.LEDYBA,A.LEDIAN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.ESPEON,A.UMBREON,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.SCIZOR,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.STANTLER,A.SMOOCHUM,A.ELEKID,A.BLISSEY,A.RAIKOU,A.LUGIA,A.HO_OH,A.CELEBI,A.DUSTOX,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.AZURILL,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.FEEBAS,A.MILOTIC,A.CHIMECHO,A.SNORUNT,A.GLALIE,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.SNOVER,A.ABOMASNOW,A.MAGNEZONE,A.ELECTIVIRE,A.TOGEKISS,A.MAMOSWINE,A.GALLADE,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.MANAPHY,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.WATCHOG,A.MUNNA,A.MUSHARNA,A.BLITZLE,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.WHIMSICOTT,A.LILLIGANT,A.SIGILYPH,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.CRYOGONAL,A.LARVESTA,A.VOLCARONA,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.MELOETTA,A.GENESECT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.HELIOPTILE,A.HELIOLISK,A.AMAURA,A.AURORUS,A.SYLVEON,A.DEDENNE,A.CARBINK,A.KLEFKI,A.PUMPKABOO,A.GOURGEIST,A.XERNEAS,A.DIANCIE,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PRIMARINA,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CUTIEFLY,A.RIBOMBEE,A.TOXAPEX,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PYUKUMUKU,A.MINIOR,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.XURKITREE,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.BLACEPHALON,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.GOSSIFLEUR,A.ELDEGOSS,A.APPLETUN,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.CURSOLA,A.MR_RIME,A.ALCREMIE,A.FROSMOTH,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.ZAMAZENTA,A.ETERNATUS,A.REGIELEKI,A.REGIDRAGO,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.ARBOLIVA,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.TOEDSCOOL,A.TOEDSCRUEL,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.GLIMMET,A.GLIMMORA,A.FARIGIRAF,A.SCREAM_TAIL,A.SANDY_SHOCKS,A.IRON_MOTH,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHI_YU,A.IRON_VALIANT,A.MIRAIDON,A.MUNKIDORI,A.FEZANDIPITI,A.ARCHALUDON,A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_SLOWKING,A.GALAR_CORSOLA,[A.INDEEDEE,"female"]],[E.HAZE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.EKANS,A.ARBOK,A.ZUBAT,A.GOLBAT,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.KOFFING,A.WEEZING,A.GOLDEEN,A.SEAKING,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.ARTICUNO,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.NATU,A.XATU,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.MURKROW,A.QWILFISH,A.SWINUB,A.PILOSWINE,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SURSKIT,A.MASQUERAIN,A.SWABLU,A.ALTARIA,A.SEVIPER,A.FEEBAS,A.MILOTIC,A.DUSKULL,A.DUSCLOPS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.DRIFLOON,A.DRIFBLIM,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.MANTYKE,A.GLACEON,A.MAMOSWINE,A.DUSKNOIR,A.FROSLASS,A.PHIONE,A.MANAPHY,A.DARKRAI,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.CRYOGONAL,A.ZEKROM,A.GRENINJA,A.SKRELP,A.DRAGALGE,A.AMAURA,A.AURORUS,A.TREVENANT,A.ZYGARDE,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PRIMARINA,A.MAREANIE,A.TOXAPEX,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.RUNERIGUS,A.SPECTRIER,A.OVERQWIL,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CLODSIRE,A.CHIEN_PAO,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_CORSOLA,A.GALAR_YAMASK,[A.CALYREX,"shadow"],A.HISUI_QWILFISH,A.HISUI_DECIDUEYE,A.PALDEA_WOOPER],[E.REFLECT]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.PIKACHU,A.RAICHU,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.GROWLITHE,A.ARCANINE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SHELLDER,A.CLOYSTER,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CHANSEY,A.TANGELA,A.STARYU,A.STARMIE,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.ESPEON,A.UMBREON,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.SNUBBULL,A.GRANBULL,A.SNEASEL,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.STANTLER,A.SMOOCHUM,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LUGIA,A.HO_OH,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.CHIMECHO,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BASTIODON,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.WEAVILE,A.MAGNEZONE,A.TANGROWTH,A.ELECTIVIRE,A.TOGEKISS,A.MAMOSWINE,A.GALLADE,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.MANAPHY,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.LEAVANNY,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.CRYOGONAL,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.KELDEO,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.DELPHOX,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.INKAY,A.MALAMAR,A.AMAURA,A.AURORUS,A.SYLVEON,A.CARBINK,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.XERNEAS,A.DIANCIE,A.HOOPA,A.PRIMARINA,A.CUTIEFLY,A.RIBOMBEE,A.ARAQUANID,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.ORANGURU,A.PYUKUMUKU,A.MINIOR,A.TOGEDEMARU,A.BRUXISH,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.XURKITREE,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.CURSOLA,A.MR_RIME,A.FROSMOTH,A.EISCUE,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.ZAMAZENTA,A.ETERNATUS,A.REGIELEKI,A.REGIDRAGO,A.CALYREX,A.WYRDEER,A.ARBOLIVA,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.TOEDSCOOL,A.TOEDSCRUEL,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.GLIMMET,A.GLIMMORA,A.FARIGIRAF,A.SCREAM_TAIL,A.SANDY_SHOCKS,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHI_YU,A.IRON_VALIANT,A.MIRAIDON,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.ARCHALUDON,A.HYDRAPPLE,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_EXEGGUTOR,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_CORSOLA,[A.INDEEDEE,"female"],A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.FOCUS_ENERGY]:[A.BEEDRILL,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.MANKEY,A.PRIMEAPE,A.MACHOP,A.MACHOKE,A.MACHAMP,A.FARFETCHD,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.SCYTHER,A.MAGMAR,A.PINSIR,A.TAUROS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.MEW,A.SENTRET,A.FURRET,A.ARIADOS,A.ESPEON,A.UMBREON,A.SCIZOR,A.TEDDIURSA,A.REMORAID,A.OCTILLERY,A.KINGDRA,A.PHANPY,A.TYROGUE,A.HITMONTOP,A.MAGBY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.TAILLOW,A.SWELLOW,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.CARVANHA,A.SHARPEDO,A.NUMEL,A.CAMERUPT,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.KRICKETUNE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.DRIFLOON,A.DRIFBLIM,A.STUNKY,A.SKUNTANK,A.LUCARIO,A.MAGMORTAR,A.LEAFEON,A.GLACEON,A.VICTINI,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.AXEW,A.FRAXURE,A.HAXORUS,A.MIENFOO,A.MIENSHAO,A.BOUFFALANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.PANGORO,A.SYLVEON,A.VOLCANION,A.PASSIMIAN,A.BUZZWOLE,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.BOLTUND,A.FLAPPLE,A.ARROKUDA,A.BARRASKEWDA,A.GRIMMSNARL,A.OBSTAGOON,A.SIRFETCHD,A.FALINKS,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.REGIDRAGO,A.KLEAVOR,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.FINIZEN,A.PALAFIN,A.FLAMIGO,A.VELUZA,A.ANNIHILAPE,A.IRON_HANDS,A.IRON_JUGULIS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ROARING_MOON,A.OGERPON,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.PIKACHU,A.ALOLA_MAROWAK,[A.LYCANROC,"dusk"],A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_SAMUROTT],[E.METRONOME]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.GRIMER,A.MUK,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.HITMONLEE,A.HITMONCHAN,A.CHANSEY,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.CLEFFA,A.TOGEPI,A.TOGETIC,A.MARILL,A.AZUMARILL,A.POLITOED,A.AIPOM,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.TEDDIURSA,A.URSARING,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.CELEBI,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.SWALOT,A.GRUMPIG,A.SPINDA,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSCLOPS,A.JIRACHI,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.FLOATZEL,A.AMBIPOM,A.HAPPINY,A.MUNCHLAX,A.LUCARIO,A.WEAVILE,A.TOGEKISS,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.GOTHORITA,A.GOTHITELLE,A.TORNADUS,A.MELOETTA,A.DELPHOX,A.FLOETTE,A.FLORGES,A.AROMATISSE,A.SLURPUFF,A.DIANCIE,A.INTELEON,A.TOXTRICITY,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.MR_RIME,A.ALCREMIE,A.INDEEDEE,A.CALYREX,A.URSALUNA,A.PAWMOT,A.ARBOLIVA,A.SHROODLE,A.GRAFAIAI,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.ANNIHILAPE,A.SCREAM_TAIL,A.IRON_HANDS,A.IRON_VALIANT,A.MUNKIDORI,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.HISUI_LILLIGANT],[E.SELF_DESTRUCT]:[A.JIGGLYPUFF,A.WIGGLYTUFF,A.GEODUDE,A.GRAVELER,A.GOLEM,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.KOFFING,A.WEEZING,A.SNORLAX,A.MEWTWO,A.MEW,A.SUDOWOODO,A.PINECO,A.FORRETRESS,A.STEELIX,A.QWILFISH,A.SLUGMA,A.MAGCARGO,A.CORSOLA,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.NOSEPASS,A.GULPIN,A.SWALOT,A.WAILMER,A.WAILORD,A.CAMERUPT,A.TORKOAL,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.GLALIE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.DRIFLOON,A.DRIFBLIM,A.BONSLY,A.MUNCHLAX,A.MAGNEZONE,A.LICKILICKY,A.AZELF,A.HEATRAN,A.GIGALITH,A.TRUBBISH,A.GARBODOR,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FERROSEED,A.FERROTHORN,A.CRYOGONAL,A.GOLETT,A.GOLURK,A.LANDORUS,A.GENESECT,A.VOLCANION,A.SILVALLY,A.MINIOR,A.CELESTEELA,A.MAGEARNA,A.BLACEPHALON,A.MELMETAL,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.POLTEAGEIST,A.CURSOLA,A.PINCURCHIN,A.STONJOURNER,A.REGIELEKI,A.REGIDRAGO,A.VAROOM,A.GLIMMET,A.GLIMMORA,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.GALAR_WEEZING,A.GALAR_CORSOLA,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_QWILFISH],[E.FIRE_BLAST]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GROWLITHE,A.ARCANINE,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MAGMAR,A.TAUROS,A.GYARADOS,A.FLAREON,A.AERODACTYL,A.SNORLAX,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.SLOWKING,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.SLUGMA,A.MAGCARGO,A.REMORAID,A.OCTILLERY,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.BLISSEY,A.ENTEI,A.TYRANITAR,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAWILE,A.AGGRON,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.FLYGON,A.ALTARIA,A.ZANGOOSE,A.SOLROCK,A.CASTFORM,A.KECLEON,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.GROUDON,A.RAYQUAZA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.STUNKY,A.SKUNTANK,A.HAPPINY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.LICKILICKY,A.RHYPERIOR,A.MAGMORTAR,A.TOGEKISS,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.AUDINO,A.DARUMAKA,A.DARMANITAN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.HEATMOR,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.RESHIRAM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.GOODRA,A.PUMPKABOO,A.GOURGEIST,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SALANDIT,A.SALAZZLE,A.TURTONATOR,A.DRAMPA,A.SOLGALEO,A.CELESTEELA,A.GUZZLORD,A.NAGANADEL,A.BLACEPHALON,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.CARKOL,A.COALOSSAL,A.CENTISKORCH,A.DRACOZOLT,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.SCOVILLAIN,A.DUDUNSPARCE,A.SCREAM_TAIL,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.GOUGING_FIRE,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_GOODRA,[A.PALDEA_TAUROS,"blaze"]],[E.WATERFALL]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.REMORAID,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.SUICUNE,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.AZURILL,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.FINNEON,A.LUMINEON,A.MANTYKE,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.DEWPIDER,A.ARAQUANID,A.WIMPOD,A.GOLISOPOD,A.BRUXISH,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.ARROKUDA,A.BARRASKEWDA,A.CLOBBOPUS,A.GRAPPLOCT,A.EISCUE,A.DRACOVISH,A.ARCTOVISH,A.BASCULEGION,A.OVERQWIL,A.FINIZEN,A.PALAFIN,A.VELUZA,A.DONDOZO,A.CLODSIRE,A.WALKING_WAKE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,[A.URSHIFU,"rapid-strike"],A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.PALDEA_WOOPER],[E.SWIFT]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.VENONAT,A.VENOMOTH,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.WEEPINBELL,A.VICTREEBEL,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.MUK,A.SHELLDER,A.CLOYSTER,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.CHANSEY,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.SCYTHER,A.ELECTABUZZ,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.POLITOED,A.AIPOM,A.YANMA,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.GLIGAR,A.QWILFISH,A.SCIZOR,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.ELEKID,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.NINJASK,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.SKITTY,A.DELCATTY,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.CARVANHA,A.SHARPEDO,A.SPOINK,A.GRUMPIG,A.SPINDA,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.CHIMECHO,A.ABSOL,A.HUNTAIL,A.GOREBYSS,A.LUVDISC,A.SALAMENCE,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,[A.DEOXYS,"","speed"],A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.CHATOT,A.GIBLE,A.GABITE,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.FINNEON,A.LUMINEON,A.MANTYKE,A.WEAVILE,A.MAGNEZONE,A.ELECTIVIRE,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.COTTONEE,A.WHIMSICOTT,A.BASCULIN,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.DUCKLETT,A.SWANNA,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.COBALION,A.TERRAKION,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.HELIOPTILE,A.HELIOLISK,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.KLEFKI,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.LYCANROC,A.SALANDIT,A.SALAZZLE,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.ORANGURU,A.WIMPOD,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.TOGEDEMARU,A.DRAMPA,A.TAPU_KOKO,A.SOLGALEO,A.LUNALA,A.PHEROMOSA,A.MAGEARNA,A.MARSHADOW,A.NAGANADEL,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.YAMPER,A.BOLTUND,A.ARROKUDA,A.BARRASKEWDA,A.TOXTRICITY,A.HATENNA,A.HATTREM,A.HATTERENE,A.OBSTAGOON,A.PINCURCHIN,A.FROSMOTH,A.INDEEDEE,A.MORPEKO,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.TOEDSCOOL,A.TOEDSCRUEL,A.FLITTLE,A.ESPATHRA,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.ANNIHILAPE,A.FARIGIRAF,A.FLUTTER_MANE,A.SANDY_SHOCKS,A.IRON_BUNDLE,A.IRON_MOTH,A.IRON_VALIANT,A.WALKING_WAKE,A.IRON_LEAVES,A.MUNKIDORI,A.FEZANDIPITI,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.AMNESIA]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.SLOWPOKE,A.SLOWBRO,A.KRABBY,A.KINGLER,A.LICKITUNG,A.TANGELA,A.SNORLAX,A.MEWTWO,A.MEW,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.CHINCHOU,A.LANTURN,A.CLEFFA,A.MARILL,A.AZUMARILL,A.POLITOED,A.HOPPIP,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.WOBBUFFET,A.GIRAFARIG,A.DUNSPARCE,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.MANTINE,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.GULPIN,A.SWALOT,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.BARBOACH,A.WHISCASH,A.LILEEP,A.CRADILY,A.CASTFORM,A.WYNAUT,A.GOREBYSS,A.RELICANTH,A.REGICE,A.REGISTEEL,A.JIRACHI,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BIDOOF,A.BIBAREL,A.SHELLOS,A.GASTRODON,A.DRIFLOON,A.DRIFBLIM,A.MUNCHLAX,A.HIPPOPOTAS,A.HIPPOWDON,A.MANTYKE,A.LICKILICKY,A.TANGROWTH,A.TOGEKISS,A.MAMOSWINE,A.UXIE,A.PANSEAR,A.SIMISEAR,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SCRAGGY,A.SCRAFTY,A.TRUBBISH,A.GARBODOR,A.BOUFFALANT,A.HEATMOR,A.LARVESTA,A.VOLCARONA,A.SWIRLIX,A.SLURPUFF,A.DIANCIE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CRABRAWLER,A.CRABOMINABLE,A.MORELULL,A.SHIINOTIC,A.COMFEY,A.SANDYGAST,A.PALOSSAND,A.DRAMPA,A.GUZZLORD,A.SKWOVET,A.GREEDENT,A.APPLETUN,A.CRAMORANT,A.PERRSERKER,A.CURSOLA,A.RUNERIGUS,A.EISCUE,A.CETODDLE,A.CETITAN,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,[A.DEOXYS,"defense"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.PALDEA_WOOPER],[E.DREAM_EATER]:[A.BUTTERFREE,A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.VENOMOTH,A.MEOWTH,A.PERSIAN,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.LICKITUNG,A.CHANSEY,A.STARMIE,A.MR_MIME,A.JYNX,A.LAPRAS,A.PORYGON,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.AIPOM,A.YANMA,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.GLIGAR,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.BLISSEY,A.LUGIA,A.HO_OH,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHEDINJA,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.GULPIN,A.SWALOT,A.SPOINK,A.GRUMPIG,A.SPINDA,A.SWABLU,A.ALTARIA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.WORMADAM,A.MOTHIM,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.WEAVILE,A.LICKILICKY,A.TOGEKISS,A.YANMEGA,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.GIRATINA,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.VIVILLON,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.AMAURA,A.AURORUS,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.HOOPA,A.CUTIEFLY,A.RIBOMBEE,A.MORELULL,A.SHIINOTIC,A.ORANGURU,A.MIMIKYU,A.BRUXISH,A.LUNALA,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.MAROWAK,A.GALAR_ARTICUNO],[E.LEECH_LIFE]:[A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.ZUBAT,A.GOLBAT,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.KABUTO,A.KABUTOPS,A.MEW,A.SPINARAK,A.ARIADOS,A.CROBAT,A.YANMA,A.BEAUTIFLY,A.DUSTOX,A.SURSKIT,A.MASQUERAIN,A.NINCADA,A.NINJASK,A.SHEDINJA,A.DUSKULL,A.DUSCLOPS,A.KRICKETUNE,A.DRAPION,A.YANMEGA,A.DUSKNOIR,A.JOLTIK,A.GALVANTULA,A.SHELMET,A.ACCELGOR,A.LARVESTA,A.VOLCARONA,A.GENESECT,A.NOIBAT,A.NOIVERN,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.CUTIEFLY,A.RIBOMBEE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.WIMPOD,A.GOLISOPOD,A.MIMIKYU,A.BUZZWOLE,A.NAGANADEL,A.DOTTLER,A.ORBEETLE,A.SIZZLIPEDE,A.CENTISKORCH,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.CURSOLA,A.FROSMOTH,A.DRACOVISH,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.RELLOR,A.RABSCA,A.SLITHER_WING,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH],[E.FLASH]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BUTTERFREE,A.BEEDRILL,A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.KOFFING,A.WEEZING,A.CHANSEY,A.TANGELA,A.STARYU,A.STARMIE,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.JOLTEON,A.PORYGON,A.ZAPDOS,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.SHUCKLE,A.SKARMORY,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.ELEKID,A.BLISSEY,A.RAIKOU,A.ENTEI,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.SPOINK,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.CHERUBI,A.CHERRIM,A.GASTRODON,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.SKORUPI,A.DRAPION,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.SNOVER,A.ABOMASNOW,A.MAGNEZONE,A.TANGROWTH,A.ELECTIVIRE,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.CRESSELIA,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.WATCHOG,A.PANSAGE,A.SIMISAGE,A.MUNNA,A.MUSHARNA,A.BLITZLE,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.STUNFISK,A.GOLETT,A.GOLURK,A.VIRIZION,A.ZEKROM,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.HELIOPTILE,A.HELIOLISK,A.AMAURA,A.AURORUS,A.SYLVEON,A.DEDENNE,A.CARBINK,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.XERNEAS,A.DIANCIE,A.HOOPA,A.MORELULL,A.SHIINOTIC,A.PERRSERKER,A.MR_RIME,A.RUNERIGUS,A.WYRDEER,A.CLODSIRE,A.FARIGIRAF,A.ALOLA_RAICHU,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_YAMASK,A.HISUI_LILLIGANT,A.HISUI_AVALUGG,A.PALDEA_WOOPER],[E.EXPLOSION]:[A.GEODUDE,A.GRAVELER,A.GOLEM,A.MAGNEMITE,A.MAGNETON,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.KOFFING,A.WEEZING,A.MEW,A.SUDOWOODO,A.PINECO,A.FORRETRESS,A.STEELIX,A.QWILFISH,A.MAGCARGO,A.CORSOLA,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.NOSEPASS,A.GULPIN,A.SWALOT,A.CAMERUPT,A.TORKOAL,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.GLALIE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.DRIFLOON,A.DRIFBLIM,A.STUNKY,A.SKUNTANK,A.BRONZONG,A.BONSLY,A.MAGNEZONE,A.LICKILICKY,A.PROBOPASS,A.AZELF,A.HEATRAN,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.TRUBBISH,A.GARBODOR,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FERROSEED,A.FERROTHORN,A.CRYOGONAL,A.LANDORUS,A.GENESECT,A.CARBINK,A.PUMPKABOO,A.GOURGEIST,A.DIANCIE,A.VOLCANION,A.SILVALLY,A.MINIOR,A.TURTONATOR,A.CELESTEELA,A.MAGEARNA,A.BLACEPHALON,A.ROLYCOLY,A.REGIELEKI,A.REGIDRAGO,A.GARGANACL,A.GLIMMET,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.GALAR_WEEZING,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.REST]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.ROCK_SLIDE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.GRIMER,A.MUK,A.ONIX,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.PINSIR,A.TAUROS,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.GRANBULL,A.SHUCKLE,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.MANTINE,A.SKARMORY,A.PHANPY,A.DONPHAN,A.TYROGUE,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.ZANGOOSE,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.KECLEON,A.DUSCLOPS,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.RELICANTH,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.EMPOLEON,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.SHELLOS,A.GASTRODON,A.BRONZOR,A.BRONZONG,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.MANTYKE,A.ABOMASNOW,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.DARKRAI,A.ARCEUS,A.PIGNITE,A.EMBOAR,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.DURANT,A.HYDREIGON,A.TERRAKION,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.HAWLUCHA,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.VOLCANION,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.SOLGALEO,A.NIHILEGO,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.STAKATAKA,A.MELMETAL,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.FALINKS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.URSHIFU,A.ZARUDE,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.BOMBIRDIER,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.DONDOZO,A.ANNIHILAPE,A.CLODSIRE,A.DUDUNSPARCE,A.GREAT_TUSK,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.TING_LU,A.ROARING_MOON,A.ARCHALUDON,A.TERAPAGOS,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_CORSOLA,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.TRI_ATTACK]:[A.SPEAROW,A.FEAROW,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DUGTRIO,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.MAGNETON,A.DODUO,A.DODRIO,A.SHELLDER,A.CLOYSTER,A.DROWZEE,A.HYPNO,A.CHANSEY,A.STARYU,A.STARMIE,A.PORYGON,A.MEWTWO,A.MEW,A.TOGEPI,A.TOGETIC,A.SLOWKING,A.PORYGON2,A.BLISSEY,A.LATIAS,A.LATIOS,A.MAGNEZONE,A.TOGEKISS,A.PORYGON_Z,A.PROBOPASS,A.UXIE,A.MESPRIT,A.AZELF,A.BEHEEYEM,A.HYDREIGON,A.GENESECT,A.TYPE_NULL,A.SILVALLY,A.MAGEARNA,A.ALCREMIE,A.INDEEDEE,A.DRAGAPULT,A.CALYREX,A.SANDY_SHOCKS,A.IRON_JUGULIS,A.TERAPAGOS,A.ALOLA_DUGTRIO,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING],[E.SUPER_FANG]:[A.RATTATA,A.RATICATE,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.ZUBAT,A.GOLBAT,A.MEW,A.SENTRET,A.FURRET,A.CROBAT,A.SNUBBULL,A.GRANBULL,A.HOUNDOUR,A.HOUNDOOM,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.MAWILE,A.PLUSLE,A.MINUN,A.CARVANHA,A.SHARPEDO,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.HUNTAIL,A.BIDOOF,A.BIBAREL,A.PACHIRISU,A.GLAMEOW,A.PURUGLY,A.SKUNTANK,A.CROAGUNK,A.TOXICROAK,A.PATRAT,A.WATCHOG,A.WOOBAT,A.SWOOBAT,A.SCRAGGY,A.SCRAFTY,A.MINCCINO,A.CINCCINO,A.EELEKTRIK,A.EELEKTROSS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.DEDENNE,A.NOIBAT,A.NOIVERN,A.YUNGOOS,A.GUMSHOOS,A.KOMALA,A.TOGEDEMARU,A.BRUXISH,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SKWOVET,A.GREEDENT,A.DREDNAW,A.MORPEKO,A.DRACOVISH,A.ARCTOVISH,A.LECHONK,A.OINKOLOGNE,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.SHROODLE,A.GRAFAIAI,A.CAPSAKID,A.SCOVILLAIN,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH],[E.SUBSTITUTE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.THIEF]:[A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.MEW,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.NATU,A.XATU,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.YANMA,A.QUAGSIRE,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.GLIGAR,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.BLISSEY,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINJASK,A.SHEDINJA,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.SPOINK,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.BONSLY,A.MIME_JR,A.CHATOT,A.SPIRITOMB,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.YANMEGA,A.GLISCOR,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.ROTOM,A.DARKRAI,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.WOOBAT,A.SWOOBAT,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.WHIMSICOTT,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.JOLTIK,A.GALVANTULA,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.CUBCHOO,A.BEARTIC,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.PANGORO,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HAWLUCHA,A.DEDENNE,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.HOOPA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.CUTIEFLY,A.RIBOMBEE,A.SALANDIT,A.SALAZZLE,A.COMFEY,A.PASSIMIAN,A.KOMALA,A.TOGEDEMARU,A.MIMIKYU,A.DHELMISE,A.TAPU_KOKO,A.TAPU_LELE,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.NAGANADEL,A.BLACEPHALON,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.CRAMORANT,A.TOXTRICITY,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.MR_RIME,A.RUNERIGUS,A.MORPEKO,A.DRAKLOAK,A.DRAGAPULT,A.ZARUDE,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.MEOWSCARADA,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.SQUAWKABILLY,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.BOMBIRDIER,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.BRUTE_BONNET,A.IRON_BUNDLE,A.GIMMIGHOUL,A.GHOLDENGO,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_MOLTRES,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.PALDEA_TAUROS,A.BLOODMOON_URSALUNA],[E.SNORE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.CATERPIE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.WURMPLE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETOT,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BURMY,A.WORMADAM,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.URSALUNA,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK],[E.CURSE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.HARIYAMA,A.NOSEPASS,A.ARON,A.LAIRON,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.GULPIN,A.SWALOT,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.WHISCASH,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.REGIROCK,A.REGICE,A.REGISTEEL,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BIDOOF,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.BONSLY,A.SPIRITOMB,A.MUNCHLAX,A.HIPPOPOTAS,A.HIPPOWDON,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.GIRATINA,A.DARKRAI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.MUNNA,A.MUSHARNA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.SAWSBUCK,A.FERROSEED,A.FERROTHORN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.BEARTIC,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.GOLETT,A.GOLURK,A.HEATMOR,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.TYRUNT,A.TYRANTRUM,A.SYLVEON,A.GOOMY,A.SLIGGOO,A.GOODRA,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.GUMSHOOS,A.MUDBRAY,A.MUDSDALE,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.KOMALA,A.TURTONATOR,A.MIMIKYU,A.SKWOVET,A.GREEDENT,A.CORVIKNIGHT,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.SINISTEA,A.POLTEAGEIST,A.PERRSERKER,A.CURSOLA,A.RUNERIGUS,A.PINCURCHIN,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.GLASTRIER,A.SPECTRIER,[A.CALYREX,"ice","shadow"],A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.OVERQWIL,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CERULEDGE,A.MABOSSTIFF,A.BRAMBLIN,A.BRAMBLEGHAST,A.BOMBIRDIER,A.VAROOM,A.REVAVROOM,A.ORTHWORM,A.CETODDLE,A.CETITAN,A.DONDOZO,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.SLITHER_WING,A.IRON_THORNS,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.HYDRAPPLE,A.PECHARUNT,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER],[E.REVERSAL]:[A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.HITMONLEE,A.HITMONCHAN,A.RHYHORN,A.RHYDON,A.KANGASKHAN,A.SCYTHER,A.PINSIR,A.TAUROS,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SENTRET,A.FURRET,A.PICHU,A.YANMA,A.PINECO,A.FORRETRESS,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.SWINUB,A.PILOSWINE,A.DELIBIRD,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.HITMONTOP,A.MILTANK,A.ENTEI,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ZANGOOSE,A.SEVIPER,A.MONFERNO,A.INFERNAPE,A.VESPIQUEN,A.LOPUNNY,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.RHYPERIOR,A.YANMEGA,A.MAMOSWINE,A.GALLADE,A.VICTINI,A.PIGNITE,A.EMBOAR,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.DARMANITAN,A.SCRAFTY,A.ESCAVALIER,A.AXEW,A.FRAXURE,A.HAXORUS,A.BEARTIC,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.BISHARP,A.BOUFFALANT,A.BRAVIARY,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.KELDEO,A.MELOETTA,A.CHESNAUGHT,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.MALAMAR,A.HAWLUCHA,A.ZYGARDE,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,[A.LYCANROC,"midnight","dusk"],A.BEWEAR,A.PASSIMIAN,A.SILVALLY,A.KOMALA,A.TOGEDEMARU,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.BUZZWOLE,A.MARSHADOW,A.ZERAORA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.WOOLOO,A.DUBWOOL,A.CRAMORANT,A.CLOBBOPUS,A.GRAPPLOCT,A.OBSTAGOON,A.FALINKS,A.PINCURCHIN,A.EISCUE,A.MORPEKO,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.REGIDRAGO,A.KLEAVOR,A.SNEASLER,A.OVERQWIL,A.QUAQUAVAL,A.SPIDOPS,A.LOKIX,A.SQUAWKABILLY,A.MASCHIFF,A.MABOSSTIFF,A.KLAWF,A.PALAFIN,A.FLAMIGO,A.ANNIHILAPE,A.KINGAMBIT,A.GREAT_TUSK,A.SLITHER_WING,A.IRON_HANDS,A.IRON_VALIANT,A.KORAIDON,A.IRON_LEAVES,A.OKIDOGI,A.OGERPON,A.GOUGING_FIRE,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,[A.LYCANROC,"midnight","dusk"],A.GALAR_ZAPDOS,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,[A.BASCULIN,"blue-striped","red-striped"]],[E.SPITE]:[A.EKANS,A.ARBOK,A.VULPIX,A.NINETALES,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.KANGASKHAN,A.TAUROS,A.GYARADOS,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.HOOTHOOT,A.NOCTOWL,A.SPINARAK,A.ARIADOS,A.AIPOM,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.DUNSPARCE,A.QWILFISH,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.STANTLER,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.CACNEA,A.CACTURNE,A.CORPHISH,A.CRAWDAUNT,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.ABSOL,A.SNORUNT,A.GLALIE,A.CRANIDOS,A.RAMPARDOS,A.VESPIQUEN,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.SPIRITOMB,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.RHYPERIOR,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.GIRATINA,A.DARKRAI,A.PURRLOIN,A.LIEPARD,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.FRILLISH,A.JELLICENT,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.STUNFISK,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.INKAY,A.MALAMAR,A.SKRELP,A.DRAGALGE,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ZYGARDE,A.DECIDUEYE,A.MAREANIE,A.TOXAPEX,A.ORANGURU,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.MIMIKYU,A.DHELMISE,A.LUNALA,A.NIHILEGO,A.BLACEPHALON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.SINISTEA,A.POLTEAGEIST,A.PERRSERKER,A.CURSOLA,A.MORPEKO,A.WYRDEER,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.LOKIX,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.MABOSSTIFF,A.BRAMBLIN,A.BRAMBLEGHAST,A.ANNIHILAPE,A.DUDUNSPARCE,A.KINGAMBIT,A.FLUTTER_MANE,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.PECHARUNT,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.MAROWAK,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MOLTRES,A.GALAR_CORSOLA,A.GALAR_STUNFISK,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.PROTECT]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BURMY,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.SPEWPA,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.SCARY_FACE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.RATICATE,A.SPEAROW,A.EKANS,A.ARBOK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.VICTREEBEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.GRIMER,A.MUK,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.HYPNO,A.ELECTRODE,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.SCYTHER,A.MAGMAR,A.TAUROS,A.GYARADOS,A.FLAREON,A.AERODACTYL,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.NOCTOWL,A.SPINARAK,A.ARIADOS,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SNEASEL,A.URSARING,A.SWINUB,A.PILOSWINE,A.HOUNDOUR,A.HOUNDOOM,A.DONPHAN,A.STANTLER,A.MAGBY,A.ENTEI,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.MASQUERAIN,A.VIGOROTH,A.SLAKING,A.HARIYAMA,A.AGGRON,A.MANECTRIC,A.CARVANHA,A.SHARPEDO,A.NUMEL,A.CAMERUPT,A.CACNEA,A.CACTURNE,A.SEVIPER,A.WHISCASH,A.CRAWDAUNT,A.SHUPPET,A.BANETTE,A.GLALIE,A.HUNTAIL,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.VESPIQUEN,A.FLOATZEL,A.MISMAGIUS,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.RHYPERIOR,A.MAGMORTAR,A.YANMEGA,A.GLISCOR,A.MAMOSWINE,A.FROSLASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.GIRATINA,A.CRESSELIA,A.ARCEUS,A.SAMUROTT,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.COFAGRIGUS,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.KARRABLAST,A.ESCAVALIER,A.AMOONGUSS,A.EELEKTRIK,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.BEARTIC,A.CRYOGONAL,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.KYUREM,A.CHESNAUGHT,A.PANGORO,A.MALAMAR,A.SKRELP,A.DRAGALGE,A.CLAWITZER,A.TYRUNT,A.TYRANTRUM,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.AVALUGG,A.NOIVERN,A.HOOPA,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.TOXAPEX,A.MUDSDALE,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.BRUXISH,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.SOLGALEO,A.LUNALA,A.NECROZMA,A.ZERAORA,A.THWACKEY,A.RILLABOOM,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CHEWTLE,A.DREDNAW,A.FLAPPLE,A.SILICOBRA,A.SANDACONDA,A.BARRASKEWDA,A.TOXTRICITY,A.GRAPPLOCT,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.RUNERIGUS,A.MORPEKO,A.COPPERAJAH,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.OVERQWIL,A.ENAMORUS,A.SKELEDIRGE,A.SPIDOPS,A.LOKIX,A.DACHSBUN,A.SQUAWKABILLY,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.SCOVILLAIN,A.BOMBIRDIER,A.VAROOM,A.REVAVROOM,A.GREAVARD,A.HOUNDSTONE,A.DONDOZO,A.ANNIHILAPE,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.IRON_TREADS,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_THORNS,A.ARCTIBAX,A.BAXCALIBUR,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.OKIDOGI,A.OGERPON,A.ARCHALUDON,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.ALOLA_RATICATE,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_ELECTRODE,A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.BLOODMOON_URSALUNA],[E.SLUDGE_BOMB]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BEEDRILL,A.RATTATA,A.RATICATE,A.EKANS,A.ARBOK,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.EXEGGCUTE,A.EXEGGUTOR,A.KOFFING,A.WEEZING,A.TANGELA,A.MEW,A.SPINARAK,A.ARIADOS,A.CROBAT,A.BELLOSSOM,A.SUNKERN,A.SUNFLORA,A.WOOPER,A.QUAGSIRE,A.GLIGAR,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SHUCKLE,A.OCTILLERY,A.HOUNDOUR,A.HOUNDOOM,A.DUSTOX,A.SHROOMISH,A.BRELOOM,A.MAWILE,A.ROSELIA,A.GULPIN,A.SWALOT,A.TORKOAL,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.LILEEP,A.CRADILY,A.METANG,A.METAGROSS,A.BUDEW,A.ROSERADE,A.VESPIQUEN,A.GASTRODON,A.STUNKY,A.SKUNTANK,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.TANGROWTH,A.GLISCOR,A.DARKRAI,A.ARCEUS,A.DRILBUR,A.EXCADRILL,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.DRUDDIGON,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.GOOMY,A.SLIGGOO,A.GOODRA,A.PUMPKABOO,A.GOURGEIST,A.VOLCANION,A.MAREANIE,A.TOXAPEX,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.NIHILEGO,A.GUZZLORD,A.POIPOLE,A.NAGANADEL,A.TOXTRICITY,A.ETERNATUS,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.RELLOR,A.RABSCA,A.VAROOM,A.REVAVROOM,A.GLIMMET,A.GLIMMORA,A.CLODSIRE,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_STUNFISK,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.PALDEA_WOOPER],[E.MUD_SLAP]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWPOKE,A.SLOWBRO,A.FARFETCHD,A.DODUO,A.DODRIO,A.GRIMER,A.MUK,A.ONIX,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.GOLDEEN,A.SEAKING,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.GIRAFARIG,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SHUCKLE,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.MILOTIC,A.KECLEON,A.BANETTE,A.DUSCLOPS,A.TROPIUS,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.BAGON,A.SHELGON,A.SALAMENCE,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETOT,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.LILLIPUP,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.TYMPOLE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.MINCCINO,A.CUBCHOO,A.BEARTIC,A.SHELMET,A.STUNFISK,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.LANDORUS,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,[A.LYCANROC,"midday","midnight"],A.MUDBRAY,A.MUDSDALE,A.SALANDIT,A.SALAZZLE,A.SANDYGAST,A.PALOSSAND,A.CINDERACE,A.SKWOVET,A.GREEDENT,A.ROLYCOLY,A.CARKOL,A.SILICOBRA,A.SANDACONDA,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.TADBULB,A.BELLIBOLT,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.WIGLETT,A.WUGTRIO,A.CYCLIZAR,A.ORTHWORM,A.GREAVARD,A.HOUNDSTONE,A.CLODSIRE,A.DUDUNSPARCE,A.GREAT_TUSK,A.IRON_TREADS,A.WO_CHIEN,A.TING_LU,A.KORAIDON,A.MUNKIDORI,[A.WORMADAM,"sandy"],A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_STUNFISK,A.PALDEA_WOOPER],[E.SPIKES]:[A.SANDSHREW,A.SANDSLASH,A.SHELLDER,A.CLOYSTER,A.OMANYTE,A.OMASTAR,A.MEW,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.PINECO,A.FORRETRESS,A.GLIGAR,A.QWILFISH,A.HERACROSS,A.DELIBIRD,A.SKARMORY,A.ROSELIA,A.CACNEA,A.CACTURNE,A.WHISCASH,A.SNORUNT,A.GLALIE,A.GROUDON,A.BUDEW,A.ROSERADE,A.VESPIQUEN,A.GASTRODON,A.BONSLY,A.GARCHOMP,A.GLISCOR,A.FROSLASS,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.TRUBBISH,A.GARBODOR,A.FERROSEED,A.FERROTHORN,A.SHELMET,A.ACCELGOR,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.CARBINK,A.KLEFKI,A.DIANCIE,A.WIMPOD,A.GOLISOPOD,A.MAGEARNA,A.NAGANADEL,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.PINCURCHIN,A.OVERQWIL,A.MEOWSCARADA,A.TAROUNTULA,A.SPIDOPS,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.CLODSIRE,A.SANDY_SHOCKS,A.IRON_THORNS,A.TING_LU,A.OGERPON,[A.DEOXYS,"defense"],A.ALOLA_SANDSLASH,A.HISUI_QWILFISH,A.PALDEA_WOOPER],[E.ICY_WIND]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.JYNX,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.ARTICUNO,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.CLEFFA,A.IGGLYBUFF,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.QWILFISH,A.SNEASEL,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.KINGDRA,A.PORYGON2,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SHIFTRY,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.AZURILL,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.SPOINK,A.GRUMPIG,A.SPINDA,A.ZANGOOSE,A.LUNATONE,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.METANG,A.METAGROSS,A.REGICE,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.JIRACHI,[A.DEOXYS,"","speed"],A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.MUNCHLAX,A.CROAGUNK,A.TOXICROAK,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.GLACEON,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.SIGILYPH,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.GOLETT,A.GOLURK,A.TORNADUS,A.KYUREM,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.BERGMITE,A.AVALUGG,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CRABOMINABLE,A.ORICORIO,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.BRUXISH,A.DRAMPA,A.TAPU_FINI,A.LUNALA,A.PHEROMOSA,A.INTELEON,A.CRAMORANT,A.OBSTAGOON,A.CURSOLA,A.MR_RIME,A.SNOM,A.FROSMOTH,A.EISCUE,A.ARCTOZOLT,A.ARCTOVISH,A.GLASTRIER,A.BASCULEGION,A.OVERQWIL,A.QUAQUAVAL,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.CETODDLE,A.CETITAN,A.VELUZA,A.TATSUGIRI,A.FLUTTER_MANE,A.IRON_BUNDLE,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.IRON_VALIANT,A.FEZANDIPITI,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,[A.CALYREX,"ice"],A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_AVALUGG],[E.OUTRAGE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BEEDRILL,A.NIDOQUEEN,A.NIDOKING,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.MAROWAK,A.RHYDON,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.MEGANIUM,A.FERALIGATR,A.AMPHAROS,A.GRANBULL,A.KINGDRA,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.SCEPTILE,A.SWAMPERT,A.VIGOROTH,A.SLAKING,A.EXPLOUD,A.AGGRON,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.BARBOACH,A.WHISCASH,A.TROPIUS,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.TORTERRA,A.RAMPARDOS,A.BASTIODON,A.GIBLE,A.GABITE,A.GARCHOMP,A.ABOMASNOW,A.RHYPERIOR,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.SERPERIOR,A.KROOKODILE,A.SCRAFTY,A.ARCHEOPS,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.BOUFFALANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.PANGORO,A.SKRELP,A.DRAGALGE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.GOOMY,A.SLIGGOO,A.GOODRA,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.ZYGARDE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SILVALLY,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.SOLGALEO,A.BUZZWOLE,A.PHEROMOSA,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.NAGANADEL,A.ZERAORA,A.FLAPPLE,A.APPLETUN,A.SANDACONDA,A.MORPEKO,A.COPPERAJAH,A.DRACOZOLT,A.DRACOVISH,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.REGIDRAGO,A.GLASTRIER,A.BASCULEGION,A.ENAMORUS,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.MABOSSTIFF,A.PALAFIN,A.CYCLIZAR,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.DUDUNSPARCE,A.BRUTE_BONNET,A.IRON_JUGULIS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.DIPPLIN,A.OKIDOGI,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight","dusk"],[A.CALYREX,"ice"],A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.PALDEA_TAUROS],[E.SANDSTORM]:[A.CHARIZARD,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DIGLETT,A.DUGTRIO,A.GEODUDE,A.GRAVELER,A.GOLEM,A.MAGNEMITE,A.MAGNETON,A.GRIMER,A.MUK,A.ONIX,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.TAUROS,A.GYARADOS,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEWTWO,A.MEW,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SCIZOR,A.SHUCKLE,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.SKARMORY,A.PHANPY,A.DONPHAN,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.NINCADA,A.NINJASK,A.SHEDINJA,A.NOSEPASS,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.CASTFORM,A.ABSOL,A.RELICANTH,A.METANG,A.METAGROSS,A.REGIROCK,A.REGISTEEL,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.TORTERRA,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.SHELLOS,A.GASTRODON,A.BRONZOR,A.BRONZONG,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.HIPPOPOTAS,A.HIPPOWDON,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.GLISCOR,A.MAMOSWINE,A.PROBOPASS,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.ARCEUS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.ACCELGOR,A.STUNFISK,A.PAWNIARD,A.BISHARP,A.MANDIBUZZ,A.DURANT,A.COBALION,A.TERRAKION,A.TORNADUS,A.LANDORUS,A.BUNNELBY,A.DIGGERSBY,A.BINACLE,A.BARBARACLE,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.CARBINK,A.KLEFKI,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.YUNGOOS,A.GUMSHOOS,A.ORICORIO,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.NIHILEGO,A.STAKATAKA,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.ZAMAZENTA,A.KLEAVOR,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.VAROOM,A.REVAVROOM,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.CLODSIRE,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_THORNS,A.GHOLDENGO,A.TING_LU,A.OGERPON,A.IRON_BOULDER,[A.WORMADAM,"sandy"],A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_SLOWBRO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_CORSOLA,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER],[E.GIGA_DRAIN]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BUTTERFREE,A.BEEDRILL,A.EKANS,A.ARBOK,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.KABUTO,A.KABUTOPS,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.NATU,A.XATU,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.YANMA,A.PINECO,A.FORRETRESS,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.LILEEP,A.CRADILY,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.KRICKETUNE,A.BUDEW,A.ROSERADE,A.WORMADAM,A.MOTHIM,A.CHERUBI,A.CHERRIM,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.YANMEGA,A.LEAFEON,A.UXIE,A.SHAYMIN,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.WOOBAT,A.SWOOBAT,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.TRUBBISH,A.GARBODOR,A.DEERLING,A.SAWSBUCK,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.EELEKTRIK,A.EELEKTROSS,A.SHELMET,A.ACCELGOR,A.HEATMOR,A.LARVESTA,A.VOLCARONA,A.VIRIZION,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.SANDYGAST,A.PALOSSAND,A.MIMIKYU,A.DHELMISE,A.TAPU_BULU,A.CELESTEELA,A.KARTANA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.ORBEETLE,A.GOSSIFLEUR,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.CURSOLA,A.ALCREMIE,A.FROSMOTH,A.ZARUDE,A.CALYREX,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.TAROUNTULA,A.SPIDOPS,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.BRUTE_BONNET,A.SLITHER_WING,A.WO_CHIEN,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OGERPON,A.HYDRAPPLE,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_CORSOLA,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.ENDURE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.CHARM]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.PIKACHU,A.RAICHU,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.CHANSEY,A.MR_MIME,A.JYNX,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.MEW,A.SENTRET,A.FURRET,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.ESPEON,A.UMBREON,A.MISDREAVUS,A.WOBBUFFET,A.SNUBBULL,A.GRANBULL,A.TEDDIURSA,A.URSARING,A.SWINUB,A.PILOSWINE,A.PHANPY,A.DONPHAN,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHROOMISH,A.BRELOOM,A.AZURILL,A.SKITTY,A.DELCATTY,A.PLUSLE,A.MINUN,A.ILLUMISE,A.NUMEL,A.CAMERUPT,A.CHIMECHO,A.WYNAUT,A.LUVDISC,A.LATIAS,A.JIRACHI,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.PACHIRISU,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.GLAMEOW,A.PURUGLY,A.MIME_JR,A.HAPPINY,A.MUNCHLAX,A.FINNEON,A.LUMINEON,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.MAMOSWINE,A.GALLADE,A.FROSLASS,A.MESPRIT,A.PHIONE,A.MANAPHY,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.WOOBAT,A.SWOOBAT,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.CUBCHOO,A.BEARTIC,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLABEBE,A.FLOETTE,A.FLORGES,A.FURFROU,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.TYRUNT,A.TYRANTRUM,A.SYLVEON,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.DIANCIE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.KOMALA,A.MIMIKYU,A.TAPU_LELE,A.POIPOLE,A.NAGANADEL,A.GOSSIFLEUR,A.ELDEGOSS,A.YAMPER,A.BOLTUND,A.TOXEL,A.TOXTRICITY,A.HATENNA,A.HATTREM,A.HATTERENE,A.PERRSERKER,A.MR_RIME,A.MILCERY,A.ALCREMIE,A.URSALUNA,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.MASCHIFF,A.MABOSSTIFF,A.FINIZEN,A.PALAFIN,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.FLUTTER_MANE,A.FEZANDIPITI,A.OGERPON,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_MR_MIME,[A.INDEEDEE,"female"],A.HISUI_LILLIGANT,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.FALSE_SWIPE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BEEDRILL,A.SPEAROW,A.FEAROW,A.SANDSHREW,A.SANDSLASH,A.PARAS,A.PARASECT,A.MEOWTH,A.PERSIAN,A.FARFETCHD,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.SCYTHER,A.PINSIR,A.JOLTEON,A.MEW,A.GLIGAR,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.GROVYLE,A.SCEPTILE,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.MAWILE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.ABSOL,A.EMPOLEON,A.KRICKETUNE,A.GIBLE,A.GABITE,A.GARCHOMP,A.SKORUPI,A.DRAPION,A.WEAVILE,A.GLISCOR,A.GALLADE,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.LEAVANNY,A.KARRABLAST,A.ESCAVALIER,A.AXEW,A.FRAXURE,A.HAXORUS,A.PAWNIARD,A.BISHARP,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.FOMANTIS,A.LURANTIS,A.GOLISOPOD,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_BULU,A.BUZZWOLE,A.PHEROMOSA,A.KARTANA,A.MAGEARNA,A.MARSHADOW,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.CHEWTLE,A.DREDNAW,A.PERRSERKER,A.FALINKS,A.ZACIAN,A.URSHIFU,A.KLEAVOR,A.SNEASLER,A.TAROUNTULA,A.SPIDOPS,A.CERULEDGE,A.KINGAMBIT,A.BAXCALIBUR,A.CHIEN_PAO,A.IRON_VALIANT,A.IRON_LEAVES,A.OGERPON,A.ALOLA_SANDSLASH,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_DECIDUEYE],[E.SWAGGER]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.BLACEPHALON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.WOOLOO,A.TOXTRICITY,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.MORPEKO,A.CUFANT,A.ZARUDE,A.SQUAWKABILLY,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.VAROOM,A.REVAVROOM,A.ANNIHILAPE,A.CHI_YU,A.FEZANDIPITI,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_SLOWKING,A.PALDEA_TAUROS],[E.STEEL_WING]:[A.CHARIZARD,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.FARFETCHD,A.DODUO,A.DODRIO,A.SCYTHER,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.TOGETIC,A.NATU,A.XATU,A.YANMA,A.MURKROW,A.GLIGAR,A.SCIZOR,A.DELIBIRD,A.SKARMORY,A.LUGIA,A.HO_OH,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.TROPIUS,A.SALAMENCE,A.LATIAS,A.LATIOS,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.HONCHKROW,A.CHATOT,A.TOGEKISS,A.YANMEGA,A.GLISCOR,A.GIRATINA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.LEAVANNY,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.DUCKLETT,A.SWANNA,A.ELGYEM,A.BEHEEYEM,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.SILVALLY,A.DRAMPA,A.TAPU_KOKO,A.CORVIKNIGHT,A.CRAMORANT,A.SIRFETCHD,A.DRAKLOAK,A.DRAGAPULT,A.GALAR_FARFETCHD,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES],[E.ATTRACT]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINJASK,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.HEATRAN,A.CRESSELIA,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLIN,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.KUBFU,A.URSHIFU,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.DIPPLIN,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.SLEEP_TALK]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.HEAL_BELL]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.LICKITUNG,A.CHANSEY,A.JYNX,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.ARTICUNO,A.DRAGONITE,A.MEW,A.CHINCHOU,A.LANTURN,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.ESPEON,A.UMBREON,A.MISDREAVUS,A.SNUBBULL,A.GRANBULL,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.CELEBI,A.POOCHYENA,A.MIGHTYENA,A.GARDEVOIR,A.SKITTY,A.DELCATTY,A.SPOINK,A.GRUMPIG,A.SWABLU,A.ALTARIA,A.CHIMECHO,A.KRICKETUNE,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.CHINGLING,A.HAPPINY,A.LICKILICKY,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.UXIE,A.PHIONE,A.MANAPHY,A.MUNNA,A.MUSHARNA,A.AUDINO,A.PETILIL,A.LILLIGANT,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.MELOETTA,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.SYLVEON,A.DIANCIE,A.COMFEY,A.MAGEARNA,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.HISUI_LILLIGANT,A.ETERNAL_FLOETTE],[E.RETURN]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.FRUSTRATION]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.SAFEGUARD]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BUTTERFREE,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.VILEPLUME,A.GROWLITHE,A.ARCANINE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.DROWZEE,A.HYPNO,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.SCYTHER,A.LAPRAS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.LEDYBA,A.LEDIAN,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.SUNKERN,A.SUNFLORA,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.WOBBUFFET,A.SCIZOR,A.SHUCKLE,A.CORSOLA,A.BLISSEY,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.BEAUTIFLY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHROOMISH,A.BRELOOM,A.SKITTY,A.DELCATTY,A.SPINDA,A.SWABLU,A.ALTARIA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.MILOTIC,A.TROPIUS,A.CHIMECHO,A.WYNAUT,A.SNORUNT,A.GLALIE,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.WORMADAM,A.MOTHIM,A.CHERUBI,A.CHERRIM,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.FINNEON,A.LUMINEON,A.SNOVER,A.ABOMASNOW,A.TOGEKISS,A.GALLADE,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.GOLETT,A.GOLURK,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.KELDEO,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SWIRLIX,A.SLURPUFF,A.BINACLE,A.BARBARACLE,A.AMAURA,A.AURORUS,A.SYLVEON,A.CARBINK,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.MAREANIE,A.TOXAPEX,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PYUKUMUKU,A.MINIOR,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.STAKATAKA,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.DOTTLER,A.ORBEETLE,A.APPLETUN,A.HATENNA,A.HATTREM,A.HATTERENE,A.CURSOLA,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.FROSMOTH,A.STONJOURNER,A.ZAMAZENTA,A.CALYREX,A.ARBOLIVA,A.RABSCA,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ETERNAL_FLOETTE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_YAMASK,[A.INDEEDEE,"female"]],[E.PAIN_SPLIT]:[A.ARBOK,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.TANGELA,A.STARYU,A.STARMIE,A.PORYGON,A.MEW,A.IGGLYBUFF,A.NATU,A.XATU,A.MISDREAVUS,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.QWILFISH,A.SLUGMA,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.PORYGON2,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.NOSEPASS,A.SABLEYE,A.MAWILE,A.MEDITITE,A.MEDICHAM,A.GULPIN,A.SWALOT,A.LUNATONE,A.SOLROCK,A.LILEEP,A.CRADILY,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.DEOXYS,A.RAMPARDOS,A.SHELLOS,A.GASTRODON,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.SPIRITOMB,A.TANGROWTH,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.GIRATINA,A.MUNNA,A.MUSHARNA,A.AUDINO,A.THROH,A.SAWK,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.STUNFISK,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ZYGARDE,A.MAREANIE,A.TOXAPEX,A.STUFFUL,A.BEWEAR,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.MIMIKYU,A.BRUXISH,A.DHELMISE,A.NIHILEGO,A.MAGEARNA,A.BLACEPHALON,A.CLOBBOPUS,A.GRAPPLOCT,A.POLTEAGEIST,A.HATTERENE,A.ALCREMIE,A.PINCURCHIN,A.SPECTRIER,A.BASCULEGION,A.OVERQWIL,A.SPIDOPS,A.MABOSSTIFF,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.WUGTRIO,A.GREAVARD,A.HOUNDSTONE,A.VELUZA,A.DUDUNSPARCE,A.FLUTTER_MANE,A.POLTCHAGEIST,A.SINISTCHA,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_WEEZING,A.GALAR_MOLTRES,A.GALAR_STUNFISK,A.HISUI_QWILFISH,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.MEGAHORN]:[A.NIDOKING,A.RAPIDASH,A.SEEL,A.DEWGONG,A.RHYHORN,A.RHYDON,A.GOLDEEN,A.SEAKING,A.TAUROS,A.LAPRAS,A.MEW,A.SPINARAK,A.ARIADOS,A.HERACROSS,A.STANTLER,A.ABSOL,A.RHYPERIOR,A.SAMUROTT,A.SCOLIPEDE,A.SAWSBUCK,A.KARRABLAST,A.ESCAVALIER,A.BOUFFALANT,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.XERNEAS,A.TAPU_BULU,A.CELESTEELA,A.DREDNAW,A.FALINKS,A.GLASTRIER,A.WYRDEER,A.CLODSIRE,A.GREAT_TUSK,A.IRON_TREADS,A.IRON_LEAVES,A.IRON_BOULDER,A.GALAR_RAPIDASH,[A.CALYREX,"ice"],A.HISUI_SAMUROTT],[E.BATON_PASS]:[A.BUTTERFREE,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.VENONAT,A.VENOMOTH,A.POLIWRATH,A.RAPIDASH,A.FARFETCHD,A.HYPNO,A.MR_MIME,A.SCYTHER,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.ZAPDOS,A.MEW,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.ESPEON,A.UMBREON,A.GIRAFARIG,A.DUNSPARCE,A.GLIGAR,A.SCIZOR,A.DELIBIRD,A.CELEBI,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.SURSKIT,A.MASQUERAIN,A.NINJASK,A.SKITTY,A.MAWILE,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.SPINDA,A.ZANGOOSE,A.LUNATONE,A.SOLROCK,A.CHIMECHO,A.ABSOL,A.HUNTAIL,A.GOREBYSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.KRICKETUNE,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.CHINGLING,A.MIME_JR,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GLISCOR,A.UXIE,A.MESPRIT,A.AZELF,A.VICTINI,A.PATRAT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.WOOBAT,A.SWOOBAT,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.SCOLIPEDE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.ALOMOMOLA,A.SHELMET,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.DURANT,A.MELOETTA,A.FLABEBE,A.FLOETTE,A.FLORGES,A.INKAY,A.MALAMAR,A.SYLVEON,A.HAWLUCHA,A.DIANCIE,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.PASSIMIAN,A.PYUKUMUKU,A.MAGEARNA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.DUBWOOL,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.PERRSERKER,A.MR_RIME,A.MORPEKO,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.CALYREX,A.KLEAVOR,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.FIDOUGH,A.DACHSBUN,A.SHROODLE,A.GRAFAIAI,A.FLITTLE,A.ESPATHRA,A.TATSUGIRI,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.MUNKIDORI,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ETERNAL_FLOETTE,A.GALAR_RAPIDASH,A.GALAR_MR_MIME,[A.INDEEDEE,"female"],A.HISUI_DECIDUEYE],[E.ENCORE]:[A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.SEEL,A.DEWGONG,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.HITMONCHAN,A.MR_MIME,A.JYNX,A.SNORLAX,A.DRAGONITE,A.MEW,A.LEDYBA,A.LEDIAN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.WOOPER,A.QUAGSIRE,A.WOBBUFFET,A.SNUBBULL,A.GRANBULL,A.SHUCKLE,A.PHANPY,A.DONPHAN,A.SMOOCHUM,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.AZURILL,A.SABLEYE,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.SPOINK,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.SHUPPET,A.BANETTE,A.CHIMECHO,A.WYNAUT,A.SPHEAL,A.SEALEO,A.WALREIN,A.JIRACHI,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PACHIRISU,A.BUNEARY,A.LOPUNNY,A.MIME_JR,A.CHATOT,A.MUNCHLAX,A.CROAGUNK,A.TOXICROAK,A.LUMINEON,A.TOGEKISS,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.VICTINI,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PURRLOIN,A.LIEPARD,A.AUDINO,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.CUBCHOO,A.BEARTIC,A.SHELMET,A.ACCELGOR,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.SPRITZEE,A.AROMATISSE,A.AMAURA,A.AURORUS,A.HAWLUCHA,A.DIANCIE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.TOUCANNON,A.SALAZZLE,A.COMFEY,A.ORANGURU,A.TOGEDEMARU,A.MAGEARNA,A.BLACEPHALON,A.TOXEL,A.TOXTRICITY,A.MR_RIME,A.ALCREMIE,[A.INDEEDEE,"male"],A.ZARUDE,A.CALYREX,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.ARBOLIVA,A.SHROODLE,A.GRAFAIAI,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.FINIZEN,A.PALAFIN,A.ANNIHILAPE,A.SCREAM_TAIL,A.IRON_BUNDLE,A.IRON_VALIANT,A.OGERPON,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.GALAR_MR_MIME,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT],[E.IRON_TAIL]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.FARFETCHD,A.SEEL,A.DEWGONG,A.ONIX,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.ELECTABUZZ,A.MAGMAR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.AERODACTYL,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.PICHU,A.CLEFFA,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.SLOWKING,A.GIRAFARIG,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.GRANBULL,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BRELOOM,A.AZURILL,A.SKITTY,A.DELCATTY,A.ARON,A.LAIRON,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.FLYGON,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.KECLEON,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.SALAMENCE,A.GROUDON,A.RAYQUAZA,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.GIBLE,A.GABITE,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.LEAFEON,A.GLACEON,A.GLISCOR,A.PORYGON_Z,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.GIRATINA,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.MINCCINO,A.CINCCINO,A.EMOLGA,A.EELEKTRIK,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.DEDENNE,A.GOOMY,A.SLIGGOO,A.GOODRA,A.NOIBAT,A.NOIVERN,A.ZYGARDE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.YUNGOOS,A.GUMSHOOS,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.SALANDIT,A.SALAZZLE,A.PASSIMIAN,A.TURTONATOR,A.TOGEDEMARU,A.BRUXISH,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.SOLGALEO,A.GUZZLORD,A.POIPOLE,A.NAGANADEL,A.ZERAORA,A.SKWOVET,A.GREEDENT,A.DREDNAW,A.OBSTAGOON,A.PERRSERKER,A.DRACOZOLT,A.ARCTOZOLT,A.ZACIAN,A.ZAMAZENTA,A.ZARUDE,A.WYRDEER,A.SNEASLER,A.CYCLIZAR,A.ORTHWORM,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.METAL_CLAW]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SANDSHREW,A.SANDSLASH,A.PARAS,A.MEOWTH,A.PERSIAN,A.KRABBY,A.KINGLER,A.MEW,A.TOTODILE,A.GLIGAR,A.SCIZOR,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SKARMORY,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.ZANGOOSE,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.METANG,A.METAGROSS,A.REGISTEEL,A.GROUDON,A.PRINPLUP,A.EMPOLEON,A.GIBLE,A.GABITE,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.WEAVILE,A.GLISCOR,A.DIALGA,A.HEATRAN,A.DRILBUR,A.EXCADRILL,A.GARBODOR,A.FERROSEED,A.FERROTHORN,A.CUBCHOO,A.BEARTIC,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BRAVIARY,A.DURANT,A.COBALION,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.WIMPOD,A.KOMALA,A.HAKAMO_O,A.KOMMO_O,A.SOLGALEO,A.NECROZMA,A.CORVIKNIGHT,A.PERRSERKER,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.URSALUNA,A.SNEASLER,A.PAWMI,A.PAWMO,A.PAWMOT,A.KLAWF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.KINGAMBIT,A.IRON_THORNS,A.ROARING_MOON,A.OKIDOGI,A.ARCHALUDON,A.IRON_CROWN,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_STUNFISK,A.HISUI_SNEASEL,A.HISUI_BRAVIARY,A.BLOODMOON_URSALUNA],[E.SYNTHESIS]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SHROOMISH,A.BRELOOM,A.ROSELIA,A.CACNEA,A.CACTURNE,A.LILEEP,A.CRADILY,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,[A.WORMADAM,"plant"],A.CHERUBI,A.CHERRIM,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.LEAFEON,A.SHAYMIN,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.VIRIZION,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PUMPKABOO,A.GOURGEIST,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.DHELMISE,A.TAPU_BULU,A.KARTANA,A.GOSSIFLEUR,A.ELDEGOSS,A.ZARUDE,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.BRUTE_BONNET,A.OGERPON,A.ALOLA_EXEGGUTOR,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.HIDDEN_POWER]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.UNOWN,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BURMY,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.RAIN_DANCE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.POLITOED,A.HOPPIP,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.SPOINK,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.BASCULIN,A.MARACTUS,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.BERGMITE,A.AVALUGG,A.XERNEAS,A.YVELTAL,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.LURANTIS,A.SHIINOTIC,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.KOMALA,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_FINI,A.XURKITREE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.GREEDENT,A.CORVIKNIGHT,A.CHEWTLE,A.DREDNAW,A.APPLETUN,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXTRICITY,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.MR_RIME,A.RUNERIGUS,A.FALINKS,A.PINCURCHIN,A.EISCUE,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.ZAMAZENTA,A.ETERNATUS,A.REGIELEKI,A.WYRDEER,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.NACLI,A.NACLSTACK,A.GARGANACL,A.TADBULB,A.BELLIBOLT,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.SCREAM_TAIL,A.SLITHER_WING,A.IRON_BUNDLE,A.IRON_JUGULIS,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.WO_CHIEN,A.CHIEN_PAO,A.WALKING_WAKE,A.OGERPON,A.HYDRAPPLE,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_YAMASK,A.GALAR_STUNFISK,[A.URSHIFU,"rapid-strike"],A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.SUNNY_DAY]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.MR_MIME,A.SCYTHER,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.SUDOWOODO,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGISTEEL,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.CHERUBI,A.CHERRIM,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.SCRAGGY,A.SCRAFTY,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.FERROSEED,A.FERROTHORN,A.EELEKTROSS,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,[A.LYCANROC,"midday","midnight"],A.MUDBRAY,A.MUDSDALE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.KOMALA,A.TURTONATOR,A.MIMIKYU,A.DRAMPA,A.DHELMISE,A.HAKAMO_O,A.KOMMO_O,A.TAPU_LELE,A.TAPU_BULU,A.SOLGALEO,A.LUNALA,A.XURKITREE,A.MAGEARNA,A.BLACEPHALON,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.GREEDENT,A.CORVISQUIRE,A.CORVIKNIGHT,A.GOSSIFLEUR,A.ELDEGOSS,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.FALINKS,A.STONJOURNER,A.DRACOZOLT,A.DRAKLOAK,A.DRAGAPULT,A.ZAMAZENTA,A.ETERNATUS,A.ZARUDE,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.ENAMORUS,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.BOMBIRDIER,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.WO_CHIEN,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.WALKING_WAKE,A.DIPPLIN,A.OGERPON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_DECIDUEYE,[A.PALDEA_TAUROS,"combat","blaze"],A.BLOODMOON_URSALUNA],[E.CRUNCH]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BLASTOISE,A.RATTATA,A.RATICATE,A.EKANS,A.ARBOK,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.ZUBAT,A.GOLBAT,A.GROWLITHE,A.ARCANINE,A.RHYHORN,A.RHYDON,A.KANGASKHAN,A.GYARADOS,A.OMASTAR,A.AERODACTYL,A.SNORLAX,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CROBAT,A.UMBREON,A.GIRAFARIG,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.TEDDIURSA,A.URSARING,A.HOUNDOUR,A.HOUNDOOM,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.POOCHYENA,A.MIGHTYENA,A.EXPLOUD,A.MAWILE,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.CARVANHA,A.SHARPEDO,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.SNORUNT,A.GLALIE,A.WALREIN,A.HUNTAIL,A.BAGON,A.SHELGON,A.SALAMENCE,A.GROUDON,A.RAYQUAZA,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.BUIZEL,A.FLOATZEL,A.STUNKY,A.SKUNTANK,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CARNIVINE,A.RHYPERIOR,A.YANMEGA,A.GLISCOR,A.FROSLASS,A.HEATRAN,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISAGE,A.PANPOUR,A.SIMIPOUR,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.ZOROARK,A.EELEKTRIK,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.DRUDDIGON,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.CHESNAUGHT,A.LITLEO,A.PYROAR,A.PANCHAM,A.PANGORO,A.TYRUNT,A.TYRANTRUM,A.BERGMITE,A.AVALUGG,A.ZYGARDE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.ROCKRUFF,A.LYCANROC,A.DEWPIDER,A.ARAQUANID,A.SILVALLY,A.BRUXISH,A.SOLGALEO,A.GUZZLORD,A.SKWOVET,A.GREEDENT,A.THIEVUL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ARROKUDA,A.BARRASKEWDA,A.SIZZLIPEDE,A.CENTISKORCH,A.GRIMMSNARL,A.PERRSERKER,A.MORPEKO,A.DRACOVISH,A.ARCTOVISH,A.ZACIAN,A.ZAMAZENTA,A.ZARUDE,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.URSALUNA,A.BASCULEGION,A.OVERQWIL,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.CAPSAKID,A.SCOVILLAIN,A.CYCLIZAR,A.GREAVARD,A.HOUNDSTONE,A.VELUZA,A.DONDOZO,A.FARIGIRAF,A.SCREAM_TAIL,A.BRUTE_BONNET,A.IRON_JUGULIS,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.OKIDOGI,A.GOUGING_FIRE,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_MEOWTH,A.GALAR_STUNFISK,[A.URSHIFU,"single-strike"],[A.CALYREX,"ice","shadow"],A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_QWILFISH,A.HISUI_ZOROARK,A.HISUI_AVALUGG,A.BLOODMOON_URSALUNA],[E.PSYCH_UP]:[A.BUTTERFREE,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.LICKITUNG,A.CHANSEY,A.TANGELA,A.STARYU,A.STARMIE,A.MR_MIME,A.JYNX,A.PORYGON,A.SNORLAX,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.SUDOWOODO,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.STEELIX,A.SNEASEL,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LUGIA,A.HO_OH,A.CELEBI,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.SPOINK,A.GRUMPIG,A.SPINDA,A.SWABLU,A.ALTARIA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.BUDEW,A.ROSERADE,A.WORMADAM,A.MOTHIM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.FINNEON,A.LUMINEON,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.TANGROWTH,A.TOGEKISS,A.YANMEGA,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.MUSHARNA,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.MIENFOO,A.MIENSHAO,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.VIVILLON,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.HELIOPTILE,A.HELIOLISK,A.AMAURA,A.AURORUS,A.SYLVEON,A.CARBINK,A.KLEFKI,A.XERNEAS,A.DIANCIE,A.HOOPA,A.PRIMARINA,A.CUTIEFLY,A.RIBOMBEE,A.COMFEY,A.ORANGURU,A.GOLISOPOD,A.PYUKUMUKU,A.MINIOR,A.KOMALA,A.MIMIKYU,A.DRAMPA,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.MARSHADOW,A.INDEEDEE,A.RABSCA,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_EXEGGUTOR,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING],[E.SHADOW_BALL]:[A.BUTTERFREE,A.RATTATA,A.RATICATE,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.MEOWTH,A.PERSIAN,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.LICKITUNG,A.KOFFING,A.WEEZING,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.TAUROS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.SNORLAX,A.MEWTWO,A.MEW,A.TYPHLOSION,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.AIPOM,A.YANMA,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SNEASEL,A.CORSOLA,A.HOUNDOUR,A.HOUNDOOM,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LUGIA,A.HO_OH,A.CELEBI,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.SPOINK,A.GRUMPIG,A.SPINDA,A.CACTURNE,A.ZANGOOSE,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.GOREBYSS,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.BIDOOF,A.BIBAREL,A.BUDEW,A.ROSERADE,A.WORMADAM,A.MOTHIM,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.MUNCHLAX,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.GIRATINA,A.CRESSELIA,A.MANAPHY,A.DARKRAI,A.ARCEUS,A.VICTINI,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.WHIMSICOTT,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.GOLETT,A.GOLURK,A.VULLABY,A.MANDIBUZZ,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.MELOETTA,A.DELPHOX,A.MEOWSTIC,A.AEGISLASH,A.SKRELP,A.DRAGALGE,A.CLAWITZER,A.SYLVEON,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.HOOPA,A.DECIDUEYE,A.PRIMARINA,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.SILVALLY,A.MIMIKYU,A.DRAMPA,A.DHELMISE,A.TAPU_LELE,A.TAPU_FINI,A.LUNALA,A.MAGEARNA,A.MARSHADOW,A.BLACEPHALON,A.CINDERACE,A.INTELEON,A.DOTTLER,A.ORBEETLE,A.THIEVUL,A.SINISTEA,A.POLTEAGEIST,A.HATTERENE,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.MR_RIME,A.RUNERIGUS,A.INDEEDEE,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.SPECTRIER,A.WYRDEER,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.MEOWSCARADA,A.SKELEDIRGE,A.ARMAROUGE,A.CERULEDGE,A.BRAMBLIN,A.BRAMBLEGHAST,A.RABSCA,A.ESPATHRA,A.GREAVARD,A.HOUNDSTONE,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.FLUTTER_MANE,A.GIMMIGHOUL,A.GHOLDENGO,A.IRON_VALIANT,A.POLTCHAGEIST,A.SINISTCHA,A.MUNKIDORI,A.FEZANDIPITI,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.MAROWAK,A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_YAMASK,[A.CALYREX,"shadow"],A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY],[E.FUTURE_SIGHT]:[A.PSYDUCK,A.GOLDUCK,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.EXEGGUTOR,A.MR_MIME,A.JYNX,A.LAPRAS,A.MEWTWO,A.MEW,A.NOCTOWL,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MARILL,A.AZUMARILL,A.ESPEON,A.SLOWKING,A.GIRAFARIG,A.DELIBIRD,A.LUGIA,A.HO_OH,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SPOINK,A.LUNATONE,A.BARBOACH,A.WHISCASH,A.CLAYDOL,A.CASTFORM,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.TOGEKISS,A.GALLADE,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.ARCEUS,A.VICTINI,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.DARMANITAN,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.BEHEEYEM,A.DELPHOX,A.INKAY,A.MALAMAR,A.ORANGURU,A.TAPU_LELE,A.SOLGALEO,A.LUNALA,A.NECROZMA,A.DOTTLER,A.ORBEETLE,A.HATTERENE,A.MR_RIME,A.INDEEDEE,A.CALYREX,A.IRON_VALIANT,A.MUNKIDORI,A.IRON_CROWN,[A.MEOWSTIC,"female"],A.ALOLA_RAICHU,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING],[E.ROCK_SMASH]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BEEDRILL,A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.PARAS,A.PARASECT,A.DIGLETT,A.DUGTRIO,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.MUK,A.GENGAR,A.ONIX,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.SCYTHER,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.JOLTEON,A.FLAREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEWTWO,A.MEW,A.BAYLEEF,A.MEGANIUM,A.QUILAVA,A.TYPHLOSION,A.CROCONAW,A.FERALIGATR,A.FURRET,A.LEDIAN,A.TOGEPI,A.TOGETIC,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.TYROGUE,A.HITMONTOP,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.GULPIN,A.SWALOT,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.CLAYDOL,A.CRADILY,A.ANORITH,A.ARMALDO,A.KECLEON,A.DUSCLOPS,A.TROPIUS,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.RELICANTH,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BUIZEL,A.FLOATZEL,A.GASTRODON,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.STUNKY,A.SKUNTANK,A.BRONZONG,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.ZOROARK,A.REUNICLUS,A.SAWSBUCK,A.ESCAVALIER,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.GOODRA,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.ZYGARDE,A.VOLCANION,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.CRABRAWLER,A.CRABOMINABLE,A.MUDBRAY,A.MUDSDALE,A.PASSIMIAN,A.GOLISOPOD,A.TAPU_BULU,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CLOBBOPUS,A.GRAPPLOCT,A.OBSTAGOON,A.SIRFETCHD,A.FALINKS,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.KUBFU,A.URSHIFU,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.ENAMORUS,A.KLAWF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.KORAIDON,A.ARCHALUDON,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MAROWAK,A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.WHIRLPOOL]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.NIDOQUEEN,A.NIDOKING,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.LICKITUNG,A.RHYDON,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.SNEASEL,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.MILTANK,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.RAMPARDOS,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.GARCHOMP,A.MUNCHLAX,A.FINNEON,A.LUMINEON,A.MANTYKE,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.BRUXISH,A.DHELMISE,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.GRAPPLOCT,A.OBSTAGOON,A.CURSOLA,A.EISCUE,A.DRACOVISH,A.ARCTOVISH,A.BASCULEGION,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.WIGLETT,A.WUGTRIO,A.PALAFIN,A.TATSUGIRI,A.IRON_BUNDLE,A.WALKING_WAKE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,[A.URSHIFU,"rapid-strike"],A.HISUI_SAMUROTT,[A.PALDEA_TAUROS,"aqua"]],[E.BEAT_UP]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.EKANS,A.ARBOK,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.KANGASKHAN,A.MEW,A.AIPOM,A.GIRAFARIG,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.VESPIQUEN,A.AMBIPOM,A.WEAVILE,A.COTTONEE,A.WHIMSICOTT,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.VANILLUXE,A.PAWNIARD,A.BISHARP,A.DURANT,A.ZWEILOUS,A.HYDREIGON,A.PANGORO,A.BINACLE,A.BARBARACLE,A.WISHIWASHI,A.SALANDIT,A.SALAZZLE,A.PASSIMIAN,A.MIMIKYU,A.NICKIT,A.THIEVUL,A.FALINKS,A.DRAKLOAK,A.DRAGAPULT,A.URSHIFU,A.TANDEMAUS,A.MAUSHOLD,A.BRAMBLIN,A.BRAMBLEGHAST,A.ANNIHILAPE,A.FARIGIRAF,A.KINGAMBIT,A.FEZANDIPITI,A.PIKACHU,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_PERSIAN],[E.UPROAR]:[A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.PIKACHU,A.RAICHU,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.FARFETCHD,A.DODUO,A.DODRIO,A.GASTLY,A.HAUNTER,A.GENGAR,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.TAUROS,A.GYARADOS,A.SNORLAX,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.MURKROW,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.TEDDIURSA,A.URSARING,A.HOUNDOUR,A.HOUNDOOM,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.CELEBI,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.WINGULL,A.PELIPPER,A.VIGOROTH,A.SLAKING,A.NINJASK,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.AZURILL,A.SKITTY,A.DELCATTY,A.ARON,A.LAIRON,A.AGGRON,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.ROSELIA,A.CARVANHA,A.SHARPEDO,A.SPOINK,A.GRUMPIG,A.SPINDA,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.WHISCASH,A.CHIMECHO,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.KRICKETOT,A.KRICKETUNE,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.WORMADAM,A.VESPIQUEN,A.PACHIRISU,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.MUNCHLAX,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.PORYGON_Z,A.ROTOM,A.AZELF,A.HEATRAN,A.PHIONE,A.MANAPHY,A.VICTINI,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.KLINK,A.KLANG,A.KLINKLANG,A.ELGYEM,A.BEHEEYEM,A.STUNFISK,A.BOUFFALANT,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.MELOETTA,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.FURFROU,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.HOOPA,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.WISHIWASHI,A.PASSIMIAN,A.TURTONATOR,A.BRUXISH,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.POIPOLE,A.NAGANADEL,A.BLACEPHALON,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.YAMPER,A.BOLTUND,A.CRAMORANT,A.TOXTRICITY,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.MR_RIME,A.FALINKS,A.MORPEKO,A.GLASTRIER,A.SPECTRIER,A.WYRDEER,A.BASCULEGION,A.ENAMORUS,A.LECHONK,A.OINKOLOGNE,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.FLITTLE,A.ESPATHRA,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.GREAVARD,A.HOUNDSTONE,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.KORAIDON,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.HYDRAPPLE,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_STUNFISK,[A.CALYREX,"ice","shadow"],A.BLOODMOON_URSALUNA],[E.HEAT_WAVE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.VULPIX,A.NINETALES,A.ZUBAT,A.GOLBAT,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.FARFETCHD,A.WEEZING,A.MAGMAR,A.FLAREON,A.AERODACTYL,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.TOGETIC,A.NATU,A.XATU,A.MURKROW,A.SLUGMA,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.ENTEI,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.SOLROCK,A.SALAMENCE,A.GROUDON,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.STARLY,A.STARAVIA,A.STARAPTOR,A.HONCHKROW,A.CHATOT,A.MAGMORTAR,A.TOGEKISS,A.HEATRAN,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.DARUMAKA,A.DARMANITAN,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.DRUDDIGON,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.TORNADUS,A.RESHIRAM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.SALANDIT,A.SALAZZLE,A.SILVALLY,A.TURTONATOR,A.DRAMPA,A.LUNALA,A.GUZZLORD,A.NECROZMA,A.NAGANADEL,A.BLACEPHALON,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.CARKOL,A.COALOSSAL,A.SIZZLIPEDE,A.CENTISKORCH,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.SQUAWKABILLY,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.BOMBIRDIER,A.SLITHER_WING,A.IRON_JUGULIS,A.IRON_MOTH,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.FEZANDIPITI,A.GOUGING_FIRE,A.ALOLA_MAROWAK,A.GALAR_WEEZING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_BRAVIARY],[E.HAIL]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.CHANSEY,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.JYNX,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.ARTICUNO,A.ZAPDOS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.SNEASEL,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.DELIBIRD,A.MANTINE,A.KINGDRA,A.SMOOCHUM,A.BLISSEY,A.SUICUNE,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.AZURILL,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.LUNATONE,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.REGICE,A.KYOGRE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.HAPPINY,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.GLACEON,A.MAMOSWINE,A.FROSLASS,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.KYUREM,A.KELDEO,A.SKRELP,A.DRAGALGE,A.AMAURA,A.AURORUS,A.CARBINK,A.GOODRA,A.BERGMITE,A.AVALUGG,A.XERNEAS,A.DIANCIE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CRABOMINABLE,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.WIMPOD,A.GOLISOPOD,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.CURSOLA,A.MR_RIME,A.FROSMOTH,A.EISCUE,A.ARCTOZOLT,A.ARCTOVISH,A.GLASTRIER,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_CORSOLA,[A.CALYREX,"ice"]],[E.TORMENT]:[A.EKANS,A.ARBOK,A.NIDOQUEEN,A.NIDOKING,A.ZUBAT,A.GOLBAT,A.MEOWTH,A.PERSIAN,A.ABRA,A.KADABRA,A.ALAKAZAM,A.DODRIO,A.GRIMER,A.MUK,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.KOFFING,A.WEEZING,A.MR_MIME,A.JYNX,A.GYARADOS,A.AERODACTYL,A.MEWTWO,A.MEW,A.CROBAT,A.SUDOWOODO,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.LOUDRED,A.EXPLOUD,A.NOSEPASS,A.SABLEYE,A.MAWILE,A.CARVANHA,A.SHARPEDO,A.SPOINK,A.GRUMPIG,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.GLALIE,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.SHIELDON,A.BASTIODON,A.FLOATZEL,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.MIME_JR,A.CHATOT,A.SPIRITOMB,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.ELECTIVIRE,A.MAGMORTAR,A.GLISCOR,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.AZELF,A.HEATRAN,A.DARKRAI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.KLEFKI,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.HOOPA,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.SALANDIT,A.SALAZZLE,A.BRUXISH,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.PHEROMOSA,A.BLACEPHALON,A.NICKIT,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.MORPEKO,A.GLASTRIER,A.ENAMORUS,A.SQUAWKABILLY,A.BOMBIRDIER,A.VAROOM,A.KINGAMBIT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,[A.CALYREX,"ice"],A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.WILL_O_WISP]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.VULPIX,A.NINETALES,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.MAGMAR,A.FLAREON,A.MOLTRES,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.MISDREAVUS,A.SLUGMA,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.ENTEI,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHEDINJA,A.SABLEYE,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.ALTARIA,A.SOLROCK,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.GROUDON,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.SPIRITOMB,A.MAGMORTAR,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.HEATRAN,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.DARUMAKA,A.DARMANITAN,A.YAMASK,A.COFAGRIGUS,A.FRILLISH,A.JELLICENT,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.HEATMOR,A.LARVESTA,A.VOLCARONA,A.RESHIRAM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SALANDIT,A.SALAZZLE,A.TURTONATOR,A.MIMIKYU,A.LUNALA,A.MARSHADOW,A.BLACEPHALON,A.CINDERACE,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.CENTISKORCH,A.SINISTEA,A.POLTEAGEIST,A.CURSOLA,A.RUNERIGUS,A.DRAKLOAK,A.DRAGAPULT,A.SPECTRIER,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.SCOVILLAIN,A.HOUNDSTONE,A.SLITHER_WING,A.CHI_YU,A.ALOLA_MAROWAK,A.MAROWAK,A.GALAR_WEEZING,A.GALAR_CORSOLA,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,[A.CALYREX,"shadow"],A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_ZORUA,A.HISUI_ZOROARK,[A.PALDEA_TAUROS,"blaze"]],[E.FACADE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.FOCUS_PUNCH]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.MUK,A.GENGAR,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.TOGETIC,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.QUAGSIRE,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.LUDICOLO,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.KECLEON,A.DUSCLOPS,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.BIBAREL,A.RAMPARDOS,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.MIME_JR,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.GALLADE,A.DUSKNOIR,A.PALKIA,A.REGIGIGAS,A.DARKRAI,A.PIGNITE,A.EMBOAR,A.WATCHOG,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.REUNICLUS,A.EELEKTROSS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.HEATMOR,A.ZEKROM,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.HAWLUCHA,A.GOODRA,A.HOOPA,A.INCINEROAR,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.STUFFUL,A.BEWEAR,A.PASSIMIAN,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.BUZZWOLE,A.MARSHADOW,A.ZERAORA,A.RILLABOOM,A.GRIMMSNARL,A.MR_RIME,A.KUBFU,A.URSHIFU,A.ZARUDE,A.URSALUNA,A.SNEASLER,A.PAWMO,A.PAWMOT,A.GARGANACL,A.PALAFIN,A.ANNIHILAPE,A.IRON_HANDS,A.GHOLDENGO,A.KORAIDON,A.OKIDOGI,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MUK,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_MR_MIME,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.NATURE_POWER]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.ONIX,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.KABUTOPS,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.BELLOSSOM,A.SUDOWOODO,A.SUNKERN,A.SUNFLORA,A.STEELIX,A.SLUGMA,A.MAGCARGO,A.CORSOLA,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.ROSELIA,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.CACNEA,A.CACTURNE,A.CRAWDAUNT,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.BONSLY,A.CARNIVINE,A.FINNEON,A.TANGROWTH,A.LEAFEON,A.HEATRAN,A.REGIGIGAS,A.SHAYMIN,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.FERROSEED,A.FERROTHORN,A.VIRIZION,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.BINACLE,A.BARBARACLE,A.AMAURA,A.AURORUS,A.CARBINK,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.XERNEAS,A.DIANCIE,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.RIBOMBEE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.DRAMPA,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.XURKITREE,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.CURSOLA,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_CORSOLA,A.HISUI_TYPHLOSION,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.CHARGE]:[A.PIKACHU,A.RAICHU,A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.ELECTABUZZ,A.JOLTEON,A.ZAPDOS,A.MEW,A.CHINCHOU,A.LANTURN,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.ELEKID,A.RAIKOU,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.MAGNEZONE,A.ELECTIVIRE,A.ROTOM,A.BLITZLE,A.ZEBSTRIKA,A.EMOLGA,A.KLINK,A.KLANG,A.KLINKLANG,A.TYNAMO,A.EELEKTRIK,A.EELEKTROSS,A.STUNFISK,A.THUNDURUS,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.TOGEDEMARU,A.TAPU_KOKO,A.XURKITREE,A.ZERAORA,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.PINCURCHIN,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.REGIELEKI,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.SANDY_SHOCKS,A.IRON_HANDS,A.IRON_THORNS,A.MIRAIDON,A.RAGING_BOLT,A.ALOLA_RAICHU,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.TAUNT]:[A.RATTATA,A.RATICATE,A.NIDOQUEEN,A.NIDOKING,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.DODRIO,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.KOFFING,A.WEEZING,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.GYARADOS,A.AERODACTYL,A.MEWTWO,A.MEW,A.CROBAT,A.SUDOWOODO,A.AIPOM,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.CARVANHA,A.SHARPEDO,A.SPOINK,A.GRUMPIG,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.GLALIE,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHIELDON,A.BASTIODON,A.VESPIQUEN,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.MIME_JR,A.CHATOT,A.SPIRITOMB,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.ELECTIVIRE,A.MAGMORTAR,A.GLISCOR,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.AZELF,A.HEATRAN,A.DARKRAI,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.COTTONEE,A.WHIMSICOTT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.EMOLGA,A.ESCAVALIER,A.FRILLISH,A.JELLICENT,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.PANCHAM,A.PANGORO,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.HOOPA,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.ORICORIO,A.ROCKRUFF,A.LYCANROC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.PYUKUMUKU,A.TURTONATOR,A.MIMIKYU,A.BRUXISH,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.BUZZWOLE,A.PHEROMOSA,A.BLACEPHALON,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.TOXTRICITY,A.CLOBBOPUS,A.GRAPPLOCT,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.MR_RIME,A.RUNERIGUS,A.MORPEKO,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,A.URSALUNA,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.QUAQUAVAL,A.SPIDOPS,A.LOKIX,A.TANDEMAUS,A.MAUSHOLD,A.SQUAWKABILLY,A.ARMAROUGE,A.CERULEDGE,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.BOMBIRDIER,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.FLAMIGO,A.TATSUGIRI,A.ANNIHILAPE,A.KINGAMBIT,A.GREAT_TUSK,A.BRUTE_BONNET,A.FLUTTER_MANE,A.IRON_BUNDLE,A.IRON_JUGULIS,A.IRON_THORNS,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.IRON_LEAVES,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.RAGING_BOLT,A.IRON_BOULDER,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,[A.CALYREX,"ice","shadow"],A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.HELPING_HAND]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIKACHU,A.RAICHU,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DIGLETT,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.SENTRET,A.FURRET,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.MILOTIC,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.SNORUNT,A.GLALIE,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.CROAGUNK,A.TOXICROAK,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.MARACTUS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.ALOMOMOLA,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.RUFFLET,A.BRAVIARY,A.DURANT,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.DIANCIE,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.SALANDIT,A.SALAZZLE,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.PYUKUMUKU,A.TOGEDEMARU,A.DRAMPA,A.DHELMISE,A.KOMMO_O,A.SOLGALEO,A.LUNALA,A.MAGEARNA,A.POIPOLE,A.NAGANADEL,A.ZERAORA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.DOTTLER,A.ORBEETLE,A.GOSSIFLEUR,A.ELDEGOSS,A.YAMPER,A.BOLTUND,A.APPLETUN,A.TOXTRICITY,A.HATENNA,A.HATTREM,A.HATTERENE,A.OBSTAGOON,A.PERRSERKER,A.SIRFETCHD,A.MR_RIME,A.MILCERY,A.ALCREMIE,A.FALINKS,A.FROSMOTH,A.INDEEDEE,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.ZARUDE,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.ORTHWORM,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_BUNDLE,A.IRON_MOTH,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.IRON_LEAVES,A.MUNKIDORI,A.OGERPON,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.TRICK]:[A.CLEFAIRY,A.CLEFABLE,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.STARMIE,A.MR_MIME,A.JYNX,A.PORYGON,A.MEWTWO,A.MEW,A.SENTRET,A.FURRET,A.CLEFFA,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.BLISSEY,A.LUGIA,A.CELEBI,A.ZIGZAGOON,A.LINOONE,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHEDINJA,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.SPOINK,A.GRUMPIG,A.SPINDA,A.BALTOY,A.CLAYDOL,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.TOGEKISS,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.PURRLOIN,A.LIEPARD,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.DARMANITAN,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.GOLURK,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.HOOPA,A.CUTIEFLY,A.RIBOMBEE,A.COMFEY,A.ORANGURU,A.SANDYGAST,A.PALOSSAND,A.MIMIKYU,A.TAPU_FINI,A.LUNALA,A.MAGEARNA,A.BLACEPHALON,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.MR_RIME,A.RUNERIGUS,A.INDEEDEE,A.CALYREX,A.WYRDEER,A.MEOWSCARADA,A.ARMAROUGE,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.GREAVARD,A.HOUNDSTONE,A.FARIGIRAF,A.SCREAM_TAIL,A.GHOLDENGO,A.IRON_VALIANT,A.MUNKIDORI,A.ETERNAL_FLOETTE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_YAMASK,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.SUPERPOWER]:[A.NIDOQUEEN,A.NIDOKING,A.ARCANINE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.KRABBY,A.KINGLER,A.HITMONLEE,A.RHYHORN,A.RHYDON,A.PINSIR,A.FLAREON,A.KABUTOPS,A.SNORLAX,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.MARILL,A.AZUMARILL,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.TEDDIURSA,A.URSARING,A.SWINUB,A.PILOSWINE,A.PHANPY,A.DONPHAN,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.BRELOOM,A.MAKUHITA,A.HARIYAMA,A.ARON,A.LAIRON,A.AGGRON,A.TORKOAL,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACTURNE,A.CORPHISH,A.CRAWDAUNT,A.ARMALDO,A.ABSOL,A.REGIROCK,A.REGICE,A.REGISTEEL,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BIDOOF,A.BIBAREL,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.HONCHKROW,A.MUNCHLAX,A.HIPPOPOTAS,A.HIPPOWDON,A.RHYPERIOR,A.MAMOSWINE,A.REGIGIGAS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.SAMUROTT,A.STOUTLAND,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.GIGALITH,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.SCOLIPEDE,A.BASCULIN,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.CARRACOSTA,A.REUNICLUS,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.DIGGERSBY,A.GOGOAT,A.PANCHAM,A.PANGORO,A.INKAY,A.MALAMAR,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.HAWLUCHA,A.GOODRA,A.AVALUGG,A.ZYGARDE,A.VOLCANION,A.INCINEROAR,A.CRABRAWLER,A.CRABOMINABLE,A.MUDBRAY,A.MUDSDALE,A.LURANTIS,A.STUFFUL,A.BEWEAR,A.PASSIMIAN,A.KOMALA,A.DRAMPA,A.KOMMO_O,A.TAPU_BULU,A.SOLGALEO,A.BUZZWOLE,A.CELESTEELA,A.MARSHADOW,A.STAKATAKA,A.ZERAORA,A.MELMETAL,A.RILLABOOM,A.GREEDENT,A.DREDNAW,A.APPLETUN,A.CRAMORANT,A.CLOBBOPUS,A.GRAPPLOCT,A.GRIMMSNARL,A.SIRFETCHD,A.FALINKS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.KUBFU,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.ENAMORUS,A.CETODDLE,A.SLITHER_WING,A.OKIDOGI,A.OGERPON,[A.DEOXYS,"attack"],A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_EXEGGUTOR,A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,[A.CALYREX,"ice"],A.HISUI_BRAVIARY],[E.RECYCLE]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.CHANSEY,A.STARYU,A.STARMIE,A.MR_MIME,A.JYNX,A.PORYGON,A.SNORLAX,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CLEFFA,A.IGGLYBUFF,A.SLOWKING,A.GIRAFARIG,A.DELIBIRD,A.PORYGON2,A.SMOOCHUM,A.BLISSEY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.SPINDA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.KECLEON,A.CHIMECHO,A.JIRACHI,A.DEOXYS,A.DRIFLOON,A.DRIFBLIM,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.MUNCHLAX,A.MAGNEZONE,A.PORYGON_Z,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.ARCEUS,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.TRUBBISH,A.GARBODOR,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.KLINK,A.KLANG,A.KLINKLANG,A.ELGYEM,A.BEHEEYEM,A.HEATMOR,A.MELOETTA,A.GENESECT,A.BRAIXEN,A.DELPHOX,A.BUNNELBY,A.DIGGERSBY,A.ESPURR,A.MEOWSTIC,A.DEDENNE,A.KLEFKI,A.HOOPA,A.MORELULL,A.SHIINOTIC,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.NECROZMA,A.STAKATAKA,A.BLACEPHALON,A.APPLIN,A.FLAPPLE,A.APPLETUN,A.MR_RIME,A.FARIGIRAF,A.DIPPLIN,A.HYDRAPPLE,A.ALOLA_RAICHU,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_MR_MIME,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.REVENGE]:[A.RATTATA,A.RATICATE,A.MANKEY,A.PRIMEAPE,A.MACHOP,A.MACHOKE,A.MACHAMP,A.FARFETCHD,A.HITMONLEE,A.HITMONCHAN,A.PINSIR,A.TAUROS,A.MEW,A.AIPOM,A.PINECO,A.FORRETRESS,A.QWILFISH,A.HERACROSS,A.HITMONTOP,A.TYRANITAR,A.COMBUSKEN,A.BLAZIKEN,A.SHIFTRY,A.MAKUHITA,A.HARIYAMA,A.CACTURNE,A.ZANGOOSE,A.CRAWDAUNT,A.DUSKULL,A.DUSCLOPS,A.STARLY,A.STARAVIA,A.STARAPTOR,A.AMBIPOM,A.VESPIQUEN,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.GALLADE,A.DUSKNOIR,A.REGIGIGAS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.BASCULIN,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.ESCAVALIER,A.FERROSEED,A.FERROTHORN,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.KELDEO,A.PANGORO,A.HAWLUCHA,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.MUDSDALE,A.BEWEAR,A.PASSIMIAN,A.TURTONATOR,A.KOMMO_O,A.TAPU_BULU,A.BUZZWOLE,A.MARSHADOW,A.ZERAORA,A.CINDERACE,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CHEWTLE,A.DREDNAW,A.CLOBBOPUS,A.GRAPPLOCT,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.CURSOLA,A.SIRFETCHD,A.RUNERIGUS,A.FALINKS,A.MORPEKO,A.COPPERAJAH,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.ZARUDE,A.BASCULEGION,A.ANNIHILAPE,A.KINGAMBIT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,[A.LYCANROC,"midnight"],A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,A.HISUI_SAMUROTT,A.GALAR_STUNFISK],[E.BRICK_BREAK]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BEEDRILL,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PARAS,A.PARASECT,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.MUK,A.GENGAR,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.KABUTOPS,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.TOGETIC,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.QUAGSIRE,A.SLOWKING,A.GLIGAR,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.TYROGUE,A.HITMONTOP,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.SWALOT,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.KECLEON,A.DUSCLOPS,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.KRICKETUNE,A.RAMPARDOS,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BONSLY,A.MIME_JR,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.GLISCOR,A.GALLADE,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.DARKRAI,A.ARCEUS,A.VICTINI,A.PIGNITE,A.EMBOAR,A.DEWOTT,A.SAMUROTT,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ZOROARK,A.GOTHITELLE,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.ZYGARDE,A.HOOPA,A.VOLCANION,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.CRABRAWLER,A.CRABOMINABLE,A.LYCANROC,A.LURANTIS,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.KOMALA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.BUZZWOLE,A.PHEROMOSA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.ZERAORA,A.MELMETAL,A.RILLABOOM,A.ARROKUDA,A.BARRASKEWDA,A.TOXTRICITY,A.CLOBBOPUS,A.GRAPPLOCT,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.SIRFETCHD,A.MR_RIME,A.FALINKS,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.ZARUDE,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.MEOWSCARADA,A.QUAQUAVAL,A.SPIDOPS,A.LOKIX,A.PAWMOT,A.GARGANACL,A.CERULEDGE,A.KLAWF,A.TINKATUFF,A.TINKATON,A.ANNIHILAPE,A.KINGAMBIT,A.GREAT_TUSK,A.SLITHER_WING,A.IRON_HANDS,A.IRON_THORNS,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.IRON_LEAVES,A.OKIDOGI,A.OGERPON,A.ARCHALUDON,A.IRON_BOULDER,A.IRON_CROWN,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_MR_MIME,A.GALAR_ZAPDOS,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.KNOCK_OFF]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BEEDRILL,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PARAS,A.PARASECT,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.FARFETCHD,A.DODUO,A.DODRIO,A.DEWGONG,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.TANGELA,A.GOLDEEN,A.SEAKING,A.SCYTHER,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.MEWTWO,A.MEW,A.BAYLEEF,A.MEGANIUM,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.MARILL,A.AZUMARILL,A.AIPOM,A.GLIGAR,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.PHANPY,A.DONPHAN,A.ELEKID,A.TYRANITAR,A.BLAZIKEN,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.SABLEYE,A.MAWILE,A.SWALOT,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.KECLEON,A.SHUPPET,A.BANETTE,A.CHIMECHO,A.ABSOL,A.METAGROSS,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.EMPOLEON,A.KRICKETUNE,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.WEAVILE,A.LICKILICKY,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.LEAFEON,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.KROKOROK,A.KROOKODILE,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.REUNICLUS,A.SWANNA,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.ALOMOMOLA,A.FERROSEED,A.FERROTHORN,A.TYNAMO,A.EELEKTRIK,A.EELEKTROSS,A.CRYOGONAL,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.MELOETTA,A.CHESNAUGHT,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.INKAY,A.MALAMAR,A.GOODRA,A.TREVENANT,A.YVELTAL,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.MAREANIE,A.TOXAPEX,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.KOMALA,A.DHELMISE,A.TAPU_FINI,A.SOLGALEO,A.NIHILEGO,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.BLACEPHALON,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.GREEDENT,A.NICKIT,A.SIZZLIPEDE,A.PERRSERKER,A.SIRFETCHD,A.FALINKS,A.MORPEKO,A.COPPERAJAH,A.ZARUDE,A.MEOWSCARADA,A.QUAQUAVAL,A.TAROUNTULA,A.SPIDOPS,A.LOKIX,A.PAWMO,A.PAWMOT,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.BOMBIRDIER,A.CYCLIZAR,A.CETODDLE,A.CETITAN,A.GREAT_TUSK,A.IRON_TREADS,A.IRON_JUGULIS,A.WO_CHIEN,A.ROARING_MOON,A.IRON_VALIANT,A.WALKING_WAKE,A.OKIDOGI,A.OGERPON,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_GOODRA,A.HISUI_DECIDUEYE],[E.ENDEAVOR]:[A.BEEDRILL,A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.DODUO,A.DODRIO,A.DEWGONG,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.TAUROS,A.GYARADOS,A.FLAREON,A.MEW,A.MEGANIUM,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.SUDOWOODO,A.POLITOED,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.GIRAFARIG,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.HERACROSS,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.DELIBIRD,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.HITMONTOP,A.BLISSEY,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.ARON,A.LAIRON,A.AGGRON,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.NUMEL,A.CAMERUPT,A.SPOINK,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.LUVDISC,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.STARLY,A.STARAVIA,A.STARAPTOR,A.KRICKETOT,A.KRICKETUNE,A.CRANIDOS,A.RAMPARDOS,A.WORMADAM,A.COMBEE,A.VESPIQUEN,A.PACHIRISU,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.HONCHKROW,A.SKUNTANK,A.HAPPINY,A.RHYPERIOR,A.TANGROWTH,A.TOGEKISS,A.MAMOSWINE,A.AZELF,A.SHAYMIN,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PATRAT,A.WATCHOG,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.BLITZLE,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.BASCULIN,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.MINCCINO,A.CINCCINO,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.DEERLING,A.SAWSBUCK,A.FERROSEED,A.FERROTHORN,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.STUNFISK,A.BOUFFALANT,A.DURANT,A.KYUREM,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.XERNEAS,A.DIANCIE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.SALANDIT,A.SALAZZLE,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.PASSIMIAN,A.ORANGURU,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.DRAMPA,A.KOMMO_O,A.SOLGALEO,A.BUZZWOLE,A.MARSHADOW,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.FLAPPLE,A.SANDACONDA,A.CRAMORANT,A.TOXEL,A.TOXTRICITY,A.PERRSERKER,A.ALCREMIE,A.FALINKS,A.STONJOURNER,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.BASCULEGION,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.FIDOUGH,A.DACHSBUN,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.BOMBIRDIER,A.PALAFIN,A.REVAVROOM,A.CYCLIZAR,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.VELUZA,A.ANNIHILAPE,A.FARIGIRAF,A.DUDUNSPARCE,A.GREAT_TUSK,A.IRON_TREADS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_ZAPDOS,A.HISUI_TYPHLOSION,A.PALDEA_TAUROS],[E.SKILL_SWAP]:[A.BUTTERFREE,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.VENONAT,A.VENOMOTH,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.CHANSEY,A.STARMIE,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.NATU,A.XATU,A.ESPEON,A.UMBREON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.STANTLER,A.SMOOCHUM,A.BLISSEY,A.LUGIA,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.SPOINK,A.GRUMPIG,A.SPINDA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.JIRACHI,A.DEOXYS,A.WORMADAM,A.MOTHIM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.GALLADE,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.MANAPHY,A.VICTINI,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ALOMOMOLA,A.ELGYEM,A.BEHEEYEM,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.INKAY,A.MALAMAR,A.SYLVEON,A.CARBINK,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.DIANCIE,A.HOOPA,A.CUTIEFLY,A.RIBOMBEE,A.ORANGURU,A.SANDYGAST,A.PALOSSAND,A.TAPU_LELE,A.MAGEARNA,A.STAKATAKA,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.MR_RIME,A.RUNERIGUS,A.INDEEDEE,A.CALYREX,A.WYRDEER,A.MEOWSCARADA,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.FARIGIRAF,A.IRON_VALIANT,A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.GALAR_YAMASK],[E.IMPRISON]:[A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.TOGETIC,A.NATU,A.XATU,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.STANTLER,A.LUGIA,A.HO_OH,A.CELEBI,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.BALTOY,A.CLAYDOL,A.MILOTIC,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.JIRACHI,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.BRONZOR,A.BRONZONG,A.SPIRITOMB,A.TOGEKISS,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.ARCEUS,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FRILLISH,A.JELLICENT,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.GOLETT,A.GOLURK,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,[A.MEOWSTIC,"male"],A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.DECIDUEYE,A.CUTIEFLY,A.RIBOMBEE,A.ORANGURU,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.NECROZMA,A.MAGEARNA,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.MORGREM,A.GRIMMSNARL,A.RUNERIGUS,A.ALCREMIE,A.FROSMOTH,A.STONJOURNER,A.INDEEDEE,A.ZACIAN,A.ZAMAZENTA,A.CALYREX,A.WYRDEER,A.ENAMORUS,A.SKELEDIRGE,A.RABSCA,A.FARIGIRAF,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_VALIANT,A.IRON_LEAVES,A.POLTCHAGEIST,A.SINISTCHA,A.MUNKIDORI,A.PECHARUNT,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_ARTICUNO,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_YAMASK,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.SECRET_POWER]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.PECHARUNT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.DIVE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTOPS,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.REMORAID,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.SUICUNE,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.BARBOACH,A.WHISCASH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.FINNEON,A.LUMINEON,A.MANTYKE,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.SEISMITOAD,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.BEARTIC,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.ARAQUANID,A.GOLISOPOD,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.CLOBBOPUS,A.GRAPPLOCT,A.EISCUE,A.DRACOVISH,A.ARCTOVISH,A.DRAKLOAK,A.DRAGAPULT,A.FINIZEN,A.PALAFIN,A.DONDOZO,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,[A.URSHIFU,"rapid-strike"]],[E.FEATHER_DANCE]:[A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.FARFETCHD,A.DODUO,A.DODRIO,A.ARTICUNO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.NATU,A.XATU,A.MURKROW,A.DELIBIRD,A.LUGIA,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.WINGULL,A.PELIPPER,A.SWABLU,A.ALTARIA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.HONCHKROW,A.CHATOT,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.DUCKLETT,A.SWANNA,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.HAWLUCHA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.CRAMORANT,A.FROSMOTH,A.EISCUE,A.QUAXWELL,A.QUAQUAVAL,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.ESPATHRA,A.BOMBIRDIER,A.FLAMIGO,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.BLAZE_KICK]:[A.CHARIZARD,A.HITMONLEE,A.MEW,A.COMBUSKEN,A.BLAZIKEN,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.RIOLU,A.LUCARIO,A.VICTINI,A.MIENSHAO,A.GENESECT,A.INCINEROAR,A.MARSHADOW,A.ZERAORA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.GALAR_ZAPDOS],[E.HYPER_VOICE]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.ARCANINE,A.CHANSEY,A.JYNX,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.MEW,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MARILL,A.AZUMARILL,A.POLITOED,A.ESPEON,A.UMBREON,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.TEDDIURSA,A.URSARING,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.BLISSEY,A.LUGIA,A.HO_OH,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.AZURILL,A.SKITTY,A.DELCATTY,A.MANECTRIC,A.WAILMER,A.WAILORD,A.GRUMPIG,A.SPINDA,A.SWABLU,A.ALTARIA,A.CHIMECHO,A.BAGON,A.SHELGON,A.SALAMENCE,A.RAYQUAZA,A.TORTERRA,A.KRICKETUNE,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.HAPPINY,A.CHATOT,A.MUNCHLAX,A.HIPPOWDON,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GALLADE,A.ROTOM,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.AUDINO,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.MARACTUS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.MELOETTA,A.DELPHOX,A.LITLEO,A.PYROAR,A.PANCHAM,A.PANGORO,A.FURFROU,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ROCKRUFF,A.LYCANROC,A.SALAZZLE,A.ORANGURU,A.SILVALLY,A.TURTONATOR,A.DRAMPA,A.KOMMO_O,A.TAPU_KOKO,A.SOLGALEO,A.NECROZMA,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.GOSSIFLEUR,A.ELDEGOSS,A.BOLTUND,A.TOXTRICITY,A.OBSTAGOON,A.PERRSERKER,A.INDEEDEE,A.ARCTOZOLT,A.ZACIAN,A.ZAMAZENTA,A.ZARUDE,A.URSALUNA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.TANDEMAUS,A.MAUSHOLD,A.ARBOLIVA,A.SQUAWKABILLY,A.TADBULB,A.BELLIBOLT,A.MABOSSTIFF,A.ESPATHRA,A.BOMBIRDIER,A.PALAFIN,A.CYCLIZAR,A.CETODDLE,A.CETITAN,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_JUGULIS,A.ROARING_MOON,A.IRON_VALIANT,A.RAGING_BOLT,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_ARTICUNO,A.GALAR_MOLTRES,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_ARCANINE,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.BLOODMOON_URSALUNA],[E.BLAST_BURN]:[A.CHARIZARD,A.MEW,A.TYPHLOSION,A.BLAZIKEN,A.INFERNAPE,A.EMBOAR,A.DELPHOX,A.INCINEROAR,A.CINDERACE,A.SKELEDIRGE,A.HISUI_TYPHLOSION],[E.HYDRO_CANNON]:[A.BLASTOISE,A.MEW,A.FERALIGATR,A.SWAMPERT,A.EMPOLEON,A.SAMUROTT,A.GRENINJA,A.PRIMARINA,A.INTELEON,A.QUAQUAVAL,A.HISUI_SAMUROTT],[E.WEATHER_BALL]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.VULPIX,A.NINETALES,A.VILEPLUME,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.CLOYSTER,A.HORSEA,A.SEADRA,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.MEGANIUM,A.BELLOSSOM,A.POLITOED,A.SUNKERN,A.SUNFLORA,A.ESPEON,A.UMBREON,A.SLOWKING,A.DELIBIRD,A.KINGDRA,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LUGIA,A.HO_OH,A.CELEBI,A.SWAMPERT,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.PELIPPER,A.MASQUERAIN,A.ROSELIA,A.WAILMER,A.WAILORD,A.TORKOAL,A.ALTARIA,A.LUNATONE,A.SOLROCK,A.WHISCASH,A.MILOTIC,A.CASTFORM,A.SNORUNT,A.GLALIE,A.LATIAS,A.LATIOS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BUDEW,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.GASTRODON,A.DRIFLOON,A.DRIFBLIM,A.BRONZONG,A.HIPPOPOTAS,A.HIPPOWDON,A.SNOVER,A.ABOMASNOW,A.ELECTIVIRE,A.MAGMORTAR,A.LEAFEON,A.GLACEON,A.FROSLASS,A.PHIONE,A.MANAPHY,A.GIGALITH,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.LILLIGANT,A.MARACTUS,A.SWANNA,A.VANILLUXE,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.GRENINJA,A.VIVILLON,A.CLAUNCHER,A.CLAWITZER,A.HELIOLISK,A.AMAURA,A.AURORUS,A.SYLVEON,A.GOODRA,A.VOLCANION,A.PRIMARINA,A.FOMANTIS,A.LURANTIS,A.SHIINOTIC,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.ELDEGOSS,A.CRAMORANT,A.FROSMOTH,A.EISCUE,A.ENAMORUS,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.ARMAROUGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.RELLOR,A.RABSCA,A.WALKING_WAKE,A.GOUGING_FIRE,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.HISUI_LILLIGANT,A.HISUI_GOODRA],[E.FAKE_TEARS]:[A.PIKACHU,A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.JYNX,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.MEW,A.TOTODILE,A.CLEFFA,A.IGGLYBUFF,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.ESPEON,A.UMBREON,A.MISDREAVUS,A.SNUBBULL,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SMOOCHUM,A.SHROOMISH,A.BRELOOM,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.AZURILL,A.SKITTY,A.MAWILE,A.PLUSLE,A.MINUN,A.ILLUMISE,A.SPINDA,A.CHIMECHO,A.SNORUNT,A.GLALIE,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.GLAMEOW,A.BONSLY,A.WEAVILE,A.LEAFEON,A.GLACEON,A.FROSLASS,A.PURRLOIN,A.LIEPARD,A.WOOBAT,A.SWOOBAT,A.COTTONEE,A.WHIMSICOTT,A.SCRAGGY,A.SCRAFTY,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.DEERLING,A.SAWSBUCK,A.VULLABY,A.MANDIBUZZ,A.MELOETTA,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.SYLVEON,A.DIANCIE,A.CUTIEFLY,A.RIBOMBEE,A.SALAZZLE,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.MORPEKO,A.URSALUNA,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.TANDEMAUS,A.MAUSHOLD,A.SQUAWKABILLY,A.MASCHIFF,A.MABOSSTIFF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.SCREAM_TAIL,A.FLUTTER_MANE,A.PECHARUNT,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_YAMASK,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.AIR_CUTTER]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.VENOMOTH,A.FARFETCHD,A.DODUO,A.DODRIO,A.SCYTHER,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.TOGETIC,A.NATU,A.XATU,A.YANMA,A.MURKROW,A.SCIZOR,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.LUGIA,A.HO_OH,A.BEAUTIFLY,A.DUSTOX,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.NINJASK,A.VOLBEAT,A.ILLUMISE,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.TROPIUS,A.SALAMENCE,A.LATIAS,A.LATIOS,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.DRIFLOON,A.DRIFBLIM,A.HONCHKROW,A.CHATOT,A.FINNEON,A.LUMINEON,A.MANTYKE,A.TOGEKISS,A.YANMEGA,A.GIRATINA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.DUCKLETT,A.SWANNA,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.VOLCARONA,A.TORNADUS,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.NOIBAT,A.NOIVERN,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.KARTANA,A.NAGANADEL,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CRAMORANT,A.KLEAVOR,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.BOMBIRDIER,A.FLAMIGO,A.IRON_BUNDLE,A.IRON_JUGULIS,A.FEZANDIPITI,A.SHAYMIN,A.GALAR_ARTICUNO,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.OVERHEAT]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.VULPIX,A.NINETALES,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.MAGMAR,A.FLAREON,A.MOLTRES,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SNUBBULL,A.GRANBULL,A.SLUGMA,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.ENTEI,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.LOUDRED,A.EXPLOUD,A.MANECTRIC,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SOLROCK,A.GROUDON,A.RAYQUAZA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.MAGMORTAR,A.DIALGA,A.HEATRAN,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.ZEBSTRIKA,A.DARUMAKA,A.DARMANITAN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.HEATMOR,A.LARVESTA,A.VOLCARONA,A.RESHIRAM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.TOUCANNON,A.SALANDIT,A.SALAZZLE,A.TURTONATOR,A.BLACEPHALON,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.CARKOL,A.COALOSSAL,A.CENTISKORCH,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.SCOVILLAIN,A.REVAVROOM,A.CYCLIZAR,A.ANNIHILAPE,A.IRON_MOTH,A.CHI_YU,A.KORAIDON,A.MIRAIDON,A.GOUGING_FIRE,[A.ROTOM,"heat"],A.GALAR_WEEZING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,[A.PALDEA_TAUROS,"blaze"]],[E.ROCK_TOMB]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.GRIMER,A.MUK,A.ONIX,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.PINSIR,A.TAUROS,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.GRANBULL,A.SHUCKLE,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.MANTINE,A.SKARMORY,A.PHANPY,A.DONPHAN,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.ZANGOOSE,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.KECLEON,A.DUSCLOPS,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.HUNTAIL,A.RELICANTH,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.BRONZOR,A.BRONZONG,A.BONSLY,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.DARKRAI,A.ARCEUS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.HYDREIGON,A.TERRAKION,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.BINACLE,A.BARBARACLE,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.HAWLUCHA,A.CARBINK,A.BERGMITE,A.AVALUGG,A.DIANCIE,A.HOOPA,A.VOLCANION,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.PASSIMIAN,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.KOMALA,A.TURTONATOR,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.SOLGALEO,A.NIHILEGO,A.BUZZWOLE,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.STAKATAKA,A.MELMETAL,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.FALINKS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.URSHIFU,A.ZARUDE,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.SPIDOPS,A.PAWMOT,A.GARGANACL,A.KLAWF,A.RELLOR,A.RABSCA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.BOMBIRDIER,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.ANNIHILAPE,A.CLODSIRE,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.IRON_TREADS,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_THORNS,A.TING_LU,A.OKIDOGI,A.OGERPON,A.ARCHALUDON,A.IRON_BOULDER,[A.WORMADAM,"sandy"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_CORSOLA,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.METAL_SOUND]:[A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.ELECTABUZZ,A.JOLTEON,A.KABUTO,A.KABUTOPS,A.ZAPDOS,A.MEW,A.FORRETRESS,A.SKARMORY,A.ELEKID,A.ARON,A.LAIRON,A.AGGRON,A.REGISTEEL,A.JIRACHI,A.EMPOLEON,A.SHIELDON,A.BASTIODON,[A.WORMADAM,"trash"],A.BRONZOR,A.BRONZONG,A.LUCARIO,A.MAGNEZONE,A.ELECTIVIRE,A.PROBOPASS,A.DIALGA,A.HEATRAN,A.DRILBUR,A.EXCADRILL,A.KLINK,A.KLANG,A.KLINKLANG,A.PAWNIARD,A.BISHARP,A.DURANT,A.COBALION,A.GENESECT,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.KLEFKI,A.TYPE_NULL,A.SILVALLY,A.DHELMISE,A.KOMMO_O,A.SOLGALEO,A.CELESTEELA,A.MAGEARNA,A.CORVIKNIGHT,A.TOXEL,A.TOXTRICITY,A.PERRSERKER,A.DURALUDON,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.VAROOM,A.REVAVROOM,A.ORTHWORM,A.KINGAMBIT,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_JUGULIS,A.IRON_MOTH,A.GHOLDENGO,A.MIRAIDON,A.IRON_LEAVES,A.ARCHALUDON,A.IRON_CROWN,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.GALAR_MEOWTH,A.GALAR_STUNFISK],[E.COSMIC_POWER]:[A.CLEFAIRY,A.CLEFABLE,A.STARYU,A.STARMIE,A.MEW,A.NATU,A.XATU,A.SKITTY,A.DELCATTY,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.CASTFORM,A.CHIMECHO,A.METANG,A.METAGROSS,A.RAYQUAZA,A.JIRACHI,[A.DEOXYS,"","attack"],A.BUNEARY,A.LOPUNNY,A.CHINGLING,A.ARCEUS,A.SIGILYPH,A.GOTHITELLE,A.ELGYEM,A.BEHEEYEM,A.MINIOR,A.COSMOEM,A.SOLGALEO,A.LUNALA,A.NECROZMA,A.ETERNATUS,A.RELLOR,A.RABSCA],[E.SIGNAL_BEAM]:[A.BLASTOISE,A.BUTTERFREE,A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.VENONAT,A.VENOMOTH,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.SEEL,A.DEWGONG,A.CLOYSTER,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.LAPRAS,A.VAPOREON,A.JOLTEON,A.PORYGON,A.ARTICUNO,A.ZAPDOS,A.MEWTWO,A.MEW,A.SPINARAK,A.ARIADOS,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.YANMA,A.ESPEON,A.SLOWKING,A.GIRAFARIG,A.FORRETRESS,A.QWILFISH,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.KINGDRA,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.ELEKID,A.RAIKOU,A.SUICUNE,A.LUGIA,A.HO_OH,A.CELEBI,A.BEAUTIFLY,A.DUSTOX,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.SPOINK,A.GRUMPIG,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.CHIMECHO,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.GOREBYSS,A.METANG,A.METAGROSS,A.REGICE,A.KYOGRE,A.JIRACHI,A.DEOXYS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.SHINX,A.LUXIO,A.LUXRAY,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.FINNEON,A.LUMINEON,A.MANTYKE,A.MAGNEZONE,A.ELECTIVIRE,A.TOGEKISS,A.YANMEGA,A.GLACEON,A.PORYGON_Z,A.GALLADE,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.VICTINI,A.WATCHOG,A.MUNNA,A.MUSHARNA,A.BLITZLE,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.GOLETT,A.GOLURK,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.ZEKROM,A.KYUREM,A.MELOETTA,A.GENESECT,A.DELPHOX,A.VIVILLON,A.ESPURR,A.MEOWSTIC,A.MALAMAR,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.HOOPA,A.VIKAVOLT,A.CUTIEFLY,A.RIBOMBEE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.TYPE_NULL,A.SILVALLY,A.BRUXISH,A.DRAMPA,A.LUNALA,A.PHEROMOSA,A.XURKITREE,A.NECROZMA,A.MAGEARNA,A.POIPOLE,A.NAGANADEL,A.WYRDEER,A.FARIGIRAF,A.ALOLA_RAICHU],[E.SAND_TOMB]:[A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.ONIX,A.MEW,A.SUDOWOODO,A.PINECO,A.FORRETRESS,A.GLIGAR,A.STEELIX,A.SCIZOR,A.SHUCKLE,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.SKARMORY,A.PHANPY,A.DONPHAN,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.MARSHTOMP,A.SWAMPERT,A.NOSEPASS,A.LAIRON,A.AGGRON,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.LUNATONE,A.SOLROCK,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.REGIROCK,A.REGISTEEL,A.GROUDON,A.TURTWIG,A.GROTLE,A.TORTERRA,A.GASTRODON,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.GLISCOR,A.MAMOSWINE,A.PROBOPASS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.LANDORUS,A.DIGGERSBY,A.CARBINK,A.DIANCIE,A.MUDBRAY,A.MUDSDALE,A.SANDYGAST,A.PALOSSAND,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.RUNERIGUS,A.STONJOURNER,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.SANDY_SHOCKS,A.IRON_THORNS,A.TING_LU,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO],[E.MUDDY_WATER]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWBRO,A.SEEL,A.DEWGONG,A.LICKITUNG,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.KINGDRA,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.AZURILL,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.CLAMPERL,A.RELICANTH,A.KYOGRE,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.HIPPOPOTAS,A.HIPPOWDON,A.LICKILICKY,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.JELLICENT,A.STUNFISK,A.KELDEO,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.GOOMY,A.SLIGGOO,A.GOODRA,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.GOLISOPOD,A.DHELMISE,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.DREDNAW,A.CLOBBOPUS,A.GRAPPLOCT,A.PINCURCHIN,A.BASCULEGION,A.TADBULB,A.BELLIBOLT,A.WIGLETT,A.WUGTRIO,A.TATSUGIRI,A.CLODSIRE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_STUNFISK,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.BULLET_SEED]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.HERACROSS,A.REMORAID,A.OCTILLERY,A.MANTINE,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SHROOMISH,A.BRELOOM,A.ROSELIA,A.GULPIN,A.SWALOT,A.CACNEA,A.CACTURNE,A.LILEEP,A.CRADILY,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.LEAFEON,A.SHAYMIN,A.ARCEUS,A.PATRAT,A.WATCHOG,A.PANSAGE,A.SIMISAGE,A.LEAVANNY,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.FERROSEED,A.FERROTHORN,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.SKIDDO,A.GOGOAT,A.PUMPKABOO,A.GOURGEIST,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.FOMANTIS,A.LURANTIS,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.TAPU_BULU,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.GOSSIFLEUR,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.MORPEKO,A.ZARUDE,A.CALYREX,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.TANDEMAUS,A.MAUSHOLD,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.BRUTE_BONNET,A.WO_CHIEN,A.DIPPLIN,A.OGERPON,A.HYDRAPPLE,[A.WORMADAM,"plant"],A.ALOLA_EXEGGUTOR,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.AERIAL_ACE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.ZUBAT,A.GOLBAT,A.PARAS,A.PARASECT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.SLOWBRO,A.FARFETCHD,A.DODUO,A.DODRIO,A.CUBONE,A.MAROWAK,A.KANGASKHAN,A.MR_MIME,A.SCYTHER,A.PORYGON,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.YANMA,A.MURKROW,A.MISDREAVUS,A.GLIGAR,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.PORYGON2,A.HITMONTOP,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.BEAUTIFLY,A.DUSTOX,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.FLYGON,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.KECLEON,A.TROPIUS,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGISTEEL,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.KRICKETUNE,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHATOT,A.GIBLE,A.GABITE,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.MANTYKE,A.WEAVILE,A.TANGROWTH,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLISCOR,A.PORYGON_Z,A.GALLADE,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.LEAVANNY,A.KROKOROK,A.KROOKODILE,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.DUCKLETT,A.SWANNA,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FERROTHORN,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.KELDEO,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.GOGOAT,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.HAWLUCHA,A.DEDENNE,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.LURANTIS,A.STUFFUL,A.BEWEAR,A.PASSIMIAN,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.BRUXISH,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.LUNALA,A.KARTANA,A.NECROZMA,A.NAGANADEL,A.ZERAORA,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.FLAPPLE,A.CRAMORANT,A.DRACOZOLT,A.KUBFU,A.URSHIFU,A.ZARUDE,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.FLORAGATO,A.MEOWSCARADA,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.SPIDOPS,A.LOKIX,A.TANDEMAUS,A.MAUSHOLD,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.ESPATHRA,A.BOMBIRDIER,A.CYCLIZAR,A.FLAMIGO,A.KINGAMBIT,A.SLITHER_WING,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.ROARING_MOON,A.IRON_VALIANT,A.IRON_LEAVES,A.FEZANDIPITI,A.IRON_BOULDER,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.ICICLE_SPEAR]:[A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.JYNX,A.LAPRAS,A.ARTICUNO,A.MEW,A.SNEASEL,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.DELIBIRD,A.SNORUNT,A.GLALIE,A.SEALEO,A.WALREIN,A.REGICE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.GLACEON,A.MAMOSWINE,A.FROSLASS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.KYUREM,A.AURORUS,A.BERGMITE,A.AVALUGG,A.INTELEON,A.CURSOLA,A.MR_RIME,A.SNOM,A.FROSMOTH,A.EISCUE,A.ARCTOZOLT,A.ARCTOVISH,A.GLASTRIER,A.CETODDLE,A.CETITAN,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.GALAR_MR_MIME,A.GALAR_CORSOLA,[A.CALYREX,"ice"],A.HISUI_AVALUGG],[E.IRON_DEFENSE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.METAPOD,A.BUTTERFREE,A.KAKUNA,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.RHYDON,A.MR_MIME,A.PINSIR,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.MEW,A.SUDOWOODO,A.SLOWKING,A.PINECO,A.FORRETRESS,A.STEELIX,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SLUGMA,A.MAGCARGO,A.CORSOLA,A.SKARMORY,A.DONPHAN,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.SILCOON,A.CASCOON,A.NOSEPASS,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.TORKOAL,A.SOLROCK,A.CORPHISH,A.CRAWDAUNT,A.CLAYDOL,A.ANORITH,A.ARMALDO,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.BAGON,A.SHELGON,A.SALAMENCE,A.BELDUM,A.METANG,A.METAGROSS,A.REGIROCK,A.REGISTEEL,A.JIRACHI,A.TORTERRA,A.EMPOLEON,A.SHIELDON,A.BASTIODON,A.BRONZOR,A.BRONZONG,A.RIOLU,A.LUCARIO,A.DRAPION,A.MAGNEZONE,A.RHYPERIOR,A.PROBOPASS,A.DIALGA,A.HEATRAN,A.ARCEUS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.KARRABLAST,A.ESCAVALIER,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.CRYOGONAL,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.DURANT,A.COBALION,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.SPEWPA,A.VIVILLON,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.CARBINK,A.KLEFKI,A.BERGMITE,A.AVALUGG,A.DIANCIE,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.TURTONATOR,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.MELTAN,A.MELMETAL,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SANDACONDA,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.FALINKS,A.STONJOURNER,A.EISCUE,A.CUFANT,A.COPPERAJAH,A.ARCTOVISH,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.URSHIFU,A.GLASTRIER,A.ENAMORUS,A.NACLI,A.NACLSTACK,A.GARGANACL,A.ARMAROUGE,A.CERULEDGE,A.KLAWF,A.RELLOR,A.RABSCA,A.VAROOM,A.REVAVROOM,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.KINGAMBIT,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.IRON_LEAVES,A.POLTCHAGEIST,A.SINISTCHA,A.ARCHALUDON,A.IRON_CROWN,[A.DEOXYS,"defense"],[A.WORMADAM,"trash"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,[A.CALYREX,"ice"],A.HISUI_AVALUGG],[E.DRAGON_CLAW]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.AERODACTYL,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.TYRANITAR,A.SCEPTILE,A.AGGRON,A.FLYGON,A.ALTARIA,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.GIBLE,A.GABITE,A.GARCHOMP,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.CHESNAUGHT,A.PANGORO,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.GOODRA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.SALANDIT,A.SALAZZLE,A.BEWEAR,A.TYPE_NULL,A.SILVALLY,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.GUZZLORD,A.NAGANADEL,A.DRACOZOLT,A.DURALUDON,A.DRAGAPULT,A.REGIDRAGO,A.CERULEDGE,A.CYCLIZAR,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.ARCHALUDON,A.GOUGING_FIRE,A.HISUI_GOODRA],[E.FRENZY_PLANT]:[A.VENUSAUR,A.MEW,A.MEGANIUM,A.SCEPTILE,A.TORTERRA,A.SERPERIOR,A.CHESNAUGHT,A.DECIDUEYE,A.RILLABOOM,A.MEOWSCARADA,A.HISUI_DECIDUEYE],[E.BULK_UP]:[A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.HITMONLEE,A.HITMONCHAN,A.ELECTABUZZ,A.PINSIR,A.MEWTWO,A.MEW,A.SNUBBULL,A.GRANBULL,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.TYROGUE,A.HITMONTOP,A.COMBUSKEN,A.BLAZIKEN,A.SWAMPERT,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.GROUDON,A.RAYQUAZA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.BUIZEL,A.FLOATZEL,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.ELECTIVIRE,A.GALLADE,A.DIALGA,A.PALKIA,A.ARCEUS,A.PIGNITE,A.EMBOAR,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.KROOKODILE,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.EELEKTROSS,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.RUFFLET,A.BRAVIARY,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.TALONFLAME,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.BARBARACLE,A.HAWLUCHA,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.CRABRAWLER,A.CRABOMINABLE,A.LYCANROC,A.STUFFUL,A.BEWEAR,A.PASSIMIAN,A.GOLISOPOD,A.KOMALA,A.TURTONATOR,A.MIMIKYU,A.BRUXISH,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.BUZZWOLE,A.MARSHADOW,A.ZERAORA,A.RILLABOOM,A.RABOOT,A.CINDERACE,A.CORVIKNIGHT,A.BOLTUND,A.CLOBBOPUS,A.GRAPPLOCT,A.GRIMMSNARL,A.OBSTAGOON,A.FALINKS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.URSALUNA,A.SNEASLER,A.QUAQUAVAL,A.PAWMOT,A.CERULEDGE,A.PALAFIN,A.FLAMIGO,A.ANNIHILAPE,A.GREAT_TUSK,A.SCREAM_TAIL,A.SLITHER_WING,A.KORAIDON,A.OKIDOGI,A.ALOLA_RATICATE,A.GALAR_ZAPDOS,A.GALAR_DARMANITAN,A.HISUI_SNEASEL,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS],[E.BOUNCE]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PONYTA,A.RAPIDASH,A.HITMONLEE,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.MAGIKARP,A.GYARADOS,A.MEW,A.SPINARAK,A.ARIADOS,A.CHINCHOU,A.LANTURN,A.IGGLYBUFF,A.MARILL,A.AZUMARILL,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.QWILFISH,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.KINGDRA,A.DONPHAN,A.STANTLER,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.SHIFTRY,A.AZURILL,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.SPOINK,A.GRUMPIG,A.BARBOACH,A.WHISCASH,A.ABSOL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.CROAGUNK,A.TOXICROAK,A.FINNEON,A.LUMINEON,A.MANTYKE,A.PHIONE,A.MANAPHY,A.VICTINI,A.BLITZLE,A.ZEBSTRIKA,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.MARACTUS,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.DEERLING,A.SAWSBUCK,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.EELEKTRIK,A.EELEKTROSS,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.COBALION,A.VIRIZION,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.PYROAR,A.GOGOAT,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HAWLUCHA,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.TOGEDEMARU,A.BUZZWOLE,A.PHEROMOSA,A.MARSHADOW,A.ZERAORA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.DUBWOOL,A.ARROKUDA,A.BARRASKEWDA,A.REGIELEKI,A.LOKIX,A.FINIZEN,A.CETODDLE,A.CETITAN,A.CHI_YU,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_ZAPDOS,A.GALAR_STUNFISK],[E.MUD_SHOT]:[A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.RHYHORN,A.RHYDON,A.GOLDEEN,A.SEAKING,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.MEW,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.DUNSPARCE,A.GLIGAR,A.QWILFISH,A.SHUCKLE,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.REMORAID,A.OCTILLERY,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOMBRE,A.LUDICOLO,A.SURSKIT,A.MASQUERAIN,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.SABLEYE,A.GULPIN,A.SWALOT,A.NUMEL,A.CAMERUPT,A.GRUMPIG,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.RELICANTH,A.GROUDON,A.TURTWIG,A.GROTLE,A.TORTERRA,A.PACHIRISU,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOPOTAS,A.HIPPOWDON,A.CROAGUNK,A.TOXICROAK,A.RHYPERIOR,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.DRILBUR,A.EXCADRILL,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.TIRTOUGA,A.CARRACOSTA,A.CUBCHOO,A.BEARTIC,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.BOUFFALANT,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.SKIDDO,A.GOGOAT,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.GOOMY,A.SLIGGOO,A.GOODRA,A.VOLCANION,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDSDALE,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.NICKIT,A.THIEVUL,A.CHEWTLE,A.DREDNAW,A.SILICOBRA,A.SANDACONDA,A.CLOBBOPUS,A.GRAPPLOCT,A.OBSTAGOON,A.CUFANT,A.COPPERAJAH,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.BASCULEGION,A.OVERQWIL,A.LECHONK,A.OINKOLOGNE,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.NACLI,A.NACLSTACK,A.GARGANACL,A.TADBULB,A.BELLIBOLT,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.RELLOR,A.RABSCA,A.WIGLETT,A.WUGTRIO,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.CLODSIRE,A.DUDUNSPARCE,A.GREAT_TUSK,A.SANDY_SHOCKS,A.IRON_TREADS,A.WO_CHIEN,A.TING_LU,A.KORAIDON,A.WALKING_WAKE,A.PIKACHU,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_STUNFISK,A.HISUI_QWILFISH,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.POISON_TAIL]:[A.EKANS,A.ARBOK,A.NIDORAN_F,A.NIDORAN_M,A.MEW,A.DUNSPARCE,A.GLIGAR,A.QWILFISH,A.SEVIPER,A.STUNKY,A.SKUNTANK,A.SKORUPI,A.GLISCOR,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.DRUDDIGON,A.SKRELP,A.DRAGALGE,A.GOOMY,A.GOODRA,A.SALANDIT,A.SALAZZLE,A.SILICOBRA,A.SANDACONDA,A.TOXTRICITY,A.ETERNATUS,A.SNEASLER,A.OVERQWIL,A.GRAFAIAI,A.CLODSIRE,A.DUDUNSPARCE,A.OKIDOGI,A.FEZANDIPITI,A.PIKACHU,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.PALDEA_WOOPER],[E.COVET]:[A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.FARFETCHD,A.HITMONLEE,A.HITMONCHAN,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SENTRET,A.FURRET,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.AIPOM,A.ESPEON,A.UMBREON,A.SNUBBULL,A.GRANBULL,A.SHUCKLE,A.TEDDIURSA,A.URSARING,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.BLISSEY,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.AZURILL,A.SKITTY,A.DELCATTY,A.PLUSLE,A.MINUN,A.ILLUMISE,A.ROSELIA,A.SPOINK,A.GRUMPIG,A.SPINDA,A.LATIAS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.BUDEW,A.ROSERADE,A.PACHIRISU,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.GLAMEOW,A.PURUGLY,A.BONSLY,A.MIME_JR,A.HAPPINY,A.MUNCHLAX,A.ELECTIVIRE,A.MAGMORTAR,A.LICKILICKY,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.PHIONE,A.MANAPHY,A.SHAYMIN,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANPOUR,A.SIMIPOUR,A.PANSEAR,A.SIMISEAR,A.AUDINO,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.EMOLGA,A.CUBCHOO,A.BEARTIC,A.KELDEO,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLABEBE,A.FLOETTE,A.FLORGES,A.PANCHAM,A.PANGORO,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.SYLVEON,A.DEDENNE,A.CARBINK,A.KLEFKI,A.DIANCIE,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.SALANDIT,A.SALAZZLE,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.TOGEDEMARU,A.MIMIKYU,A.POIPOLE,A.GREEDENT,A.PERRSERKER,A.SIRFETCHD,A.MR_RIME,A.URSALUNA,A.LECHONK,A.OINKOLOGNE,A.FIDOUGH,A.DACHSBUN,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.ANNIHILAPE,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_FARFETCHD,A.GALAR_MR_MIME,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE,A.ETERNAL_FLOETTE],[E.MAGICAL_LEAF]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGUTOR,A.MR_MIME,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CLEFFA,A.TOGETIC,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.ESPEON,A.MISDREAVUS,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHROOMISH,A.BRELOOM,A.ROSELIA,A.CACNEA,A.CACTURNE,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.MISMAGIUS,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TOGEKISS,A.LEAFEON,A.GALLADE,A.SHAYMIN,A.ARCEUS,A.SNIVY,A.PANSAGE,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.PETILIL,A.LILLIGANT,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.VIRIZION,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.SYLVEON,A.PHANTUMP,A.TREVENANT,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.CUTIEFLY,A.RIBOMBEE,A.FOMANTIS,A.LURANTIS,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.GOSSIFLEUR,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.ALCREMIE,A.INDEEDEE,A.ZARUDE,A.CALYREX,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.BRUTE_BONNET,A.FLUTTER_MANE,A.WO_CHIEN,A.IRON_VALIANT,A.IRON_LEAVES,A.POLTCHAGEIST,A.SINISTCHA,A.OGERPON,A.HYDRAPPLE,[A.MEOWSTIC,"female"],A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.CALM_MIND]:[A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.EXEGGUTOR,A.CHANSEY,A.MR_MIME,A.JYNX,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CLEFFA,A.NATU,A.XATU,A.SUDOWOODO,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.SNEASEL,A.CORSOLA,A.STANTLER,A.SMOOCHUM,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LUGIA,A.HO_OH,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.SPINDA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.RELICANTH,A.LATIAS,A.LATIOS,A.KYOGRE,A.JIRACHI,A.DEOXYS,A.INFERNAPE,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.SPIRITOMB,A.LUCARIO,A.WEAVILE,A.LEAFEON,A.GLACEON,A.GALLADE,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.GIRATINA,A.CRESSELIA,A.MANAPHY,A.DARKRAI,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ALOMOMOLA,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.MIENFOO,A.MIENSHAO,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.LANDORUS,A.KELDEO,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.AMAURA,A.AURORUS,A.SYLVEON,A.CARBINK,A.KLEFKI,A.TREVENANT,A.XERNEAS,A.DIANCIE,A.HOOPA,A.PRIMARINA,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.COMFEY,A.ORANGURU,A.MINIOR,A.KOMALA,A.BRUXISH,A.DRAMPA,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.XURKITREE,A.KARTANA,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.BLACEPHALON,A.ZERAORA,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.CURSOLA,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.FROSMOTH,A.INDEEDEE,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.SNEASLER,A.ENAMORUS,A.ARMAROUGE,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_VALIANT,A.MIRAIDON,A.IRON_LEAVES,A.POLTCHAGEIST,A.SINISTCHA,A.MUNKIDORI,A.FEZANDIPITI,A.RAGING_BOLT,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RAICHU,A.ALOLA_NINETALES,A.ETERNAL_FLOETTE,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_YAMASK,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.BLOODMOON_URSALUNA],[E.LEAF_BLADE]:[A.VICTREEBEL,A.FARFETCHD,A.MEW,A.BELLOSSOM,A.CELEBI,A.GROVYLE,A.SCEPTILE,A.NUZLEAF,A.SHIFTRY,A.TROPIUS,A.LEAFEON,A.GALLADE,A.SNIVY,A.SERVINE,A.SERPERIOR,A.LEAVANNY,A.LILLIGANT,A.VIRIZION,A.SKIDDO,A.GOGOAT,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.FOMANTIS,A.LURANTIS,A.KARTANA,A.SIRFETCHD,A.IRON_VALIANT,A.IRON_LEAVES,A.GALAR_FARFETCHD,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.DRAGON_DANCE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.ONIX,A.HORSEA,A.SEADRA,A.GYARADOS,A.LAPRAS,A.AERODACTYL,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.STEELIX,A.KINGDRA,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.SCEPTILE,A.FLYGON,A.ALTARIA,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.MILOTIC,A.TROPIUS,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.ARCEUS,A.SCRAGGY,A.SCRAFTY,A.AXEW,A.FRAXURE,A.HAXORUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.TYRUNT,A.TYRANTRUM,A.NOIVERN,A.ZYGARDE,A.SALAZZLE,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.NECROZMA,A.NAGANADEL,A.FLAPPLE,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.REGIDRAGO,A.TATSUGIRI,A.IRON_THORNS,A.BAXCALIBUR,A.ROARING_MOON,A.WALKING_WAKE,A.GOUGING_FIRE],[E.ROCK_BLAST]:[A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SHELLDER,A.CLOYSTER,A.ONIX,A.RHYHORN,A.RHYDON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.MEW,A.SUDOWOODO,A.PINECO,A.FORRETRESS,A.STEELIX,A.SHUCKLE,A.HERACROSS,A.SLUGMA,A.MAGCARGO,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.MANTINE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.NOSEPASS,A.LAIRON,A.AGGRON,A.LUNATONE,A.SOLROCK,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.RELICANTH,A.REGIROCK,A.GROUDON,A.TORTERRA,A.SHIELDON,A.BASTIODON,A.GASTRODON,A.BRONZOR,A.BRONZONG,A.BONSLY,A.RHYPERIOR,A.MAMOSWINE,A.PROBOPASS,A.HEATRAN,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.EXCADRILL,A.CONKELDURR,A.DWEBBLE,A.CRUSTLE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.CINCCINO,A.TERRAKION,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.CARBINK,A.TRUMBEAK,A.TOUCANNON,A.LYCANROC,A.MINIOR,A.NECROZMA,A.STAKATAKA,A.BLACEPHALON,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.KLEAVOR,A.GARGANACL,A.KLAWF,A.BOMBIRDIER,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.IRON_THORNS,A.IRON_BOULDER,[A.WORMADAM,"sandy"],A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.GALAR_SLOWBRO,A.GALAR_CORSOLA,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_AVALUGG],[E.WATER_PULSE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.LICKITUNG,A.CHANSEY,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.JYNX,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.SNORLAX,A.ARTICUNO,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MARILL,A.AZUMARILL,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SNEASEL,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.KINGDRA,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.CELEBI,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.AZURILL,A.SKITTY,A.DELCATTY,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.SPINDA,A.ZANGOOSE,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.LATIAS,A.LATIOS,A.KYOGRE,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.GLAMEOW,A.PURUGLY,A.HAPPINY,A.SPIRITOMB,A.MUNCHLAX,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.TOGEKISS,A.GLACEON,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.STUNFISK,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.GOOMY,A.SLIGGOO,A.GOODRA,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.VOLCANION,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.GOLISOPOD,A.BRUXISH,A.DRAMPA,A.KOMMO_O,A.TAPU_FINI,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.EISCUE,A.BASCULEGION,A.QUAXWELL,A.QUAQUAVAL,A.TANDEMAUS,A.MAUSHOLD,A.TADBULB,A.BELLIBOLT,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.CLODSIRE,A.SCREAM_TAIL,A.IRON_BUNDLE,A.WALKING_WAKE,A.TERAPAGOS,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_SLIGGOO,A.HISUI_GOODRA,[A.PALDEA_TAUROS,"aqua"],A.PALDEA_WOOPER],[E.ROOST]:[A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.VENOMOTH,A.FARFETCHD,A.DODUO,A.DODRIO,A.SCYTHER,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.TOGETIC,A.NATU,A.XATU,A.YANMA,A.MURKROW,A.DUNSPARCE,A.GLIGAR,A.SCIZOR,A.MANTINE,A.SKARMORY,A.LUGIA,A.HO_OH,A.BEAUTIFLY,A.DUSTOX,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.NINJASK,A.VOLBEAT,A.ILLUMISE,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.TROPIUS,A.SALAMENCE,A.LATIAS,A.LATIOS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.MOTHIM,A.VESPIQUEN,A.HONCHKROW,A.CHATOT,A.TOGEKISS,A.YANMEGA,A.GLISCOR,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.DUCKLETT,A.SWANNA,A.EMOLGA,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.VOLCARONA,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.VIKAVOLT,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.DRAMPA,A.TAPU_KOKO,A.LUNALA,A.BUZZWOLE,A.PHEROMOSA,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CRAMORANT,A.KLEAVOR,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.FLITTLE,A.ESPATHRA,A.BOMBIRDIER,A.FLAMIGO,A.DUDUNSPARCE,A.ROARING_MOON,A.FEZANDIPITI,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.GRAVITY]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MAGNEMITE,A.MAGNETON,A.EXEGGCUTE,A.EXEGGUTOR,A.CHANSEY,A.STARYU,A.STARMIE,A.PORYGON,A.MEWTWO,A.MEW,A.CLEFFA,A.IGGLYBUFF,A.ESPEON,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.PORYGON2,A.STANTLER,A.BLISSEY,A.GARDEVOIR,A.NOSEPASS,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.JIRACHI,A.DEOXYS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.HAPPINY,A.MAGNEZONE,A.GLACEON,A.PORYGON_Z,A.PROBOPASS,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.ARCEUS,A.MUNNA,A.MUSHARNA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.AUDINO,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.ELGYEM,A.BEHEEYEM,A.GOLETT,A.GOLURK,A.LANDORUS,A.MELOETTA,A.GENESECT,A.ESPURR,A.MEOWSTIC,A.CARBINK,A.XERNEAS,A.DIANCIE,A.HOOPA,A.ORANGURU,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.TOGEDEMARU,A.TAPU_LELE,A.TAPU_FINI,A.XURKITREE,A.CELESTEELA,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.HATTERENE,A.STONJOURNER,A.INDEEDEE,A.ETERNATUS,A.CALYREX,A.WYRDEER,A.GARGANACL,A.RABSCA,A.FARIGIRAF,A.SANDY_SHOCKS,A.IRON_LEAVES,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_EXEGGUTOR,[A.INDEEDEE,"male"]],[E.GYRO_BALL]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.SANDSHREW,A.SANDSLASH,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GEODUDE,A.GRAVELER,A.GOLEM,A.MAGNEMITE,A.MAGNETON,A.ONIX,A.VOLTORB,A.ELECTRODE,A.KOFFING,A.WEEZING,A.STARYU,A.STARMIE,A.OMANYTE,A.OMASTAR,A.MEW,A.TYPHLOSION,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.STEELIX,A.QWILFISH,A.SHUCKLE,A.MAGCARGO,A.DONPHAN,A.HITMONTOP,A.MILTANK,A.SABLEYE,A.TORKOAL,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.GLALIE,A.METANG,A.METAGROSS,A.RAYQUAZA,A.DRIFLOON,A.DRIFBLIM,A.BRONZOR,A.BRONZONG,A.MAGNEZONE,A.LICKILICKY,A.TEPIG,A.PIGNITE,A.EMBOAR,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.DARUMAKA,A.DARMANITAN,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FERROSEED,A.FERROTHORN,A.GOLETT,A.GOLURK,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.CARBINK,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.DIANCIE,A.VOLCANION,A.PASSIMIAN,A.MINIOR,A.TOGEDEMARU,A.DHELMISE,A.SOLGALEO,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.MELTAN,A.MELMETAL,A.SKWOVET,A.GREEDENT,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.PERRSERKER,A.DURALUDON,A.OVERQWIL,A.VAROOM,A.REVAVROOM,A.DUDUNSPARCE,A.SCREAM_TAIL,A.IRON_TREADS,A.DIPPLIN,A.ARCHALUDON,A.HYDRAPPLE,A.TERAPAGOS,[A.WORMADAM,"trash"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG],[E.BRINE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.HORSEA,A.SEADRA,A.STARYU,A.STARMIE,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.MEW,A.CHINCHOU,A.LANTURN,A.SLOWKING,A.QWILFISH,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.SUICUNE,A.LUGIA,A.WINGULL,A.PELIPPER,A.HARIYAMA,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.KYOGRE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.FINNEON,A.LUMINEON,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.PANPOUR,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.SANDYGAST,A.PALOSSAND,A.DHELMISE,A.TAPU_FINI,A.CLOBBOPUS,A.GRAPPLOCT,A.CURSOLA,A.PINCURCHIN,A.EISCUE,A.DRACOVISH,A.ARCTOVISH,A.DRAKLOAK,A.DRAGAPULT,A.OVERQWIL,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,[A.URSHIFU,"rapid-strike"],A.HISUI_QWILFISH],[E.PLUCK]:[A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.FARFETCHD,A.DODUO,A.DODRIO,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.NATU,A.XATU,A.MURKROW,A.DELIBIRD,A.SKARMORY,A.HO_OH,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.SWABLU,A.ALTARIA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.HONCHKROW,A.CHATOT,A.TOGEKISS,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.DUCKLETT,A.SWANNA,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.INKAY,A.MALAMAR,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CRAMORANT,A.DRACOZOLT,A.ARCTOZOLT,A.WATTREL,A.KILOWATTREL,A.FLITTLE,A.ESPATHRA,A.BOMBIRDIER,A.VELUZA,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.GALAR_ZAPDOS,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.TAILWIND]:[A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.VENOMOTH,A.FARFETCHD,A.SCYTHER,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.TOGETIC,A.NATU,A.XATU,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.YANMA,A.MURKROW,A.GLIGAR,A.SCIZOR,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.SUICUNE,A.LUGIA,A.HO_OH,A.BEAUTIFLY,A.DUSTOX,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.VOLBEAT,A.ILLUMISE,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.CASTFORM,A.TROPIUS,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.STARLY,A.STARAVIA,A.STARAPTOR,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.DRIFLOON,A.DRIFBLIM,A.HONCHKROW,A.CHATOT,A.FINNEON,A.LUMINEON,A.MANTYKE,A.TOGEKISS,A.YANMEGA,A.GLISCOR,A.ARCEUS,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.COTTONEE,A.WHIMSICOTT,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.DUCKLETT,A.SWANNA,A.EMOLGA,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.VOLCARONA,A.TORNADUS,A.RESHIRAM,A.ZEKROM,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.COMFEY,A.SILVALLY,A.DRAMPA,A.LUNALA,A.KARTANA,A.NAGANADEL,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CRAMORANT,A.FROSMOTH,A.KLEAVOR,A.ENAMORUS,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.BOMBIRDIER,A.FLAMIGO,A.DUDUNSPARCE,A.IRON_JUGULIS,A.ROARING_MOON,A.FEZANDIPITI,A.SHAYMIN,A.GIRATINA,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.U_TURN]:[A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.VENOMOTH,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.FARFETCHD,A.SCYTHER,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.MEW,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.CROBAT,A.NATU,A.XATU,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.YANMA,A.MURKROW,A.GLIGAR,A.SCIZOR,A.CELEBI,A.BLAZIKEN,A.BEAUTIFLY,A.DUSTOX,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.NINJASK,A.VOLBEAT,A.ILLUMISE,A.VIBRAVA,A.FLYGON,A.TROPIUS,A.RAYQUAZA,A.JIRACHI,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.STARLY,A.STARAVIA,A.STARAPTOR,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.AMBIPOM,A.LOPUNNY,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHATOT,A.FINNEON,A.LUMINEON,A.YANMEGA,A.GLISCOR,A.UXIE,A.MESPRIT,A.AZELF,A.PHIONE,A.MANAPHY,A.VICTINI,A.PURRLOIN,A.LIEPARD,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.WHIMSICOTT,A.DARUMAKA,A.DARMANITAN,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.EMOLGA,A.EELEKTRIK,A.EELEKTROSS,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.MELOETTA,A.GENESECT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.FURFROU,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.HAWLUCHA,A.DEDENNE,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.WISHIWASHI,A.TSAREENA,A.COMFEY,A.PASSIMIAN,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TOGEDEMARU,A.TAPU_KOKO,A.PHEROMOSA,A.NAGANADEL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.ORBEETLE,A.THIEVUL,A.FLAPPLE,A.PERRSERKER,A.FROSMOTH,A.DRAKLOAK,A.DRAGAPULT,A.KUBFU,A.URSHIFU,A.ZARUDE,A.KLEAVOR,A.SNEASLER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.QUAQUAVAL,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.TANDEMAUS,A.MAUSHOLD,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.SHROODLE,A.GRAFAIAI,A.FLITTLE,A.ESPATHRA,A.BOMBIRDIER,A.CYCLIZAR,A.FLAMIGO,A.ANNIHILAPE,A.SLITHER_WING,A.IRON_BUNDLE,A.IRON_JUGULIS,A.IRON_MOTH,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.CLOSE_COMBAT]:[A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.FARFETCHD,A.HITMONLEE,A.HITMONCHAN,A.SCYTHER,A.PINSIR,A.TAUROS,A.MEW,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.HITMONTOP,A.COMBUSKEN,A.BLAZIKEN,A.BRELOOM,A.MAKUHITA,A.HARIYAMA,A.MEDITITE,A.MEDICHAM,A.SHARPEDO,A.ZANGOOSE,A.CRAWDAUNT,A.ABSOL,A.MONFERNO,A.INFERNAPE,A.STARAPTOR,A.LOPUNNY,A.RIOLU,A.LUCARIO,A.TOXICROAK,A.GALLADE,A.PIGNITE,A.EMBOAR,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SAWK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ESCAVALIER,A.EELEKTROSS,A.HAXORUS,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.GOLURK,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.MELOETTA,A.CHESNAUGHT,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.TYRUNT,A.TYRANTRUM,A.HAWLUCHA,A.XERNEAS,A.INCINEROAR,A.CRABRAWLER,A.CRABOMINABLE,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.BEWEAR,A.PASSIMIAN,A.GOLISOPOD,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.SOLGALEO,A.BUZZWOLE,A.PHEROMOSA,A.MARSHADOW,A.ZERAORA,A.ARROKUDA,A.BARRASKEWDA,A.CLOBBOPUS,A.GRAPPLOCT,A.OBSTAGOON,A.PERRSERKER,A.SIRFETCHD,A.FALINKS,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.QUAQUAVAL,A.PAWMOT,A.CERULEDGE,A.PALAFIN,A.FLAMIGO,A.ANNIHILAPE,A.GREAT_TUSK,A.BRUTE_BONNET,A.SLITHER_WING,A.IRON_HANDS,A.IRON_VALIANT,A.KORAIDON,A.IRON_LEAVES,A.OKIDOGI,A.IRON_BOULDER,A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,[A.CALYREX,"ice"],A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_SNEASEL,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS],[E.PAYBACK]:[A.BEEDRILL,A.EKANS,A.ARBOK,A.VULPIX,A.NINETALES,A.ZUBAT,A.GOLBAT,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.TENTACOOL,A.TENTACRUEL,A.DODRIO,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.MR_MIME,A.JYNX,A.TAUROS,A.GYARADOS,A.AERODACTYL,A.MEW,A.CROBAT,A.POLITOED,A.AIPOM,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.PINECO,A.FORRETRESS,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.OCTILLERY,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.SMOOCHUM,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.PELIPPER,A.HARIYAMA,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.SPOINK,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.GLALIE,A.CRANIDOS,A.RAMPARDOS,A.FLOATZEL,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.SPIRITOMB,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.WEAVILE,A.RHYPERIOR,A.TANGROWTH,A.GLISCOR,A.DUSKNOIR,A.FROSLASS,A.AZELF,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.FOONGUS,A.AMOONGUSS,A.FERROSEED,A.FERROTHORN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.ESPURR,A.MEOWSTIC,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.YVELTAL,A.ZYGARDE,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.FOMANTIS,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.STEENEE,A.TSAREENA,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.BUZZWOLE,A.GUZZLORD,A.MARSHADOW,A.BLACEPHALON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.APPLETUN,A.TOXTRICITY,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.OBSTAGOON,A.PERRSERKER,A.MR_RIME,A.RUNERIGUS,A.FALINKS,A.PINCURCHIN,A.MORPEKO,A.COPPERAJAH,A.ARCTOZOLT,A.ZAMAZENTA,A.ETERNATUS,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,A.URSALUNA,A.MASCHIFF,A.MABOSSTIFF,A.BOMBIRDIER,A.FLAMIGO,A.BRUTE_BONNET,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,[A.CALYREX,"ice","shadow"]],[E.ASSURANCE]:[A.BEEDRILL,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.MACHAMP,A.DODUO,A.KOFFING,A.WEEZING,A.KANGASKHAN,A.SCYTHER,A.TAUROS,A.AERODACTYL,A.MEW,A.CROBAT,A.UMBREON,A.MURKROW,A.GIRAFARIG,A.QWILFISH,A.SCIZOR,A.HERACROSS,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.DONPHAN,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.MAWILE,A.CARVANHA,A.SHARPEDO,A.CACNEA,A.CACTURNE,A.SEVIPER,A.ABSOL,A.CRANIDOS,A.RAMPARDOS,A.VESPIQUEN,A.BUNEARY,A.LOPUNNY,A.HONCHKROW,A.GLAMEOW,A.STUNKY,A.SKUNTANK,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.AZELF,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.PATRAT,A.PURRLOIN,A.LIEPARD,A.WOOBAT,A.SWOOBAT,A.SCOLIPEDE,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.MARACTUS,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENSHAO,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.GENESECT,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.HAWLUCHA,A.GOODRA,A.INCINEROAR,A.LYCANROC,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.TOGEDEMARU,A.DHELMISE,A.TAPU_KOKO,A.PHEROMOSA,A.MARSHADOW,A.NAGANADEL,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.SIRFETCHD,A.FALINKS,A.PINCURCHIN,A.STONJOURNER,A.MORPEKO,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ETERNATUS,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.GLASTRIER,A.SPECTRIER,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.VAROOM,A.REVAVROOM,A.ANNIHILAPE,A.FARIGIRAF,A.KINGAMBIT,A.IRON_JUGULIS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.GALAR_MEOWTH,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,[A.CALYREX,"ice","shadow"],[A.PALDEA_TAUROS,"combat"]],[E.EMBARGO]:[A.PERSIAN,A.ABRA,A.KADABRA,A.ALAKAZAM,A.GASTLY,A.HAUNTER,A.GENGAR,A.MEWTWO,A.MEW,A.MURKROW,A.MISDREAVUS,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.SABLEYE,A.MAWILE,A.CACTURNE,A.ZANGOOSE,A.LUNATONE,A.SOLROCK,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.SPIRITOMB,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.PORYGON_Z,A.DUSKNOIR,A.FROSLASS,A.DARKRAI,A.VICTINI,A.PURRLOIN,A.LIEPARD,A.WOOBAT,A.SWOOBAT,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.TORNADUS,A.THUNDURUS,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.PANGORO,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.YVELTAL,A.HOOPA,A.INCINEROAR,A.ORICORIO,A.ORANGURU,A.PALOSSAND,A.MIMIKYU,A.BRUXISH,A.DHELMISE,A.NECROZMA,A.MAGEARNA,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK],[E.FLING]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GLOOM,A.VILEPLUME,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.QUAGSIRE,A.SLOWKING,A.GLIGAR,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.CORPHISH,A.CRAWDAUNT,A.KECLEON,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MIME_JR,A.HAPPINY,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.GLISCOR,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.PALKIA,A.REGIGIGAS,A.PHIONE,A.MANAPHY,A.DARKRAI,A.VICTINI,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.WHIMSICOTT,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.REUNICLUS,A.EMOLGA,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.HEATMOR,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.DEDENNE,A.HOOPA,A.VOLCANION,A.INCINEROAR,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.FOMANTIS,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.BLACEPHALON,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.CINDERACE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.TOXTRICITY,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.MR_RIME,A.MILCERY,A.ALCREMIE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.KUBFU,A.URSHIFU,A.ZARUDE,A.URSALUNA,A.SNEASLER,A.FLORAGATO,A.MEOWSCARADA,A.QUAQUAVAL,A.SPIDOPS,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.ARBOLIVA,A.GARGANACL,A.ARMAROUGE,A.CERULEDGE,A.SHROODLE,A.GRAFAIAI,A.KLAWF,A.RELLOR,A.RABSCA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.FINIZEN,A.PALAFIN,A.FLAMIGO,A.ANNIHILAPE,A.KINGAMBIT,A.SCREAM_TAIL,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_THORNS,A.GHOLDENGO,A.IRON_VALIANT,A.OKIDOGI,A.MUNKIDORI,A.OGERPON,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.BLOODMOON_URSALUNA],[E.GASTRO_ACID]:[A.EKANS,A.ARBOK,A.ODDISH,A.GLOOM,A.VILEPLUME,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.SNORLAX,A.MEW,A.BELLOSSOM,A.SHUCKLE,A.GULPIN,A.SWALOT,A.SEVIPER,A.LILEEP,A.CRADILY,A.MUNCHLAX,A.CARNIVINE,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.PALPITOAD,A.SEISMITOAD,A.FOONGUS,A.AMOONGUSS,A.JOLTIK,A.GALVANTULA,A.EELEKTRIK,A.EELEKTROSS,A.SHELMET,A.ACCELGOR,A.HEATMOR,A.DIGGERSBY,A.SWIRLIX,A.SLURPUFF,A.MAREANIE,A.TOXAPEX,A.PYUKUMUKU,A.GUZZLORD,A.POIPOLE,A.NAGANADEL,A.CHEWTLE,A.DREDNAW,A.TAROUNTULA,A.SPIDOPS,A.ALOLA_GRIMER,A.ALOLA_MUK],[E.POWER_SWAP]:[A.VULPIX,A.NINETALES,A.ABRA,A.KADABRA,A.ALAKAZAM,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MR_MIME,A.MAGMAR,A.PORYGON,A.MEWTWO,A.MEW,A.NATU,A.XATU,A.ESPEON,A.GIRAFARIG,A.PORYGON2,A.MAGBY,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.GARDEVOIR,A.MEDITITE,A.SWABLU,A.ALTARIA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.BRONZOR,A.BRONZONG,A.TANGROWTH,A.MAGMORTAR,A.PORYGON_Z,A.CRESSELIA,A.VICTINI,A.MUNNA,A.MUSHARNA,A.DARMANITAN,A.SIGILYPH,A.COFAGRIGUS,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.ACCELGOR,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.MAGEARNA,A.DOTTLER,A.ORBEETLE,A.HATTERENE,A.GRIMMSNARL,A.MR_RIME,A.RUNERIGUS,A.INDEEDEE,A.ZAMAZENTA,A.CALYREX,A.RABSCA,A.FARIGIRAF,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_EXEGGUTOR,A.GALAR_MR_MIME,A.GALAR_ARTICUNO],[E.GUARD_SWAP]:[A.ABRA,A.KADABRA,A.ALAKAZAM,A.DROWZEE,A.MR_MIME,A.PORYGON,A.MEWTWO,A.MEW,A.NATU,A.XATU,A.WOOPER,A.QUAGSIRE,A.UMBREON,A.GIRAFARIG,A.SLUGMA,A.MAGCARGO,A.SKARMORY,A.PORYGON2,A.GARDEVOIR,A.MAWILE,A.MEDITITE,A.BALTOY,A.CLAYDOL,A.CASTFORM,A.BRONZOR,A.BRONZONG,A.PORYGON_Z,A.CRESSELIA,A.VICTINI,A.MUNNA,A.MUSHARNA,A.DARMANITAN,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.SHELMET,A.ACCELGOR,A.INKAY,A.MALAMAR,A.CARBINK,A.DIANCIE,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.MAGEARNA,A.DOTTLER,A.ORBEETLE,A.WOOLOO,A.DUBWOOL,A.HATTERENE,A.MR_RIME,A.RUNERIGUS,A.ZAMAZENTA,A.CALYREX,A.RABSCA,A.FARIGIRAF,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,[A.INDEEDEE,"female"]],[E.WORRY_SEED]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.PSYDUCK,A.GOLDUCK,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SHROOMISH,A.BRELOOM,A.ROSELIA,A.CACNEA,A.CACTURNE,A.LILEEP,A.CRADILY,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,A.WORMADAM,A.CHERUBI,A.CHERRIM,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.LEAFEON,A.SHAYMIN,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.MUNNA,A.MUSHARNA,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.FERROSEED,A.FERROTHORN,A.VIRIZION,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.TAPU_BULU,A.NIHILEGO,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.GOSSIFLEUR,A.ELDEGOSS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.CAPSAKID,A.SCOVILLAIN,A.ALOLA_EXEGGUTOR,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE,A.ETERNAL_FLOETTE],[E.TOXIC_SPIKES]:[A.BEEDRILL,A.EKANS,A.ARBOK,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.VENONAT,A.VENOMOTH,A.TENTACOOL,A.TENTACRUEL,A.MUK,A.SHELLDER,A.CLOYSTER,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.OMANYTE,A.OMASTAR,A.MEW,A.SPINARAK,A.ARIADOS,A.QUAGSIRE,A.PINECO,A.FORRETRESS,A.GLIGAR,A.QWILFISH,A.SHIFTRY,A.ROSELIA,A.GULPIN,A.SWALOT,A.CACNEA,A.CACTURNE,A.ROSERADE,A.VESPIQUEN,A.STUNKY,A.SKUNTANK,A.SKORUPI,A.DRAPION,A.GLISCOR,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.SHELMET,A.ACCELGOR,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.SKRELP,A.DRAGALGE,A.MAREANIE,A.TOXAPEX,A.SALANDIT,A.SALAZZLE,A.NIHILEGO,A.POIPOLE,A.NAGANADEL,A.TOXTRICITY,A.RUNERIGUS,A.PINCURCHIN,A.ETERNATUS,A.SNEASLER,A.OVERQWIL,A.MEOWSCARADA,A.TAROUNTULA,A.SPIDOPS,A.TOEDSCOOL,A.TOEDSCRUEL,A.VAROOM,A.REVAVROOM,A.GLIMMET,A.GLIMMORA,A.CLODSIRE,A.IRON_MOTH,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_YAMASK,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.PALDEA_WOOPER],[E.FLARE_BLITZ]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.VULPIX,A.NINETALES,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.MAGMAR,A.FLAREON,A.MOLTRES,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.ENTEI,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SOLROCK,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.MAGMORTAR,A.HEATRAN,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.DARUMAKA,A.DARMANITAN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.HEATMOR,A.LARVESTA,A.VOLCARONA,A.RESHIRAM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SALANDIT,A.SALAZZLE,A.SOLGALEO,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.CARKOL,A.COALOSSAL,A.CENTISKORCH,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.SLITHER_WING,A.IRON_MOTH,A.CHI_YU,A.KORAIDON,A.GOUGING_FIRE,A.TERAPAGOS,A.ALOLA_MAROWAK,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,[A.PALDEA_TAUROS,"blaze"]],[E.AURA_SPHERE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.HITMONLEE,A.HITMONCHAN,A.MEWTWO,A.MEW,A.RAIKOU,A.CELEBI,A.BLAZIKEN,A.GARDEVOIR,A.MEDICHAM,A.ZANGOOSE,A.LATIAS,A.LATIOS,A.JIRACHI,A.INFERNAPE,A.LOPUNNY,A.LUCARIO,A.TOGEKISS,A.GALLADE,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.MIENFOO,A.MIENSHAO,A.KELDEO,A.CLAUNCHER,A.CLAWITZER,A.KOMMO_O,A.MAGEARNA,A.MARSHADOW,A.ZERAORA,A.URSHIFU,A.MEOWSCARADA,A.ARMAROUGE,A.PALAFIN,A.IRON_VALIANT,A.ARCHALUDON,A.TERAPAGOS,A.HISUI_DECIDUEYE],[E.ROCK_POLISH]:[A.GEODUDE,A.GRAVELER,A.GOLEM,A.ONIX,A.RHYHORN,A.RHYDON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.MEW,A.SUDOWOODO,A.FORRETRESS,A.GLIGAR,A.STEELIX,A.SHUCKLE,A.MAGCARGO,A.CORSOLA,A.DONPHAN,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.NOSEPASS,A.ARON,A.LAIRON,A.AGGRON,A.CAMERUPT,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.RELICANTH,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.TORTERRA,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BRONZOR,A.BRONZONG,A.BONSLY,A.RHYPERIOR,A.GLISCOR,A.PROBOPASS,A.REGIGIGAS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DWEBBLE,A.CRUSTLE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.GARBODOR,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.DURANT,A.COBALION,A.TERRAKION,A.LANDORUS,A.GENESECT,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.CARBINK,A.BERGMITE,A.AVALUGG,A.DIANCIE,A.ROCKRUFF,A.LYCANROC,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.KOMMO_O,A.NECROZMA,A.STAKATAKA,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.STONJOURNER,A.NACLI,A.NACLSTACK,A.GARGANACL,A.GLIMMET,A.GLIMMORA,A.TERAPAGOS,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK],[E.POISON_JAB]:[A.BEEDRILL,A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.RAPIDASH,A.FARFETCHD,A.GRIMER,A.MUK,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.HITMONLEE,A.RHYHORN,A.RHYDON,A.GOLDEEN,A.SEAKING,A.MEWTWO,A.MEW,A.SPINARAK,A.ARIADOS,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.QWILFISH,A.SNEASEL,A.DONPHAN,A.COMBUSKEN,A.BLAZIKEN,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.ROSELIA,A.GULPIN,A.SWALOT,A.SHARPEDO,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.ROSERADE,A.STUNKY,A.SKUNTANK,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.RHYPERIOR,A.TANGROWTH,A.GLISCOR,A.GALLADE,A.DARKRAI,A.ARCEUS,A.PIGNITE,A.EMBOAR,A.DRILBUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.AXEW,A.FRAXURE,A.HAXORUS,A.CRYOGONAL,A.MIENFOO,A.MIENSHAO,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.VOLCARONA,A.COBALION,A.TERRAKION,A.KELDEO,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.PANGORO,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.PHANTUMP,A.TREVENANT,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.GOLISOPOD,A.TOGEDEMARU,A.KOMMO_O,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.GUZZLORD,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.CHEWTLE,A.DREDNAW,A.ARROKUDA,A.BARRASKEWDA,A.TOXTRICITY,A.SIRFETCHD,A.FALINKS,A.PINCURCHIN,A.ZACIAN,A.ETERNATUS,A.URSHIFU,A.SNEASLER,A.OVERQWIL,A.TAROUNTULA,A.SPIDOPS,A.CERULEDGE,A.SHROODLE,A.GRAFAIAI,A.VAROOM,A.REVAVROOM,A.ANNIHILAPE,A.CLODSIRE,A.DUDUNSPARCE,A.KINGAMBIT,A.IRON_VALIANT,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.IRON_BOULDER,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_SLOWKING,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_LILLIGANT,A.PALDEA_WOOPER],[E.DARK_PULSE]:[A.BLASTOISE,A.EKANS,A.ARBOK,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.GYARADOS,A.MEWTWO,A.MEW,A.CROBAT,A.UMBREON,A.MURKROW,A.MISDREAVUS,A.GLIGAR,A.STEELIX,A.SNEASEL,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.SABLEYE,A.MAWILE,A.AGGRON,A.CARVANHA,A.SHARPEDO,A.CACNEA,A.CACTURNE,A.SEVIPER,A.CRAWDAUNT,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.GLALIE,A.DEOXYS,A.MISMAGIUS,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.SPIRITOMB,A.LUCARIO,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.GLISCOR,A.PORYGON_Z,A.DUSKNOIR,A.ROTOM,A.HEATRAN,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.PURRLOIN,A.LIEPARD,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.FRILLISH,A.JELLICENT,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.GENESECT,A.FROGADIER,A.GRENINJA,A.LITLEO,A.PYROAR,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.INKAY,A.MALAMAR,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.HOOPA,A.INCINEROAR,A.GOLISOPOD,A.MIMIKYU,A.GUZZLORD,A.NECROZMA,A.NAGANADEL,A.BLACEPHALON,A.INTELEON,A.THIEVUL,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.RUNERIGUS,A.MORPEKO,A.DURALUDON,A.ZARUDE,A.SPECTRIER,A.OVERQWIL,A.MEOWSCARADA,A.LOKIX,A.ARMAROUGE,A.MASCHIFF,A.MABOSSTIFF,A.BOMBIRDIER,A.KINGAMBIT,A.BRUTE_BONNET,A.FLUTTER_MANE,A.IRON_JUGULIS,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.FEZANDIPITI,A.ARCHALUDON,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.MAROWAK,A.GALAR_MEOWTH,A.GALAR_WEEZING,A.GALAR_MOLTRES,A.GALAR_YAMASK,[A.URSHIFU,"single-strike"],[A.CALYREX,"shadow"],A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.AQUA_TAIL]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.EKANS,A.ARBOK,A.NIDOQUEEN,A.NIDOKING,A.PSYDUCK,A.GOLDUCK,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.KANGASKHAN,A.GOLDEEN,A.SEAKING,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.KABUTOPS,A.AERODACTYL,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.LANTURN,A.MARILL,A.AZUMARILL,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.QWILFISH,A.MANTINE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.AGGRON,A.SEVIPER,A.BARBOACH,A.WHISCASH,A.ARMALDO,A.MILOTIC,A.KECLEON,A.SPHEAL,A.SEALEO,A.WALREIN,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.SALAMENCE,A.KYOGRE,A.RAYQUAZA,A.BIDOOF,A.BIBAREL,A.BUIZEL,A.FLOATZEL,A.GARCHOMP,A.SKORUPI,A.DRAPION,A.FINNEON,A.LUMINEON,A.LICKILICKY,A.RHYPERIOR,A.GLACEON,A.GLISCOR,A.PALKIA,A.GIRATINA,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.PANPOUR,A.SIMIPOUR,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.MINCCINO,A.CINCCINO,A.EELEKTRIK,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.STUNFISK,A.DRUDDIGON,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.KELDEO,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.GOODRA,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.BRUXISH,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.BASCULEGION,A.OVERQWIL,A.FINIZEN,A.PALAFIN,A.CYCLIZAR,A.DONDOZO,A.DUDUNSPARCE,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.HISUI_QWILFISH,A.HISUI_SAMUROTT],[E.SEED_BOMB]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.EKANS,A.ARBOK,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.SNORLAX,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.SENTRET,A.FURRET,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.PINECO,A.FORRETRESS,A.TEDDIURSA,A.URSARING,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.PHANPY,A.DONPHAN,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.PELIPPER,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.ROSELIA,A.GULPIN,A.SWALOT,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.LILEEP,A.CRADILY,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,A.WORMADAM,A.PACHIRISU,A.CHERUBI,A.CHERRIM,A.AMBIPOM,A.MUNCHLAX,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.LEAFEON,A.SHAYMIN,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PATRAT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.TRUBBISH,A.GARBODOR,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.FERROSEED,A.FERROTHORN,A.VIRIZION,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.DEDENNE,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.PASSIMIAN,A.KOMALA,A.TAPU_BULU,A.CELESTEELA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.OBSTAGOON,A.PERRSERKER,A.MORPEKO,A.ZARUDE,A.CALYREX,A.URSALUNA,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.FLITTLE,A.ESPATHRA,A.ANNIHILAPE,A.BRUTE_BONNET,A.WO_CHIEN,A.DIPPLIN,A.OGERPON,A.HYDRAPPLE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.AIR_SLASH]:[A.CHARIZARD,A.BUTTERFREE,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.ZUBAT,A.GOLBAT,A.VENOMOTH,A.FARFETCHD,A.SCYTHER,A.ARTICUNO,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.NATU,A.XATU,A.YANMA,A.MURKROW,A.DUNSPARCE,A.SCIZOR,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.SUICUNE,A.LUGIA,A.HO_OH,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.NINJASK,A.VOLBEAT,A.ILLUMISE,A.VIBRAVA,A.FLYGON,A.TROPIUS,A.ABSOL,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.MOTHIM,A.VESPIQUEN,A.DRIFBLIM,A.HONCHKROW,A.LUMINEON,A.MANTYKE,A.TOGEKISS,A.YANMEGA,A.GALLADE,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.SIGILYPH,A.ARCHEOPS,A.DUCKLETT,A.SWANNA,A.EMOLGA,A.PAWNIARD,A.BISHARP,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.KELDEO,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.AEGISLASH,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.VIKAVOLT,A.ORICORIO,A.TYPE_NULL,A.SILVALLY,A.LUNALA,A.CELESTEELA,A.KARTANA,A.NAGANADEL,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.FLAPPLE,A.CRAMORANT,A.FROSMOTH,A.ZACIAN,A.KLEAVOR,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.BOMBIRDIER,A.FLAMIGO,A.DUDUNSPARCE,A.KINGAMBIT,A.IRON_JUGULIS,A.IRON_MOTH,A.ROARING_MOON,A.IRON_LEAVES,A.FEZANDIPITI,A.IRON_BOULDER,A.IRON_CROWN,A.SHAYMIN,[A.ROTOM,"fan"],A.GALAR_ARTICUNO,A.GALAR_MOLTRES,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.X_SCISSOR]:[A.BEEDRILL,A.SANDSHREW,A.SANDSLASH,A.PARAS,A.PARASECT,A.KRABBY,A.KINGLER,A.SCYTHER,A.PINSIR,A.KABUTOPS,A.MEW,A.SPINARAK,A.ARIADOS,A.CROBAT,A.GLIGAR,A.SCIZOR,A.SNEASEL,A.SKARMORY,A.GROVYLE,A.SCEPTILE,A.SHIFTRY,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.ZANGOOSE,A.SEVIPER,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.ABSOL,A.KRICKETUNE,A.VESPIQUEN,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.LEAFEON,A.GLISCOR,A.GALLADE,A.DARKRAI,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.DRILBUR,A.EXCADRILL,A.LEAVANNY,A.SCOLIPEDE,A.DWEBBLE,A.CRUSTLE,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.PAWNIARD,A.BISHARP,A.DURANT,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.GENESECT,A.PANGORO,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.TREVENANT,A.NOIBAT,A.NOIVERN,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.MIMIKYU,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.KARTANA,A.NECROZMA,A.NAGANADEL,A.CENTISKORCH,A.OBSTAGOON,A.PERRSERKER,A.KLEAVOR,A.SNEASLER,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.CERULEDGE,A.GRAFAIAI,A.KLAWF,A.RELLOR,A.RABSCA,A.KINGAMBIT,A.ROARING_MOON,A.IRON_VALIANT,A.IRON_LEAVES,A.IRON_BOULDER,A.IRON_CROWN,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.GALAR_MEOWTH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT],[E.BUG_BUZZ]:[A.BUTTERFREE,A.VENONAT,A.VENOMOTH,A.SCYTHER,A.MEW,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.YANMA,A.PINECO,A.FORRETRESS,A.SCIZOR,A.HERACROSS,A.BEAUTIFLY,A.DUSTOX,A.SURSKIT,A.MASQUERAIN,A.NINCADA,A.NINJASK,A.SHEDINJA,A.VOLBEAT,A.ILLUMISE,A.VIBRAVA,A.FLYGON,A.KRICKETUNE,A.WORMADAM,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.SKORUPI,A.DRAPION,A.YANMEGA,A.ARCEUS,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.SHELMET,A.ACCELGOR,A.LARVESTA,A.VOLCARONA,A.GENESECT,A.VIVILLON,A.VIKAVOLT,A.CUTIEFLY,A.RIBOMBEE,A.DEWPIDER,A.ARAQUANID,A.WIMPOD,A.GOLISOPOD,A.PHEROMOSA,A.DOTTLER,A.ORBEETLE,A.SIZZLIPEDE,A.CENTISKORCH,A.SNOM,A.FROSMOTH,A.KLEAVOR,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.RELLOR,A.RABSCA,A.SLITHER_WING,A.IRON_MOTH,A.TERAPAGOS],[E.DRAGON_PULSE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.NIDOQUEEN,A.NIDOKING,A.ARCANINE,A.ONIX,A.RHYHORN,A.RHYDON,A.HORSEA,A.SEADRA,A.GYARADOS,A.LAPRAS,A.AERODACTYL,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.FERALIGATR,A.AMPHAROS,A.STEELIX,A.KINGDRA,A.TYRANITAR,A.LUGIA,A.SCEPTILE,A.AGGRON,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.FEEBAS,A.MILOTIC,A.TROPIUS,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.CRANIDOS,A.RAMPARDOS,A.GIBLE,A.GABITE,A.GARCHOMP,A.LUCARIO,A.RHYPERIOR,A.DIALGA,A.PALKIA,A.HEATRAN,A.GIRATINA,A.ARCEUS,A.SERPERIOR,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.GOOMY,A.SLIGGOO,A.GOODRA,A.NOIBAT,A.NOIVERN,A.ZYGARDE,A.SALANDIT,A.SALAZZLE,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.GUZZLORD,A.NECROZMA,A.POIPOLE,A.NAGANADEL,A.FLAPPLE,A.APPLETUN,A.RUNERIGUS,A.DRACOZOLT,A.DRACOVISH,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.REGIDRAGO,A.ARMAROUGE,A.CYCLIZAR,A.TATSUGIRI,A.IRON_JUGULIS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.DIPPLIN,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_EXEGGUTOR,A.HISUI_ARCANINE,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.POWER_GEM]:[A.MEOWTH,A.PERSIAN,A.GOLDUCK,A.STARYU,A.STARMIE,A.MEWTWO,A.MEW,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.SUDOWOODO,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.SLUGMA,A.MAGCARGO,A.CORSOLA,A.TYRANITAR,A.NOSEPASS,A.SABLEYE,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.VESPIQUEN,A.MISMAGIUS,A.BRONZOR,A.BRONZONG,A.BONSLY,A.GABITE,A.GARCHOMP,A.PROBOPASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.CRESSELIA,A.ARCEUS,A.BOLDORE,A.GIGALITH,A.KLINK,A.KLANG,A.KLINKLANG,A.CARBINK,A.DIANCIE,A.MINIOR,A.NIHILEGO,A.NECROZMA,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.CURSOLA,A.STONJOURNER,A.MEOWSCARADA,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.RABSCA,A.BOMBIRDIER,A.GLIMMET,A.GLIMMORA,A.FLUTTER_MANE,A.SANDY_SHOCKS,A.IRON_THORNS,A.GIMMIGHOUL,A.GHOLDENGO,A.MIRAIDON,A.TERAPAGOS,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.HISUI_GROWLITHE,A.HISUI_ARCANINE],[E.DRAIN_PUNCH]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GLOOM,A.VILEPLUME,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWBRO,A.GRIMER,A.MUK,A.GENGAR,A.DROWZEE,A.HYPNO,A.HITMONCHAN,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.LEDYBA,A.LEDIAN,A.TOGETIC,A.BELLOSSOM,A.SUDOWOODO,A.QUAGSIRE,A.SLOWKING,A.BLISSEY,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LOMBRE,A.LUDICOLO,A.SHROOMISH,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.GRUMPIG,A.SPINDA,A.CACNEA,A.CACTURNE,A.KECLEON,A.REGIROCK,A.JIRACHI,A.DEOXYS,A.MONFERNO,A.INFERNAPE,A.BUNEARY,A.LOPUNNY,A.MIME_JR,A.HAPPINY,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.TOGEKISS,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.DARKRAI,A.PIGNITE,A.EMBOAR,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.MARACTUS,A.SCRAGGY,A.SCRAFTY,A.TRUBBISH,A.GARBODOR,A.REUNICLUS,A.EELEKTROSS,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.HEATMOR,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.PANCHAM,A.PANGORO,A.AROMATISSE,A.SLURPUFF,A.HAWLUCHA,A.TREVENANT,A.HOOPA,A.INCINEROAR,A.CRABRAWLER,A.CRABOMINABLE,A.SHIINOTIC,A.BEWEAR,A.PASSIMIAN,A.MIMIKYU,A.HAKAMO_O,A.KOMMO_O,A.BUZZWOLE,A.GUZZLORD,A.MARSHADOW,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.TOXTRICITY,A.GRAPPLOCT,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.MR_RIME,A.ALCREMIE,A.INDEEDEE,A.URSHIFU,A.ZARUDE,A.URSALUNA,A.PALAFIN,A.ANNIHILAPE,A.SCREAM_TAIL,A.IRON_HANDS,A.IRON_VALIANT,A.KORAIDON,A.OKIDOGI,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING],[E.VACUUM_WAVE]:[A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.HITMONLEE,A.HITMONCHAN,A.SCYTHER,A.MEW,A.SCIZOR,A.HERACROSS,A.TYROGUE,A.HITMONTOP,A.GROVYLE,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.SHIFTRY,A.GARDEVOIR,A.BRELOOM,A.MAKUHITA,A.HARIYAMA,A.MEDITITE,A.MEDICHAM,A.FLYGON,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.EMPOLEON,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.GALLADE,A.DEWOTT,A.SAMUROTT,A.MIENSHAO,A.COBALION,A.VIRIZION,A.KELDEO,A.PASSIMIAN,A.HAKAMO_O,A.KOMMO_O,A.KARTANA,A.INTELEON,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.CERULEDGE,A.ANNIHILAPE,A.IRON_VALIANT,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY,A.BLOODMOON_URSALUNA],[E.FOCUS_BLAST]:[A.CHARMANDER,A.CHARIZARD,A.BLASTOISE,A.RAICHU,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.CLEFABLE,A.WIGGLYTUFF,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.MUK,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.FERALIGATR,A.FURRET,A.LEDIAN,A.AMPHAROS,A.AZUMARILL,A.POLITOED,A.QUAGSIRE,A.SLOWKING,A.GRANBULL,A.HERACROSS,A.URSARING,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.TYRANITAR,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.SWAMPERT,A.LUDICOLO,A.SHIFTRY,A.GARDEVOIR,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.GRUMPIG,A.CACTURNE,A.ZANGOOSE,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.MONFERNO,A.INFERNAPE,A.RAMPARDOS,A.FLOATZEL,A.LOPUNNY,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.GALLADE,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.REGIGIGAS,A.DARKRAI,A.ARCEUS,A.VICTINI,A.PIGNITE,A.EMBOAR,A.WATCHOG,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.KROOKODILE,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.CARRACOSTA,A.ARCHEOPS,A.GARBODOR,A.ZOROARK,A.CINCCINO,A.GOTHITELLE,A.REUNICLUS,A.ESCAVALIER,A.HAXORUS,A.BEARTIC,A.ACCELGOR,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BISHARP,A.HEATMOR,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.CHESNAUGHT,A.DELPHOX,A.PANGORO,A.BARBARACLE,A.DRAGALGE,A.CLAWITZER,A.HELIOLISK,A.HAWLUCHA,A.GOODRA,A.TREVENANT,A.GOURGEIST,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.HOOPA,A.VOLCANION,A.INCINEROAR,A.CRABRAWLER,A.CRABOMINABLE,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_LELE,A.TAPU_BULU,A.SOLGALEO,A.LUNALA,A.PHEROMOSA,A.MAGEARNA,A.MARSHADOW,A.ZERAORA,A.RILLABOOM,A.CINDERACE,A.CLOBBOPUS,A.GRAPPLOCT,A.GRIMMSNARL,A.MR_RIME,A.FALINKS,A.ZACIAN,A.ZAMAZENTA,A.URSHIFU,A.SNEASLER,A.ENAMORUS,A.PAWMOT,A.ARMAROUGE,A.PALAFIN,A.ANNIHILAPE,A.KINGAMBIT,A.SCREAM_TAIL,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_THORNS,A.GHOLDENGO,A.IRON_VALIANT,A.KORAIDON,A.IRON_LEAVES,A.OKIDOGI,A.MUNKIDORI,A.IRON_CROWN,A.ALOLA_RAICHU,A.ALOLA_SANDSLASH,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_DARMANITAN,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.ENERGY_BALL]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BUTTERFREE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.GASTLY,A.HAUNTER,A.GENGAR,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.MISDREAVUS,A.GIRAFARIG,A.OCTILLERY,A.STANTLER,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.GARDEVOIR,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SABLEYE,A.MEDICHAM,A.ROSELIA,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.LILEEP,A.CRADILY,A.CASTFORM,A.TROPIUS,A.CHIMECHO,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,[A.WORMADAM,"plant"],A.MOTHIM,A.CHERUBI,A.CHERRIM,A.MISMAGIUS,A.CHINGLING,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.LEAFEON,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.GIRATINA,A.CRESSELIA,A.MANAPHY,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.SHELMET,A.ACCELGOR,A.DURANT,A.VIRIZION,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PRIMARINA,A.VIKAVOLT,A.CUTIEFLY,A.RIBOMBEE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.DRAMPA,A.DHELMISE,A.TAPU_LELE,A.TAPU_BULU,A.XURKITREE,A.CELESTEELA,A.MAGEARNA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.DOTTLER,A.ORBEETLE,A.GOSSIFLEUR,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.INDEEDEE,A.ZARUDE,A.CALYREX,A.WYRDEER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.OINKOLOGNE,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.ARMAROUGE,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.RABSCA,A.ESPATHRA,A.GLIMMORA,A.FARIGIRAF,A.BRUTE_BONNET,A.FLUTTER_MANE,A.IRON_MOTH,A.WO_CHIEN,A.IRON_VALIANT,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OGERPON,A.HYDRAPPLE,A.TERAPAGOS,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_MR_MIME,A.GALAR_YAMASK,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.BRAVE_BIRD]:[A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.ZUBAT,A.GOLBAT,A.FARFETCHD,A.DODUO,A.DODRIO,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.MURKROW,A.DELIBIRD,A.SKARMORY,A.LUGIA,A.HO_OH,A.BLAZIKEN,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.SWABLU,A.ALTARIA,A.STARLY,A.STARAVIA,A.STARAPTOR,A.HONCHKROW,A.UNFEZANT,A.DUCKLETT,A.SWANNA,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.HAWLUCHA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.TAPU_KOKO,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CRAMORANT,A.SIRFETCHD,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.ESPATHRA,A.BOMBIRDIER,A.FLAMIGO,A.FEZANDIPITI,A.GALAR_FARFETCHD,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.EARTH_POWER]:[A.VENUSAUR,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.GEODUDE,A.GRAVELER,A.GOLEM,A.ONIX,A.CUBONE,A.MAROWAK,A.RHYHORN,A.RHYDON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.MEWTWO,A.MEW,A.SUDOWOODO,A.POLITOED,A.SUNKERN,A.SUNFLORA,A.WOOPER,A.QUAGSIRE,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SHUCKLE,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.PHANPY,A.DONPHAN,A.STANTLER,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.NOSEPASS,A.ARON,A.LAIRON,A.AGGRON,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.GRUMPIG,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.RELICANTH,A.REGIROCK,A.GROUDON,A.RAYQUAZA,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.SHELLOS,A.GASTRODON,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOPOTAS,A.HIPPOWDON,A.ABOMASNOW,A.RHYPERIOR,A.GLISCOR,A.MAMOSWINE,A.PROBOPASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.SHAYMIN,A.ARCEUS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.STUNFISK,A.GOLETT,A.GOLURK,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TERRAKION,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.DIGGERSBY,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.CARBINK,A.ZYGARDE,A.DIANCIE,A.VOLCANION,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.NECROZMA,A.RILLABOOM,A.DREDNAW,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.DRACOVISH,A.REGIDRAGO,A.WYRDEER,A.URSALUNA,A.ENAMORUS,A.SKELEDIRGE,A.OINKOLOGNE,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.NACLI,A.NACLSTACK,A.GARGANACL,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.RABSCA,A.WIGLETT,A.WUGTRIO,A.ORTHWORM,A.GLIMMORA,A.CLODSIRE,A.DUDUNSPARCE,A.GREAT_TUSK,A.BRUTE_BONNET,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_JUGULIS,A.IRON_THORNS,A.TING_LU,A.HYDRAPPLE,A.TERAPAGOS,[A.WORMADAM,"sandy"],A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,A.GALAR_CORSOLA,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.GIGA_IMPACT]:[A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEOT,A.RATICATE,A.FEAROW,A.ARBOK,A.RAICHU,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.CLEFABLE,A.NINETALES,A.WIGGLYTUFF,A.GOLBAT,A.VILEPLUME,A.PARASECT,A.VENOMOTH,A.DUGTRIO,A.PERSIAN,A.GOLDUCK,A.PRIMEAPE,A.ARCANINE,A.POLIWRATH,A.ALAKAZAM,A.MACHAMP,A.VICTREEBEL,A.TENTACRUEL,A.GOLEM,A.RAPIDASH,A.SLOWBRO,A.MAGNETON,A.DODRIO,A.DEWGONG,A.MUK,A.CLOYSTER,A.GENGAR,A.HYPNO,A.KINGLER,A.ELECTRODE,A.EXEGGUTOR,A.MAROWAK,A.LICKITUNG,A.WEEZING,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.SEADRA,A.SEAKING,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMASTAR,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.FURRET,A.NOCTOWL,A.LEDIAN,A.ARIADOS,A.CROBAT,A.LANTURN,A.TOGETIC,A.XATU,A.AMPHAROS,A.BELLOSSOM,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.JUMPLUFF,A.SUNFLORA,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.FORRETRESS,A.DUNSPARCE,A.STEELIX,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.URSARING,A.MAGCARGO,A.PILOSWINE,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.HOUNDOOM,A.KINGDRA,A.DONPHAN,A.PORYGON2,A.STANTLER,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.MIGHTYENA,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LUDICOLO,A.SHIFTRY,A.SWELLOW,A.PELIPPER,A.GARDEVOIR,A.MASQUERAIN,A.BRELOOM,A.SLAKING,A.NINJASK,A.SHEDINJA,A.EXPLOUD,A.HARIYAMA,A.DELCATTY,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDICHAM,A.MANECTRIC,A.SWALOT,A.SHARPEDO,A.WAILORD,A.CAMERUPT,A.TORKOAL,A.GRUMPIG,A.FLYGON,A.CACTURNE,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.WHISCASH,A.CRAWDAUNT,A.CLAYDOL,A.CRADILY,A.ARMALDO,A.MILOTIC,A.BANETTE,A.DUSCLOPS,A.TROPIUS,A.ABSOL,A.GLALIE,A.WALREIN,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.STARAPTOR,A.BIBAREL,A.KRICKETUNE,A.LUXRAY,A.ROSERADE,A.RAMPARDOS,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.FLOATZEL,A.CHERRIM,A.GASTRODON,A.AMBIPOM,A.DRIFBLIM,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.PURUGLY,A.SKUNTANK,A.BRONZONG,A.SPIRITOMB,A.GARCHOMP,A.MUNCHLAX,A.LUCARIO,A.HIPPOWDON,A.DRAPION,A.TOXICROAK,A.CARNIVINE,A.LUMINEON,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SERPERIOR,A.EMBOAR,A.SAMUROTT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.LIEPARD,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.MUSHARNA,A.UNFEZANT,A.ZEBSTRIKA,A.GIGALITH,A.SWOOBAT,A.EXCADRILL,A.AUDINO,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.LEAVANNY,A.SCOLIPEDE,A.WHIMSICOTT,A.LILLIGANT,A.KROOKODILE,A.DARMANITAN,A.CRUSTLE,A.SCRAFTY,A.SIGILYPH,A.COFAGRIGUS,A.CARRACOSTA,A.ARCHEOPS,A.GARBODOR,A.ZOROARK,A.CINCCINO,A.GOTHITELLE,A.REUNICLUS,A.SWANNA,A.VANILLUXE,A.SAWSBUCK,A.ESCAVALIER,A.AMOONGUSS,A.JELLICENT,A.ALOMOMOLA,A.GALVANTULA,A.FERROTHORN,A.KLINKLANG,A.EELEKTROSS,A.BEHEEYEM,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.BEARTIC,A.CRYOGONAL,A.ACCELGOR,A.MIENSHAO,A.DRUDDIGON,A.GOLURK,A.BISHARP,A.BOUFFALANT,A.BRAVIARY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.HYDREIGON,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESNAUGHT,A.DELPHOX,A.GRENINJA,A.DIGGERSBY,A.TALONFLAME,A.VIVILLON,A.PYROAR,A.FLORGES,A.GOGOAT,A.PANGORO,A.FURFROU,A.MEOWSTIC,A.AEGISLASH,A.AROMATISSE,A.SLURPUFF,A.MALAMAR,A.BARBARACLE,A.DRAGALGE,A.CLAWITZER,A.HELIOLISK,A.TYRANTRUM,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOODRA,A.KLEFKI,A.TREVENANT,A.GOURGEIST,A.AVALUGG,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.DECIDUEYE,A.INCINEROAR,A.PRIMARINA,A.GUMSHOOS,A.VIKAVOLT,A.CRABOMINABLE,A.RIBOMBEE,A.LYCANROC,A.TOXAPEX,A.MUDSDALE,A.LURANTIS,A.SHIINOTIC,A.SALAZZLE,A.BEWEAR,A.TSAREENA,A.ORANGURU,A.PASSIMIAN,A.GOLISOPOD,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.NAGANADEL,A.STAKATAKA,A.ZERAORA,A.MELMETAL,A.RILLABOOM,A.CINDERACE,A.INTELEON,A.GREEDENT,A.CORVIKNIGHT,A.ORBEETLE,A.THIEVUL,A.ELDEGOSS,A.DUBWOOL,A.DREDNAW,A.BOLTUND,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SANDACONDA,A.CRAMORANT,A.BARRASKEWDA,A.TOXTRICITY,A.CENTISKORCH,A.GRAPPLOCT,A.POLTEAGEIST,A.HATTERENE,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.MEOWSCARADA,A.SKELEDIRGE,A.QUAQUAVAL,A.OINKOLOGNE,A.SPIDOPS,A.LOKIX,A.PAWMOT,A.MAUSHOLD,A.DACHSBUN,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLSTACK,A.GARGANACL,A.BELLIBOLT,A.KILOWATTREL,A.MABOSSTIFF,A.GRAFAIAI,A.BRAMBLEGHAST,A.TOEDSCRUEL,A.KLAWF,A.SCOVILLAIN,A.RABSCA,A.ESPATHRA,A.WUGTRIO,A.BOMBIRDIER,A.PALAFIN,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMORA,A.HOUNDSTONE,A.FLAMIGO,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.BAXCALIBUR,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSLASH,A.ALOLA_NINETALES,A.ALOLA_DUGTRIO,A.ALOLA_PERSIAN,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_RAPIDASH,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_LINOONE,A.GALAR_DARMANITAN,A.HISUI_ARCANINE,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.BLOODMOON_URSALUNA,[A.BASCULIN,"blue-striped","red-striped"]],[E.NASTY_PLOT]:[A.PIKACHU,A.RAICHU,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.ALAKAZAM,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.PICHU,A.TOGEPI,A.TOGETIC,A.AIPOM,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.SMOOCHUM,A.CELEBI,A.POOCHYENA,A.MIGHTYENA,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SKITTY,A.DELCATTY,A.SABLEYE,A.PLUSLE,A.MINUN,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.LUNATONE,A.CRAWDAUNT,A.CLAYDOL,A.KECLEON,A.SHUPPET,A.BANETTE,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.AMBIPOM,A.MISMAGIUS,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.MIME_JR,A.CHATOT,A.SPIRITOMB,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.TOGEKISS,A.PORYGON_Z,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DARKRAI,A.PATRAT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.WOOBAT,A.SWOOBAT,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.ELGYEM,A.BEHEEYEM,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.DELPHOX,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.INKAY,A.MALAMAR,A.GOURGEIST,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SALANDIT,A.SALAZZLE,A.ORANGURU,A.POIPOLE,A.NAGANADEL,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.SINISTEA,A.POLTEAGEIST,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.MR_RIME,A.RUNERIGUS,A.MORPEKO,A.ZARUDE,A.SPECTRIER,A.SNEASLER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.SHROODLE,A.GRAFAIAI,A.BOMBIRDIER,A.TATSUGIRI,A.FARIGIRAF,A.GIMMIGHOUL,A.GHOLDENGO,A.CHI_YU,A.POLTCHAGEIST,A.SINISTCHA,A.MUNKIDORI,A.FEZANDIPITI,A.HYDRAPPLE,A.PECHARUNT,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_YAMASK,[A.CALYREX,"shadow"],A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE],[E.AVALANCHE]:[A.BLASTOISE,A.NIDOQUEEN,A.NIDOKING,A.SLOWPOKE,A.SLOWBRO,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.RHYDON,A.KANGASKHAN,A.STARMIE,A.JYNX,A.GYARADOS,A.LAPRAS,A.ARTICUNO,A.MEWTWO,A.MEW,A.FERALIGATR,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SWINUB,A.PILOSWINE,A.DELIBIRD,A.SMOOCHUM,A.BLISSEY,A.SUICUNE,A.TYRANITAR,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.EXPLOUD,A.AGGRON,A.SHARPEDO,A.WAILMER,A.WAILORD,A.CRAWDAUNT,A.MILOTIC,A.CASTFORM,A.SNORUNT,A.GLALIE,A.WALREIN,A.REGICE,A.KYOGRE,A.RAYQUAZA,A.DEOXYS,A.EMPOLEON,A.RAMPARDOS,A.BASTIODON,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.RHYPERIOR,A.GLACEON,A.MAMOSWINE,A.FROSLASS,A.PALKIA,A.REGIGIGAS,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.AMAURA,A.AURORUS,A.BERGMITE,A.AVALUGG,A.CRABOMINABLE,A.MR_RIME,A.FROSMOTH,A.EISCUE,A.ARCTOZOLT,A.ARCTOVISH,A.GLASTRIER,A.URSALUNA,A.GARGANACL,A.CETODDLE,A.CETITAN,A.DONDOZO,A.IRON_BUNDLE,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_NINETALES,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,[A.CALYREX,"ice"],A.HISUI_SAMUROTT,A.HISUI_AVALUGG,A.BLOODMOON_URSALUNA],[E.SHADOW_CLAW]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.HAUNTER,A.GENGAR,A.RHYDON,A.KANGASKHAN,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.AIPOM,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.TYRANITAR,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.LINOONE,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.SHEDINJA,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.ZANGOOSE,A.ARMALDO,A.KECLEON,A.BANETTE,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.METAGROSS,A.REGISTEEL,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PRINPLUP,A.EMPOLEON,A.AMBIPOM,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.GIBLE,A.GABITE,A.GARCHOMP,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.RHYPERIOR,A.GALLADE,A.DIALGA,A.PALKIA,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.DRILBUR,A.EXCADRILL,A.LEAVANNY,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.COFAGRIGUS,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.FERROTHORN,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.RUFFLET,A.BRAVIARY,A.HEATMOR,A.DURANT,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.BINACLE,A.BARBARACLE,A.PHANTUMP,A.TREVENANT,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SALANDIT,A.SALAZZLE,A.BEWEAR,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.KOMALA,A.MIMIKYU,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.LUNALA,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.NAGANADEL,A.BLACEPHALON,A.THIEVUL,A.HATTERENE,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.RUNERIGUS,A.URSALUNA,A.SNEASLER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.SKELEDIRGE,A.TAROUNTULA,A.SPIDOPS,A.TANDEMAUS,A.MAUSHOLD,A.CERULEDGE,A.GRAFAIAI,A.KLAWF,A.ANNIHILAPE,A.KINGAMBIT,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_LINOONE,A.HISUI_TYPHLOSION,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.THUNDER_FANG]:[A.ARBOK,A.GROWLITHE,A.ARCANINE,A.RHYHORN,A.RHYDON,A.JOLTEON,A.AERODACTYL,A.MEW,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.HOUNDOUR,A.HOUNDOOM,A.DONPHAN,A.RAIKOU,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.EXPLOUD,A.MAWILE,A.ELECTRIKE,A.MANECTRIC,A.SEVIPER,A.BAGON,A.SHELGON,A.SALAMENCE,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.RHYPERIOR,A.GLISCOR,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.EELEKTRIK,A.EELEKTROSS,A.DRUDDIGON,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.ZEKROM,A.LITLEO,A.PYROAR,A.TYRUNT,A.TYRANTRUM,A.VOLCANION,A.YUNGOOS,A.GUMSHOOS,A.ROCKRUFF,A.LYCANROC,A.SILVALLY,A.GREEDENT,A.THIEVUL,A.YAMPER,A.BOLTUND,A.SANDACONDA,A.TOXTRICITY,A.CENTISKORCH,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.ZACIAN,A.ZAMAZENTA,A.REGIDRAGO,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.PAWMI,A.PAWMO,A.PAWMOT,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.CYCLIZAR,A.GREAVARD,A.HOUNDSTONE,A.GREAT_TUSK,A.SCREAM_TAIL,A.IRON_TREADS,A.IRON_THORNS,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.OKIDOGI,A.GOUGING_FIRE,A.RAGING_BOLT,A.HISUI_GROWLITHE,A.HISUI_ARCANINE],[E.ICE_FANG]:[A.ARBOK,A.RHYHORN,A.RHYDON,A.GYARADOS,A.AERODACTYL,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SWINUB,A.PILOSWINE,A.DONPHAN,A.SUICUNE,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.EXPLOUD,A.MAWILE,A.ELECTRIKE,A.MANECTRIC,A.CARVANHA,A.SHARPEDO,A.SEVIPER,A.SNORUNT,A.GLALIE,A.WALREIN,A.HUNTAIL,A.SHINX,A.LUXIO,A.LUXRAY,A.BUIZEL,A.FLOATZEL,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.RHYPERIOR,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.FROSLASS,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.BASCULIN,A.CUBCHOO,A.BEARTIC,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.TYRUNT,A.TYRANTRUM,A.BERGMITE,A.AVALUGG,A.YUNGOOS,A.GUMSHOOS,A.SILVALLY,A.BRUXISH,A.GREEDENT,A.THIEVUL,A.CHEWTLE,A.DREDNAW,A.ARROKUDA,A.BARRASKEWDA,A.MORPEKO,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.ZACIAN,A.ZAMAZENTA,A.REGIDRAGO,A.BASCULEGION,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.GREAT_TUSK,A.SCREAM_TAIL,A.IRON_TREADS,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.KORAIDON,A.OKIDOGI,A.GALAR_SLOWBRO,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_STUNFISK,A.HISUI_AVALUGG],[E.FIRE_FANG]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.EKANS,A.ARBOK,A.GROWLITHE,A.ARCANINE,A.RHYHORN,A.RHYDON,A.FLAREON,A.AERODACTYL,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.HOUNDOUR,A.HOUNDOOM,A.DONPHAN,A.ENTEI,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.EXPLOUD,A.MAWILE,A.ELECTRIKE,A.MANECTRIC,A.SEVIPER,A.BAGON,A.SHELGON,A.SALAMENCE,A.GROUDON,A.SHINX,A.LUXIO,A.LUXRAY,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.RHYPERIOR,A.GLISCOR,A.HEATRAN,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.DRUDDIGON,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.RESHIRAM,A.LITLEO,A.PYROAR,A.TYRUNT,A.TYRANTRUM,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.ROCKRUFF,A.LYCANROC,A.SALANDIT,A.SALAZZLE,A.SILVALLY,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.GREEDENT,A.THIEVUL,A.YAMPER,A.BOLTUND,A.SANDACONDA,A.CENTISKORCH,A.MORPEKO,A.DRACOZOLT,A.ZACIAN,A.ZAMAZENTA,A.REGIDRAGO,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.SCOVILLAIN,A.CYCLIZAR,A.GREAVARD,A.HOUNDSTONE,A.GREAT_TUSK,A.SCREAM_TAIL,A.IRON_JUGULIS,A.IRON_THORNS,A.ROARING_MOON,A.KORAIDON,A.WALKING_WAKE,A.OKIDOGI,A.GOUGING_FIRE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION],[E.PSYCHO_CUT]:[A.KADABRA,A.ALAKAZAM,A.DROWZEE,A.HYPNO,A.EXEGGUTOR,A.STARMIE,A.SCYTHER,A.JYNX,A.KABUTOPS,A.MEWTWO,A.MEW,A.SCIZOR,A.SNEASEL,A.CELEBI,A.MEDITITE,A.MEDICHAM,A.SPINDA,A.ABSOL,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.WEAVILE,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.LIEPARD,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.HAXORUS,A.PAWNIARD,A.BISHARP,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.INKAY,A.MALAMAR,A.DECIDUEYE,A.LURANTIS,A.TAPU_LELE,A.LUNALA,A.KARTANA,A.NECROZMA,A.ORBEETLE,A.HATTERENE,A.ZACIAN,A.SPECTRIER,A.KLEAVOR,A.CERULEDGE,A.VELUZA,A.IRON_VALIANT,A.IRON_BOULDER,A.IRON_CROWN,A.GALAR_RAPIDASH,A.GALAR_ARTICUNO,[A.CALYREX,"shadow"],A.HISUI_SAMUROTT,A.HISUI_DECIDUEYE],[E.ZEN_HEADBUTT]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.RATTATA,A.RATICATE,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.VENONAT,A.VENOMOTH,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.DROWZEE,A.HYPNO,A.EXEGGUTOR,A.LICKITUNG,A.CHANSEY,A.MR_MIME,A.JYNX,A.TAUROS,A.LAPRAS,A.PORYGON,A.SNORLAX,A.MEWTWO,A.MEW,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.CLEFFA,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.ESPEON,A.SLOWKING,A.GIRAFARIG,A.DUNSPARCE,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.LUGIA,A.HO_OH,A.CELEBI,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.RELICANTH,A.BAGON,A.SHELGON,A.SALAMENCE,A.BELDUM,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.GROUDON,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.HAPPINY,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.LICKILICKY,A.TOGEKISS,A.PORYGON_Z,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.CRESSELIA,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PATRAT,A.WATCHOG,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.THROH,A.SAWK,A.BASCULIN,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.ALOMOMOLA,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.GOLURK,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BRAIXEN,A.DELPHOX,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.HAWLUCHA,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.HOOPA,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.ORANGURU,A.SILVALLY,A.MINIOR,A.KOMALA,A.TOGEDEMARU,A.TAPU_BULU,A.SOLGALEO,A.NIHILEGO,A.CELESTEELA,A.MAGEARNA,A.MARSHADOW,A.STAKATAKA,A.BLACEPHALON,A.CINDERACE,A.DOTTLER,A.ORBEETLE,A.DUBWOOL,A.APPLETUN,A.SANDACONDA,A.MR_RIME,A.RUNERIGUS,A.FALINKS,A.EISCUE,A.INDEEDEE,A.CUFANT,A.COPPERAJAH,A.DRACOVISH,A.ARCTOVISH,A.KUBFU,A.URSHIFU,A.GLASTRIER,A.CALYREX,A.WYRDEER,A.ENAMORUS,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.LECHONK,A.OINKOLOGNE,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CAPSAKID,A.SCOVILLAIN,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.VELUZA,A.DONDOZO,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.SLITHER_WING,A.IRON_TREADS,A.IRON_JUGULIS,A.BAXCALIBUR,A.WO_CHIEN,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.OGERPON,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.HISUI_TYPHLOSION,A.HISUI_BRAVIARY,A.PALDEA_TAUROS],[E.FLASH_CANNON]:[A.BLASTOISE,A.MAGNEMITE,A.MAGNETON,A.ONIX,A.HORSEA,A.SEADRA,A.STARYU,A.STARMIE,A.MEW,A.FORRETRESS,A.STEELIX,A.SCIZOR,A.OCTILLERY,A.SKARMORY,A.KINGDRA,A.NOSEPASS,A.MAWILE,A.AGGRON,A.NUMEL,A.CAMERUPT,A.SPOINK,A.GRUMPIG,A.ARMALDO,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.JIRACHI,A.DEOXYS,A.EMPOLEON,A.SHIELDON,A.BASTIODON,A.BRONZOR,A.BRONZONG,A.LUCARIO,A.MAGNEZONE,A.RHYPERIOR,A.PROBOPASS,A.DIALGA,A.HEATRAN,A.ARCEUS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.SIGILYPH,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.BEHEEYEM,A.CRYOGONAL,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.DURANT,A.HYDREIGON,A.COBALION,A.THUNDURUS,A.ZEKROM,A.KYUREM,A.GENESECT,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.CLAUNCHER,A.CLAWITZER,A.AMAURA,A.AURORUS,A.CARBINK,A.KLEFKI,A.BERGMITE,A.AVALUGG,A.XERNEAS,A.DIANCIE,A.VOLCANION,A.TOUCANNON,A.VIKAVOLT,A.SANDYGAST,A.PALOSSAND,A.SILVALLY,A.TURTONATOR,A.DHELMISE,A.KOMMO_O,A.SOLGALEO,A.CELESTEELA,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.MELTAN,A.MELMETAL,A.CORVIKNIGHT,A.PERRSERKER,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.NACLI,A.NACLSTACK,A.GARGANACL,A.ARMAROUGE,A.TOEDSCOOL,A.TOEDSCRUEL,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.VAROOM,A.REVAVROOM,A.ORTHWORM,A.GLIMMORA,A.KINGAMBIT,A.GREAT_TUSK,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_JUGULIS,A.IRON_MOTH,A.GHOLDENGO,A.MIRAIDON,A.ARCHALUDON,A.IRON_CROWN,A.TERAPAGOS,[A.WORMADAM,"trash"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.GALAR_MEOWTH,A.GALAR_STUNFISK,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.ROCK_CLIMB]:[A.VENUSAUR,A.BLASTOISE,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.ARCANINE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.ONIX,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.OMASTAR,A.KABUTOPS,A.SNORLAX,A.MEWTWO,A.MEW,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.AMPHAROS,A.GLIGAR,A.STEELIX,A.GRANBULL,A.URSARING,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.TYRANITAR,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LUDICOLO,A.VIGOROTH,A.SLAKING,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AGGRON,A.ZANGOOSE,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.LUCARIO,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.ABOMASNOW,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.GLISCOR,A.MAMOSWINE,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.DARKRAI,A.ARCEUS,A.DRILBUR,A.EXCADRILL,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.DRUDDIGON,A.BOUFFALANT,A.DURANT,A.ROCKRUFF,A.LYCANROC,A.OBSTAGOON,A.URSALUNA,A.ANNIHILAPE,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.PALDEA_TAUROS,A.BLOODMOON_URSALUNA],[E.DEFOG]:[A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.SPEAROW,A.FEAROW,A.ZUBAT,A.GOLBAT,A.VENOMOTH,A.FARFETCHD,A.SCYTHER,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.LEDIAN,A.CROBAT,A.TOGETIC,A.XATU,A.YANMA,A.MURKROW,A.GLIGAR,A.SCIZOR,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.LUGIA,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.BEAUTIFLY,A.DUSTOX,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.NINJASK,A.VOLBEAT,A.ILLUMISE,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.CASTFORM,A.TROPIUS,A.CHIMECHO,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.MOTHIM,A.VESPIQUEN,A.DRIFLOON,A.DRIFBLIM,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.CHATOT,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.TOGEKISS,A.YANMEGA,A.GLISCOR,A.ROTOM,A.GIRATINA,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.COTTONEE,A.WHIMSICOTT,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.DUCKLETT,A.SWANNA,A.EMOLGA,A.CRYOGONAL,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.FLORGES,A.HAWLUCHA,A.KLEFKI,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.FOMANTIS,A.LURANTIS,A.COMFEY,A.SILVALLY,A.DRAMPA,A.TAPU_KOKO,A.TAPU_FINI,A.LUNALA,A.KARTANA,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CRAMORANT,A.SIRFETCHD,A.FROSMOTH,A.KLEAVOR,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.TRICK_ROOM]:[A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.STARMIE,A.MR_MIME,A.JYNX,A.PORYGON,A.MEWTWO,A.MEW,A.NATU,A.XATU,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.SPINDA,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.JIRACHI,A.DEOXYS,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.CRESSELIA,A.ARCEUS,A.VICTINI,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.WHIMSICOTT,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FRILLISH,A.JELLICENT,A.KLINKLANG,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.INKAY,A.MALAMAR,A.CARBINK,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.DIANCIE,A.HOOPA,A.COMFEY,A.ORANGURU,A.MIMIKYU,A.BRUXISH,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.NECROZMA,A.MAGEARNA,A.STAKATAKA,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.MR_RIME,A.RUNERIGUS,A.INDEEDEE,A.CALYREX,A.WYRDEER,A.MEOWSCARADA,A.ARMAROUGE,A.TOEDSCOOL,A.TOEDSCRUEL,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.FARIGIRAF,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_VALIANT,A.POLTCHAGEIST,A.SINISTCHA,A.ALOLA_EXEGGUTOR,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.GALAR_YAMASK],[E.DRACO_METEOR]:[A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.KINGDRA,A.VIBRAVA,A.FLYGON,A.ALTARIA,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.GIBLE,A.GABITE,A.GARCHOMP,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.DRAGALGE,A.TYRUNT,A.TYRANTRUM,A.GOOMY,A.SLIGGOO,A.GOODRA,A.NOIBAT,A.NOIVERN,A.ZYGARDE,A.SILVALLY,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.GUZZLORD,A.NAGANADEL,A.APPLIN,A.FLAPPLE,A.APPLETUN,A.DRACOZOLT,A.DRACOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.REGIDRAGO,A.CYCLIZAR,A.TATSUGIRI,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.DIPPLIN,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.ALOLA_EXEGGUTOR,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.LEAF_STORM]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.ODDISH,A.GLOOM,A.VILEPLUME,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.ROSELIA,A.CACNEA,A.CACTURNE,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,[A.WORMADAM,"plant"],A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.LEAFEON,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.LEAVANNY,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.VIRIZION,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.SKIDDO,A.GOGOAT,A.TREVENANT,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.FOMANTIS,A.LURANTIS,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.GOSSIFLEUR,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.ZARUDE,A.CALYREX,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.BRUTE_BONNET,A.WO_CHIEN,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OGERPON,A.HYDRAPPLE,A.SHAYMIN,[A.ROTOM,"mow"],A.ALOLA_EXEGGUTOR,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.POWER_WHIP]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGUTOR,A.LICKITUNG,A.TANGELA,A.GYARADOS,A.MEW,A.ROSELIA,A.CRADILY,A.ROSERADE,A.CARNIVINE,A.LICKILICKY,A.TANGROWTH,A.PALPITOAD,A.SEISMITOAD,A.FERROTHORN,A.GOODRA,A.GOURGEIST,A.TSAREENA,A.DHELMISE,A.XURKITREE,A.SIZZLIPEDE,A.CENTISKORCH,A.HATTERENE,A.GRIMMSNARL,A.CUFANT,A.COPPERAJAH,A.ZARUDE,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CYCLIZAR,A.WO_CHIEN,A.OGERPON,A.ALOLA_EXEGGUTOR],[E.CROSS_POISON]:[A.PARAS,A.PARASECT,A.MACHAMP,A.TENTACOOL,A.TENTACRUEL,A.SCYTHER,A.KABUTOPS,A.MEW,A.SPINARAK,A.ARIADOS,A.CROBAT,A.GLIGAR,A.SCIZOR,A.SCEPTILE,A.ANORITH,A.ARMALDO,A.VESPIQUEN,A.SKORUPI,A.DRAPION,A.TOXICROAK,A.GLISCOR,A.SCOLIPEDE,A.GARBODOR,A.JOLTIK,A.GALVANTULA,A.TOXAPEX,A.LURANTIS,A.SALAZZLE,A.NIHILEGO,A.NAGANADEL,A.OBSTAGOON,A.ETERNATUS,A.KLEAVOR,A.SHROODLE,A.GRAFAIAI,A.FEZANDIPITI],[E.GUNK_SHOT]:[A.EKANS,A.ARBOK,A.SANDSLASH,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.SNORLAX,A.MEW,A.AIPOM,A.GLIGAR,A.QWILFISH,A.TEDDIURSA,A.URSARING,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.PHANPY,A.DONPHAN,A.ZIGZAGOON,A.LINOONE,A.PELIPPER,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.GULPIN,A.SWALOT,A.ZANGOOSE,A.SEVIPER,A.SHUPPET,A.BANETTE,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PACHIRISU,A.AMBIPOM,A.STUNKY,A.SKUNTANK,A.MUNCHLAX,A.CROAGUNK,A.TOXICROAK,A.GLISCOR,A.ARCEUS,A.PATRAT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.KROOKODILE,A.TRUBBISH,A.GARBODOR,A.MINCCINO,A.CINCCINO,A.DRUDDIGON,A.GENESECT,A.FROGADIER,A.GRENINJA,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.SKRELP,A.DRAGALGE,A.HOOPA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.CRABRAWLER,A.CRABOMINABLE,A.MAREANIE,A.TOXAPEX,A.SALANDIT,A.SALAZZLE,A.PASSIMIAN,A.KOMALA,A.NIHILEGO,A.POIPOLE,A.NAGANADEL,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.TOXTRICITY,A.OBSTAGOON,A.PERRSERKER,A.ETERNATUS,A.URSALUNA,A.SNEASLER,A.OVERQWIL,A.SHROODLE,A.GRAFAIAI,A.RELLOR,A.RABSCA,A.VAROOM,A.REVAVROOM,A.GLIMMET,A.GLIMMORA,A.ANNIHILAPE,A.CLODSIRE,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.PECHARUNT,[A.WORMADAM,"trash"],A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_MEOWTH,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.IRON_HEAD]:[A.ARCANINE,A.GRAVELER,A.GOLEM,A.MAGNEMITE,A.MAGNETON,A.ONIX,A.CUBONE,A.MAROWAK,A.TAUROS,A.GYARADOS,A.LAPRAS,A.AERODACTYL,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.FORRETRESS,A.STEELIX,A.SCIZOR,A.MANTINE,A.SKARMORY,A.KINGDRA,A.PHANPY,A.DONPHAN,A.MILTANK,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.HARIYAMA,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.WAILORD,A.NUMEL,A.CAMERUPT,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.MILOTIC,A.GLALIE,A.WALREIN,A.BAGON,A.SHELGON,A.SALAMENCE,A.BELDUM,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BRONZOR,A.BRONZONG,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOWDON,A.MAGNEZONE,A.RHYPERIOR,A.MAMOSWINE,A.PROBOPASS,A.DIALGA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.ARCEUS,A.EMBOAR,A.STOUTLAND,A.GIGALITH,A.EXCADRILL,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.CARRACOSTA,A.ESCAVALIER,A.FERROSEED,A.FERROTHORN,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.BRAVIARY,A.DURANT,A.COBALION,A.TERRAKION,A.KYUREM,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.HAWLUCHA,A.CARBINK,A.AVALUGG,A.INCINEROAR,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.PASSIMIAN,A.GOLISOPOD,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.SOLGALEO,A.NIHILEGO,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.STAKATAKA,A.MELMETAL,A.CINDERACE,A.CORVIKNIGHT,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.SANDACONDA,A.PERRSERKER,A.FALINKS,A.EISCUE,A.CUFANT,A.COPPERAJAH,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.ENAMORUS,A.LECHONK,A.OINKOLOGNE,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CERULEDGE,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.CLODSIRE,A.FARIGIRAF,A.KINGAMBIT,A.GREAT_TUSK,A.IRON_TREADS,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_THORNS,A.ARCTIBAX,A.BAXCALIBUR,A.GHOLDENGO,A.ROARING_MOON,A.KORAIDON,A.OKIDOGI,A.ARCHALUDON,A.GOUGING_FIRE,A.IRON_BOULDER,A.IRON_CROWN,A.TERAPAGOS,[A.WORMADAM,"trash"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GOLEM,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_DARMANITAN,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS],[E.STONE_EDGE]:[A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.ONIX,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.RHYHORN,A.RHYDON,A.PINSIR,A.TAUROS,A.GYARADOS,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.DRAGONITE,A.MEWTWO,A.MEW,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.GRANBULL,A.SHUCKLE,A.HERACROSS,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.PHANPY,A.DONPHAN,A.HITMONTOP,A.ENTEI,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.BLAZIKEN,A.SWAMPERT,A.BRELOOM,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.MAWILE,A.LAIRON,A.AGGRON,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CLAYDOL,A.CRADILY,A.ARMALDO,A.ABSOL,A.RELICANTH,A.SALAMENCE,A.METAGROSS,A.REGIROCK,A.GROUDON,A.RAYQUAZA,A.TORTERRA,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.SHELLOS,A.GASTRODON,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.TOXICROAK,A.RHYPERIOR,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.ARCEUS,A.PIGNITE,A.EMBOAR,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.BEARTIC,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.DURANT,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.HAWLUCHA,A.CARBINK,A.BERGMITE,A.AVALUGG,A.ZYGARDE,A.DIANCIE,A.VOLCANION,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.TURTONATOR,A.TAPU_BULU,A.SOLGALEO,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.MARSHADOW,A.STAKATAKA,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.ZAMAZENTA,A.URSHIFU,A.KLEAVOR,A.URSALUNA,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.BOMBIRDIER,A.GLIMMET,A.GLIMMORA,A.ANNIHILAPE,A.CLODSIRE,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.IRON_TREADS,A.IRON_THORNS,A.TING_LU,A.ROARING_MOON,A.ARCHALUDON,A.GOUGING_FIRE,A.IRON_BOULDER,A.TERAPAGOS,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_CORSOLA,A.GALAR_DARMANITAN,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.STEALTH_ROCK]:[A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DIGLETT,A.DUGTRIO,A.PRIMEAPE,A.GEODUDE,A.GRAVELER,A.GOLEM,A.ONIX,A.CUBONE,A.MAROWAK,A.RHYHORN,A.RHYDON,A.CHANSEY,A.PINSIR,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.MEW,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SHUCKLE,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.SKARMORY,A.PHANPY,A.DONPHAN,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.CELEBI,A.MARSHTOMP,A.SWAMPERT,A.NOSEPASS,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.KECLEON,A.RELICANTH,A.METANG,A.METAGROSS,A.REGIROCK,A.REGISTEEL,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.SHELLOS,A.GASTRODON,A.BRONZOR,A.BRONZONG,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOPOTAS,A.HIPPOWDON,A.RHYPERIOR,A.GLISCOR,A.MAMOSWINE,A.PROBOPASS,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.HEATRAN,A.ARCEUS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.PALPITOAD,A.SEISMITOAD,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.FERROSEED,A.FERROTHORN,A.STUNFISK,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.HYDREIGON,A.COBALION,A.TERRAKION,A.ZEKROM,A.LANDORUS,A.BINACLE,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.CARBINK,A.DIANCIE,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.KOMMO_O,A.NIHILEGO,A.NECROZMA,A.STAKATAKA,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.PERRSERKER,A.CURSOLA,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.KLEAVOR,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.BOMBIRDIER,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.ANNIHILAPE,A.CLODSIRE,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_THORNS,A.TING_LU,A.ARCHALUDON,A.TERAPAGOS,[A.WORMADAM,"sandy","trash"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_CORSOLA,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_AVALUGG,A.PALDEA_WOOPER],[E.GRASS_KNOT]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.CHANSEY,A.TANGELA,A.STARMIE,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.SENTRET,A.FURRET,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.SMOOCHUM,A.BLISSEY,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHROOMISH,A.BRELOOM,A.SKITTY,A.DELCATTY,A.MAWILE,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.ROSELIA,A.SPOINK,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.KECLEON,A.TROPIUS,A.CHIMECHO,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIDOOF,A.BIBAREL,A.BUDEW,A.ROSERADE,[A.WORMADAM,"plant"],A.PACHIRISU,A.CHERUBI,A.CHERRIM,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CARNIVINE,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.TOGEKISS,A.LEAFEON,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.SCRAGGY,A.SCRAFTY,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.REUNICLUS,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.FERROTHORN,A.EELEKTROSS,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.BINACLE,A.BARBARACLE,A.HELIOPTILE,A.HELIOLISK,A.HAWLUCHA,A.DEDENNE,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.XERNEAS,A.ZYGARDE,A.HOOPA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.CUTIEFLY,A.RIBOMBEE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.PASSIMIAN,A.TOGEDEMARU,A.DRAMPA,A.DHELMISE,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.NIHILEGO,A.XURKITREE,A.CELESTEELA,A.MAGEARNA,A.MARSHADOW,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.OBSTAGOON,A.MR_RIME,A.RUNERIGUS,A.ZARUDE,A.CALYREX,A.SNEASLER,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.TAROUNTULA,A.SPIDOPS,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.PALAFIN,A.FARIGIRAF,A.KINGAMBIT,A.SCREAM_TAIL,A.BRUTE_BONNET,A.WO_CHIEN,A.IRON_VALIANT,A.IRON_LEAVES,A.DIPPLIN,A.MUNKIDORI,A.OGERPON,A.HYDRAPPLE,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE],[E.BUG_BITE]:[A.CATERPIE,A.METAPOD,A.BUTTERFREE,A.WEEDLE,A.KAKUNA,A.BEEDRILL,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.WEEPINBELL,A.VICTREEBEL,A.SCYTHER,A.PINSIR,A.MEW,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.YANMA,A.PINECO,A.FORRETRESS,A.GLIGAR,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.WURMPLE,A.SILCOON,A.BEAUTIFLY,A.CASCOON,A.DUSTOX,A.SURSKIT,A.MASQUERAIN,A.NINCADA,A.NINJASK,A.SHEDINJA,A.VOLBEAT,A.ILLUMISE,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.ANORITH,A.ARMALDO,A.KRICKETOT,A.KRICKETUNE,A.BURMY,A.WORMADAM,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.SKORUPI,A.DRAPION,A.CARNIVINE,A.YANMEGA,A.GLISCOR,A.HEATRAN,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.DWEBBLE,A.CRUSTLE,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.SHELMET,A.ACCELGOR,A.HEATMOR,A.DURANT,A.LARVESTA,A.VOLCARONA,A.GENESECT,A.SCATTERBUG,A.SPEWPA,A.VIVILLON,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CUTIEFLY,A.RIBOMBEE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.GOLISOPOD,A.BUZZWOLE,A.PHEROMOSA,A.SIZZLIPEDE,A.CENTISKORCH,A.SNOM,A.FROSMOTH,A.KLEAVOR,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.RELLOR,A.RABSCA,A.SLITHER_WING,A.DIPPLIN,A.HYDRAPPLE],[E.CHARGE_BEAM]:[A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.CHANSEY,A.MR_MIME,A.ELECTABUZZ,A.JOLTEON,A.PORYGON,A.ZAPDOS,A.MEWTWO,A.MEW,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.REMORAID,A.OCTILLERY,A.PORYGON2,A.STANTLER,A.ELEKID,A.BLISSEY,A.RAIKOU,A.LUGIA,A.HO_OH,A.CELEBI,A.ZIGZAGOON,A.LINOONE,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SKITTY,A.DELCATTY,A.MAWILE,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.ABSOL,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.BIDOOF,A.BIBAREL,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.MAGNEZONE,A.ELECTIVIRE,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.GIRATINA,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.MUNNA,A.MUSHARNA,A.BLITZLE,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.KLINK,A.KLANG,A.KLINKLANG,A.TYNAMO,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.DRUDDIGON,A.GOLURK,A.HYDREIGON,A.THUNDURUS,A.ZEKROM,A.MELOETTA,A.GENESECT,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.HELIOPTILE,A.HELIOLISK,A.AMAURA,A.AURORUS,A.DEDENNE,A.PUMPKABOO,A.GOURGEIST,A.HOOPA,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.SHIINOTIC,A.ORANGURU,A.MINIOR,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.TAPU_LELE,A.LUNALA,A.NIHILEGO,A.XURKITREE,A.NECROZMA,A.MAGEARNA,A.TOXTRICITY,A.PINCURCHIN,A.MORPEKO,A.REGIELEKI,A.WYRDEER,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.FARIGIRAF,A.FLUTTER_MANE,A.SANDY_SHOCKS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.GHOLDENGO,A.IRON_VALIANT,A.MIRAIDON,A.RAGING_BOLT,A.ALOLA_RAICHU,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.HONE_CLAWS]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.PARAS,A.PARASECT,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.KRABBY,A.KINGLER,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.SPINARAK,A.ARIADOS,A.AIPOM,A.GLIGAR,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.TYRANITAR,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.ZIGZAGOON,A.LINOONE,A.LOMBRE,A.LUDICOLO,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.ARON,A.LAIRON,A.AGGRON,A.FLYGON,A.ALTARIA,A.ZANGOOSE,A.CORPHISH,A.CRAWDAUNT,A.ANORITH,A.ARMALDO,A.KECLEON,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGISTEEL,A.LATIAS,A.LATIOS,A.GROUDON,A.RAYQUAZA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PRINPLUP,A.EMPOLEON,A.KRICKETUNE,A.VESPIQUEN,A.AMBIPOM,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.GIBLE,A.GABITE,A.GARCHOMP,A.LUCARIO,A.SKORUPI,A.DRAPION,A.WEAVILE,A.GLISCOR,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.DRILBUR,A.EXCADRILL,A.LEAVANNY,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.FERROSEED,A.FERROTHORN,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.RUFFLET,A.BRAVIARY,A.HEATMOR,A.DURANT,A.COBALION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.MELOETTA,A.GENESECT,A.QUILLADIN,A.CHESNAUGHT,A.TALONFLAME,A.PANGORO,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.TYRUNT,A.TYRANTRUM,A.HAWLUCHA,A.TREVENANT,A.NOIVERN,A.YVELTAL,A.MIMIKYU,A.ZERAORA,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.NICKIT,A.THIEVUL,A.OBSTAGOON,A.PERRSERKER,A.DURALUDON,A.URSALUNA,A.SNEASLER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.MASCHIFF,A.MABOSSTIFF,A.BOMBIRDIER,A.KINGAMBIT,A.WALKING_WAKE,A.ARCHALUDON,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.GALAR_MEOWTH,A.GALAR_LINOONE,A.HISUI_SNEASEL,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY],[E.WONDER_ROOM]:[A.CLEFAIRY,A.CLEFABLE,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.STARMIE,A.MR_MIME,A.JYNX,A.PORYGON,A.MEWTWO,A.MEW,A.CLEFFA,A.UMBREON,A.SLOWKING,A.MISDREAVUS,A.PORYGON2,A.SMOOCHUM,A.LUGIA,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SABLEYE,A.ALTARIA,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.KECLEON,A.DUSKULL,A.DUSCLOPS,A.LATIOS,A.DEOXYS,A.MISMAGIUS,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.PORYGON_Z,A.GALLADE,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.DARKRAI,A.MUNNA,A.MUSHARNA,A.YAMASK,A.COFAGRIGUS,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.MELOETTA,A.BRAIXEN,A.DELPHOX,A.ESPURR,A.MEOWSTIC,A.CARBINK,A.XERNEAS,A.DIANCIE,A.HOOPA,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CUTIEFLY,A.RIBOMBEE,A.DEWPIDER,A.ARAQUANID,A.MORELULL,A.SHIINOTIC,A.ORANGURU,A.BRUXISH,A.TAPU_LELE,A.TAPU_FINI,A.LUNALA,A.NIHILEGO,A.STAKATAKA,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATTERENE,A.GRIMMSNARL,A.MR_RIME,A.RUNERIGUS,A.ALCREMIE,A.STONJOURNER,A.INDEEDEE,A.CALYREX,A.ALOLA_NINETALES,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.GALAR_YAMASK],[E.PSYSHOCK]:[A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.STARMIE,A.MR_MIME,A.JYNX,A.PORYGON,A.MEWTWO,A.MEW,A.CLEFFA,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PORYGON2,A.STANTLER,A.SMOOCHUM,A.LUGIA,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.CHIMECHO,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.TOGEKISS,A.PORYGON_Z,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.DARKRAI,A.ARCEUS,A.VICTINI,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.ESPURR,A.MEOWSTIC,A.AROMATISSE,A.INKAY,A.MALAMAR,A.SYLVEON,A.KLEFKI,A.XERNEAS,A.DIANCIE,A.HOOPA,A.ORANGURU,A.BRUXISH,A.TAPU_LELE,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.NECROZMA,A.MAGEARNA,A.BLACEPHALON,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.MR_RIME,A.ALCREMIE,A.INDEEDEE,A.CALYREX,A.WYRDEER,A.ARMAROUGE,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.FARIGIRAF,A.GREAT_TUSK,A.SCREAM_TAIL,A.FLUTTER_MANE,A.GHOLDENGO,A.IRON_VALIANT,A.MUNKIDORI,A.IRON_BOULDER,A.IRON_CROWN,A.ALOLA_RAICHU,A.ALOLA_NINETALES,A.ALOLA_EXEGGUTOR,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.HISUI_BRAVIARY],[E.VENOSHOCK]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.BUTTERFREE,A.BEEDRILL,A.EKANS,A.ARBOK,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.MEW,A.SPINARAK,A.ARIADOS,A.CROBAT,A.BELLOSSOM,A.PINECO,A.FORRETRESS,A.GLIGAR,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.BEAUTIFLY,A.DUSTOX,A.SHROOMISH,A.BRELOOM,A.ROSELIA,A.GULPIN,A.SWALOT,A.CACNEA,A.CACTURNE,A.SEVIPER,A.BUDEW,A.ROSERADE,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.STUNKY,A.SKUNTANK,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.GLISCOR,A.SEISMITOAD,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.TRUBBISH,A.GARBODOR,A.FOONGUS,A.AMOONGUSS,A.SHELMET,A.ACCELGOR,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.MAREANIE,A.TOXAPEX,A.SALANDIT,A.SALAZZLE,A.GOLISOPOD,A.TURTONATOR,A.BRUXISH,A.NIHILEGO,A.POIPOLE,A.NAGANADEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.PINCURCHIN,A.ETERNATUS,A.SNEASLER,A.OVERQWIL,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.VAROOM,A.REVAVROOM,A.GLIMMET,A.GLIMMORA,A.CLODSIRE,A.BRUTE_BONNET,A.IRON_MOTH,A.MUNKIDORI,A.FEZANDIPITI,A.PECHARUNT,A.ALOLA_RATICATE,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.PALDEA_WOOPER],[E.MAGIC_ROOM]:[A.WIGGLYTUFF,A.ABRA,A.KADABRA,A.ALAKAZAM,A.DROWZEE,A.HYPNO,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.NATU,A.XATU,A.ESPEON,A.MISDREAVUS,A.STANTLER,A.SMOOCHUM,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.LUNATONE,A.SHUPPET,A.BANETTE,A.LATIAS,A.JIRACHI,A.MISMAGIUS,A.MIME_JR,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.ESPURR,A.MEOWSTIC,A.KLEFKI,A.HOOPA,A.CUTIEFLY,A.RIBOMBEE,A.DEWPIDER,A.ARAQUANID,A.MORELULL,A.SHIINOTIC,A.ORANGURU,A.MIMIKYU,A.BRUXISH,A.TAPU_LELE,A.TAPU_FINI,A.LUNALA,A.STAKATAKA,A.DOTTLER,A.ORBEETLE,A.HATTERENE,A.MR_RIME,A.ALCREMIE,A.INDEEDEE,A.CALYREX,A.ALOLA_RAICHU,A.GALAR_RAPIDASH,A.GALAR_MR_MIME],[E.SMACK_DOWN]:[A.BLASTOISE,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.ONIX,A.CUBONE,A.MAROWAK,A.RHYHORN,A.RHYDON,A.PINSIR,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.MEW,A.SUDOWOODO,A.AIPOM,A.STEELIX,A.SHUCKLE,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.REMORAID,A.OCTILLERY,A.PHANPY,A.DONPHAN,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.AGGRON,A.CAMERUPT,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.RELICANTH,A.REGIROCK,A.GROUDON,A.TURTWIG,A.GROTLE,A.TORTERRA,A.MONFERNO,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.AMBIPOM,A.BONSLY,A.RHYPERIOR,A.MAMOSWINE,A.PROBOPASS,A.REGIGIGAS,A.EMBOAR,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.KROOKODILE,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.GARBODOR,A.DRUDDIGON,A.TERRAKION,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.BINACLE,A.BARBARACLE,A.CLAUNCHER,A.CLAWITZER,A.CARBINK,A.DIANCIE,A.VOLCANION,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.PASSIMIAN,A.TURTONATOR,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.MARSHADOW,A.STAKATAKA,A.BLACEPHALON,A.CINDERACE,A.INTELEON,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.STONJOURNER,A.COPPERAJAH,A.KLEAVOR,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.TINKATON,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.ANNIHILAPE,A.GREAT_TUSK,A.IRON_THORNS,A.ARCHALUDON,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,A.GALAR_SLOWBRO,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_DECIDUEYE,A.BLOODMOON_URSALUNA],[E.SLUDGE_WAVE]:[A.EKANS,A.ARBOK,A.NIDOQUEEN,A.NIDOKING,A.VILEPLUME,A.VENOMOTH,A.DUGTRIO,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.MEW,A.SPINARAK,A.ARIADOS,A.WOOPER,A.QUAGSIRE,A.QWILFISH,A.SHUCKLE,A.OCTILLERY,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.GULPIN,A.SWALOT,A.SEVIPER,A.CRAWDAUNT,A.CRADILY,A.GASTRODON,A.STUNKY,A.SKUNTANK,A.CROAGUNK,A.TOXICROAK,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.TRUBBISH,A.GARBODOR,A.FRILLISH,A.JELLICENT,A.STUNFISK,A.TORNADUS,A.THUNDURUS,A.LANDORUS,A.GRENINJA,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.GOOMY,A.SLIGGOO,A.GOODRA,A.ZYGARDE,A.VOLCANION,A.MAREANIE,A.TOXAPEX,A.SALANDIT,A.SALAZZLE,A.GOLISOPOD,A.DHELMISE,A.NIHILEGO,A.GUZZLORD,A.POIPOLE,A.NAGANADEL,A.TOXTRICITY,A.ETERNATUS,A.SNEASLER,A.OVERQWIL,A.SHROODLE,A.GRAFAIAI,A.VAROOM,A.REVAVROOM,A.GLIMMET,A.GLIMMORA,A.CLODSIRE,A.IRON_MOTH,A.OKIDOGI,A.MUNKIDORI,A.PECHARUNT,A.ALOLA_RATICATE,A.ALOLA_DUGTRIO,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_STUNFISK,A.HISUI_SNEASEL,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.PALDEA_WOOPER],[E.HEAVY_SLAM]:[A.MACHOP,A.MACHOKE,A.MACHAMP,A.GRAVELER,A.GOLEM,A.MAGNEMITE,A.MAGNETON,A.ONIX,A.RHYHORN,A.RHYDON,A.SNORLAX,A.MEW,A.FORRETRESS,A.STEELIX,A.PHANPY,A.DONPHAN,A.MILTANK,A.TYRANITAR,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.ARON,A.LAIRON,A.AGGRON,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.WALREIN,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.KYOGRE,A.GROUDON,A.TURTWIG,A.GROTLE,A.TORTERRA,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BRONZOR,A.BRONZONG,A.HIPPOWDON,A.MAGNEZONE,A.RHYPERIOR,A.MAMOSWINE,A.PROBOPASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.ARCEUS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.CRUSTLE,A.FERROTHORN,A.EELEKTROSS,A.CUBCHOO,A.BEARTIC,A.GOLETT,A.GOLURK,A.COBALION,A.CARBINK,A.AVALUGG,A.VOLCANION,A.MUDBRAY,A.MUDSDALE,A.TURTONATOR,A.DHELMISE,A.SOLGALEO,A.CELESTEELA,A.GUZZLORD,A.MAGEARNA,A.STAKATAKA,A.MELMETAL,A.CORVIKNIGHT,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.PERRSERKER,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.ZAMAZENTA,A.GLASTRIER,A.URSALUNA,A.NACLI,A.NACLSTACK,A.GARGANACL,A.TINKATON,A.REVAVROOM,A.ORTHWORM,A.CETODDLE,A.CETITAN,A.DONDOZO,A.CLODSIRE,A.DUDUNSPARCE,A.GREAT_TUSK,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.GHOLDENGO,A.TING_LU,A.KORAIDON,A.MIRAIDON,A.ARCHALUDON,A.HYDRAPPLE,A.RAGING_BOLT,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_GOLEM,[A.CALYREX,"ice"],A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.BLOODMOON_URSALUNA],[E.ELECTRO_BALL]:[A.PIKACHU,A.RAICHU,A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.ELECTABUZZ,A.JOLTEON,A.ZAPDOS,A.MEWTWO,A.MEW,A.CHINCHOU,A.LANTURN,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.ELEKID,A.RAIKOU,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.MAGNEZONE,A.ELECTIVIRE,A.ROTOM,A.BLITZLE,A.ZEBSTRIKA,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.EELEKTRIK,A.EELEKTROSS,A.THUNDURUS,A.ZEKROM,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.CHARJABUG,A.VIKAVOLT,A.TOGEDEMARU,A.TAPU_KOKO,A.XURKITREE,A.MAGEARNA,A.ZERAORA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.WOOLOO,A.DUBWOOL,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.PINCURCHIN,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.REGIELEKI,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.RABSCA,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_THORNS,A.GHOLDENGO,A.MIRAIDON,A.RAGING_BOLT,A.ALOLA_RAICHU,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.FLAME_CHARGE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.VULPIX,A.NINETALES,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.MAGMAR,A.FLAREON,A.MOLTRES,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SLUGMA,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.ENTEI,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.MAGMORTAR,A.HEATRAN,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.BLITZLE,A.ZEBSTRIKA,A.DARUMAKA,A.DARMANITAN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.LARVESTA,A.VOLCARONA,A.RESHIRAM,A.GENESECT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.PUMPKABOO,A.GOURGEIST,A.VOLCANION,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.SALANDIT,A.SALAZZLE,A.TYPE_NULL,A.SILVALLY,A.TURTONATOR,A.SOLGALEO,A.CELESTEELA,A.BLACEPHALON,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.YAMPER,A.CARKOL,A.COALOSSAL,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.SLITHER_WING,A.IRON_MOTH,A.CHI_YU,A.KORAIDON,A.GOUGING_FIRE,A.ALOLA_MAROWAK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,[A.PALDEA_TAUROS,"blaze"]],[E.LOW_SWEEP]:[A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.DROWZEE,A.HYPNO,A.HITMONLEE,A.HITMONCHAN,A.ELECTABUZZ,A.MAGMAR,A.MEWTWO,A.MEW,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.SNEASEL,A.TYROGUE,A.HITMONTOP,A.GROVYLE,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.GRUMPIG,A.ZANGOOSE,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.ELECTIVIRE,A.MAGMORTAR,A.GALLADE,A.PIGNITE,A.EMBOAR,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ZOROARK,A.GOTHITELLE,A.HAXORUS,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.GRENINJA,A.PANCHAM,A.PANGORO,A.HELIOPTILE,A.HELIOLISK,A.HAWLUCHA,A.DECIDUEYE,A.INCINEROAR,A.GUMSHOOS,A.MUDBRAY,A.MUDSDALE,A.LURANTIS,A.STUFFUL,A.BEWEAR,A.STEENEE,A.TSAREENA,A.PASSIMIAN,A.KOMALA,A.BUZZWOLE,A.PHEROMOSA,A.MARSHADOW,A.ZERAORA,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.GRIMMSNARL,A.STONJOURNER,A.KUBFU,A.URSHIFU,A.ZARUDE,A.SNEASLER,A.FLORAGATO,A.MEOWSCARADA,A.QUAXWELL,A.QUAQUAVAL,A.LOKIX,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.GRAFAIAI,A.FLAMIGO,A.ANNIHILAPE,A.KINGAMBIT,A.SLITHER_WING,A.IRON_HANDS,A.GHOLDENGO,A.KORAIDON,A.OKIDOGI,A.OGERPON,[A.LYCANROC,"midnight"],A.GALAR_ZAPDOS,A.GALAR_SLOWKING,A.HISUI_SNEASEL,A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.HISUI_DECIDUEYE],[E.ACID_SPRAY]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.EKANS,A.ARBOK,A.ODDISH,A.GLOOM,A.VILEPLUME,A.VENONAT,A.VENOMOTH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.MAGMAR,A.MEW,A.SPINARAK,A.ARIADOS,A.BELLOSSOM,A.WOOPER,A.QUAGSIRE,A.QWILFISH,A.REMORAID,A.OCTILLERY,A.MAGBY,A.GULPIN,A.SWALOT,A.SEVIPER,A.STUNKY,A.SKUNTANK,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.MAGMORTAR,A.ARCEUS,A.SCRAGGY,A.SCRAFTY,A.TRUBBISH,A.GARBODOR,A.KARRABLAST,A.ESCAVALIER,A.FERROSEED,A.FERROTHORN,A.EELEKTRIK,A.EELEKTROSS,A.ACCELGOR,A.SKRELP,A.DRAGALGE,A.SLIGGOO,A.GOODRA,A.MAREANIE,A.TOXAPEX,A.SALANDIT,A.SALAZZLE,A.NIHILEGO,A.FLAPPLE,A.TOXTRICITY,A.SNEASLER,A.OVERQWIL,A.ARMAROUGE,A.TADBULB,A.BELLIBOLT,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.VAROOM,A.REVAVROOM,A.GLIMMET,A.GLIMMORA,A.CLODSIRE,A.IRON_MOTH,A.MUNKIDORI,A.FEZANDIPITI,A.PECHARUNT,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.PALDEA_WOOPER],[E.FOUL_PLAY]:[A.VULPIX,A.NINETALES,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.VOLTORB,A.ELECTRODE,A.MR_MIME,A.PORYGON,A.MEWTWO,A.MEW,A.SPINARAK,A.ARIADOS,A.XATU,A.SUDOWOODO,A.AIPOM,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.SNEASEL,A.DELIBIRD,A.HOUNDOUR,A.HOUNDOOM,A.PORYGON2,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.MASQUERAIN,A.SABLEYE,A.MAWILE,A.CACNEA,A.CACTURNE,A.KECLEON,A.SHUPPET,A.BANETTE,A.ABSOL,A.GLALIE,A.AMBIPOM,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.BONSLY,A.SPIRITOMB,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.PORYGON_Z,A.ROTOM,A.UXIE,A.DARKRAI,A.ARCEUS,A.PURRLOIN,A.LIEPARD,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ZORUA,A.ZOROARK,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.FOONGUS,A.AMOONGUSS,A.STUNFISK,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.TORNADUS,A.THUNDURUS,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.INKAY,A.MALAMAR,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.YVELTAL,A.HOOPA,A.SALANDIT,A.SALAZZLE,A.ORANGURU,A.NIHILEGO,A.PHEROMOSA,A.MARSHADOW,A.BLACEPHALON,A.NICKIT,A.THIEVUL,A.SINISTEA,A.POLTEAGEIST,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.MR_RIME,A.MORPEKO,A.DURALUDON,A.SPECTRIER,A.MEOWSCARADA,A.SQUAWKABILLY,A.SHROODLE,A.GRAFAIAI,A.TOEDSCOOL,A.TOEDSCRUEL,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FARIGIRAF,A.KINGAMBIT,A.WO_CHIEN,A.POLTCHAGEIST,A.SINISTCHA,A.ARCHALUDON,A.PECHARUNT,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_MUK,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_STUNFISK,[A.URSHIFU,"single-strike"],[A.CALYREX,"shadow"],A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.ROUND]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK],[E.ECHOED_VOICE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SPEAROW,A.FEAROW,A.PIKACHU,A.RAICHU,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.CUBONE,A.MAROWAK,A.CHANSEY,A.JYNX,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.POLITOED,A.ESPEON,A.UMBREON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PHANPY,A.DONPHAN,A.SMOOCHUM,A.MILTANK,A.BLISSEY,A.LUGIA,A.HO_OH,A.CELEBI,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.SKITTY,A.DELCATTY,A.PLUSLE,A.MINUN,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.SWABLU,A.ALTARIA,A.CHIMECHO,A.ABSOL,A.SPHEAL,A.SEALEO,A.WALREIN,A.RAYQUAZA,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.MISMAGIUS,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.HAPPINY,A.CHATOT,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GALLADE,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PURRLOIN,A.LIEPARD,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.AUDINO,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.ELGYEM,A.BEHEEYEM,A.CUBCHOO,A.BEARTIC,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.MELOETTA,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.AMAURA,A.AURORUS,A.SYLVEON,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.ROCKRUFF,A.LYCANROC,A.COMFEY,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.NIHILEGO,A.PHEROMOSA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.ZERAORA,A.ARCTOZOLT,A.LECHONK,A.OINKOLOGNE,A.TANDEMAUS,A.MAUSHOLD,A.CETODDLE,A.CETITAN,A.ALOLA_RAICHU,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE],[E.STORED_POWER]:[A.CLEFAIRY,A.CLEFABLE,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.CHANSEY,A.MR_MIME,A.JYNX,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CLEFFA,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.ESPEON,A.UMBREON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.DUNSPARCE,A.STANTLER,A.SMOOCHUM,A.BLISSEY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.SOLROCK,A.CLAYDOL,A.CHIMECHO,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.HAPPINY,A.SPIRITOMB,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GALLADE,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.MANAPHY,A.ARCEUS,A.VICTINI,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLABEBE,A.FLOETTE,A.FLORGES,A.MEOWSTIC,A.INKAY,A.MALAMAR,A.SYLVEON,A.KLEFKI,A.DIANCIE,A.PRIMARINA,A.RIBOMBEE,A.COMFEY,A.ORANGURU,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.NECROZMA,A.MAGEARNA,A.BLACEPHALON,A.DOTTLER,A.ORBEETLE,A.TOXTRICITY,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.MR_RIME,A.MILCERY,A.ALCREMIE,A.INDEEDEE,A.CALYREX,A.WYRDEER,A.ARMAROUGE,A.CERULEDGE,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.VELUZA,A.FARIGIRAF,A.DUDUNSPARCE,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_VALIANT,A.MUNKIDORI,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ETERNAL_FLOETTE,A.ALOLA_NINETALES,A.ALOLA_EXEGGUTOR,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.HISUI_BRAVIARY],[E.ALLY_SWITCH]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DIGLETT,A.DUGTRIO,A.ABRA,A.KADABRA,A.ALAKAZAM,A.PONYTA,A.RAPIDASH,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.MAROWAK,A.CHANSEY,A.STARMIE,A.MR_MIME,A.JYNX,A.PORYGON,A.MEWTWO,A.MEW,A.NATU,A.XATU,A.ESPEON,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.FORRETRESS,A.PORYGON2,A.TYROGUE,A.BLISSEY,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SHEDINJA,A.SABLEYE,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.CHIMECHO,A.METANG,A.METAGROSS,A.LATIAS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.WORMADAM,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.SPIRITOMB,A.MAGNEZONE,A.TOGEKISS,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.MUNNA,A.MUSHARNA,A.ZEBSTRIKA,A.WOOBAT,A.SWOOBAT,A.AUDINO,A.YAMASK,A.COFAGRIGUS,A.ARCHEN,A.ARCHEOPS,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.KLANG,A.KLINKLANG,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.MIENFOO,A.MIENSHAO,A.GOLETT,A.GOLURK,A.MELOETTA,A.GENESECT,A.BRAIXEN,A.DELPHOX,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.INKAY,A.MALAMAR,A.HELIOPTILE,A.HELIOLISK,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.DIANCIE,A.HOOPA,A.CUTIEFLY,A.RIBOMBEE,A.COMFEY,A.ORANGURU,A.BRUXISH,A.DHELMISE,A.TAPU_LELE,A.NIHILEGO,A.NECROZMA,A.NAGANADEL,A.STAKATAKA,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.DOTTLER,A.ORBEETLE,A.SINISTEA,A.POLTEAGEIST,A.MR_RIME,A.RUNERIGUS,A.INDEEDEE,A.DRAKLOAK,A.DRAGAPULT,A.CALYREX,A.SPRIGATITO,A.ARMAROUGE,A.CERULEDGE,A.FLITTLE,A.GREAVARD,A.IRON_LEAVES,A.ALOLA_RAICHU,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_YAMASK],[E.SCALD]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.KRABBY,A.KINGLER,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.GYARADOS,A.VAPOREON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.RAIKOU,A.SUICUNE,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.AZURILL,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.KYOGRE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.FINNEON,A.LUMINEON,A.MANTYKE,A.PHIONE,A.MANAPHY,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.STUNFISK,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.GOODRA,A.VOLCANION,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CRABRAWLER,A.CRABOMINABLE,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.WIMPOD,A.GOLISOPOD,A.BRUXISH,A.TAPU_FINI,A.INTELEON,A.DREDNAW,A.CARKOL,A.COALOSSAL,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.SIZZLIPEDE,A.CENTISKORCH,A.CURSOLA,A.PINCURCHIN,A.DRACOVISH,A.DRAKLOAK,A.DRAGAPULT,A.WALKING_WAKE,A.POLTCHAGEIST,A.SINISTCHA,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_STUNFISK,[A.URSHIFU,"rapid-strike"]],[E.HEX]:[A.NIDOQUEEN,A.NIDOKING,A.VULPIX,A.NINETALES,A.TENTACOOL,A.TENTACRUEL,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.HYPNO,A.MEWTWO,A.MEW,A.SPINARAK,A.ARIADOS,A.CROBAT,A.MURKROW,A.MISDREAVUS,A.DUNSPARCE,A.QWILFISH,A.SHIFTRY,A.SHEDINJA,A.SABLEYE,A.BALTOY,A.CLAYDOL,A.CASTFORM,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.ABSOL,A.SNORUNT,A.GLALIE,A.VESPIQUEN,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.SPIRITOMB,A.GALLADE,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.GIRATINA,A.ARCEUS,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.YAMASK,A.COFAGRIGUS,A.ZORUA,A.ZOROARK,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.EELEKTROSS,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.DELPHOX,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.DECIDUEYE,A.TOXAPEX,A.SANDYGAST,A.PALOSSAND,A.MIMIKYU,A.DHELMISE,A.LUNALA,A.NIHILEGO,A.MARSHADOW,A.NAGANADEL,A.TOXTRICITY,A.SINISTEA,A.POLTEAGEIST,A.CURSOLA,A.RUNERIGUS,A.PINCURCHIN,A.DRAKLOAK,A.DRAGAPULT,A.SPECTRIER,A.BASCULEGION,A.SKELEDIRGE,A.CERULEDGE,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.ESPATHRA,A.GREAVARD,A.HOUNDSTONE,A.DUDUNSPARCE,A.BRUTE_BONNET,A.FLUTTER_MANE,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.IRON_VALIANT,A.POLTCHAGEIST,A.SINISTCHA,A.MUNKIDORI,A.FEZANDIPITI,A.PECHARUNT,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.MAROWAK,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_YAMASK,[A.CALYREX,"shadow"],A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.SKY_DROP]:[A.CHARIZARD,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.SKARMORY,A.LUGIA,A.HO_OH,A.PELIPPER,A.RAYQUAZA,A.RUFFLET,A.BRAVIARY,A.TORNADUS,A.THUNDURUS,A.HAWLUCHA,A.YVELTAL,A.VIKAVOLT,A.TAPU_KOKO,A.LUNALA,A.NAGANADEL],[E.INCINERATE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GROWLITHE,A.ARCANINE,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.GRIMER,A.MUK,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MAGMAR,A.TAUROS,A.GYARADOS,A.FLAREON,A.AERODACTYL,A.SNORLAX,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.SLOWKING,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.SLUGMA,A.MAGCARGO,A.REMORAID,A.OCTILLERY,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.BLISSEY,A.ENTEI,A.HO_OH,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.POOCHYENA,A.MIGHTYENA,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.SABLEYE,A.MAWILE,A.AGGRON,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.FLYGON,A.ALTARIA,A.ZANGOOSE,A.SOLROCK,A.CASTFORM,A.KECLEON,A.ABSOL,A.BAGON,A.SHELGON,A.SALAMENCE,A.GROUDON,A.RAYQUAZA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.HAPPINY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.LICKILICKY,A.RHYPERIOR,A.MAGMORTAR,A.TOGEKISS,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.DARKRAI,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.AUDINO,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ZORUA,A.ZOROARK,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.GOODRA,A.PUMPKABOO,A.GOURGEIST,A.VOLCANION,A.SALANDIT,A.SALAZZLE,A.TURTONATOR,A.BLACEPHALON,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.DUDUNSPARCE,A.CHI_YU,A.ROARING_MOON,A.GOUGING_FIRE,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_WEEZING,A.GALAR_SLOWKING,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_GOODRA,A.PALDEA_TAUROS],[E.QUASH]:[A.NIDOQUEEN,A.NIDOKING,A.KINGLER,A.MEW,A.MURKROW,A.SLOWKING,A.KINGDRA,A.RAIKOU,A.ENTEI,A.SUICUNE,A.SLAKING,A.SABLEYE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.VESPIQUEN,A.HONCHKROW,A.SPIRITOMB,A.ARCEUS,A.PANCHAM,A.PANGORO,A.HOOPA,A.INCINEROAR,A.ORICORIO,A.ORANGURU,A.PALOSSAND,A.PYUKUMUKU,A.KOMALA,A.BLACEPHALON,A.HATENNA,A.MORPEKO,A.TINKATINK,A.IRON_LEAVES,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK],[E.ACROBATICS]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BUTTERFREE,A.BEEDRILL,A.ZUBAT,A.GOLBAT,A.VENOMOTH,A.MANKEY,A.PRIMEAPE,A.FARFETCHD,A.SCYTHER,A.ZAPDOS,A.MOLTRES,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.CROBAT,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.MURKROW,A.GLIGAR,A.SCIZOR,A.DELIBIRD,A.MANTINE,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.BLAZIKEN,A.BEAUTIFLY,A.DUSTOX,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.NINJASK,A.VOLBEAT,A.ILLUMISE,A.SWABLU,A.ALTARIA,A.LUNATONE,A.SOLROCK,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.STARLY,A.STARAVIA,A.STARAPTOR,A.MOTHIM,A.VESPIQUEN,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.LOPUNNY,A.HONCHKROW,A.FINNEON,A.LUMINEON,A.MANTYKE,A.GLISCOR,A.UXIE,A.MESPRIT,A.AZELF,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.WOOBAT,A.SWOOBAT,A.ARCHEN,A.ARCHEOPS,A.SWANNA,A.EMOLGA,A.ALOMOMOLA,A.EELEKTRIK,A.EELEKTROSS,A.CRYOGONAL,A.MIENFOO,A.MIENSHAO,A.RUFFLET,A.BRAVIARY,A.MANDIBUZZ,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.TORNADUS,A.THUNDURUS,A.MELOETTA,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.SALAZZLE,A.TSAREENA,A.COMFEY,A.PASSIMIAN,A.MINIOR,A.KOMALA,A.TAPU_KOKO,A.LUNALA,A.CELESTEELA,A.MARSHADOW,A.NAGANADEL,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.INTELEON,A.THIEVUL,A.FLAPPLE,A.CRAMORANT,A.FROSMOTH,A.DRAKLOAK,A.DRAGAPULT,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.KLEAVOR,A.SNEASLER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.WATTREL,A.KILOWATTREL,A.SHROODLE,A.GRAFAIAI,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.CYCLIZAR,A.FLAMIGO,A.ANNIHILAPE,A.SLITHER_WING,A.IRON_BUNDLE,A.IRON_JUGULIS,A.IRON_MOTH,A.CHIEN_PAO,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.FEZANDIPITI,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY],[E.RETALIATE]:[A.RATTATA,A.RATICATE,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.MACHOP,A.MACHOKE,A.MACHAMP,A.FARFETCHD,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.CHANSEY,A.KANGASKHAN,A.TAUROS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.MEW,A.SENTRET,A.FURRET,A.TOGETIC,A.AIPOM,A.ESPEON,A.UMBREON,A.MURKROW,A.GIRAFARIG,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.HOUNDOUR,A.HOUNDOOM,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MEDITITE,A.MEDICHAM,A.CARVANHA,A.SHARPEDO,A.SPINDA,A.CACTURNE,A.ZANGOOSE,A.SEVIPER,A.CRAWDAUNT,A.CASTFORM,A.KECLEON,A.ABSOL,A.LATIAS,A.LATIOS,A.MONFERNO,A.INFERNAPE,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.SPIRITOMB,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.LICKILICKY,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GALLADE,A.REGIGIGAS,A.DARKRAI,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.LEAVANNY,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.DURANT,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.INKAY,A.MALAMAR,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.ZYGARDE,A.PASSIMIAN,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.DUBWOOL,A.CLOBBOPUS,A.GRAPPLOCT,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.SIRFETCHD,A.FALINKS,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.MASCHIFF,A.KINGAMBIT,A.IRON_LEAVES,A.OGERPON,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK,A.GALAR_MEOWTH,A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_SAMUROTT],[E.WATER_PLEDGE]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PANPOUR,A.SIMIPOUR,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.SILVALLY,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.HISUI_SAMUROTT],[E.FIRE_PLEDGE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.TEPIG,A.PIGNITE,A.EMBOAR,A.PANSEAR,A.SIMISEAR,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.SILVALLY,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.HISUI_TYPHLOSION],[E.GRASS_PLEDGE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TURTWIG,A.GROTLE,A.TORTERRA,A.SNIVY,A.SERVINE,A.SERPERIOR,A.PANSAGE,A.SIMISAGE,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.SILVALLY,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.HISUI_DECIDUEYE],[E.VOLT_SWITCH]:[A.PIKACHU,A.RAICHU,A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.ELECTABUZZ,A.JOLTEON,A.ZAPDOS,A.MEW,A.CHINCHOU,A.LANTURN,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.FORRETRESS,A.ELEKID,A.RAIKOU,A.NOSEPASS,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.MAGNEZONE,A.ELECTIVIRE,A.PROBOPASS,A.ROTOM,A.BLITZLE,A.ZEBSTRIKA,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.COBALION,A.THUNDURUS,A.ZEKROM,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.TOGEDEMARU,A.TAPU_KOKO,A.XURKITREE,A.MAGEARNA,A.ZERAORA,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.MORPEKO,A.REGIELEKI,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.MIRAIDON,A.RAGING_BOLT,A.IRON_CROWN,A.ALOLA_RAICHU,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.STRUGGLE_BUG]:[A.BUTTERFREE,A.BEEDRILL,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.SCYTHER,A.PINSIR,A.MEW,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.YANMA,A.PINECO,A.FORRETRESS,A.GLIGAR,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.BEAUTIFLY,A.DUSTOX,A.SURSKIT,A.MASQUERAIN,A.NINCADA,A.NINJASK,A.SHEDINJA,A.VOLBEAT,A.ILLUMISE,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.ANORITH,A.ARMALDO,A.STARAPTOR,A.KRICKETOT,A.KRICKETUNE,A.WORMADAM,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.SKORUPI,A.DRAPION,A.YANMEGA,A.GLISCOR,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.DWEBBLE,A.CRUSTLE,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.SHELMET,A.ACCELGOR,A.DURANT,A.LARVESTA,A.VOLCARONA,A.GENESECT,A.SCATTERBUG,A.SPEWPA,A.VIVILLON,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CUTIEFLY,A.RIBOMBEE,A.WIMPOD,A.GOLISOPOD,A.BLIPBUG,A.DOTTLER,A.ORBEETLE,A.SIZZLIPEDE,A.SNOM,A.FROSMOTH,A.KLEAVOR,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.RELLOR,A.RABSCA,A.IRON_MOTH],[E.BULLDOZE]:[A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.EKANS,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.SLOWPOKE,A.SLOWBRO,A.ONIX,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.AERODACTYL,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.SHUCKLE,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.MANTINE,A.PHANPY,A.DONPHAN,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.SCEPTILE,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.BRELOOM,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.ARON,A.LAIRON,A.AGGRON,A.SWALOT,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.GRUMPIG,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.ALTARIA,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.BALTOY,A.CLAYDOL,A.CRADILY,A.ARMALDO,A.MILOTIC,A.DUSCLOPS,A.TROPIUS,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.RELICANTH,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.TURTWIG,A.GROTLE,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.BIBAREL,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.SHELLOS,A.GASTRODON,A.PURUGLY,A.BRONZOR,A.BRONZONG,A.BONSLY,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.MANTYKE,A.ABOMASNOW,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.GLISCOR,A.MAMOSWINE,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.ARCEUS,A.PIGNITE,A.EMBOAR,A.SAMUROTT,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DRILBUR,A.EXCADRILL,A.CONKELDURR,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARMANITAN,A.DWEBBLE,A.CRUSTLE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.DEERLING,A.SAWSBUCK,A.FERROTHORN,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.STUNFISK,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.HYDREIGON,A.TERRAKION,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.BINACLE,A.BARBARACLE,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.GOODRA,A.PHANTUMP,A.TREVENANT,A.BERGMITE,A.AVALUGG,A.ZYGARDE,A.DIANCIE,A.VOLCANION,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.KOMALA,A.TURTONATOR,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.SOLGALEO,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.STAKATAKA,A.RILLABOOM,A.GREEDENT,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CURSOLA,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.GLASTRIER,A.SPECTRIER,A.WYRDEER,A.URSALUNA,A.LECHONK,A.OINKOLOGNE,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.VAROOM,A.REVAVROOM,A.ORTHWORM,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.DONDOZO,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.GREAT_TUSK,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.BAXCALIBUR,A.TING_LU,A.KORAIDON,A.GOUGING_FIRE,A.IRON_BOULDER,A.IRON_CROWN,[A.WORMADAM,"sandy"],A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_DARMANITAN,A.GALAR_STUNFISK,[A.CALYREX,"ice","shadow"],A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,A.HISUI_SAMUROTT,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.FROST_BREATH]:[A.DEWGONG,A.CLOYSTER,A.JYNX,A.LAPRAS,A.ARTICUNO,A.MEW,A.DELIBIRD,A.SMOOCHUM,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.REGICE,A.SNOVER,A.ABOMASNOW,A.GLACEON,A.FROSLASS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.AMAURA,A.AURORUS,A.BERGMITE,A.AVALUGG,A.CRABRAWLER,A.CRABOMINABLE,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.GOLISOPOD,A.BRUXISH,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES],[E.DRAGON_TAIL]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.BLASTOISE,A.ARBOK,A.NIDOQUEEN,A.NIDOKING,A.ONIX,A.LICKITUNG,A.RHYDON,A.GYARADOS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.MEGANIUM,A.FERALIGATR,A.AMPHAROS,A.SLOWKING,A.STEELIX,A.TYRANITAR,A.LUGIA,A.AGGRON,A.VIBRAVA,A.FLYGON,A.SEVIPER,A.MILOTIC,A.TROPIUS,A.BAGON,A.SHELGON,A.SALAMENCE,A.GROUDON,A.RAYQUAZA,A.RAMPARDOS,A.GIBLE,A.GABITE,A.GARCHOMP,A.LICKILICKY,A.RHYPERIOR,A.DIALGA,A.PALKIA,A.GIRATINA,A.ARCEUS,A.SERPERIOR,A.SAMUROTT,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ARCHEOPS,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.SKRELP,A.DRAGALGE,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.GOODRA,A.NOIVERN,A.ZYGARDE,A.SALAZZLE,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.GUZZLORD,A.NAGANADEL,A.CHEWTLE,A.APPLETUN,A.DRACOZOLT,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ETERNATUS,A.CYCLIZAR,A.DUDUNSPARCE,A.IRON_JUGULIS,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.DIPPLIN,A.ARCHALUDON,A.HYDRAPPLE,A.RAGING_BOLT,A.ALOLA_EXEGGUTOR,A.HISUI_GOODRA],[E.WORK_UP]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.SANDSHREW,A.SANDSLASH,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.FARFETCHD,A.DODUO,A.DODRIO,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.CHANSEY,A.KANGASKHAN,A.TAUROS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MARILL,A.AZUMARILL,A.AIPOM,A.ESPEON,A.UMBREON,A.GIRAFARIG,A.SNUBBULL,A.GRANBULL,A.HERACROSS,A.TEDDIURSA,A.URSARING,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.MILTANK,A.BLISSEY,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.ZIGZAGOON,A.LINOONE,A.TAILLOW,A.SWELLOW,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.SKITTY,A.DELCATTY,A.MEDITITE,A.MEDICHAM,A.SPINDA,A.ZANGOOSE,A.CASTFORM,A.KECLEON,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.GLAMEOW,A.PURUGLY,A.HAPPINY,A.CHATOT,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.LICKILICKY,A.TOGEKISS,A.LEAFEON,A.GLACEON,A.GALLADE,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.MIENFOO,A.MIENSHAO,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.SYLVEON,A.HAWLUCHA,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.TYPE_NULL,A.SILVALLY,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_BULU,A.SOLGALEO,A.LUNALA,A.BUZZWOLE,A.MARSHADOW,A.ZERAORA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.CLOBBOPUS,A.GRAPPLOCT,A.OBSTAGOON,A.PERRSERKER,A.SIRFETCHD,A.CUFANT,A.COPPERAJAH,A.ZACIAN,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.FIDOUGH,A.DACHSBUN,A.IRON_JUGULIS,A.IRON_LEAVES,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,[A.LYCANROC,"dusk"],A.GALAR_MEOWTH,A.GALAR_FARFETCHD,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.PALDEA_TAUROS],[E.ELECTROWEB]:[A.CATERPIE,A.METAPOD,A.BUTTERFREE,A.WEEDLE,A.KAKUNA,A.BEEDRILL,A.PIKACHU,A.RAICHU,A.MAGNEMITE,A.MAGNETON,A.ELECTABUZZ,A.PORYGON,A.MEW,A.SPINARAK,A.ARIADOS,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.PORYGON2,A.ELEKID,A.WURMPLE,A.SILCOON,A.BEAUTIFLY,A.CASCOON,A.DUSTOX,A.PLUSLE,A.MINUN,A.BURMY,A.WORMADAM,A.MOTHIM,A.PACHIRISU,A.MAGNEZONE,A.ELECTIVIRE,A.PORYGON_Z,A.ROTOM,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.STUNFISK,A.THUNDURUS,A.GENESECT,A.SPEWPA,A.VIVILLON,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.PASSIMIAN,A.TOGEDEMARU,A.TAPU_KOKO,A.PHEROMOSA,A.XURKITREE,A.MAGEARNA,A.ZERAORA,A.MORPEKO,A.REGIELEKI,A.SPIDOPS,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.SANDY_SHOCKS,A.IRON_THORNS,A.RAGING_BOLT,A.ALOLA_RAICHU,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM],[E.WILD_CHARGE]:[A.RATTATA,A.RATICATE,A.PIKACHU,A.RAICHU,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.CHANSEY,A.ELECTABUZZ,A.TAUROS,A.JOLTEON,A.SNORLAX,A.ZAPDOS,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.CHINCHOU,A.LANTURN,A.PICHU,A.IGGLYBUFF,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.DUNSPARCE,A.SNUBBULL,A.GRANBULL,A.STANTLER,A.ELEKID,A.BLISSEY,A.RAIKOU,A.SLAKING,A.SKITTY,A.DELCATTY,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.SPINDA,A.RAYQUAZA,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.MAGNEZONE,A.ELECTIVIRE,A.ARCEUS,A.VICTINI,A.TEPIG,A.PIGNITE,A.EMBOAR,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.BLITZLE,A.ZEBSTRIKA,A.AUDINO,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.BOUFFALANT,A.LARVESTA,A.VOLCARONA,A.THUNDURUS,A.ZEKROM,A.BUNNELBY,A.DIGGERSBY,A.LITLEO,A.PYROAR,A.SKIDDO,A.GOGOAT,A.FURFROU,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.NOIBAT,A.NOIVERN,A.VOLCANION,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.TOGEDEMARU,A.TAPU_KOKO,A.SOLGALEO,A.XURKITREE,A.ZERAORA,A.GREEDENT,A.WOOLOO,A.DUBWOOL,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.PINCURCHIN,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.ZACIAN,A.ZAMAZENTA,A.REGIELEKI,A.WYRDEER,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MABOSSTIFF,A.CYCLIZAR,A.DUDUNSPARCE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.KORAIDON,A.MIRAIDON,A.IRON_LEAVES,A.RAGING_BOLT,A.IRON_BOULDER,A.TERAPAGOS,A.ALOLA_RAICHU,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.PALDEA_TAUROS],[E.DRILL_RUN]:[A.BEEDRILL,A.SPEAROW,A.FEAROW,A.SANDSLASH,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.RAPIDASH,A.DODRIO,A.SEEL,A.DEWGONG,A.CLOYSTER,A.ONIX,A.RHYHORN,A.RHYDON,A.GOLDEEN,A.SEAKING,A.LAPRAS,A.MEW,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.STEELIX,A.SKARMORY,A.DELIBIRD,A.HITMONTOP,A.BALTOY,A.CLAYDOL,A.RHYPERIOR,A.SAMUROTT,A.DRILBUR,A.EXCADRILL,A.KARRABLAST,A.ESCAVALIER,[A.LYCANROC,"midday","dusk"],A.GOLISOPOD,A.PHEROMOSA,A.SILICOBRA,A.SANDACONDA,A.ARROKUDA,A.BARRASKEWDA,A.BOMBIRDIER,A.VELUZA,A.DUDUNSPARCE,A.ALOLA_SANDSLASH,A.GALAR_RAPIDASH,A.HISUI_SAMUROTT,A.PALDEA_TAUROS],[E.RAZOR_SHELL]:[A.SLOWBRO,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.KABUTOPS,A.MEW,A.SLOWKING,A.CORPHISH,A.CRAWDAUNT,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.CARRACOSTA,A.ESCAVALIER,A.BINACLE,A.BARBARACLE,A.GOLISOPOD,A.DREDNAW,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.HISUI_SAMUROTT],[E.HEAT_CRASH]:[A.CHARIZARD,A.ARCANINE,A.RHYDON,A.SNORLAX,A.MEW,A.SLUGMA,A.MAGCARGO,A.BLAZIKEN,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.GROUDON,A.RHYPERIOR,A.MAGMORTAR,A.HEATRAN,A.REGIGIGAS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.GOLURK,A.RESHIRAM,A.VOLCANION,A.INCINEROAR,A.TURTONATOR,A.SOLGALEO,A.GUZZLORD,A.STAKATAKA,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.SIZZLIPEDE,A.CENTISKORCH,A.STONJOURNER,A.COPPERAJAH,A.SKELEDIRGE,A.SLITHER_WING,A.KORAIDON,A.GOUGING_FIRE,A.TERAPAGOS,A.HISUI_ARCANINE],[E.TAIL_SLAP]:[A.VULPIX,A.NINETALES,A.MEW,A.AIPOM,A.ZIGZAGOON,A.LINOONE,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.STUNKY,A.SKUNTANK,A.MINCCINO,A.CINCCINO,A.MEOWSTIC,[A.LYCANROC,"midday","dusk"],A.SKWOVET,A.GREEDENT,A.NICKIT,A.THIEVUL,A.ZACIAN,A.ZAMAZENTA,A.FEZANDIPITI,A.ALOLA_VULPIX,A.ALOLA_NINETALES],[E.HURRICANE]:[A.CHARIZARD,A.BUTTERFREE,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.GYARADOS,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEWTWO,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.MURKROW,A.MANTINE,A.KINGDRA,A.LUGIA,A.SHIFTRY,A.TAILLOW,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.SWABLU,A.ALTARIA,A.CASTFORM,A.TROPIUS,A.SALAMENCE,A.RAYQUAZA,A.STARLY,A.STARAVIA,A.STARAPTOR,A.VESPIQUEN,A.HONCHKROW,A.ARCEUS,A.UNFEZANT,A.WHIMSICOTT,A.DUCKLETT,A.SWANNA,A.RUFFLET,A.BRAVIARY,A.MANDIBUZZ,A.VOLCARONA,A.TORNADUS,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.DECIDUEYE,A.ORICORIO,A.DRAMPA,A.CORVISQUIRE,A.CORVIKNIGHT,A.SANDACONDA,A.CRAMORANT,A.FROSMOTH,A.QUAQUAVAL,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.BOMBIRDIER,A.FLAMIGO,A.DUDUNSPARCE,A.SLITHER_WING,A.IRON_JUGULIS,A.IRON_MOTH,A.ROARING_MOON,A.WALKING_WAKE,A.FEZANDIPITI,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_LILLIGANT,A.HISUI_BRAVIARY],[E.SNARL]:[A.EKANS,A.ARBOK,A.VULPIX,A.NINETALES,A.MEOWTH,A.PERSIAN,A.GROWLITHE,A.ARCANINE,A.MEW,A.UMBREON,A.MURKROW,A.SNUBBULL,A.GRANBULL,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.SABLEYE,A.ELECTRIKE,A.MANECTRIC,A.CARVANHA,A.SHARPEDO,A.SPOINK,A.GRUMPIG,A.SEVIPER,A.CRAWDAUNT,A.CHIMECHO,A.ABSOL,A.SHINX,A.LUXIO,A.LUXRAY,A.FLOATZEL,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.SPIRITOMB,A.DRAPION,A.WEAVILE,A.DARKRAI,A.ARCEUS,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.SCRAGGY,A.SCRAFTY,A.ZORUA,A.ZOROARK,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.VULLABY,A.MANDIBUZZ,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.THUNDURUS,A.LITLEO,A.PYROAR,A.PANGORO,A.FURFROU,A.YVELTAL,A.INCINEROAR,A.ROCKRUFF,A.LYCANROC,A.GOLISOPOD,A.SILVALLY,A.DRAMPA,A.TAPU_BULU,A.SOLGALEO,A.GUZZLORD,A.NAGANADEL,A.ZERAORA,A.RILLABOOM,A.CINDERACE,A.NICKIT,A.THIEVUL,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.OBSTAGOON,A.MORPEKO,A.COPPERAJAH,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.BOMBIRDIER,A.GREAVARD,A.HOUNDSTONE,A.KINGAMBIT,A.IRON_JUGULIS,A.IRON_THORNS,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.OKIDOGI,A.ARCHALUDON,A.GOUGING_FIRE,A.RAGING_BOLT,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.HISUI_ARCANINE,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.BLOODMOON_URSALUNA,[A.URSHIFU,"single-strike"]],[E.PHANTOM_FORCE]:[A.HAUNTER,A.GENGAR,A.MEW,A.MISDREAVUS,A.SHEDINJA,A.SABLEYE,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.DRIFLOON,A.DRIFBLIM,A.MISMAGIUS,A.SPIRITOMB,A.DUSKNOIR,A.GIRATINA,A.ARCEUS,A.COFAGRIGUS,A.GOLETT,A.GOLURK,A.PHANTUMP,A.TREVENANT,A.GOURGEIST,A.YVELTAL,A.HOOPA,A.DECIDUEYE,A.MIMIKYU,A.DHELMISE,A.LUNALA,A.MARSHADOW,A.SINISTEA,A.POLTEAGEIST,A.RUNERIGUS,A.DRAKLOAK,A.DRAGAPULT,A.SPECTRIER,A.BASCULEGION,A.CERULEDGE,A.BRAMBLIN,A.BRAMBLEGHAST,A.GREAVARD,A.HOUNDSTONE,A.ANNIHILAPE,A.FLUTTER_MANE,A.POLTCHAGEIST,A.SINISTCHA,A.PECHARUNT,[A.CALYREX,"shadow"],A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.PETAL_BLIZZARD]:[A.VENUSAUR,A.GLOOM,A.VILEPLUME,A.MEW,A.MEGANIUM,A.BELLOSSOM,A.SUNFLORA,A.SHIFTRY,A.ROSELIA,A.TROPIUS,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.SHAYMIN,A.SNIVY,A.SERVINE,A.SERPERIOR,A.LILLIGANT,A.MARACTUS,A.SAWSBUCK,A.FLABEBE,A.FLOETTE,A.FLORGES,A.FOMANTIS,A.LURANTIS,A.STEENEE,A.TSAREENA,A.COMFEY,A.ZARUDE,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.ARBOLIVA,A.ETERNAL_FLOETTE,A.HISUI_LILLIGANT],[E.DISARMING_VOICE]:[A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.CHANSEY,A.MEW,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.MARILL,A.AZUMARILL,A.BLISSEY,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.WHISMUR,A.SKITTY,A.DELCATTY,A.ILLUMISE,A.SWABLU,A.ALTARIA,A.MILOTIC,A.CHIMECHO,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.HAPPINY,A.GALLADE,A.PANSAGE,A.PANSEAR,A.PANPOUR,A.AUDINO,A.DUCKLETT,A.SWANNA,A.MELOETTA,A.FLABEBE,A.FLOETTE,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.SPRITZEE,A.AROMATISSE,A.SYLVEON,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.TOGEDEMARU,A.TAPU_FINI,A.MAGEARNA,A.HATENNA,A.HATTREM,A.HATTERENE,A.INDEEDEE,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.FLITTLE,A.ESPATHRA,A.FINIZEN,A.PALAFIN,A.FLUTTER_MANE,A.FEZANDIPITI,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ETERNAL_FLOETTE],[E.DRAINING_KISS]:[A.BUTTERFREE,A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DROWZEE,A.HYPNO,A.JYNX,A.MEW,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.MARILL,A.AZUMARILL,A.ESPEON,A.MISDREAVUS,A.SMOOCHUM,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.AZURILL,A.MAWILE,A.ILLUMISE,A.MILOTIC,A.CHIMECHO,A.GOREBYSS,A.LUVDISC,A.LATIAS,A.CHERUBI,A.CHERRIM,A.MISMAGIUS,A.TOGEKISS,A.GALLADE,A.FROSLASS,A.UXIE,A.MESPRIT,A.AZELF,A.AUDINO,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.SYLVEON,A.DEDENNE,A.KLEFKI,A.XERNEAS,A.DIANCIE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CUTIEFLY,A.RIBOMBEE,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.MIMIKYU,A.TAPU_LELE,A.TAPU_FINI,A.MAGEARNA,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.MILCERY,A.ALCREMIE,A.INDEEDEE,A.SPECTRIER,A.CALYREX,A.ENAMORUS,A.DACHSBUN,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.FINIZEN,A.PALAFIN,A.FLUTTER_MANE,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ETERNAL_FLOETTE],[E.GRASSY_TERRAIN]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MEW,A.CHIKORITA,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNKERN,A.SUNFLORA,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.SHROOMISH,A.BRELOOM,A.CACNEA,A.CACTURNE,A.CRADILY,A.TROPIUS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.TANGROWTH,A.ARCEUS,A.SNIVY,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.LILLIGANT,A.MARACTUS,A.DEERLING,A.SAWSBUCK,A.FOONGUS,A.AMOONGUSS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PHANTUMP,A.TREVENANT,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.FOMANTIS,A.LURANTIS,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.TAPU_BULU,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.GOSSIFLEUR,A.ELDEGOSS,A.FLAPPLE,A.APPLETUN,A.ZARUDE,A.CALYREX,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.BRUTE_BONNET,A.WO_CHIEN,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OGERPON,A.HYDRAPPLE,A.ALOLA_EXEGGUTOR,A.ETERNAL_FLOETTE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.MISTY_TERRAIN]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MR_MIME,A.MEW,A.CLEFFA,A.IGGLYBUFF,A.MARILL,A.AZUMARILL,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.MAWILE,A.MIME_JR,A.GALLADE,A.ARCEUS,A.AUDINO,A.COTTONEE,A.WHIMSICOTT,A.ALOMOMOLA,A.FLABEBE,A.FLOETTE,A.FLORGES,[A.MEOWSTIC,"male"],A.SPRITZEE,A.AROMATISSE,A.SYLVEON,A.DEDENNE,A.CARBINK,A.KLEFKI,A.XERNEAS,A.VOLCANION,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.MIMIKYU,A.TAPU_FINI,A.MAGEARNA,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.MR_RIME,A.MILCERY,A.ALCREMIE,A.ZACIAN,A.ENAMORUS,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.FIDOUGH,A.DACHSBUN,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_VALIANT,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ETERNAL_FLOETTE,A.GALAR_RAPIDASH,A.GALAR_WEEZING,A.GALAR_MR_MIME],[E.PLAY_ROUGH]:[A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.GROWLITHE,A.ARCANINE,A.PONYTA,A.RAPIDASH,A.DEWGONG,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SENTRET,A.FURRET,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SNUBBULL,A.GRANBULL,A.TEDDIURSA,A.URSARING,A.PHANPY,A.DONPHAN,A.MILTANK,A.POOCHYENA,A.MIGHTYENA,A.LINOONE,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.SKITTY,A.DELCATTY,A.MAWILE,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.SWABLU,A.ALTARIA,A.ABSOL,A.JIRACHI,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.CHERRIM,A.BUNEARY,A.LOPUNNY,A.GLAMEOW,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.TOGEKISS,A.UXIE,A.MESPRIT,A.AZELF,A.SHAYMIN,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.WHIMSICOTT,A.MINCCINO,A.CINCCINO,A.DEERLING,A.SAWSBUCK,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.MELOETTA,A.SKIDDO,A.GOGOAT,A.ESPURR,A.MEOWSTIC,A.SWIRLIX,A.SLURPUFF,A.SKRELP,A.DRAGALGE,A.TYRUNT,A.TYRANTRUM,A.SYLVEON,A.DEDENNE,A.KLEFKI,A.XERNEAS,A.DIANCIE,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.KOMALA,A.MIMIKYU,A.DRAMPA,A.TAPU_LELE,A.TAPU_FINI,A.MAGEARNA,A.ZERAORA,A.NICKIT,A.THIEVUL,A.YAMPER,A.BOLTUND,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.ALCREMIE,A.FROSMOTH,A.INDEEDEE,A.CUFANT,A.COPPERAJAH,A.ZACIAN,A.ZAMAZENTA,A.URSALUNA,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.LECHONK,A.OINKOLOGNE,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.GREAT_TUSK,A.SCREAM_TAIL,A.IRON_BUNDLE,A.IRON_HANDS,A.FEZANDIPITI,A.OGERPON,A.ALOLA_RAICHU,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_WEEZING,A.HISUI_TYPHLOSION],[E.CONFIDE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.BUTTERFREE,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.BEAUTIFLY,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.PYUKUMUKU,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.BLACEPHALON,A.ZERAORA,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE],[E.MYSTICAL_FIRE]:[A.CHARIZARD,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.PONYTA,A.RAPIDASH,A.MR_MIME,A.FLAREON,A.MOLTRES,A.MEW,A.TOGEPI,A.TOGETIC,A.HO_OH,A.RALTS,A.GARDEVOIR,A.LATIAS,A.LATIOS,A.MISMAGIUS,A.MAGMORTAR,A.TOGEKISS,A.VICTINI,A.DARMANITAN,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.VOLCARONA,A.RESHIRAM,A.DELPHOX,A.SYLVEON,A.PUMPKABOO,A.GOURGEIST,A.DIANCIE,A.SOLGALEO,A.BLACEPHALON,A.CENTISKORCH,A.HATENNA,A.HATTREM,A.HATTERENE,A.ALCREMIE,A.INDEEDEE,A.ETERNATUS,A.ENAMORUS,A.ARMAROUGE,A.FLUTTER_MANE,A.GALAR_PONYTA,A.GALAR_RAPIDASH],[E.EERIE_IMPULSE]:[A.PIKACHU,A.RAICHU,A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.JOLTEON,A.PORYGON,A.ZAPDOS,A.MEW,A.LANTURN,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.WOOPER,A.QUAGSIRE,A.PORYGON2,A.RAIKOU,A.ELECTRIKE,A.MANECTRIC,A.BALTOY,A.CLAYDOL,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.MAGNEZONE,A.PORYGON_Z,A.ROTOM,A.EMOLGA,A.EELEKTRIK,A.EELEKTROSS,A.STUNFISK,A.THUNDURUS,A.HELIOLISK,A.DEDENNE,A.CHARJABUG,A.VIKAVOLT,A.TOGEDEMARU,A.TAPU_KOKO,A.XURKITREE,A.MAGEARNA,A.BOLTUND,A.TOXTRICITY,A.MORPEKO,A.REGIELEKI,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.SANDY_SHOCKS,A.IRON_THORNS,A.MIRAIDON,A.RAGING_BOLT,A.ALOLA_RAICHU],[E.VENOM_DRENCH]:[A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.ZUBAT,A.GOLBAT,A.TENTACRUEL,A.KOFFING,A.WEEZING,A.MEW,A.CROBAT,A.QWILFISH,A.ROSERADE,A.STUNKY,A.SKUNTANK,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WOOBAT,A.SWOOBAT,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.TRUBBISH,A.GARBODOR,A.ACCELGOR,A.SKRELP,A.DRAGALGE,A.PHANTUMP,A.TREVENANT,A.MAREANIE,A.TOXAPEX,A.SALANDIT,A.SALAZZLE,A.PYUKUMUKU,A.NIHILEGO,A.POIPOLE,A.NAGANADEL,A.PINCURCHIN,A.ETERNATUS,A.GALAR_WEEZING,A.GALAR_SLOWKING,[A.TOXTRICITY,"low-key"]],[E.ELECTRIC_TERRAIN]:[A.PIKACHU,A.RAICHU,A.MAGNEMITE,A.MAGNETON,A.VOLTORB,A.ELECTRODE,A.CHANSEY,A.JOLTEON,A.ZAPDOS,A.MEW,A.PICHU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BLISSEY,A.RAIKOU,A.MANECTRIC,A.SHINX,A.LUXIO,A.LUXRAY,A.PACHIRISU,A.MAGNEZONE,A.ELECTIVIRE,A.ROTOM,A.ARCEUS,A.KLINKLANG,A.EELEKTRIK,A.EELEKTROSS,A.STUNFISK,A.THUNDURUS,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.TOGEDEMARU,A.TAPU_KOKO,A.XURKITREE,A.ZERAORA,A.MELMETAL,A.BOLTUND,A.TOXTRICITY,A.PINCURCHIN,A.MORPEKO,A.REGIELEKI,A.PAWMI,A.PAWMO,A.PAWMOT,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.IRON_VALIANT,A.MIRAIDON,A.IRON_LEAVES,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.ALOLA_RAICHU,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.HISUI_VOLTORB,A.HISUI_ELECTRODE],[E.DAZZLING_GLEAM]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.ABRA,A.KADABRA,A.ALAKAZAM,A.TENTACOOL,A.TENTACRUEL,A.GASTLY,A.HAUNTER,A.GENGAR,A.DROWZEE,A.HYPNO,A.CHANSEY,A.STARYU,A.STARMIE,A.MR_MIME,A.MEW,A.CHINCHOU,A.LANTURN,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.SUNFLORA,A.ESPEON,A.MISDREAVUS,A.GIRAFARIG,A.SNUBBULL,A.GRANBULL,A.BLISSEY,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.NOSEPASS,A.SABLEYE,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.SPOINK,A.GRUMPIG,A.SWABLU,A.ALTARIA,A.BALTOY,A.CLAYDOL,A.SHUPPET,A.BANETTE,A.CHIMECHO,A.JIRACHI,A.BUDEW,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.MISMAGIUS,A.CHINGLING,A.MIME_JR,A.FINNEON,A.LUMINEON,A.TOGEKISS,A.GALLADE,A.PROBOPASS,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.MUNNA,A.MUSHARNA,A.AUDINO,A.COTTONEE,A.WHIMSICOTT,A.SIGILYPH,A.MINCCINO,A.CINCCINO,A.FRILLISH,A.JELLICENT,A.MELOETTA,A.DELPHOX,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.SYLVEON,A.DEDENNE,A.CARBINK,A.KLEFKI,A.XERNEAS,A.DIANCIE,A.PRIMARINA,A.CUTIEFLY,A.RIBOMBEE,A.MORELULL,A.SHIINOTIC,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.MINIOR,A.MIMIKYU,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.LUNALA,A.NIHILEGO,A.XURKITREE,A.MAGEARNA,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.MR_RIME,A.MILCERY,A.ALCREMIE,A.FROSMOTH,A.INDEEDEE,A.ZACIAN,A.ZAMAZENTA,A.ENAMORUS,A.FIDOUGH,A.DACHSBUN,A.ARBOLIVA,A.TOEDSCOOL,A.TOEDSCRUEL,A.RABSCA,A.ESPATHRA,A.GLIMMET,A.GLIMMORA,A.FARIGIRAF,A.SCREAM_TAIL,A.FLUTTER_MANE,A.IRON_MOTH,A.GHOLDENGO,A.IRON_VALIANT,A.MIRAIDON,A.FEZANDIPITI,A.TERAPAGOS,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ETERNAL_FLOETTE,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.HISUI_BRAVIARY],[E.INFESTATION]:[A.BUTTERFREE,A.BEEDRILL,A.EKANS,A.ARBOK,A.ODDISH,A.GLOOM,A.VILEPLUME,A.VENONAT,A.VENOMOTH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GRIMER,A.MUK,A.GASTLY,A.HAUNTER,A.GENGAR,A.EXEGGCUTE,A.EXEGGUTOR,A.KOFFING,A.WEEZING,A.TANGELA,A.MR_MIME,A.MEW,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.WOOPER,A.QUAGSIRE,A.SHUCKLE,A.SLUGMA,A.MAGCARGO,A.BEAUTIFLY,A.DUSTOX,A.SURSKIT,A.MASQUERAIN,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.SEVIPER,A.LILEEP,A.CRADILY,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.HUNTAIL,A.GOREBYSS,A.KRICKETUNE,A.WORMADAM,A.MOTHIM,A.VESPIQUEN,A.SHELLOS,A.GASTRODON,A.MIME_JR,A.SPIRITOMB,A.SKORUPI,A.DRAPION,A.CARNIVINE,A.TANGROWTH,A.DUSKNOIR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.YAMASK,A.COFAGRIGUS,A.TRUBBISH,A.GARBODOR,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.KARRABLAST,A.ESCAVALIER,A.JOLTIK,A.GALVANTULA,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.DURANT,A.GENESECT,A.VIVILLON,A.PANGORO,A.BINACLE,A.BARBARACLE,A.GOOMY,A.SLIGGOO,A.GOODRA,A.CUTIEFLY,A.RIBOMBEE,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.SANDYGAST,A.PALOSSAND,A.MIMIKYU,A.STAKATAKA,A.BLIPBUG,A.FROSMOTH,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.BRAMBLIN,A.BRAMBLEGHAST,A.DIPPLIN,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR],[E.POWER_UP_PUNCH]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.NIDOQUEEN,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.POLIWHIRL,A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.GRIMER,A.MUK,A.GENGAR,A.DROWZEE,A.HYPNO,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.RHYDON,A.CHANSEY,A.KANGASKHAN,A.MR_MIME,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.LEDYBA,A.LEDIAN,A.FLAAFFY,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.SNUBBULL,A.GRANBULL,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.DELIBIRD,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.COMBUSKEN,A.BLAZIKEN,A.MARSHTOMP,A.SWAMPERT,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.SABLEYE,A.MAWILE,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.VOLBEAT,A.ILLUMISE,A.GULPIN,A.SWALOT,A.GRUMPIG,A.SPINDA,A.FLYGON,A.CACNEA,A.CACTURNE,A.ZANGOOSE,A.KECLEON,A.DUSCLOPS,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.JIRACHI,A.DEOXYS,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.KRICKETUNE,A.CRANIDOS,A.RAMPARDOS,A.BUIZEL,A.FLOATZEL,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.LICKILICKY,A.RHYPERIOR,A.ELECTIVIRE,A.MAGMORTAR,A.GALLADE,A.DUSKNOIR,A.UXIE,A.MESPRIT,A.AZELF,A.REGIGIGAS,A.DARKRAI,A.VICTINI,A.PIGNITE,A.EMBOAR,A.WATCHOG,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SAWK,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.GOTHITELLE,A.REUNICLUS,A.EELEKTROSS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.HEATMOR,A.MELOETTA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.PANCHAM,A.PANGORO,A.MEOWSTIC,A.BINACLE,A.BARBARACLE,A.HAWLUCHA,A.PHANTUMP,A.TREVENANT,A.HOOPA,A.CRABRAWLER,A.CRABOMINABLE,A.BUZZWOLE,A.ZERAORA,A.TOXEL,A.TOXTRICITY,A.CLOBBOPUS,A.GRAPPLOCT,A.GRIMMSNARL,A.URSALUNA,A.ANNIHILAPE,A.KINGAMBIT,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_MAROWAK,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN],[E.DARKEST_LARIAT]:[A.POLIWRATH,A.MACHAMP,A.SNORLAX,A.MEW,A.SWAMPERT,A.ELECTIVIRE,A.DUSKNOIR,A.REGIGIGAS,A.KROOKODILE,A.GOLURK,A.PANGORO,A.INCINEROAR,A.BEWEAR,A.TAPU_BULU,A.BUZZWOLE,A.MELMETAL,A.RILLABOOM,A.GRIMMSNARL,A.URSHIFU,A.ZARUDE],[E.HIGH_HORSEPOWER]:[A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.DUGTRIO,A.POLIWRATH,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.ONIX,A.KINGLER,A.RHYHORN,A.RHYDON,A.PINSIR,A.TAUROS,A.SNORLAX,A.MEW,A.SUDOWOODO,A.QUAGSIRE,A.GIRAFARIG,A.GLIGAR,A.STEELIX,A.HERACROSS,A.URSARING,A.SLUGMA,A.SWINUB,A.PILOSWINE,A.PHANPY,A.DONPHAN,A.MILTANK,A.PUPITAR,A.TYRANITAR,A.SWAMPERT,A.SLAKING,A.NOSEPASS,A.AGGRON,A.NUMEL,A.CAMERUPT,A.BARBOACH,A.WHISCASH,A.GROUDON,A.TORTERRA,A.HIPPOPOTAS,A.HIPPOWDON,A.RHYPERIOR,A.GLISCOR,A.MAMOSWINE,A.PROBOPASS,A.REGIGIGAS,A.PIGNITE,A.EMBOAR,A.ZEBSTRIKA,A.DRILBUR,A.EXCADRILL,A.GURDURR,A.CONKELDURR,A.KROOKODILE,A.SAWSBUCK,A.GOLURK,A.BOUFFALANT,A.TERRAKION,A.CHESNAUGHT,A.DIGGERSBY,A.GOGOAT,A.TYRANTRUM,A.AVALUGG,A.ZYGARDE,A.MUDBRAY,A.MUDSDALE,A.BEWEAR,A.TAPU_BULU,A.BUZZWOLE,A.GUZZLORD,A.STAKATAKA,A.MELMETAL,A.RILLABOOM,A.GREEDENT,A.DREDNAW,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.SANDACONDA,A.FALINKS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.GLASTRIER,A.WYRDEER,A.URSALUNA,A.OINKOLOGNE,A.KLAWF,A.REVAVROOM,A.ORTHWORM,A.CETODDLE,A.CETITAN,A.CLODSIRE,A.FARIGIRAF,A.GREAT_TUSK,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_THORNS,A.BAXCALIBUR,A.OKIDOGI,A.ALOLA_DUGTRIO,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.GALAR_PONYTA,A.GALAR_RAPIDASH,[A.CALYREX,"ice"],A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.BLOODMOON_URSALUNA],[E.SOLAR_BLADE]:[A.PONYTA,A.RAPIDASH,A.FARFETCHD,A.MEW,A.CELEBI,A.GROVYLE,A.SCEPTILE,A.NUZLEAF,A.SHIFTRY,A.TROPIUS,A.CHERRIM,A.TANGROWTH,A.LEAFEON,A.GALLADE,A.LILLIGANT,A.CRUSTLE,A.VIRIZION,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.DECIDUEYE,A.LURANTIS,A.TSAREENA,A.DHELMISE,A.KARTANA,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SIRFETCHD,A.ZACIAN,A.ZARUDE,A.CALYREX,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.CERULEDGE,A.WO_CHIEN,A.IRON_LEAVES,A.OGERPON,A.IRON_BOULDER,A.IRON_CROWN,A.GALAR_FARFETCHD,A.HISUI_LILLIGANT],[E.THROAT_CHOP]:[A.BEEDRILL,A.RATICATE,A.FEAROW,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.PARASECT,A.MEOWTH,A.PERSIAN,A.PRIMEAPE,A.POLIWRATH,A.MACHAMP,A.RAPIDASH,A.FARFETCHD,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.GOLDEEN,A.SEAKING,A.PINSIR,A.TAUROS,A.MEW,A.TYPHLOSION,A.ARIADOS,A.UMBREON,A.GLIGAR,A.QWILFISH,A.HERACROSS,A.SNEASEL,A.URSARING,A.CORSOLA,A.HOUNDOOM,A.STANTLER,A.RAIKOU,A.SCEPTILE,A.MIGHTYENA,A.LINOONE,A.SHIFTRY,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.HARIYAMA,A.VIBRAVA,A.FLYGON,A.ZANGOOSE,A.SEVIPER,A.BANETTE,A.ABSOL,A.DEOXYS,A.EMPOLEON,A.KRICKETUNE,A.LUXRAY,A.PURUGLY,A.STUNKY,A.SKUNTANK,A.DRAPION,A.TOXICROAK,A.CARNIVINE,A.WEAVILE,A.GLISCOR,A.GALLADE,A.DARKRAI,A.LIEPARD,A.SIMISAGE,A.SIMISEAR,A.SIMIPOUR,A.GIGALITH,A.AUDINO,A.SAWK,A.LEAVANNY,A.SCOLIPEDE,A.KROOKODILE,A.MARACTUS,A.SCRAFTY,A.ZOROARK,A.GALVANTULA,A.EELEKTRIK,A.EELEKTROSS,A.BEARTIC,A.BISHARP,A.BOUFFALANT,A.HEATMOR,A.HYDREIGON,A.PANGORO,A.MALAMAR,A.HAWLUCHA,A.HOOPA,A.INCINEROAR,A.GOLISOPOD,A.PHEROMOSA,A.MARSHADOW,A.NAGANADEL,A.ZERAORA,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXTRICITY,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.FALINKS,A.PINCURCHIN,A.ZARUDE,A.GLASTRIER,A.TAROUNTULA,A.SPIDOPS,A.LOKIX,A.WIGLETT,A.WUGTRIO,A.FLAMIGO,A.CHIEN_PAO,A.TING_LU,A.ROARING_MOON,A.OGERPON,A.IRON_BOULDER,A.ALOLA_RATICATE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_RAPIDASH,A.GALAR_FARFETCHD,A.GALAR_ZAPDOS,A.GALAR_CORSOLA,A.GALAR_LINOONE,[A.URSHIFU,"single-strike"],[A.CALYREX,"ice"]],[E.POLLEN_PUFF]:[A.BUTTERFREE,A.GLOOM,A.VILEPLUME,A.MEW,A.BELLOSSOM,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.CELEBI,A.VESPIQUEN,A.CHERUBI,A.CHERRIM,A.LEAVANNY,A.PETILIL,A.LILLIGANT,A.FOONGUS,A.AMOONGUSS,A.VIVILLON,A.FLABEBE,A.FLOETTE,A.FLORGES,A.CUTIEFLY,A.RIBOMBEE,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.COMFEY,A.GOSSIFLEUR,A.ELDEGOSS,A.CALYREX,A.MEOWSCARADA,A.ARBOLIVA,A.BRUTE_BONNET,A.WO_CHIEN,A.DIPPLIN,A.HYDRAPPLE,A.ETERNAL_FLOETTE,A.HISUI_LILLIGANT],[E.PSYCHIC_TERRAIN]:[A.ABRA,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.ESPEON,A.SLOWKING,A.GIRAFARIG,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.LUNATONE,A.SOLROCK,A.BALTOY,A.CLAYDOL,A.BRONZOR,A.BRONZONG,A.MIME_JR,A.GALLADE,A.CRESSELIA,A.ARCEUS,A.MUSHARNA,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.BEHEEYEM,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.MEOWSTIC,A.HOOPA,A.ORANGURU,A.BRUXISH,A.TAPU_LELE,A.DOTTLER,A.ORBEETLE,A.HATENNA,A.HATTREM,A.HATTERENE,A.MR_RIME,A.INDEEDEE,A.CALYREX,A.ARMAROUGE,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.VELUZA,A.FARIGIRAF,A.SCREAM_TAIL,A.IRON_VALIANT,A.IRON_LEAVES,A.MUNKIDORI,A.ALOLA_RAICHU,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_SLOWKING,A.HISUI_BRAVIARY],[E.LUNGE]:[A.VENONAT,A.VENOMOTH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.DODUO,A.DODRIO,A.MUK,A.SCYTHER,A.MEW,A.SPINARAK,A.ARIADOS,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.YANMA,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.SCIZOR,A.HERACROSS,A.STANTLER,A.SURSKIT,A.MASQUERAIN,A.VOLBEAT,A.SPOINK,A.GRUMPIG,A.CACTURNE,A.KRICKETOT,A.KRICKETUNE,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.YANMEGA,A.GLISCOR,A.HEATRAN,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.JOLTIK,A.EELEKTRIK,A.EELEKTROSS,A.LARVESTA,A.VOLCARONA,A.HAWLUCHA,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.RIBOMBEE,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.BUZZWOLE,A.PHEROMOSA,A.SIZZLIPEDE,A.CENTISKORCH,A.FALINKS,A.SNOM,A.FROSMOTH,A.WYRDEER,A.KLEAVOR,A.TAROUNTULA,A.SPIDOPS,A.LOKIX,A.TOEDSCOOL,A.TOEDSCRUEL,A.RELLOR,A.RABSCA,A.FLAMIGO,A.TATSUGIRI,A.DUDUNSPARCE,A.SLITHER_WING,A.IRON_MOTH],[E.SPEED_SWAP]:[A.RAICHU,A.ABRA,A.KADABRA,A.ALAKAZAM,A.PORYGON,A.MEWTWO,A.MEW,A.PORYGON2,A.BRONZOR,A.BRONZONG,A.PORYGON_Z,A.VICTINI,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.CUTIEFLY,A.RIBOMBEE,A.TAPU_LELE,A.PHEROMOSA,A.MAGEARNA,A.CALYREX,A.RABSCA,A.ALOLA_RAICHU],[E.SMART_STRIKE]:[A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.RAPIDASH,A.SEEL,A.DEWGONG,A.CLOYSTER,A.RHYHORN,A.RHYDON,A.GOLDEEN,A.SEAKING,A.TAUROS,A.LAPRAS,A.MEW,A.ARIADOS,A.TOGETIC,A.FORRETRESS,A.DUNSPARCE,A.HERACROSS,A.DONPHAN,A.AGGRON,A.RHYPERIOR,A.TOGEKISS,A.SAMUROTT,A.EXCADRILL,A.SCOLIPEDE,A.SAWSBUCK,A.ESCAVALIER,A.BOUFFALANT,A.COBALION,A.TERRAKION,A.VIRIZION,A.THUNDURUS,A.KELDEO,A.XERNEAS,A.TAPU_BULU,A.TAPU_FINI,A.CELESTEELA,A.KARTANA,A.NECROZMA,A.NAGANADEL,A.DREDNAW,A.FALINKS,A.GLASTRIER,A.OVERQWIL,A.DUDUNSPARCE,A.GREAT_TUSK,A.IRON_TREADS,A.IRON_LEAVES,A.GOUGING_FIRE,A.IRON_CROWN,A.GALAR_RAPIDASH,[A.CALYREX,"ice"],A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_SAMUROTT,A.PALDEA_TAUROS],[E.BRUTAL_SWING]:[A.CHARIZARD,A.BEEDRILL,A.EKANS,A.ARBOK,A.RAICHU,A.TENTACOOL,A.TENTACRUEL,A.FARFETCHD,A.ONIX,A.KINGLER,A.CUBONE,A.MAROWAK,A.LICKITUNG,A.RHYDON,A.SCYTHER,A.PINSIR,A.GYARADOS,A.AERODACTYL,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.SENTRET,A.FURRET,A.AMPHAROS,A.MARILL,A.AZUMARILL,A.STEELIX,A.SCIZOR,A.HERACROSS,A.DELIBIRD,A.DONPHAN,A.HITMONTOP,A.TYRANITAR,A.SCEPTILE,A.SHIFTRY,A.AZURILL,A.MAWILE,A.AGGRON,A.FLYGON,A.SEVIPER,A.ARMALDO,A.MILOTIC,A.TROPIUS,A.ABSOL,A.SALAMENCE,A.METAGROSS,A.GROUDON,A.RAYQUAZA,A.DEOXYS,A.DRIFLOON,A.DRIFBLIM,A.LOPUNNY,A.GARCHOMP,A.DRAPION,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.GLISCOR,A.GIRATINA,A.SERPERIOR,A.EXCADRILL,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.KROKOROK,A.KROOKODILE,A.ESCAVALIER,A.FERROTHORN,A.HAXORUS,A.MIENSHAO,A.HEATMOR,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.GRENINJA,A.DIGGERSBY,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.MALAMAR,A.BARBARACLE,A.HELIOLISK,A.TYRANTRUM,A.GOODRA,A.TREVENANT,A.GOURGEIST,A.INCINEROAR,A.CRABRAWLER,A.CRABOMINABLE,A.STUFFUL,A.BEWEAR,A.ORANGURU,A.PASSIMIAN,A.TURTONATOR,A.DHELMISE,A.HAKAMO_O,A.KOMMO_O,A.TAPU_BULU,A.NIHILEGO,A.XURKITREE,A.CELESTEELA,A.GUZZLORD,A.NECROZMA,A.STAKATAKA,A.ZERAORA,A.MELMETAL,A.RILLABOOM,A.SKWOVET,A.GREEDENT,A.SILICOBRA,A.SANDACONDA,A.SIZZLIPEDE,A.CENTISKORCH,A.GRAPPLOCT,A.HATTREM,A.HATTERENE,A.SIRFETCHD,A.RUNERIGUS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.DRACOVISH,A.ZACIAN,A.ETERNATUS,A.ZARUDE,A.KLEAVOR,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.OKIDOGI,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_YAMASK],[E.AURORA_VEIL]:[A.JYNX,A.ARTICUNO,A.MEW,A.DELIBIRD,A.SMOOCHUM,A.REGICE,A.ABOMASNOW,A.GLACEON,A.FROSLASS,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.CRYOGONAL,A.AMAURA,A.AURORUS,A.BERGMITE,A.AVALUGG,A.EISCUE,A.ARCTOVISH,A.IRON_BUNDLE,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.HISUI_AVALUGG],[E.PSYCHIC_FANGS]:[A.EKANS,A.ARBOK,A.GROWLITHE,A.ARCANINE,A.AERODACTYL,A.MEW,A.CROCONAW,A.FERALIGATR,A.ESPEON,A.GIRAFARIG,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.HOUNDOUR,A.HOUNDOOM,A.POOCHYENA,A.MIGHTYENA,A.MAWILE,A.ELECTRIKE,A.MANECTRIC,A.CARVANHA,A.SHARPEDO,A.SEVIPER,A.SALAMENCE,A.METAGROSS,A.SHINX,A.LUXIO,A.LUXRAY,A.GLISCOR,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.SWOOBAT,A.BASCULIN,A.LITLEO,A.PYROAR,A.TYRUNT,A.TYRANTRUM,A.YUNGOOS,A.GUMSHOOS,A.ROCKRUFF,A.LYCANROC,A.SILVALLY,A.BRUXISH,A.SOLGALEO,A.NECROZMA,A.GREEDENT,A.BOLTUND,A.ARROKUDA,A.BARRASKEWDA,A.MORPEKO,A.DRACOVISH,A.ARCTOVISH,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.BASCULEGION,A.FIDOUGH,A.DACHSBUN,A.MASCHIFF,A.MABOSSTIFF,A.GREAVARD,A.HOUNDSTONE,A.VELUZA,A.FARIGIRAF,A.SCREAM_TAIL,A.CHIEN_PAO,A.OKIDOGI,A.GOUGING_FIRE,A.HISUI_GROWLITHE,A.HISUI_ARCANINE],[E.STOMPING_TANTRUM]:[A.VENUSAUR,A.RATICATE,A.ARBOK,A.SANDSHREW,A.SANDSLASH,A.NIDORINA,A.NIDOQUEEN,A.NIDORINO,A.NIDOKING,A.DIGLETT,A.DUGTRIO,A.MANKEY,A.PRIMEAPE,A.MACHOKE,A.MACHAMP,A.GEODUDE,A.GRAVELER,A.GOLEM,A.DODRIO,A.ONIX,A.KINGLER,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TAUROS,A.SNORLAX,A.DRAGONITE,A.MEWTWO,A.MEW,A.MEGANIUM,A.TYPHLOSION,A.ARIADOS,A.AMPHAROS,A.SUDOWOODO,A.WOOPER,A.QUAGSIRE,A.GIRAFARIG,A.DUNSPARCE,A.STEELIX,A.GRANBULL,A.URSARING,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.PHANPY,A.DONPHAN,A.MILTANK,A.BLISSEY,A.ENTEI,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.SWAMPERT,A.LINOONE,A.VIGOROTH,A.SLAKING,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.DELCATTY,A.LAIRON,A.AGGRON,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.GRUMPIG,A.SPINDA,A.CACTURNE,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.ARMALDO,A.TROPIUS,A.WALREIN,A.RELICANTH,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.GROUDON,A.DEOXYS,A.TORTERRA,A.BIBAREL,A.RAMPARDOS,A.BASTIODON,A.GASTRODON,A.PURUGLY,A.BRONZOR,A.BRONZONG,A.BONSLY,A.GARCHOMP,A.MUNCHLAX,A.HIPPOPOTAS,A.HIPPOWDON,A.DRAPION,A.ABOMASNOW,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.MAMOSWINE,A.PROBOPASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.ARCEUS,A.TEPIG,A.PIGNITE,A.EMBOAR,A.WATCHOG,A.STOUTLAND,A.BOLDORE,A.GIGALITH,A.EXCADRILL,A.AUDINO,A.CONKELDURR,A.SEISMITOAD,A.THROH,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.CRUSTLE,A.GARBODOR,A.SAWSBUCK,A.AMOONGUSS,A.EELEKTROSS,A.AXEW,A.FRAXURE,A.HAXORUS,A.STUNFISK,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.BOUFFALANT,A.HEATMOR,A.DURANT,A.ZWEILOUS,A.HYDREIGON,A.TERRAKION,A.LANDORUS,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.DIGGERSBY,A.SKIDDO,A.GOGOAT,A.PANGORO,A.TYRUNT,A.TYRANTRUM,A.CARBINK,A.GOODRA,A.AVALUGG,A.ZYGARDE,A.VOLCANION,A.INCINEROAR,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.ROCKRUFF,A.LYCANROC,A.MUDBRAY,A.MUDSDALE,A.STUFFUL,A.BEWEAR,A.KOMALA,A.TURTONATOR,A.DRAMPA,A.KOMMO_O,A.BUZZWOLE,A.CELESTEELA,A.GUZZLORD,A.STAKATAKA,A.RILLABOOM,A.GREEDENT,A.CHEWTLE,A.DREDNAW,A.APPLETUN,A.GRAPPLOCT,A.GRIMMSNARL,A.OBSTAGOON,A.CURSOLA,A.MR_RIME,A.STONJOURNER,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.DURALUDON,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,A.URSALUNA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.OINKOLOGNE,A.FIDOUGH,A.DACHSBUN,A.NACLI,A.NACLSTACK,A.GARGANACL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.WIGLETT,A.WUGTRIO,A.ORTHWORM,A.GREAVARD,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.DONDOZO,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.BAXCALIBUR,A.TING_LU,A.ROARING_MOON,A.KORAIDON,A.OKIDOGI,A.OGERPON,A.GOUGING_FIRE,A.RAGING_BOLT,A.ALOLA_RATICATE,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.GALAR_MR_MIME,A.GALAR_ZAPDOS,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_LINOONE,A.GALAR_STUNFISK,[A.CALYREX,"ice","shadow"],A.HISUI_TYPHLOSION,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.LIQUIDATION]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.KRABBY,A.KINGLER,A.HORSEA,A.SEADRA,A.LAPRAS,A.VAPOREON,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.MARILL,A.AZUMARILL,A.POLITOED,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.QWILFISH,A.CORSOLA,A.OCTILLERY,A.MANTINE,A.KINGDRA,A.SUICUNE,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.CARVANHA,A.SHARPEDO,A.WAILORD,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.ARMALDO,A.WALREIN,A.RELICANTH,A.LUVDISC,A.LATIAS,A.LATIOS,A.KYOGRE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BIBAREL,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.GARCHOMP,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.SEISMITOAD,A.BASCULIN,A.TIRTOUGA,A.CARRACOSTA,A.DUCKLETT,A.SWANNA,A.ALOMOMOLA,A.EELEKTROSS,A.CUBCHOO,A.BEARTIC,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.VOLCANION,A.PRIMARINA,A.CRABRAWLER,A.CRABOMINABLE,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.GOLISOPOD,A.BRUXISH,A.DHELMISE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.CLOBBOPUS,A.GRAPPLOCT,A.CURSOLA,A.PINCURCHIN,A.EISCUE,A.DRACOVISH,A.ARCTOVISH,A.BASCULEGION,A.OVERQWIL,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.CLODSIRE,A.IRON_VALIANT,A.WALKING_WAKE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,A.GALAR_CORSOLA,[A.URSHIFU,"rapid-strike"],A.HISUI_QWILFISH,A.HISUI_SAMUROTT,[A.PALDEA_TAUROS,"aqua"],A.PALDEA_WOOPER],[E.BODY_PRESS]:[A.BLASTOISE,A.NIDOQUEEN,A.NIDOKING,A.JIGGLYPUFF,A.WIGGLYTUFF,A.GRAVELER,A.GOLEM,A.SLOWBRO,A.ONIX,A.HYPNO,A.LICKITUNG,A.RHYHORN,A.RHYDON,A.LAPRAS,A.SNORLAX,A.DRAGONITE,A.MEW,A.MEGANIUM,A.SUDOWOODO,A.QUAGSIRE,A.FORRETRESS,A.STEELIX,A.MANTINE,A.SKARMORY,A.DONPHAN,A.MILTANK,A.TYRANITAR,A.SWAMPERT,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.NOSEPASS,A.ARON,A.LAIRON,A.AGGRON,A.SWALOT,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.GRUMPIG,A.CLAYDOL,A.TROPIUS,A.WALREIN,A.RELICANTH,A.METAGROSS,A.REGIROCK,A.REGISTEEL,A.GROUDON,A.TORTERRA,A.RAMPARDOS,A.BASTIODON,A.BRONZONG,A.HIPPOPOTAS,A.HIPPOWDON,A.ABOMASNOW,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.MAMOSWINE,A.PROBOPASS,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.ARCEUS,A.EMBOAR,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.DARMANITAN,A.CRUSTLE,A.COFAGRIGUS,A.GARBODOR,A.FERROTHORN,A.EELEKTROSS,A.CUBCHOO,A.BEARTIC,A.GOLURK,A.COBALION,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.CHESNAUGHT,A.HAWLUCHA,A.CARBINK,A.GOODRA,A.AVALUGG,A.DIANCIE,A.VOLCANION,A.CRABOMINABLE,A.MUDSDALE,A.BEWEAR,A.TURTONATOR,A.DHELMISE,A.KOMMO_O,A.GUZZLORD,A.STAKATAKA,A.MELMETAL,A.RILLABOOM,A.GREEDENT,A.CORVIKNIGHT,A.DOTTLER,A.ORBEETLE,A.DUBWOOL,A.DREDNAW,A.CARKOL,A.COALOSSAL,A.APPLETUN,A.SANDACONDA,A.GRIMMSNARL,A.OBSTAGOON,A.RUNERIGUS,A.FALINKS,A.STONJOURNER,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.ZAMAZENTA,A.URSHIFU,A.GLASTRIER,[A.CALYREX,"","ice"],A.URSALUNA,A.OINKOLOGNE,A.PAWMOT,A.DACHSBUN,A.NACLSTACK,A.GARGANACL,A.ORTHWORM,A.HOUNDSTONE,A.CETODDLE,A.CETITAN,A.DONDOZO,A.CLODSIRE,A.DUDUNSPARCE,A.GREAT_TUSK,A.BRUTE_BONNET,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.BAXCALIBUR,A.WO_CHIEN,A.TING_LU,A.ROARING_MOON,A.KORAIDON,A.OKIDOGI,A.ARCHALUDON,A.HYDRAPPLE,A.RAGING_BOLT,A.TERAPAGOS,A.ALOLA_GOLEM,A.GALAR_SLOWBRO,A.GALAR_LINOONE,A.GALAR_DARMANITAN,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.BREAKING_SWIPE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.ARBOK,A.ONIX,A.RHYDON,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.AMPHAROS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.KINGDRA,A.TYRANITAR,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.FLYGON,A.ALTARIA,A.SEVIPER,A.MILOTIC,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.RAMPARDOS,A.GABITE,A.GARCHOMP,A.RHYPERIOR,A.GLISCOR,A.DIALGA,A.PALKIA,A.GIRATINA,A.SERPERIOR,A.KROKOROK,A.KROOKODILE,A.AXEW,A.FRAXURE,A.HAXORUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.HELIOLISK,A.TYRANTRUM,A.GOODRA,A.NOIVERN,A.ZYGARDE,A.SALAZZLE,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.NECROZMA,A.NAGANADEL,A.INTELEON,A.DRACOZOLT,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.REGIDRAGO,A.CYCLIZAR,A.DUDUNSPARCE,A.IRON_THORNS,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.WALKING_WAKE,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.ALOLA_EXEGGUTOR,A.HISUI_GOODRA],[E.STEEL_BEAM]:[A.MAGNEMITE,A.MAGNETON,A.MEW,A.FORRETRESS,A.STEELIX,A.SCIZOR,A.SKARMORY,A.NOSEPASS,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.BELDUM,A.METANG,A.METAGROSS,A.REGISTEEL,A.JIRACHI,A.EMPOLEON,A.BRONZOR,A.BRONZONG,A.LUCARIO,A.MAGNEZONE,A.PROBOPASS,A.DIALGA,A.HEATRAN,A.ARCEUS,A.EXCADRILL,A.ESCAVALIER,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.PAWNIARD,A.BISHARP,A.DURANT,A.COBALION,A.GENESECT,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.KLEFKI,A.SILVALLY,A.TOGEDEMARU,A.SOLGALEO,A.CELESTEELA,A.KARTANA,A.MAGEARNA,A.STAKATAKA,A.MELTAN,A.MELMETAL,A.CORVIKNIGHT,A.PERRSERKER,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.ZACIAN,A.ZAMAZENTA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.VAROOM,A.REVAVROOM,A.ORTHWORM,A.KINGAMBIT,A.IRON_TREADS,A.GHOLDENGO,A.ARCHALUDON,A.IRON_CROWN,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.GALAR_MEOWTH,A.GALAR_STUNFISK,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.EXPANDING_FORCE]:[A.WIGGLYTUFF,A.KADABRA,A.ALAKAZAM,A.SLOWPOKE,A.SLOWBRO,A.DROWZEE,A.HYPNO,A.EXEGGUTOR,A.STARMIE,A.MR_MIME,A.JYNX,A.MEWTWO,A.MEW,A.NATU,A.XATU,A.ESPEON,A.SLOWKING,A.GIRAFARIG,A.CELEBI,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.MEDITITE,A.MEDICHAM,A.SPOINK,A.GRUMPIG,A.BALTOY,A.CLAYDOL,A.CHIMECHO,A.METANG,A.METAGROSS,A.JIRACHI,A.DEOXYS,A.BRONZOR,A.BRONZONG,A.GALLADE,A.UXIE,A.MESPRIT,A.AZELF,A.CRESSELIA,A.VICTINI,A.MUNNA,A.MUSHARNA,A.WOOBAT,A.SWOOBAT,A.DARMANITAN,A.SIGILYPH,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.ELGYEM,A.BEHEEYEM,A.DELPHOX,A.ESPURR,A.MEOWSTIC,A.INKAY,A.MALAMAR,A.HOOPA,A.ORANGURU,A.BRUXISH,A.SOLGALEO,A.LUNALA,A.NECROZMA,A.BLACEPHALON,A.DOTTLER,A.ORBEETLE,A.HATENNA,A.HATTREM,A.HATTERENE,A.MR_RIME,A.INDEEDEE,A.CALYREX,A.WYRDEER,A.ARMAROUGE,A.RABSCA,A.ESPATHRA,A.VELUZA,A.FARIGIRAF,A.SCREAM_TAIL,A.IRON_VALIANT,A.IRON_CROWN,A.ALOLA_RAICHU,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.HISUI_BRAVIARY],[E.STEEL_ROLLER]:[A.SANDSHREW,A.SANDSLASH,A.JIGGLYPUFF,A.WIGGLYTUFF,A.CLOYSTER,A.LICKITUNG,A.SNORLAX,A.MEW,A.MARILL,A.AZUMARILL,A.STEELIX,A.QWILFISH,A.SHUCKLE,A.MILTANK,A.ARON,A.LAIRON,A.AGGRON,A.WAILMER,A.WAILORD,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.METANG,A.METAGROSS,A.REGISTEEL,A.BRONZOR,A.BRONZONG,A.MAGNEZONE,A.LICKILICKY,A.HEATRAN,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.TOGEDEMARU,A.DHELMISE,A.SOLGALEO,A.CELESTEELA,A.GUZZLORD,A.MAGEARNA,A.STAKATAKA,A.MELMETAL,A.CUFANT,A.COPPERAJAH,A.DURALUDON,A.IRON_TREADS,A.ARCHALUDON,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH],[E.SCALE_SHOT]:[A.CHARIZARD,A.EKANS,A.ARBOK,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.GYARADOS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.DUNSPARCE,A.GLIGAR,A.QWILFISH,A.KINGDRA,A.LUGIA,A.SCEPTILE,A.CARVANHA,A.SHARPEDO,A.FLYGON,A.FEEBAS,A.MILOTIC,A.RELICANTH,A.LUVDISC,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.GIBLE,A.GABITE,A.GARCHOMP,A.DIALGA,A.PALKIA,A.BASCULIN,A.KROKOROK,A.KROOKODILE,A.ALOMOMOLA,A.AXEW,A.FRAXURE,A.HAXORUS,A.DRUDDIGON,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.SKRELP,A.DRAGALGE,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.ZYGARDE,A.WISHIWASHI,A.SALANDIT,A.SALAZZLE,A.TURTONATOR,A.DRAMPA,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.NAGANADEL,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.SILICOBRA,A.SANDACONDA,A.ARROKUDA,A.BARRASKEWDA,A.REGIDRAGO,A.BASCULEGION,A.OVERQWIL,A.CYCLIZAR,A.VELUZA,A.DUDUNSPARCE,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.GOUGING_FIRE,A.HISUI_QWILFISH],[E.METEOR_BEAM]:[A.CLEFAIRY,A.CLEFABLE,A.ONIX,A.RHYDON,A.STARMIE,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.MEW,A.AMPHAROS,A.SUDOWOODO,A.STEELIX,A.SHUCKLE,A.CORSOLA,A.NOSEPASS,A.AGGRON,A.LUNATONE,A.SOLROCK,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.RELICANTH,A.METANG,A.METAGROSS,A.REGIROCK,A.REGISTEEL,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.BASTIODON,A.BRONZONG,A.RHYPERIOR,A.PROBOPASS,A.ARCEUS,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.CRUSTLE,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.ELGYEM,A.BEHEEYEM,A.BARBARACLE,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.CARBINK,A.DIANCIE,A.MINIOR,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.CELESTEELA,A.NECROZMA,A.STAKATAKA,A.DREDNAW,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.CURSOLA,A.STONJOURNER,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.ETERNATUS,A.NACLI,A.NACLSTACK,A.GARGANACL,A.ARMAROUGE,A.KLAWF,A.GLIMMET,A.GLIMMORA,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.KORAIDON,A.ARCHALUDON,A.IRON_BOULDER,A.TERAPAGOS,A.ALOLA_GOLEM,A.GALAR_CORSOLA,A.HISUI_AVALUGG],[E.MISTY_EXPLOSION]:[A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEW,A.MARILL,A.AZUMARILL,A.GARDEVOIR,A.MUSHARNA,A.FLORGES,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.SYLVEON,A.CARBINK,A.XERNEAS,A.DIANCIE,A.PRIMARINA,A.MAGEARNA,A.HATTERENE,A.ALCREMIE,A.ENAMORUS,A.SCREAM_TAIL,A.GALAR_WEEZING],[E.GRASSY_GLIDE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.ODDISH,A.GLOOM,A.VILEPLUME,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.EXEGGCUTE,A.EXEGGUTOR,A.TANGELA,A.MEW,A.BELLOSSOM,A.SUNFLORA,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.ROSELIA,A.CACNEA,A.CACTURNE,A.TURTWIG,A.GROTLE,A.TORTERRA,A.BUDEW,A.ROSERADE,A.CHERUBI,A.CHERRIM,A.SNOVER,A.ABOMASNOW,A.TANGROWTH,A.LEAFEON,A.SHAYMIN,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.MARACTUS,A.DEERLING,A.SAWSBUCK,A.VIRIZION,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.SKIDDO,A.GOGOAT,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.FOMANTIS,A.LURANTIS,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.DHELMISE,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.APPLIN,A.FLAPPLE,A.APPLETUN,A.SIRFETCHD,A.ZARUDE,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.CAPSAKID,A.SCOVILLAIN,A.DIPPLIN,A.OGERPON,A.HYDRAPPLE,A.ALOLA_EXEGGUTOR,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.RISING_VOLTAGE]:[A.PIKACHU,A.RAICHU,A.MAGNEMITE,A.MAGNETON,A.ELECTABUZZ,A.JOLTEON,A.ZAPDOS,A.MEW,A.CHINCHOU,A.LANTURN,A.RAIKOU,A.ELECTRIKE,A.MANECTRIC,A.SHINX,A.LUXIO,A.LUXRAY,A.MAGNEZONE,A.ELECTIVIRE,A.ROTOM,A.EMOLGA,A.JOLTIK,A.GALVANTULA,A.KLINK,A.KLANG,A.KLINKLANG,A.THUNDURUS,A.ZEKROM,A.HELIOPTILE,A.HELIOLISK,A.DEDENNE,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.TOGEDEMARU,A.XURKITREE,A.ZERAORA,A.YAMPER,A.BOLTUND,A.TOXTRICITY,A.PINCURCHIN,A.MORPEKO,A.DRACOZOLT,A.ARCTOZOLT,A.REGIELEKI,A.RAGING_BOLT,A.ALOLA_RAICHU],[E.TERRAIN_PULSE]:[A.VENUSAUR,A.BLASTOISE,A.EXEGGUTOR,A.LICKITUNG,A.KANGASKHAN,A.SNORLAX,A.MEW,A.DUNSPARCE,A.EXPLOUD,A.LUCARIO,A.LICKILICKY,A.REGIGIGAS,A.CLAUNCHER,A.CLAWITZER,A.CARBINK,A.XERNEAS,A.DIANCIE,A.ORANGURU,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.INDEEDEE,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.DUDUNSPARCE,A.ALOLA_EXEGGUTOR,A.GALAR_STUNFISK],[E.SKITTER_SMACK]:[A.EKANS,A.ARBOK,A.VENONAT,A.VENOMOTH,A.PERSIAN,A.TENTACRUEL,A.GASTLY,A.HAUNTER,A.GENGAR,A.SCYTHER,A.MEW,A.SPINARAK,A.ARIADOS,A.YANMA,A.DUNSPARCE,A.GLIGAR,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.OCTILLERY,A.SURSKIT,A.MASQUERAIN,A.NINCADA,A.NINJASK,A.SHEDINJA,A.SABLEYE,A.VOLBEAT,A.ILLUMISE,A.CACNEA,A.CACTURNE,A.SEVIPER,A.MILOTIC,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.KRICKETOT,A.KRICKETUNE,A.COMBEE,A.VESPIQUEN,A.SHELLOS,A.GASTRODON,A.SKORUPI,A.DRAPION,A.YANMEGA,A.GLISCOR,A.DUSKNOIR,A.GIRATINA,A.LIEPARD,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DWEBBLE,A.CRUSTLE,A.ZORUA,A.ZOROARK,A.JOLTIK,A.GALVANTULA,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.SHELMET,A.ACCELGOR,A.DURANT,A.LARVESTA,A.VOLCARONA,A.VIVILLON,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.ZYGARDE,A.HOOPA,A.DECIDUEYE,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.WIMPOD,A.GOLISOPOD,A.PHEROMOSA,A.MARSHADOW,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.SILICOBRA,A.SANDACONDA,A.SIZZLIPEDE,A.CENTISKORCH,A.GRAPPLOCT,A.SNOM,A.FROSMOTH,A.KLEAVOR,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.SHROODLE,A.GRAFAIAI,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.RELLOR,A.RABSCA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.DUDUNSPARCE,A.SLITHER_WING,A.ALOLA_PERSIAN,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_SLIGGOO,A.HISUI_GOODRA],[E.BURNING_JEALOUSY]:[A.VULPIX,A.NINETALES,A.MAGMAR,A.FLAREON,A.MOLTRES,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.MISDREAVUS,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.TORKOAL,A.BANETTE,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.MISMAGIUS,A.SKUNTANK,A.SPIRITOMB,A.MAGMORTAR,A.HEATRAN,A.LIEPARD,A.DARMANITAN,A.ZORUA,A.ZOROARK,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.HEATMOR,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.PYROAR,A.TREVENANT,A.INCINEROAR,A.SALANDIT,A.SALAZZLE,A.TURTONATOR,A.MIMIKYU,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.THIEVUL,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.CURSOLA,A.SCOVILLAIN,A.CHI_YU,A.ALOLA_PERSIAN,A.ALOLA_MAROWAK,A.GALAR_DARMANITAN,A.HISUI_TYPHLOSION,A.HISUI_ZORUA,A.HISUI_ZOROARK],[E.LASH_OUT]:[A.EKANS,A.ARBOK,A.MEOWTH,A.PERSIAN,A.MANKEY,A.PRIMEAPE,A.MUK,A.TAUROS,A.GYARADOS,A.MEWTWO,A.MEW,A.UMBREON,A.MURKROW,A.SNEASEL,A.HOUNDOUR,A.HOUNDOOM,A.PUPITAR,A.TYRANITAR,A.POOCHYENA,A.MIGHTYENA,A.NUZLEAF,A.SHIFTRY,A.VIGOROTH,A.SLAKING,A.HARIYAMA,A.SABLEYE,A.NUMEL,A.CAMERUPT,A.CACTURNE,A.SEVIPER,A.CRAWDAUNT,A.SHUPPET,A.BANETTE,A.MONFERNO,A.INFERNAPE,A.EMPOLEON,A.MISMAGIUS,A.HONCHKROW,A.STUNKY,A.SKUNTANK,A.SPIRITOMB,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.DARKRAI,A.PURRLOIN,A.LIEPARD,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARMANITAN,A.SCRAGGY,A.SCRAFTY,A.ARCHEN,A.ARCHEOPS,A.ZORUA,A.ZOROARK,A.LAMPENT,A.CHANDELURE,A.STUNFISK,A.DRUDDIGON,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.VULLABY,A.MANDIBUZZ,A.ZWEILOUS,A.HYDREIGON,A.TORNADUS,A.THUNDURUS,A.PANCHAM,A.PANGORO,A.INKAY,A.MALAMAR,A.TYRUNT,A.TYRANTRUM,A.PHANTUMP,A.TREVENANT,A.YVELTAL,A.HOOPA,A.INCINEROAR,A.MUDSDALE,A.TURTONATOR,A.DRAMPA,A.GUZZLORD,A.NICKIT,A.THIEVUL,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.MORPEKO,A.ZARUDE,A.GLASTRIER,A.SPECTRIER,A.SNEASLER,A.OVERQWIL,A.MEOWSCARADA,A.OINKOLOGNE,A.LOKIX,A.SQUAWKABILLY,A.MASCHIFF,A.MABOSSTIFF,A.SCOVILLAIN,A.BOMBIRDIER,A.REVAVROOM,A.ANNIHILAPE,A.KINGAMBIT,A.BRUTE_BONNET,A.IRON_JUGULIS,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.PECHARUNT,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_MUK,[A.LYCANROC,"midnight"],A.GALAR_MEOWTH,A.GALAR_MOLTRES,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARMANITAN,A.GALAR_STUNFISK,[A.URSHIFU,"single-strike"],[A.CALYREX,"ice","shadow"],A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_GOODRA,A.PALDEA_TAUROS],[E.POLTERGEIST]:[A.GASTLY,A.HAUNTER,A.GENGAR,A.MEW,A.MISDREAVUS,A.SHEDINJA,A.SABLEYE,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.MISMAGIUS,A.SPIRITOMB,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.GIRATINA,A.YAMASK,A.COFAGRIGUS,A.FRILLISH,A.JELLICENT,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.GOLETT,A.GOLURK,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.DECIDUEYE,A.SANDYGAST,A.PALOSSAND,A.DHELMISE,A.LUNALA,A.MARSHADOW,A.SINISTEA,A.POLTEAGEIST,A.CURSOLA,A.RUNERIGUS,A.SPECTRIER,A.SKELEDIRGE,A.CERULEDGE,A.BRAMBLIN,A.BRAMBLEGHAST,A.RABSCA,A.GREAVARD,A.HOUNDSTONE,A.FLUTTER_MANE,A.GHOLDENGO,A.POLTCHAGEIST,A.SINISTCHA,A.MUNKIDORI,A.PECHARUNT,A.ALOLA_MAROWAK,A.GALAR_YAMASK,A.HISUI_TYPHLOSION,A.HISUI_ZOROARK],[E.CORROSIVE_GAS]:[A.VILEPLUME,A.TENTACRUEL,A.GASTLY,A.HAUNTER,A.GENGAR,A.KOFFING,A.WEEZING,A.MEW,A.STUNKY,A.SKUNTANK,A.TOXICROAK,A.TRUBBISH,A.GARBODOR,A.SALAZZLE,A.NIHILEGO,A.GUZZLORD,A.GALAR_WEEZING],[E.COACHING]:[A.POLIWRATH,A.MACHOP,A.MACHOKE,A.MACHAMP,A.HITMONLEE,A.HITMONCHAN,A.MEW,A.HERACROSS,A.HITMONTOP,A.COMBUSKEN,A.BLAZIKEN,A.MAKUHITA,A.HARIYAMA,A.INFERNAPE,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.GALLADE,A.PIGNITE,A.EMBOAR,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.THROH,A.SAWK,A.SCRAGGY,A.SCRAFTY,A.MIENFOO,A.MIENSHAO,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.MELOETTA,A.CHESNAUGHT,A.PANCHAM,A.PANGORO,A.HAWLUCHA,A.CRABRAWLER,A.CRABOMINABLE,A.STUFFUL,A.BEWEAR,A.PASSIMIAN,A.HAKAMO_O,A.KOMMO_O,A.BUZZWOLE,A.PHEROMOSA,A.MARSHADOW,A.ZERAORA,A.CINDERACE,A.CLOBBOPUS,A.GRAPPLOCT,A.SIRFETCHD,A.FALINKS,A.ZAMAZENTA,A.KUBFU,A.URSHIFU,A.SNEASLER,A.QUAQUAVAL,A.PAWMO,A.PAWMOT,A.ANNIHILAPE,A.IRON_VALIANT,A.IRON_LEAVES,A.GALAR_ZAPDOS,A.HISUI_SNEASEL,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE],[E.FLIP_TURN]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.PSYDUCK,A.GOLDUCK,A.TENTACOOL,A.TENTACRUEL,A.SEEL,A.DEWGONG,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.VAPOREON,A.KABUTOPS,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.CHINCHOU,A.LANTURN,A.QWILFISH,A.KINGDRA,A.SWAMPERT,A.CARVANHA,A.SHARPEDO,A.MILOTIC,A.LUVDISC,A.LATIOS,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BUIZEL,A.FLOATZEL,A.FINNEON,A.LUMINEON,A.PHIONE,A.MANAPHY,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.BASCULIN,A.SWANNA,A.ALOMOMOLA,A.KELDEO,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.WISHIWASHI,A.BRUXISH,A.INTELEON,A.ARROKUDA,A.BARRASKEWDA,A.EISCUE,A.BASCULEGION,A.QUAXWELL,A.QUAQUAVAL,A.PALAFIN,A.VELUZA,A.IRON_BUNDLE,A.WALKING_WAKE,A.HISUI_SAMUROTT],[E.TRIPLE_AXEL]:[A.SEEL,A.DEWGONG,A.JYNX,A.ARTICUNO,A.MEW,A.BELLOSSOM,A.SNEASEL,A.DELIBIRD,A.HITMONTOP,A.KIRLIA,A.GARDEVOIR,A.MILOTIC,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.AMBIPOM,A.BUNEARY,A.LOPUNNY,A.WEAVILE,A.GLACEON,A.GALLADE,A.FROSLASS,A.LEAVANNY,A.MINCCINO,A.CINCCINO,A.CRYOGONAL,A.MIENSHAO,A.MELOETTA,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.STEENEE,A.TSAREENA,A.PHEROMOSA,A.MR_RIME,A.FROSMOTH,A.MEOWSCARADA,A.QUAXWELL,A.QUAQUAVAL,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_NINETALES,A.GALAR_MR_MIME,A.HISUI_LILLIGANT],[E.DUAL_WINGBEAT]:[A.CHARIZARD,A.BUTTERFREE,A.CLEFAIRY,A.CLEFABLE,A.ZUBAT,A.GOLBAT,A.FARFETCHD,A.SCYTHER,A.AERODACTYL,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRAGONITE,A.MEW,A.HOOTHOOT,A.NOCTOWL,A.CROBAT,A.TOGETIC,A.NATU,A.XATU,A.MURKROW,A.DUNSPARCE,A.GLIGAR,A.SCIZOR,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.LUGIA,A.HO_OH,A.CELEBI,A.WINGULL,A.PELIPPER,A.MASQUERAIN,A.NINJASK,A.VIBRAVA,A.FLYGON,A.SWABLU,A.ALTARIA,A.TROPIUS,A.SALAMENCE,A.LATIAS,A.LATIOS,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.COMBEE,A.VESPIQUEN,A.HONCHKROW,A.TOGEKISS,A.YANMEGA,A.GLISCOR,A.PALKIA,A.GIRATINA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.WOOBAT,A.SWOOBAT,A.SIGILYPH,A.ARCHEN,A.ARCHEOPS,A.EMOLGA,A.DRUDDIGON,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HYDREIGON,A.VOLCARONA,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.HAWLUCHA,A.NOIBAT,A.NOIVERN,A.YVELTAL,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.VIKAVOLT,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.LUNALA,A.BUZZWOLE,A.NAGANADEL,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.FLAPPLE,A.CRAMORANT,A.SIRFETCHD,A.FROSMOTH,A.KLEAVOR,A.SQUAWKABILLY,A.WATTREL,A.KILOWATTREL,A.BOMBIRDIER,A.FLAMIGO,A.DUDUNSPARCE,A.SLITHER_WING,A.IRON_JUGULIS,A.KORAIDON,A.FEZANDIPITI,A.GALAR_FARFETCHD,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.HISUI_BRAVIARY,A.HISUI_DECIDUEYE],[E.SCORCHING_SANDS]:[A.CHARIZARD,A.SANDSHREW,A.SANDSLASH,A.NIDOQUEEN,A.NIDOKING,A.NINETALES,A.DIGLETT,A.DUGTRIO,A.ARCANINE,A.RAPIDASH,A.ONIX,A.CUBONE,A.MAROWAK,A.RHYHORN,A.RHYDON,A.MAGMAR,A.FLAREON,A.MOLTRES,A.MEW,A.TYPHLOSION,A.STEELIX,A.MAGCARGO,A.ENTEI,A.HO_OH,A.BLAZIKEN,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.BALTOY,A.CLAYDOL,A.GROUDON,A.INFERNAPE,A.TORTERRA,A.SHIELDON,A.BASTIODON,A.GIBLE,A.GABITE,A.GARCHOMP,A.HIPPOPOTAS,A.HIPPOWDON,A.RHYPERIOR,A.MAGMORTAR,A.HEATRAN,A.ARCEUS,A.VICTINI,A.DRILBUR,A.EXCADRILL,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.GOLETT,A.GOLURK,A.HEATMOR,A.RESHIRAM,A.LANDORUS,A.DELPHOX,A.DIGGERSBY,A.ZYGARDE,A.DIANCIE,A.VOLCANION,A.INCINEROAR,A.SANDYGAST,A.PALOSSAND,A.MINIOR,A.TURTONATOR,A.CINDERACE,A.CARKOL,A.COALOSSAL,A.SILICOBRA,A.SANDACONDA,A.SIZZLIPEDE,A.CENTISKORCH,A.SKELEDIRGE,A.ARMAROUGE,A.SANDY_SHOCKS,A.GOUGING_FIRE,A.TERAPAGOS,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MAROWAK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE],[E.TERA_BLAST]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.CATERPIE,A.METAPOD,A.BUTTERFREE,A.WEEDLE,A.KAKUNA,A.BEEDRILL,A.PIDGEY,A.PIDGEOTTO,A.PIDGEOT,A.RATTATA,A.RATICATE,A.SPEAROW,A.FEAROW,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.SANDSHREW,A.SANDSLASH,A.NIDORAN_F,A.NIDORINA,A.NIDOQUEEN,A.NIDORAN_M,A.NIDORINO,A.NIDOKING,A.CLEFAIRY,A.CLEFABLE,A.VULPIX,A.NINETALES,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ZUBAT,A.GOLBAT,A.ODDISH,A.GLOOM,A.VILEPLUME,A.PARAS,A.PARASECT,A.VENONAT,A.VENOMOTH,A.DIGLETT,A.DUGTRIO,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.MANKEY,A.PRIMEAPE,A.GROWLITHE,A.ARCANINE,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.ABRA,A.KADABRA,A.ALAKAZAM,A.MACHOP,A.MACHOKE,A.MACHAMP,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.TENTACOOL,A.TENTACRUEL,A.GEODUDE,A.GRAVELER,A.GOLEM,A.PONYTA,A.RAPIDASH,A.SLOWPOKE,A.SLOWBRO,A.MAGNEMITE,A.MAGNETON,A.FARFETCHD,A.DODUO,A.DODRIO,A.SEEL,A.DEWGONG,A.GRIMER,A.MUK,A.SHELLDER,A.CLOYSTER,A.GASTLY,A.HAUNTER,A.GENGAR,A.ONIX,A.DROWZEE,A.HYPNO,A.KRABBY,A.KINGLER,A.VOLTORB,A.ELECTRODE,A.EXEGGCUTE,A.EXEGGUTOR,A.CUBONE,A.MAROWAK,A.HITMONLEE,A.HITMONCHAN,A.LICKITUNG,A.KOFFING,A.WEEZING,A.RHYHORN,A.RHYDON,A.CHANSEY,A.TANGELA,A.KANGASKHAN,A.HORSEA,A.SEADRA,A.GOLDEEN,A.SEAKING,A.STARYU,A.STARMIE,A.MR_MIME,A.SCYTHER,A.JYNX,A.ELECTABUZZ,A.MAGMAR,A.PINSIR,A.TAUROS,A.GYARADOS,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.PORYGON,A.OMANYTE,A.OMASTAR,A.KABUTO,A.KABUTOPS,A.AERODACTYL,A.SNORLAX,A.ARTICUNO,A.ZAPDOS,A.MOLTRES,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.HOOTHOOT,A.NOCTOWL,A.LEDYBA,A.LEDIAN,A.SPINARAK,A.ARIADOS,A.CROBAT,A.CHINCHOU,A.LANTURN,A.PICHU,A.CLEFFA,A.IGGLYBUFF,A.TOGEPI,A.TOGETIC,A.NATU,A.XATU,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.POLITOED,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.YANMA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.GLIGAR,A.STEELIX,A.SNUBBULL,A.GRANBULL,A.QWILFISH,A.SCIZOR,A.SHUCKLE,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SLUGMA,A.MAGCARGO,A.SWINUB,A.PILOSWINE,A.CORSOLA,A.REMORAID,A.OCTILLERY,A.DELIBIRD,A.MANTINE,A.SKARMORY,A.HOUNDOUR,A.HOUNDOOM,A.KINGDRA,A.PHANPY,A.DONPHAN,A.PORYGON2,A.STANTLER,A.TYROGUE,A.HITMONTOP,A.SMOOCHUM,A.ELEKID,A.MAGBY,A.MILTANK,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.LARVITAR,A.PUPITAR,A.TYRANITAR,A.LUGIA,A.HO_OH,A.CELEBI,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.POOCHYENA,A.MIGHTYENA,A.ZIGZAGOON,A.LINOONE,A.WURMPLE,A.SILCOON,A.BEAUTIFLY,A.CASCOON,A.DUSTOX,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.TAILLOW,A.SWELLOW,A.WINGULL,A.PELIPPER,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.NINCADA,A.NINJASK,A.SHEDINJA,A.WHISMUR,A.LOUDRED,A.EXPLOUD,A.MAKUHITA,A.HARIYAMA,A.AZURILL,A.NOSEPASS,A.SKITTY,A.DELCATTY,A.SABLEYE,A.MAWILE,A.ARON,A.LAIRON,A.AGGRON,A.MEDITITE,A.MEDICHAM,A.ELECTRIKE,A.MANECTRIC,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.ROSELIA,A.GULPIN,A.SWALOT,A.CARVANHA,A.SHARPEDO,A.WAILMER,A.WAILORD,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SPOINK,A.GRUMPIG,A.SPINDA,A.TRAPINCH,A.VIBRAVA,A.FLYGON,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.ZANGOOSE,A.SEVIPER,A.LUNATONE,A.SOLROCK,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.BALTOY,A.CLAYDOL,A.LILEEP,A.CRADILY,A.ANORITH,A.ARMALDO,A.FEEBAS,A.MILOTIC,A.CASTFORM,A.KECLEON,A.SHUPPET,A.BANETTE,A.DUSKULL,A.DUSCLOPS,A.TROPIUS,A.CHIMECHO,A.ABSOL,A.SNORUNT,A.GLALIE,A.SPHEAL,A.SEALEO,A.WALREIN,A.CLAMPERL,A.HUNTAIL,A.GOREBYSS,A.RELICANTH,A.LUVDISC,A.BAGON,A.SHELGON,A.SALAMENCE,A.BELDUM,A.METANG,A.METAGROSS,A.REGIROCK,A.REGICE,A.REGISTEEL,A.LATIAS,A.LATIOS,A.KYOGRE,A.GROUDON,A.RAYQUAZA,A.JIRACHI,A.DEOXYS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.STARLY,A.STARAVIA,A.STARAPTOR,A.BIDOOF,A.BIBAREL,A.KRICKETOT,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.BUDEW,A.ROSERADE,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.BURMY,A.WORMADAM,A.MOTHIM,A.COMBEE,A.VESPIQUEN,A.PACHIRISU,A.BUIZEL,A.FLOATZEL,A.CHERUBI,A.CHERRIM,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.DRIFLOON,A.DRIFBLIM,A.BUNEARY,A.LOPUNNY,A.MISMAGIUS,A.HONCHKROW,A.GLAMEOW,A.PURUGLY,A.CHINGLING,A.STUNKY,A.SKUNTANK,A.BRONZOR,A.BRONZONG,A.BONSLY,A.MIME_JR,A.HAPPINY,A.CHATOT,A.SPIRITOMB,A.GIBLE,A.GABITE,A.GARCHOMP,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.HIPPOPOTAS,A.HIPPOWDON,A.SKORUPI,A.DRAPION,A.CROAGUNK,A.TOXICROAK,A.CARNIVINE,A.FINNEON,A.LUMINEON,A.MANTYKE,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.MAGNEZONE,A.LICKILICKY,A.RHYPERIOR,A.TANGROWTH,A.ELECTIVIRE,A.MAGMORTAR,A.TOGEKISS,A.YANMEGA,A.LEAFEON,A.GLACEON,A.GLISCOR,A.MAMOSWINE,A.PORYGON_Z,A.GALLADE,A.PROBOPASS,A.DUSKNOIR,A.FROSLASS,A.ROTOM,A.UXIE,A.MESPRIT,A.AZELF,A.DIALGA,A.PALKIA,A.HEATRAN,A.REGIGIGAS,A.GIRATINA,A.CRESSELIA,A.PHIONE,A.MANAPHY,A.DARKRAI,A.SHAYMIN,A.ARCEUS,A.VICTINI,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.PATRAT,A.WATCHOG,A.LILLIPUP,A.HERDIER,A.STOUTLAND,A.PURRLOIN,A.LIEPARD,A.PANSAGE,A.SIMISAGE,A.PANSEAR,A.SIMISEAR,A.PANPOUR,A.SIMIPOUR,A.MUNNA,A.MUSHARNA,A.PIDOVE,A.TRANQUILL,A.UNFEZANT,A.BLITZLE,A.ZEBSTRIKA,A.ROGGENROLA,A.BOLDORE,A.GIGALITH,A.WOOBAT,A.SWOOBAT,A.DRILBUR,A.EXCADRILL,A.AUDINO,A.TIMBURR,A.GURDURR,A.CONKELDURR,A.TYMPOLE,A.PALPITOAD,A.SEISMITOAD,A.THROH,A.SAWK,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.VENIPEDE,A.WHIRLIPEDE,A.SCOLIPEDE,A.COTTONEE,A.WHIMSICOTT,A.PETILIL,A.LILLIGANT,A.BASCULIN,A.SANDILE,A.KROKOROK,A.KROOKODILE,A.DARUMAKA,A.DARMANITAN,A.MARACTUS,A.DWEBBLE,A.CRUSTLE,A.SCRAGGY,A.SCRAFTY,A.SIGILYPH,A.YAMASK,A.COFAGRIGUS,A.TIRTOUGA,A.CARRACOSTA,A.ARCHEN,A.ARCHEOPS,A.TRUBBISH,A.GARBODOR,A.ZORUA,A.ZOROARK,A.MINCCINO,A.CINCCINO,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.SOLOSIS,A.DUOSION,A.REUNICLUS,A.DUCKLETT,A.SWANNA,A.VANILLITE,A.VANILLISH,A.VANILLUXE,A.DEERLING,A.SAWSBUCK,A.EMOLGA,A.KARRABLAST,A.ESCAVALIER,A.FOONGUS,A.AMOONGUSS,A.FRILLISH,A.JELLICENT,A.ALOMOMOLA,A.JOLTIK,A.GALVANTULA,A.FERROSEED,A.FERROTHORN,A.KLINK,A.KLANG,A.KLINKLANG,A.TYNAMO,A.EELEKTRIK,A.EELEKTROSS,A.ELGYEM,A.BEHEEYEM,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.SHELMET,A.ACCELGOR,A.STUNFISK,A.MIENFOO,A.MIENSHAO,A.DRUDDIGON,A.GOLETT,A.GOLURK,A.PAWNIARD,A.BISHARP,A.BOUFFALANT,A.RUFFLET,A.BRAVIARY,A.VULLABY,A.MANDIBUZZ,A.HEATMOR,A.DURANT,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.LARVESTA,A.VOLCARONA,A.COBALION,A.TERRAKION,A.VIRIZION,A.TORNADUS,A.THUNDURUS,A.RESHIRAM,A.ZEKROM,A.LANDORUS,A.KYUREM,A.KELDEO,A.MELOETTA,A.GENESECT,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FENNEKIN,A.BRAIXEN,A.DELPHOX,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.BUNNELBY,A.DIGGERSBY,A.FLETCHLING,A.FLETCHINDER,A.TALONFLAME,A.SCATTERBUG,A.SPEWPA,A.VIVILLON,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.PANCHAM,A.PANGORO,A.FURFROU,A.ESPURR,A.MEOWSTIC,A.HONEDGE,A.DOUBLADE,A.AEGISLASH,A.SPRITZEE,A.AROMATISSE,A.SWIRLIX,A.SLURPUFF,A.INKAY,A.MALAMAR,A.BINACLE,A.BARBARACLE,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.HELIOPTILE,A.HELIOLISK,A.TYRUNT,A.TYRANTRUM,A.AMAURA,A.AURORUS,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.CARBINK,A.GOOMY,A.SLIGGOO,A.GOODRA,A.KLEFKI,A.PHANTUMP,A.TREVENANT,A.PUMPKABOO,A.GOURGEIST,A.BERGMITE,A.AVALUGG,A.NOIBAT,A.NOIVERN,A.XERNEAS,A.YVELTAL,A.ZYGARDE,A.DIANCIE,A.HOOPA,A.VOLCANION,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.PIKIPEK,A.TRUMBEAK,A.TOUCANNON,A.YUNGOOS,A.GUMSHOOS,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CRABRAWLER,A.CRABOMINABLE,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.WISHIWASHI,A.MAREANIE,A.TOXAPEX,A.MUDBRAY,A.MUDSDALE,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.MORELULL,A.SHIINOTIC,A.SALANDIT,A.SALAZZLE,A.STUFFUL,A.BEWEAR,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.WIMPOD,A.GOLISOPOD,A.SANDYGAST,A.PALOSSAND,A.TYPE_NULL,A.SILVALLY,A.MINIOR,A.KOMALA,A.TURTONATOR,A.TOGEDEMARU,A.MIMIKYU,A.BRUXISH,A.DRAMPA,A.DHELMISE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.TAPU_KOKO,A.TAPU_LELE,A.TAPU_BULU,A.TAPU_FINI,A.SOLGALEO,A.LUNALA,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.NECROZMA,A.MAGEARNA,A.MARSHADOW,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.ZERAORA,A.MELTAN,A.MELMETAL,A.ALOLA_RATTATA,A.ALOLA_RATICATE,A.ALOLA_RAICHU,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.ALOLA_GRIMER,A.ALOLA_MUK,A.ALOLA_EXEGGUTOR,A.ALOLA_MAROWAK,A.ETERNAL_FLOETTE,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.SKWOVET,A.GREEDENT,A.ROOKIDEE,A.CORVISQUIRE,A.CORVIKNIGHT,A.BLIPBUG,A.DOTTLER,A.ORBEETLE,A.NICKIT,A.THIEVUL,A.GOSSIFLEUR,A.ELDEGOSS,A.WOOLOO,A.DUBWOOL,A.CHEWTLE,A.DREDNAW,A.YAMPER,A.BOLTUND,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.APPLIN,A.FLAPPLE,A.APPLETUN,A.SILICOBRA,A.SANDACONDA,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.TOXEL,A.TOXTRICITY,A.SIZZLIPEDE,A.CENTISKORCH,A.CLOBBOPUS,A.GRAPPLOCT,A.SINISTEA,A.POLTEAGEIST,A.HATENNA,A.HATTREM,A.HATTERENE,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.OBSTAGOON,A.PERRSERKER,A.CURSOLA,A.SIRFETCHD,A.MR_RIME,A.RUNERIGUS,A.MILCERY,A.ALCREMIE,A.FALINKS,A.PINCURCHIN,A.SNOM,A.FROSMOTH,A.STONJOURNER,A.EISCUE,A.INDEEDEE,A.MORPEKO,A.CUFANT,A.COPPERAJAH,A.DRACOZOLT,A.ARCTOZOLT,A.DRACOVISH,A.ARCTOVISH,A.DURALUDON,A.DREEPY,A.DRAKLOAK,A.DRAGAPULT,A.ZACIAN,A.ZAMAZENTA,A.ETERNATUS,A.KUBFU,A.URSHIFU,A.ZARUDE,A.REGIELEKI,A.REGIDRAGO,A.GLASTRIER,A.SPECTRIER,A.CALYREX,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.BASCULEGION,A.SNEASLER,A.OVERQWIL,A.ENAMORUS,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.PAWMI,A.PAWMO,A.PAWMOT,A.TANDEMAUS,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.SQUAWKABILLY,A.NACLI,A.NACLSTACK,A.GARGANACL,A.CHARCADET,A.ARMAROUGE,A.CERULEDGE,A.TADBULB,A.BELLIBOLT,A.WATTREL,A.KILOWATTREL,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.WIGLETT,A.WUGTRIO,A.BOMBIRDIER,A.FINIZEN,A.PALAFIN,A.VAROOM,A.REVAVROOM,A.CYCLIZAR,A.ORTHWORM,A.GLIMMET,A.GLIMMORA,A.GREAVARD,A.HOUNDSTONE,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.ANNIHILAPE,A.CLODSIRE,A.FARIGIRAF,A.DUDUNSPARCE,A.KINGAMBIT,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.GIMMIGHOUL,A.GHOLDENGO,A.WO_CHIEN,A.CHIEN_PAO,A.TING_LU,A.CHI_YU,A.ROARING_MOON,A.IRON_VALIANT,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.IRON_LEAVES,A.DIPPLIN,A.POLTCHAGEIST,A.SINISTCHA,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI,A.OGERPON,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_BOULDER,A.IRON_CROWN,A.PECHARUNT,A.GALAR_MEOWTH,A.GALAR_PONYTA,A.GALAR_RAPIDASH,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_FARFETCHD,A.GALAR_WEEZING,A.GALAR_MR_MIME,A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES,A.GALAR_SLOWKING,A.GALAR_CORSOLA,A.GALAR_ZIGZAGOON,A.GALAR_LINOONE,A.GALAR_DARUMAKA,A.GALAR_DARMANITAN,A.GALAR_YAMASK,A.GALAR_STUNFISK,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_VOLTORB,A.HISUI_ELECTRODE,A.HISUI_TYPHLOSION,A.HISUI_QWILFISH,A.HISUI_SNEASEL,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_BRAVIARY,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.ICE_SPINNER]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.ARTICUNO,A.DRAGONITE,A.MEW,A.MARILL,A.AZUMARILL,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.DELIBIRD,A.DONPHAN,A.HITMONTOP,A.LUDICOLO,A.SNORUNT,A.GLALIE,A.REGICE,A.REGISTEEL,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BUIZEL,A.FLOATZEL,A.BRONZOR,A.BRONZONG,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.FROSLASS,A.CINCCINO,A.CRYOGONAL,A.MIENSHAO,A.BERGMITE,A.AVALUGG,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.CRABOMINABLE,A.MAREANIE,A.TOXAPEX,A.KOMALA,A.MAGEARNA,A.DREDNAW,A.FROSMOTH,A.EISCUE,A.QUAQUAVAL,A.CYCLIZAR,A.CETODDLE,A.CETITAN,A.DUDUNSPARCE,A.GREAT_TUSK,A.IRON_TREADS,A.IRON_BUNDLE,A.CHIEN_PAO,A.TERAPAGOS,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,[A.URSHIFU,"rapid-strike"],A.HISUI_LILLIGANT,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG],[E.SNOWSCAPE]:[A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.CHANSEY,A.LAPRAS,A.ARTICUNO,A.DRAGONITE,A.MEW,A.MARILL,A.AZUMARILL,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.MISDREAVUS,A.SNEASEL,A.SWINUB,A.PILOSWINE,A.DELIBIRD,A.BLISSEY,A.SUICUNE,A.WINGULL,A.PELIPPER,A.SPOINK,A.GRUMPIG,A.ALTARIA,A.SNORUNT,A.GLALIE,A.LUVDISC,A.REGICE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.SHELLOS,A.GASTRODON,A.MISMAGIUS,A.HAPPINY,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.GLACEON,A.MAMOSWINE,A.FROSLASS,A.PALKIA,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.BASCULIN,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.TORNADUS,A.KYUREM,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.SKRELP,A.DRAGALGE,A.BERGMITE,A.AVALUGG,A.DIANCIE,A.PRIMARINA,A.CRABOMINABLE,A.MAGEARNA,A.INTELEON,A.FROSMOTH,A.EISCUE,A.GLASTRIER,A.BASCULEGION,A.CETODDLE,A.CETITAN,A.VELUZA,A.SCREAM_TAIL,A.IRON_BUNDLE,A.FRIGIBAX,A.ARCTIBAX,A.BAXCALIBUR,A.CHIEN_PAO,A.ALOLA_SANDSHREW,A.ALOLA_SANDSLASH,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_ARTICUNO,[A.CALYREX,"ice"],A.HISUI_SAMUROTT,A.HISUI_ZORUA,A.HISUI_ZOROARK,A.HISUI_AVALUGG],[E.POUNCE]:[A.VENONAT,A.VENOMOTH,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.SCYTHER,A.MEW,A.SPINARAK,A.ARIADOS,A.YANMA,A.PINECO,A.FORRETRESS,A.DUNSPARCE,A.SCIZOR,A.HERACROSS,A.SURSKIT,A.MASQUERAIN,A.SHROOMISH,A.BRELOOM,A.SLAKING,A.VOLBEAT,A.ILLUMISE,A.SEVIPER,A.SHUPPET,A.BANETTE,A.KRICKETUNE,A.VESPIQUEN,A.YANMEGA,A.HEATRAN,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.LARVESTA,A.VOLCARONA,A.SCATTERBUG,A.SPEWPA,A.VIVILLON,A.CLAUNCHER,A.CLAWITZER,A.GRUBBIN,A.CHARJABUG,A.VIKAVOLT,A.CUTIEFLY,A.RIBOMBEE,A.MAREANIE,A.TOXAPEX,A.MIMIKYU,A.APPLIN,A.FLAPPLE,A.APPLETUN,A.CRAMORANT,A.SNOM,A.FROSMOTH,A.DRAKLOAK,A.DRAGAPULT,A.KLEAVOR,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.SQUAWKABILLY,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.RELLOR,A.RABSCA,A.FLITTLE,A.ESPATHRA,A.TINKATINK,A.TINKATUFF,A.TINKATON,A.FLAMIGO,A.DUDUNSPARCE,A.IRON_MOTH,A.DIPPLIN,A.HYDRAPPLE],[E.TRAILBLAZE]:[A.BULBASAUR,A.IVYSAUR,A.VENUSAUR,A.EKANS,A.ARBOK,A.PIKACHU,A.RAICHU,A.JIGGLYPUFF,A.WIGGLYTUFF,A.ODDISH,A.GLOOM,A.VILEPLUME,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.BELLSPROUT,A.WEEPINBELL,A.VICTREEBEL,A.DODRIO,A.DROWZEE,A.HYPNO,A.HITMONCHAN,A.CHANSEY,A.SCYTHER,A.TAUROS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.SNORLAX,A.MEWTWO,A.MEW,A.CHIKORITA,A.BAYLEEF,A.MEGANIUM,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.SPINARAK,A.ARIADOS,A.PICHU,A.IGGLYBUFF,A.MAREEP,A.FLAAFFY,A.AMPHAROS,A.BELLOSSOM,A.MARILL,A.AZUMARILL,A.SUDOWOODO,A.HOPPIP,A.SKIPLOOM,A.JUMPLUFF,A.AIPOM,A.SUNKERN,A.SUNFLORA,A.WOOPER,A.QUAGSIRE,A.ESPEON,A.UMBREON,A.GIRAFARIG,A.SNUBBULL,A.GRANBULL,A.SCIZOR,A.HERACROSS,A.SNEASEL,A.TEDDIURSA,A.URSARING,A.SWINUB,A.PILOSWINE,A.DELIBIRD,A.HOUNDOUR,A.HOUNDOOM,A.PHANPY,A.DONPHAN,A.STANTLER,A.ELEKID,A.BLISSEY,A.RAIKOU,A.ENTEI,A.SUICUNE,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.POOCHYENA,A.MIGHTYENA,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.SEEDOT,A.NUZLEAF,A.SHIFTRY,A.VIGOROTH,A.SLAKING,A.MEDITITE,A.MEDICHAM,A.PLUSLE,A.MINUN,A.VOLBEAT,A.ILLUMISE,A.NUMEL,A.CAMERUPT,A.SPOINK,A.GRUMPIG,A.CACNEA,A.CACTURNE,A.SWABLU,A.ALTARIA,A.SEVIPER,A.BANETTE,A.TROPIUS,A.SNORUNT,A.GLALIE,A.METANG,A.METAGROSS,A.TURTWIG,A.GROTLE,A.TORTERRA,A.KRICKETUNE,A.SHINX,A.LUXIO,A.LUXRAY,A.CRANIDOS,A.RAMPARDOS,A.SHIELDON,A.BASTIODON,A.PACHIRISU,A.AMBIPOM,A.STUNKY,A.SKUNTANK,A.BONSLY,A.MUNCHLAX,A.RIOLU,A.LUCARIO,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.ELECTIVIRE,A.LEAFEON,A.GLACEON,A.MAMOSWINE,A.FROSLASS,A.SHAYMIN,A.ARCEUS,A.SNIVY,A.SERVINE,A.SERPERIOR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.BLITZLE,A.ZEBSTRIKA,A.SEWADDLE,A.SWADLOON,A.LEAVANNY,A.PETILIL,A.LILLIGANT,A.SCRAGGY,A.SCRAFTY,A.DUCKLETT,A.MINCCINO,A.CINCCINO,A.SWANNA,A.DEERLING,A.SAWSBUCK,A.CHANDELURE,A.AXEW,A.FRAXURE,A.HAXORUS,A.CUBCHOO,A.BEARTIC,A.MIENFOO,A.MIENSHAO,A.LARVESTA,A.VOLCARONA,A.CHESPIN,A.QUILLADIN,A.CHESNAUGHT,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.LITLEO,A.PYROAR,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKIDDO,A.GOGOAT,A.MEOWSTIC,A.MALAMAR,A.SYLVEON,A.HAWLUCHA,A.DEDENNE,A.PHANTUMP,A.TREVENANT,A.ROWLET,A.DARTRIX,A.DECIDUEYE,A.YUNGOOS,A.GUMSHOOS,A.ORICORIO,A.CUTIEFLY,A.RIBOMBEE,A.ROCKRUFF,A.LYCANROC,A.DEWPIDER,A.ARAQUANID,A.FOMANTIS,A.LURANTIS,A.SALANDIT,A.SALAZZLE,A.BOUNSWEET,A.STEENEE,A.TSAREENA,A.COMFEY,A.ORANGURU,A.PASSIMIAN,A.KOMALA,A.MIMIKYU,A.GROOKEY,A.THWACKEY,A.RILLABOOM,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.SKWOVET,A.GREEDENT,A.FLAPPLE,A.APPLETUN,A.TOXTRICITY,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.FALINKS,A.ZACIAN,A.ZAMAZENTA,A.URSHIFU,A.ZARUDE,A.GLASTRIER,A.WYRDEER,A.KLEAVOR,A.URSALUNA,A.SNEASLER,A.SPRIGATITO,A.FLORAGATO,A.MEOWSCARADA,A.LECHONK,A.OINKOLOGNE,A.TAROUNTULA,A.SPIDOPS,A.NYMBLE,A.LOKIX,A.MAUSHOLD,A.FIDOUGH,A.DACHSBUN,A.SMOLIV,A.DOLLIV,A.ARBOLIVA,A.MASCHIFF,A.MABOSSTIFF,A.SHROODLE,A.GRAFAIAI,A.BRAMBLIN,A.BRAMBLEGHAST,A.TOEDSCOOL,A.TOEDSCRUEL,A.KLAWF,A.CAPSAKID,A.SCOVILLAIN,A.CYCLIZAR,A.CLODSIRE,A.FARIGIRAF,A.BRUTE_BONNET,A.SLITHER_WING,A.WO_CHIEN,A.IRON_LEAVES,A.MUNKIDORI,A.OGERPON,A.ALOLA_RAICHU,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ETERNAL_FLOETTE,A.GALAR_MEOWTH,A.GALAR_ZAPDOS,[A.CALYREX,"ice"],A.HISUI_SNEASEL,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE,A.PALDEA_TAUROS,A.PALDEA_WOOPER,A.BLOODMOON_URSALUNA],[E.CHILLING_WATER]:[A.SQUIRTLE,A.WARTORTLE,A.BLASTOISE,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.MEOWTH,A.PERSIAN,A.PSYDUCK,A.GOLDUCK,A.POLIWAG,A.POLIWHIRL,A.POLIWRATH,A.TENTACOOL,A.TENTACRUEL,A.SLOWPOKE,A.SLOWBRO,A.SEEL,A.DEWGONG,A.SHELLDER,A.CLOYSTER,A.CHANSEY,A.HORSEA,A.SEADRA,A.GYARADOS,A.LAPRAS,A.VAPOREON,A.SNORLAX,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEWTWO,A.MEW,A.TOTODILE,A.CROCONAW,A.FERALIGATR,A.SENTRET,A.FURRET,A.CHINCHOU,A.LANTURN,A.CLEFFA,A.MARILL,A.AZUMARILL,A.POLITOED,A.AIPOM,A.WOOPER,A.QUAGSIRE,A.SLOWKING,A.DUNSPARCE,A.QWILFISH,A.DELIBIRD,A.KINGDRA,A.BLISSEY,A.SUICUNE,A.LUGIA,A.MUDKIP,A.MARSHTOMP,A.SWAMPERT,A.LOTAD,A.LOMBRE,A.LUDICOLO,A.NUZLEAF,A.SHIFTRY,A.WINGULL,A.PELIPPER,A.SURSKIT,A.MASQUERAIN,A.SLAKOTH,A.VIGOROTH,A.SLAKING,A.MAKUHITA,A.HARIYAMA,A.VOLBEAT,A.SPOINK,A.GRUMPIG,A.BARBOACH,A.WHISCASH,A.CORPHISH,A.CRAWDAUNT,A.FEEBAS,A.MILOTIC,A.SNORUNT,A.GLALIE,A.LATIAS,A.LATIOS,A.KYOGRE,A.PIPLUP,A.PRINPLUP,A.EMPOLEON,A.BUIZEL,A.FLOATZEL,A.SHELLOS,A.GASTRODON,A.AMBIPOM,A.HONCHKROW,A.MUNCHLAX,A.CROAGUNK,A.TOXICROAK,A.FINNEON,A.LUMINEON,A.SNOVER,A.ABOMASNOW,A.WEAVILE,A.GLACEON,A.FROSLASS,A.PALKIA,A.PHIONE,A.MANAPHY,A.ARCEUS,A.OSHAWOTT,A.DEWOTT,A.SAMUROTT,A.BASCULIN,A.MINCCINO,A.CINCCINO,A.DUCKLETT,A.SWANNA,A.ALOMOMOLA,A.CUBCHOO,A.BEARTIC,A.CRYOGONAL,A.TORNADUS,A.KELDEO,A.FROAKIE,A.FROGADIER,A.GRENINJA,A.FLABEBE,A.FLOETTE,A.FLORGES,A.SKRELP,A.DRAGALGE,A.CLAUNCHER,A.CLAWITZER,A.GOOMY,A.SLIGGOO,A.GOODRA,A.BERGMITE,A.AVALUGG,A.POPPLIO,A.BRIONNE,A.PRIMARINA,A.YUNGOOS,A.GUMSHOOS,A.CRABRAWLER,A.CRABOMINABLE,A.MAREANIE,A.TOXAPEX,A.DEWPIDER,A.ARAQUANID,A.ORANGURU,A.PASSIMIAN,A.SANDYGAST,A.PALOSSAND,A.BRUXISH,A.SOBBLE,A.DRIZZILE,A.INTELEON,A.CHEWTLE,A.DREDNAW,A.CRAMORANT,A.ARROKUDA,A.BARRASKEWDA,A.IMPIDIMP,A.MORGREM,A.GRIMMSNARL,A.PERRSERKER,A.PINCURCHIN,A.EISCUE,A.BASCULEGION,A.OVERQWIL,A.MEOWSCARADA,A.QUAXLY,A.QUAXWELL,A.QUAQUAVAL,A.LECHONK,A.OINKOLOGNE,A.MAUSHOLD,A.TADBULB,A.BELLIBOLT,A.WIGLETT,A.WUGTRIO,A.FINIZEN,A.PALAFIN,A.FLAMIGO,A.CETODDLE,A.CETITAN,A.VELUZA,A.DONDOZO,A.TATSUGIRI,A.CLODSIRE,A.DUDUNSPARCE,A.IRON_BUNDLE,A.WALKING_WAKE,A.ALOLA_VULPIX,A.ALOLA_NINETALES,A.ALOLA_MEOWTH,A.ALOLA_PERSIAN,A.ETERNAL_FLOETTE,A.GALAR_SLOWPOKE,A.GALAR_SLOWBRO,A.GALAR_SLOWKING,[A.URSHIFU,"rapid-strike"],A.HISUI_QWILFISH,A.HISUI_SAMUROTT,A.HISUI_SLIGGOO,A.HISUI_GOODRA,A.HISUI_AVALUGG,[A.PALDEA_TAUROS,"aqua"],A.PALDEA_WOOPER],[E.HARD_PRESS]:[A.GRAVELER,A.GOLEM,A.SNORLAX,A.MEW,A.FORRETRESS,A.SCIZOR,A.TYRANITAR,A.SWAMPERT,A.SLAKING,A.CRAWDAUNT,A.METANG,A.METAGROSS,A.REGIROCK,A.REGISTEEL,A.TORTERRA,A.SHIELDON,A.BASTIODON,A.BRONZONG,A.HIPPOWDON,A.ABOMASNOW,A.MAGNEZONE,A.MAMOSWINE,A.PROBOPASS,A.DUSKNOIR,A.HEATRAN,A.REGIGIGAS,A.EMBOAR,A.CONKELDURR,A.BEARTIC,A.GOLURK,A.CRABOMINABLE,A.STONJOURNER,A.COPPERAJAH,A.URSALUNA,A.GARGANACL,A.TINKATON,A.PALAFIN,A.REVAVROOM,A.CETITAN,A.IRON_TREADS,A.IRON_HANDS,A.OKIDOGI,A.ARCHALUDON,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.HISUI_AVALUGG,A.BLOODMOON_URSALUNA],[E.DRAGON_CHEER]:[A.CHARIZARD,A.GYARADOS,A.LAPRAS,A.DRATINI,A.DRAGONAIR,A.DRAGONITE,A.MEW,A.AMPHAROS,A.SCEPTILE,A.FLYGON,A.SWABLU,A.ALTARIA,A.MILOTIC,A.BAGON,A.SHELGON,A.SALAMENCE,A.LATIAS,A.LATIOS,A.RAYQUAZA,A.CRANIDOS,A.RAMPARDOS,A.GIBLE,A.GABITE,A.GARCHOMP,A.AXEW,A.FRAXURE,A.HAXORUS,A.DEINO,A.ZWEILOUS,A.HYDREIGON,A.RESHIRAM,A.ZEKROM,A.KYUREM,A.GOODRA,A.NOIVERN,A.SALAZZLE,A.JANGMO_O,A.HAKAMO_O,A.KOMMO_O,A.DURALUDON,A.DRAKLOAK,A.DRAGAPULT,A.REGIDRAGO,A.CYCLIZAR,A.TATSUGIRI,A.IRON_JUGULIS,A.BAXCALIBUR,A.ROARING_MOON,A.KORAIDON,A.MIRAIDON,A.WALKING_WAKE,A.DIPPLIN,A.ARCHALUDON,A.HYDRAPPLE,A.GOUGING_FIRE,A.RAGING_BOLT,A.ALOLA_EXEGGUTOR,A.HISUI_GOODRA],[E.ALLURING_VOICE]:[A.PIKACHU,A.RAICHU,A.CLEFAIRY,A.CLEFABLE,A.JIGGLYPUFF,A.WIGGLYTUFF,A.DEWGONG,A.LAPRAS,A.EEVEE,A.VAPOREON,A.JOLTEON,A.FLAREON,A.MEW,A.CLEFFA,A.IGGLYBUFF,A.MARILL,A.AZUMARILL,A.ESPEON,A.UMBREON,A.BLISSEY,A.RALTS,A.KIRLIA,A.GARDEVOIR,A.AZURILL,A.PLUSLE,A.MINUN,A.FLYGON,A.ALTARIA,A.MILOTIC,A.LATIAS,A.PACHIRISU,A.FINNEON,A.LUMINEON,A.LEAFEON,A.GLACEON,A.GALLADE,A.PHIONE,A.MANAPHY,A.LILLIGANT,A.MINCCINO,A.CINCCINO,A.SWANNA,A.ALOMOMOLA,A.MELOETTA,A.FLABEBE,A.FLOETTE,A.FLORGES,A.MEOWSTIC,A.SYLVEON,A.PRIMARINA,A.ORICORIO,A.RIBOMBEE,A.COMFEY,A.ALCREMIE,A.ENAMORUS,A.SKELEDIRGE,A.FIDOUGH,A.DACHSBUN,A.ARBOLIVA,A.FEZANDIPITI,A.ALOLA_RAICHU,A.ETERNAL_FLOETTE,[A.INDEEDEE,"female"]],[E.TEMPER_FLARE]:[A.CHARMANDER,A.CHARMELEON,A.CHARIZARD,A.GROWLITHE,A.ARCANINE,A.MAGMAR,A.GYARADOS,A.FLAREON,A.MOLTRES,A.MEW,A.CYNDAQUIL,A.QUILAVA,A.TYPHLOSION,A.SNUBBULL,A.GRANBULL,A.SLUGMA,A.MAGCARGO,A.HOUNDOUR,A.HOUNDOOM,A.MAGBY,A.TORCHIC,A.COMBUSKEN,A.BLAZIKEN,A.NUMEL,A.CAMERUPT,A.TORKOAL,A.SHELGON,A.SALAMENCE,A.CHIMCHAR,A.MONFERNO,A.INFERNAPE,A.DRIFLOON,A.DRIFBLIM,A.STUNKY,A.SKUNTANK,A.RHYPERIOR,A.MAGMORTAR,A.TEPIG,A.PIGNITE,A.EMBOAR,A.LITWICK,A.LAMPENT,A.CHANDELURE,A.FLETCHINDER,A.TALONFLAME,A.PYROAR,A.LITTEN,A.TORRACAT,A.INCINEROAR,A.TOUCANNON,A.SALANDIT,A.SALAZZLE,A.SCORBUNNY,A.RABOOT,A.CINDERACE,A.ROLYCOLY,A.CARKOL,A.COALOSSAL,A.FUECOCO,A.CROCALOR,A.SKELEDIRGE,A.KLAWF,A.SCOVILLAIN,A.REVAVROOM,A.CYCLIZAR,A.GREAT_TUSK,A.SLITHER_WING,A.CHI_YU,A.KORAIDON,A.GOUGING_FIRE,A.HISUI_GROWLITHE,A.HISUI_ARCANINE,A.HISUI_TYPHLOSION,[A.PALDEA_TAUROS,"blaze"]],[E.SUPERCELL_SLAM]:[A.ELECTRODE,A.RHYHORN,A.RHYDON,A.ELECTABUZZ,A.SNORLAX,A.ZAPDOS,A.MEW,A.AMPHAROS,A.ELEKID,A.RAIKOU,A.MANECTRIC,A.LUXRAY,A.RAMPARDOS,A.MAGNEZONE,A.RHYPERIOR,A.ELECTIVIRE,A.PROBOPASS,A.ARCEUS,A.BLITZLE,A.ZEBSTRIKA,A.EELEKTROSS,A.THUNDURUS,A.ZEKROM,A.VIKAVOLT,A.PINCURCHIN,A.COPPERAJAH,A.REGIELEKI,A.URSALUNA,A.PAWMOT,A.BELLIBOLT,A.KILOWATTREL,A.CYCLIZAR,A.GREAT_TUSK,A.SANDY_SHOCKS,A.IRON_TREADS,A.IRON_HANDS,A.IRON_THORNS,A.MIRAIDON,A.RAGING_BOLT,A.IRON_CROWN,A.TERAPAGOS,A.ALOLA_GEODUDE,A.ALOLA_GRAVELER,A.ALOLA_GOLEM,A.HISUI_ELECTRODE],[E.PSYCHIC_NOISE]:[A.JIGGLYPUFF,A.WIGGLYTUFF,A.VENONAT,A.VENOMOTH,A.PSYDUCK,A.GOLDUCK,A.SLOWBRO,A.GENGAR,A.DROWZEE,A.HYPNO,A.EXEGGCUTE,A.EXEGGUTOR,A.LAPRAS,A.MEWTWO,A.MEW,A.NOCTOWL,A.YANMA,A.ESPEON,A.MURKROW,A.SLOWKING,A.MISDREAVUS,A.GIRAFARIG,A.LUGIA,A.GARDEVOIR,A.GRUMPIG,A.FLYGON,A.CHIMECHO,A.METANG,A.METAGROSS,A.LATIOS,A.JIRACHI,A.DEOXYS,A.VESPIQUEN,A.MISMAGIUS,A.HONCHKROW,A.CHINGLING,A.BRONZOR,A.BRONZONG,A.YANMEGA,A.UXIE,A.MESPRIT,A.GOTHITA,A.GOTHORITA,A.GOTHITELLE,A.REUNICLUS,A.DELPHOX,A.FLORGES,A.ESPURR,A.MEOWSTIC,A.MALAMAR,A.TREVENANT,A.NOIVERN,A.HOOPA,A.PRIMARINA,A.RIBOMBEE,A.ORANGURU,A.BRUXISH,A.TOXTRICITY,A.HATTERENE,A.INDEEDEE,A.WYRDEER,A.RABSCA,A.FARIGIRAF,A.SCREAM_TAIL,A.MUNKIDORI,A.IRON_CROWN,A.ALOLA_RAICHU,A.ALOLA_EXEGGUTOR,A.GALAR_ARTICUNO,A.GALAR_SLOWKING,A.HISUI_BRAVIARY],[E.UPPER_HAND]:[A.PIKACHU,A.RAICHU,A.POLIWRATH,A.HITMONLEE,A.HITMONCHAN,A.MEW,A.AIPOM,A.HERACROSS,A.SNEASEL,A.TYROGUE,A.HITMONTOP,A.TREECKO,A.GROVYLE,A.SCEPTILE,A.BLAZIKEN,A.SHIFTRY,A.HARIYAMA,A.MEDITITE,A.MEDICHAM,A.ZANGOOSE,A.MONFERNO,A.INFERNAPE,A.AMBIPOM,A.RIOLU,A.LUCARIO,A.CROAGUNK,A.TOXICROAK,A.WEAVILE,A.GALLADE,A.SAMUROTT,A.CONKELDURR,A.SCRAGGY,A.SCRAFTY,A.MIENFOO,A.MIENSHAO,A.COBALION,A.TERRAKION,A.VIRIZION,A.KELDEO,A.GRENINJA,A.TALONFLAME,A.HAWLUCHA,A.CRABRAWLER,A.CRABOMINABLE,[A.LYCANROC,"midnight"],A.PASSIMIAN,A.HAKAMO_O,A.KOMMO_O,A.FALINKS,A.SNEASLER,A.QUAQUAVAL,A.SPIDOPS,A.PAWMO,A.PAWMOT,A.FLAMIGO,A.OKIDOGI,A.ALOLA_RAICHU,A.HISUI_SAMUROTT,A.HISUI_LILLIGANT,A.HISUI_DECIDUEYE]};function N6(){const R={};for(const e in mI){const I=Number(e),L=mI[e];for(const N of L)if(Array.isArray(N)){const[S,...n]=N,i=Number(S);R[i]||(R[i]=[]);for(const C of n)R[i].push([C,I])}else{const S=Number(N);R[S]||(R[S]=[]),R[S].push(I)}}return R}r(N6,"transposeTmSpecies");const nZ=N6(),$i={[E.MEGA_PUNCH]:p.GREAT,[E.PAY_DAY]:p.ULTRA,[E.FIRE_PUNCH]:p.GREAT,[E.ICE_PUNCH]:p.GREAT,[E.THUNDER_PUNCH]:p.GREAT,[E.SWORDS_DANCE]:p.COMMON,[E.CUT]:p.COMMON,[E.FLY]:p.COMMON,[E.MEGA_KICK]:p.GREAT,[E.BODY_SLAM]:p.GREAT,[E.TAKE_DOWN]:p.GREAT,[E.DOUBLE_EDGE]:p.ULTRA,[E.PIN_MISSILE]:p.COMMON,[E.ROAR]:p.COMMON,[E.FLAMETHROWER]:p.ULTRA,[E.HYDRO_PUMP]:p.ULTRA,[E.SURF]:p.ULTRA,[E.ICE_BEAM]:p.ULTRA,[E.BLIZZARD]:p.ULTRA,[E.PSYBEAM]:p.GREAT,[E.HYPER_BEAM]:p.ULTRA,[E.LOW_KICK]:p.COMMON,[E.COUNTER]:p.COMMON,[E.STRENGTH]:p.GREAT,[E.SOLAR_BEAM]:p.ULTRA,[E.FIRE_SPIN]:p.COMMON,[E.THUNDERBOLT]:p.ULTRA,[E.THUNDER_WAVE]:p.COMMON,[E.THUNDER]:p.ULTRA,[E.EARTHQUAKE]:p.ULTRA,[E.DIG]:p.GREAT,[E.TOXIC]:p.GREAT,[E.PSYCHIC]:p.ULTRA,[E.AGILITY]:p.COMMON,[E.NIGHT_SHADE]:p.COMMON,[E.SCREECH]:p.COMMON,[E.DOUBLE_TEAM]:p.COMMON,[E.CONFUSE_RAY]:p.COMMON,[E.LIGHT_SCREEN]:p.COMMON,[E.HAZE]:p.COMMON,[E.REFLECT]:p.COMMON,[E.FOCUS_ENERGY]:p.COMMON,[E.METRONOME]:p.COMMON,[E.SELF_DESTRUCT]:p.GREAT,[E.FIRE_BLAST]:p.ULTRA,[E.WATERFALL]:p.GREAT,[E.SWIFT]:p.COMMON,[E.AMNESIA]:p.COMMON,[E.DREAM_EATER]:p.GREAT,[E.LEECH_LIFE]:p.ULTRA,[E.FLASH]:p.COMMON,[E.EXPLOSION]:p.GREAT,[E.REST]:p.COMMON,[E.ROCK_SLIDE]:p.GREAT,[E.TRI_ATTACK]:p.ULTRA,[E.SUPER_FANG]:p.COMMON,[E.SUBSTITUTE]:p.COMMON,[E.THIEF]:p.GREAT,[E.SNORE]:p.COMMON,[E.CURSE]:p.COMMON,[E.REVERSAL]:p.COMMON,[E.SPITE]:p.COMMON,[E.PROTECT]:p.COMMON,[E.SCARY_FACE]:p.COMMON,[E.SLUDGE_BOMB]:p.GREAT,[E.MUD_SLAP]:p.COMMON,[E.SPIKES]:p.COMMON,[E.ICY_WIND]:p.GREAT,[E.OUTRAGE]:p.ULTRA,[E.SANDSTORM]:p.COMMON,[E.GIGA_DRAIN]:p.ULTRA,[E.ENDURE]:p.COMMON,[E.CHARM]:p.COMMON,[E.FALSE_SWIPE]:p.COMMON,[E.SWAGGER]:p.COMMON,[E.STEEL_WING]:p.GREAT,[E.ATTRACT]:p.COMMON,[E.SLEEP_TALK]:p.COMMON,[E.HEAL_BELL]:p.COMMON,[E.RETURN]:p.ULTRA,[E.FRUSTRATION]:p.COMMON,[E.SAFEGUARD]:p.COMMON,[E.PAIN_SPLIT]:p.COMMON,[E.MEGAHORN]:p.ULTRA,[E.BATON_PASS]:p.COMMON,[E.ENCORE]:p.COMMON,[E.IRON_TAIL]:p.GREAT,[E.METAL_CLAW]:p.COMMON,[E.SYNTHESIS]:p.GREAT,[E.HIDDEN_POWER]:p.GREAT,[E.RAIN_DANCE]:p.COMMON,[E.SUNNY_DAY]:p.COMMON,[E.CRUNCH]:p.GREAT,[E.PSYCH_UP]:p.COMMON,[E.SHADOW_BALL]:p.ULTRA,[E.FUTURE_SIGHT]:p.GREAT,[E.ROCK_SMASH]:p.COMMON,[E.WHIRLPOOL]:p.COMMON,[E.BEAT_UP]:p.COMMON,[E.UPROAR]:p.GREAT,[E.HEAT_WAVE]:p.ULTRA,[E.HAIL]:p.COMMON,[E.TORMENT]:p.COMMON,[E.WILL_O_WISP]:p.COMMON,[E.FACADE]:p.GREAT,[E.FOCUS_PUNCH]:p.COMMON,[E.NATURE_POWER]:p.COMMON,[E.CHARGE]:p.COMMON,[E.TAUNT]:p.COMMON,[E.HELPING_HAND]:p.COMMON,[E.TRICK]:p.COMMON,[E.SUPERPOWER]:p.ULTRA,[E.RECYCLE]:p.COMMON,[E.REVENGE]:p.GREAT,[E.BRICK_BREAK]:p.GREAT,[E.KNOCK_OFF]:p.GREAT,[E.ENDEAVOR]:p.COMMON,[E.SKILL_SWAP]:p.COMMON,[E.IMPRISON]:p.COMMON,[E.SECRET_POWER]:p.COMMON,[E.DIVE]:p.GREAT,[E.FEATHER_DANCE]:p.COMMON,[E.BLAZE_KICK]:p.GREAT,[E.HYPER_VOICE]:p.ULTRA,[E.BLAST_BURN]:p.ULTRA,[E.HYDRO_CANNON]:p.ULTRA,[E.WEATHER_BALL]:p.COMMON,[E.FAKE_TEARS]:p.COMMON,[E.AIR_CUTTER]:p.GREAT,[E.OVERHEAT]:p.ULTRA,[E.ROCK_TOMB]:p.GREAT,[E.METAL_SOUND]:p.COMMON,[E.COSMIC_POWER]:p.COMMON,[E.SIGNAL_BEAM]:p.GREAT,[E.SAND_TOMB]:p.COMMON,[E.MUDDY_WATER]:p.GREAT,[E.BULLET_SEED]:p.GREAT,[E.AERIAL_ACE]:p.GREAT,[E.ICICLE_SPEAR]:p.GREAT,[E.IRON_DEFENSE]:p.GREAT,[E.DRAGON_CLAW]:p.ULTRA,[E.FRENZY_PLANT]:p.ULTRA,[E.BULK_UP]:p.COMMON,[E.BOUNCE]:p.GREAT,[E.MUD_SHOT]:p.GREAT,[E.POISON_TAIL]:p.GREAT,[E.COVET]:p.GREAT,[E.MAGICAL_LEAF]:p.GREAT,[E.CALM_MIND]:p.GREAT,[E.LEAF_BLADE]:p.ULTRA,[E.DRAGON_DANCE]:p.GREAT,[E.ROCK_BLAST]:p.GREAT,[E.WATER_PULSE]:p.GREAT,[E.ROOST]:p.GREAT,[E.GRAVITY]:p.COMMON,[E.GYRO_BALL]:p.COMMON,[E.BRINE]:p.GREAT,[E.PLUCK]:p.GREAT,[E.TAILWIND]:p.GREAT,[E.U_TURN]:p.GREAT,[E.CLOSE_COMBAT]:p.ULTRA,[E.PAYBACK]:p.COMMON,[E.ASSURANCE]:p.COMMON,[E.EMBARGO]:p.COMMON,[E.FLING]:p.COMMON,[E.GASTRO_ACID]:p.GREAT,[E.POWER_SWAP]:p.COMMON,[E.GUARD_SWAP]:p.COMMON,[E.WORRY_SEED]:p.GREAT,[E.TOXIC_SPIKES]:p.GREAT,[E.FLARE_BLITZ]:p.ULTRA,[E.AURA_SPHERE]:p.GREAT,[E.ROCK_POLISH]:p.COMMON,[E.POISON_JAB]:p.GREAT,[E.DARK_PULSE]:p.GREAT,[E.AQUA_TAIL]:p.GREAT,[E.SEED_BOMB]:p.GREAT,[E.AIR_SLASH]:p.GREAT,[E.X_SCISSOR]:p.GREAT,[E.BUG_BUZZ]:p.GREAT,[E.DRAGON_PULSE]:p.GREAT,[E.POWER_GEM]:p.GREAT,[E.DRAIN_PUNCH]:p.GREAT,[E.VACUUM_WAVE]:p.COMMON,[E.FOCUS_BLAST]:p.GREAT,[E.ENERGY_BALL]:p.GREAT,[E.BRAVE_BIRD]:p.ULTRA,[E.EARTH_POWER]:p.ULTRA,[E.GIGA_IMPACT]:p.GREAT,[E.NASTY_PLOT]:p.COMMON,[E.AVALANCHE]:p.GREAT,[E.SHADOW_CLAW]:p.GREAT,[E.THUNDER_FANG]:p.GREAT,[E.ICE_FANG]:p.GREAT,[E.FIRE_FANG]:p.GREAT,[E.PSYCHO_CUT]:p.GREAT,[E.ZEN_HEADBUTT]:p.GREAT,[E.FLASH_CANNON]:p.GREAT,[E.ROCK_CLIMB]:p.GREAT,[E.DEFOG]:p.COMMON,[E.TRICK_ROOM]:p.COMMON,[E.DRACO_METEOR]:p.ULTRA,[E.LEAF_STORM]:p.ULTRA,[E.POWER_WHIP]:p.ULTRA,[E.CROSS_POISON]:p.GREAT,[E.GUNK_SHOT]:p.ULTRA,[E.IRON_HEAD]:p.GREAT,[E.STONE_EDGE]:p.ULTRA,[E.STEALTH_ROCK]:p.COMMON,[E.GRASS_KNOT]:p.ULTRA,[E.BUG_BITE]:p.GREAT,[E.CHARGE_BEAM]:p.GREAT,[E.HONE_CLAWS]:p.COMMON,[E.WONDER_ROOM]:p.COMMON,[E.PSYSHOCK]:p.GREAT,[E.VENOSHOCK]:p.GREAT,[E.MAGIC_ROOM]:p.COMMON,[E.SMACK_DOWN]:p.COMMON,[E.SLUDGE_WAVE]:p.GREAT,[E.HEAVY_SLAM]:p.GREAT,[E.ELECTRO_BALL]:p.GREAT,[E.FLAME_CHARGE]:p.GREAT,[E.LOW_SWEEP]:p.GREAT,[E.ACID_SPRAY]:p.COMMON,[E.FOUL_PLAY]:p.ULTRA,[E.ROUND]:p.COMMON,[E.ECHOED_VOICE]:p.COMMON,[E.STORED_POWER]:p.COMMON,[E.ALLY_SWITCH]:p.COMMON,[E.SCALD]:p.GREAT,[E.HEX]:p.GREAT,[E.SKY_DROP]:p.GREAT,[E.INCINERATE]:p.GREAT,[E.QUASH]:p.COMMON,[E.ACROBATICS]:p.GREAT,[E.RETALIATE]:p.GREAT,[E.WATER_PLEDGE]:p.GREAT,[E.FIRE_PLEDGE]:p.GREAT,[E.GRASS_PLEDGE]:p.GREAT,[E.VOLT_SWITCH]:p.GREAT,[E.STRUGGLE_BUG]:p.COMMON,[E.BULLDOZE]:p.GREAT,[E.FROST_BREATH]:p.GREAT,[E.DRAGON_TAIL]:p.GREAT,[E.WORK_UP]:p.COMMON,[E.ELECTROWEB]:p.GREAT,[E.WILD_CHARGE]:p.GREAT,[E.DRILL_RUN]:p.GREAT,[E.RAZOR_SHELL]:p.GREAT,[E.HEAT_CRASH]:p.GREAT,[E.TAIL_SLAP]:p.GREAT,[E.HURRICANE]:p.ULTRA,[E.SNARL]:p.COMMON,[E.PHANTOM_FORCE]:p.ULTRA,[E.PETAL_BLIZZARD]:p.GREAT,[E.DISARMING_VOICE]:p.GREAT,[E.DRAINING_KISS]:p.GREAT,[E.GRASSY_TERRAIN]:p.COMMON,[E.MISTY_TERRAIN]:p.COMMON,[E.PLAY_ROUGH]:p.GREAT,[E.CONFIDE]:p.COMMON,[E.MYSTICAL_FIRE]:p.GREAT,[E.EERIE_IMPULSE]:p.COMMON,[E.VENOM_DRENCH]:p.COMMON,[E.ELECTRIC_TERRAIN]:p.COMMON,[E.DAZZLING_GLEAM]:p.ULTRA,[E.INFESTATION]:p.COMMON,[E.POWER_UP_PUNCH]:p.GREAT,[E.DARKEST_LARIAT]:p.GREAT,[E.HIGH_HORSEPOWER]:p.ULTRA,[E.SOLAR_BLADE]:p.GREAT,[E.THROAT_CHOP]:p.GREAT,[E.POLLEN_PUFF]:p.GREAT,[E.PSYCHIC_TERRAIN]:p.COMMON,[E.LUNGE]:p.GREAT,[E.SPEED_SWAP]:p.COMMON,[E.SMART_STRIKE]:p.GREAT,[E.BRUTAL_SWING]:p.GREAT,[E.AURORA_VEIL]:p.COMMON,[E.PSYCHIC_FANGS]:p.GREAT,[E.STOMPING_TANTRUM]:p.GREAT,[E.LIQUIDATION]:p.ULTRA,[E.BODY_PRESS]:p.ULTRA,[E.BREAKING_SWIPE]:p.GREAT,[E.STEEL_BEAM]:p.ULTRA,[E.EXPANDING_FORCE]:p.GREAT,[E.STEEL_ROLLER]:p.COMMON,[E.SCALE_SHOT]:p.ULTRA,[E.METEOR_BEAM]:p.GREAT,[E.MISTY_EXPLOSION]:p.COMMON,[E.GRASSY_GLIDE]:p.COMMON,[E.RISING_VOLTAGE]:p.COMMON,[E.TERRAIN_PULSE]:p.COMMON,[E.SKITTER_SMACK]:p.GREAT,[E.BURNING_JEALOUSY]:p.GREAT,[E.LASH_OUT]:p.GREAT,[E.POLTERGEIST]:p.ULTRA,[E.CORROSIVE_GAS]:p.COMMON,[E.COACHING]:p.COMMON,[E.FLIP_TURN]:p.COMMON,[E.TRIPLE_AXEL]:p.COMMON,[E.DUAL_WINGBEAT]:p.COMMON,[E.SCORCHING_SANDS]:p.GREAT,[E.TERA_BLAST]:p.GREAT,[E.ICE_SPINNER]:p.GREAT,[E.SNOWSCAPE]:p.COMMON,[E.POUNCE]:p.COMMON,[E.TRAILBLAZE]:p.COMMON,[E.CHILLING_WATER]:p.COMMON,[E.HARD_PRESS]:p.GREAT,[E.DRAGON_CHEER]:p.COMMON,[E.ALLURING_VOICE]:p.GREAT,[E.TEMPER_FLARE]:p.GREAT,[E.SUPERCELL_SLAM]:p.GREAT,[E.PSYCHIC_NOISE]:p.GREAT,[E.UPPER_HAND]:p.COMMON},Ai={blue_red_double:{encounter:["doubleBattleDialogue:blue_red_double.encounter.1"],victory:["doubleBattleDialogue:blue_red_double.victory.1"]},red_blue_double:{encounter:["doubleBattleDialogue:red_blue_double.encounter.1"],victory:["doubleBattleDialogue:red_blue_double.victory.1"]},tate_liza_double:{encounter:["doubleBattleDialogue:tate_liza_double.encounter.1"],victory:["doubleBattleDialogue:tate_liza_double.victory.1"]},liza_tate_double:{encounter:["doubleBattleDialogue:liza_tate_double.encounter.1"],victory:["doubleBattleDialogue:liza_tate_double.victory.1"]},wallace_steven_double:{encounter:["doubleBattleDialogue:wallace_steven_double.encounter.1"],victory:["doubleBattleDialogue:wallace_steven_double.victory.1"]},steven_wallace_double:{encounter:["doubleBattleDialogue:steven_wallace_double.encounter.1"],victory:["doubleBattleDialogue:steven_wallace_double.victory.1"]},alder_iris_double:{encounter:["doubleBattleDialogue:alder_iris_double.encounter.1"],victory:["doubleBattleDialogue:alder_iris_double.victory.1"]},iris_alder_double:{encounter:["doubleBattleDialogue:iris_alder_double.encounter.1"],victory:["doubleBattleDialogue:iris_alder_double.victory.1"]},marnie_piers_double:{encounter:["doubleBattleDialogue:marnie_piers_double.encounter.1"],victory:["doubleBattleDialogue:marnie_piers_double.victory.1"]},piers_marnie_double:{encounter:["doubleBattleDialogue:piers_marnie_double.encounter.1"],victory:["doubleBattleDialogue:piers_marnie_double.victory.1"]}};var PE=(R=>(R[R.DEFAULT=0]="DEFAULT",R[R.FEMALE=1]="FEMALE",R[R.DOUBLE=2]="DOUBLE",R))(PE||{});const fA=new Proxy({BROCK:[A.ONIX,A.GEODUDE,[A.OMANYTE,A.KABUTO],A.AERODACTYL],MISTY:[A.STARYU,A.PSYDUCK,A.WOOPER,A.LAPRAS],LT_SURGE:[A.PICHU,A.VOLTORB,A.ELEKID,A.JOLTEON],ERIKA:[A.ODDISH,A.BELLSPROUT,A.TANGELA,A.HOPPIP],JANINE:[A.VENONAT,A.SPINARAK,A.ZUBAT,A.KOFFING],SABRINA:[A.ABRA,A.MR_MIME,A.SMOOCHUM,A.ESPEON],BLAINE:[A.GROWLITHE,A.PONYTA,A.MAGBY,A.VULPIX],GIOVANNI:[A.RHYHORN,A.MEOWTH,[A.NIDORAN_F,A.NIDORAN_M],A.DIGLETT],FALKNER:[A.PIDGEY,A.HOOTHOOT,A.NATU,A.MURKROW],BUGSY:[A.SCYTHER,A.SHUCKLE,A.YANMA,[A.PINSIR,A.HERACROSS]],WHITNEY:[A.MILTANK,A.AIPOM,A.IGGLYBUFF,[A.GIRAFARIG,A.STANTLER]],MORTY:[A.GASTLY,A.MISDREAVUS,A.DUSKULL,A.SABLEYE],CHUCK:[A.POLIWRATH,A.MANKEY,A.TYROGUE,A.MACHOP],JASMINE:[A.STEELIX,A.MAGNEMITE,A.PINECO,A.SKARMORY],PRYCE:[A.SWINUB,A.SEEL,A.SHELLDER,A.SNEASEL],CLAIR:[A.HORSEA,A.DRATINI,A.MAGIKARP,A.DRUDDIGON],ROXANNE:[A.NOSEPASS,A.GEODUDE,[A.LILEEP,A.ANORITH],A.ARON],BRAWLY:[A.MAKUHITA,A.MACHOP,A.MEDITITE,A.SHROOMISH],WATTSON:[A.ELECTRIKE,A.VOLTORB,A.MAGNEMITE,[A.PLUSLE,A.MINUN]],FLANNERY:[A.TORKOAL,A.SLUGMA,A.NUMEL,A.HOUNDOUR],NORMAN:[A.SLAKOTH,A.KECLEON,A.WHISMUR,A.ZANGOOSE],WINONA:[A.SWABLU,A.WINGULL,A.TROPIUS,A.SKARMORY],TATE:[A.SOLROCK,A.NATU,A.CHINGLING,A.GALLADE],LIZA:[A.LUNATONE,A.BALTOY,A.SPOINK,A.GARDEVOIR],JUAN:[A.HORSEA,A.SPHEAL,A.BARBOACH,A.CORPHISH],ROARK:[A.CRANIDOS,A.GEODUDE,A.NOSEPASS,A.LARVITAR],GARDENIA:[A.BUDEW,A.CHERUBI,A.TURTWIG,A.LEAFEON],MAYLENE:[A.RIOLU,A.MEDITITE,A.CHIMCHAR,A.CROAGUNK],CRASHER_WAKE:[A.BUIZEL,A.WOOPER,A.PIPLUP,A.MAGIKARP],FANTINA:[A.MISDREAVUS,A.DRIFLOON,A.DUSKULL,A.SPIRITOMB],BYRON:[A.SHIELDON,A.BRONZOR,A.ARON,A.SKARMORY],CANDICE:[A.FROSLASS,A.SNOVER,A.SNEASEL,A.GLACEON],VOLKNER:[A.ELEKID,A.SHINX,A.CHINCHOU,A.ROTOM],CILAN:[A.PANSAGE,A.SNIVY,A.MARACTUS,A.FERROSEED],CHILI:[A.PANSEAR,A.TEPIG,A.HEATMOR,A.DARUMAKA],CRESS:[A.PANPOUR,A.OSHAWOTT,A.BASCULIN,A.TYMPOLE],CHEREN:[A.LILLIPUP,A.MINCCINO,A.PIDOVE,A.BOUFFALANT],LENORA:[A.PATRAT,A.DEERLING,A.AUDINO,A.BRAVIARY],ROXIE:[A.VENIPEDE,A.KOFFING,A.TRUBBISH,A.TOXEL],BURGH:[A.SEWADDLE,A.DWEBBLE,[A.KARRABLAST,A.SHELMET],A.DURANT],ELESA:[A.BLITZLE,A.EMOLGA,A.JOLTIK,A.TYNAMO],CLAY:[A.DRILBUR,A.SANDILE,A.TYMPOLE,A.GOLETT],SKYLA:[A.DUCKLETT,A.WOOBAT,[A.RUFFLET,A.VULLABY],A.ARCHEN],BRYCEN:[A.CRYOGONAL,A.VANILLITE,A.CUBCHOO,A.GALAR_DARUMAKA],DRAYDEN:[A.AXEW,A.DRUDDIGON,A.TRAPINCH,A.DEINO],MARLON:[A.FRILLISH,A.TIRTOUGA,A.WAILMER,A.MANTYKE],VIOLA:[A.SCATTERBUG,A.SURSKIT,A.CUTIEFLY,A.BLIPBUG],GRANT:[A.TYRUNT,A.AMAURA,A.BINACLE,A.DWEBBLE],KORRINA:[A.RIOLU,A.MIENFOO,A.HAWLUCHA,A.PANCHAM],RAMOS:[A.SKIDDO,A.HOPPIP,A.BELLSPROUT,[A.PHANTUMP,A.PUMPKABOO]],CLEMONT:[A.HELIOPTILE,A.MAGNEMITE,A.DEDENNE,A.ROTOM],VALERIE:[A.SYLVEON,A.MAWILE,A.MR_MIME,[A.SPRITZEE,A.SWIRLIX]],OLYMPIA:[A.ESPURR,A.SIGILYPH,A.INKAY,A.SLOWKING],WULFRIC:[A.BERGMITE,A.SNOVER,A.CRYOGONAL,A.SWINUB],MILO:[A.GOSSIFLEUR,A.SEEDOT,A.APPLIN,A.LOTAD],NESSA:[A.CHEWTLE,A.WIMPOD,A.ARROKUDA,A.MAREANIE],KABU:[A.SIZZLIPEDE,A.VULPIX,A.GROWLITHE,A.TORKOAL],BEA:[A.MACHOP,A.GALAR_FARFETCHD,A.CLOBBOPUS,A.FALINKS],ALLISTER:[A.GASTLY,A.GALAR_YAMASK,A.GALAR_CORSOLA,A.SINISTEA],OPAL:[A.MILCERY,A.GALAR_WEEZING,A.TOGEPI,A.MAWILE],BEDE:[A.HATENNA,A.GALAR_PONYTA,A.GARDEVOIR,A.SYLVEON],GORDIE:[A.ROLYCOLY,[A.SHUCKLE,A.BINACLE],A.STONJOURNER,A.LARVITAR],MELONY:[A.LAPRAS,A.SNOM,A.EISCUE,[A.GALAR_MR_MIME,A.GALAR_DARUMAKA]],PIERS:[A.GALAR_ZIGZAGOON,A.SCRAGGY,A.TOXEL,A.INKAY],MARNIE:[A.IMPIDIMP,A.MORPEKO,A.PURRLOIN,A.CROAGUNK],RAIHAN:[A.DURALUDON,A.TRAPINCH,A.GOOMY,A.TURTONATOR],KATY:[A.TEDDIURSA,A.NYMBLE,A.TAROUNTULA,A.RELLOR],BRASSIUS:[A.BONSLY,A.SMOLIV,A.BRAMBLIN,A.SUNKERN],IONO:[A.MISDREAVUS,A.TADBULB,A.WATTREL,A.MAGNEMITE],KOFU:[A.CRABRAWLER,A.VELUZA,A.WIGLETT,A.WINGULL],LARRY:[A.STARLY,A.DUNSPARCE,A.LECHONK,A.KOMALA],RYME:[A.TOXEL,A.GREAVARD,A.SHUPPET,A.MIMIKYU],TULIP:[A.FLABEBE,A.FLITTLE,A.RALTS,A.GIRAFARIG],GRUSHA:[A.SWABLU,A.CETODDLE,A.SNOM,A.CUBCHOO]},{get(R,e){return R[e]??[]}}),S6=aE.STARTING_WAVE_OVERRIDE||1;var qi=(R=>(R[R.CLASSIC=0]="CLASSIC",R[R.ENDLESS=1]="ENDLESS",R[R.SPLICED_ENDLESS=2]="SPLICED_ENDLESS",R[R.DAILY=3]="DAILY",R[R.CHALLENGE=4]="CHALLENGE",R))(qi||{}),NE=(R=>(R[R.TOWN_YOUNGSTER=5]="TOWN_YOUNGSTER",R[R.RIVAL_1=8]="RIVAL_1",R[R.RIVAL_2=25]="RIVAL_2",R[R.EVIL_GRUNT_1=35]="EVIL_GRUNT_1",R[R.RIVAL_3=55]="RIVAL_3",R[R.EVIL_GRUNT_2=62]="EVIL_GRUNT_2",R[R.EVIL_GRUNT_3=64]="EVIL_GRUNT_3",R[R.EVIL_ADMIN_1=66]="EVIL_ADMIN_1",R[R.RIVAL_4=95]="RIVAL_4",R[R.EVIL_GRUNT_4=112]="EVIL_GRUNT_4",R[R.EVIL_ADMIN_2=114]="EVIL_ADMIN_2",R[R.EVIL_BOSS_1=115]="EVIL_BOSS_1",R[R.RIVAL_5=145]="RIVAL_5",R[R.EVIL_BOSS_2=165]="EVIL_BOSS_2",R[R.ELITE_FOUR_1=182]="ELITE_FOUR_1",R[R.ELITE_FOUR_2=184]="ELITE_FOUR_2",R[R.ELITE_FOUR_3=186]="ELITE_FOUR_3",R[R.ELITE_FOUR_4=188]="ELITE_FOUR_4",R[R.CHAMPION=190]="CHAMPION",R[R.RIVAL_6=195]="RIVAL_6",R))(NE||{});const RK=class RK{constructor(e,I,L,N){this.size=e,this.strength=I,this.sameSpecies=!!L,this.balanced=!!N}getStrength(e){return this.strength}isSameSpecies(e){return this.sameSpecies}isBalanced(e){return this.balanced}};r(RK,"TrainerPartyTemplate");let dA=RK;const OK=class OK extends dA{constructor(...e){super(e.reduce((I,L)=>(I+=L.size,I),0),HA.AVERAGE),this.templates=e}getStrength(e){let I=0;for(const L of this.templates){if(I+L.size>e)return L.getStrength(e-I);I+=L.size}return super.getStrength(e)}isSameSpecies(e){let I=0;for(const L of this.templates){if(I+L.size>e)return L.isSameSpecies(e-I);I+=L.size}return super.isSameSpecies(e)}isBalanced(e){let I=0;for(const L of this.templates){if(I+L.size>e)return L.isBalanced(e-I);I+=L.size}return super.isBalanced(e)}};r(OK,"TrainerPartyCompoundTemplate");let Oe=OK;const PA={ONE_WEAK_ONE_STRONG:new Oe(new dA(1,HA.WEAK),new dA(1,HA.STRONG)),ONE_AVG:new dA(1,HA.AVERAGE),ONE_AVG_ONE_STRONG:new Oe(new dA(1,HA.AVERAGE),new dA(1,HA.STRONG)),ONE_STRONG:new dA(1,HA.STRONG),ONE_STRONGER:new dA(1,HA.STRONGER),TWO_WEAKER:new dA(2,HA.WEAKER),TWO_WEAK:new dA(2,HA.WEAK),TWO_WEAK_ONE_AVG:new Oe(new dA(2,HA.WEAK),new dA(1,HA.AVERAGE)),TWO_WEAK_SAME_ONE_AVG:new Oe(new dA(2,HA.WEAK,!0),new dA(1,HA.AVERAGE)),TWO_WEAK_SAME_TWO_WEAK_SAME:new Oe(new dA(2,HA.WEAK,!0),new dA(2,HA.WEAK,!0)),TWO_WEAK_ONE_STRONG:new Oe(new dA(2,HA.WEAK),new dA(1,HA.STRONG)),TWO_AVG:new dA(2,HA.AVERAGE),TWO_AVG_ONE_STRONG:new Oe(new dA(2,HA.AVERAGE),new dA(1,HA.STRONG)),TWO_AVG_SAME_ONE_AVG:new Oe(new dA(2,HA.AVERAGE,!0),new dA(1,HA.AVERAGE)),TWO_AVG_SAME_ONE_STRONG:new Oe(new dA(2,HA.AVERAGE,!0),new dA(1,HA.STRONG)),TWO_AVG_SAME_TWO_AVG_SAME:new Oe(new dA(2,HA.AVERAGE,!0),new dA(2,HA.AVERAGE,!0)),TWO_STRONG:new dA(2,HA.STRONG),THREE_WEAK:new dA(3,HA.WEAK),THREE_WEAK_SAME:new dA(3,HA.WEAK,!0),THREE_AVG:new dA(3,HA.AVERAGE),THREE_AVG_SAME:new dA(3,HA.AVERAGE,!0),THREE_WEAK_BALANCED:new dA(3,HA.WEAK,!1,!0),FOUR_WEAKER:new dA(4,HA.WEAKER),FOUR_WEAKER_SAME:new dA(4,HA.WEAKER,!0),FOUR_WEAK:new dA(4,HA.WEAK),FOUR_WEAK_SAME:new dA(4,HA.WEAK,!0),FOUR_WEAK_BALANCED:new dA(4,HA.WEAK,!1,!0),FIVE_WEAKER:new dA(5,HA.WEAKER),FIVE_WEAK:new dA(5,HA.WEAK),FIVE_WEAK_BALANCED:new dA(5,HA.WEAK,!1,!0),SIX_WEAKER:new dA(6,HA.WEAKER),SIX_WEAKER_SAME:new dA(6,HA.WEAKER,!0),SIX_WEAK_SAME:new dA(6,HA.WEAK,!0),SIX_WEAK_BALANCED:new dA(6,HA.WEAK,!1,!0),GYM_LEADER_1:new Oe(new dA(1,HA.AVERAGE),new dA(1,HA.STRONG)),GYM_LEADER_2:new Oe(new dA(1,HA.AVERAGE),new dA(1,HA.STRONG),new dA(1,HA.STRONGER)),GYM_LEADER_3:new Oe(new dA(2,HA.AVERAGE),new dA(1,HA.STRONG),new dA(1,HA.STRONGER)),GYM_LEADER_4:new Oe(new dA(3,HA.AVERAGE),new dA(1,HA.STRONG),new dA(1,HA.STRONGER)),GYM_LEADER_5:new Oe(new dA(3,HA.AVERAGE),new dA(2,HA.STRONG),new dA(1,HA.STRONGER)),ELITE_FOUR:new Oe(new dA(2,HA.AVERAGE),new dA(3,HA.STRONG),new dA(1,HA.STRONGER)),CHAMPION:new Oe(new dA(4,HA.STRONG),new dA(2,HA.STRONGER,!1,!0)),RIVAL:new Oe(new dA(1,HA.STRONG),new dA(1,HA.AVERAGE)),RIVAL_2:new Oe(new dA(1,HA.STRONG),new dA(1,HA.AVERAGE),new dA(1,HA.WEAK,!1,!0)),RIVAL_3:new Oe(new dA(1,HA.STRONG),new dA(1,HA.AVERAGE),new dA(1,HA.AVERAGE,!1,!0),new dA(1,HA.WEAK,!1,!0)),RIVAL_4:new Oe(new dA(1,HA.STRONG),new dA(1,HA.AVERAGE),new dA(2,HA.AVERAGE,!1,!0),new dA(1,HA.WEAK,!1,!0)),RIVAL_5:new Oe(new dA(1,HA.STRONG),new dA(1,HA.AVERAGE),new dA(3,HA.AVERAGE,!1,!0),new dA(1,HA.STRONG)),RIVAL_6:new Oe(new dA(1,HA.STRONG),new dA(1,HA.AVERAGE),new dA(3,HA.AVERAGE,!1,!0),new dA(1,HA.STRONGER))};function QE(){var e;const R=(e=T.currentBattle)==null?void 0:e.waveIndex;return R<=NE.EVIL_GRUNT_1?PA.TWO_AVG:R<=NE.EVIL_GRUNT_2?PA.THREE_AVG:R<=NE.EVIL_GRUNT_3?PA.TWO_AVG_ONE_STRONG:R<=NE.EVIL_ADMIN_1?PA.GYM_LEADER_4:PA.GYM_LEADER_5}r(QE,"getEvilGruntPartyTemplate");function DT(...R){const{currentBattle:e,gameMode:I}=T,L=I.getWaveForDifficulty((e==null?void 0:e.waveIndex)||S6,!0),N=Math.ceil((L-20)/30);return R[Phaser.Math.Clamp(N,0,R.length-1)]}r(DT,"getWavePartyTemplate");function T6(){const{currentBattle:R,gameMode:e}=T;switch(e.modeId){case qi.DAILY:return(R==null?void 0:R.waveIndex)<=20?PA.GYM_LEADER_2:PA.GYM_LEADER_3;case qi.CHALLENGE:case qi.CLASSIC:return(R==null?void 0:R.waveIndex)<=20?PA.GYM_LEADER_1:(R==null?void 0:R.waveIndex)<=30?PA.GYM_LEADER_2:(R==null?void 0:R.waveIndex)<=60?PA.GYM_LEADER_3:(R==null?void 0:R.waveIndex)<=90?PA.GYM_LEADER_4:PA.GYM_LEADER_5;default:return DT(PA.GYM_LEADER_1,PA.GYM_LEADER_2,PA.GYM_LEADER_3,PA.GYM_LEADER_4,PA.GYM_LEADER_5)}}r(T6,"getGymLeaderPartyTemplate");var oA=(R=>(R[R.COMMON=0]="COMMON",R[R.UNCOMMON=1]="UNCOMMON",R[R.RARE=2]="RARE",R[R.SUPER_RARE=3]="SUPER_RARE",R[R.ULTRA_RARE=4]="ULTRA_RARE",R))(oA||{});const s6={[oA.COMMON]:[A.RATTATA,A.SPEAROW,A.EKANS,A.VILEPLUME,A.DIGLETT,A.GROWLITHE,A.GRIMER,A.DROWZEE,A.VOLTORB,A.EXEGGCUTE,A.CUBONE,A.KOFFING,A.MAGIKARP,A.ZUBAT,A.ONIX,A.HOUNDOUR,A.MURKROW],[oA.UNCOMMON]:[A.ABRA,A.GASTLY,A.OMANYTE,A.KABUTO,A.PORYGON,A.MANKEY,A.SCYTHER,A.ELEKID,A.MAGBY,A.ALOLA_SANDSHREW,A.ALOLA_MEOWTH,A.ALOLA_GEODUDE,A.ALOLA_GRIMER,A.PALDEA_TAUROS],[oA.RARE]:[A.DRATINI,A.LARVITAR]},a6={[oA.COMMON]:[A.DIGLETT,A.GROWLITHE,A.VULPIX,A.KOFFING,A.RHYHORN,A.SLUGMA,A.HOUNDOUR,A.POOCHYENA,A.TORKOAL,A.ZANGOOSE,A.SOLROCK,A.BALTOY,A.ROLYCOLY],[oA.UNCOMMON]:[A.MAGBY,A.TRAPINCH,A.LILEEP,A.ANORITH,A.GOLETT,A.FLETCHLING,A.SALANDIT,A.TURTONATOR,A.TOEDSCOOL,A.CAPSAKID,A.HISUI_GROWLITHE],[oA.RARE]:[A.CHARCADET,A.ARON]},n6={[oA.COMMON]:[A.TENTACOOL,A.GRIMER,A.AZURILL,A.CHINCHOU,A.REMORAID,A.POOCHYENA,A.LOTAD,A.WINGULL,A.WAILMER,A.SEVIPER,A.BARBOACH,A.CORPHISH,A.SPHEAL,A.CLAMPERL],[oA.UNCOMMON]:[A.MANTYKE,A.HORSEA,A.FEEBAS,A.TYMPOLE,A.SKRELP,A.WIMPOD,A.DHELMISE,A.ARROKUDA,A.CLOBBOPUS,A.HISUI_QWILFISH,A.WIGLETT],[oA.RARE]:[A.BASCULEGION,A.DONDOZO]},r6={[oA.COMMON]:[A.ZUBAT,A.MAGNEMITE,A.RHYHORN,A.TANGELA,A.LICKITUNG,A.MAGIKARP,A.YANMA,A.MURKROW,A.SWINUB,A.ELEKID,A.MAGBY,A.BRONZOR,A.SKORUPI],[oA.UNCOMMON]:[A.ABRA,A.GLIGAR,A.SNEASEL,A.DUSKULL,A.DRIFLOON,A.CRANIDOS,A.SHIELDON,A.ROTOM,A.HISUI_QWILFISH],[oA.RARE]:[A.SPIRITOMB,A.TEDDIURSA,A.HISUI_SNEASEL,A.HISUI_LILLIGANT]},i6={[oA.COMMON]:[A.SNEASEL,A.SWINUB,A.SNORUNT,A.SNOVER,A.TIMBURR,A.TYMPOLE,A.SANDILE,A.DARUMAKA,A.VANILLITE,A.FOONGUS,A.FRILLISH,A.JOLTIK,A.FERROSEED,A.CUBCHOO,A.GALAR_DARUMAKA],[oA.UNCOMMON]:[A.SPHEAL,A.DRILBUR,A.SIGILYPH,A.YAMASK,A.ZORUA,A.TYNAMO,A.MIENFOO,A.GOLETT,A.PAWNIARD,A.VULLABY,A.DURANT,A.BERGMITE,A.EISCUE,A.ALOLA_SANDSHREW,A.HISUI_ZORUA],[oA.RARE]:[A.DEINO,A.FRIGIBAX,A.HISUI_BRAVIARY]},C6={[oA.COMMON]:[A.MAGNEMITE,A.GRIMER,A.VOLTORB,A.PORYGON,A.BRONZOR,A.ROTOM,A.MUNNA,A.DWEBBLE,A.FERROSEED,A.ELGYEM],[oA.UNCOMMON]:[A.BELDUM,A.SIGILYPH,A.TIRTOUGA,A.ARCHEN,A.TYNAMO,A.GOLETT,A.BLIPBUG,A.VAROOM,A.ALOLA_GRIMER,A.HISUI_VOLTORB],[oA.RARE]:[A.ELEKID,A.MAGBY,A.PAWNIARD,A.DURALUDON]},U6={[oA.COMMON]:[A.ELECTRIKE,A.SKORUPI,A.PURRLOIN,A.FOONGUS,A.BUNNELBY,A.FLETCHLING,A.LITLEO,A.PANGORO,A.ESPURR,A.INKAY,A.CLAUNCHER,A.HELIOPTILE],[oA.UNCOMMON]:[A.HOUNDOUR,A.SNEASEL,A.LITWICK,A.HONEDGE,A.BINACLE,A.SKRELP,A.NOIBAT,A.PHANTUMP,A.PUMPKABOO],[oA.RARE]:[A.GOOMY,A.HISUI_AVALUGG]},o6={[oA.COMMON]:[A.ABRA,A.SLOWPOKE,A.MAGNEMITE,A.EXEGGUTOR,A.NATU,A.BALTOY,A.MIME_JR,A.ELGYEM,A.INKAY,A.BRUXISH,A.BLIPBUG,A.ALOLA_RAICHU],[oA.UNCOMMON]:[A.RALTS,A.MEDITITE,A.BELDUM,A.SOLOSIS,A.HATENNA,A.STANTLER,A.GIRAFARIG,A.ALOLA_GRIMER,A.GALAR_SLOWPOKE],[oA.RARE]:[A.PORYGON,A.ARMAROUGE]},M6={[oA.COMMON]:[A.GASTLY,A.KOFFING,A.ZUBAT,A.VENONAT,A.STUNKY,A.CROAGUNK,A.VENIPEDE,A.SCRAGGY,A.MAREANIE,A.FOMANTIS,A.ALOLA_GRIMER],[oA.UNCOMMON]:[A.NIDORAN_F,A.SKORUPI,A.PAWNIARD,A.VULLABY,A.TOXEL,A.GLIMMET,A.PALDEA_WOOPER,A.GALAR_SLOWPOKE],[oA.RARE]:[A.SKRELP,A.HISUI_SNEASEL]},D6={[oA.COMMON]:[A.VULPIX,A.FEEBAS,A.MAWILE,A.FROSLASS,A.GOTHITA,A.FLABEBE,A.SALANDIT,A.TSAREENA,A.SINISTEA,A.HATENNA,A.INDEEDEE,A.GALAR_PONYTA],[oA.UNCOMMON]:[A.TOGEPI,A.VULLABY,A.MAREANIE,A.CUFANT,A.TINKATINK,A.ALOLA_VULPIX,A.GALAR_CORSOLA],[oA.RARE]:[A.APPLIN,A.HISUI_LILLIGANT]},l6={[oA.COMMON]:[A.MURKROW,A.SEEDOT,A.SABLEYE,A.CACNEA,A.STUNKY,A.SANDILE,A.INKAY,A.NYMBLE,A.MASCHIFF],[oA.UNCOMMON]:[A.UMBREON,A.CORPHISH,A.SNEASEL,A.ZORUA,A.IMPIDIMP,A.BOMBIRDIER,A.GALAR_ZIGZAGOON],[oA.RARE]:[A.DEINO,A.SPRIGATITO]},_6={[oA.COMMON]:[A.GROWLITHE,A.HOUNDOUR,A.NUMEL,A.TORKOAL,A.FLETCHLING,A.LITLEO,A.SIZZLIPEDE,A.ROLYCOLY,A.CAPSAKID],[oA.UNCOMMON]:[A.PONYTA,A.FLAREON,A.MAGBY,A.DARUMAKA,A.LITWICK,A.SALANDIT,A.TURTONATOR],[oA.RARE]:[A.LARVESTA,A.FUECOCO]},G6={[oA.COMMON]:[A.GRIMER,A.VENONAT,A.SEVIPER,A.STUNKY,A.FOONGUS,A.MAREANIE,A.TOXEL,A.GRAFAIAI,A.PALDEA_WOOPER],[oA.UNCOMMON]:[A.ZUBAT,A.GASTLY,A.SKRELP,A.OVERQWIL,A.ALOLA_GRIMER,A.GALAR_SLOWPOKE],[oA.RARE]:[A.GLIMMET,A.BULBASAUR]},P6={[oA.COMMON]:[A.IGGLYBUFF,A.AZURILL,A.COTTONEE,A.FLABEBE,A.KLEFKI,A.CUTIEFLY,A.HATENNA,A.TINKATINK],[oA.UNCOMMON]:[A.CLEFFA,A.TOGEPI,A.GARDEVOIR,A.SYLVEON,A.MIMIKYU,A.IMPIDIMP,A.ALOLA_VULPIX],[oA.RARE]:[A.GALAR_PONYTA,A.POPPLIO]},H6={[oA.COMMON]:[A.TYROGUE,A.SHROOMISH,A.MAKUHITA,A.RIOLU,A.CROAGUNK,A.SCRAGGY,A.MIENFOO,A.PASSIMIAN,A.PAWMI],[oA.UNCOMMON]:[A.MEDITITE,A.GALLADE,A.TIMBURR,A.HAWLUCHA,A.STUFFUL,A.FALINKS,A.FLAMIGO,A.PALDEA_TAUROS],[oA.RARE]:[A.JANGMO_O,A.QUAXLY]},u6={rocket:s6,magma:a6,aqua:n6,galactic:r6,plasma_zinzolin:i6,plasma_colress:C6,flare:U6,aether:o6,macro_cosmos:D6,skull:M6,star_dark:l6,star_fire:_6,star_poison:G6,star_fairy:P6,star_fighting:H6};var HN=(R=>(R[R.NO_TERA=0]="NO_TERA",R[R.INSTANT_TERA=1]="INSTANT_TERA",R[R.SMART_TERA=2]="SMART_TERA",R))(HN||{});const b2=460,c6=100,IK=class IK{constructor(e=HN.NO_TERA){this.teraMode=HN.NO_TERA,this.teraMode=e,this.instantTeras=[]}canTerastallize(){return this.teraMode!==HN.NO_TERA}setInstantTera(e){this.teraMode=HN.INSTANT_TERA,this.instantTeras.push(e)}};r(IK,"TrainerAI");let I0=IK;const yl=class yl{constructor(e,I){this.hasGenders=!1,this.hasDouble=!1,this.hasCharSprite=!1,this.doubleOnly=!1,this.moneyMultiplier=1,this.isBoss=!1,this.hasStaticParty=!1,this.useSameSeedForAllMembers=!1,this.genAIFuncs=[],this.modifierRewardFuncs=[],this.partyMemberFuncs={},this.hasVoucher=!1,this.encounterMessages=[],this.victoryMessages=[],this.defeatMessages=[],this.trainerType=e,this.trainerAI=new I0,this.name=WL(U[this.getDerivedType()]),this.battleBgm="battle_trainer",this.mixedBattleBgm="battle_trainer",this.victoryBgm="victory_trainer",this.partyTemplates=[PA.TWO_AVG],this.speciesFilter=L=>(I||!L.legendary&&!L.subLegendary&&!L.mythical)&&!L.isTrainerForbidden()}getKey(){return U[this.getDerivedType()].toString().toLowerCase()}getSpriteKey(e,I=!1){let L=this.getKey();return this.hasGenders&&(L+=`_${e?"f":"m"}`),this.trainerTypeDouble&&e&&I&&(L=U[this.getDerivedType(this.trainerTypeDouble)].toString().toLowerCase()),L}setName(e){return e==="Finn"&&(_O()||sO(),e==="Finn"&&(e=_.t("trainerNames:rival"))),this.name=e,this}setHasVoucher(e){this.hasVoucher=e}setTitle(e){return _O()||sO(),e=e.toLowerCase().replace(/\s/g,"_"),this.title=_.t(`titles:${e}`),this}getDerivedType(e=null){let I=e||this.trainerType;switch(I){case U.RIVAL_2:case U.RIVAL_3:case U.RIVAL_4:case U.RIVAL_5:case U.RIVAL_6:I=U.RIVAL;break;case U.LANCE_CHAMPION:I=U.LANCE;break;case U.LARRY_ELITE:I=U.LARRY;break;case U.ROCKET_BOSS_GIOVANNI_1:case U.ROCKET_BOSS_GIOVANNI_2:I=U.GIOVANNI;break;case U.MAXIE_2:I=U.MAXIE;break;case U.ARCHIE_2:I=U.ARCHIE;break;case U.CYRUS_2:I=U.CYRUS;break;case U.GHETSIS_2:I=U.GHETSIS;break;case U.LYSANDRE_2:I=U.LYSANDRE;break;case U.LUSAMINE_2:I=U.LUSAMINE;break;case U.GUZMA_2:I=U.GUZMA;break;case U.ROSE_2:I=U.ROSE;break;case U.PENNY_2:I=U.PENNY;break;case U.MARNIE_ELITE:I=U.MARNIE;break;case U.NESSA_ELITE:I=U.NESSA;break;case U.BEA_ELITE:I=U.BEA;break;case U.ALLISTER_ELITE:I=U.ALLISTER;break;case U.RAIHAN_ELITE:I=U.RAIHAN;break}return I}setHasGenders(e,I){return e==="Ivy"?(_O()||sO(),this.nameFemale=_.t("trainerNames:rival_female")):this.nameFemale=e,this.hasGenders=!0,I&&(this.femaleEncounterBgm=typeof I=="number"?U[I].toString().replace(/_/g," ").toLowerCase():I),this}setHasDouble(e,I){return this.hasDouble=!0,this.nameDouble=e,I&&(this.doubleEncounterBgm=typeof I=="number"?U[I].toString().replace(/\_/g," ").toLowerCase():I),this}setDoubleTrainerType(e){return this.trainerTypeDouble=e,this.setDoubleMessages(this.nameDouble),this}setDoubleMessages(e){Ai[e]&&(this.doubleEncounterMessages=Ai[e].encounter,this.doubleVictoryMessages=Ai[e].victory,this.doubleDefeatMessages=Ai[e].defeat)}setDoubleTitle(e){return _O()||sO(),e=e.toLowerCase().replace(/\s/g,"_"),this.titleDouble=_.t(`titles:${e}`),this}setHasCharSprite(){return this.hasCharSprite=!0,this}setDoubleOnly(){return this.doubleOnly=!0,this}setMoneyMultiplier(e){return this.moneyMultiplier=e,this}setBoss(){return this.isBoss=!0,this}setStaticParty(){return this.hasStaticParty=!0,this}setUseSameSeedForAllMembers(){return this.useSameSeedForAllMembers=!0,this}setMixedBattleBgm(e){return this.mixedBattleBgm=e,this}setBattleBgm(e){return this.battleBgm=e,this}setEncounterBgm(e){return this.encounterBgm=typeof e=="number"?U[e].toString().toLowerCase():e,this}setVictoryBgm(e){return this.victoryBgm=e,this}setPartyTemplates(...e){return this.partyTemplates=e,this}setPartyTemplateFunc(e){return this.partyTemplateFunc=e,this}setPartyMemberFunc(e,I){return this.partyMemberFuncs[e]=I,this}setSpeciesPools(e){return this.speciesPools=Array.isArray(e)?{[oA.COMMON]:e}:e,this}setSpeciesFilter(e,I){const L=this.speciesFilter;return this.speciesFilter=I?e:N=>e(N)&&L(N),this}setSpecialtyType(e){return this.specialtyType=e,this}setGenModifiersFunc(e){return this.genModifiersFunc=e,this}setRandomTeraModifiers(e,I){return this.genAIFuncs.push(L=>{const N=!this.hasSpecialtyType()||this.specialtyType===t.BUG,S=new Array(L.length).fill(null).map((i,C)=>C).filter(i=>N||L[i].species.speciesId!==A.SHEDINJA),n=SA(I)?-1:Phaser.Math.Wrap(I,0,L.length);for(let i=0;i<Math.min(e(),L.length);i++){const C=S.indexOf(n)>-1?n:He(S);S.splice(S.indexOf(C),1),this.hasSpecialtyType()&&(L[C].teraType=this.specialtyType),this.trainerAI.setInstantTera(C)}}),this}setInstantTera(e){return this.trainerAI.setInstantTera(e),this}setModifierRewardFuncs(...e){return this.modifierRewardFuncs=e.map(I=>()=>{const L=I(),N=L();return N.withIdFromFunc(L),N}),this}initForEvilTeamAdmin(e,I,L,N){_O()||sO(),SA(N)||this.setSpecialtyType(N),this.setPartyTemplates(PA.RIVAL_5),this.speciesPools=u6[I],L.forEach((n,i)=>{this.setPartyMemberFunc(-(i+1),W(ue(n)))});const S=this.name.toLowerCase().replace(/\s/g,"_");return this.name=_.t(`trainerNames:${S}`),this.setHasVoucher(!1),this.setTitle(e),this.setMoneyMultiplier(1.5),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForStatTrainer(e=!1){_O()||sO(),this.setPartyTemplates(PA.ELITE_FOUR);const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=_.t(`trainerNames:${I}`),this.setMoneyMultiplier(2),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_trainer"),this.setVictoryBgm("victory_trainer"),this}initForEvilTeamLeader(e,I,L=!1,N){_O()||sO(),L?this.setPartyTemplates(PA.ELITE_FOUR):this.setPartyTemplates(PA.RIVAL_5),I.forEach((n,i)=>{this.setPartyMemberFunc(-(i+1),W(ue(n)))}),SA(N)||(this.setSpeciesFilter(n=>n.isOfType(N)),this.setSpecialtyType(N));const S=this.name.toLowerCase().replace(/\s/g,"_");return this.name=_.t(`trainerNames:${S}`),this.setTitle(e),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForGymLeader(e,I,L,N=!1,S){_O()||sO(),this.setPartyTemplateFunc(T6),e.forEach((i,C)=>{this.setPartyMemberFunc(-(C+1),W(ue(i)))}),this.setSpeciesFilter(i=>i.isOfType(L)),this.setSpecialtyType(L);const n=this.name.toLowerCase().replace(/\s/g,"_");return this.name=_.t(`trainerNames:${n}`),this.setTitle("gym_leader"),I||this.setTitle("gym_leader_female"),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_gym"),this.setVictoryBgm("victory_gym"),this.setRandomTeraModifiers(()=>N||T.currentBattle.waveIndex>=c6?1:0,S),this}initForEliteFour(e,I,L,N){_O()||sO(),this.setPartyTemplates(PA.ELITE_FOUR),e.forEach((n,i)=>{this.setPartyMemberFunc(-(i+1),W(ue(n)))}),SA(L)?this.setSpeciesFilter(n=>n.baseTotal>=b2):(this.setSpeciesFilter(n=>n.isOfType(L)&&n.baseTotal>=b2),this.setSpecialtyType(L));const S=this.name.toLowerCase().replace(/\s/g,"_");return this.name=_.t(`trainerNames:${S}`),this.setTitle("elite_four"),I||this.setTitle("elite_four_female"),this.setMoneyMultiplier(3.25),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_elite"),this.setVictoryBgm("victory_gym"),this.setRandomTeraModifiers(()=>1,N),this}initForChampion(e){_O()||sO(),this.setPartyTemplates(PA.CHAMPION);const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=_.t(`trainerNames:${I}`),this.setTitle("champion"),e||this.setTitle("champion_female"),this.setMoneyMultiplier(10),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_champion_alder"),this.setVictoryBgm("victory_champion"),this}setLocalizedName(e){return _O()||sO(),this.name=_.t(`trainerNames:${e.toLowerCase().replace(/\s/g,"_")}`),this}getTitle(e=v.NONE,I){const L=this.name;if(!e&&I===PE.DOUBLE&&this.nameDouble)return this.nameDouble;if(this.hasGenders){if(this.nameFemale){if(I===PE.FEMALE||I===PE.DOUBLE&&e===v.TRAINER_PARTNER)return this.nameFemale}else if(I&&(_O()||sO(),_.exists(`trainerClasses:${this.name.toLowerCase()}`)))return L+"_female"}return L}loadAssets(e){return new Promise(I=>{const L=e===PE.DOUBLE,N=this.getSpriteKey(e===PE.FEMALE,!1),S=this.getSpriteKey(!0,!0);T.loadAtlas(N,"trainer"),L&&T.loadAtlas(S,"trainer"),T.load.once(Phaser.Loader.Events.COMPLETE,()=>{const n=console.warn;console.warn=()=>{};const i=T.anims.generateFrameNames(N,{zeroPad:4,suffix:".png",start:1,end:128}),C=L?T.anims.generateFrameNames(S,{zeroPad:4,suffix:".png",start:1,end:128}):"";console.warn=n,T.anims.exists(N)||T.anims.create({key:N,frames:i,frameRate:24,repeat:-1}),L&&!T.anims.exists(S)&&T.anims.create({key:S,frames:C,frameRate:24,repeat:-1}),I()}),T.load.isLoading()||T.load.start()})}hasSpecialtyType(){return!SA(this.specialtyType)&&this.specialtyType!==t.UNKNOWN}clone(){var I,L,N,S,n,i,C,o,l;let e=new yl(this.trainerType);return e=this.trainerTypeDouble?e.setDoubleTrainerType(this.trainerTypeDouble):e,e=this.name?e.setName(this.name):e,e=this.hasGenders?e.setHasGenders(this.nameFemale,this.femaleEncounterBgm):e,e=this.hasDouble?e.setHasDouble(this.nameDouble,this.doubleEncounterBgm):e,e=this.title?e.setTitle(this.title):e,e=this.titleDouble?e.setDoubleTitle(this.titleDouble):e,e=this.hasCharSprite?e.setHasCharSprite():e,e=this.doubleOnly?e.setDoubleOnly():e,e=this.moneyMultiplier?e.setMoneyMultiplier(this.moneyMultiplier):e,e=this.isBoss?e.setBoss():e,e=this.hasStaticParty?e.setStaticParty():e,e=this.useSameSeedForAllMembers?e.setUseSameSeedForAllMembers():e,e=this.battleBgm?e.setBattleBgm(this.battleBgm):e,e=this.encounterBgm?e.setEncounterBgm(this.encounterBgm):e,e=this.victoryBgm?e.setVictoryBgm(this.victoryBgm):e,e=this.genModifiersFunc?e.setGenModifiersFunc(this.genModifiersFunc):e,this.modifierRewardFuncs&&(e.modifierRewardFuncs=this.modifierRewardFuncs.slice(0)),this.partyTemplates&&(e.partyTemplates=this.partyTemplates.slice(0)),e=this.partyTemplateFunc?e.setPartyTemplateFunc(this.partyTemplateFunc):e,this.partyMemberFuncs&&Object.keys(this.partyMemberFuncs).forEach(H=>{e=e.setPartyMemberFunc(Number.parseInt(H,10),this.partyMemberFuncs[H])}),e=this.speciesPools?e.setSpeciesPools(this.speciesPools):e,e=this.speciesFilter?e.setSpeciesFilter(this.speciesFilter):e,e.specialtyType=this.specialtyType,e.encounterMessages=(I=this.encounterMessages)==null?void 0:I.slice(0),e.victoryMessages=(L=this.victoryMessages)==null?void 0:L.slice(0),e.defeatMessages=(N=this.defeatMessages)==null?void 0:N.slice(0),e.femaleEncounterMessages=(S=this.femaleEncounterMessages)==null?void 0:S.slice(0),e.femaleVictoryMessages=(n=this.femaleVictoryMessages)==null?void 0:n.slice(0),e.femaleDefeatMessages=(i=this.femaleDefeatMessages)==null?void 0:i.slice(0),e.doubleEncounterMessages=(C=this.doubleEncounterMessages)==null?void 0:C.slice(0),e.doubleVictoryMessages=(o=this.doubleVictoryMessages)==null?void 0:o.slice(0),e.doubleDefeatMessages=(l=this.doubleDefeatMessages)==null?void 0:l.slice(0),e}};r(yl,"TrainerConfig");let z=yl,j=0;function W(R,e=v.TRAINER,I=!1,L){return(N,S)=>{let n=He(R);return I||(n=YA(n).getTrainerSpeciesForLevel(N,!0,S,T.currentBattle.waveIndex)),T.addEnemyPokemon(YA(n),N,e,void 0,!1,void 0,L)}}r(W,"getRandomPartyMemberFunc");function sT(R,e=v.TRAINER,I,L){const N=r(S=>!S.legendary&&!S.subLegendary&&!S.mythical&&!S.isTrainerForbidden()&&R(S),"speciesFilter");return(S,n)=>{const i=T.currentBattle.waveIndex,C=YA(T.randomSpecies(i,S,!1,N).getTrainerSpeciesForLevel(S,!0,n,i));return T.addEnemyPokemon(C,S,e,void 0,!1,void 0,L)}}r(sT,"getSpeciesFilterRandomPartyMemberFunc");const he={[U.UNKNOWN]:new z(0).setHasGenders(),[U.ACE_TRAINER]:new z(++j).setHasGenders("Ace Trainer Female").setHasDouble("Ace Duo").setMoneyMultiplier(2.25).setEncounterBgm(U.ACE_TRAINER).setPartyTemplateFunc(()=>DT(PA.THREE_WEAK_BALANCED,PA.FOUR_WEAK_BALANCED,PA.FIVE_WEAK_BALANCED,PA.SIX_WEAK_BALANCED)),[U.ARTIST]:new z(++j).setEncounterBgm(U.RICH).setPartyTemplates(PA.ONE_STRONG,PA.TWO_AVG,PA.THREE_AVG).setSpeciesPools([A.SMEARGLE]),[U.BACKERS]:new z(++j).setHasGenders("Backers").setDoubleOnly().setEncounterBgm(U.CYCLIST),[U.BACKPACKER]:new z(++j).setHasGenders("Backpacker Female").setHasDouble("Backpackers").setSpeciesFilter(R=>R.isOfType(t.FLYING)||R.isOfType(t.ROCK)).setEncounterBgm(U.BACKPACKER).setPartyTemplates(PA.ONE_STRONG,PA.ONE_WEAK_ONE_STRONG,PA.ONE_AVG_ONE_STRONG).setSpeciesPools({[oA.COMMON]:[A.RHYHORN,A.AIPOM,A.MAKUHITA,A.MAWILE,A.NUMEL,A.LILLIPUP,A.SANDILE,A.WOOLOO],[oA.UNCOMMON]:[A.GIRAFARIG,A.ZANGOOSE,A.SEVIPER,A.CUBCHOO,A.PANCHAM,A.SKIDDO,A.MUDBRAY],[oA.RARE]:[A.TAUROS,A.STANTLER,A.DARUMAKA,A.BOUFFALANT,A.DEERLING,A.IMPIDIMP],[oA.SUPER_RARE]:[A.GALAR_DARUMAKA,A.TEDDIURSA]}),[U.BAKER]:new z(++j).setEncounterBgm(U.CLERK).setMoneyMultiplier(1.35).setSpeciesFilter(R=>[R.ability1,R.ability2,R.abilityHidden].some(e=>!!e&&[O.WHITE_SMOKE,O.GLUTTONY,O.HONEY_GATHER,O.HARVEST,O.CHEEK_POUCH,O.SWEET_VEIL,O.RIPEN,O.PURIFYING_SALT,O.WELL_BAKED_BODY,O.SUPERSWEET_SYRUP,O.HOSPITALITY].includes(e))||R.getLevelMoves().some(e=>[E.SOFT_BOILED,E.SPORE,E.MILK_DRINK,E.OVERHEAT,E.TEATIME].includes(e[1]))),[U.BEAUTY]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(U.PARASOL_LADY).setPartyTemplates(PA.TWO_AVG_SAME_ONE_AVG,PA.TWO_AVG_SAME_ONE_STRONG,PA.THREE_AVG_SAME,PA.THREE_AVG,PA.FOUR_WEAK,PA.ONE_STRONG).setSpeciesPools({[oA.COMMON]:[A.MEOWTH,A.GOLDEEN,A.MAREEP,A.MARILL,A.SKITTY,A.GLAMEOW,A.PURRLOIN],[oA.UNCOMMON]:[A.SMOOCHUM,A.ROSELIA,A.LUVDISC,A.BLITZLE,A.SEWADDLE,A.PETILIL,A.MINCCINO,A.GOTHITA,A.SPRITZEE,A.FLITTLE],[oA.RARE]:[A.FEEBAS,A.FURFROU,A.SALANDIT,A.BRUXISH,A.HATENNA,A.SNOM,A.ALOLA_VULPIX],[oA.SUPER_RARE]:[A.CLAMPERL,A.AMAURA,A.SYLVEON,A.GOOMY,A.POPPLIO]}),[U.BIKER]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesPools({[oA.COMMON]:[A.EKANS,A.KOFFING,A.CROAGUNK,A.VENIPEDE,A.SCRAGGY],[oA.UNCOMMON]:[A.GRIMER,A.VOLTORB,A.TEDDIURSA,A.MAGBY,A.SKORUPI,A.SANDILE,A.PAWNIARD,A.SHROODLE],[oA.RARE]:[A.VAROOM,A.CYCLIZAR]}),[U.BLACK_BELT]:new z(++j).setHasGenders("Battle Girl",U.PSYCHIC).setHasDouble("Crush Kin").setEncounterBgm(U.ROUGHNECK).setSpecialtyType(t.FIGHTING).setPartyTemplates(PA.TWO_WEAK_ONE_AVG,PA.TWO_WEAK_ONE_AVG,PA.TWO_AVG,PA.TWO_AVG,PA.TWO_WEAK_ONE_STRONG,PA.THREE_AVG,PA.TWO_AVG_ONE_STRONG).setSpeciesPools({[oA.COMMON]:[A.NIDORAN_F,A.NIDORAN_M,A.MACHOP,A.MAKUHITA,A.MEDITITE,A.CROAGUNK,A.TIMBURR],[oA.UNCOMMON]:[A.MANKEY,A.POLIWRATH,A.TYROGUE,A.BRELOOM,A.SCRAGGY,A.MIENFOO,A.PANCHAM,A.STUFFUL,A.CRABRAWLER],[oA.RARE]:[A.HERACROSS,A.RIOLU,A.THROH,A.SAWK,A.PASSIMIAN,A.CLOBBOPUS],[oA.SUPER_RARE]:[A.HITMONTOP,A.INFERNAPE,A.GALLADE,A.HAWLUCHA,A.HAKAMO_O],[oA.ULTRA_RARE]:[A.KUBFU]}),[U.BREEDER]:new z(++j).setMoneyMultiplier(1.325).setEncounterBgm(U.POKEFAN).setHasGenders("Breeder Female").setHasDouble("Breeders").setPartyTemplateFunc(()=>DT(PA.FOUR_WEAKER,PA.FIVE_WEAKER,PA.SIX_WEAKER)).setSpeciesFilter(R=>R.baseTotal<450),[U.CLERK]:new z(++j).setHasGenders("Clerk Female").setHasDouble("Colleagues").setEncounterBgm(U.CLERK).setPartyTemplates(PA.TWO_WEAK,PA.THREE_WEAK,PA.ONE_AVG,PA.TWO_AVG,PA.TWO_WEAK_ONE_AVG).setSpeciesPools({[oA.COMMON]:[A.MEOWTH,A.PSYDUCK,A.BUDEW,A.PIDOVE,A.CINCCINO,A.LITLEO],[oA.UNCOMMON]:[A.JIGGLYPUFF,A.MAGNEMITE,A.MARILL,A.COTTONEE,A.SKIDDO],[oA.RARE]:[A.BUIZEL,A.SNEASEL,A.KLEFKI,A.INDEEDEE]}),[U.CYCLIST]:new z(++j).setMoneyMultiplier(1.3).setHasGenders("Cyclist Female").setHasDouble("Cyclists").setEncounterBgm(U.CYCLIST).setPartyTemplates(PA.TWO_WEAK,PA.ONE_AVG).setSpeciesPools({[oA.COMMON]:[A.DODUO,A.PICHU,A.TAILLOW,A.STARLY,A.PONYTA],[oA.UNCOMMON]:[A.ELECTRIKE,A.SHINX,A.BLITZLE,A.DUCKLETT,A.WATTREL],[oA.RARE]:[A.YANMA,A.NINJASK,A.WHIRLIPEDE,A.EMOLGA,A.SKIDDO],[oA.SUPER_RARE]:[A.ACCELGOR,A.DREEPY]}),[U.DANCER]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(U.CYCLIST).setPartyTemplates(PA.TWO_WEAK,PA.ONE_AVG,PA.TWO_AVG,PA.TWO_WEAK_SAME_TWO_WEAK_SAME).setSpeciesPools({[oA.COMMON]:[A.RALTS,A.SPOINK,A.LOTAD,A.BUDEW],[oA.UNCOMMON]:[A.SPINDA,A.SWABLU,A.MARACTUS],[oA.RARE]:[A.BELLOSSOM,A.HITMONTOP,A.MIME_JR,A.ORICORIO],[oA.SUPER_RARE]:[A.QUAXLY,A.JANGMO_O]}),[U.DEPOT_AGENT]:new z(++j).setMoneyMultiplier(1.45).setEncounterBgm(U.CLERK).setPartyTemplates(PA.TWO_AVG,PA.THREE_WEAK,PA.THREE_AVG,PA.FOUR_WEAK).setSpeciesFilter(R=>R.isOfType(t.GROUND)),[U.DOCTOR]:new z(++j).setHasGenders("Nurse","lass").setHasDouble("Medical Team").setMoneyMultiplier(3).setEncounterBgm(U.CLERK).setSpeciesFilter(R=>!!R.getLevelMoves().find(e=>e[1]===E.HEAL_PULSE)),[U.FIREBREATHER]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(R=>!!R.getLevelMoves().find(e=>e[1]===E.SMOG)||R.isOfType(t.FIRE)),[U.FISHERMAN]:new z(++j).setMoneyMultiplier(1.25).setEncounterBgm(U.BACKPACKER).setSpecialtyType(t.WATER).setPartyTemplates(PA.TWO_WEAK_SAME_ONE_AVG,PA.ONE_AVG,PA.THREE_WEAK_SAME,PA.ONE_STRONG,PA.SIX_WEAKER).setSpeciesPools({[oA.COMMON]:[A.TENTACOOL,A.MAGIKARP,A.GOLDEEN,A.STARYU,A.REMORAID,A.SKRELP,A.CLAUNCHER,A.ARROKUDA],[oA.UNCOMMON]:[A.POLIWAG,A.SHELLDER,A.KRABBY,A.HORSEA,A.CARVANHA,A.BARBOACH,A.CORPHISH,A.FINNEON,A.TYMPOLE,A.BASCULIN,A.FRILLISH,A.INKAY],[oA.RARE]:[A.CHINCHOU,A.CORSOLA,A.WAILMER,A.CLAMPERL,A.LUVDISC,A.MANTYKE,A.ALOMOMOLA,A.TATSUGIRI,A.VELUZA],[oA.SUPER_RARE]:[A.LAPRAS,A.FEEBAS,A.RELICANTH,A.DONDOZO]}),[U.GUITARIST]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(U.ROUGHNECK).setSpecialtyType(t.ELECTRIC).setSpeciesFilter(R=>R.isOfType(t.ELECTRIC)),[U.HARLEQUIN]:new z(++j).setEncounterBgm(U.PSYCHIC).setSpeciesFilter(R=>mI[E.TRICK_ROOM].indexOf(R.speciesId)>-1),[U.HIKER]:new z(++j).setEncounterBgm(U.BACKPACKER).setPartyTemplates(PA.TWO_AVG_SAME_ONE_AVG,PA.TWO_AVG_SAME_ONE_STRONG,PA.TWO_AVG,PA.FOUR_WEAK,PA.ONE_STRONG).setSpeciesPools({[oA.COMMON]:[A.SANDSHREW,A.DIGLETT,A.GEODUDE,A.MACHOP,A.ARON,A.ROGGENROLA,A.DRILBUR,A.NACLI],[oA.UNCOMMON]:[A.ZUBAT,A.RHYHORN,A.ONIX,A.CUBONE,A.WOOBAT,A.SWINUB,A.NOSEPASS,A.HIPPOPOTAS,A.DWEBBLE,A.KLAWF,A.TOEDSCOOL],[oA.RARE]:[A.TORKOAL,A.TRAPINCH,A.BARBOACH,A.GOLETT,A.ALOLA_DIGLETT,A.ALOLA_GEODUDE,A.GALAR_STUNFISK,A.PALDEA_WOOPER],[oA.SUPER_RARE]:[A.MAGBY,A.LARVITAR]}),[U.HOOLIGANS]:new z(++j).setDoubleOnly().setMoneyMultiplier(1.5).setEncounterBgm(U.ROUGHNECK).setPartyTemplateFunc(()=>DT(PA.TWO_WEAK,PA.TWO_AVG,PA.ONE_AVG_ONE_STRONG)).setSpeciesFilter(R=>R.isOfType(t.POISON)||R.isOfType(t.DARK)),[U.HOOPSTER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.INFIELDER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.JANITOR]:new z(++j).setMoneyMultiplier(1.1).setEncounterBgm(U.CLERK),[U.LINEBACKER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.MAID]:new z(++j).setMoneyMultiplier(1.6).setEncounterBgm(U.RICH),[U.MUSICIAN]:new z(++j).setMoneyMultiplier(1.1).setEncounterBgm(U.POKEFAN).setPartyTemplates(PA.FOUR_WEAKER,PA.THREE_WEAK,PA.TWO_WEAK_ONE_AVG,PA.TWO_AVG).setSpeciesFilter(R=>!!R.getLevelMoves().find(e=>e[1]===E.SING)),[U.HEX_MANIAC]:new z(++j).setMoneyMultiplier(1.5).setEncounterBgm(U.PSYCHIC).setPartyTemplates(PA.TWO_AVG,PA.ONE_AVG_ONE_STRONG,PA.TWO_AVG_SAME_ONE_AVG,PA.THREE_AVG,PA.TWO_STRONG).setSpeciesFilter(R=>R.isOfType(t.GHOST)||R.isOfType(t.PSYCHIC)),[U.NURSERY_AIDE]:new z(++j).setMoneyMultiplier(1.3).setEncounterBgm("lass"),[U.OFFICER]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(U.CLERK).setPartyTemplates(PA.ONE_AVG,PA.ONE_STRONG,PA.TWO_AVG,PA.TWO_WEAK_SAME_ONE_AVG).setSpeciesPools({[oA.COMMON]:[A.VULPIX,A.GROWLITHE,A.SNUBBULL,A.POOCHYENA,A.ELECTRIKE,A.LILLIPUP,A.YAMPER,A.FIDOUGH],[oA.UNCOMMON]:[A.HOUNDOUR,A.ROCKRUFF,A.MASCHIFF],[oA.RARE]:[A.JOLTEON,A.RIOLU],[oA.SUPER_RARE]:[],[oA.ULTRA_RARE]:[A.ENTEI,A.SUICUNE,A.RAIKOU]}),[U.PARASOL_LADY]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(U.PARASOL_LADY).setPartyTemplates(PA.TWO_AVG_SAME_ONE_AVG,PA.TWO_AVG_SAME_ONE_STRONG,PA.TWO_AVG,PA.FOUR_WEAK,PA.ONE_STRONG).setSpeciesFilter(R=>[R.ability1,R.ability2,R.abilityHidden].some(e=>!!e&&[O.DRIZZLE,O.SWIFT_SWIM,O.HYDRATION,O.RAIN_DISH,O.DRY_SKIN,O.WIND_POWER].includes(e))||R.getLevelMoves().some(e=>e[1]===E.RAIN_DANCE)),[U.PILOT]:new z(++j).setMoneyMultiplier(1.75).setEncounterBgm(U.CLERK).setPartyTemplates(PA.THREE_WEAK,PA.TWO_WEAK_ONE_AVG,PA.TWO_AVG,PA.THREE_AVG).setSpeciesFilter(R=>mI[E.FLY].indexOf(R.speciesId)>-1),[U.POKEFAN]:new z(++j).setMoneyMultiplier(1.4).setName("PokéFan").setHasGenders("PokéFan Female").setHasDouble("PokéFan Family").setEncounterBgm(U.POKEFAN).setPartyTemplates(PA.SIX_WEAKER,PA.FOUR_WEAK,PA.TWO_AVG,PA.ONE_STRONG,PA.FOUR_WEAK_SAME,PA.FIVE_WEAK,PA.SIX_WEAKER_SAME).setSpeciesFilter(R=>mI[E.HELPING_HAND].indexOf(R.speciesId)>-1),[U.PRESCHOOLER]:new z(++j).setMoneyMultiplier(.2).setEncounterBgm(U.YOUNGSTER).setHasGenders("Preschooler Female","lass").setHasDouble("Preschoolers").setPartyTemplates(PA.THREE_WEAK,PA.FOUR_WEAKER,PA.TWO_WEAK_SAME_ONE_AVG,PA.FIVE_WEAKER).setSpeciesPools({[oA.COMMON]:[A.CATERPIE,A.PICHU,A.SANDSHREW,A.LEDYBA,A.BUDEW,A.BURMY,A.WOOLOO,A.PAWMI,A.SMOLIV],[oA.UNCOMMON]:[A.EEVEE,A.CLEFFA,A.IGGLYBUFF,A.SWINUB,A.WOOPER,A.DRIFLOON,A.DEDENNE,A.STUFFUL],[oA.RARE]:[A.RALTS,A.RIOLU,A.JOLTIK,A.TANDEMAUS],[oA.SUPER_RARE]:[A.DARUMAKA,A.TINKATINK]}),[U.PSYCHIC]:new z(++j).setHasGenders("Psychic Female").setHasDouble("Psychics").setMoneyMultiplier(1.4).setEncounterBgm(U.PSYCHIC).setPartyTemplates(PA.TWO_WEAK,PA.TWO_AVG,PA.TWO_WEAK_SAME_ONE_AVG,PA.TWO_WEAK_SAME_TWO_WEAK_SAME,PA.ONE_STRONGER).setSpeciesPools({[oA.COMMON]:[A.ABRA,A.DROWZEE,A.RALTS,A.SPOINK,A.GOTHITA,A.SOLOSIS,A.BLIPBUG,A.ESPURR,A.HATENNA],[oA.UNCOMMON]:[A.MIME_JR,A.EXEGGCUTE,A.MEDITITE,A.NATU,A.EXEGGCUTE,A.WOOBAT,A.INKAY,A.ORANGURU],[oA.RARE]:[A.ELGYEM,A.SIGILYPH,A.BALTOY,A.GIRAFARIG,A.MEOWSTIC],[oA.SUPER_RARE]:[A.BELDUM,A.ESPEON,A.STANTLER]}),[U.RANGER]:new z(++j).setMoneyMultiplier(1.4).setName("Pokémon Ranger").setEncounterBgm(U.BACKPACKER).setHasGenders("Pokémon Ranger Female").setHasDouble("Pokémon Rangers").setSpeciesPools({[oA.COMMON]:[A.PICHU,A.GROWLITHE,A.PONYTA,A.ZIGZAGOON,A.SEEDOT,A.BIDOOF,A.RIOLU,A.SEWADDLE,A.SKIDDO,A.SALANDIT,A.YAMPER],[oA.UNCOMMON]:[A.AZURILL,A.TAUROS,A.MAREEP,A.FARFETCHD,A.TEDDIURSA,A.SHROOMISH,A.ELECTRIKE,A.BUDEW,A.BUIZEL,A.MUDBRAY,A.STUFFUL],[oA.RARE]:[A.EEVEE,A.SCYTHER,A.KANGASKHAN,A.RALTS,A.MUNCHLAX,A.ZORUA,A.PALDEA_TAUROS,A.TINKATINK,A.CYCLIZAR,A.FLAMIGO],[oA.SUPER_RARE]:[A.LARVESTA]}),[U.RICH]:new z(++j).setMoneyMultiplier(3.25).setName("Gentleman").setHasGenders("Madame").setHasDouble("Rich Couple").setPartyTemplates(PA.THREE_WEAK,PA.FOUR_WEAK,PA.TWO_WEAK_ONE_AVG,PA.THREE_AVG).setSpeciesFilter(R=>R.isOfType(t.NORMAL)||R.isOfType(t.ELECTRIC)),[U.RICH_KID]:new z(++j).setMoneyMultiplier(2.5).setName("Rich Boy").setHasGenders("Lady").setHasDouble("Rich Kids").setEncounterBgm(U.RICH).setPartyTemplates(PA.FOUR_WEAKER,PA.THREE_WEAK_SAME,PA.TWO_WEAK_SAME_ONE_AVG).setSpeciesFilter(R=>R.baseTotal<=460),[U.ROUGHNECK]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(U.ROUGHNECK).setSpeciesFilter(R=>R.isOfType(t.DARK)),[U.SAILOR]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(U.BACKPACKER).setSpeciesFilter(R=>R.isOfType(t.WATER)||R.isOfType(t.FIGHTING)),[U.SCIENTIST]:new z(++j).setHasGenders("Scientist Female").setHasDouble("Scientists").setMoneyMultiplier(1.7).setEncounterBgm(U.SCIENTIST).setSpeciesPools({[oA.COMMON]:[A.MAGNEMITE,A.GRIMER,A.DROWZEE,A.VOLTORB,A.KOFFING],[oA.UNCOMMON]:[A.BALTOY,A.BRONZOR,A.FERROSEED,A.KLINK,A.CHARJABUG,A.BLIPBUG,A.HELIOPTILE],[oA.RARE]:[A.ABRA,A.DITTO,A.PORYGON,A.ELEKID,A.SOLOSIS,A.GALAR_WEEZING],[oA.SUPER_RARE]:[A.OMANYTE,A.KABUTO,A.AERODACTYL,A.LILEEP,A.ANORITH,A.CRANIDOS,A.SHIELDON,A.TIRTOUGA,A.ARCHEN,A.ARCTOVISH,A.ARCTOZOLT,A.DRACOVISH,A.DRACOZOLT],[oA.ULTRA_RARE]:[A.ROTOM,A.MELTAN]}),[U.SMASHER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.SNOW_WORKER]:new z(++j).setName("Worker").setHasDouble("Workers").setMoneyMultiplier(1.7).setEncounterBgm(U.CLERK).setSpeciesFilter(R=>R.isOfType(t.ICE)||R.isOfType(t.STEEL)),[U.STRIKER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(U.CYCLIST),[U.SCHOOL_KID]:new z(++j).setMoneyMultiplier(.75).setEncounterBgm(U.YOUNGSTER).setHasGenders("School Kid Female","lass").setHasDouble("School Kids").setSpeciesPools({[oA.COMMON]:[A.ODDISH,A.EXEGGCUTE,A.TEDDIURSA,A.WURMPLE,A.RALTS,A.SHROOMISH,A.FLETCHLING],[oA.UNCOMMON]:[A.VOLTORB,A.WHISMUR,A.MEDITITE,A.MIME_JR,A.NYMBLE],[oA.RARE]:[A.TANGELA,A.EEVEE,A.YANMA],[oA.SUPER_RARE]:[A.TADBULB]}),[U.SWIMMER]:new z(++j).setMoneyMultiplier(1.3).setEncounterBgm(U.PARASOL_LADY).setHasGenders("Swimmer Female").setHasDouble("Swimmers").setSpecialtyType(t.WATER).setSpeciesFilter(R=>R.isOfType(t.WATER)),[U.TWINS]:new z(++j).setDoubleOnly().setMoneyMultiplier(.65).setUseSameSeedForAllMembers().setPartyTemplateFunc(()=>DT(PA.TWO_WEAK,PA.TWO_AVG,PA.TWO_STRONG)).setPartyMemberFunc(0,W([A.PLUSLE,A.VOLBEAT,A.PACHIRISU,A.SILCOON,A.METAPOD,A.IGGLYBUFF,A.PETILIL,A.EEVEE])).setPartyMemberFunc(1,W([A.MINUN,A.ILLUMISE,A.EMOLGA,A.CASCOON,A.KAKUNA,A.CLEFFA,A.COTTONEE,A.EEVEE],v.TRAINER_PARTNER)).setEncounterBgm(U.TWINS),[U.VETERAN]:new z(++j).setHasGenders("Veteran Female").setHasDouble("Veteran Duo").setMoneyMultiplier(2.5).setEncounterBgm(U.ACE_TRAINER).setSpeciesFilter(R=>R.isOfType(t.DRAGON)),[U.WAITER]:new z(++j).setHasGenders("Waitress").setHasDouble("Restaurant Staff").setMoneyMultiplier(1.5).setEncounterBgm(U.CLERK).setSpeciesPools({[oA.COMMON]:[A.CLEFFA,A.CHATOT,A.PANSAGE,A.PANSEAR,A.PANPOUR,A.MINCCINO],[oA.UNCOMMON]:[A.TROPIUS,A.PETILIL,A.BOUNSWEET,A.INDEEDEE],[oA.RARE]:[A.APPLIN,A.SINISTEA,A.POLTCHAGEIST]}),[U.WORKER]:new z(++j).setHasGenders("Worker Female").setHasDouble("Workers").setEncounterBgm(U.CLERK).setMoneyMultiplier(1.7).setSpeciesFilter(R=>R.isOfType(t.ROCK)||R.isOfType(t.STEEL)),[U.YOUNGSTER]:new z(++j).setMoneyMultiplier(.5).setEncounterBgm(U.YOUNGSTER).setHasGenders("Lass","lass").setHasDouble("Beginners").setPartyTemplates(PA.TWO_WEAKER).setSpeciesPools([A.CATERPIE,A.WEEDLE,A.RATTATA,A.SENTRET,A.POOCHYENA,A.ZIGZAGOON,A.WURMPLE,A.BIDOOF,A.PATRAT,A.LILLIPUP]),[U.ROCKET_GRUNT]:new z(++j).setHasGenders("Rocket Grunt Female").setHasDouble("Rocket Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.WEEDLE,A.RATTATA,A.EKANS,A.SANDSHREW,A.ZUBAT,A.ODDISH,A.GEODUDE,A.SLOWPOKE,A.GRIMER,A.KOFFING],[oA.UNCOMMON]:[A.MANKEY,A.GROWLITHE,A.MAGNEMITE,A.ONIX,A.VOLTORB,A.EXEGGCUTE,A.CUBONE,A.LICKITUNG,A.TAUROS,A.MAGIKARP,A.MURKROW,A.ELEKID,A.MAGBY],[oA.RARE]:[A.ABRA,A.GASTLY,A.SCYTHER,A.PORYGON,A.OMANYTE,A.KABUTO,A.ALOLA_RATTATA,A.ALOLA_SANDSHREW,A.ALOLA_MEOWTH,A.ALOLA_GEODUDE,A.ALOLA_GRIMER,A.PALDEA_TAUROS],[oA.SUPER_RARE]:[A.DRATINI,A.LARVITAR]}),[U.ARCHER]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[A.HOUNDOOM]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.ARIANA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin_female","rocket",[A.ARBOK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.PROTON]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[A.CROBAT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.PETREL]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[A.WEEZING]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.MAGMA_GRUNT]:new z(++j).setHasGenders("Magma Grunt Female").setHasDouble("Magma Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.DIGLETT,A.GROWLITHE,A.SLUGMA,A.POOCHYENA,A.ZIGZAGOON,A.NUMEL,A.TORKOAL,A.BALTOY],[oA.UNCOMMON]:[A.RHYHORN,A.PHANPY,A.MAGBY,A.ZANGOOSE,A.SOLROCK,A.HEATMOR,A.ROLYCOLY,A.CAPSAKID],[oA.RARE]:[A.TRAPINCH,A.LILEEP,A.ANORITH,A.GOLETT,A.TURTONATOR,A.TOEDSCOOL,A.HISUI_GROWLITHE],[oA.SUPER_RARE]:[A.CHARCADET,A.ARON]}),[U.TABITHA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin","magma",[A.CAMERUPT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.COURTNEY]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin_female","magma",[A.CAMERUPT]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.AQUA_GRUNT]:new z(++j).setHasGenders("Aqua Grunt Female").setHasDouble("Aqua Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.QWILFISH,A.REMORAID,A.ZIGZAGOON,A.LOTAD,A.WINGULL,A.CARVANHA,A.WAILMER,A.BARBOACH,A.CORPHISH,A.SPHEAL],[oA.UNCOMMON]:[A.TENTACOOL,A.HORSEA,A.CHINCHOU,A.WOOPER,A.AZURILL,A.SEVIPER,A.CLAMPERL,A.WIMPOD,A.CLOBBOPUS],[oA.RARE]:[A.MANTYKE,A.TYMPOLE,A.SKRELP,A.ARROKUDA,A.WIGLETT,A.HISUI_QWILFISH,A.PALDEA_WOOPER],[oA.SUPER_RARE]:[A.BASCULEGION,A.DONDOZO]}),[U.MATT]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin","aqua",[A.SHARPEDO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.SHELLY]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin_female","aqua",[A.SHARPEDO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.GALACTIC_GRUNT]:new z(++j).setHasGenders("Galactic Grunt Female").setHasDouble("Galactic Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.WURMPLE,A.SHINX,A.BURMY,A.DRIFLOON,A.GLAMEOW,A.STUNKY,A.BRONZOR,A.CROAGUNK,A.CARNIVINE],[oA.UNCOMMON]:[A.ZUBAT,A.LICKITUNG,A.RHYHORN,A.TANGELA,A.YANMA,A.GLIGAR,A.SWINUB,A.SKORUPI],[oA.RARE]:[A.SNEASEL,A.TEDDIURSA,A.ELEKID,A.MAGBY,A.DUSKULL,A.HISUI_GROWLITHE,A.HISUI_QWILFISH],[oA.SUPER_RARE]:[A.SPIRITOMB,A.ROTOM,A.HISUI_SNEASEL]}),[U.JUPITER]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[A.SKUNTANK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.MARS]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[A.PURUGLY]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.SATURN]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander","galactic",[A.TOXICROAK]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.PLASMA_GRUNT]:new z(++j).setHasGenders("Plasma Grunt Female").setHasDouble("Plasma Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.PATRAT,A.LILLIPUP,A.PURRLOIN,A.WOOBAT,A.TYMPOLE,A.SANDILE,A.SCRAGGY,A.TRUBBISH,A.VANILLITE],[oA.UNCOMMON]:[A.TIMBURR,A.VENIPEDE,A.DARUMAKA,A.FOONGUS,A.FRILLISH,A.JOLTIK,A.KLINK,A.CUBCHOO,A.GOLETT],[oA.RARE]:[A.DRILBUR,A.ZORUA,A.MIENFOO,A.PAWNIARD,A.BOUFFALANT,A.RUFFLET,A.VULLABY,A.DURANT],[oA.SUPER_RARE]:[A.AXEW,A.DRUDDIGON,A.DEINO,A.HISUI_ZORUA]}),[U.ZINZOLIN]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma_zinzolin",[A.CRYOGONAL]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.COLRESS]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_boss","plasma_colress",[A.KLINKLANG]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_colress").setMixedBattleBgm("battle_colress").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.FLARE_GRUNT]:new z(++j).setHasGenders("Flare Grunt Female").setHasDouble("Flare Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.HOUNDOUR,A.GULPIN,A.SKORUPI,A.CROAGUNK,A.PURRLOIN,A.SCRAGGY,A.FLETCHLING,A.SCATTERBUG,A.LITLEO,A.ESPURR,A.INKAY],[oA.UNCOMMON]:[A.POOCHYENA,A.ELECTRIKE,A.FOONGUS,A.PANCHAM,A.BINACLE,A.SKRELP,A.CLAUNCHER,A.HELIOPTILE,A.PHANTUMP,A.PUMPKABOO],[oA.RARE]:[A.SNEASEL,A.LITWICK,A.PAWNIARD,A.NOIBAT],[oA.SUPER_RARE]:[A.SLIGGOO,A.HISUI_SLIGGOO,A.HISUI_AVALUGG]}),[U.BRYONY]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin_female","flare",[A.LIEPARD]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.XEROSIC]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin","flare",[A.MALAMAR]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.AETHER_GRUNT]:new z(++j).setHasGenders("Aether Grunt Female").setHasDouble("Aether Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.CORSOLA,A.LILLIPUP,A.PIKIPEK,A.YUNGOOS,A.ROCKRUFF,A.MORELULL,A.BOUNSWEET,A.COMFEY,A.KOMALA,A.TOGEDEMARU,A.ALOLA_RAICHU,A.ALOLA_DIGLETT,A.ALOLA_GEODUDE,A.ALOLA_EXEGGUTOR],[oA.UNCOMMON]:[A.POLIWAG,A.CRABRAWLER,A.ORICORIO,A.CUTIEFLY,A.WISHIWASHI,A.MUDBRAY,A.STUFFUL,A.ORANGURU,A.PASSIMIAN,A.PYUKUMUKU,A.BRUXISH,A.ALOLA_SANDSHREW,A.ALOLA_VULPIX,A.ALOLA_MAROWAK],[oA.RARE]:[A.MINIOR,A.TURTONATOR,A.MIMIKYU,A.DRAMPA,A.GALAR_CORSOLA],[oA.SUPER_RARE]:[A.PORYGON,A.JANGMO_O]}),[U.FABA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aether_admin","aether",[A.HYPNO]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.SKULL_GRUNT]:new z(++j).setHasGenders("Skull Grunt Female").setHasDouble("Skull Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.EKANS,A.VENONAT,A.DROWZEE,A.KOFFING,A.SPINARAK,A.SCRAGGY,A.TRUBBISH,A.MAREANIE,A.SALANDIT,A.ALOLA_RATTATA,A.ALOLA_MEOWTH,A.ALOLA_GRIMER],[oA.UNCOMMON]:[A.ZUBAT,A.GASTLY,A.HOUNDOUR,A.SABLEYE,A.VENIPEDE,A.SANDILE,A.VULLABY,A.PANCHAM,A.FOMANTIS,A.ALOLA_MAROWAK],[oA.RARE]:[A.PAWNIARD,A.WISHIWASHI,A.SANDYGAST,A.MIMIKYU,A.DHELMISE,A.NYMBLE],[oA.SUPER_RARE]:[A.GRUBBIN,A.DEWPIDER]}),[U.PLUMERIA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("skull_admin","skull",[A.SALAZZLE]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.MACRO_GRUNT]:new z(++j).setHasGenders("Macro Grunt Female").setHasDouble("Macro Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_macro_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.STEELIX,A.MAWILE,A.FERROSEED,A.KLINK,A.SKWOVET,A.ROOKIDEE,A.ROLYCOLY,A.CUFANT,A.GALAR_MEOWTH,A.GALAR_ZIGZAGOON],[oA.UNCOMMON]:[A.MAGNEMITE,A.RIOLU,A.DRILBUR,A.APPLIN,A.CRAMORANT,A.ARROKUDA,A.SINISTEA,A.HATENNA,A.FALINKS,A.GALAR_PONYTA,A.GALAR_YAMASK],[oA.RARE]:[A.SCIZOR,A.BELDUM,A.HONEDGE,A.GALAR_FARFETCHD,A.GALAR_MR_MIME,A.GALAR_DARUMAKA],[oA.SUPER_RARE]:[A.DURALUDON,A.DREEPY]}),[U.OLEANA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("macro_admin","macro_cosmos",[A.GARBODOR]).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_oleana").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()),[U.STAR_GRUNT]:new z(++j).setHasGenders("Star Grunt Female").setHasDouble("Star Grunts").setMoneyMultiplier(1).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setSpeciesPools({[oA.COMMON]:[A.DUNSPARCE,A.HOUNDOUR,A.AZURILL,A.GULPIN,A.FOONGUS,A.FLETCHLING,A.LITLEO,A.FLABEBE,A.CRABRAWLER,A.NYMBLE,A.PAWMI,A.FIDOUGH,A.SQUAWKABILLY,A.MASCHIFF,A.SHROODLE,A.KLAWF,A.WIGLETT,A.PALDEA_WOOPER],[oA.UNCOMMON]:[A.KOFFING,A.EEVEE,A.GIRAFARIG,A.RALTS,A.TORKOAL,A.SEVIPER,A.SCRAGGY,A.ZORUA,A.MIMIKYU,A.IMPIDIMP,A.FALINKS,A.CAPSAKID,A.TINKATINK,A.BOMBIRDIER,A.CYCLIZAR,A.FLAMIGO,A.PALDEA_TAUROS],[oA.RARE]:[A.MANKEY,A.PAWNIARD,A.CHARCADET,A.FLITTLE,A.VAROOM,A.ORTHWORM],[oA.SUPER_RARE]:[A.DONDOZO,A.GIMMIGHOUL]}),[U.GIACOMO]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_dark",[A.KINGAMBIT],t.DARK).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setPartyMemberFunc(3,W([A.REVAVROOM],v.TRAINER,!0,R=>{R.formIndex=1,R.moveset=[new pA(E.WICKED_TORQUE),new pA(E.SPIN_OUT),new pA(E.SHIFT_GEAR),new pA(E.HIGH_HORSEPOWER)]})),[U.MELA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fire",[A.ARMAROUGE],t.FIRE).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setPartyMemberFunc(3,W([A.REVAVROOM],v.TRAINER,!0,R=>{R.formIndex=2,R.moveset=[new pA(E.BLAZING_TORQUE),new pA(E.SPIN_OUT),new pA(E.SHIFT_GEAR),new pA(E.HIGH_HORSEPOWER)]})),[U.ATTICUS]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_poison",[A.REVAVROOM],t.POISON).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setPartyMemberFunc(3,W([A.REVAVROOM],v.TRAINER,!0,R=>{R.formIndex=3,R.moveset=[new pA(E.NOXIOUS_TORQUE),new pA(E.SPIN_OUT),new pA(E.SHIFT_GEAR),new pA(E.HIGH_HORSEPOWER)]})),[U.ORTEGA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fairy",[A.DACHSBUN],t.FAIRY).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setPartyMemberFunc(3,W([A.REVAVROOM],v.TRAINER,!0,R=>{R.formIndex=4,R.moveset=[new pA(E.MAGICAL_TORQUE),new pA(E.SPIN_OUT),new pA(E.SHIFT_GEAR),new pA(E.HIGH_HORSEPOWER)]})),[U.ERI]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fighting",[A.ANNIHILAPE],t.FIGHTING).setEncounterBgm(U.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>QE()).setPartyMemberFunc(3,W([A.REVAVROOM],v.TRAINER,!0,R=>{R.formIndex=5,R.moveset=[new pA(E.COMBAT_TORQUE),new pA(E.SPIN_OUT),new pA(E.SHIFT_GEAR),new pA(E.HIGH_HORSEPOWER)]})),[U.BROCK]:new z(j=U.BROCK).initForGymLeader(fA.BROCK,!0,t.ROCK,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.MISTY]:new z(++j).initForGymLeader(fA.MISTY,!1,t.WATER,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.LT_SURGE]:new z(++j).initForGymLeader(fA.LT_SURGE,!0,t.ELECTRIC,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.ERIKA]:new z(++j).initForGymLeader(fA.ERIKA,!1,t.GRASS,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.JANINE]:new z(++j).initForGymLeader(fA.JANINE,!1,t.POISON,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.SABRINA]:new z(++j).initForGymLeader(fA.SABRINA,!1,t.PSYCHIC,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.BLAINE]:new z(++j).initForGymLeader(fA.BLAINE,!0,t.FIRE,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.GIOVANNI]:new z(++j).initForGymLeader(fA.GIOVANNI,!0,t.GROUND,!1,-2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[U.FALKNER]:new z(++j).initForGymLeader(fA.FALKNER,!0,t.FLYING,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.BUGSY]:new z(++j).initForGymLeader(fA.BUGSY,!0,t.BUG,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.WHITNEY]:new z(++j).initForGymLeader(fA.WHITNEY,!1,t.NORMAL,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.MORTY]:new z(++j).initForGymLeader(fA.MORTY,!0,t.GHOST,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.CHUCK]:new z(++j).initForGymLeader(fA.CHUCK,!0,t.FIGHTING,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.JASMINE]:new z(++j).initForGymLeader(fA.JASMINE,!1,t.STEEL,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.PRYCE]:new z(++j).initForGymLeader(fA.PRYCE,!0,t.ICE,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.CLAIR]:new z(++j).initForGymLeader(fA.CLAIR,!1,t.DRAGON,!1,-3).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[U.ROXANNE]:new z(++j).initForGymLeader(fA.ROXANNE,!1,t.ROCK,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.BRAWLY]:new z(++j).initForGymLeader(fA.BRAWLY,!0,t.FIGHTING,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.WATTSON]:new z(++j).initForGymLeader(fA.WATTSON,!0,t.ELECTRIC,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.FLANNERY]:new z(++j).initForGymLeader(fA.FLANNERY,!1,t.FIRE,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.NORMAN]:new z(++j).initForGymLeader(fA.NORMAN,!0,t.NORMAL,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.WINONA]:new z(++j).initForGymLeader(fA.WINONA,!1,t.FLYING,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.TATE]:new z(++j).initForGymLeader(fA.TATE,!0,t.PSYCHIC,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("tate_liza_double").setDoubleTrainerType(U.LIZA).setDoubleTitle("gym_leader_double"),[U.LIZA]:new z(++j).initForGymLeader(fA.LIZA,!1,t.PSYCHIC,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("liza_tate_double").setDoubleTrainerType(U.TATE).setDoubleTitle("gym_leader_double"),[U.JUAN]:new z(++j).initForGymLeader(fA.JUAN,!0,t.WATER,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[U.ROARK]:new z(++j).initForGymLeader(fA.ROARK,!0,t.ROCK,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.GARDENIA]:new z(++j).initForGymLeader(fA.GARDENIA,!1,t.GRASS,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.MAYLENE]:new z(++j).initForGymLeader(fA.MAYLENE,!1,t.FIGHTING,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CRASHER_WAKE]:new z(++j).initForGymLeader(fA.CRASHER_WAKE,!0,t.WATER,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.FANTINA]:new z(++j).initForGymLeader(fA.FANTINA,!1,t.GHOST,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.BYRON]:new z(++j).initForGymLeader(fA.BYRON,!0,t.STEEL,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CANDICE]:new z(++j).initForGymLeader(fA.CANDICE,!1,t.ICE,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.VOLKNER]:new z(++j).initForGymLeader(fA.VOLKNER,!0,t.ELECTRIC,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[U.CILAN]:new z(++j).initForGymLeader(fA.CILAN,!0,t.GRASS,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.CHILI]:new z(++j).initForGymLeader(fA.CHILI,!0,t.FIRE,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.CRESS]:new z(++j).initForGymLeader(fA.CRESS,!0,t.WATER,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.CHEREN]:new z(++j).initForGymLeader(fA.CHEREN,!0,t.NORMAL,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.LENORA]:new z(++j).initForGymLeader(fA.LENORA,!1,t.NORMAL,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.ROXIE]:new z(++j).initForGymLeader(fA.ROXIE,!1,t.POISON,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.BURGH]:new z(++j).initForGymLeader(fA.BURGH,!0,t.BUG,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.ELESA]:new z(++j).initForGymLeader(fA.ELESA,!1,t.ELECTRIC,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.CLAY]:new z(++j).initForGymLeader(fA.CLAY,!0,t.GROUND,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.SKYLA]:new z(++j).initForGymLeader(fA.SKYLA,!1,t.FLYING,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.BRYCEN]:new z(++j).initForGymLeader(fA.BRYCEN,!0,t.ICE,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.DRAYDEN]:new z(++j).initForGymLeader(fA.DRAYDEN,!0,t.DRAGON,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.MARLON]:new z(++j).initForGymLeader(fA.MARLON,!0,t.WATER,!1,-1).setMixedBattleBgm("battle_unova_gym"),[U.VIOLA]:new z(++j).initForGymLeader(fA.VIOLA,!1,t.BUG,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.GRANT]:new z(++j).initForGymLeader(fA.GRANT,!0,t.ROCK,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.KORRINA]:new z(++j).initForGymLeader(fA.KORRINA,!1,t.FIGHTING,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.RAMOS]:new z(++j).initForGymLeader(fA.RAMOS,!0,t.GRASS,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.CLEMONT]:new z(++j).initForGymLeader(fA.CLEMONT,!0,t.ELECTRIC,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.VALERIE]:new z(++j).initForGymLeader(fA.VALERIE,!1,t.FAIRY,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.OLYMPIA]:new z(++j).initForGymLeader(fA.OLYMPIA,!1,t.PSYCHIC,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.WULFRIC]:new z(++j).initForGymLeader(fA.WULFRIC,!0,t.ICE,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[U.MILO]:new z(++j).initForGymLeader(fA.MILO,!0,t.GRASS,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.NESSA]:new z(++j).setName("Nessa").initForGymLeader(fA.NESSA,!1,t.WATER,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.KABU]:new z(++j).initForGymLeader(fA.KABU,!0,t.FIRE,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.BEA]:new z(++j).setName("Bea").initForGymLeader(fA.BEA,!1,t.FIGHTING,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.ALLISTER]:new z(++j).setName("Allister").initForGymLeader(fA.ALLISTER,!0,t.GHOST,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.OPAL]:new z(++j).initForGymLeader(fA.OPAL,!1,t.FAIRY,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.BEDE]:new z(++j).initForGymLeader(fA.BEDE,!0,t.FAIRY,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.GORDIE]:new z(++j).initForGymLeader(fA.GORDIE,!0,t.ROCK,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.MELONY]:new z(++j).initForGymLeader(fA.MELONY,!1,t.ICE,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.PIERS]:new z(++j).initForGymLeader(fA.PIERS,!0,t.DARK,!1,-3).setHasDouble("piers_marnie_double").setDoubleTrainerType(U.MARNIE).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[U.MARNIE]:new z(++j).setName("Marnie").initForGymLeader(fA.MARNIE,!1,t.DARK,!1,-4).setHasDouble("marnie_piers_double").setDoubleTrainerType(U.PIERS).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[U.RAIHAN]:new z(++j).setName("Raihan").initForGymLeader(fA.RAIHAN,!0,t.DRAGON,!1,-1).setMixedBattleBgm("battle_galar_gym"),[U.KATY]:new z(++j).initForGymLeader(fA.KATY,!1,t.BUG,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.BRASSIUS]:new z(++j).initForGymLeader(fA.BRASSIUS,!0,t.GRASS,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.IONO]:new z(++j).initForGymLeader(fA.IONO,!1,t.ELECTRIC,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.KOFU]:new z(++j).initForGymLeader(fA.KOFU,!0,t.WATER,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.LARRY]:new z(++j).setName("Larry").initForGymLeader(fA.LARRY,!0,t.NORMAL,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.RYME]:new z(++j).initForGymLeader(fA.RYME,!1,t.GHOST,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.TULIP]:new z(++j).initForGymLeader(fA.TULIP,!1,t.PSYCHIC,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.GRUSHA]:new z(++j).initForGymLeader(fA.GRUSHA,!0,t.ICE,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[U.LORELEI]:new z(j=U.LORELEI).initForEliteFour(fA.LORELEI,!1,t.ICE,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,W([A.DEWGONG],v.TRAINER,!0,R=>{R.abilityIndex=0,R.generateAndPopulateMoveset()})).setPartyMemberFunc(2,W([A.SLOWBRO,A.GALAR_SLOWBRO],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.ICE_BEAM)||(R.moveset[2]=new pA(E.ICE_BEAM))})).setPartyMemberFunc(3,W([A.JYNX])).setPartyMemberFunc(4,W([A.CLOYSTER,A.ALOLA_SANDSLASH])).setPartyMemberFunc(5,W([A.LAPRAS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.BRUNO]:new z(++j).initForEliteFour(fA.BRUNO,!0,t.FIGHTING,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,W([A.HITMONLEE,A.HITMONCHAN,A.HITMONTOP])).setPartyMemberFunc(2,W([A.STEELIX],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.BODY_PRESS)||(R.moveset[2]=new pA(E.BODY_PRESS))})).setPartyMemberFunc(3,W([A.POLIWRATH])).setPartyMemberFunc(4,W([A.ANNIHILAPE])).setPartyMemberFunc(5,W([A.MACHAMP],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.AGATHA]:new z(++j).initForEliteFour(fA.AGATHA,!1,t.GHOST,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,W([A.MISMAGIUS])).setPartyMemberFunc(2,W([A.ARBOK,A.WEEZING],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST))})).setPartyMemberFunc(3,W([A.ALOLA_MAROWAK])).setPartyMemberFunc(4,W([A.CURSOLA])).setPartyMemberFunc(5,W([A.GENGAR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.LANCE]:new z(++j).setName("Lance").initForEliteFour(fA.LANCE,!0,t.DRAGON,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,W([A.KINGDRA])).setPartyMemberFunc(2,W([A.GYARADOS,A.AERODACTYL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST))})).setPartyMemberFunc(3,W([A.ALOLA_EXEGGUTOR])).setPartyMemberFunc(4,W([A.SALAMENCE])).setPartyMemberFunc(5,W([A.DRAGONITE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.WILL]:new z(++j).initForEliteFour(fA.WILL,!0,t.PSYCHIC,2).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym").setPartyMemberFunc(0,W([A.JYNX])).setPartyMemberFunc(2,W([A.SLOWKING,A.GALAR_SLOWKING])).setPartyMemberFunc(3,W([A.EXEGGUTOR])).setPartyMemberFunc(4,W([A.WYRDEER,A.FARIGIRAF])).setPartyMemberFunc(5,W([A.XATU],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.KOGA]:new z(++j).initForEliteFour(fA.KOGA,!0,t.POISON,2).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym").setPartyMemberFunc(0,W([A.VENOMOTH],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(2,W([A.MUK,A.WEEZING])).setPartyMemberFunc(3,W([A.TENTACRUEL])).setPartyMemberFunc(4,W([A.SNEASLER,A.OVERQWIL])).setPartyMemberFunc(5,W([A.CROBAT],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.KAREN]:new z(++j).initForEliteFour(fA.KAREN,!1,t.DARK,2).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym").setPartyMemberFunc(0,W([A.UMBREON])).setPartyMemberFunc(2,W([A.GENGAR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.DARK_PULSE)||(R.moveset[2]=new pA(E.DARK_PULSE))})).setPartyMemberFunc(3,W([A.HONCHKROW])).setPartyMemberFunc(4,W([A.WEAVILE])).setPartyMemberFunc(5,W([A.HOUNDOOM],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.SIDNEY]:new z(++j).initForEliteFour(fA.SIDNEY,!0,t.DARK,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,W([A.MIGHTYENA],v.TRAINER,!0,R=>{R.abilityIndex=0,R.generateAndPopulateMoveset()})).setPartyMemberFunc(2,W([A.OBSTAGOON])).setPartyMemberFunc(3,W([A.SHIFTRY,A.CACTURNE])).setPartyMemberFunc(4,W([A.SHARPEDO,A.CRAWDAUNT])).setPartyMemberFunc(5,W([A.ABSOL],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.PHOEBE]:new z(++j).initForEliteFour(fA.PHOEBE,!1,t.GHOST,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,W([A.SABLEYE])).setPartyMemberFunc(2,W([A.BANETTE])).setPartyMemberFunc(3,W([A.DRIFBLIM,A.MISMAGIUS])).setPartyMemberFunc(4,W([A.ORICORIO,A.ALOLA_MAROWAK],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=R.species.speciesId===A.ORICORIO?3:0})).setPartyMemberFunc(5,W([A.DUSKNOIR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.GLACIA]:new z(++j).initForEliteFour(fA.GLACIA,!1,t.ICE,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,W([A.ABOMASNOW],v.TRAINER,!0,R=>{R.abilityIndex=0,R.generateAndPopulateMoveset()})).setPartyMemberFunc(2,W([A.GLALIE])).setPartyMemberFunc(3,W([A.FROSLASS])).setPartyMemberFunc(4,W([A.ALOLA_NINETALES])).setPartyMemberFunc(5,W([A.WALREIN],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.DRAKE]:new z(++j).initForEliteFour(fA.DRAKE,!0,t.DRAGON,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,W([A.ALTARIA])).setPartyMemberFunc(2,W([A.DHELMISE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST))})).setPartyMemberFunc(3,W([A.FLYGON])).setPartyMemberFunc(4,W([A.KINGDRA])).setPartyMemberFunc(5,W([A.SALAMENCE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.AARON]:new z(++j).initForEliteFour(fA.AARON,!0,t.BUG,5).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,W([A.YANMEGA])).setPartyMemberFunc(2,W([A.HERACROSS])).setPartyMemberFunc(3,W([A.VESPIQUEN])).setPartyMemberFunc(4,W([A.SCIZOR,A.KLEAVOR])).setPartyMemberFunc(5,W([A.DRAPION],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.abilityIndex=1,R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.X_SCISSOR)||(R.moveset[2]=new pA(E.X_SCISSOR))})),[U.BERTHA]:new z(++j).initForEliteFour(fA.BERTHA,!1,t.GROUND,2).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,W([A.WHISCASH])).setPartyMemberFunc(2,W([A.HIPPOWDON],v.TRAINER,!0,R=>{R.abilityIndex=0,R.generateAndPopulateMoveset()})).setPartyMemberFunc(3,W([A.GLISCOR])).setPartyMemberFunc(4,W([A.MAMOSWINE,A.URSALUNA])).setPartyMemberFunc(5,W([A.RHYPERIOR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.abilityIndex=1,R.generateAndPopulateMoveset()})),[U.FLINT]:new z(++j).initForEliteFour(fA.FLINT,!0,t.FIRE,2).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,W([A.RAPIDASH])).setPartyMemberFunc(2,W([A.STEELIX,A.LOPUNNY],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST))})).setPartyMemberFunc(3,W([A.INFERNAPE])).setPartyMemberFunc(4,W([A.ARCANINE,A.HISUI_ARCANINE])).setPartyMemberFunc(5,W([A.MAGMORTAR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.LUCIAN]:new z(++j).initForEliteFour(fA.LUCIAN,!0,t.PSYCHIC,2).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,W([A.ESPEON,A.ALAKAZAM])).setPartyMemberFunc(2,W([A.FARIGIRAF])).setPartyMemberFunc(3,W([A.BRONZONG])).setPartyMemberFunc(4,W([A.MR_RIME,A.HISUI_BRAVIARY])).setPartyMemberFunc(5,W([A.GALLADE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.abilityIndex=1,R.generateAndPopulateMoveset()})),[U.SHAUNTAL]:new z(++j).initForEliteFour(fA.SHAUNTAL,!1,t.GHOST,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,W([A.COFAGRIGUS])).setPartyMemberFunc(2,W([A.GOLURK])).setPartyMemberFunc(3,W([A.JELLICENT])).setPartyMemberFunc(4,W([A.MISMAGIUS,A.FROSLASS])).setPartyMemberFunc(5,W([A.CHANDELURE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.MARSHAL]:new z(++j).initForEliteFour(fA.MARSHAL,!0,t.FIGHTING,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,W([A.THROH,A.SAWK])).setPartyMemberFunc(2,W([A.MIENSHAO])).setPartyMemberFunc(3,W([A.EMBOAR])).setPartyMemberFunc(4,W([A.BRELOOM,A.TOXICROAK])).setPartyMemberFunc(5,W([A.CONKELDURR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.GRIMSLEY]:new z(++j).initForEliteFour(fA.GRIMSLEY,!0,t.DARK,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,W([A.LIEPARD])).setPartyMemberFunc(2,W([A.KROOKODILE])).setPartyMemberFunc(3,W([A.SCRAFTY])).setPartyMemberFunc(4,W([A.ZOROARK,A.HISUI_SAMUROTT])).setPartyMemberFunc(5,W([A.KINGAMBIT],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.CAITLIN]:new z(++j).initForEliteFour(fA.CAITLIN,!1,t.PSYCHIC,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,W([A.MUSHARNA])).setPartyMemberFunc(2,W([A.REUNICLUS])).setPartyMemberFunc(3,W([A.GALLADE],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(4,W([A.SIGILYPH,A.HISUI_BRAVIARY])).setPartyMemberFunc(5,W([A.GOTHITELLE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.MALVA]:new z(++j).initForEliteFour(fA.MALVA,!1,t.FIRE,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,W([A.PYROAR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.FEMALE})).setPartyMemberFunc(2,W([A.HOUNDOOM])).setPartyMemberFunc(3,W([A.TORKOAL],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(4,W([A.CHANDELURE,A.DELPHOX])).setPartyMemberFunc(5,W([A.TALONFLAME],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.SIEBOLD]:new z(++j).initForEliteFour(fA.SIEBOLD,!0,t.WATER,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,W([A.CLAWITZER])).setPartyMemberFunc(2,W([A.GYARADOS])).setPartyMemberFunc(3,W([A.STARMIE])).setPartyMemberFunc(4,W([A.BLASTOISE,A.DONDOZO])).setPartyMemberFunc(5,W([A.BARBARACLE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.abilityIndex=1,R.generateAndPopulateMoveset()})),[U.WIKSTROM]:new z(++j).initForEliteFour(fA.WIKSTROM,!0,t.STEEL,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,W([A.KLEFKI])).setPartyMemberFunc(2,W([A.CERULEDGE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.IRON_HEAD)||(R.moveset[2]=new pA(E.IRON_HEAD))})).setPartyMemberFunc(3,W([A.SCIZOR])).setPartyMemberFunc(4,W([A.CORVIKNIGHT])).setPartyMemberFunc(5,W([A.AEGISLASH],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.DRASNA]:new z(++j).initForEliteFour(fA.DRASNA,!1,t.DRAGON,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,W([A.DRAGALGE])).setPartyMemberFunc(2,W([A.GARCHOMP])).setPartyMemberFunc(3,W([A.ALTARIA])).setPartyMemberFunc(4,W([A.DRUDDIGON])).setPartyMemberFunc(5,W([A.NOIVERN],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.HALA]:new z(++j).initForEliteFour(fA.HALA,!0,t.FIGHTING,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,W([A.HARIYAMA])).setPartyMemberFunc(2,W([A.INCINEROAR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.CROSS_CHOP)||(R.moveset[2]=new pA(E.CROSS_CHOP))})).setPartyMemberFunc(3,W([A.BEWEAR])).setPartyMemberFunc(4,W([A.POLIWRATH,A.ANNIHILAPE])).setPartyMemberFunc(5,W([A.CRABOMINABLE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.MOLAYNE]:new z(++j).initForEliteFour(fA.MOLAYNE,!0,t.STEEL,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,W([A.KLEFKI])).setPartyMemberFunc(2,W([A.ALOLA_SANDSLASH])).setPartyMemberFunc(3,W([A.MAGNEZONE])).setPartyMemberFunc(4,W([A.METAGROSS,A.KINGAMBIT])).setPartyMemberFunc(5,W([A.ALOLA_DUGTRIO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.OLIVIA]:new z(++j).initForEliteFour(fA.OLIVIA,!1,t.ROCK,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,W([A.GIGALITH],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(2,W([A.PROBOPASS])).setPartyMemberFunc(3,W([A.ALOLA_GOLEM])).setPartyMemberFunc(4,W([A.RELICANTH,A.CARBINK])).setPartyMemberFunc(5,W([A.LYCANROC],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.formIndex=1,R.generateAndPopulateMoveset()})),[U.ACEROLA]:new z(++j).initForEliteFour(fA.ACEROLA,!1,t.GHOST,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,W([A.DRIFBLIM])).setPartyMemberFunc(2,W([A.MIMIKYU])).setPartyMemberFunc(3,W([A.DHELMISE])).setPartyMemberFunc(4,W([A.FROSLASS])).setPartyMemberFunc(5,W([A.PALOSSAND],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.KAHILI]:new z(++j).initForEliteFour(fA.KAHILI,!1,t.FLYING,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,W([A.HAWLUCHA])).setPartyMemberFunc(2,W([A.DECIDUEYE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.BRAVE_BIRD)||(R.moveset[2]=new pA(E.BRAVE_BIRD))})).setPartyMemberFunc(3,W([A.BRAVIARY,A.MANDIBUZZ])).setPartyMemberFunc(4,W([A.ORICORIO])).setPartyMemberFunc(5,W([A.TOUCANNON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.MARNIE_ELITE]:new z(++j).setName("Marnie").initForEliteFour(fA.MARNIE_ELITE,!1,t.DARK,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,W([A.LIEPARD])).setPartyMemberFunc(2,W([A.TOXICROAK],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.SUCKER_PUNCH)||(R.moveset[2]=new pA(E.SUCKER_PUNCH))})).setPartyMemberFunc(3,W([A.SCRAFTY,A.PANGORO])).setPartyMemberFunc(4,W([A.MORPEKO])).setPartyMemberFunc(5,W([A.GRIMMSNARL],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.NESSA_ELITE]:new z(++j).setName("Nessa").initForEliteFour(fA.NESSA_ELITE,!1,t.WATER,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,W([A.GOLISOPOD])).setPartyMemberFunc(2,W([A.EISCUE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.LIQUIDATION)||(R.moveset[2]=new pA(E.LIQUIDATION))})).setPartyMemberFunc(3,W([A.PELIPPER],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(4,W([A.TOXAPEX])).setPartyMemberFunc(5,W([A.DREDNAW],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.BEA_ELITE]:new z(++j).setName("Bea").initForEliteFour(fA.BEA_ELITE,!1,t.FIGHTING,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,W([A.HAWLUCHA])).setPartyMemberFunc(2,W([A.SIRFETCHD])).setPartyMemberFunc(3,W([A.GRAPPLOCT,A.FALINKS])).setPartyMemberFunc(4,W([A.HITMONTOP])).setPartyMemberFunc(5,W([A.MACHAMP],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.ALLISTER_ELITE]:new z(++j).setName("Allister").initForEliteFour(fA.ALLISTER_ELITE,!0,t.GHOST,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,W([A.DUSKNOIR])).setPartyMemberFunc(2,W([A.RUNERIGUS])).setPartyMemberFunc(3,W([A.POLTEAGEIST,A.SINISTCHA])).setPartyMemberFunc(4,W([A.CURSOLA])).setPartyMemberFunc(5,W([A.GENGAR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.RAIHAN_ELITE]:new z(++j).setName("Raihan").initForEliteFour(fA.RAIHAN_ELITE,!0,t.DRAGON,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,W([A.FLYGON])).setPartyMemberFunc(2,W([A.TORKOAL],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST))})).setPartyMemberFunc(3,W([A.GOODRA])).setPartyMemberFunc(4,W([A.TURTONATOR])).setPartyMemberFunc(5,W([A.ARCHALUDON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.RIKA]:new z(++j).initForEliteFour(fA.RIKA,!1,t.GROUND,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,W([A.DUGTRIO])).setPartyMemberFunc(2,W([A.DONPHAN])).setPartyMemberFunc(3,W([A.SWAMPERT,A.TORTERRA])).setPartyMemberFunc(4,W([A.CAMERUPT])).setPartyMemberFunc(5,W([A.CLODSIRE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.POPPY]:new z(++j).initForEliteFour(fA.POPPY,!1,t.STEEL,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,W([A.COPPERAJAH])).setPartyMemberFunc(2,W([A.MAGNEZONE])).setPartyMemberFunc(3,W([A.BRONZONG,A.CORVIKNIGHT],v.TRAINER,!0,R=>{R.abilityIndex=R.species.speciesId===A.BRONZONG?0:1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(4,W([A.STEELIX])).setPartyMemberFunc(5,W([A.TINKATON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.LARRY_ELITE]:new z(++j).setName("Larry").initForEliteFour(fA.LARRY_ELITE,!0,t.FLYING,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,W([A.ALTARIA])).setPartyMemberFunc(2,W([A.BOMBIRDIER])).setPartyMemberFunc(3,W([A.TROPIUS])).setPartyMemberFunc(4,W([A.STARAPTOR])).setPartyMemberFunc(5,W([A.FLAMIGO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.HASSEL]:new z(++j).initForEliteFour(fA.HASSEL,!0,t.DRAGON,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,W([A.NOIVERN])).setPartyMemberFunc(2,W([A.DRAGALGE])).setPartyMemberFunc(3,W([A.FLAPPLE,A.APPLETUN,A.HYDRAPPLE])).setPartyMemberFunc(4,W([A.HAXORUS])).setPartyMemberFunc(5,W([A.BAXCALIBUR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.CRISPIN]:new z(++j).initForEliteFour(fA.CRISPIN,!0,t.FIRE,2).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,W([A.ROTOM],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(2,W([A.EXEGGUTOR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST))})).setPartyMemberFunc(3,W([A.TALONFLAME],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.SUNNY_DAY)||(R.moveset[2]=new pA(E.SUNNY_DAY))})).setPartyMemberFunc(4,W([A.MAGMORTAR])).setPartyMemberFunc(5,W([A.BLAZIKEN],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.AMARYS]:new z(++j).initForEliteFour(fA.AMARYS,!1,t.STEEL,2).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,W([A.SKARMORY])).setPartyMemberFunc(2,W([A.REUNICLUS],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.FLASH_CANNON)||(R.moveset[2]=new pA(E.FLASH_CANNON))})).setPartyMemberFunc(3,W([A.EMPOLEON])).setPartyMemberFunc(4,W([A.SCIZOR])).setPartyMemberFunc(5,W([A.METAGROSS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.LACEY]:new z(++j).initForEliteFour(fA.LACEY,!1,t.FAIRY,5).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,W([A.WHIMSICOTT])).setPartyMemberFunc(2,W([A.PRIMARINA])).setPartyMemberFunc(3,W([A.GRANBULL])).setPartyMemberFunc(4,W([A.ALCREMIE])).setPartyMemberFunc(5,W([A.EXCADRILL],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST))})),[U.DRAYTON]:new z(++j).initForEliteFour(fA.DRAYTON,!0,t.DRAGON,2).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,W([A.DRAGONITE])).setPartyMemberFunc(2,W([A.SCEPTILE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.DUAL_CHOP)||(R.moveset[2]=new pA(E.DUAL_CHOP))})).setPartyMemberFunc(3,W([A.HAXORUS])).setPartyMemberFunc(4,W([A.KINGDRA,A.DRACOVISH])).setPartyMemberFunc(5,W([A.ARCHALUDON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})),[U.BLUE]:new z(j=U.BLUE).initForChampion(!0).setBattleBgm("battle_kanto_champion").setMixedBattleBgm("battle_kanto_champion").setHasDouble("blue_red_double").setDoubleTrainerType(U.RED).setDoubleTitle("champion_double").setPartyMemberFunc(0,W([A.ALAKAZAM])).setPartyMemberFunc(1,W([A.MACHAMP])).setPartyMemberFunc(2,W([A.HO_OH],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.RHYPERIOR,A.ELECTIVIRE])).setPartyMemberFunc(4,W([A.ARCANINE,A.EXEGGUTOR,A.GYARADOS],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2)})).setPartyMemberFunc(5,W([A.PIDGEOT],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName(),R.gender=mA.MALE})).setInstantTera(3),[U.RED]:new z(++j).initForChampion(!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setHasDouble("red_blue_double").setDoubleTrainerType(U.BLUE).setDoubleTitle("champion_double").setPartyMemberFunc(0,W([A.PIKACHU],v.TRAINER,!0,R=>{R.formIndex=8,R.generateAndPopulateMoveset(),R.generateName(),R.gender=mA.MALE})).setPartyMemberFunc(1,W([A.ESPEON,A.UMBREON,A.SYLVEON])).setPartyMemberFunc(2,W([A.LUGIA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR])).setPartyMemberFunc(4,W([A.SNORLAX],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2)})).setPartyMemberFunc(5,W([A.VENUSAUR,A.CHARIZARD,A.BLASTOISE],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName(),R.gender=mA.MALE})).setInstantTera(3),[U.LANCE_CHAMPION]:new z(++j).setName("Lance").initForChampion(!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setPartyMemberFunc(0,W([A.GYARADOS,A.KINGDRA])).setPartyMemberFunc(1,W([A.AERODACTYL])).setPartyMemberFunc(2,W([A.SALAMENCE],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName()})).setPartyMemberFunc(3,W([A.CHARIZARD])).setPartyMemberFunc(4,W([A.TYRANITAR,A.GARCHOMP,A.KOMMO_O],v.TRAINER,!0,R=>{R.teraType=t.DRAGON,R.generateAndPopulateMoveset(),R.abilityIndex=R.species.speciesId===A.KOMMO_O?1:2})).setPartyMemberFunc(5,W([A.DRAGONITE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE,R.setBoss(!0,2)})).setInstantTera(4),[U.STEVEN]:new z(++j).initForChampion(!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("steven_wallace_double").setDoubleTrainerType(U.WALLACE).setDoubleTitle("champion_double").setPartyMemberFunc(0,W([A.SKARMORY])).setPartyMemberFunc(1,W([A.CRADILY,A.ARMALDO])).setPartyMemberFunc(2,W([A.AGGRON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2)})).setPartyMemberFunc(3,W([A.GOLURK,A.RUNERIGUS])).setPartyMemberFunc(4,W([A.REGIROCK,A.REGICE,A.REGISTEEL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(5,W([A.METAGROSS],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName()})).setInstantTera(4),[U.WALLACE]:new z(++j).initForChampion(!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("wallace_steven_double").setDoubleTrainerType(U.STEVEN).setDoubleTitle("champion_double").setPartyMemberFunc(0,W([A.PELIPPER],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(1,W([A.LUDICOLO])).setPartyMemberFunc(2,W([A.LATIAS,A.LATIOS],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.SWAMPERT,A.GASTRODON,A.SEISMITOAD])).setPartyMemberFunc(4,W([A.REGIELEKI,A.REGIDRAGO],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(5,W([A.MILOTIC],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.FEMALE,R.setBoss(!0,2)})).setInstantTera(4),[U.CYNTHIA]:new z(++j).initForChampion(!1).setBattleBgm("battle_sinnoh_champion").setMixedBattleBgm("battle_sinnoh_champion").setPartyMemberFunc(0,W([A.SPIRITOMB])).setPartyMemberFunc(1,W([A.LUCARIO])).setPartyMemberFunc(2,W([A.GIRATINA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.MILOTIC,A.ROSERADE,A.HISUI_ARCANINE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.teraType=R.species.type1})).setPartyMemberFunc(4,W([A.TOGEKISS],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2)})).setPartyMemberFunc(5,W([A.GARCHOMP],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName(),R.gender=mA.FEMALE})).setInstantTera(3),[U.ALDER]:new z(++j).initForChampion(!0).setHasDouble("alder_iris_double").setDoubleTrainerType(U.IRIS).setDoubleTitle("champion_double").setBattleBgm("battle_champion_alder").setMixedBattleBgm("battle_champion_alder").setPartyMemberFunc(0,W([A.BOUFFALANT,A.BRAVIARY])).setPartyMemberFunc(1,W([A.HISUI_LILLIGANT,A.HISUI_ZOROARK,A.BASCULEGION],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(2,W([A.ZEKROM],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.KELDEO],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(4,W([A.CHANDELURE,A.KROOKODILE,A.REUNICLUS,A.CONKELDURR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.teraType=R.species.speciesId===A.KROOKODILE?t.DARK:R.species.type1})).setPartyMemberFunc(5,W([A.VOLCARONA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE,R.setBoss(!0,2)})).setInstantTera(4),[U.IRIS]:new z(++j).initForChampion(!1).setBattleBgm("battle_champion_iris").setMixedBattleBgm("battle_champion_iris").setHasDouble("iris_alder_double").setDoubleTrainerType(U.ALDER).setDoubleTitle("champion_double").setPartyMemberFunc(0,W([A.DRUDDIGON])).setPartyMemberFunc(1,W([A.ARCHEOPS])).setPartyMemberFunc(2,W([A.RESHIRAM],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.SALAMENCE,A.HYDREIGON,A.ARCHALUDON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.teraType=t.DRAGON})).setPartyMemberFunc(4,W([A.LAPRAS],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName()})).setPartyMemberFunc(5,W([A.HAXORUS],v.TRAINER,!0,R=>{R.abilityIndex=1,R.generateAndPopulateMoveset(),R.gender=mA.FEMALE,R.setBoss(!0,2)})).setInstantTera(3),[U.DIANTHA]:new z(++j).initForChampion(!1).setMixedBattleBgm("battle_kalos_champion").setPartyMemberFunc(0,W([A.HAWLUCHA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset()})).setPartyMemberFunc(1,W([A.TREVENANT,A.GOURGEIST])).setPartyMemberFunc(2,W([A.XERNEAS],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.TYRANTRUM,A.AURORUS],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=2,R.teraType=R.species.type2})).setPartyMemberFunc(4,W([A.GOODRA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2)})).setPartyMemberFunc(5,W([A.GARDEVOIR],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName(),R.gender=mA.FEMALE})).setInstantTera(3),[U.KUKUI]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_champion_kukui").setPartyMemberFunc(0,W([A.LYCANROC],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=2})).setPartyMemberFunc(1,W([A.MAGNEZONE,A.ALOLA_NINETALES])).setPartyMemberFunc(2,W([A.TORNADUS,A.THUNDURUS,A.LANDORUS],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(3,W([A.TAPU_KOKO,A.TAPU_FINI],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(4,W([A.SNORLAX],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=1})).setPartyMemberFunc(5,W([A.INCINEROAR,A.HISUI_DECIDUEYE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE,R.teraType=R.species.type2})).setInstantTera(5),[U.HAU]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_alola_champion").setPartyMemberFunc(0,W([A.ALOLA_RAICHU])).setPartyMemberFunc(1,W([A.NOIVERN])).setPartyMemberFunc(2,W([A.SOLGALEO],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.TAPU_LELE,A.TAPU_BULU],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.teraType=R.species.type1})).setPartyMemberFunc(4,W([A.ZYGARDE],v.TRAINER,!0,R=>{R.formIndex=1,R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(5,W([A.DECIDUEYE,A.PRIMARINA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2),R.gender=R.species.speciesId===A.PRIMARINA?mA.FEMALE:mA.MALE})).setInstantTera(3),[U.LEON]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_galar_champion").setPartyMemberFunc(0,W([A.AEGISLASH])).setPartyMemberFunc(1,W([A.RHYPERIOR,A.SEISMITOAD,A.MR_RIME])).setPartyMemberFunc(2,W([A.ZACIAN],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.DRAGAPULT])).setPartyMemberFunc(4,W([A.RILLABOOM,A.CINDERACE,A.INTELEON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2)})).setPartyMemberFunc(5,W([A.CHARIZARD],v.TRAINER,!0,R=>{R.formIndex=3,R.generateAndPopulateMoveset(),R.generateName(),R.gender=mA.MALE})).setInstantTera(3),[U.MUSTARD]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_mustard").setPartyMemberFunc(0,W([A.CORVIKNIGHT],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.KOMMO_O],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(2,W([A.GALAR_SLOWBRO,A.GALAR_SLOWKING],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.teraType=R.species.type1})).setPartyMemberFunc(3,W([A.GALAR_DARMANITAN],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(4,W([A.BLASTOISE,A.VENUSAUR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.setBoss(!0,2),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(5,W([A.URSHIFU],v.TRAINER,!0,R=>{R.formIndex=LH(2,3),R.generateAndPopulateMoveset(),R.generateName(),R.gender=mA.MALE,R.pokeball=MA.ULTRA_BALL})).setInstantTera(2),[U.GEETA]:new z(++j).initForChampion(!1).setMixedBattleBgm("battle_champion_geeta").setPartyMemberFunc(0,W([A.GLIMMORA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE,R.setBoss(!0,2)})).setPartyMemberFunc(1,W([A.ESPATHRA,A.VELUZA])).setPartyMemberFunc(2,W([A.MIRAIDON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.BAXCALIBUR])).setPartyMemberFunc(4,W([A.CHESNAUGHT,A.DELPHOX,A.GRENINJA])).setPartyMemberFunc(5,W([A.KINGAMBIT],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.moveset.some(e=>!SA(e)&&e.moveId===E.TERA_BLAST)||(R.moveset[2]=new pA(E.TERA_BLAST)),R.abilityIndex=1,R.teraType=t.FLYING})).setInstantTera(5),[U.NEMONA]:new z(++j).initForChampion(!1).setMixedBattleBgm("battle_champion_nemona").setPartyMemberFunc(0,W([A.LYCANROC],v.TRAINER,!0,R=>{R.formIndex=0,R.generateAndPopulateMoveset()})).setPartyMemberFunc(1,W([A.PAWMOT])).setPartyMemberFunc(2,W([A.KORAIDON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.GHOLDENGO])).setPartyMemberFunc(4,W([A.ARMAROUGE,A.CERULEDGE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.teraType=R.species.type2})).setPartyMemberFunc(5,W([A.MEOWSCARADA,A.SKELEDIRGE,A.QUAQUAVAL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE,R.setBoss(!0,2)})).setInstantTera(4),[U.KIERAN]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_champion_kieran").setPartyMemberFunc(0,W([A.POLIWRATH,A.POLITOED])).setPartyMemberFunc(1,W([A.INCINEROAR,A.GRIMMSNARL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=R.species.speciesId===A.INCINEROAR?2:0})).setPartyMemberFunc(2,W([A.TERAPAGOS],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(3,W([A.URSALUNA,A.BLOODMOON_URSALUNA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(4,W([A.OGERPON],v.TRAINER,!0,R=>{R.formIndex=DA(4),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.moveset.some(e=>!SA(e)&&e.moveId===E.IVY_CUDGEL)||(R.moveset[0]=new pA(E.IVY_CUDGEL))})).setPartyMemberFunc(5,W([A.HYDRAPPLE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE,R.setBoss(!0,2)})).setInstantTera(4),[U.RIVAL]:new z(j=U.RIVAL).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(PA.RIVAL).setModifierRewardFuncs(()=>k.SUPER_EXP_CHARM,()=>k.EXP_SHARE).setPartyMemberFunc(0,W([A.BULBASAUR,A.CHARMANDER,A.SQUIRTLE,A.CHIKORITA,A.CYNDAQUIL,A.TOTODILE,A.TREECKO,A.TORCHIC,A.MUDKIP,A.TURTWIG,A.CHIMCHAR,A.PIPLUP,A.SNIVY,A.TEPIG,A.OSHAWOTT,A.CHESPIN,A.FENNEKIN,A.FROAKIE,A.ROWLET,A.LITTEN,A.POPPLIO,A.GROOKEY,A.SCORBUNNY,A.SOBBLE,A.SPRIGATITO,A.FUECOCO,A.QUAXLY],v.TRAINER,!0,R=>R.abilityIndex=0)).setPartyMemberFunc(1,W([A.PIDGEY,A.HOOTHOOT,A.TAILLOW,A.STARLY,A.PIDOVE,A.FLETCHLING,A.PIKIPEK,A.ROOKIDEE,A.WATTREL],v.TRAINER,!0)),[U.RIVAL_2]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.25).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(PA.RIVAL_2).setModifierRewardFuncs(()=>k.EXP_SHARE).setPartyMemberFunc(0,W([A.IVYSAUR,A.CHARMELEON,A.WARTORTLE,A.BAYLEEF,A.QUILAVA,A.CROCONAW,A.GROVYLE,A.COMBUSKEN,A.MARSHTOMP,A.GROTLE,A.MONFERNO,A.PRINPLUP,A.SERVINE,A.PIGNITE,A.DEWOTT,A.QUILLADIN,A.BRAIXEN,A.FROGADIER,A.DARTRIX,A.TORRACAT,A.BRIONNE,A.THWACKEY,A.RABOOT,A.DRIZZILE,A.FLORAGATO,A.CROCALOR,A.QUAXWELL],v.TRAINER,!0,R=>R.abilityIndex=0)).setPartyMemberFunc(1,W([A.PIDGEOTTO,A.HOOTHOOT,A.TAILLOW,A.STARAVIA,A.TRANQUILL,A.FLETCHINDER,A.TRUMBEAK,A.CORVISQUIRE,A.WATTREL],v.TRAINER,!0)).setPartyMemberFunc(2,sT(R=>!lE.hasOwnProperty(R.speciesId)&&!Fe.hasOwnProperty(R.speciesId)&&R.baseTotal>=450)),[U.RIVAL_3]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.5).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(PA.RIVAL_3).setPartyMemberFunc(0,W([A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.SERPERIOR,A.EMBOAR,A.SAMUROTT,A.CHESNAUGHT,A.DELPHOX,A.GRENINJA,A.DECIDUEYE,A.INCINEROAR,A.PRIMARINA,A.RILLABOOM,A.CINDERACE,A.INTELEON,A.MEOWSCARADA,A.SKELEDIRGE,A.QUAQUAVAL],v.TRAINER,!0,R=>R.abilityIndex=0)).setPartyMemberFunc(1,W([A.PIDGEOT,A.NOCTOWL,A.SWELLOW,A.STARAPTOR,A.UNFEZANT,A.TALONFLAME,A.TOUCANNON,A.CORVIKNIGHT,A.KILOWATTREL],v.TRAINER,!0)).setPartyMemberFunc(2,sT(R=>!lE.hasOwnProperty(R.speciesId)&&!Fe.hasOwnProperty(R.speciesId)&&R.baseTotal>=450)).setSpeciesFilter(R=>R.baseTotal>=540),[U.RIVAL_4]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(1.75).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival_2").setMixedBattleBgm("battle_rival_2").setPartyTemplates(PA.RIVAL_4).setModifierRewardFuncs(()=>k.TERA_ORB).setPartyMemberFunc(0,W([A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.SERPERIOR,A.EMBOAR,A.SAMUROTT,A.CHESNAUGHT,A.DELPHOX,A.GRENINJA,A.DECIDUEYE,A.INCINEROAR,A.PRIMARINA,A.RILLABOOM,A.CINDERACE,A.INTELEON,A.MEOWSCARADA,A.SKELEDIRGE,A.QUAQUAVAL],v.TRAINER,!0,R=>{R.abilityIndex=0,R.teraType=R.species.type1})).setPartyMemberFunc(1,W([A.PIDGEOT,A.NOCTOWL,A.SWELLOW,A.STARAPTOR,A.UNFEZANT,A.TALONFLAME,A.TOUCANNON,A.CORVIKNIGHT,A.KILOWATTREL],v.TRAINER,!0)).setPartyMemberFunc(2,sT(R=>!lE.hasOwnProperty(R.speciesId)&&!Fe.hasOwnProperty(R.speciesId)&&R.baseTotal>=450)).setSpeciesFilter(R=>R.baseTotal>=540).setInstantTera(0),[U.RIVAL_5]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(2.25).setEncounterBgm(U.RIVAL).setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(PA.RIVAL_5).setPartyMemberFunc(0,W([A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.SERPERIOR,A.EMBOAR,A.SAMUROTT,A.CHESNAUGHT,A.DELPHOX,A.GRENINJA,A.DECIDUEYE,A.INCINEROAR,A.PRIMARINA,A.RILLABOOM,A.CINDERACE,A.INTELEON,A.MEOWSCARADA,A.SKELEDIRGE,A.QUAQUAVAL],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.abilityIndex=0,R.teraType=R.species.type1})).setPartyMemberFunc(1,W([A.PIDGEOT,A.NOCTOWL,A.SWELLOW,A.STARAPTOR,A.UNFEZANT,A.TALONFLAME,A.TOUCANNON,A.CORVIKNIGHT,A.KILOWATTREL],v.TRAINER,!0)).setPartyMemberFunc(2,sT(R=>!lE.hasOwnProperty(R.speciesId)&&!Fe.hasOwnProperty(R.speciesId)&&R.baseTotal>=450)).setSpeciesFilter(R=>R.baseTotal>=540).setPartyMemberFunc(5,W([A.RAYQUAZA],v.TRAINER,!0,R=>{R.setBoss(!0,3),R.pokeball=MA.MASTER_BALL,R.shiny=pe.getClassicTrainerShinyChance()===0,R.variant=1})).setInstantTera(0),[U.RIVAL_6]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(3).setEncounterBgm("final").setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(PA.RIVAL_6).setPartyMemberFunc(0,W([A.VENUSAUR,A.CHARIZARD,A.BLASTOISE,A.MEGANIUM,A.TYPHLOSION,A.FERALIGATR,A.SCEPTILE,A.BLAZIKEN,A.SWAMPERT,A.TORTERRA,A.INFERNAPE,A.EMPOLEON,A.SERPERIOR,A.EMBOAR,A.SAMUROTT,A.CHESNAUGHT,A.DELPHOX,A.GRENINJA,A.DECIDUEYE,A.INCINEROAR,A.PRIMARINA,A.RILLABOOM,A.CINDERACE,A.INTELEON,A.MEOWSCARADA,A.SKELEDIRGE,A.QUAQUAVAL],v.TRAINER,!0,R=>{R.setBoss(!0,3),R.abilityIndex=0,R.teraType=R.species.type1,R.generateAndPopulateMoveset()})).setPartyMemberFunc(1,W([A.PIDGEOT,A.NOCTOWL,A.SWELLOW,A.STARAPTOR,A.UNFEZANT,A.TALONFLAME,A.TOUCANNON,A.CORVIKNIGHT,A.KILOWATTREL],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})).setPartyMemberFunc(2,sT(R=>!lE.hasOwnProperty(R.speciesId)&&!Fe.hasOwnProperty(R.speciesId)&&R.baseTotal>=450)).setSpeciesFilter(R=>R.baseTotal>=540).setPartyMemberFunc(5,W([A.RAYQUAZA],v.TRAINER,!0,R=>{R.setBoss(),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL,R.shiny=pe.getClassicTrainerShinyChance()===0,R.variant=1,R.formIndex=1,R.generateName()})).setInstantTera(0),[U.ROCKET_BOSS_GIOVANNI_1]:new z(j=U.ROCKET_BOSS_GIOVANNI_1).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[]).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.PERSIAN],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE})).setPartyMemberFunc(1,W([A.DUGTRIO,A.ALOLA_DUGTRIO])).setPartyMemberFunc(2,W([A.HONCHKROW])).setPartyMemberFunc(3,W([A.NIDOQUEEN,A.NIDOKING])).setPartyMemberFunc(4,W([A.RHYPERIOR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.abilityIndex=1})).setPartyMemberFunc(5,W([A.KANGASKHAN],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName()})),[U.ROCKET_BOSS_GIOVANNI_2]:new z(++j).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[],!0).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.TYRANITAR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.GASTRODON,A.SEISMITOAD],v.TRAINER,!0,R=>{R.species.speciesId===A.GASTRODON?R.abilityIndex=0:R.species.speciesId===A.SEISMITOAD&&(R.abilityIndex=2)})).setPartyMemberFunc(2,W([A.GARCHOMP,A.EXCADRILL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.species.speciesId===A.GARCHOMP?R.abilityIndex=2:R.species.speciesId===A.EXCADRILL&&(R.abilityIndex=0)})).setPartyMemberFunc(3,W([A.RHYPERIOR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.abilityIndex=1})).setPartyMemberFunc(4,W([A.KANGASKHAN],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName()})).setPartyMemberFunc(5,W([A.MEWTWO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.MAXIE]:new z(++j).setName("Maxie").initForEvilTeamLeader("Magma Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.SOLROCK])).setPartyMemberFunc(1,W([A.TALONFLAME])).setPartyMemberFunc(2,W([A.WEEZING,A.GALAR_WEEZING])).setPartyMemberFunc(3,W([A.TORKOAL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=1})).setPartyMemberFunc(4,W([A.DONPHAN])).setPartyMemberFunc(5,W([A.CAMERUPT],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName(),R.gender=mA.MALE})),[U.MAXIE_2]:new z(++j).setName("Maxie").initForEvilTeamLeader("Magma Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.TYPHLOSION,A.SOLROCK],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.NINETALES,A.TORKOAL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.species.speciesId===A.NINETALES?R.abilityIndex=2:R.species.speciesId===A.TORKOAL&&(R.abilityIndex=1)})).setPartyMemberFunc(2,W([A.SCOVILLAIN],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=0})).setPartyMemberFunc(3,W([A.GREAT_TUSK],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(4,W([A.CAMERUPT],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName(),R.gender=mA.MALE})).setPartyMemberFunc(5,W([A.GROUDON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.ARCHIE]:new z(++j).setName("Archie").initForEvilTeamLeader("Aqua Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.LUDICOLO])).setPartyMemberFunc(1,W([A.PELIPPER],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=1})).setPartyMemberFunc(2,W([A.MUK,A.ALOLA_MUK])).setPartyMemberFunc(3,W([A.WAILORD])).setPartyMemberFunc(4,W([A.QWILFISH],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=1})).setPartyMemberFunc(5,W([A.SHARPEDO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName(),R.gender=mA.MALE})),[U.ARCHIE_2]:new z(++j).setName("Archie").initForEvilTeamLeader("Aqua Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.LUDICOLO,A.EMPOLEON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.POLITOED,A.PELIPPER],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.species.speciesId===A.POLITOED?R.abilityIndex=2:R.species.speciesId===A.PELIPPER&&(R.abilityIndex=1)})).setPartyMemberFunc(2,W([A.DHELMISE])).setPartyMemberFunc(3,W([A.OVERQWIL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=1})).setPartyMemberFunc(4,W([A.SHARPEDO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName(),R.gender=mA.MALE})).setPartyMemberFunc(5,W([A.KYOGRE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.CYRUS]:new z(++j).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[]).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.GYARADOS])).setPartyMemberFunc(1,W([A.HONCHKROW,A.HISUI_BRAVIARY])).setPartyMemberFunc(2,W([A.MAGNEZONE])).setPartyMemberFunc(3,W([A.UXIE,A.MESPRIT,A.AZELF])).setPartyMemberFunc(4,W([A.HOUNDOOM],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName()})).setPartyMemberFunc(5,W([A.WEAVILE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.gender=mA.MALE})),[U.CYRUS_2]:new z(++j).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[],!0).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.CROBAT],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})).setPartyMemberFunc(1,W([A.MAGNEZONE])).setPartyMemberFunc(2,W([A.UXIE,A.MESPRIT,A.AZELF],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(3,W([A.HOUNDOOM],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName()})).setPartyMemberFunc(4,W([A.WEAVILE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.gender=mA.MALE})).setPartyMemberFunc(5,W([A.DIALGA,A.PALKIA],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.GHETSIS]:new z(++j).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[]).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.COFAGRIGUS])).setPartyMemberFunc(1,W([A.SEISMITOAD])).setPartyMemberFunc(2,W([A.GALVANTULA,A.EELEKTROSS])).setPartyMemberFunc(3,W([A.DRAPION,A.TOXICROAK])).setPartyMemberFunc(4,W([A.KINGAMBIT])).setPartyMemberFunc(5,W([A.HYDREIGON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.gender=mA.MALE})),[U.GHETSIS_2]:new z(++j).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[],!0).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.RUNERIGUS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset()})).setPartyMemberFunc(1,W([A.JELLICENT,A.BASCULEGION],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE,R.formIndex=0})).setPartyMemberFunc(2,W([A.KINGAMBIT])).setPartyMemberFunc(3,W([A.VOLCARONA,A.IRON_MOTH],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(4,W([A.HYDREIGON,A.IRON_JUGULIS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.species.speciesId===A.HYDREIGON?R.gender=mA.MALE:R.species.speciesId===A.IRON_JUGULIS&&(R.gender=mA.GENDERLESS)})).setPartyMemberFunc(5,W([A.KYUREM],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.LYSANDRE]:new z(++j).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[]).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.MIENSHAO])).setPartyMemberFunc(1,W([A.HONCHKROW,A.TALONFLAME])).setPartyMemberFunc(2,W([A.PYROAR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.MALE})).setPartyMemberFunc(3,W([A.DRAGALGE,A.CLAWITZER],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.species.speciesId===A.DRAGALGE?R.abilityIndex=2:R.species.speciesId===A.CLAWITZER&&(R.abilityIndex=0)})).setPartyMemberFunc(4,W([A.GALLADE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=1})).setPartyMemberFunc(5,W([A.GYARADOS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName(),R.gender=mA.MALE})),[U.LYSANDRE_2]:new z(++j).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[],!0).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.PYROAR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.gender=mA.MALE})).setPartyMemberFunc(1,W([A.DRAGALGE,A.CLAWITZER],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.species.speciesId===A.DRAGALGE?R.abilityIndex=2:R.species.speciesId===A.CLAWITZER&&(R.abilityIndex=0)})).setPartyMemberFunc(2,W([A.AEGISLASH,A.HISUI_GOODRA])).setPartyMemberFunc(3,W([A.IRON_VALIANT],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(4,W([A.GYARADOS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=1,R.generateName(),R.gender=mA.MALE})).setPartyMemberFunc(5,W([A.ZYGARDE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL,R.formIndex=0})),[U.LUSAMINE]:new z(++j).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[]).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.CLEFABLE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.gender=mA.FEMALE})).setPartyMemberFunc(1,W([A.LILLIGANT,A.HISUI_LILLIGANT])).setPartyMemberFunc(2,W([A.MILOTIC,A.PRIMARINA])).setPartyMemberFunc(3,W([A.GALAR_SLOWBRO,A.GALAR_SLOWKING])).setPartyMemberFunc(4,W([A.BEWEAR])).setPartyMemberFunc(5,W([A.NIHILEGO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})),[U.LUSAMINE_2]:new z(++j).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[],!0).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.CLEFABLE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.gender=mA.FEMALE})).setPartyMemberFunc(1,W([A.MILOTIC,A.PRIMARINA])).setPartyMemberFunc(2,W([A.SILVALLY],v.TRAINER,!0,R=>{R.formIndex=DA(18),R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL,R.moveset.some(e=>!SA(e)&&e.moveId===E.MULTI_ATTACK)||(R.moveset[0]=new pA(E.MULTI_ATTACK))})).setPartyMemberFunc(3,W([A.PHEROMOSA],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(4,W([A.NIHILEGO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(5,W([A.NECROZMA],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.formIndex=2,R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.GUZMA]:new z(++j).setName("Guzma").initForEvilTeamLeader("Skull Boss",[]).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.YANMEGA,A.LOKIX],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.species.speciesId===A.YANMEGA?R.abilityIndex=1:R.species.speciesId===A.LOKIX&&(R.abilityIndex=2)})).setPartyMemberFunc(1,W([A.HERACROSS])).setPartyMemberFunc(2,W([A.SCIZOR,A.KLEAVOR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.species.speciesId===A.SCIZOR?R.abilityIndex=1:R.species.speciesId===A.KLEAVOR&&(R.abilityIndex=2)})).setPartyMemberFunc(3,W([A.GALVANTULA,A.VIKAVOLT])).setPartyMemberFunc(4,W([A.PINSIR],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=1,R.pokeball=MA.ULTRA_BALL,R.generateName()})).setPartyMemberFunc(5,W([A.GOLISOPOD],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.gender=mA.MALE})),[U.GUZMA_2]:new z(++j).setName("Guzma").initForEvilTeamLeader("Skull Boss",[],!0).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.GOLISOPOD],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.abilityIndex=2,R.gender=mA.MALE})).setPartyMemberFunc(1,W([A.BUZZWOLE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(2,W([A.CRAWDAUNT,A.HISUI_SAMUROTT],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=2})).setPartyMemberFunc(3,W([A.XURKITREE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(4,W([A.GENESECT],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.formIndex=DA(4,1),R.moveset.some(e=>!SA(e)&&e.moveId===E.TECHNO_BLAST)||(R.moveset[2]=new pA(E.TECHNO_BLAST))})).setPartyMemberFunc(5,W([A.PINSIR],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.formIndex=1,R.generateAndPopulateMoveset(),R.generateName(),R.pokeball=MA.ULTRA_BALL})),[U.ROSE]:new z(++j).setName("Rose").initForEvilTeamLeader("Macro Boss",[]).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.ARCHALUDON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.ESCAVALIER,A.FERROTHORN],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(2,W([A.SIRFETCHD,A.MR_RIME],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(3,W([A.CORVIKNIGHT],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(4,W([A.KLINKLANG,A.PERRSERKER],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(5,W([A.COPPERAJAH],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.formIndex=1,R.generateName(),R.pokeball=MA.ULTRA_BALL,R.gender=mA.FEMALE})),[U.ROSE_2]:new z(++j).setName("Rose").initForEvilTeamLeader("Macro Boss",[],!0).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.ARCHALUDON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.AEGISLASH,A.GHOLDENGO],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(2,W([A.DRACOZOLT,A.DRACOVISH],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL,R.abilityIndex=1})).setPartyMemberFunc(3,W([A.MELMETAL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(4,W([A.GALAR_ARTICUNO,A.GALAR_ZAPDOS,A.GALAR_MOLTRES],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(5,W([A.COPPERAJAH],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.formIndex=1,R.generateName(),R.pokeball=MA.ULTRA_BALL,R.gender=mA.FEMALE})),[U.PENNY]:new z(++j).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[]).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.JOLTEON,A.LEAFEON])).setPartyMemberFunc(1,W([A.VAPOREON,A.UMBREON])).setPartyMemberFunc(2,W([A.ESPEON,A.GLACEON])).setPartyMemberFunc(3,W([A.FLAREON])).setPartyMemberFunc(4,W([A.SYLVEON],v.TRAINER,!0,R=>{R.abilityIndex=2,R.generateAndPopulateMoveset(),R.gender=mA.FEMALE})).setPartyMemberFunc(5,W([A.EEVEE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.formIndex=2,R.pokeball=MA.ULTRA_BALL,R.generateName()})).setInstantTera(4),[U.PENNY_2]:new z(++j).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[],!0).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,W([A.SYLVEON],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.abilityIndex=2,R.generateAndPopulateMoveset(),R.gender=mA.FEMALE})).setPartyMemberFunc(1,W([A.ROTOM],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=DA(5,1)})).setPartyMemberFunc(2,W([A.RAIKOU,A.ENTEI,A.SUICUNE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(3,W([A.REVAVROOM],v.TRAINER,!0,R=>{R.formIndex=DA(5,1),R.generateAndPopulateMoveset(),R.pokeball=MA.ROGUE_BALL})).setPartyMemberFunc(4,W([A.ZAMAZENTA],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})).setPartyMemberFunc(5,W([A.EEVEE],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.formIndex=2,R.generateName(),R.pokeball=MA.ULTRA_BALL})).setInstantTera(0),[U.BUCK]:new z(++j).setName("Buck").initForStatTrainer(!0).setPartyMemberFunc(0,W([A.CLAYDOL],v.TRAINER,!0,R=>{R.setBoss(!0,3),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.VENUSAUR,A.COALOSSAL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.GREAT_BALL,R.species.speciesId===A.VENUSAUR?(R.formIndex=2,R.abilityIndex=2):R.formIndex=1,R.generateName()})).setPartyMemberFunc(2,W([A.AGGRON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=1,R.generateName()})).setPartyMemberFunc(3,W([A.TORKOAL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.abilityIndex=1})).setPartyMemberFunc(4,W([A.GREAT_TUSK],v.TRAINER,!0)).setPartyMemberFunc(5,W([A.HEATRAN],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.CHERYL]:new z(++j).setName("Cheryl").initForStatTrainer().setPartyMemberFunc(0,W([A.BLISSEY],v.TRAINER,!0,R=>{R.setBoss(!0,3),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.SNORLAX,A.LAPRAS],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.GREAT_BALL,R.formIndex=1,R.generateName()})).setPartyMemberFunc(2,W([A.AUDINO],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=1,R.generateName()})).setPartyMemberFunc(3,W([A.GOODRA],v.TRAINER,!0)).setPartyMemberFunc(4,W([A.IRON_HANDS],v.TRAINER,!0)).setPartyMemberFunc(5,W([A.CRESSELIA,A.ENAMORUS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.species.speciesId===A.ENAMORUS&&(R.formIndex=1,R.generateName()),R.pokeball=MA.MASTER_BALL})),[U.MARLEY]:new z(++j).setName("Marley").initForStatTrainer().setPartyMemberFunc(0,W([A.ARCANINE],v.TRAINER,!0,R=>{R.setBoss(!0,3),R.generateAndPopulateMoveset(),R.pokeball=MA.ULTRA_BALL})).setPartyMemberFunc(1,W([A.CINDERACE,A.INTELEON],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.GREAT_BALL,R.formIndex=1,R.generateName()})).setPartyMemberFunc(2,W([A.AERODACTYL],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.formIndex=1,R.generateName()})).setPartyMemberFunc(3,W([A.DRAGAPULT],v.TRAINER,!0)).setPartyMemberFunc(4,W([A.IRON_BUNDLE],v.TRAINER,!0)).setPartyMemberFunc(5,W([A.REGIELEKI],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.MIRA]:new z(++j).setName("Mira").initForStatTrainer().setPartyMemberFunc(0,W([A.ALAKAZAM],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.formIndex=1,R.pokeball=MA.ULTRA_BALL,R.generateName()})).setPartyMemberFunc(1,W([A.GENGAR,A.HATTERENE],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.GREAT_BALL,R.formIndex=R.species.speciesId===A.GENGAR?2:1,R.generateName()})).setPartyMemberFunc(2,W([A.FLUTTER_MANE],v.TRAINER,!0)).setPartyMemberFunc(3,W([A.HYDREIGON],v.TRAINER,!0)).setPartyMemberFunc(4,W([A.MAGNEZONE],v.TRAINER,!0)).setPartyMemberFunc(5,W([A.LATIOS,A.LATIAS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.pokeball=MA.MASTER_BALL})),[U.RILEY]:new z(++j).setName("Riley").initForStatTrainer(!0).setPartyMemberFunc(0,W([A.LUCARIO],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.formIndex=1,R.pokeball=MA.ULTRA_BALL,R.generateName()})).setPartyMemberFunc(1,W([A.RILLABOOM,A.CENTISKORCH],v.TRAINER,!0,R=>{R.generateAndPopulateMoveset(),R.pokeball=MA.GREAT_BALL,R.formIndex=1,R.generateName()})).setPartyMemberFunc(2,W([A.TYRANITAR],v.TRAINER,!0)).setPartyMemberFunc(3,W([A.ROARING_MOON],v.TRAINER,!0)).setPartyMemberFunc(4,W([A.URSALUNA],v.TRAINER,!0)).setPartyMemberFunc(5,W([A.REGIGIGAS,A.LANDORUS],v.TRAINER,!0,R=>{R.setBoss(!0,2),R.generateAndPopulateMoveset(),R.species.speciesId===A.LANDORUS&&(R.formIndex=1,R.generateName()),R.pokeball=MA.MASTER_BALL})),[U.VICTOR]:new z(++j).setTitle("The Winstrates").setLocalizedName("Victor").setMoneyMultiplier(1).setPartyTemplates(PA.ONE_AVG_ONE_STRONG),[U.VICTORIA]:new z(++j).setTitle("The Winstrates").setLocalizedName("Victoria").setMoneyMultiplier(1).setPartyTemplates(PA.ONE_AVG_ONE_STRONG),[U.VIVI]:new z(++j).setTitle("The Winstrates").setLocalizedName("Vivi").setMoneyMultiplier(1).setPartyTemplates(PA.TWO_AVG_ONE_STRONG),[U.VICKY]:new z(++j).setTitle("The Winstrates").setLocalizedName("Vicky").setMoneyMultiplier(1).setPartyTemplates(PA.ONE_AVG),[U.VITO]:new z(++j).setTitle("The Winstrates").setLocalizedName("Vito").setMoneyMultiplier(2).setPartyTemplates(new Oe(new dA(3,HA.AVERAGE),new dA(2,HA.STRONG))),[U.BUG_TYPE_SUPERFAN]:new z(++j).setMoneyMultiplier(2.25).setEncounterBgm(U.ACE_TRAINER).setPartyTemplates(new dA(2,HA.AVERAGE)),[U.EXPERT_POKEMON_BREEDER]:new z(++j).setMoneyMultiplier(3).setEncounterBgm(U.ACE_TRAINER).setLocalizedName("Expert Pokemon Breeder").setPartyTemplates(new dA(3,HA.AVERAGE)),[U.FUTURE_SELF_M]:new z(++j).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self M").setPartyTemplates(new dA(6,HA.STRONG)),[U.FUTURE_SELF_F]:new z(++j).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self F").setPartyTemplates(new dA(6,HA.STRONG))},tK=class tK extends Phaser.GameObjects.Container{constructor(e,I,L,N,S,n){super(T,-72,80),this.originalIndexes={},this.config=he.hasOwnProperty(e)?he[e]:he[U.ACE_TRAINER],n&&(this.config=n),this.variant=I,this.partyTemplateIndex=Math.min(L!==void 0?L:Uy(this.config.partyTemplates.map((H,P)=>P)),this.config.partyTemplates.length-1);const i=`trainersCommon:${U[e]}`;if(_.exists(i,{returnObjects:!0})){if(N)this.nameKey=N;else{const H=_.exists(`${i}.MALE`)?I===PE.FEMALE?".FEMALE":".MALE":"",P=He(Object.keys(_.t(`${i}${H}`,{returnObjects:!0})));this.nameKey=`${i}${H}.${P}`}if(this.name=_.t(this.nameKey),I===PE.DOUBLE)if(this.config.doubleOnly)S?(this.partnerNameKey=S,this.partnerName=_.t(this.partnerNameKey)):[this.name,this.partnerName]=this.name.split(" & ");else{const H=_.exists(`${i}.FEMALE`)?".FEMALE":"",P=He(Object.keys(_.t(`${i}${H}`,{returnObjects:!0})));this.partnerNameKey=`${i}${H}.${P}`,this.partnerName=_.t(this.partnerNameKey)}}switch(this.variant){case PE.FEMALE:this.config.hasGenders||(I=PE.DEFAULT);break;case PE.DOUBLE:this.config.hasDouble||(I=PE.DEFAULT);break}Object.keys(PA)[Object.values(PA).indexOf(this.getPartyTemplate())];const C=r((H,P)=>{const K=T.addFieldSprite(0,0,this.config.getSpriteKey(I===PE.FEMALE||P,this.isDouble()));return K.setOrigin(.5,1),K.setPipeline(T.spritePipeline,{tone:[0,0,0,0],hasShadow:!!H}),K},"getSprite"),o=C(!0),l=C();if(l.setVisible(!1),this.add(o),this.add(l),I===PE.DOUBLE&&!this.config.doubleOnly){const H=C(!0,!0),P=C(!1,!0);P.setVisible(!1),o.x=-4,l.x=-4,H.x=28,P.x=28,this.add(H),this.add(P)}}getKey(e){return this.config.getSpriteKey(this.variant===PE.FEMALE||e,this.isDouble())}getName(e=v.NONE,I=!1){let L=this.config.getTitle(e,this.variant),N=I&&this.config.title?this.config.title:null;const S=["grunt"];return this.name===""&&S.some(n=>L.toLocaleLowerCase().includes(n))?(N=_.t(`trainerClasses:${L.toLowerCase().replace(/\s/g,"_")}`),N):(this.name&&(I&&(_O()||sO(),N=_.t(`trainerClasses:${L.toLowerCase().replace(/\s/g,"_")}`)),e?L=e===v.TRAINER?this.name:this.partnerName||this.name:(L=this.name,this.partnerName&&(L=`${L} & ${this.partnerName}`))),this.config.titleDouble&&this.variant===PE.DOUBLE&&!this.config.doubleOnly&&(N=this.config.titleDouble,L=_.t(`trainerNames:${this.config.nameDouble.toLowerCase().replace(/\s/g,"_")}`)),N?`${N} ${L}`:L)}isDouble(){return this.config.doubleOnly||this.variant===PE.DOUBLE}isPartner(){return this.variant===PE.DOUBLE}getMixedBattleBgm(){return this.config.mixedBattleBgm}getBattleBgm(){return this.config.battleBgm}getEncounterBgm(){return this.variant?(this.variant===PE.DOUBLE?this.config.doubleEncounterBgm:this.config.femaleEncounterBgm)||this.config.encounterBgm:this.config.encounterBgm}getEncounterMessages(){return this.variant?(this.variant===PE.DOUBLE?this.config.doubleEncounterMessages:this.config.femaleEncounterMessages)||this.config.encounterMessages:this.config.encounterMessages}getVictoryMessages(){return this.variant?(this.variant===PE.DOUBLE?this.config.doubleVictoryMessages:this.config.femaleVictoryMessages)||this.config.victoryMessages:this.config.victoryMessages}getDefeatMessages(){return this.variant?(this.variant===PE.DOUBLE?this.config.doubleDefeatMessages:this.config.femaleDefeatMessages)||this.config.defeatMessages:this.config.defeatMessages}getPartyTemplate(){return this.config.partyTemplateFunc?this.config.partyTemplateFunc():this.config.partyTemplates[this.partyTemplateIndex]}getPartyLevels(e){const I=[],L=this.getPartyTemplate(),N=T.gameMode.getWaveForDifficulty(e),S=1+N/2+Math.pow(N/25,2);this.isDouble()&&L.size<2&&(L.size=2);for(let n=0;n<L.size;n++){let i=1;const C=L.getStrength(n);switch(C){case HA.WEAKER:i=.95;break;case HA.WEAK:i=1;break;case HA.AVERAGE:i=1.1;break;case HA.STRONG:i=1.2;break;case HA.STRONGER:i=1.25;break}let o=0;C<HA.STRONG&&(i=Math.min(i+.025*Math.floor(N/25),1.2),o=-Math.floor(N/50*(HA.STRONG-C)));const l=Math.ceil(S*i)+o;I.push(l)}return I}genPartyMember(e){var S;const I=T.currentBattle,L=(S=I.enemyLevels)==null?void 0:S[e];let N;return T.executeWithSeedOffset(()=>{const n=this.getPartyTemplate(),i=n.getStrength(e);if(!(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly)){if(this.config.partyMemberFuncs.hasOwnProperty(e)){N=this.config.partyMemberFuncs[e](L,i);return}if(this.config.partyMemberFuncs.hasOwnProperty(e-n.size)){N=this.config.partyMemberFuncs[e-n.size](L,n.getStrength(e));return}}let C=0;if(n instanceof Oe)for(const P of n.templates){if(C+P.size>e)break;C+=P.size}let o=[],l=!1;if(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly){l=!0;const P=fA[U[this.config.trainerTypeDouble]],K=fA[U[this.config.trainerType]],f=I.enemyParty.map(w=>w.species.speciesId),h=K.filter(w=>Array.isArray(w)?!w.some(m=>f.includes(m)):!f.includes(w)).flat(),F=P.filter(w=>Array.isArray(w)?!w.some(m=>f.includes(m)):!f.includes(w)).flat();e%2?e===1&&U[this.config.trainerTypeDouble]===U[U.TATE]?o=[A.SOLROCK]:e===1&&U[this.config.trainerTypeDouble]===U[U.LIZA]?o=[A.LUNATONE]:o=F:e===0&&U[this.config.trainerType]===U[U.TATE]?o=[A.SOLROCK]:e===0&&U[this.config.trainerType]===U[U.LIZA]?o=[A.LUNATONE]:o=h,o.length===0&&(l=!1)}let H=l?YA(o[Math.floor(DA(o.length))]):n.isSameSpecies(e)&&e>C?YA(I.enemyParty[C].species.getTrainerSpeciesForLevel(L,!1,n.getStrength(C),T.currentBattle.waveIndex)):this.genNewPartyMemberSpecies(L,i);o&&(H=YA(H.getSpeciesForLevel(L,!0,!0,i,T.currentBattle.waveIndex))),N=T.addEnemyPokemon(H,L,!this.isDouble()||!(e%2)?v.TRAINER:v.TRAINER_PARTNER)},this.config.hasStaticParty?this.config.getDerivedType()+(e+1<<8):T.currentBattle.waveIndex+(this.config.getDerivedType()<<10)+((this.config.useSameSeedForAllMembers?0:e)+1<<8)),N}genNewPartyMemberSpecies(e,I,L){const N=T.currentBattle,S=this.getPartyTemplate();let n;if(this.config.speciesPools){const o=DA(512);let l=o>=156?oA.COMMON:o>=32?oA.UNCOMMON:o>=6?oA.RARE:o>=1?oA.SUPER_RARE:oA.ULTRA_RARE;for(oA[l];!this.config.speciesPools.hasOwnProperty(l)||!this.config.speciesPools[l].length;)`${oA[l]}${oA[l-1]}`,l--;const H=this.config.speciesPools[l];n=YA(He(H))}else n=T.randomSpecies(N.waveIndex,e,!1,this.config.speciesFilter);let i=YA(n.getTrainerSpeciesForLevel(e,!0,I,T.currentBattle.waveIndex)),C=!1;if(i.getName(),Fe.hasOwnProperty(n.speciesId)&&i.speciesId!==n.speciesId)C=!0;else if(S.isBalanced(N.enemyParty.length)){const o=N.enemyParty.flatMap(l=>l.getTypes(!0));(o.indexOf(i.type1)>-1||i.type2!==null&&o.indexOf(i.type2)>-1)&&(C=!0)}if(!C&&this.config.hasSpecialtyType()&&!i.isOfType(this.config.specialtyType)){C=!0;let o=0;for(;C&&o++<10;)i=YA(n.getTrainerSpeciesForLevel(e,!0,I,T.currentBattle.waveIndex)),i.name,i.isOfType(this.config.specialtyType)&&(C=!1)}return this.checkDuplicateSpecies(n.speciesId)&&(C=!0),C&&(L??0)<10&&(i=this.genNewPartyMemberSpecies(e,I,(L??0)+1)),i}checkDuplicateSpecies(e){const I=(fA[U[this.config.trainerType]]??[]).flat(1).map(N=>{let S=N;for(;Fe.hasOwnProperty(S);)S=Fe[S];return S});return T.getEnemyParty().map(N=>N.species.getRootSpeciesId()).includes(e)||I.includes(e)}getPartyMemberMatchupScores(e=v.NONE,I=!1){e&&!this.isDouble()&&(e=v.NONE);const L=T.getEnemyParty();return L.slice(T.currentBattle.getBattlerCount()).filter(n=>n.isAllowedInBattle()).filter(n=>!e||n.trainerSlot===e).map(n=>{const i=T.getPlayerField().filter(o=>o.isAllowedInBattle());let C=0;if(i.length>0){for(const o of i)C+=n.getMatchupScore(o),o.species.legendary&&(C/=2);C/=i.length,I&&!n.isOnField()&&T.arena.findTagsOnSide(o=>o instanceof yI,hA.ENEMY).map(o=>C*=o.getMatchupScoreMultiplier(n))}return[L.indexOf(n),C]})}getSortedPartyMemberMatchupScores(e=this.getPartyMemberMatchupScores()){const I=e.slice(0);return I.sort((L,N)=>{const S=L[1],n=N[1];return S<n?1:S>n?-1:0}),I}getNextSummonIndex(e=v.NONE,I=this.getPartyMemberMatchupScores(e)){e&&!this.isDouble()&&(e=v.NONE);const L=this.getSortedPartyMemberMatchupScores(I),N=I.filter(S=>S[1]===L[0][1]).map(S=>S[0]);if(N.length>1){let S;return T.executeWithSeedOffset(()=>S=DA(N.length),T.currentBattle.turn<<2),N[S]}return N[0]}getPartyMemberModifierChanceMultiplier(e){switch(this.getPartyTemplate().getStrength(e)){case HA.WEAKER:return .75;case HA.WEAK:return .675;case HA.AVERAGE:return .5625;case HA.STRONG:return .45;case HA.STRONGER:return .375;default:return console.warn("getPartyMemberModifierChanceMultiplier not defined. Using default 0"),0}}genModifiers(e){return this.config.genModifiersFunc?this.config.genModifiersFunc(e):[]}genAI(e){this.config.genAIFuncs&&this.config.genAIFuncs.forEach(I=>I(e))}loadAssets(){return this.config.loadAssets(this.variant)}initSprite(){this.getSprites().map((e,I)=>e.setTexture(this.getKey(!!I)).setFrame(0)),this.getTintSprites().map((e,I)=>e.setTexture(this.getKey(!!I)).setFrame(0))}tryPlaySprite(e,I,L){return e.texture.key==="__MISSING"?(console.error(`No texture found for '${L.key}'!`),!1):e.texture.frameTotal<=1?(console.warn(`No animation found for '${L.key}'. Is this intentional?`),!1):(e.play(L),I.play(L),!0)}playAnim(){const e={key:this.getKey(),repeat:0,startFrame:0},I=this.getSprites(),L=this.getTintSprites();if(this.tryPlaySprite(I[0],L[0],e),this.variant===PE.DOUBLE&&!this.config.doubleOnly){const N={key:this.getKey(!0),repeat:0,startFrame:0};this.tryPlaySprite(I[1],L[1],N)}}getSprites(){const e=[this.getAt(0)];return this.variant===PE.DOUBLE&&!this.config.doubleOnly&&e.push(this.getAt(2)),e}getTintSprites(){const e=[this.getAt(1)];return this.variant===PE.DOUBLE&&!this.config.doubleOnly&&e.push(this.getAt(3)),e}tint(e,I,L,N){this.getTintSprites().map(n=>{n.setTintFill(e),n.setVisible(!0),L?(n.setAlpha(0),T.tweens.add({targets:n,alpha:I||1,duration:L,ease:N||"Linear"})):n.setAlpha(I)})}untint(e,I){this.getTintSprites().map(N=>{e?T.tweens.add({targets:N,alpha:0,duration:e,ease:I||"Linear",onComplete:r(()=>{N.setVisible(!1),N.setAlpha(1)},"onComplete")}):(N.setVisible(!1),N.setAlpha(1))})}shouldTera(e){return!!(this.config.trainerAI.teraMode===HN.INSTANT_TERA&&!e.isTerastallized&&this.config.trainerAI.instantTeras.includes(e.initialTeamIndex))}};r(tK,"Trainer");let cO=tK;var de=(R=>(R[R.UNSET=0]="UNSET",R[R.MALE=1]="MALE",R[R.FEMALE=2]="FEMALE",R))(de||{}),hE=(R=>(R[R.MESSAGE=0]="MESSAGE",R[R.TITLE=1]="TITLE",R[R.COMMAND=2]="COMMAND",R[R.FIGHT=3]="FIGHT",R[R.BALL=4]="BALL",R[R.TARGET_SELECT=5]="TARGET_SELECT",R[R.MODIFIER_SELECT=6]="MODIFIER_SELECT",R[R.SAVE_SLOT=7]="SAVE_SLOT",R[R.PARTY=8]="PARTY",R[R.SUMMARY=9]="SUMMARY",R[R.STARTER_SELECT=10]="STARTER_SELECT",R[R.EVOLUTION_SCENE=11]="EVOLUTION_SCENE",R[R.EGG_HATCH_SCENE=12]="EGG_HATCH_SCENE",R[R.EGG_HATCH_SUMMARY=13]="EGG_HATCH_SUMMARY",R[R.CONFIRM=14]="CONFIRM",R[R.OPTION_SELECT=15]="OPTION_SELECT",R[R.MENU=16]="MENU",R[R.MENU_OPTION_SELECT=17]="MENU_OPTION_SELECT",R[R.SETTINGS=18]="SETTINGS",R[R.SETTINGS_DISPLAY=19]="SETTINGS_DISPLAY",R[R.SETTINGS_AUDIO=20]="SETTINGS_AUDIO",R[R.SETTINGS_GAMEPAD=21]="SETTINGS_GAMEPAD",R[R.GAMEPAD_BINDING=22]="GAMEPAD_BINDING",R[R.SETTINGS_KEYBOARD=23]="SETTINGS_KEYBOARD",R[R.KEYBOARD_BINDING=24]="KEYBOARD_BINDING",R[R.ACHIEVEMENTS=25]="ACHIEVEMENTS",R[R.GAME_STATS=26]="GAME_STATS",R[R.EGG_LIST=27]="EGG_LIST",R[R.EGG_GACHA=28]="EGG_GACHA",R[R.POKEDEX=29]="POKEDEX",R[R.POKEDEX_SCAN=30]="POKEDEX_SCAN",R[R.POKEDEX_PAGE=31]="POKEDEX_PAGE",R[R.LOGIN_FORM=32]="LOGIN_FORM",R[R.REGISTRATION_FORM=33]="REGISTRATION_FORM",R[R.LOADING=34]="LOADING",R[R.SESSION_RELOAD=35]="SESSION_RELOAD",R[R.UNAVAILABLE=36]="UNAVAILABLE",R[R.CHALLENGE_SELECT=37]="CHALLENGE_SELECT",R[R.RENAME_POKEMON=38]="RENAME_POKEMON",R[R.RUN_HISTORY=39]="RUN_HISTORY",R[R.RUN_INFO=40]="RUN_INFO",R[R.TEST_DIALOGUE=41]="TEST_DIALOGUE",R[R.AUTO_COMPLETE=42]="AUTO_COMPLETE",R[R.ADMIN=43]="ADMIN",R[R.MYSTERY_ENCOUNTER=44]="MYSTERY_ENCOUNTER",R))(hE||{}),t0=(R=>(R[R.NONE=0]="NONE",R.LINEAR="Linear",R.QUADRATIC="Quad",R.CUBIC="Cubic",R.QUARTIC="Quart",R.QUINTIC="Quint",R.SINUSOIDAL="Sine",R.EXPONENTIAL="Expo",R.CIRCULAR="Circ",R.ELASTIC="Elastic",R.BACK="Back",R.BOUNCE="Bounce",R.STEPPED="Stepped",R))(t0||{}),lT=(R=>(R[R.REROLL=0]="REROLL",R[R.REWARDS=1]="REWARDS",R[R.SHOP=2]="SHOP",R[R.CHECK_TEAM=3]="CHECK_TEAM",R))(lT||{});const aT=new Array(11).fill(null).map((R,e)=>e?{value:(e*10).toString(),label:(e*10).toString()}:{value:"Mute",label:_.t("settings:mute")}),B6=new Array(9).fill(null).map((R,e)=>{const I=((e+1)*10).toString();return{value:I,label:I}}),zR=[{value:"Off",label:_.t("settings:off")},{value:"On",label:_.t("settings:on")}],K6=[{value:"Auto",label:_.t("settings:auto")},{value:"Disabled",label:_.t("settings:disabled")}],f6=[{value:"Auto",label:_.t("settings:auto")},{value:"Disabled",label:_.t("settings:disabled"),needConfirmation:!0,confirmationMessage:_.t("settings:confirmDisableTouch")}],D3=[{value:"Rewards",label:_.t("settings:rewards")},{value:"Shop",label:_.t("settings:shop")},{value:"Reroll",label:_.t("settings:reroll")},{value:"Check Team",label:_.t("settings:checkTeam")}],F6=D3.map(R=>{switch(R.value){case"Rewards":return lT.REWARDS;case"Shop":return lT.SHOP;case"Reroll":return lT.REROLL;case"Check Team":return lT.CHECK_TEAM;default:throw new Error(`Unknown value: ${R.value}`)}});var Y6=(R=>(R[R.GENERAL=0]="GENERAL",R[R.DISPLAY=1]="DISPLAY",R[R.AUDIO=2]="AUDIO",R))(Y6||{});const kA={Game_Speed:"GAME_SPEED",HP_Bar_Speed:"HP_BAR_SPEED",EXP_Gains_Speed:"EXP_GAINS_SPEED",EXP_Party_Display:"EXP_PARTY_DISPLAY",Skip_Seen_Dialogues:"SKIP_SEEN_DIALOGUES",Egg_Skip:"EGG_SKIP",Battle_Style:"BATTLE_STYLE",Enable_Retries:"ENABLE_RETRIES",Hide_IVs:"HIDE_IVS",Tutorials:"TUTORIALS",Touch_Controls:"TOUCH_CONTROLS",Vibration:"VIBRATION",Language:"LANGUAGE",UI_Theme:"UI_THEME",Window_Type:"WINDOW_TYPE",Money_Format:"MONEY_FORMAT",Damage_Numbers:"DAMAGE_NUMBERS",Move_Animations:"MOVE_ANIMATIONS",Show_Stats_on_Level_Up:"SHOW_LEVEL_UP_STATS",Shop_Cursor_Target:"SHOP_CURSOR_TARGET",Command_Cursor_Memory:"COMMAND_CURSOR_MEMORY",Dex_For_Devs:"DEX_FOR_DEVS",Candy_Upgrade_Notification:"CANDY_UPGRADE_NOTIFICATION",Candy_Upgrade_Display:"CANDY_UPGRADE_DISPLAY",Move_Info:"MOVE_INFO",Show_Moveset_Flyout:"SHOW_MOVESET_FLYOUT",Show_Arena_Flyout:"SHOW_ARENA_FLYOUT",Show_Time_Of_Day_Widget:"SHOW_TIME_OF_DAY_WIDGET",Time_Of_Day_Animation:"TIME_OF_DAY_ANIMATION",Sprite_Set:"SPRITE_SET",Fusion_Palette_Swaps:"FUSION_PALETTE_SWAPS",Player_Gender:"PLAYER_GENDER",Type_Hints:"TYPE_HINTS",Master_Volume:"MASTER_VOLUME",BGM_Volume:"BGM_VOLUME",Field_Volume:"FIELD_VOLUME",SE_Volume:"SE_VOLUME",UI_Volume:"UI_SOUND_EFFECTS",Battle_Music:"BATTLE_MUSIC",Show_BGM_Bar:"SHOW_BGM_BAR",Move_Touch_Controls:"MOVE_TOUCH_CONTROLS",Shop_Overlay_Opacity:"SHOP_OVERLAY_OPACITY"};var WT=(R=>(R[R.GENFIVE=0]="GENFIVE",R[R.ALLGENS=1]="ALLGENS",R))(WT||{});const Ee=[{key:kA.Game_Speed,label:_.t("settings:gameSpeed"),options:[{value:"1",label:_.t("settings:gameSpeed1x")},{value:"1.25",label:_.t("settings:gameSpeed1_25x")},{value:"1.5",label:_.t("settings:gameSpeed1_5x")},{value:"2",label:_.t("settings:gameSpeed2x")},{value:"2.5",label:_.t("settings:gameSpeed2_5x")},{value:"3",label:_.t("settings:gameSpeed3x")},{value:"4",label:_.t("settings:gameSpeed4x")},{value:"5",label:_.t("settings:gameSpeed5x")}],default:3,type:0},{key:kA.HP_Bar_Speed,label:_.t("settings:hpBarSpeed"),options:[{value:"Normal",label:_.t("settings:normal")},{value:"Fast",label:_.t("settings:fast")},{value:"Faster",label:_.t("settings:faster")},{value:"Skip",label:_.t("settings:skip")}],default:0,type:0},{key:kA.EXP_Gains_Speed,label:_.t("settings:expGainsSpeed"),options:[{value:"Normal",label:_.t("settings:normal")},{value:"Fast",label:_.t("settings:fast")},{value:"Faster",label:_.t("settings:faster")},{value:"Skip",label:_.t("settings:skip")}],default:0,type:0},{key:kA.EXP_Party_Display,label:_.t("settings:expPartyDisplay"),options:[{value:"Normal",label:_.t("settings:normal")},{value:"Level Up Notification",label:_.t("settings:levelUpNotifications")},{value:"Skip",label:_.t("settings:skip")}],default:0,type:0},{key:kA.Skip_Seen_Dialogues,label:_.t("settings:skipSeenDialogues"),options:zR,default:0,type:0},{key:kA.Egg_Skip,label:_.t("settings:eggSkip"),options:[{value:"Never",label:_.t("settings:never")},{value:"Ask",label:_.t("settings:ask")},{value:"Always",label:_.t("settings:always")}],default:1,type:0},{key:kA.Battle_Style,label:_.t("settings:battleStyle"),options:[{value:"Switch",label:_.t("settings:switch")},{value:"Set",label:_.t("settings:set")}],default:0,type:0},{key:kA.Command_Cursor_Memory,label:_.t("settings:commandCursorMemory"),options:zR,default:0,type:0},{key:kA.Enable_Retries,label:_.t("settings:enableRetries"),options:zR,default:0,type:0},{key:kA.Hide_IVs,label:_.t("settings:hideIvs"),options:zR,default:0,type:0},{key:kA.Tutorials,label:_.t("settings:tutorials"),options:zR,default:1,type:0},{key:kA.Vibration,label:_.t("settings:vibrations"),options:K6,default:0,type:0},{key:kA.Touch_Controls,label:_.t("settings:touchControls"),options:f6,default:0,type:0,isHidden:r(()=>!RC(),"isHidden")},{key:kA.Move_Touch_Controls,label:_.t("settings:moveTouchControls"),options:[{value:"Configure",label:_.t("settings:change")}],default:0,type:0,activatable:!0,isHidden:r(()=>!RC(),"isHidden")},{key:kA.Language,label:_.t("settings:language"),options:[{value:"English",label:"English"},{value:"Change",label:_.t("settings:change")}],default:0,type:1,requireReload:!0},{key:kA.UI_Theme,label:_.t("settings:uiTheme"),options:[{value:"Default",label:_.t("settings:default")},{value:"Legacy",label:_.t("settings:legacy")}],default:0,type:1,requireReload:!0},{key:kA.Window_Type,label:_.t("settings:windowType"),options:new Array(5).fill(null).map((R,e)=>{const I=(e+1).toString();return{value:I,label:I}}),default:0,type:1},{key:kA.Money_Format,label:_.t("settings:moneyFormat"),options:[{value:"Normal",label:_.t("settings:normal")},{value:"Abbreviated",label:_.t("settings:abbreviated")}],default:0,type:1},{key:kA.Damage_Numbers,label:_.t("settings:damageNumbers"),options:[{value:"Off",label:_.t("settings:off")},{value:"Simple",label:_.t("settings:simple")},{value:"Fancy",label:_.t("settings:fancy")}],default:0,type:1},{key:kA.Move_Animations,label:_.t("settings:moveAnimations"),options:zR,default:1,type:1},{key:kA.Show_Stats_on_Level_Up,label:_.t("settings:showStatsOnLevelUp"),options:zR,default:1,type:1},{key:kA.Candy_Upgrade_Notification,label:_.t("settings:candyUpgradeNotification"),options:[{value:"Off",label:_.t("settings:off")},{value:"Passives Only",label:_.t("settings:passivesOnly")},{value:"On",label:_.t("settings:on")}],default:0,type:1},{key:kA.Candy_Upgrade_Display,label:_.t("settings:candyUpgradeDisplay"),options:[{value:"Icon",label:_.t("settings:icon")},{value:"Animation",label:_.t("settings:animation")}],default:0,type:1,requireReload:!0},{key:kA.Move_Info,label:_.t("settings:moveInfo"),options:zR,default:1,type:1},{key:kA.Show_Moveset_Flyout,label:_.t("settings:showMovesetFlyout"),options:zR,default:1,type:1},{key:kA.Show_Arena_Flyout,label:_.t("settings:showArenaFlyout"),options:zR,default:1,type:1},{key:kA.Show_Time_Of_Day_Widget,label:_.t("settings:showTimeOfDayWidget"),options:zR,default:1,type:1,requireReload:!0},{key:kA.Time_Of_Day_Animation,label:_.t("settings:timeOfDayAnimation"),options:[{value:"Bounce",label:_.t("settings:bounce")},{value:"Back",label:_.t("settings:timeOfDay_back")}],default:0,type:1},{key:kA.Sprite_Set,label:_.t("settings:spriteSet"),options:[{value:"Consistent",label:_.t("settings:consistent")},{value:"Experimental",label:_.t("settings:experimental")}],default:0,type:1,requireReload:!0},{key:kA.Fusion_Palette_Swaps,label:_.t("settings:fusionPaletteSwaps"),options:zR,default:1,type:1},{key:kA.Player_Gender,label:_.t("settings:playerGender"),options:[{value:"Boy",label:_.t("settings:boy")},{value:"Girl",label:_.t("settings:girl")}],default:0,type:1},{key:kA.Type_Hints,label:_.t("settings:typeHints"),options:zR,default:0,type:1},{key:kA.Show_BGM_Bar,label:_.t("settings:showBgmBar"),options:zR,default:1,type:1},{key:kA.Master_Volume,label:_.t("settings:masterVolume"),options:aT,default:5,type:2},{key:kA.BGM_Volume,label:_.t("settings:bgmVolume"),options:aT,default:10,type:2},{key:kA.Field_Volume,label:_.t("settings:fieldVolume"),options:aT,default:10,type:2},{key:kA.SE_Volume,label:_.t("settings:seVolume"),options:aT,default:10,type:2},{key:kA.UI_Volume,label:_.t("settings:uiVolume"),options:aT,default:10,type:2},{key:kA.Battle_Music,label:_.t("settings:battleMusic"),options:[{value:"Gen V",label:_.t("settings:musicGenFive")},{value:"All Gens",label:_.t("settings:musicAllGens")}],default:1,type:2,requireReload:!0},{key:kA.Shop_Cursor_Target,label:_.t("settings:shopCursorTarget"),options:D3,default:0,type:1},{key:kA.Shop_Overlay_Opacity,label:_.t("settings:shopOverlayOpacity"),options:B6,default:7,type:1,requireReload:!1}];oy&&Ee.push({key:kA.Dex_For_Devs,label:_.t("settings:dexForDevs"),options:zR,default:0,type:0});function W6(R){return Ee.findIndex(e=>e.key===R)}r(W6,"settingIndex");function rZ(){for(const R of Ee)h6(R.key,R.default)}r(rZ,"resetSettings");function h6(R,e){const I=W6(R);if(I===-1)return!1;switch(Ee[I].key){case kA.Game_Speed:T.gameSpeed=Number.parseFloat(Ee[I].options[e].value.replace("x",""));break;case kA.Master_Volume:T.masterVolume=e?Number.parseInt(Ee[I].options[e].value)*.01:0,T.updateSoundVolume();break;case kA.BGM_Volume:T.bgmVolume=e?Number.parseInt(Ee[I].options[e].value)*.01:0,T.updateSoundVolume();break;case kA.Field_Volume:T.fieldVolume=e?Number.parseInt(Ee[I].options[e].value)*.01:0,T.updateSoundVolume();break;case kA.SE_Volume:T.seVolume=e?Number.parseInt(Ee[I].options[e].value)*.01:0,T.updateSoundVolume();break;case kA.UI_Volume:T.uiVolume=e?Number.parseInt(Ee[I].options[e].value)*.01:0;break;case kA.Battle_Music:T.musicPreference=e;break;case kA.Damage_Numbers:T.damageNumbersMode=e;break;case kA.UI_Theme:T.uiTheme=e;break;case kA.Window_Type:bV(Number.parseInt(Ee[I].options[e].value));break;case kA.Tutorials:T.enableTutorials=Ee[I].options[e].value==="On";break;case kA.Move_Info:T.enableMoveInfo=Ee[I].options[e].value==="On";break;case kA.Enable_Retries:T.enableRetries=Ee[I].options[e].value==="On";break;case kA.Hide_IVs:T.hideIvs=Ee[I].options[e].value==="On";break;case kA.Skip_Seen_Dialogues:T.skipSeenDialogues=Ee[I].options[e].value==="On";break;case kA.Egg_Skip:T.eggSkipPreference=e;break;case kA.Battle_Style:T.battleStyle=e;break;case kA.Show_BGM_Bar:T.showBgmBar=Ee[I].options[e].value==="On";break;case kA.Candy_Upgrade_Notification:if(T.candyUpgradeNotification===e)break;T.candyUpgradeNotification=e,T.eventTarget.dispatchEvent(new $P(e));break;case kA.Candy_Upgrade_Display:T.candyUpgradeDisplay=e;break;case kA.Money_Format:switch(Ee[I].options[e].value){case"Normal":T.moneyFormat=mm.NORMAL;break;case"Abbreviated":T.moneyFormat=mm.ABBREVIATED;break}T.updateMoneyText(!1);break;case kA.Sprite_Set:T.experimentalSprites=!!e,e&&T.initExpSprites();break;case kA.Move_Animations:T.moveAnimations=Ee[I].options[e].value==="On";break;case kA.Show_Moveset_Flyout:T.showMovesetFlyout=Ee[I].options[e].value==="On";break;case kA.Show_Arena_Flyout:T.showArenaFlyout=Ee[I].options[e].value==="On";break;case kA.Show_Time_Of_Day_Widget:T.showTimeOfDayWidget=Ee[I].options[e].value==="On";break;case kA.Time_Of_Day_Animation:T.timeOfDayAnimation=Ee[I].options[e].value==="Bounce"?t0.BOUNCE:t0.BACK;break;case kA.Show_Stats_on_Level_Up:T.showLevelUpStats=Ee[I].options[e].value==="On";break;case kA.Shop_Cursor_Target:{const L=F6[e];T.shopCursorTarget=L;break}case kA.Command_Cursor_Memory:T.commandCursorMemory=Ee[I].options[e].value==="On";break;case kA.Dex_For_Devs:T.dexForDevs=Ee[I].options[e].value==="On";break;case kA.EXP_Gains_Speed:T.expGainsSpeed=e;break;case kA.EXP_Party_Display:T.expParty=e;break;case kA.HP_Bar_Speed:T.hpBarSpeed=e;break;case kA.Fusion_Palette_Swaps:T.fusionPaletteSwaps=!!e;break;case kA.Player_Gender:if(T.gameData){const L=Ee[I].options[e].value==="Girl";T.gameData.gender=L?de.FEMALE:de.MALE,T.trainer.setTexture(T.trainer.texture.key.replace(L?"m":"f",L?"f":"m"))}else return!1;break;case kA.Touch_Controls:{T.enableTouchControls=Ee[I].options[e].value!=="Disabled"&&RC();const L=document.getElementById("touchControls");L&&L.classList.toggle("visible",T.enableTouchControls);break}case kA.Vibration:T.enableVibration=Ee[I].options[e].value!=="Disabled"&&RC();break;case kA.Type_Hints:T.typeHints=Ee[I].options[e].value==="On";break;case kA.Language:if(e&&T.ui){const L=r(()=>{T.ui.revertMode(),T.ui.getHandler().setOptionCursor(-1,0,!0)},"cancelHandler"),N=r(S=>{try{return _.changeLanguage(S),localStorage.setItem("prLang",S),L(),window.location.reload(),!0}catch(n){return console.error("Error changing locale:",n),!1}},"changeLocaleHandler");return T.ui.setOverlayMode(hE.OPTION_SELECT,{options:[{label:"English",handler:r(()=>N("en"),"handler")},{label:"Español (ES)",handler:r(()=>N("es-ES"),"handler")},{label:"Español (LATAM)",handler:r(()=>N("es-MX"),"handler")},{label:"Français",handler:r(()=>N("fr"),"handler")},{label:"Deutsch",handler:r(()=>N("de"),"handler")},{label:"Italiano",handler:r(()=>N("it"),"handler")},{label:"Português (BR)",handler:r(()=>N("pt-BR"),"handler")},{label:"한국어",handler:r(()=>N("ko"),"handler")},{label:"日本語",handler:r(()=>N("ja"),"handler")},{label:"简体中文",handler:r(()=>N("zh-CN"),"handler")},{label:"繁體中文",handler:r(()=>N("zh-TW"),"handler")},{label:"Català (Needs Help)",handler:r(()=>N("ca"),"handler")},{label:"Türkçe (Needs Help)",handler:r(()=>N("tr"),"handler")},{label:"Русский (Needs Help)",handler:r(()=>N("ru"),"handler")},{label:"Dansk (Needs Help)",handler:r(()=>N("da"),"handler")},{label:"Română (Needs Help)",handler:r(()=>N("ro"),"handler")},{label:_.t("settings:back"),handler:r(()=>L(),"handler")}],maxOptions:7}),!1}break;case kA.Shop_Overlay_Opacity:T.updateShopOverlayOpacity(Number.parseInt(Ee[I].options[e].value)*.01);break}return!0}r(h6,"setSetting");var DO=(R=>(R[R.DEFAULT=0]="DEFAULT",R[R.TRAINER_BATTLE=1]="TRAINER_BATTLE",R[R.WILD_BATTLE=2]="WILD_BATTLE",R[R.BOSS_BATTLE=3]="BOSS_BATTLE",R[R.NO_BATTLE=4]="NO_BATTLE",R))(DO||{});const LK=class LK{constructor(e,I,L,N,S=!1){this.enemyParty=[],this.seenEnemyPartyMemberIds=new Set,this.started=!1,this.enemySwitchCounter=0,this.turn=0,this.playerParticipantIds=new Set,this.battleScore=0,this.postBattleLoot=[],this.escapeAttempts=0,this.battleSeed=tH(16,!0),this.battleSeedState=null,this.moneyScattered=0,this.lastUsedPokeball=null,this.enemyFaints=0,this.playerFaintsHistory=[],this.enemyFaintsHistory=[],this.rngCounter=0,this.gameMode=e,this.waveIndex=I,this.battleType=L,this.trainer=N??null,this.initBattleSpec(),this.enemyLevels=L!==yE.TRAINER?new Array(S?2:1).fill(null).map(()=>this.getLevelForWave()):N==null?void 0:N.getPartyLevels(this.waveIndex),this.double=S}initBattleSpec(){let e=xO.DEFAULT;this.gameMode.isWaveFinal(this.waveIndex)&&this.gameMode.isClassic&&(e=xO.FINAL_BOSS),this.battleSpec=e}getLevelForWave(){const e=this.gameMode.getWaveForDifficulty(this.waveIndex),I=1+e/2+Math.pow(e/25,2),L=1.2;if(this.gameMode.isBoss(this.waveIndex)){const n=Math.floor(I*L);if(this.battleSpec===xO.FINAL_BOSS||!(this.waveIndex%250))return Math.ceil(n/25)*25;let i=0;return this.gameMode.isWaveFinal(this.waveIndex)||(i=Math.round(Phaser.Math.RND.realInRange(-1,1)*Math.floor(e/10))),n+i}let N=0;const S=10/e;return N=Math.abs(this.randSeedGaussForLevel(S)),Math.max(Math.round(I+N),1)}randSeedGaussForLevel(e){let I=0;for(let L=e;L>0;L--)I+=nI();return I/e}getBattlerCount(){return this.double?2:1}incrementTurn(){this.turn++,this.turnCommands=Object.fromEntries(nR(KE).map(e=>[e,null])),this.preTurnCommands=Object.fromEntries(nR(KE).map(e=>[e,null])),this.battleSeedState=null}addParticipant(e){this.playerParticipantIds.add(e.id)}removeFaintedParticipant(e){this.playerParticipantIds.delete(e.id)}addPostBattleLoot(e){this.postBattleLoot.push(...T.findModifiers(I=>I.is("PokemonHeldItemModifier")&&I.pokemonId===e.id&&I.isTransferable,!1).map(I=>{const L=I;return L.pokemonId=null,L}))}pickUpScatteredMoney(){const e=new VA(T.currentBattle.moneyScattered);T.applyModifiers(XO,!0,e),T.arena.getTag(CA.HAPPY_HOUR)&&(e.value*=2),T.addMoney(e.value);const I=navigator.language||"en-US",L=e.value.toLocaleString(I),N=_.t("battle:moneyPickedUp",{moneyAmount:L});T.phaseManager.queueMessage(N,void 0,!0),T.currentBattle.moneyScattered=0}addBattleScore(){let e=T.getEnemyParty().length/2+.5;this.double&&(e/=1.5);for(const N of T.getEnemyParty())N.isBoss()&&(e*=N.bossSegments/1.5/T.getEnemyParty().length);const I=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.min(this.turn-2,10*e)/(10*e)),L=Math.ceil(this.battleScore*I);T.score+=L,`${L}`,this.turn-1,Math.floor(I*100)/100,`${T.score}`,T.updateScoreText()}getBgmOverride(){var I,L,N,S,n,i,C,o;if(this.isBattleMysteryEncounter()&&((I=this.mysteryEncounter)==null?void 0:I.encounterMode)===DO.DEFAULT)return null;if(this.battleType===yE.TRAINER||((L=this.mysteryEncounter)==null?void 0:L.encounterMode)===DO.TRAINER_BATTLE)return!this.started&&((N=this.trainer)!=null&&N.config.encounterBgm)&&((n=(S=this.trainer)==null?void 0:S.getEncounterMessages())!=null&&n.length)?`encounter_${(i=this.trainer)==null?void 0:i.getEncounterBgm()}`:T.musicPreference===WT.GENFIVE?((C=this.trainer)==null?void 0:C.getBattleBgm())??null:((o=this.trainer)==null?void 0:o.getMixedBattleBgm())??null;if(this.gameMode.isClassic&&this.waveIndex>195&&this.battleSpec!==xO.FINAL_BOSS)return"end_summit";const e=T.getEnemyParty();for(const l of e){if(this.battleSpec===xO.FINAL_BOSS)return l.species.getFormSpriteKey(l.formIndex)===eA.ETERNAMAX?"battle_final":"battle_final_encounter";if(l.species.legendary||l.species.subLegendary||l.species.mythical){if(T.musicPreference===WT.GENFIVE)switch(l.species.speciesId){case A.REGIROCK:case A.REGICE:case A.REGISTEEL:case A.REGIGIGAS:case A.REGIDRAGO:case A.REGIELEKI:return"battle_legendary_regis_g5";case A.KYUREM:return"battle_legendary_kyurem";default:return l.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}if(T.musicPreference===WT.ALLGENS)switch(l.species.speciesId){case A.ARTICUNO:case A.ZAPDOS:case A.MOLTRES:case A.MEWTWO:case A.MEW:return"battle_legendary_kanto";case A.RAIKOU:return"battle_legendary_raikou";case A.ENTEI:return"battle_legendary_entei";case A.SUICUNE:return"battle_legendary_suicune";case A.LUGIA:return"battle_legendary_lugia";case A.HO_OH:return"battle_legendary_ho_oh";case A.REGIROCK:case A.REGICE:case A.REGISTEEL:case A.REGIGIGAS:case A.REGIDRAGO:case A.REGIELEKI:return"battle_legendary_regis_g6";case A.GROUDON:case A.KYOGRE:return"battle_legendary_gro_kyo";case A.RAYQUAZA:return"battle_legendary_rayquaza";case A.DEOXYS:return"battle_legendary_deoxys";case A.UXIE:case A.MESPRIT:case A.AZELF:return"battle_legendary_lake_trio";case A.HEATRAN:case A.CRESSELIA:case A.DARKRAI:case A.SHAYMIN:return"battle_legendary_sinnoh";case A.DIALGA:case A.PALKIA:return l.species.getFormSpriteKey(l.formIndex)===eA.ORIGIN?"battle_legendary_origin_forme":"battle_legendary_dia_pal";case A.GIRATINA:return"battle_legendary_giratina";case A.ARCEUS:return"battle_legendary_arceus";case A.COBALION:case A.TERRAKION:case A.VIRIZION:case A.KELDEO:case A.TORNADUS:case A.LANDORUS:case A.THUNDURUS:case A.MELOETTA:case A.GENESECT:return"battle_legendary_unova";case A.KYUREM:return"battle_legendary_kyurem";case A.XERNEAS:case A.YVELTAL:case A.ZYGARDE:return"battle_legendary_xern_yvel";case A.TAPU_KOKO:case A.TAPU_LELE:case A.TAPU_BULU:case A.TAPU_FINI:return"battle_legendary_tapu";case A.SOLGALEO:case A.LUNALA:return"battle_legendary_sol_lun";case A.NECROZMA:switch(l.getFormKey()){case"dusk-mane":case"dawn-wings":return"battle_legendary_dusk_dawn";case"ultra":return"battle_legendary_ultra_nec";default:return"battle_legendary_sol_lun"}case A.NIHILEGO:case A.PHEROMOSA:case A.BUZZWOLE:case A.XURKITREE:case A.CELESTEELA:case A.KARTANA:case A.GUZZLORD:case A.POIPOLE:case A.NAGANADEL:case A.STAKATAKA:case A.BLACEPHALON:return"battle_legendary_ub";case A.ZACIAN:case A.ZAMAZENTA:return"battle_legendary_zac_zam";case A.GLASTRIER:case A.SPECTRIER:return"battle_legendary_glas_spec";case A.CALYREX:return l.getFormKey()==="ice"||l.getFormKey()==="shadow"?"battle_legendary_riders":"battle_legendary_calyrex";case A.GALAR_ARTICUNO:case A.GALAR_ZAPDOS:case A.GALAR_MOLTRES:return"battle_legendary_birds_galar";case A.WO_CHIEN:case A.CHIEN_PAO:case A.TING_LU:case A.CHI_YU:return"battle_legendary_ruinous";case A.KORAIDON:case A.MIRAIDON:return"battle_legendary_kor_mir";case A.OKIDOGI:case A.MUNKIDORI:case A.FEZANDIPITI:return"battle_legendary_loyal_three";case A.OGERPON:return"battle_legendary_ogerpon";case A.TERAPAGOS:return"battle_legendary_terapagos";case A.PECHARUNT:return"battle_legendary_pecharunt";default:return l.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}}}return T.gameMode.isClassic&&this.waveIndex<=4?"battle_wild":null}randSeedInt(e,I=0){if(e<=1)return I;const L=T.rngCounter,N=T.rngSeedOverride,S=Phaser.Math.RND.state();this.battleSeedState?Phaser.Math.RND.state(this.battleSeedState):(Phaser.Math.RND.sow([My(this.battleSeed,this.turn<<6)]),this.battleSeed),T.rngCounter=this.rngCounter++,T.rngSeedOverride=this.battleSeed;const n=DA(e,I);return this.battleSeedState=Phaser.Math.RND.state(),Phaser.Math.RND.state(S),T.rngCounter=L,T.rngSeedOverride=N,n}isBattleMysteryEncounter(){return this.battleType===yE.MYSTERY_ENCOUNTER}};r(LK,"Battle");let k2=LK;const NK=class NK{setBattleType(e){return this.battleType=e,this}setDouble(e){return this.double=e,this}setGetTrainerFunc(e){return this.getTrainer=e,this}setGetEnemyPartyFunc(e){return this.getEnemyParty=e,this}setSeedOffsetWave(e){return this.seedOffsetWaveIndex=e,this}setCustomModifierRewards(e){return this.customModifierRewardSettings=e,this}};r(NK,"FixedBattleConfig");let me=NK;function fR(R,e=!1,I=0){return()=>{const L=DA(R.length),N=[];T.executeWithSeedOffset(()=>{for(const C of R){const o=Array.isArray(C)?He(C):C;N.push(o)}},I);let S=PE.DEFAULT;e&&(S=we(2)===0?PE.FEMALE:PE.DEFAULT);const i=[U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT].includes(N[L]);return he[N[L]].hasDouble&&i?new cO(N[L],we(3)===0?PE.DOUBLE:S):new cO(N[L],S)}}r(fR,"getRandomTrainerFunc");const iZ={[NE.TOWN_YOUNGSTER]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(U.YOUNGSTER,DA(2)?PE.FEMALE:PE.DEFAULT)),[NE.RIVAL_1]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(U.RIVAL,T.gameData.gender===de.MALE?PE.FEMALE:PE.DEFAULT)),[NE.RIVAL_2]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(U.RIVAL_2,T.gameData.gender===de.MALE?PE.FEMALE:PE.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ULTRA,p.GREAT,p.GREAT],allowLuckUpgrades:!1}),[NE.EVIL_GRUNT_1]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(fR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),[NE.RIVAL_3]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(U.RIVAL_3,T.gameData.gender===de.MALE?PE.FEMALE:PE.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],allowLuckUpgrades:!1}),[NE.EVIL_GRUNT_2]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),[NE.EVIL_GRUNT_3]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),[NE.EVIL_ADMIN_1]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR([[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.COLRESS],[U.XEROSIC,U.BRYONY],U.FABA,U.PLUMERIA,U.OLEANA,[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],!0)),[NE.RIVAL_4]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(U.RIVAL_4,T.gameData.gender===de.MALE?PE.FEMALE:PE.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[NE.EVIL_GRUNT_4]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR([U.ROCKET_GRUNT,U.MAGMA_GRUNT,U.AQUA_GRUNT,U.GALACTIC_GRUNT,U.PLASMA_GRUNT,U.FLARE_GRUNT,U.AETHER_GRUNT,U.SKULL_GRUNT,U.MACRO_GRUNT,U.STAR_GRUNT],!0)),[NE.EVIL_ADMIN_2]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR([[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.COLRESS],[U.XEROSIC,U.BRYONY],U.FABA,U.PLUMERIA,U.OLEANA,[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],!0,1)),[NE.EVIL_BOSS_1]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR([U.ROCKET_BOSS_GIOVANNI_1,U.MAXIE,U.ARCHIE,U.CYRUS,U.GHETSIS,U.LYSANDRE,U.LUSAMINE,U.GUZMA,U.ROSE,U.PENNY])).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[NE.RIVAL_5]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(U.RIVAL_5,T.gameData.gender===de.MALE?PE.FEMALE:PE.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[NE.EVIL_BOSS_2]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR([U.ROCKET_BOSS_GIOVANNI_2,U.MAXIE_2,U.ARCHIE_2,U.CYRUS_2,U.GHETSIS_2,U.LYSANDRE_2,U.LUSAMINE_2,U.GUZMA_2,U.ROSE_2,U.PENNY_2])).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[NE.ELITE_FOUR_1]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(fR([U.LORELEI,U.WILL,U.SIDNEY,U.AARON,U.SHAUNTAL,U.MALVA,[U.HALA,U.MOLAYNE],U.MARNIE_ELITE,U.RIKA,U.CRISPIN])),[NE.ELITE_FOUR_2]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.ELITE_FOUR_1).setGetTrainerFunc(fR([U.BRUNO,U.KOGA,U.PHOEBE,U.BERTHA,U.MARSHAL,U.SIEBOLD,U.OLIVIA,U.NESSA_ELITE,U.POPPY,U.AMARYS])),[NE.ELITE_FOUR_3]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.ELITE_FOUR_1).setGetTrainerFunc(fR([U.AGATHA,U.BRUNO,U.GLACIA,U.FLINT,U.GRIMSLEY,U.WIKSTROM,U.ACEROLA,[U.BEA_ELITE,U.ALLISTER_ELITE],U.LARRY_ELITE,U.LACEY])),[NE.ELITE_FOUR_4]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.ELITE_FOUR_1).setGetTrainerFunc(fR([U.LANCE,U.KAREN,U.DRAKE,U.LUCIAN,U.CAITLIN,U.DRASNA,U.KAHILI,U.RAIHAN_ELITE,U.HASSEL,U.DRAYTON])),[NE.CHAMPION]:new me().setBattleType(yE.TRAINER).setSeedOffsetWave(NE.ELITE_FOUR_1).setGetTrainerFunc(fR([U.BLUE,[U.RED,U.LANCE_CHAMPION],[U.STEVEN,U.WALLACE],U.CYNTHIA,[U.ALDER,U.IRIS],U.DIANTHA,[U.KUKUI,U.HAU],[U.LEON,U.MUSTARD],[U.GEETA,U.NEMONA],U.KIERAN])),[NE.RIVAL_6]:new me().setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(U.RIVAL_6,T.gameData.gender===de.MALE?PE.FEMALE:PE.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],allowLuckUpgrades:!1})};var Ke=(R=>(R[R.STARTER_CHOICE=0]="STARTER_CHOICE",R[R.STARTER_POINTS=1]="STARTER_POINTS",R[R.STARTER_COST=2]="STARTER_COST",R[R.STARTER_MODIFY=3]="STARTER_MODIFY",R[R.POKEMON_IN_BATTLE=4]="POKEMON_IN_BATTLE",R[R.FIXED_BATTLES=5]="FIXED_BATTLES",R[R.TYPE_EFFECTIVENESS=6]="TYPE_EFFECTIVENESS",R[R.AI_LEVEL=7]="AI_LEVEL",R[R.AI_MOVE_SLOTS=8]="AI_MOVE_SLOTS",R[R.PASSIVE_ACCESS=9]="PASSIVE_ACCESS",R[R.GAME_MODE_MODIFY=10]="GAME_MODE_MODIFY",R[R.MOVE_ACCESS=11]="MOVE_ACCESS",R[R.MOVE_WEIGHT=12]="MOVE_WEIGHT",R[R.FLIP_STAT=13]="FLIP_STAT",R))(Ke||{});const L0=10,SK=class SK{constructor(e,I=Number.MAX_SAFE_INTEGER){this.id=e,this.value=0,this.maxValue=I,this.severity=0,this.maxSeverity=0,this.conditions=[]}reset(){this.value=0,this.severity=0}geti18nKey(){return QA[this.id].split("_").map((e,I)=>I?`${e[0]}${e.slice(1).toLowerCase()}`:e.toLowerCase()).join("")}isUnlocked(e){return this.conditions.every(I=>I(e))}condition(e){return this.conditions.push(e),this}getName(){return _.t(`challenges:${this.geti18nKey()}.name`)}getValue(e){const I=e??this.value;return _.t(`challenges:${this.geti18nKey()}.value.${I}`)}getDescription(e){const I=e??this.value;return`${_.t([`challenges:${this.geti18nKey()}.desc.${I}`,`challenges:${this.geti18nKey()}.desc`])}`}increaseValue(){return this.value<this.maxValue?(this.value=Math.min(this.value+1,this.maxValue),!0):!1}decreaseValue(){return this.value>0?(this.value=Math.max(this.value-1,0),!0):!1}hasSeverity(){return this.value!==0&&this.maxSeverity>0}decreaseSeverity(){return this.severity>0?(this.severity=Math.max(this.severity-1,0),!0):!1}increaseSeverity(){return this.severity<this.maxSeverity?(this.severity=Math.min(this.severity+1,this.maxSeverity),!0):!1}getDifficulty(){return this.value}getMinDifficulty(){return 0}static loadChallenge(e){throw new Error("Method not implemented! Use derived class")}applyStarterChoice(e,I,L){return!1}applyStarterPoints(e){return!1}applyStarterCost(e,I){return!1}applyStarterModify(e){return!1}applyPokemonInBattle(e,I){return!1}applyFixedBattle(e,I){return!1}applyTypeEffectiveness(e){return!1}applyLevelChange(e,I,L,N){return!1}applyMoveSlot(e,I){return!1}applyPassiveAccess(e,I){return!1}applyGameModeModify(){return!1}applyMoveAccessLevel(e,I,L,N){return!1}applyMoveWeight(e,I,L,N){return!1}applyFlipStat(e,I){return!1}};r(SK,"Challenge");let It=SK;const Vl=class Vl extends It{constructor(){super(QA.SINGLE_GENERATION,9)}applyStarterChoice(e,I){return e.generation!==this.value?(I.value=!1,!0):!1}applyPokemonInBattle(e,I){const L=YA(e.species.speciesId).generation,N=e.isFusion()?YA(e.fusionSpecies.speciesId).generation:0;return e.isPlayer()&&(L!==this.value||e.isFusion()&&N!==this.value)?(I.value=!1,!0):!1}applyFixedBattle(e,I){let L=[];const N=[NE.EVIL_GRUNT_1,NE.EVIL_GRUNT_2,NE.EVIL_GRUNT_3,NE.EVIL_ADMIN_1,NE.EVIL_GRUNT_4,NE.EVIL_ADMIN_2,NE.EVIL_BOSS_1,NE.EVIL_BOSS_2],S=[[U.ROCKET_GRUNT],[U.ROCKET_GRUNT],[U.MAGMA_GRUNT,U.AQUA_GRUNT],[U.GALACTIC_GRUNT],[U.PLASMA_GRUNT],[U.FLARE_GRUNT],[U.AETHER_GRUNT,U.SKULL_GRUNT],[U.MACRO_GRUNT],[U.STAR_GRUNT]],n=[[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[U.ARCHER,U.ARIANA,U.PROTON,U.PETREL],[[U.TABITHA,U.COURTNEY],[U.MATT,U.SHELLY]],[U.JUPITER,U.MARS,U.SATURN],[U.ZINZOLIN,U.COLRESS],[U.XEROSIC,U.BRYONY],[U.FABA,U.PLUMERIA],[U.OLEANA],[U.GIACOMO,U.MELA,U.ATTICUS,U.ORTEGA,U.ERI]],i=[[U.ROCKET_BOSS_GIOVANNI_1],[U.ROCKET_BOSS_GIOVANNI_1],[U.MAXIE,U.ARCHIE],[U.CYRUS],[U.GHETSIS],[U.LYSANDRE],[U.LUSAMINE,U.GUZMA],[U.ROSE],[U.PENNY]],C=[[U.ROCKET_BOSS_GIOVANNI_2],[U.ROCKET_BOSS_GIOVANNI_2],[U.MAXIE_2,U.ARCHIE_2],[U.CYRUS_2],[U.GHETSIS_2],[U.LYSANDRE_2],[U.LUSAMINE_2,U.GUZMA_2],[U.ROSE_2],[U.PENNY_2]];switch(e){case NE.EVIL_GRUNT_1:return L=S[this.value-1],I.setBattleType(yE.TRAINER).setGetTrainerFunc(fR(L,!0)),!0;case NE.EVIL_GRUNT_2:case NE.EVIL_GRUNT_3:case NE.EVIL_GRUNT_4:L=S[this.value-1];break;case NE.EVIL_ADMIN_1:case NE.EVIL_ADMIN_2:L=n[this.value-1];break;case NE.EVIL_BOSS_1:return L=i[this.value-1],I.setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR(L,!0)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),!0;case NE.EVIL_BOSS_2:return L=C[this.value-1],I.setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR(L,!0)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),!0;case NE.ELITE_FOUR_1:L=[U.LORELEI,U.WILL,U.SIDNEY,U.AARON,U.SHAUNTAL,U.MALVA,He([U.HALA,U.MOLAYNE]),U.MARNIE_ELITE,U.RIKA];break;case NE.ELITE_FOUR_2:L=[U.BRUNO,U.KOGA,U.PHOEBE,U.BERTHA,U.MARSHAL,U.SIEBOLD,U.OLIVIA,U.NESSA_ELITE,U.POPPY];break;case NE.ELITE_FOUR_3:L=[U.AGATHA,U.BRUNO,U.GLACIA,U.FLINT,U.GRIMSLEY,U.WIKSTROM,U.ACEROLA,He([U.BEA_ELITE,U.ALLISTER_ELITE]),U.LARRY_ELITE];break;case NE.ELITE_FOUR_4:L=[U.LANCE,U.KAREN,U.DRAKE,U.LUCIAN,U.CAITLIN,U.DRASNA,U.KAHILI,U.RAIHAN_ELITE,U.HASSEL];break;case NE.CHAMPION:L=[U.BLUE,He([U.RED,U.LANCE_CHAMPION]),He([U.STEVEN,U.WALLACE]),U.CYNTHIA,He([U.ALDER,U.IRIS]),U.DIANTHA,He([U.KUKUI,U.HAU]),He([U.LEON,U.MUSTARD]),He([U.GEETA,U.NEMONA])];break}if(L.length===0)return!1;if(N.includes(e))return I.setBattleType(yE.TRAINER).setSeedOffsetWave(NE.EVIL_GRUNT_1).setGetTrainerFunc(fR(L,!0)),!0;if(e>=NE.ELITE_FOUR_1&&e<=NE.CHAMPION){const o=L;return I.setBattleType(yE.TRAINER).setGetTrainerFunc(()=>new cO(o[this.value-1],PE.DEFAULT)),!0}return!1}getDifficulty(){return this.value>0?1:0}getValue(e){const I=e??this.value;return I===0?_.t("settings:off"):_.t(`starterSelectUiHandler:gen${I}`)}getDescription(e){const I=e??this.value;return I===0?_.t("challenges:singleGeneration.desc_default"):_.t("challenges:singleGeneration.desc",{gen:_.t(`challenges:singleGeneration.gen_${I}`)})}static loadChallenge(e){const I=new Vl;return I.value=e.value,I.severity=e.severity,I}};r(Vl,"SingleGenerationChallenge");let uO=Vl;const fN=class fN extends It{constructor(){super(QA.SINGLE_TYPE,18)}applyStarterChoice(e,I,L){const N=sC(e.speciesId,L.formIndex);return[N.type1,N.type2].includes(this.value-1)?!1:(I.value=!1,!0)}applyPokemonInBattle(e,I){return e.isPlayer()&&!e.isOfType(this.value-1,!1,!1,!0)&&!fN.TYPE_OVERRIDES.some(L=>L.type===this.value-1&&(e.isFusion()&&L.fusion?e.fusionSpecies:e.species).speciesId===L.species)?(I.value=!1,!0):!1}getDifficulty(){return this.value>0?1:0}getValue(e){return e===void 0&&(e=this.value),t[this.value-1].toLowerCase()}getDescription(e){e===void 0&&(e=this.value);const I=_.t(`pokemonInfo:Type.${t[this.value-1]}`),L=`[color=${n3[t[this.value-1]]}][shadow=${r3[t[this.value-1]]}]${I}[/shadow][/color]`,N=_.t("challenges:singleType.desc_default"),S=_.t("challenges:singleType.desc",{type:L});return this.value===0?N:S}static loadChallenge(e){const I=new fN;return I.value=e.value,I.severity=e.severity,I}};r(fN,"SingleTypeChallenge"),fN.TYPE_OVERRIDES=[{species:A.CASTFORM,type:t.NORMAL,fusion:!1}];let Ve=fN;const wl=class wl extends It{constructor(){super(QA.FRESH_START,1)}applyStarterChoice(e,I){return ym.includes(e.speciesId)?!1:(I.value=!1,!0)}applyStarterCost(e,I){return ym.includes(e)?(I.value=FR[e],!0):!1}applyStarterModify(e){return e.abilityIndex=0,e.passive=!1,e.nature=ZA.HARDY,e.moveset=e.species.getLevelMoves().filter(I=>I[0]<=5).map(I=>I[1]).slice(0,4).map(I=>new pA(I)),e.luck=0,e.shiny=!1,e.variant=0,e.formIndex=0,e.ivs=[15,15,15,15,15,15],e.teraType=e.species.type1,!0}getDifficulty(){return 0}static loadChallenge(e){const I=new wl;return I.value=e.value,I.severity=e.severity,I}};r(wl,"FreshStartChallenge");let Xa=wl;const vl=class vl extends It{constructor(){super(QA.INVERSE_BATTLE,1)}static loadChallenge(e){const I=new vl;return I.value=e.value,I.severity=e.severity,I}getDifficulty(){return 0}applyTypeEffectiveness(e){return e.value<1?(e.value=2,!0):e.value>1?(e.value=.5,!0):!1}};r(vl,"InverseBattleChallenge");let Qa=vl;const xl=class xl extends It{constructor(){super(QA.FLIP_STAT,1)}applyFlipStat(e,I){const L=I6(I);return I[0]=L[5],I[1]=L[4],I[2]=L[3],I[3]=L[2],I[4]=L[1],I[5]=L[0],!0}static loadChallenge(e){const I=new xl;return I.value=e.value,I.severity=e.severity,I}};r(xl,"FlipStatChallenge");let kS=xl;const Zl=class Zl extends It{constructor(){super(QA.LOWER_MAX_STARTER_COST,9)}getValue(e){return e===void 0&&(e=this.value),(L0-e).toString()}applyStarterChoice(e,I){return FR[e.speciesId]>L0-this.value?(I.value=!1,!0):!1}static loadChallenge(e){const I=new Zl;return I.value=e.value,I.severity=e.severity,I}};r(Zl,"LowerStarterMaxCostChallenge");let N0=Zl;const bl=class bl extends It{constructor(){super(QA.LOWER_STARTER_POINTS,9)}getValue(e){return e===void 0&&(e=this.value),(L0-e).toString()}applyStarterPoints(e){return e.value-=this.value,!0}static loadChallenge(e){const I=new bl;return I.value=e.value,I.severity=e.severity,I}};r(bl,"LowerStarterPointsChallenge");let S0=bl;function fI(R,...e){let I=!1;return T.gameMode.challenges.forEach(L=>{if(L.value!==0)switch(R){case Ke.STARTER_CHOICE:I||(I=L.applyStarterChoice(e[0],e[1],e[2]));break;case Ke.STARTER_POINTS:I||(I=L.applyStarterPoints(e[0]));break;case Ke.STARTER_COST:I||(I=L.applyStarterCost(e[0],e[1]));break;case Ke.STARTER_MODIFY:I||(I=L.applyStarterModify(e[0]));break;case Ke.POKEMON_IN_BATTLE:I||(I=L.applyPokemonInBattle(e[0],e[1]));break;case Ke.FIXED_BATTLES:I||(I=L.applyFixedBattle(e[0],e[1]));break;case Ke.TYPE_EFFECTIVENESS:I||(I=L.applyTypeEffectiveness(e[0]));break;case Ke.AI_LEVEL:I||(I=L.applyLevelChange(e[0],e[1],e[2],e[3]));break;case Ke.AI_MOVE_SLOTS:I||(I=L.applyMoveSlot(e[0],e[1]));break;case Ke.PASSIVE_ACCESS:I||(I=L.applyPassiveAccess(e[0],e[1]));break;case Ke.GAME_MODE_MODIFY:I||(I=L.applyGameModeModify());break;case Ke.MOVE_ACCESS:I||(I=L.applyMoveAccessLevel(e[0],e[1],e[2],e[3]));break;case Ke.MOVE_WEIGHT:I||(I=L.applyMoveWeight(e[0],e[1],e[2],e[3]));break;case Ke.FLIP_STAT:I||(I=L.applyFlipStat(e[0],e[1]));break}}),I}r(fI,"applyChallenges");function CZ(R){switch(R.id){case QA.SINGLE_GENERATION:return uO.loadChallenge(R);case QA.SINGLE_TYPE:return Ve.loadChallenge(R);case QA.LOWER_MAX_STARTER_COST:return N0.loadChallenge(R);case QA.LOWER_STARTER_POINTS:return S0.loadChallenge(R);case QA.FRESH_START:return Xa.loadChallenge(R);case QA.INVERSE_BATTLE:return Qa.loadChallenge(R);case QA.FLIP_STAT:return kS.loadChallenge(R)}throw new Error("Unknown challenge copied")}r(CZ,"copyChallenge");const d6=[];function p6(){d6.push(new uO,new Ve,new Xa,new Qa,new kS)}r(p6,"initChallenges");function UZ(R,e,I){if(!I){const N=new nE(!0);return fI(Ke.STARTER_CHOICE,R,N,e),N.value}const L=[R.speciesId];for(;L.length;){const N=L.pop();if(!N)return!1;const S=YA(N);if(g6(S,e))return!0;N&&lE.hasOwnProperty(N)&&lE[N].forEach(n=>{(!(n!=null&&n.preFormKey)||n.preFormKey===R.forms[e.formIndex].formKey)&&L.push(n.speciesId)})}return!1}r(UZ,"checkStarterValidForChallenge");function g6(R,e,I){const L=new nE(!0);return fI(Ke.STARTER_CHOICE,R,L,e),xt.hasOwnProperty(R.speciesId)?L.value?!0:xt[R.speciesId].some(S=>"item"in S.trigger?R.forms.some((n,i)=>{if(S.formKey===n.formKey){const C={...e,formIndex:i},o=new nE(!0);return fI(Ke.STARTER_CHOICE,R,o,C),o.value}return!1}):!1):L.value}r(g6,"checkSpeciesValidForChallenge");var ER=(R=>(R[R.INITIAL_SWITCH=0]="INITIAL_SWITCH",R[R.SWITCH=1]="SWITCH",R[R.BATON_PASS=2]="BATON_PASS",R[R.SHED_TAIL=3]="SHED_TAIL",R[R.FORCE_SWITCH=4]="FORCE_SWITCH",R))(ER||{}),vI=(R=>(R[R.PRE_APPLY=0]="PRE_APPLY",R[R.POST_APPLY=1]="POST_APPLY",R[R.POST_TARGET=2]="POST_TARGET",R))(vI||{}),Le=(R=>(R[R._2=0]="_2",R[R._2_TO_5=1]="_2_TO_5",R[R._3=2]="_3",R[R._10=3]="_10",R[R.BEAT_UP=4]="BEAT_UP",R))(Le||{});const m6=new Set([E.AFTER_YOU,E.ASSIST,E.BANEFUL_BUNKER,E.BEAK_BLAST,E.BELCH,E.BESTOW,E.COMEUPPANCE,E.COPYCAT,E.COUNTER,E.CRAFTY_SHIELD,E.DESTINY_BOND,E.DETECT,E.ENDURE,E.FEINT,E.FOCUS_PUNCH,E.FOLLOW_ME,E.HELPING_HAND,E.INSTRUCT,E.KINGS_SHIELD,E.MAT_BLOCK,E.ME_FIRST,E.METRONOME,E.MIMIC,E.MIRROR_COAT,E.MIRROR_MOVE,E.OBSTRUCT,E.PROTECT,E.QUASH,E.QUICK_GUARD,E.RAGE_POWDER,E.REVIVAL_BLESSING,E.SHELL_TRAP,E.SILK_TRAP,E.SKETCH,E.SLEEP_TALK,E.SNATCH,E.SNORE,E.SPIKY_SHIELD,E.SPOTLIGHT,E.STRUGGLE,E.TRANSFORM,E.WIDE_GUARD]),y6=new Set([E.ASSIST,E.BANEFUL_BUNKER,E.BEAK_BLAST,E.BELCH,E.BESTOW,E.BOUNCE,E.CELEBRATE,E.CHATTER,E.CIRCLE_THROW,E.COPYCAT,E.COUNTER,E.DESTINY_BOND,E.DETECT,E.DIG,E.DIVE,E.DRAGON_TAIL,E.ENDURE,E.FEINT,E.FLY,E.FOCUS_PUNCH,E.FOLLOW_ME,E.HELPING_HAND,E.HOLD_HANDS,E.KINGS_SHIELD,E.MAT_BLOCK,E.ME_FIRST,E.METRONOME,E.MIMIC,E.MIRROR_COAT,E.MIRROR_MOVE,E.NATURE_POWER,E.PHANTOM_FORCE,E.PROTECT,E.RAGE_POWDER,E.ROAR,E.SHADOW_FORCE,E.SHELL_TRAP,E.SKETCH,E.SKY_DROP,E.SLEEP_TALK,E.SNATCH,E.SPIKY_SHIELD,E.SPOTLIGHT,E.STRUGGLE,E.SWITCHEROO,E.TRANSFORM,E.TRICK,E.WHIRLWIND]),V6=new Set([E.ASSIST,E.BELCH,E.BEAK_BLAST,E.BIDE,E.BOUNCE,E.COPYCAT,E.DIG,E.DIVE,E.FREEZE_SHOCK,E.FLY,E.FOCUS_PUNCH,E.GEOMANCY,E.ICE_BURN,E.ME_FIRST,E.METRONOME,E.MIRROR_MOVE,E.MIMIC,E.PHANTOM_FORCE,E.RAZOR_WIND,E.SHADOW_FORCE,E.SHELL_TRAP,E.SKETCH,E.SKULL_BASH,E.SKY_ATTACK,E.SKY_DROP,E.SLEEP_TALK,E.SOLAR_BLADE,E.SOLAR_BEAM,E.STRUGGLE,E.UPROAR]),w6=new Set([E.ASSIST,E.BANEFUL_BUNKER,E.BEAK_BLAST,E.BESTOW,E.CELEBRATE,E.CHATTER,E.CIRCLE_THROW,E.COPYCAT,E.COUNTER,E.DESTINY_BOND,E.DETECT,E.DRAGON_TAIL,E.ENDURE,E.FEINT,E.FOCUS_PUNCH,E.FOLLOW_ME,E.HELPING_HAND,E.HOLD_HANDS,E.KINGS_SHIELD,E.MAT_BLOCK,E.ME_FIRST,E.METRONOME,E.MIMIC,E.MIRROR_COAT,E.MIRROR_MOVE,E.PROTECT,E.RAGE_POWDER,E.ROAR,E.SHELL_TRAP,E.SKETCH,E.SLEEP_TALK,E.SNATCH,E.SPIKY_SHIELD,E.SPOTLIGHT,E.STRUGGLE,E.SWITCHEROO,E.TRANSFORM,E.TRICK,E.WHIRLWIND]),v6=new Set([E.ACUPRESSURE,E.AFTER_YOU,E.AROMATIC_MIST,E.BEAK_BLAST,E.BELCH,E.CHILLY_RECEPTION,E.COACHING,E.CONVERSION_2,E.COUNTER,E.CRAFTY_SHIELD,E.CURSE,E.DECORATE,E.DOODLE,E.DOOM_DESIRE,E.DRAGON_CHEER,E.ELECTRIC_TERRAIN,E.FINAL_GAMBIT,E.FLORAL_HEALING,E.FLOWER_SHIELD,E.FOCUS_PUNCH,E.FUTURE_SIGHT,E.GEAR_UP,E.GRASSY_TERRAIN,E.GRAVITY,E.GUARD_SPLIT,E.HAIL,E.HAZE,E.HEAL_PULSE,E.HELPING_HAND,E.HOLD_HANDS,E.INSTRUCT,E.ION_DELUGE,E.MAGNETIC_FLUX,E.MAT_BLOCK,E.ME_FIRST,E.MIMIC,E.MIRROR_COAT,E.MIRROR_MOVE,E.MIST,E.MISTY_TERRAIN,E.MUD_SPORT,E.PERISH_SONG,E.POWER_SPLIT,E.PSYCH_UP,E.PSYCHIC_TERRAIN,E.PURIFY,E.QUICK_GUARD,E.RAIN_DANCE,E.REFLECT_TYPE,E.ROLE_PLAY,E.ROTOTILLER,E.SANDSTORM,E.SHELL_TRAP,E.SKETCH,E.SNOWSCAPE,E.SPIT_UP,E.SPOTLIGHT,E.STRUGGLE,E.SUNNY_DAY,E.TEATIME,E.TRANSFORM,E.WATER_SPORT,E.WIDE_GUARD]),x6=new Set([E.WEATHER_BALL,E.JUDGMENT,E.REVELATION_DANCE,E.MULTI_ATTACK,E.TERRAIN_PULSE,E.NATURAL_GIFT,E.TECHNO_BLAST,E.HIDDEN_POWER]),TK=class TK{constructor(e,I,L,N,S,n,i,C,o,l){this.attrs=[],this.conditions=[],this.flags=0,this.nameAppend="",this.id=e,this._type=I,this._category=L,this.moveTarget=N,this.power=S,this.accuracy=n,this.pp=i,this.chance=C,this.priority=o,this.generation=l,N===AA.USER&&this.setFlag(JA.IGNORE_PROTECT,!0),L===G.PHYSICAL&&this.setFlag(JA.MAKES_CONTACT,!0),this.localize()}get type(){return this._type}get category(){return this._category}localize(){const e=E[this.id].split("_").filter(I=>I).map((I,L)=>L?`${I[0]}${I.slice(1).toLowerCase()}`:I.toLowerCase()).join("");this.name=this.id?`${_.t(`move:${e}.name`)}${this.nameAppend}`:"",this.effect=this.id?`${_.t(`move:${e}.effect`)}${this.nameAppend}`:""}getAttrs(e){const I=bn[e];return I?this.attrs.filter(L=>L instanceof I):[]}hasAttr(e){const I=bn[e];return I?this.attrs.some(L=>L instanceof I):!1}findAttr(e){return this.attrs.find(e)}attr(e,...I){const L=new e(...I);this.attrs.push(L);let N=L.getCondition();return N&&(typeof N=="function"&&(N=new fL(N)),this.conditions.push(N)),this}addAttr(e){this.attrs.push(e);let I=e.getCondition();return I&&(typeof I=="function"&&(I=new fL(I)),this.conditions.push(I)),this}target(e){return this.moveTarget=e,this}hasFlag(e){return!!(this.flags&e)}isMultiTarget(){switch(this.moveTarget){case AA.ALL_OTHERS:case AA.ALL_NEAR_OTHERS:case AA.ALL_NEAR_ENEMIES:case AA.ALL_ENEMIES:case AA.USER_AND_ALLIES:case AA.ALL:case AA.USER_SIDE:case AA.ENEMY_SIDE:case AA.BOTH_SIDES:return!0}return!1}isAllyTarget(){switch(this.moveTarget){case AA.USER:case AA.NEAR_ALLY:case AA.ALLY:case AA.USER_OR_NEAR_ALLY:case AA.USER_AND_ALLIES:case AA.USER_SIDE:return!0}return!1}isChargingMove(){return!1}isTypeImmune(e,I,L){if(this.moveTarget===AA.USER)return!1;switch(L){case t.GRASS:if(this.hasFlag(JA.POWDER_MOVE))return!0;break;case t.DARK:if(e.hasAbility(O.PRANKSTER)&&this.category===G.STATUS&&e.isPlayer()!==I.isPlayer())return!0;break}return!1}hitsSubstitute(e,I){if([AA.USER,AA.USER_SIDE,AA.ENEMY_SIDE,AA.BOTH_SIDES].includes(this.moveTarget)||!(I!=null&&I.getTag(d.SUBSTITUTE)))return!1;const L=new nE(!1);return SE("InfiltratorAbAttr",e,null,!1,L),!L.value&&!this.hasFlag(JA.SOUND_BASED)&&!this.hasFlag(JA.IGNORE_SUBSTITUTE)}condition(e){return typeof e=="function"&&(e=new fL(e)),this.conditions.push(e),this}edgeCase(){return this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}setFlag(e,I){I?this.flags|=e:this.flags^=e}makesContact(e=!0){return this.setFlag(JA.MAKES_CONTACT,e),this}ignoresProtect(){return this.setFlag(JA.IGNORE_PROTECT,!0),this}soundBased(){return this.setFlag(JA.SOUND_BASED,!0),this}hidesUser(){return this.setFlag(JA.HIDE_USER,!0),this}hidesTarget(){return this.setFlag(JA.HIDE_TARGET,!0),this}bitingMove(){return this.setFlag(JA.BITING_MOVE,!0),this}pulseMove(){return this.setFlag(JA.PULSE_MOVE,!0),this}punchingMove(){return this.setFlag(JA.PUNCHING_MOVE,!0),this}slicingMove(){return this.setFlag(JA.SLICING_MOVE,!0),this}recklessMove(){return this.setFlag(JA.RECKLESS_MOVE,!0),this}ballBombMove(){return this.setFlag(JA.BALLBOMB_MOVE,!0),this}powderMove(){return this.setFlag(JA.POWDER_MOVE,!0),this}danceMove(){return this.setFlag(JA.DANCE_MOVE,!0),this}windMove(){return this.setFlag(JA.WIND_MOVE,!0),this}triageMove(){return this.setFlag(JA.TRIAGE_MOVE,!0),this}ignoresAbilities(){return this.setFlag(JA.IGNORE_ABILITIES,!0),this}checkAllHits(){return this.setFlag(JA.CHECK_ALL_HITS,!0),this}ignoresSubstitute(){return this.setFlag(JA.IGNORE_SUBSTITUTE,!0),this}redirectCounter(){return this.setFlag(JA.REDIRECT_COUNTER,!0),this}reflectable(){return this.setFlag(JA.REFLECTABLE,!0),this}doesFlagEffectApply({flag:e,user:I,target:L,isFollowUp:N=!1}){switch(e){case JA.MAKES_CONTACT:if(I.hasAbilityWithAttr("IgnoreContactAbAttr")||this.hitsSubstitute(I,L))return!1;break;case JA.IGNORE_ABILITIES:if(I.hasAbilityWithAttr("MoveAbilityBypassAbAttr")){const S=new nE(!1);if(SE("MoveAbilityBypassAbAttr",I,S,!1,this),S.value)return!0}return this.hasFlag(JA.IGNORE_ABILITIES)&&!N;case JA.IGNORE_PROTECT:if(I.hasAbilityWithAttr("IgnoreProtectOnContactAbAttr")&&this.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:I}))return!0;break;case JA.REFLECTABLE:if(L!=null&&L.getTag(CS)||!(L!=null&&L.getTag(d.MAGIC_COAT)||!this.doesFlagEffectApply({flag:JA.IGNORE_ABILITIES,user:I,target:L})&&(L!=null&&L.hasAbilityWithAttr("ReflectStatusMoveAbAttr"))))return!1;break}return!!(this.flags&e)}applyConditions(e,I,L){for(const N of this.conditions)if(!N.apply(e,I,L))return!1;return!0}getFailedText(e,I,L){for(const N of this.attrs){const S=N.getFailedText(e,I,L);if(S)return S}}getUserBenefitScore(e,I,L){let N=0;for(const S of this.attrs)N+=S.getUserBenefitScore(e,I,L);for(const S of this.conditions)N+=S.getUserBenefitScore(e,I,L);return N}getTargetBenefitScore(e,I,L){var S,n;let N=0;if(((n=(S=I.getAlly())==null?void 0:S.getTag(d.COMMANDED))==null?void 0:n.getSourcePokemon())===I)return 20*(I.isPlayer()===e.isPlayer()?-1:1);for(const i of this.attrs)N+=i.getTargetBenefitScore(e,i.selfTarget?e:I,L)*(I!==e&&i.selfTarget?-1:1);return N}calculateBattleAccuracy(e,I,L=!1){var n;const N=new VA(this.accuracy);if(Ce("VariableAccuracyAttr",e,I,this,N),ZI("WonderSkinAbAttr",I,e,this,{value:!1},L,N),N.value===-1)return N.value;const S=this.hasAttr("OneHitKOAccuracyAttr");return S||T.applyModifiers(mS,e.isPlayer(),e,N),((n=T.arena.weather)==null?void 0:n.weatherType)===Z.FOG&&(N.value=Math.floor(N.value*.9)),!S&&T.arena.getTag(CA.GRAVITY)&&(N.value=Math.floor(N.value*1.67)),N.value}calculateBattlePower(e,I,L=!1){if(this.category===G.STATUS)return-1;const N=new VA(this.power),S=new VA(1),n=new VA(this.type);hI("MoveTypeChangeAbAttr",e,I,this,!0,n,S);const i=e.getTeraType();e.isTerastallized&&i===this.type&&N.value<60&&this.priority<=0&&!this.hasAttr("MultiHitAttr")&&!T.findModifier(P=>P instanceof Ot&&P.pokemonId===e.id)&&(N.value=60),hI("VariableMovePowerAbAttr",e,I,this,L,N);const C=e.getAlly();SA(C)||hI("AllyMoveCategoryPowerBoostAbAttr",C,I,this,L,N);const o=new Set(T.getField(!0).map(P=>P.getAbilityAttrs("FieldMoveTypePowerBoostAbAttr").filter(K=>{const f=K.getCondition();return!f||f(P)})).flat());for(const P of o)P.applyPreAttack(e,null,L,I,this,[N]);(e.isPlayer()?T.getPlayerField():T.getEnemyField()).forEach(P=>hI("UserFieldMoveTypePowerBoostAbAttr",P,I,this,L,N)),N.value*=S.value;const H=e.findTag(P=>P instanceof ta&&P.boostedType===n.value);return H&&(N.value*=H.boostValue),Ce("VariablePowerAttr",e,I,this,N),this.hasAttr("TypelessAttr")||(T.arena.applyTags(na,L,n.value,N),T.applyModifiers(sI,e.isPlayer(),e,n.value,N)),e.getTag(MC)&&(N.value*=1.5),N.value}getPriority(e,I=!0){const L=new VA(this.priority);return Ce("IncrementMovePriorityAttr",e,null,this,L),SE("ChangeMovePriorityAbAttr",e,null,I,this,L),L.value}calculateEffectivePower(){let e;if(this.id===E.TRIPLE_AXEL)e=94.14;else if(this.id===E.TRIPLE_KICK)e=47.07;else{const L=this.getAttrs("MultiHitAttr")[0];L?e=L.calculateExpectedHitCount(this)*this.power:e=this.power*(this.accuracy===-1?1:this.accuracy/100)}let I=1;return this.hasAttr("DelayedAttackAttr")&&(I+=2),this.hasAttr("RechargeAttr")&&(I+=1),this.isChargingMove()&&(I+=1),e/I}canBeMultiStrikeEnhanced(e,I=!1){const{targets:L,multiple:N}=jL(e,this.id),S=N&&L.length>1,n=["MultiHitAttr","SacrificialAttr","SacrificialAttrOnHit"],i=[E.FLING,E.UPROAR,E.ROLLOUT,E.ICE_BALL,E.ENDEAVOR],C=e.getAlly(),o=this.id===E.POLLEN_PUFF&&!SA(C)&&L.includes(C.getBattlerIndex());return(!I||!S)&&!this.isChargingMove()&&!n.some(l=>this.hasAttr(l))&&!i.some(l=>this.id===l)&&!o&&this.category!==G.STATUS}};r(TK,"Move");let Ja=TK;const sK=class sK extends Ja{is(e){return e==="AttackMove"}constructor(e,I,L,N,S,n,i,C,o){super(e,I,L,AA.NEAR_OTHER,N,S,n,i,C,o),this.type===t.FIRE&&this.addAttr(new ie(!1,J.FREEZE))}getTargetBenefitScore(e,I,L){const N=super.getTargetBenefitScore(e,I,L);let S=0;const n=I.getAttackTypeEffectiveness(this.type,e,void 0,void 0,this);S=Math.pow(n-1,2)*(n<1?-2:2);const[i,C]=this.category===G.PHYSICAL?[c.ATK,c.SPATK]:[c.SPATK,c.ATK],o=new VA(e.getEffectiveStat(i,I)),l=e.getEffectiveStat(C,I);Ce("VariableAtkAttr",e,I,L,o);const H=l/o.value;H<=.75?S*=2:H<=.875&&(S*=1.5);const P=new VA(this.calculateEffectivePower());return Ce("VariablePowerAttr",e,I,L,P),S+=Math.floor(P.value/5),N-S}};r(sK,"AttackMove");let u=sK;const aK=class aK extends Ja{constructor(e,I,L,N,S,n,i){super(e,I,G.STATUS,AA.NEAR_OTHER,-1,L,N,S,n,i)}is(e){return e==="StatusMove"}};r(aK,"StatusMove");let sA=aK;const nK=class nK extends Ja{constructor(e,I,L,N,S,n,i){super(e,I,G.STATUS,AA.USER,-1,L,N,S,n,i)}is(e){return e==="SelfStatusMove"}};r(nK,"SelfStatusMove");let gA=nK;function l3(R,e){return class extends R{constructor(){super(...arguments),this.chargeAnim=et[`${E[this.id]}_CHARGING`],this.chargeAttrs=[]}isChargingMove(){return!0}chargeText(I){return this._chargeText=I,this}showChargeText(I,L){T.phaseManager.queueMessage(this._chargeText.replace("{USER}",Q(I)).replace("{TARGET}",Q(L)))}getChargeAttrs(I){const L=bn[I];return L?this.chargeAttrs.filter(N=>N instanceof L):[]}hasChargeAttr(I){const L=bn[I];return L?this.chargeAttrs.some(N=>N instanceof L):!1}chargeAttr(I,...L){const N=new I(...L);return this.chargeAttrs.push(N),this}}}r(l3,"ChargeMove");const rK=class rK extends l3(u){};r(rK,"ChargingAttackMove");let iR=rK;const iK=class iK extends l3(gA){};r(iK,"ChargingSelfStatusMove");let T0=iK;const CK=class CK{is(e){const I=bn[e];return I?this instanceof I:!1}constructor(e=!1){this.selfTarget=e}apply(e,I,L,N){return!0}getCondition(){return null}getFailedText(e,I,L){}getUserBenefitScore(e,I,L){return 0}getTargetBenefitScore(e,I,L){return 0}};r(CK,"MoveAttr");let dE=CK;const UK=class UK extends dE{constructor(e,I){super(e),this.options=I}get trigger(){var e;return((e=this.options)==null?void 0:e.trigger)??vI.POST_APPLY}get firstHitOnly(){var e;return((e=this.options)==null?void 0:e.firstHitOnly)??!1}get lastHitOnly(){var e;return((e=this.options)==null?void 0:e.lastHitOnly)??!1}get firstTargetOnly(){var e;return((e=this.options)==null?void 0:e.firstTargetOnly)??!1}get effectChanceOverride(){var e;return(e=this.options)==null?void 0:e.effectChanceOverride}canApply(e,I,L,N){return!!(this.selfTarget?e.hp&&!e.getTag(d.FRENZY):I.hp)&&(this.selfTarget||!I.getTag(d.PROTECTED)||L.doesFlagEffectApply({flag:JA.IGNORE_PROTECT,user:e,target:I}))}apply(e,I,L,N){return this.canApply(e,I,L,N)}getMoveChance(e,I,L,N,S){const n=new VA(this.effectChanceOverride??L.chance);if(SE("MoveEffectChanceMultiplierAbAttr",e,null,!S,n,L),(!L.hasAttr("FlinchAttr")||n.value<=L.chance)&&!L.hasAttr("SecretPowerAttr")){const i=e.isPlayer()?hA.PLAYER:hA.ENEMY;T.arena.applyTagsForSide(CA.WATER_FIRE_PLEDGE,i,!1,n)}return N||ZI("IgnoreMoveEffectsAbAttr",I,e,null,null,!S,n),n.value}};r(UK,"MoveEffectAttr");let AE=UK;const oK=class oK extends dE{constructor(){super(!0)}};r(oK,"MoveHeaderAttr");let $a=oK;const MK=class MK extends $a{constructor(e){super(),this.message=e}apply(e,I,L,N){const S=typeof this.message=="string"?this.message:this.message(e,L);return S?(T.phaseManager.queueMessage(S),!0):!1}};r(MK,"MessageHeaderAttr");let QC=MK;const DK=class DK extends $a{constructor(e){super(),this.tagType=e}apply(e,I,L,N){return e.addTag(this.tagType),!0}};r(DK,"AddBattlerTagHeaderAttr");let qa=DK;const lK=class lK extends qa{constructor(){super(d.BEAK_BLAST_CHARGING),this.chargeAnim=et.BEAK_BLAST_CHARGING}};r(lK,"BeakBlastHeaderAttr");let JC=lK;const _K=class _K extends dE{constructor(e){super(),this.message=e}apply(e,I,L,N){const S=typeof this.message=="string"?this.message:this.message(e,I,L);return S?(T.phaseManager.queueMessage(S,500),!0):!1}};r(_K,"PreMoveMessageAttr");let NL=_K;const GK=class GK extends dE{constructor(e,I){super(),this.message=e,this.conditionFunc=I??(()=>!0)}apply(e,I,L){return this.conditionFunc(e,I,L)}getFailedText(e,I,L){if(this.message&&this.conditionFunc(e,I,L))return typeof this.message=="string"?this.message:this.message(e,I,L)}};r(GK,"PreUseInterruptAttr");let $C=GK;const PK=class PK extends dE{};r(PK,"RespectAttackTypeImmunityAttr");let qC=PK;const HK=class HK extends dE{apply(e,I,L,N){return N[0].value=!0,!0}};r(HK,"IgnoreOpponentStatStagesAttr");let hN=HK;const uK=class uK extends dE{apply(e,I,L,N){return N[0].value++,!0}getUserBenefitScore(e,I,L){return 3}};r(uK,"HighCritAttr");let re=uK;const cK=class cK extends dE{apply(e,I,L,N){return N[0].value=!0,!0}getUserBenefitScore(e,I,L){return 5}};r(cK,"CritOnlyAttr");let XI=cK;const BK=class BK extends dE{constructor(e){super(),this.damage=e}apply(e,I,L,N){return N[0].value=this.getDamage(e,I,L),!0}getDamage(e,I,L){return this.damage}};r(BK,"FixedDamageAttr");let iI=BK;const KK=class KK extends iI{constructor(){super(0)}apply(e,I,L,N){return N[0].value=e.hp,!0}};r(KK,"UserHpDamageAttr");let zC=KK;const fK=class fK extends iI{constructor(){super(0)}apply(e,I,L,N){var n;const S=((n=e.getHeldItems().find(i=>i instanceof Ot))==null?void 0:n.getStackCount())??0;if(S<=0)return N[0].value=UE(I.hp/2),!0;switch(e.turnData.hitCount-e.turnData.hitsLeft){case 0:this.initialHp=I.hp;default:return N[0].value=UE(this.initialHp/2),!0;case S+1:return N[0].value=UE(I.hp/2),!0}}getTargetBenefitScore(e,I,L){return I.getHpRatio()>.5?Math.floor((I.getHpRatio()-.5)*-24+4):-20}};r(fK,"TargetHalfHpDamageAttr");let dN=fK;const FK=class FK extends iI{constructor(){super(0)}apply(e,I,L,N){return N[0].value=I.hp-e.hp,!0}getCondition(){return(e,I,L)=>e.hp<=I.hp}};r(FK,"MatchHpAttr");let jC=FK;const YK=class YK extends iI{constructor(e,I){super(0),this.moveFilter=e,this.multiplier=I}apply(e,I,L,N){const S=e.turnData.attacksReceived.filter(n=>this.moveFilter(FA[n.move])).reduce((n,i)=>n+i.damage,0);return N[0].value=UE(S*this.multiplier),!0}getCondition(){return(e,I,L)=>!!e.turnData.attacksReceived.filter(N=>this.moveFilter(FA[N.move])).length}};r(YK,"CounterDamageAttr");let SL=YK;const WK=class WK extends iI{constructor(){super(0)}getDamage(e,I,L){return e.level}};r(WK,"LevelDamageAttr");let za=WK;const hK=class hK extends iI{constructor(){super(0)}getDamage(e,I,L){return UE(e.level*(e.randBattleSeedIntRange(50,150)*.01))}};r(hK,"RandomLevelDamageAttr");let AU=hK;const dK=class dK extends dE{apply(e,I,L,N){const S=N[0];return S.value=this.getModifiedDamage(e,I,L,S.value),!0}getModifiedDamage(e,I,L,N){return N}};r(dK,"ModifiedDamageAttr");let EU=dK;const pK=class pK extends EU{getModifiedDamage(e,I,L,N){return Math.min(N,I.hp-1)}getUserBenefitScore(e,I,L){return I.hp>1?0:-20}};r(pK,"SurviveDamageAttr");let ja=pK;const gK=class gK extends AE{apply(e,I,L,N){return T.phaseManager.queueMessage(_.t("moveTriggers:splash")),!0}};r(gK,"SplashAttr");let eU=gK;const mK=class mK extends AE{apply(e,I,L,N){return T.phaseManager.queueMessage(_.t("moveTriggers:celebrate",{playerName:FO==null?void 0:FO.username})),!0}};r(mK,"CelebrateAttr");let RU=mK;const yK=class yK extends AE{constructor(e=!1,I=.25,L=!1){super(!0,{lastHitOnly:!0}),this.useHp=e,this.damageRatio=I,this.unblockable=L}apply(e,I,L,N){var o;if(!super.apply(e,I,L,N))return!1;const S=new nE(!1);if(this.unblockable||(SE("BlockRecoilDamageAttr",e,S),SE("BlockNonDirectDamageAbAttr",e,S)),S.value||this.useHp&&[De.FAIL,De.MISS].includes(((o=e.getLastXMoves(1)[0])==null?void 0:o.result)??De.FAIL))return!1;const n=(this.useHp?e.getMaxHp():e.turnData.totalDamageDealt)*this.damageRatio,i=e.turnData.totalDamageDealt?1:0,C=UE(n,i);return!C||S.value?!1:(e.damageAndUpdate(C,{result:_E.INDIRECT,ignoreSegments:!0}),T.phaseManager.queueMessage(_.t("moveTriggers:hitWithRecoil",{pokemonName:Q(e)})),e.turnData.damageTaken+=C,!0)}getUserBenefitScore(e,I,L){return Math.floor(L.power/5/-4)}};r(yK,"RecoilAttr");let HR=yK;const VK=class VK extends AE{constructor(){super(!0,{trigger:vI.POST_TARGET})}apply(e,I,L,N){return e.damageAndUpdate(e.hp,{result:_E.INDIRECT,ignoreSegments:!0}),e.turnData.damageTaken+=e.hp,!0}getUserBenefitScore(e,I,L){return e.isBoss()?-20:Math.ceil(((1-e.getHpRatio())*10-10)*(I.getAttackTypeEffectiveness(L.type,e)-.5))}};r(VK,"SacrificialAttr");let BL=VK;const wK=class wK extends AE{constructor(){super(!0)}apply(e,I,L,N){return super.apply(e,I,L,N)?(e.damageAndUpdate(e.hp,{result:_E.INDIRECT,ignoreSegments:!0}),e.turnData.damageTaken+=e.hp,!0):!1}getUserBenefitScore(e,I,L){return e.isBoss()?-20:Math.ceil(((1-e.getHpRatio())*10-10)*(I.getAttackTypeEffectiveness(L.type,e)-.5))}};r(wK,"SacrificialAttrOnHit");let An=wK;const vK=class vK extends AE{constructor(){super(!0,{trigger:vI.POST_TARGET})}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=new nE(!1);return SE("BlockNonDirectDamageAbAttr",e,S),S.value||(e.damageAndUpdate(UE(e.getMaxHp()/2),{result:_E.INDIRECT,ignoreSegments:!0}),T.phaseManager.queueMessage(_.t("moveTriggers:cutHpPowerUpMove",{pokemonName:Q(e)}))),!0}getUserBenefitScore(e,I,L){return e.isBoss()?-10:Math.ceil(((1-e.getHpRatio()/2)*10-10)*(I.getAttackTypeEffectiveness(L.type,e)-.5))}};r(vK,"HalfSacrificialAttr");let En=vK;const xK=class xK extends AE{constructor(e,I){super(!0),this.hpCost=e,this.roundUp=I}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=this.roundUp?Math.ceil(e.getMaxHp()*this.hpCost):Math.floor(e.getMaxHp()*this.hpCost);return e.damageAndUpdate(S,{result:_E.INDIRECT,ignoreSegments:!0,ignoreFaintPhase:!0}),e.addTag(d.SUBSTITUTE,0,L.id,e.id),!0}getUserBenefitScore(e,I,L){return e.isBoss()?-10:5}getCondition(){return(e,I,L)=>!e.getTag(LI)&&e.hp>(this.roundUp?Math.ceil(e.getMaxHp()*this.hpCost):Math.floor(e.getMaxHp()*this.hpCost))&&e.getMaxHp()>1}getFailedText(e,I,L){if(e.getTag(LI))return _.t("moveTriggers:substituteOnOverlap",{pokemonName:Q(e)});if(e.hp<=Math.floor(e.getMaxHp()/4)||e.getMaxHp()===1)return _.t("moveTriggers:substituteNotEnoughHp")}};r(xK,"AddSubstituteAttr");let en=xK;const ZK=class ZK extends AE{constructor(e,I,L){super(L===void 0||L),this.healRatio=e||1,this.showAnim=!!I}apply(e,I,L,N){return this.addHealPhase(this.selfTarget?e:I,this.healRatio),!0}addHealPhase(e,I){T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()*I),_.t("moveTriggers:healHp",{pokemonName:Q(e)}),!0,!this.showAnim)}getTargetBenefitScore(e,I,L){const N=(1-(this.selfTarget?e:I).getHpRatio())*20-this.healRatio*10;return Math.round(N/(1-this.healRatio/2))}};r(ZK,"HealAttr");let sR=ZK;const bK=class bK extends AE{constructor(e,I){super(),this.message=e,this.abilityCondition=I}canApply(e,I,L,N){return!!(this.selfTarget&&e.hp&&!e.getTag(d.FRENZY)||!this.selfTarget&&(!I.getTag(d.PROTECTED)||L.hasFlag(JA.IGNORE_PROTECT)))}apply(e,I,L,N){return this.canApply(e,I,L,N)?((e.isPlayer()?T.getPlayerParty():T.getEnemyParty()).forEach(n=>this.cureStatus(n,e.id)),this.message&&T.phaseManager.queueMessage(this.message),!0):!1}cureStatus(e,I){var L,N;!e.isOnField()||e.id===I?(e.resetStatus(!1),e.updateInfo()):e.hasAbility(this.abilityCondition)?(T.phaseManager.queueAbilityDisplay(e,((L=e.getPassiveAbility())==null?void 0:L.id)===this.abilityCondition,!0),T.phaseManager.queueAbilityDisplay(e,((N=e.getPassiveAbility())==null?void 0:N.id)===this.abilityCondition,!1)):(e.resetStatus(),e.updateInfo())}};r(bK,"PartyStatusCureAttr");let pN=bK;const kK=class kK extends AE{constructor(){super(!0)}apply(e,I,L,N){const S=I.getAlly(),n=new nE(!1);return SA(S)||SE("BlockNonDirectDamageAbAttr",S,n),n.value||!S||S.switchOutStatus?!1:(S.damageAndUpdate(Math.max(1,Math.floor(1/16*S.getMaxHp())),{result:_E.INDIRECT}),!0)}getTargetBenefitScore(e,I,L){return SA(I.getAlly())?0:-5}};r(kK,"FlameBurstAttr");let OU=kK;const XK=class XK extends BL{constructor(e,I){super(),this.restorePP=e,this.moveMessage=I}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const n=(e.isPlayer()?T.getPlayerParty():T.getEnemyParty()).map(C=>C.getMaxHp()).reduce((C,o)=>Math.max(o,C),0),i=T.phaseManager;return i.pushPhase(i.create("PokemonHealPhase",e.getBattlerIndex(),n,_.t(this.moveMessage,{pokemonName:Q(e)}),!0,!1,!1,!0,!1,this.restorePP),!0),!0}getUserBenefitScore(e,I,L){return-20}getCondition(){return(e,I,L)=>T.getPlayerParty().filter(N=>N.isActive()).length>T.currentBattle.getBattlerCount()}};r(XK,"SacrificialFullRestoreAttr");let Rn=XK;const QK=class QK extends dE{constructor(e){super(),this.weather=e}apply(e,I,L,N){var n;const S=N[0];return((n=T.arena.weather)==null?void 0:n.weatherType)===this.weather&&(S.value=Math.max(S.value,1)),!0}};r(QK,"IgnoreWeatherTypeDebuffAttr");let IU=QK;const JK=class JK extends sR{constructor(){super(.5)}apply(e,I,L,N){var n,i;let S=.5;if(!((n=T.arena.weather)!=null&&n.isEffectSuppressed())){const C=((i=T.arena.weather)==null?void 0:i.weatherType)||Z.NONE;S=this.getWeatherHealRatio(C)}return this.addHealPhase(e,S),!0}};r(JK,"WeatherHealAttr");let On=JK;const $K=class $K extends On{getWeatherHealRatio(e){switch(e){case Z.SUNNY:case Z.HARSH_SUN:return 2/3;case Z.RAIN:case Z.SANDSTORM:case Z.HAIL:case Z.SNOW:case Z.FOG:case Z.HEAVY_RAIN:return .25;default:return .5}}};r($K,"PlantHealAttr");let gN=$K;const qK=class qK extends On{getWeatherHealRatio(e){switch(e){case Z.SANDSTORM:return 2/3;default:return .5}}};r(qK,"SandHealAttr");let tU=qK;const zK=class zK extends sR{constructor(e=.5,I=2/3,L,N,S){super(e,L,N),this.normalHealRatio=e,this.boostedHealRatio=I,this.condition=S}apply(e,I,L,N){const S=this.condition&&this.condition(e,I,L)?this.boostedHealRatio:this.normalHealRatio;return this.addHealPhase(I,S),!0}};r(zK,"BoostHealAttr");let LU=zK;const jK=class jK extends sR{apply(e,I,L,N){return e.getAlly()===I?(super.apply(e,I,L,N),!0):!1}};r(jK,"HealOnAllyAttr");let NU=jK;const Af=class Af extends AE{constructor(e,I){super(!0),this.healRatio=e??.5,this.healStat=I??null}apply(e,I,L,N){let S=0,n="";const i=I.hasAbilityWithAttr("ReverseDrainAbAttr",!1);return this.healStat!==null?(S=I.getEffectiveStat(this.healStat),n=_.t("battle:drainMessage",{pokemonName:Q(I)})):(S=UE(e.turnData.singleHitDamageDealt*this.healRatio),n=_.t("battle:regainHealth",{pokemonName:Q(e)})),i&&(e.hasAbilityWithAttr("BlockNonDirectDamageAbAttr")?(S=0,n=""):(e.turnData.damageTaken+=S,S=S*-1,n="")),T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),S,n,!1,!0),!0}getUserBenefitScore(e,I,L){if(this.healStat){const N=I.getEffectiveStat(this.healStat);return Math.floor(Math.max(0,Math.min(1,(N+e.hp)/e.getMaxHp()-.33))/e.getHpRatio())}return Math.floor(Math.max(1-e.getHpRatio()-.33,0)*(L.power/4))}};r(Af,"HitHealAttr");let uR=Af;const Ef=class Ef extends dE{constructor(e,I=1){super(),this.moveIncrementFunc=e,this.increaseAmount=I}apply(e,I,L,N){return this.moveIncrementFunc(e,I,L)?(N[0].value+=this.increaseAmount,!0):!1}};r(Ef,"IncrementMovePriorityAttr");let SU=Ef;const ef=class ef extends dE{constructor(e){super(),this.intrinsicMultiHitType=e!==void 0?e:Le._2_TO_5,this.multiHitType=this.intrinsicMultiHitType}getMultiHitType(){return this.multiHitType}apply(e,I,L,N){const S=new VA(this.intrinsicMultiHitType);return Ce("ChangeMultiHitTypeAttr",e,I,L,S),this.multiHitType=S.value,N[0].value=this.getHitCount(e,I),!0}getTargetBenefitScore(e,I,L){return-5}getHitCount(e,I){switch(this.multiHitType){case Le._2_TO_5:{const N=e.randBattleSeedInt(20),S=new VA(N);return SE("MaxMultiHitAbAttr",e,null,!1,S),S.value>=13?2:S.value>=6?3:S.value>=3?4:5}case Le._2:return 2;case Le._3:return 3;case Le._10:return 10;case Le.BEAT_UP:return(e.isPlayer()?T.getPlayerParty():T.getEnemyParty()).reduce((N,S)=>N+(S.id===e.id?1:S!=null&&S.status&&S.status.effect!==J.NONE?0:1),0)}}calculateExpectedHitCount(e,{ignoreAcc:I=!1,maxMultiHit:L=!1,partySize:N=1}={}){let S;switch(this.multiHitType){case Le._2_TO_5:S=L?5:3.1;break;case Le._2:S=2;break;case Le._3:S=3;break;case Le._10:S=10;break;case Le.BEAT_UP:S=Math.max(1,N/2);break}if(I||e.accuracy===-1)return S;const n=e.accuracy/100;return e.hasFlag(JA.CHECK_ALL_HITS)&&!L?n*(1-Math.pow(n,S))/(1-n):S*=n}};r(ef,"MultiHitAttr");let VE=ef;const Rf=class Rf extends dE{apply(e,I,L,N){return!1}};r(Rf,"ChangeMultiHitTypeAttr");let TU=Rf;const Of=class Of extends TU{apply(e,I,L,N){return e.species.speciesId===A.GRENINJA&&e.hasAbility(O.BATTLE_BOND)&&e.formIndex===2?(N[0].value=Le._3,!0):!1}};r(Of,"WaterShurikenMultiHitTypeAttr");let sU=Of;const If=class If extends AE{constructor(e,I,L,N=!1){super(I),this.overrideStatus=!1,this.effect=e,this.turnsRemaining=L,this.overrideStatus=N}apply(e,I,L,N){const S=this.getMoveChance(e,I,L,this.selfTarget,!0),n=S<0||S===100||e.randBattleSeedInt(100)<S,i=L.category!==G.STATUS;if(n){const C=this.selfTarget?e:I;if(e!==I&&L.category===G.STATUS&&!I.canSetStatus(this.effect,i,!1,e,!0))return!1;if((!C.status||this.overrideStatus||C.status.effect===this.effect&&S<0)&&C.trySetStatus(this.effect,!0,e,this.turnsRemaining,null,this.overrideStatus,i))return nV("ConfusionOnStatusEffectAbAttr",e,I,L,null,!1,this.effect),!0}return!1}getTargetBenefitScore(e,I,L){const N=this.getMoveChance(e,I,L,this.selfTarget,!1),S=N<0?-10:Math.floor(N*-.1),n=this.selfTarget?e:I;return!n.status&&n.canSetStatus(this.effect,!0,!1,e)?S:0}};r(If,"StatusEffectAttr");let yA=If;const tf=class tf extends yA{constructor(e,I,L,N){super(e[0],I,L,N),this.effects=e}apply(e,I,L,N){return this.effect=He(this.effects),super.apply(e,I,L,N)}getTargetBenefitScore(e,I,L){const N=this.getMoveChance(e,I,L,this.selfTarget,!1),S=N<0?-10:Math.floor(N*-.1),n=this.selfTarget?e:I;return!n.status&&n.canSetStatus(this.effect,!0,!1,e)?S:0}};r(tf,"MultiStatusEffectAttr");let In=tf;const Lf=class Lf extends AE{constructor(){super(!1)}apply(e,I,L,N){var n;const S=((n=e.status)==null?void 0:n.effect)??(e.hasAbility(O.COMATOSE)?J.SLEEP:void 0);if(I.status)return!1;{const C=I.canSetStatus(S,!0,!1,e)?I.trySetStatus(S,!0,e):!1;return C&&e.status&&e.addTag(d.PSYCHO_SHIFT),C}}getTargetBenefitScore(e,I,L){var N;return!I.status&&I.canSetStatus((N=e.status)==null?void 0:N.effect,!0,!1,e)?-10:0}};r(Lf,"PsychoShiftEffectAttr");let aU=Lf;const Nf=class Nf extends AE{constructor(e){super(!1),this.chance=e}apply(e,I,L,N){if(nI()>this.chance)return!1;const n=this.getTargetHeldItems(I).filter(H=>H.isTransferable);if(!n.length)return!1;const i=I.isPlayer()?cE.PLAYER:I.hasTrainer()?cE.TRAINER:cE.WILD,C=n.map(H=>H.type.getOrInferTier(i)).reduce((H,P)=>Math.max(P,H),0),o=n.filter(H=>H.type.getOrInferTier(i)===C),l=o[e.randBattleSeedInt(o.length)];return T.tryTransferHeldItemModifier(l,e,!1)?(T.phaseManager.queueMessage(_.t("moveTriggers:stoleItem",{pokemonName:Q(e),targetName:Q(I),itemName:l.type.name})),!0):!1}getTargetHeldItems(e){return T.findModifiers(I=>I instanceof GE&&I.pokemonId===e.id,e.isPlayer())}getUserBenefitScore(e,I,L){return this.getTargetHeldItems(I).length?5:0}getTargetBenefitScore(e,I,L){return this.getTargetHeldItems(I).length?-5:0}};r(Nf,"StealHeldItemChanceAttr");let tn=Nf;const Sf=class Sf extends AE{constructor(e=!1){super(!1),this.berriesOnly=e}apply(e,I,L,N){if(!this.berriesOnly&&I.isPlayer())return!1;const S=new nE(!1);if(SE("BlockItemTheftAbAttr",I,S),S.value)return!1;let n=this.getTargetHeldItems(I).filter(C=>C.isTransferable);if(this.berriesOnly&&(n=n.filter(C=>C instanceof ce&&C.pokemonId===I.id,I.isPlayer())),!n.length)return!1;const i=n[e.randBattleSeedInt(n.length)];return I.loseHeldItem(i),T.updateModifiers(I.isPlayer()),this.berriesOnly?T.phaseManager.queueMessage(_.t("moveTriggers:incineratedItem",{pokemonName:Q(e),targetName:Q(I),itemName:i.type.name})):T.phaseManager.queueMessage(_.t("moveTriggers:knockedOffItem",{pokemonName:Q(e),targetName:Q(I),itemName:i.type.name})),!0}getTargetHeldItems(e){return T.findModifiers(I=>I instanceof GE&&I.pokemonId===e.id,e.isPlayer())}getUserBenefitScore(e,I,L){return this.getTargetHeldItems(I).length?5:0}getTargetBenefitScore(e,I,L){return this.getTargetHeldItems(I).length?-5:0}};r(Sf,"RemoveHeldItemAttr");let Ln=Sf;const Tf=class Tf extends AE{constructor(e){super(e)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=this.selfTarget?e:I,n=this.getTargetHeldBerries(S);if(n.length<=0)return!1;this.chosenBerry=n[e.randBattleSeedInt(n.length)];const i=new nE(!1);return T.applyModifiers(Vt,S.isPlayer(),S,i),i.value||this.reduceBerryModifier(S),this.eatBerry(I,void 0,!i.value),!0}getTargetHeldBerries(e){return T.findModifiers(I=>I instanceof ce&&I.pokemonId===e.id,e.isPlayer())}reduceBerryModifier(e){this.chosenBerry&&e.loseHeldItem(this.chosenBerry),T.updateModifiers(e.isPlayer())}eatBerry(e,I=e,L=e===I){CH(this.chosenBerry.berryType)(e),e_("PostItemLostAbAttr",I,!1),SE("HealFromBerryUseAbAttr",e,new nE(!1)),e.recordEatenBerry(this.chosenBerry.berryType,L)}};r(Tf,"EatBerryAttr");let XS=Tf;const sf=class sf extends XS{constructor(){super(!1)}apply(e,I,L,N){const S=new nE(!1);if(SE("BlockItemTheftAbAttr",I,S),S.value===!0)return!1;const n=this.getTargetHeldBerries(I);if(n.length<=0)return!1;this.chosenBerry=n[e.randBattleSeedInt(n.length)],e_("PostItemLostAbAttr",I,!1);const i=_.t("battle:stealEatBerry",{pokemonName:e.name,targetName:I.name,berryName:this.chosenBerry.type.name});return T.phaseManager.queueMessage(i),this.reduceBerryModifier(I),this.eatBerry(e,I),!0}};r(sf,"StealEatBerryAttr");let Nn=sf;const af=class af extends AE{constructor(e,I){super(e,{lastHitOnly:!0}),this.effects=[I].flat(1)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=jL(e,L.id);if(I.hasAbilityWithAttr("IgnoreMoveEffectsAbAttr")&&L.id===E.SPARKLING_ARIA&&S.targets.length===1)return!1;const n=this.selfTarget?e:I;return n.status&&this.effects.includes(n.status.effect)?(T.phaseManager.queueMessage($t(n.status.effect,Q(n))),n.resetStatus(),n.updateInfo(),!0):!1}isOfEffect(e){return this.effects.includes(e)}getUserBenefitScore(e,I,L){return e.status?10:0}};r(af,"HealStatusEffectAttr");let ie=af;const nf=class nf extends dE{apply(e,I,L,N){var S;return((S=e.status)==null?void 0:S.effect)===J.SLEEP?(e.addTag(d.BYPASS_SLEEP,1,L.id,e.id),!0):!1}getUserBenefitScore(e,I,L){return e.status&&e.status.effect===J.SLEEP?200:-10}};r(nf,"BypassSleepAttr");let Sn=nf;const rf=class rf extends dE{apply(e,I,L,N){return N[0].value=!0,!0}};r(rf,"BypassBurnDamageReductionAttr");let nU=rf;const Cf=class Cf extends AE{constructor(e){super(),this.weatherType=e}apply(e,I,L,N){return T.arena.trySetWeather(this.weatherType,e)}getCondition(){return(e,I,L)=>!T.arena.weather||T.arena.weather.weatherType!==this.weatherType&&!T.arena.weather.isImmutable()}};r(Cf,"WeatherChangeAttr");let Gt=Cf;const Uf=class Uf extends AE{constructor(e){super(),this.weatherType=e}apply(e,I,L,N){var S;return((S=T.arena.weather)==null?void 0:S.weatherType)===this.weatherType?T.arena.trySetWeather(Z.NONE,e):!1}};r(Uf,"ClearWeatherAttr");let rU=Uf;const of=class of extends AE{constructor(e){super(),this.terrainType=e}apply(e,I,L,N){return T.arena.trySetTerrain(this.terrainType,!0,e)}getCondition(){return(e,I,L)=>!T.arena.terrain||T.arena.terrain.terrainType!==this.terrainType}getUserBenefitScore(e,I,L){return T.arena.terrain?0:6}};r(of,"TerrainChangeAttr");let Pt=of;const Mf=class Mf extends AE{constructor(){super()}apply(e,I,L,N){return T.arena.trySetTerrain(bA.NONE,!0,e)}};r(Mf,"ClearTerrainAttr");let TL=Mf;const Df=class Df extends dE{apply(e,I,L,N){return I.isBossImmune()?!1:(N[0].value=!0,!0)}getCondition(){return(e,I,L)=>{const N=new nE(!1);return SE("BlockOneHitKOAbAttr",I,N),!N.value&&e.level>=I.level}}};r(Df,"OneHitKOAttr");let sL=Df;const lf=class lf extends dE{constructor(e){super(!0),this.condition=e}apply(e,I,L,N){const S=N[0];return S instanceof nE&&this.condition(e,L)?(S.value=!0,!0):!1}};r(lf,"InstantChargeAttr");let iU=lf;const _f=class _f extends iU{constructor(e){super((I,L)=>{const N=T.arena.weather;return SA(N==null?void 0:N.weatherType)?!1:!(N!=null&&N.isEffectSuppressed())&&e.includes(N==null?void 0:N.weatherType)})}};r(_f,"WeatherInstantChargeAttr");let mN=_f;const Gf=class Gf extends dE{apply(e,I,L,N){return!0}};r(Gf,"OverrideMoveEffectAttr");let bt=Gf;const Pf=class Pf extends bt{constructor(e,I,L){super(),this.tagType=e,this.chargeAnim=I,this.chargeText=L}apply(e,I,L,N){if(!I)return!0;const S=N[0];if(N[1])T.phaseManager.queueMessage(_.t("moveTriggers:tookMoveAttack",{pokemonName:Q(T.getPokemonById(I.id)??void 0),moveName:L.name}));else{S.value=!0,T.phaseManager.unshiftNew("MoveAnimPhase",new VC(this.chargeAnim,L.id,e)),T.phaseManager.queueMessage(this.chargeText.replace("{TARGET}",Q(I)).replace("{USER}",Q(e))),e.pushMoveHistory({move:L.id,targets:[I.getBattlerIndex()],result:De.OTHER});const i=I.isPlayer()?hA.PLAYER:hA.ENEMY;T.arena.addTag(this.tagType,3,L.id,e.id,i,!1,I.getBattlerIndex())}return!0}};r(Pf,"DelayedAttackAttr");let Tn=Pf;const Hf=class Hf extends bt{constructor(){super(!0)}apply(e,I,L,N){if(e.turnData.combiningPledge)return T.phaseManager.queueMessage(_.t("moveTriggers:combiningPledge")),!1;const S=N[0],n=T.phaseManager.findPhase(i=>i.is("MovePhase")&&i.pokemon.isPlayer()===e.isPlayer());if(n){const i=n.move.getMove();if(i!==L&&i.hasAttr("AwaitCombinedPledgeAttr")){[e,n.pokemon].forEach(l=>l.turnData.combiningPledge=L.id),T.phaseManager.queueMessage(_.t("moveTriggers:awaitingPledge",{userPokemonName:Q(e),allyPokemonName:Q(n.pokemon)}));const C=T.phaseManager.phaseQueue.indexOf(n),o=T.phaseManager.phaseQueue.findIndex(l=>l.is("MovePhase"));return C!==o&&T.phaseManager.prependToPhase(T.phaseManager.phaseQueue.splice(C,1)[0],"MovePhase"),S.value=!0,!0}}return!1}};r(Hf,"AwaitCombinedPledgeAttr");let yN=Hf;const uf=class uf extends AE{constructor(e,I,L,N){super(L,N),this.stats=e,this.stages=I,this.options=N}get condition(){var e;return((e=this.options)==null?void 0:e.condition)??null}get showMessage(){var e;return((e=this.options)==null?void 0:e.showMessage)??!0}apply(e,I,L,N){if(!super.apply(e,I,L,N)||this.condition&&!this.condition(e,I,L))return!1;const S=this.getMoveChance(e,I,L,this.selfTarget,!0);if(S<0||S===100||e.randBattleSeedInt(100)<S){const n=this.getLevels(e);return T.phaseManager.unshiftNew("StatStageChangePhase",(this.selfTarget?e:I).getBattlerIndex(),this.selfTarget,this.stats,n,this.showMessage),!0}return!1}getLevels(e){return this.stages}getTargetBenefitScore(e,I,L){let N=0;const S=this.getLevels(e);for(const n of this.stats){let i=S;const C=I.getStatStage(n);i>0?i=Math.min(C+i,6)-C:i=Math.max(C+i,-6)-C;let o=!1;switch(n){case c.ATK:this.selfTarget&&(o=!e.getMoveset().find(l=>{const H=l.getMove();return H.is("AttackMove")&&H.category===G.PHYSICAL}));break;case c.DEF:this.selfTarget||(o=!e.getMoveset().find(l=>{const H=l.getMove();return H.is("AttackMove")&&H.category===G.PHYSICAL}));break;case c.SPATK:this.selfTarget&&(o=!e.getMoveset().find(l=>{const H=l.getMove();return H.is("AttackMove")&&H.category===G.PHYSICAL}));break;case c.SPDEF:this.selfTarget||(o=!e.getMoveset().find(l=>{const H=l.getMove();return H.is("AttackMove")&&H.category===G.PHYSICAL}));break}o||(N+=i*4+(i>0?-2:2))}return N}};r(uf,"StatStageChangeAttr");let LA=uf;const cf=class cf extends AE{constructor(){super(!1)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;let S;const n=T.arena.getTerrainType();if(n!==bA.NONE)S=this.determineTerrainEffect(n);else{const i=T.arena.biomeType;S=this.determineBiomeEffect(i)}return S.apply(e,I,L,[])}determineTerrainEffect(e){let I;switch(e){case bA.ELECTRIC:default:I=new yA(J.PARALYSIS,!1);break;case bA.MISTY:I=new LA([c.SPATK],-1,!1);break;case bA.GRASSY:I=new yA(J.SLEEP,!1);break;case bA.PSYCHIC:I=new LA([c.SPD],-1,!1);break}return I}determineBiomeEffect(e){let I;switch(e){case s.PLAINS:case s.GRASS:case s.TALL_GRASS:case s.FOREST:case s.JUNGLE:case s.MEADOW:I=new yA(J.SLEEP,!1);break;case s.SWAMP:case s.MOUNTAIN:case s.TEMPLE:case s.RUINS:I=new LA([c.SPD],-1,!1);break;case s.ICE_CAVE:case s.SNOWY_FOREST:I=new yA(J.FREEZE,!1);break;case s.VOLCANO:I=new yA(J.BURN,!1);break;case s.FAIRY_CAVE:I=new LA([c.SPATK],-1,!1);break;case s.DESERT:case s.CONSTRUCTION_SITE:case s.BEACH:case s.ISLAND:case s.BADLANDS:I=new LA([c.ACC],-1,!1);break;case s.SEA:case s.LAKE:case s.SEABED:I=new LA([c.ATK],-1,!1);break;case s.CAVE:case s.WASTELAND:case s.GRAVEYARD:case s.ABYSS:case s.SPACE:I=new OE(d.FLINCHED,!1,!0);break;case s.END:I=new LA([c.DEF],-1,!1);break;case s.TOWN:case s.METROPOLIS:case s.SLUM:case s.DOJO:case s.FACTORY:case s.LABORATORY:case s.POWER_PLANT:default:I=new yA(J.PARALYSIS,!1);break}return I}};r(cf,"SecretPowerAttr");let CU=cf;const Bf=class Bf extends dE{constructor(e,I,L,N,S=!0,n=!1){super(),this.stats=e,this.stages=I,this.condition=N,this.showMessage=S}applyPostVictory(e,I,L){if(this.condition&&!this.condition(e,I,L))return;new LA(this.stats,this.stages,this.showMessage).apply(e,I,L)}};r(Bf,"PostVictoryStatStageChangeAttr");let UU=Bf;const Kf=class Kf extends AE{constructor(){super()}apply(e,I,L,N){const S=MI.filter(n=>I.getStatStage(n)<6);if(S.length>0){const n=[S[e.randBattleSeedInt(S.length)]];return T.phaseManager.unshiftNew("StatStageChangePhase",I.getBattlerIndex(),this.selfTarget,n,2),!0}return!1}};r(Kf,"AcupressureStatStageChangeAttr");let oU=Kf;const ff=class ff extends LA{constructor(){super([c.ATK,c.SPATK],1,!0)}getLevels(e){var I,L;if(!((I=T.arena.weather)!=null&&I.isEffectSuppressed())){const N=(L=T.arena.weather)==null?void 0:L.weatherType;if(N===Z.SUNNY||N===Z.HARSH_SUN)return this.stages+1}return this.stages}};r(ff,"GrowthStatStageChangeAttr");let MU=ff;const Ff=class Ff extends LA{constructor(e,I,L,N){super(e,I,!0),this.cutRatio=L,this.messageCallback=N}apply(e,I,L,N){e.damageAndUpdate(UE(e.getMaxHp()/this.cutRatio),{result:_E.INDIRECT}),e.updateInfo();const S=super.apply(e,I,L,N);return this.messageCallback&&this.messageCallback(e),S}getCondition(){return(e,I,L)=>e.getHpRatio()>1/this.cutRatio&&this.stats.some(N=>e.getStatStage(N)<6)}};r(Ff,"CutHpStatStageBoostAttr");let VN=Ff;const Yf=class Yf extends AE{constructor(){super(!0)}apply(e,I,L,N){const S=e.getTag(fC);if(!S)return!1;let n=c.ATK;switch(S.tatsugiriFormKey){case"curly":n=c.ATK;break;case"droopy":n=c.DEF;break;case"stretchy":n=c.SPD;break}return T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),this.selfTarget,[n],1),!0}};r(Yf,"OrderUpStatBoostAttr");let DU=Yf;const Wf=class Wf extends AE{apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;for(const S of MI)e.setStatStage(S,I.getStatStage(S));return I.getTag(d.CRIT_BOOST)?e.addTag(d.CRIT_BOOST,0,L.id):e.removeTag(d.CRIT_BOOST),I.updateInfo(),e.updateInfo(),T.phaseManager.queueMessage(_.t("moveTriggers:copiedStatChanges",{pokemonName:Q(e),targetName:Q(I)})),!0}};r(Wf,"CopyStatsAttr");let lU=Wf;const hf=class hf extends AE{apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;for(const S of MI)I.setStatStage(S,-I.getStatStage(S));return I.updateInfo(),e.updateInfo(),T.phaseManager.queueMessage(_.t("moveTriggers:invertStats",{pokemonName:Q(I)})),!0}};r(hf,"InvertStatsAttr");let _U=hf;const df=class df extends AE{constructor(e){super(),this.targetAllPokemon=e}apply(e,I,L,N){return this.targetAllPokemon?(T.getField(!0).forEach(n=>this.resetStats(n)),T.phaseManager.queueMessage(_.t("moveTriggers:statEliminated"))):(this.resetStats(I),T.phaseManager.queueMessage(_.t("moveTriggers:resetStats",{pokemonName:Q(I)}))),!0}resetStats(e){for(const I of MI)e.setStatStage(I,0);e.updateInfo()}};r(df,"ResetStatsAttr");let wN=df;const pf=class pf extends AE{constructor(e){super(),this.stats=e}apply(e,I,L,N){if(super.apply(e,I,L,N)){for(const S of this.stats){const n=e.getStatStage(S);e.setStatStage(S,I.getStatStage(S)),I.setStatStage(S,n)}return I.updateInfo(),e.updateInfo(),this.stats.length===7?T.phaseManager.queueMessage(_.t("moveTriggers:switchedStatChanges",{pokemonName:Q(e)})):this.stats.length===2&&T.phaseManager.queueMessage(_.t("moveTriggers:switchedTwoStatChanges",{pokemonName:Q(e),firstStat:_.t(aR(this.stats[0])),secondStat:_.t(aR(this.stats[1]))})),!0}return!1}};r(pf,"SwapStatStagesAttr");let vN=pf;const gf=class gf extends AE{apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=Math.floor((I.hp+e.hp)/2);return[e,I].forEach(n=>{if(n.hp<S){const i=n.heal(S-n.hp);i&&T.damageNumberHandler.add(n,i,_E.HEAL)}else if(n.hp>S){const i=n.damage(n.hp-S,!0);i&&T.damageNumberHandler.add(n,i)}n.updateInfo()}),!0}};r(gf,"HpSplitAttr");let GU=gf;const mf=class mf extends dE{apply(e,I,L,N){return!1}};r(mf,"VariablePowerAttr");let Ne=mf;const yf=class yf extends Ne{apply(e,I,L,N){var o;const S=L.pp,n=((o=e.moveset.find(l=>l.moveId===L.id))==null?void 0:o.ppUsed)??0;let i=S-n;i<0&&(i=0);const C=N[0];switch(i){case 0:C.value=200;break;case 1:C.value=80;break;case 2:C.value=60;break;case 3:C.value=50;break;default:C.value=40;break}return!0}};r(yf,"LessPPMorePowerAttr");let PU=yf;const Vf=class Vf extends Ne{constructor(e){super(),this.powerMultiplierFunc=e}apply(e,I,L,N){const S=N[0];return S.value*=this.powerMultiplierFunc(e,I,L),!0}};r(Vf,"MovePowerMultiplierAttr");let vE=Vf;const Z6=r((R,e)=>{const I=R.isPlayer()?T.getPlayerParty():T.getEnemyParty();for(let L=e;L<I.length;L++){const N=I[L];if(!(N.id!==R.id&&(N!=null&&N.status)&&N.status.effect!==J.NONE))return N.species.getBaseStat(c.ATK)/10+5}return 0},"beatUpFunc"),wf=class wf extends Ne{apply(e,I,L,N){const S=N[0],i=(e.isPlayer()?T.getPlayerParty():T.getEnemyParty()).filter(o=>{var l;return o.id===e.id||!((l=o.status)!=null&&l.effect)}).length,C=(e.turnData.hitCount-e.turnData.hitsLeft)%i;return S.value=Z6(e,C),!0}};r(wf,"BeatUpAttr");let HU=wf;const b6=r((R,e,I)=>{let L="";return T.executeWithSeedOffset(()=>{DA(100)<I.chance&&(L=_.t("moveTriggers:goingAllOutForAttack",{pokemonName:Q(R)}))},T.currentBattle.turn<<6,T.waveSeed),L},"doublePowerChanceMessageFunc"),vf=class vf extends Ne{apply(e,I,L,N){let S;if(T.executeWithSeedOffset(()=>S=DA(100),T.currentBattle.turn<<6,T.waveSeed),S<L.chance){const n=N[0];return n.value*=2,!0}return!1}};r(vf,"DoublePowerChanceAttr");let uU=vf;const xf=class xf extends vE{constructor(e,I,L,...N){super((S,n,i)=>{var H;const C=S.getLastXMoves(e+1).slice(1);let o=0,l;for(;(((H=l=C.shift())==null?void 0:H.move)===i.id||N.length&&N.includes((l==null?void 0:l.move)??E.NONE))&&(!I||(l==null?void 0:l.result)===De.SUCCESS);)if(o<e-1)o++;else if(L)o=0;else break;return this.getMultiplier(o)})}};r(xf,"ConsecutiveUsePowerMultiplierAttr");let sn=xf;const Zf=class Zf extends sn{getMultiplier(e){return Math.pow(2,e)}};r(Zf,"ConsecutiveUseDoublePowerAttr");let xN=Zf;const bf=class bf extends sn{getMultiplier(e){return e+1}};r(bf,"ConsecutiveUseMultiBasePowerAttr");let cU=bf;const kf=class kf extends Ne{apply(e,I,L,N){const S=N[0],n=I.getWeight(),i=[10,25,50,100,200];let C=0;for(;n>=i[C]&&++C!==i.length;);return S.value=(C+1)*20,!0}};r(kf,"WeightPowerAttr");let an=kf;const Xf=class Xf extends Ne{apply(e,I,L,N){const S=N[0],n=I.getEffectiveStat(c.SPD)/e.getEffectiveStat(c.SPD),i=[.25,1/3,.5,1,-1],C=[150,120,80,60,40];let o=0;for(;o<i.length-1&&n>i[o]&&++o!==i.length;);return S.value=C[o],!0}};r(Xf,"ElectroBallPowerAttr");let BU=Xf;const Qf=class Qf extends Ne{apply(e,I,L,N){const S=N[0],n=e.getEffectiveStat(c.SPD);return n<1?(S.value=1,!0):(S.value=Math.floor(Math.min(150,25*I.getEffectiveStat(c.SPD)/n+1)),!0)}};r(Qf,"GyroBallPowerAttr");let KU=Qf;const Jf=class Jf extends Ne{apply(e,I,L,N){const S=N[0],n=e.getHpRatio();switch(!0){case n<.0417:S.value=200;break;case n<.1042:S.value=150;break;case n<.2083:S.value=100;break;case n<.3542:S.value=80;break;case n<.6875:S.value=40;break;default:S.value=20;break}return!0}};r(Jf,"LowHpPowerAttr");let nn=Jf;const $f=class $f extends Ne{apply(e,I,L,N){const S=N[0],n=e.getWeight(),i=I.getWeight();if(!n||n===0)return!1;const C=i/n*100;switch(!0){case C<20.01:S.value=120;break;case C<25.01:S.value=100;break;case C<33.35:S.value=80;break;case C<50.01:S.value=60;break;default:S.value=40;break}return!0}};r($f,"CompareWeightPowerAttr");let rn=$f;const qf=class qf extends Ne{apply(e,I,L,N){return N[0].value=UE(150*e.getHpRatio()),!0}};r(qf,"HpPowerAttr");let ZN=qf;const zf=class zf extends Ne{constructor(e){super(),this.maxBasePower=e}apply(e,I,L,N){return N[0].value=UE(this.maxBasePower*I.getHpRatio()),!0}};r(zf,"OpponentHighHpPowerAttr");let bN=zf;const jf=class jf extends Ne{apply(e,I,L,N){return I.getLastXMoves(1),T.currentBattle.turn,I.getLastXMoves(1).find(S=>S.turn===T.currentBattle.turn)?!1:(N[0].value*=2,!0)}};r(jf,"FirstAttackDoublePowerAttr");let Cn=jf;const AF=class AF extends Ne{apply(e,I,L,N){return e.turnData.attacksReceived.find(S=>S.damage&&S.sourceId===I.id)?(N[0].value*=2,!0):!1}};r(AF,"TurnDamagedDoublePowerAttr");let Un=AF;const k6=r((R,e,I)=>{let L;return T.executeWithSeedOffset(()=>{const N=[5,15,35,65,75,95],S=DA(100);let n=0;for(;n<N.length&&!(S<N[n]);n++);L=_.t("moveTriggers:magnitudeMessage",{magnitude:n+4})},T.currentBattle.turn<<6,T.waveSeed),L},"magnitudeMessageFunc"),EF=class EF extends Ne{apply(e,I,L,N){const S=N[0],n=[5,15,35,65,75,95],i=[10,30,50,70,90,100,110,150];let C;T.executeWithSeedOffset(()=>C=DA(100),T.currentBattle.turn<<6,T.waveSeed);let o=0;for(;o<n.length&&!(C<n[o]);o++);return S.value=i[o],!0}};r(EF,"MagnitudePowerAttr");let fU=EF;const eF=class eF extends Ne{apply(e,I,L,N){var S,n;if(!((S=T.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0];switch(((n=T.arena.weather)==null?void 0:n.weatherType)||Z.NONE){case Z.RAIN:case Z.SANDSTORM:case Z.HAIL:case Z.SNOW:case Z.FOG:case Z.HEAVY_RAIN:return i.value*=.5,!0}}return!1}};r(eF,"AntiSunlightPowerDecreaseAttr");let on=eF;const RF=class RF extends Ne{constructor(e){super(),this.invert=!!e}apply(e,I,L,N){const S=N[0],n=Math.floor(Math.min(e.isPlayer()?e.friendship:e.species.baseFriendship,255)/2.5);return S.value=Math.max(this.invert?102-n:n,1),!0}};r(RF,"FriendshipPowerAttr");let aL=RF;const OF=class OF extends Ne{apply(e,I,L,N){const S=e.battleData.hitCount,n=N[0];return n.value=50*(1+Math.min(S,6)),!0}};r(OF,"RageFistPowerAttr");let FU=OF;const _3=r(R=>R.getStatStages().reduce((e,I)=>I&&I>0?e+I:e,0),"countPositiveStatStages"),IF=class IF extends Ne{apply(e,I,L,N){const S=_3(e);return N[0].value+=S*20,!0}};r(IF,"PositiveStatStagePowerAttr");let Mn=IF;const tF=class tF extends Ne{constructor(){super(...arguments),this.PUNISHMENT_MIN_BASE_POWER=60,this.PUNISHMENT_MAX_BASE_POWER=200}apply(e,I,L,N){const S=_3(I);return N[0].value=Math.min(this.PUNISHMENT_MAX_BASE_POWER,this.PUNISHMENT_MIN_BASE_POWER+S*20),!0}};r(tF,"PunishmentPowerAttr");let YU=tF;const LF=class LF extends Ne{apply(e,I,L,N){const S=e.turnData.hitCount===e.turnData.hitsLeft,n=DA(S?100:80);return n<=40?N[0].value=40:40<n&&n<=70?N[0].value=80:70<n&&n<=80?N[0].value=120:80<n&&n<=100&&(e.turnData.hitCount=1,e.turnData.hitsLeft=1,T.phaseManager.unshiftNew("PokemonHealPhase",I.getBattlerIndex(),UE(I.getMaxHp()/4),_.t("moveTriggers:regainedHealth",{pokemonName:Q(I)}),!0)),!0}};r(LF,"PresentPowerAttr");let WU=LF;const NF=class NF extends Ne{apply(e,I,L,N){return e.species.speciesId===A.GRENINJA&&e.hasAbility(O.BATTLE_BOND)&&e.formIndex===2?(N[0].value=20,!0):!1}};r(NF,"WaterShurikenPowerAttr");let hU=NF;const SF=class SF extends Ne{constructor(e){super(),this.multiplier=0,this.multiplier=e}apply(e,I,L,N){const S=e.getTag(gL);if(S&&S.stockpiledCount>0){const n=N[0];return n.value=this.multiplier*S.stockpiledCount,!0}return!1}};r(SF,"SpitUpPowerAttr");let dU=SF;const TF=class TF extends sR{apply(e,I,L,N){const S=e.getTag(gL);if(S&&S.stockpiledCount>0){const n=S.stockpiledCount;let i;if(n===1?i=.25:n===2?i=.5:i=1,i)return this.addHealPhase(e,i),!0}return!1}};r(TF,"SwallowHealAttr");let pU=TF;const X2=r(R=>{const e=R.getTag(gL);return!!e&&e.stockpiledCount>0},"hasStockpileStacksCondition"),sF=class sF extends Ne{constructor(e){super(),this.maxHits=e}apply(e,I,L,N){const S=e.turnData.hitCount-Math.max(e.turnData.hitsLeft,0),n=N[0];return n.value=L.power*(1+S%this.maxHits),!0}};r(sF,"MultiHitPowerIncrementAttr");let Dn=sF;const aF=class aF extends Ne{constructor(e){super(),this.move=e}apply(e,I,L,N){const S=N[0],n=e.getOpponent(0),i=[];if(n!=null&&n.turnData.acted&&i.push(n),T.currentBattle.double){const C=e.getAlly(),o=n==null?void 0:n.getAlly();C!=null&&C.turnData.acted&&i.push(C),o!=null&&o.turnData.acted&&i.push(o)}i.sort((C,o)=>o.turnData.order-C.turnData.order);for(const C of i){const[o]=C.getLastXMoves(1);if(o.result!==De.FAIL){if(o.result===De.SUCCESS&&o.move===this.move)return S.value*=2,!0;break}}return!1}};r(aF,"LastMoveDoublePowerAttr");let ln=aF;const nF=class nF extends Ne{apply(e,I,L,N){const S=N[0];if(!(S instanceof VA))return!1;const n=e.turnData.combiningPledge;return n&&n!==L.id?(S.value*=150/80,!0):!1}};r(nF,"CombinedPledgePowerAttr");let kN=nF;const rF=class rF extends dE{apply(e,I,L,N){const S=N[0];if(!(S instanceof VA))return!1;const n=e.turnData.combiningPledge;return n&&n!==L.id?(S.value=1.5,!0):!1}};r(rF,"CombinedPledgeStabBoostAttr");let XN=rF;const iF=class iF extends Ne{apply(e,I,L,N){const S=N[0];return e.turnData.joinedRound?(S.value*=2,!0):!1}};r(iF,"RoundPowerAttr");let gU=iF;const CF=class CF extends AE{constructor(){super(!0,{lastHitOnly:!0})}apply(e,I,L,N){const S=T.phaseManager.findPhase(C=>C.is("MovePhase")&&C.move.moveId===E.ROUND);if(!S)return!1;const n=T.phaseManager.phaseQueue.indexOf(S),i=T.phaseManager.phaseQueue.findIndex(C=>C.is("MovePhase"));return n!==i&&T.phaseManager.prependToPhase(T.phaseManager.phaseQueue.splice(n,1)[0],"MovePhase"),S.pokemon.turnData.joinedRound=!0,!0}};r(CF,"CueNextRoundAttr");let mU=CF;const UF=class UF extends dE{apply(e,I,L,N){return!1}};r(UF,"StatChangeBeforeDmgCalcAttr");let yU=UF;const oF=class oF extends yU{apply(e,I,L,N){for(const S of MI){const n=I.getStatStage(S),i=e.getStatStage(S);if(n>0){const C=Math.min(n,6-i);T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),this.selfTarget,[S],C),I.setStatStage(S,n-C)}}return I.updateInfo(),e.updateInfo(),T.phaseManager.queueMessage(_.t("moveTriggers:stealPositiveStats",{pokemonName:Q(e),targetName:Q(I)})),!0}};r(oF,"SpectralThiefAttr");let VU=oF;const MF=class MF extends dE{constructor(){super()}apply(e,I,L,N){return!1}};r(MF,"VariableAtkAttr");let _n=MF;const DF=class DF extends _n{constructor(){super()}apply(e,I,L,N){return N[0].value=I.getEffectiveStat(c.ATK,I),!0}};r(DF,"TargetAtkUserAtkAttr");let wU=DF;const lF=class lF extends _n{constructor(){super()}apply(e,I,L,N){return N[0].value=e.getEffectiveStat(c.DEF,I),!0}};r(lF,"DefAtkAttr");let vU=lF;const _F=class _F extends dE{constructor(){super()}apply(e,I,L,N){return!1}};r(_F,"VariableDefAttr");let xU=_F;const GF=class GF extends xU{constructor(){super()}apply(e,I,L,N){return N[0].value=I.getEffectiveStat(c.DEF,e),!0}};r(GF,"DefDefAttr");let QN=GF;const PF=class PF extends dE{apply(e,I,L,N){return!1}};r(PF,"VariableAccuracyAttr");let tt=PF;const HF=class HF extends tt{apply(e,I,L,N){var S,n;if(!((S=T.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0];switch(((n=T.arena.weather)==null?void 0:n.weatherType)||Z.NONE){case Z.SUNNY:case Z.HARSH_SUN:return i.value=50,!0;case Z.RAIN:case Z.HEAVY_RAIN:return i.value=-1,!0}}return!1}};r(HF,"ThunderAccuracyAttr");let Gn=HF;const uF=class uF extends tt{apply(e,I,L,N){var S,n;if(!((S=T.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0];switch(((n=T.arena.weather)==null?void 0:n.weatherType)||Z.NONE){case Z.RAIN:case Z.HEAVY_RAIN:return i.value=-1,!0}}return!1}};r(uF,"StormAccuracyAttr");let JN=uF;const cF=class cF extends tt{apply(e,I,L,N){if(I.getTag(d.MINIMIZED)){const S=N[0];return S.value=-1,!0}return!1}};r(cF,"AlwaysHitMinimizeAttr");let gO=cF;const BF=class BF extends tt{apply(e,I,L,N){if(e.isOfType(t.POISON)){const S=N[0];return S.value=-1,!0}return!1}};r(BF,"ToxicAccuracyAttr");let ZU=BF;const KF=class KF extends tt{apply(e,I,L,N){var S,n;if(!((S=T.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0],C=((n=T.arena.weather)==null?void 0:n.weatherType)||Z.NONE;if(C===Z.HAIL||C===Z.SNOW)return i.value=-1,!0}return!1}};r(KF,"BlizzardAccuracyAttr");let bU=KF;const fF=class fF extends dE{apply(e,I,L,N){return!1}};r(fF,"VariableMoveCategoryAttr");let AN=fF;const FF=class FF extends AN{apply(e,I,L,N){const S=N[0];return e.getEffectiveStat(c.ATK,I,L)>e.getEffectiveStat(c.SPATK,I,L)?(S.value=G.PHYSICAL,!0):!1}};r(FF,"PhotonGeyserCategoryAttr");let Pn=FF;const YF=class YF extends AN{apply(e,I,L,N){const S=N[0];return e.isTerastallized&&e.getEffectiveStat(c.ATK,I,L,!0,!0,!1,!1,!0)>e.getEffectiveStat(c.SPATK,I,L,!0,!0,!1,!1,!0)?(S.value=G.PHYSICAL,!0):!1}};r(YF,"TeraMoveCategoryAttr");let Hn=YF;const WF=class WF extends Ne{apply(e,I,L,N){const S=N[0];return e.isTerastallized&&e.getTeraType()===t.STELLAR?(S.value=100,!0):!1}};r(WF,"TeraBlastPowerAttr");let kU=WF;const hF=class hF extends AN{apply(e,I,L,N){const S=N[0];return e.getAlly()===I?(S.value=G.STATUS,!0):!1}};r(hF,"StatusCategoryOnAllyAttr");let XU=hF;const dF=class dF extends AN{apply(e,I,L,N){const S=N[0],n=I.getBaseDamage({source:e,move:L,moveCategory:G.PHYSICAL,ignoreAbility:!0,ignoreSourceAbility:!0,ignoreAllyAbility:!0,ignoreSourceAllyAbility:!0,simulated:!0}),i=I.getBaseDamage({source:e,move:L,moveCategory:G.SPECIAL,ignoreAbility:!0,ignoreSourceAbility:!0,ignoreAllyAbility:!0,ignoreSourceAllyAbility:!0,simulated:!0});return n>i||n===i&&e.randBattleSeedInt(2)===0?(S.value=G.PHYSICAL,!0):!1}};r(dF,"ShellSideArmCategoryAttr");let QU=dF;const pF=class pF extends dE{apply(e,I,L,N){return!1}};r(pF,"VariableMoveTypeAttr");let tO=pF;const gF=class gF extends tO{apply(e,I,L,N){var n,i,C;const S=N[0];if(!(S instanceof VA))return!1;if([e.species.speciesId,(n=e.fusionSpecies)==null?void 0:n.speciesId].includes(A.ARCEUS)||[e.species.speciesId,(i=e.fusionSpecies)==null?void 0:i.speciesId].includes(A.SILVALLY)){const o=e.species.speciesId===A.ARCEUS||e.species.speciesId===A.SILVALLY?e.formIndex:(C=e.fusionSpecies)==null?void 0:C.formIndex;return S.value=t[t[o]],!0}return S.value===L.type?!1:(S.value=L.type,!0)}};r(gF,"FormChangeItemTypeAttr");let un=gF;const mF=class mF extends tO{apply(e,I,L,N){var n,i;const S=N[0];if(!(S instanceof VA))return!1;if([e.species.speciesId,(n=e.fusionSpecies)==null?void 0:n.speciesId].includes(A.GENESECT)){switch(e.species.speciesId===A.GENESECT?e.formIndex:(i=e.fusionSpecies)==null?void 0:i.formIndex){case 1:S.value=t.ELECTRIC;break;case 2:S.value=t.FIRE;break;case 3:S.value=t.ICE;break;case 4:S.value=t.WATER;break;default:S.value=t.NORMAL;break}return!0}return!1}};r(mF,"TechnoBlastTypeAttr");let JU=mF;const yF=class yF extends tO{apply(e,I,L,N){var n,i;const S=N[0];if(!(S instanceof VA))return!1;if([e.species.speciesId,(n=e.fusionSpecies)==null?void 0:n.speciesId].includes(A.MORPEKO)){switch(e.species.speciesId===A.MORPEKO?e.formIndex:(i=e.fusionSpecies)==null?void 0:i.formIndex){case 1:S.value=t.DARK;break;default:S.value=t.ELECTRIC;break}return!0}return!1}};r(yF,"AuraWheelTypeAttr");let $U=yF;const VF=class VF extends tO{apply(e,I,L,N){var n,i;const S=N[0];if(!(S instanceof VA))return!1;if([e.species.speciesId,(n=e.fusionSpecies)==null?void 0:n.speciesId].includes(A.PALDEA_TAUROS)){switch(e.species.speciesId===A.PALDEA_TAUROS?e.formIndex:(i=e.fusionSpecies)==null?void 0:i.formIndex){case 1:S.value=t.FIRE;break;case 2:S.value=t.WATER;break;default:S.value=t.FIGHTING;break}return!0}return!1}};r(VF,"RagingBullTypeAttr");let qU=VF;const wF=class wF extends tO{apply(e,I,L,N){var n,i;const S=N[0];if(!(S instanceof VA))return!1;if([e.species.speciesId,(n=e.fusionSpecies)==null?void 0:n.speciesId].includes(A.OGERPON)){switch(e.species.speciesId===A.OGERPON?e.formIndex:(i=e.fusionSpecies)==null?void 0:i.formIndex){case 1:case 5:S.value=t.WATER;break;case 2:case 6:S.value=t.FIRE;break;case 3:case 7:S.value=t.ROCK;break;case 4:default:S.value=t.GRASS;break}return!0}return!1}};r(wF,"IvyCudgelTypeAttr");let zU=wF;const vF=class vF extends tO{apply(e,I,L,N){var n,i;const S=N[0];if(!(S instanceof VA))return!1;if(!((n=T.arena.weather)!=null&&n.isEffectSuppressed())){switch((i=T.arena.weather)==null?void 0:i.weatherType){case Z.SUNNY:case Z.HARSH_SUN:S.value=t.FIRE;break;case Z.RAIN:case Z.HEAVY_RAIN:S.value=t.WATER;break;case Z.SANDSTORM:S.value=t.ROCK;break;case Z.HAIL:case Z.SNOW:S.value=t.ICE;break;default:if(S.value===L.type)return!1;S.value=L.type;break}return!0}return!1}};r(vF,"WeatherBallTypeAttr");let jU=vF;const xF=class xF extends tO{apply(e,I,L,N){const S=N[0];if(!(S instanceof VA)||!e.isGrounded())return!1;switch(T.arena.getTerrainType()){case bA.MISTY:S.value=t.FAIRY;break;case bA.ELECTRIC:S.value=t.ELECTRIC;break;case bA.GRASSY:S.value=t.GRASS;break;case bA.PSYCHIC:S.value=t.PSYCHIC;break;default:if(S.value===L.type)return!1;S.value=L.type;break}return!0}};r(xF,"TerrainPulseTypeAttr");let Ao=xF;const ZF=class ZF extends tO{apply(e,I,L,N){const S=N[0];if(!(S instanceof VA))return!1;const n=Math.floor(((e.ivs[c.HP]&1)+(e.ivs[c.ATK]&1)*2+(e.ivs[c.DEF]&1)*4+(e.ivs[c.SPD]&1)*8+(e.ivs[c.SPATK]&1)*16+(e.ivs[c.SPDEF]&1)*32)*15/63);return S.value=[t.FIGHTING,t.FLYING,t.POISON,t.GROUND,t.ROCK,t.BUG,t.GHOST,t.STEEL,t.FIRE,t.WATER,t.GRASS,t.ELECTRIC,t.PSYCHIC,t.ICE,t.DRAGON,t.DARK][n],!0}};r(ZF,"HiddenPowerTypeAttr");let Eo=ZF;const bF=class bF extends tO{apply(e,I,L,N){const S=N[0];return S instanceof VA&&e.isTerastallized?(S.value=e.getTeraType(),!0):!1}};r(bF,"TeraBlastTypeAttr");let eo=bF;const kF=class kF extends tO{apply(e,I,L,N){if(e.isTerastallized&&e.hasSpecies(A.TERAPAGOS)){const S=N[0];return S.value=t.STELLAR,!0}return!1}};r(kF,"TeraStarstormTypeAttr");let Ro=kF;const XF=class XF extends tO{apply(e,I,L,N){const S=N[0];if(!(S instanceof VA))return!1;const n=e.getTypes(!0);if(n.includes(t.STELLAR)){const i=e.getTypes();return S.value=i[0],!0}else return n.length>0?(S.value=n[0],!0):!1}};r(XF,"MatchUserTypeAttr");let Oo=XF;const QF=class QF extends tO{apply(e,I,L,N){var i;const S=N[0];if(!(S instanceof VA))return!1;const n=(i=e==null?void 0:e.turnData)==null?void 0:i.combiningPledge;if(!n)return!1;switch(L.id){case E.FIRE_PLEDGE:return n===E.WATER_PLEDGE?(S.value=t.WATER,!0):!1;case E.WATER_PLEDGE:return n===E.GRASS_PLEDGE?(S.value=t.GRASS,!0):!1;case E.GRASS_PLEDGE:return n===E.FIRE_PLEDGE?(S.value=t.FIRE,!0):!1;default:return!1}}};r(QF,"CombinedPledgeTypeAttr");let $N=QF;const JF=class JF extends dE{apply(e,I,L,N){return!1}};r(JF,"VariableMoveTypeMultiplierAttr");let EN=JF;const $F=class $F extends EN{apply(e,I,L,N){if(!I.getTag(d.IGNORE_FLYING)){const S=N[0];return I.isOfType(t.FLYING)&&(S.value=1),!0}return!1}};r($F,"NeutralDamageAgainstFlyingTypeMultiplierAttr");let Io=$F;const qF=class qF extends EN{apply(e,I,L,N){const S=N[0];return I.isOfType(t.ICE)?(S.value=0,!0):!1}};r(qF,"IceNoEffectTypeAttr");let to=qF;const zF=class zF extends EN{apply(e,I,L,N){const S=N[0];return S.value*=I.getAttackTypeEffectiveness(t.FLYING,e),!0}};r(zF,"FlyingTypeMultiplierAttr");let Lo=zF;const jF=class jF extends dE{apply(e,I,L,N){return!1}};r(jF,"VariableMoveTypeChartAttr");let No=jF;const AY=class AY extends No{apply(e,I,L,N){const S=N[0];return N[1]===t.WATER?(S.value=2,!0):!1}};r(AY,"FreezeDryAttr");let So=AY;const EY=class EY extends tt{apply(e,I,L,N){const S=N[0];return e.level<I.level?S.value=0:S.value=Math.min(Math.max(30+100*(1-I.level/e.level),0),100),!0}};r(EY,"OneHitKOAccuracyAttr");let KL=EY;const eY=class eY extends KL{apply(e,I,L,N){const S=N[0];if(e.level<I.level)S.value=0;else{const n=e.isOfType(t.ICE)?30:20;S.value=Math.min(Math.max(n+100*(1-I.level/e.level),0),100)}return!0}};r(eY,"SheerColdAccuracyAttr");let To=eY;const RY=class RY extends dE{constructor(e){super(),this.missEffectFunc=e}apply(e,I,L,N){return this.missEffectFunc(e,L),!0}};r(RY,"MissEffectAttr");let jO=RY;const OY=class OY extends dE{constructor(e){super(),this.noEffectFunc=e}apply(e,I,L,N){return this.noEffectFunc(e,L),!0}};r(OY,"NoEffectAttr");let AI=OY;const at=r((R,e)=>{const I=new nE(!1);return SE("BlockNonDirectDamageAbAttr",R,I),I.value?!1:(R.damageAndUpdate(UE(R.getMaxHp()/2),{result:_E.INDIRECT}),T.phaseManager.queueMessage(_.t("moveTriggers:keptGoingAndCrashed",{pokemonName:Q(R)})),R.turnData.damageTaken+=UE(R.getMaxHp()/2),!0)},"crashDamageFunc"),IY=class IY extends dE{};r(IY,"TypelessAttr");let so=IY;const tY=class tY extends dE{constructor(e=!1){super(),this.abilitiesOnly=e}};r(tY,"BypassRedirectAttr");let nL=tY;const LY=class LY extends AE{constructor(){super(!0,{lastHitOnly:!0})}canApply(e,I,L,N){return!(this.selfTarget?e:I).isFainted()}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;if(!e.getTag(d.FRENZY)&&!e.getMoveQueue().length){const S=e.randBattleSeedIntRange(1,2);new Array(S).fill(null).map(()=>e.getMoveQueue().push({move:L.id,targets:[I.getBattlerIndex()],ignorePP:!0})),e.addTag(d.FRENZY,S,L.id,e.id)}else Ce("AddBattlerTagAttr",e,I,L,N),e.lapseTag(d.FRENZY);return!0}};r(LY,"FrenzyAttr");let rL=LY;const NY=class NY extends AE{constructor(e){super(!0),this.tagType=e}apply(e,I,L,N){return super.apply(e,I,L,N)?e.addTag(this.tagType,1,L.id,e.id):!1}};r(NY,"SemiInvulnerableAttr");let PI=NY;const SY=class SY extends AE{constructor(e,I=!1,L=!1,N=0,S,n=!1){super(I,{lastHitOnly:n}),this.tagType=e,this.turnCountMin=N,this.turnCountMax=S!==void 0?S:N,this.failOnOverlap=!!L}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=this.getMoveChance(e,I,L,this.selfTarget,!0);return S<0||S===100||e.randBattleSeedInt(100)<S?(this.selfTarget?e:I).addTag(this.tagType,e.randBattleSeedIntRange(this.turnCountMin,this.turnCountMax),L.id,e.id):!1}getCondition(){return this.failOnOverlap?(e,I,L)=>!(this.selfTarget?e:I).getTag(this.tagType):null}getTagTargetBenefitScore(){switch(this.tagType){case d.RECHARGING:case d.PERISH_SONG:return-16;case d.FLINCHED:case d.CONFUSED:case d.INFATUATED:case d.NIGHTMARE:case d.DROWSY:case d.DISABLED:case d.HEAL_BLOCK:case d.RECEIVE_DOUBLE_DAMAGE:return-5;case d.SEEDED:case d.SALT_CURED:case d.CURSED:case d.FRENZY:case d.TRAPPED:case d.BIND:case d.WRAP:case d.FIRE_SPIN:case d.WHIRLPOOL:case d.CLAMP:case d.SAND_TOMB:case d.MAGMA_STORM:case d.SNAP_TRAP:case d.THUNDER_CAGE:case d.INFESTATION:return-3;case d.ENCORE:return-2;case d.MINIMIZED:case d.ALWAYS_GET_HIT:return 0;case d.INGRAIN:case d.IGNORE_ACCURACY:case d.AQUA_RING:case d.MAGIC_COAT:return 3;case d.PROTECTED:case d.FLYING:case d.CRIT_BOOST:case d.ALWAYS_CRIT:return 5;default:return console.warn(`BattlerTag ${d[this.tagType]} is missing a score!`),0}}getTargetBenefitScore(e,I,L){let N=this.getMoveChance(e,I,L,this.selfTarget,!1);return N<0&&(N=100),Math.floor(this.getTagTargetBenefitScore()*(N/100))}};r(SY,"AddBattlerTagAttr");let OE=SY;const TY=class TY extends OE{constructor(){super(d.SEEDED)}};r(TY,"LeechSeedAttr");let cn=TY;const sY=class sY extends OE{constructor(){super(d.IGNORE_FLYING,!1,!1,1,1,!0)}apply(e,I,L,N){return I.isGrounded()||T.phaseManager.queueMessage(_.t("moveTriggers:fallDown",{targetPokemonName:Q(I)})),super.apply(e,I,L,N)}};r(sY,"FallDownAttr");let Bn=sY;const aY=class aY extends AE{constructor(){super(!0)}apply(e,I,L,N){return super.apply(e,I,L,N)&&e.hasAbility(O.GULP_MISSILE)&&e.species.speciesId===A.CRAMORANT?(e.getHpRatio()>=.5?e.addTag(d.GULP_MISSILE_ARROKUDA,0,L.id):e.addTag(d.GULP_MISSILE_PIKACHU,0,L.id),!0):!1}getUserBenefitScore(e,I,L){return e.hasAbility(O.GULP_MISSILE)&&e.species.speciesId===A.CRAMORANT&&!e.getTag(FC)?10:0}};r(aY,"GulpMissileTagAttr");let Kn=aY;const nY=class nY extends OE{constructor(){super(d.TRAPPED)}apply(e,I,L,N){if(!super.canApply(e,I,L,N)||e.getTag(WO)||I.getTag(WO))return!1;const S=this.getMoveChance(e,I,L,this.selfTarget);return S<0||S===100||e.randBattleSeedInt(100)<S?I.addTag(d.TRAPPED,1,L.id,e.id)&&e.addTag(d.TRAPPED,1,L.id,I.id):!1}};r(nY,"JawLockAttr");let ao=nY;const rY=class rY extends AE{apply(e,I,L,N){if(e.getTypes(!0).includes(t.GHOST)){if(I.getTag(d.CURSED))return T.phaseManager.queueMessage(_.t("battle:attackFailed")),!1;const S=Math.max(1,Math.floor(e.getMaxHp()/2));return e.damageAndUpdate(S,{result:_E.INDIRECT,ignoreSegments:!0}),T.phaseManager.queueMessage(_.t("battlerTags:cursedOnAdd",{pokemonNameWithAffix:Q(e),pokemonName:Q(I)})),I.addTag(d.CURSED,0,L.id,e.id),!0}else return T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.ATK,c.DEF],1),T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.SPD],-1),!0}};r(rY,"CurseAttr");let no=rY;const iY=class iY extends AE{constructor(e,I=!1){super(I),this.tagTypes=e}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;for(const S of this.tagTypes)(this.selfTarget?e:I).lapseTag(S);return!0}};r(iY,"LapseBattlerTagAttr");let ro=iY;const CY=class CY extends AE{constructor(e,I=!1){super(I),this.tagTypes=e}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;for(const S of this.tagTypes)(this.selfTarget?e:I).removeTag(S);return!0}};r(CY,"RemoveBattlerTagAttr");let HI=CY;const UY=class UY extends OE{constructor(){super(d.FLINCHED,!1)}};r(UY,"FlinchAttr");let mE=UY;const oY=class oY extends OE{constructor(e){super(d.CONFUSED,e,!1,2,5)}apply(e,I,L,N){return!this.selfTarget&&I.isSafeguarded(e)?(L.category===G.STATUS&&T.phaseManager.queueMessage(_.t("moveTriggers:safeguard",{targetName:Q(I)})),!1):super.apply(e,I,L,N)}};r(oY,"ConfuseAttr");let be=oY;const MY=class MY extends OE{constructor(){super(d.RECHARGING,!0,!1,1,1,!0)}};r(MY,"RechargeAttr");let GO=MY;const DY=class DY extends OE{constructor(e){super(e,!1,!1,4,5)}};r(DY,"TrapAttr");let PO=DY;const lY=class lY extends OE{constructor(e=d.PROTECTED){super(e,!0)}getCondition(){return(e,I,L)=>{let N=0;const S=e.getLastXMoves();let n;for(;S.length&&(n=S.shift(),!(!FA[(n==null?void 0:n.move)??E.NONE].hasAttr("ProtectAttr")||(n==null?void 0:n.result)!==De.SUCCESS));)N++;return N?!e.randBattleSeedInt(Math.pow(3,N)):!0}}};r(lY,"ProtectAttr");let HO=lY;const _Y=class _Y extends OE{constructor(){super(d.IGNORE_ACCURACY,!0,!1,2)}apply(e,I,L,N){return super.apply(e,I,L,N)?(T.phaseManager.queueMessage(_.t("moveTriggers:tookAimAtTarget",{pokemonName:Q(e),targetName:Q(I)})),!0):!1}};r(_Y,"IgnoreAccuracyAttr");let fn=_Y;const GY=class GY extends OE{constructor(){super(d.PERISH_SONG,!1,!0,4)}apply(e,I,L,N){return super.apply(e,I,L,N)?(T.phaseManager.queueMessage(_.t("moveTriggers:faintCountdown",{pokemonName:Q(I),turnCount:this.turnCountMin-1})),!0):!1}};r(GY,"FaintCountdownAttr");let io=GY;const PY=class PY extends AE{constructor(){super(!0)}apply(e,I,L,N){return super.apply(e,I,L,N)?(T.getField(!0).forEach(S=>S.findAndRemoveTags(n=>n.tagType===d.SUBSTITUTE)),!0):!1}};r(PY,"RemoveAllSubstitutesAttr");let Co=PY;const HY=class HY extends dE{constructor(e,I=!1){super(),this.tagType=e,this.doubleDamage=!!I}getTargetBenefitScore(e,I,L){return I.getTag(this.tagType)?this.doubleDamage?10:5:0}};r(HY,"HitsTagAttr");let yO=HY;const uY=class uY extends yO{constructor(e){super(e,!0)}};r(uY,"HitsTagForDoubleDamageAttr");let cR=uY;const cY=class cY extends AE{constructor(e,I,L=!1,N=!1){super(!0),this.tagType=e,this.turnCount=I,this.failOnOverlap=L,this.selfSideTarget=N}apply(e,I,L,N){var S;if(!super.apply(e,I,L,N))return!1;if((L.chance<0||L.chance===100||e.randBattleSeedInt(100)<L.chance)&&((S=e.getLastXMoves(1)[0])==null?void 0:S.result)===De.SUCCESS){const n=(this.selfSideTarget?e:I).isPlayer()!==(L.hasAttr("AddArenaTrapTagAttr")&&I===e)?hA.PLAYER:hA.ENEMY;return T.arena.addTag(this.tagType,this.turnCount,L.id,e.id,n),!0}return!1}getCondition(){return this.failOnOverlap?(e,I,L)=>!T.arena.getTagOnSide(this.tagType,I.isPlayer()?hA.PLAYER:hA.ENEMY):null}};r(cY,"AddArenaTagAttr");let Se=cY;const BY=class BY extends AE{constructor(e,I){super(!0),this.tagTypes=e,this.selfSideTarget=I}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=(this.selfSideTarget?e:I).isPlayer()?hA.PLAYER:hA.ENEMY;for(const n of this.tagTypes)T.arena.removeTagOnSide(n,S);return!0}};r(BY,"RemoveArenaTagsAttr");let Fn=BY;const KY=class KY extends Se{getCondition(){return(e,I,L)=>{const N=this.selfSideTarget!==e.isPlayer()?hA.ENEMY:hA.PLAYER,S=T.arena.getTagOnSide(this.tagType,N);return S?S.layers<S.maxLayers:!0}}};r(KY,"AddArenaTrapTagAttr");let iL=KY;const fY=class fY extends Se{apply(e,I,L,N){var C;const S=this.getMoveChance(e,I,L,this.selfTarget,!0),n=(this.selfSideTarget?e:I).isPlayer()?hA.PLAYER:hA.ENEMY,i=T.arena.getTagOnSide(this.tagType,n);return(S<0||S===100||e.randBattleSeedInt(100)<S)&&((C=e.getLastXMoves(1)[0])==null?void 0:C.result)===De.SUCCESS?(T.arena.addTag(this.tagType,0,L.id,e.id,n),i?i.layers<i.maxLayers:!0):!1}};r(fY,"AddArenaTrapTagHitAttr");let Yn=fY;const FY=class FY extends AE{constructor(e=!1){super(!0,{trigger:vI.PRE_APPLY}),this.targetBothSides=e}apply(e,I,L,N){return super.apply(e,I,L,N)?(this.targetBothSides?(T.arena.removeTagOnSide(CA.SPIKES,hA.PLAYER),T.arena.removeTagOnSide(CA.TOXIC_SPIKES,hA.PLAYER),T.arena.removeTagOnSide(CA.STEALTH_ROCK,hA.PLAYER),T.arena.removeTagOnSide(CA.STICKY_WEB,hA.PLAYER),T.arena.removeTagOnSide(CA.SPIKES,hA.ENEMY),T.arena.removeTagOnSide(CA.TOXIC_SPIKES,hA.ENEMY),T.arena.removeTagOnSide(CA.STEALTH_ROCK,hA.ENEMY),T.arena.removeTagOnSide(CA.STICKY_WEB,hA.ENEMY)):(T.arena.removeTagOnSide(CA.SPIKES,I.isPlayer()?hA.ENEMY:hA.PLAYER),T.arena.removeTagOnSide(CA.TOXIC_SPIKES,I.isPlayer()?hA.ENEMY:hA.PLAYER),T.arena.removeTagOnSide(CA.STEALTH_ROCK,I.isPlayer()?hA.ENEMY:hA.PLAYER),T.arena.removeTagOnSide(CA.STICKY_WEB,I.isPlayer()?hA.ENEMY:hA.PLAYER)),!0):!1}};r(FY,"RemoveArenaTrapAttr");let CL=FY;const YY=class YY extends AE{constructor(e=!1){super(!0,{trigger:vI.PRE_APPLY}),this.targetBothSides=e}apply(e,I,L,N){return super.apply(e,I,L,N)?(this.targetBothSides?(T.arena.removeTagOnSide(CA.REFLECT,hA.PLAYER),T.arena.removeTagOnSide(CA.LIGHT_SCREEN,hA.PLAYER),T.arena.removeTagOnSide(CA.AURORA_VEIL,hA.PLAYER),T.arena.removeTagOnSide(CA.REFLECT,hA.ENEMY),T.arena.removeTagOnSide(CA.LIGHT_SCREEN,hA.ENEMY),T.arena.removeTagOnSide(CA.AURORA_VEIL,hA.ENEMY)):(T.arena.removeTagOnSide(CA.REFLECT,I.isPlayer()?hA.PLAYER:hA.ENEMY),T.arena.removeTagOnSide(CA.LIGHT_SCREEN,I.isPlayer()?hA.PLAYER:hA.ENEMY),T.arena.removeTagOnSide(CA.AURORA_VEIL,I.isPlayer()?hA.PLAYER:hA.ENEMY)),!0):!1}};r(YY,"RemoveScreensAttr");let UL=YY;const WY=class WY extends AE{constructor(e){super(!0),this.SwapTags=e}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=T.arena.findTagsOnSide(i=>this.SwapTags.includes(i.tagType),hA.PLAYER),n=T.arena.findTagsOnSide(i=>this.SwapTags.includes(i.tagType),hA.ENEMY);if(S)for(const i of S)T.arena.removeTagOnSide(i.tagType,hA.PLAYER,!0),T.arena.addTag(i.tagType,i.turnCount,i.sourceMove,i.sourceId,hA.ENEMY,!0);if(n)for(const i of n)T.arena.removeTagOnSide(i.tagType,hA.ENEMY,!0),T.arena.addTag(i.tagType,i.turnCount,i.sourceMove,i.sourceId,hA.PLAYER,!0);return T.phaseManager.queueMessage(_.t("moveTriggers:swapArenaTags",{pokemonName:Q(e)})),!0}};r(WY,"SwapArenaTagsAttr");let Uo=WY;const hY=class hY extends Se{constructor(e,I,L=!1){super(e,4,!1,L),this.requiredPledge=I}apply(e,I,L,N){var S;return((S=e.getLastXMoves(1)[0])==null?void 0:S.result)!==De.SUCCESS?!1:e.turnData.combiningPledge===this.requiredPledge?super.apply(e,I,L,N):!1}};r(hY,"AddPledgeEffectAttr");let QI=hY;const dY=class dY extends AE{constructor(){super(!0)}apply(e,I,L,N){var S;if(e.isPlayer())return T.phaseManager.unshiftNew("RevivalBlessingPhase",e),!0;if(e.isEnemy()&&e.hasTrainer()&&T.getEnemyParty().findIndex(n=>n.isFainted()&&!n.isBoss())>-1){const n=T.getEnemyParty().filter(l=>l.isFainted()&&!l.isBoss()),i=n[e.randBattleSeedInt(n.length)],C=T.getEnemyParty().findIndex(l=>i.id===l.id);i.resetStatus(!0,!1,!1,!0),i.heal(Math.min(UE(.5*i.getMaxHp()),i.getMaxHp())),T.phaseManager.queueMessage(_.t("moveTriggers:revivalBlessing",{pokemonName:Q(i)}),0,!0);const o=e.getAlly();return T.currentBattle.double&&T.getEnemyParty().length>1&&!SA(o)&&(o.isFainted()||o===i)&&(T.phaseManager.tryRemovePhase(l=>l.is("SwitchSummonPhase")&&l.getPokemon()===i),(S=T.phaseManager.findPhase(l=>l.pokemon===i))==null||S.cancel(),e.fieldPosition===vO.CENTER&&e.setFieldPosition(vO.LEFT),T.phaseManager.unshiftNew("SwitchSummonPhase",ER.SWITCH,o.getFieldIndex(),C,!1,!1)),!0}return!1}getCondition(){return(e,I,L)=>e.hasTrainer()&&(e.isPlayer()?T.getPlayerParty():T.getEnemyParty()).some(N=>N.isFainted()&&!N.isBoss())}getUserBenefitScore(e,I,L){return e.hasTrainer()&&T.getEnemyParty().some(N=>N.isFainted()&&!N.isBoss())?20:-20}};r(dY,"RevivalBlessingAttr");let oo=dY;const pY=class pY extends AE{constructor(e=!1,I=ER.SWITCH){super(!1,{lastHitOnly:!0}),this.selfSwitch=e,this.switchType=I}isBatonPass(){return this.switchType===ER.BATON_PASS}apply(e,I,L,N){var n;if(!this.getSwitchOutCondition()(e,I,L))return!1;const S=this.selfSwitch?e:I;if(S.lapseTag(d.COMMANDED),S.isPlayer()){if(I.getAbility().hasAttr("PostDamageForceSwitchAbAttr")&&[E.U_TURN,E.VOLT_SWITCH,E.FLIP_TURN].includes(L.id)&&this.hpDroppedBelowHalf(I))return!1;const i=[];if(T.getPlayerParty().forEach((C,o)=>{C.isAllowedInBattle()&&!C.isOnField()&&i.push(o)}),i.length<1)return!1;if(S.hp>0)if(this.switchType===ER.FORCE_SWITCH){S.leaveField(!0);const C=i[e.randBattleSeedInt(i.length)];T.phaseManager.prependNewToPhase("MoveEndPhase","SwitchSummonPhase",this.switchType,S.getFieldIndex(),C,!1,!0)}else return S.leaveField(this.switchType===ER.SWITCH),T.phaseManager.prependNewToPhase("MoveEndPhase","SwitchPhase",this.switchType,S.getFieldIndex(),!0,!0),!0;return!1}else if(T.currentBattle.battleType!==yE.WILD){const i=(n=T.currentBattle.trainer)==null?void 0:n.isPartner(),C=[];if(T.getEnemyParty().forEach((o,l)=>{o.isAllowedInBattle()&&!o.isOnField()&&(!i||o.trainerSlot===S.trainerSlot)&&C.push(l)}),C.length<1)return!1;if(S.hp>0)if(this.switchType===ER.FORCE_SWITCH){S.leaveField(!0);const o=C[e.randBattleSeedInt(C.length)];T.phaseManager.prependNewToPhase("MoveEndPhase","SwitchSummonPhase",this.switchType,S.getFieldIndex(),o,!1,!1)}else S.leaveField(this.switchType===ER.SWITCH),T.phaseManager.prependNewToPhase("MoveEndPhase","SwitchSummonPhase",this.switchType,S.getFieldIndex(),T.currentBattle.trainer?T.currentBattle.trainer.getNextSummonIndex(S.trainerSlot):0,!1,!1)}else{if(I.getAbility().hasAttr("PostDamageForceSwitchAbAttr")&&[E.U_TURN,E.VOLT_SWITCH,E.FLIP_TURN].includes(L.id)&&this.hpDroppedBelowHalf(I))return!1;const i=S.getAlly();S.hp>0&&(S.leaveField(!1),T.phaseManager.queueMessage(_.t("moveTriggers:fled",{pokemonName:Q(S)}),null,!0,500),T.currentBattle.double&&!SA(i)&&T.redirectPokemonMoves(S,i)),T.clearEnemyHeldItemModifiers(S),!(i!=null&&i.isActive(!0))&&S.hp&&(T.phaseManager.pushNew("BattleEndPhase",!1),(T.gameMode.hasRandomBiomes||T.isNewBiome())&&T.phaseManager.pushNew("SelectBiomePhase"),T.phaseManager.pushNew("NewBattlePhase"))}return!0}getCondition(){return(e,I,L)=>L.category!==G.STATUS||this.getSwitchOutCondition()(e,I,L)}getFailedText(e,I,L){const N=new nE(!1);if(SE("ForceSwitchOutImmunityAbAttr",I,N),N.value)return _.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:Q(I)})}getSwitchOutCondition(){return(e,I,L)=>{var C,o;const N=this.selfSwitch?e:I,S=N.isPlayer(),n=L.getAttrs("ForceSwitchOutAttr").find(l=>l.switchType===ER.FORCE_SWITCH);if(!this.selfSwitch){if(L.hitsSubstitute(e,I)||n&&T.currentBattle.trainer&&T.getEnemyParty().filter(f=>f.hp>0&&f.isAllowedInBattle()).length<=1)return!1;const l=N.getTag(d.COMMANDED);if((C=l==null?void 0:l.getSourcePokemon())!=null&&C.isActive(!0)||!S&&T.currentBattle.isBattleMysteryEncounter()&&!((o=T.currentBattle.mysteryEncounter)!=null&&o.fleeAllowed))return!1;const H=new nE(!1);if(SE("ForceSwitchOutImmunityAbAttr",I,H),H.value)return!1}return!S&&T.currentBattle.battleType===yE.WILD?!this.isBatonPass()&&T.currentBattle.waveIndex%10!==0&&!(this.selfSwitch&&G.STATUS!==L.category):(S?T.getPlayerParty():T.getEnemyParty()).filter(l=>l.isAllowedInBattle()&&!l.isOnField()&&(S||l.trainerSlot===N.trainerSlot)).length>0}}getUserBenefitScore(e,I,L){if(!T.getEnemyParty().find(S=>S.isActive()&&!S.isOnField()))return-20;let N=this.selfSwitch?Math.floor((1-e.getHpRatio())*20):super.getUserBenefitScore(e,I,L);if(this.selfSwitch&&this.isBatonPass()){const S=e.getStatStages().reduce((n,i)=>i+=n,0);N=N/2+Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut")(Math.min(Math.abs(S),10)/10)*(S>=0?10:-10)}return N}hpDroppedBelowHalf(e){const I=e.hp,L=e.getMaxHp(),N=e.turnData.damageTaken;return I+N>=L/2&&I<L/2}};r(pY,"ForceSwitchOutAttr");let EO=pY;const gY=class gY extends EO{apply(e,I,L,N){return T.arena.trySetWeather(Z.SNOW,e),super.apply(e,I,L,N)}getCondition(){return(e,I,L)=>{var N;return((N=T.arena.weather)==null?void 0:N.weatherType)!==Z.SNOW||super.getSwitchOutCondition()(e,I,L)}}};r(gY,"ChillyReceptionAttr");let Mo=gY;const mY=class mY extends AE{constructor(e,I){super(!0,{trigger:vI.POST_TARGET}),this.removedType=e,this.messageCallback=I}apply(e,I,L,N){if(!super.apply(e,I,L,N)||e.isTerastallized&&e.getTeraType()===this.removedType)return!1;const n=e.getTypes(!0).filter(i=>i!==this.removedType);return n.length===0&&n.push(t.UNKNOWN),e.summonData.types=n,e.updateInfo(),this.messageCallback&&this.messageCallback(e),!0}};r(mY,"RemoveTypeAttr");let Wn=mY;const yY=class yY extends AE{constructor(){super(!1)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=I.getTypes(!0);return S.includes(t.UNKNOWN)&&S.indexOf(t.UNKNOWN)>-1&&(S[S.indexOf(t.UNKNOWN)]=t.NORMAL),e.summonData.types=S,e.updateInfo(),T.phaseManager.queueMessage(_.t("moveTriggers:copyType",{pokemonName:Q(e),targetPokemonName:Q(I)})),!0}getCondition(){return(e,I,L)=>I.getTypes()[0]!==t.UNKNOWN||I.summonData.addedType!==null}};r(yY,"CopyTypeAttr");let Do=yY;const VY=class VY extends AE{constructor(){super(!0)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=T.arena.getTerrainType();let n;return S!==bA.NONE?n=this.getTypeForTerrain(T.arena.getTerrainType()):n=this.getTypeForBiome(T.arena.biomeType),e.summonData.types=[n],e.updateInfo(),T.phaseManager.queueMessage(_.t("moveTriggers:transformedIntoType",{pokemonName:Q(e),typeName:_.t(`pokemonInfo:Type.${t[n]}`)})),!0}getTypeForTerrain(e){switch(e){case bA.ELECTRIC:return t.ELECTRIC;case bA.MISTY:return t.FAIRY;case bA.GRASSY:return t.GRASS;case bA.PSYCHIC:return t.PSYCHIC;case bA.NONE:default:return t.UNKNOWN}}getTypeForBiome(e){switch(e){case s.TOWN:case s.PLAINS:case s.METROPOLIS:return t.NORMAL;case s.GRASS:case s.TALL_GRASS:return t.GRASS;case s.FOREST:case s.JUNGLE:return t.BUG;case s.SLUM:case s.SWAMP:return t.POISON;case s.SEA:case s.BEACH:case s.LAKE:case s.SEABED:return t.WATER;case s.MOUNTAIN:return t.FLYING;case s.BADLANDS:return t.GROUND;case s.CAVE:case s.DESERT:return t.ROCK;case s.ICE_CAVE:case s.SNOWY_FOREST:return t.ICE;case s.MEADOW:case s.FAIRY_CAVE:case s.ISLAND:return t.FAIRY;case s.POWER_PLANT:return t.ELECTRIC;case s.VOLCANO:return t.FIRE;case s.GRAVEYARD:case s.TEMPLE:return t.GHOST;case s.DOJO:case s.CONSTRUCTION_SITE:return t.FIGHTING;case s.FACTORY:case s.LABORATORY:return t.STEEL;case s.RUINS:case s.SPACE:return t.PSYCHIC;case s.WASTELAND:case s.END:return t.DRAGON;case s.ABYSS:return t.DARK;default:return t.UNKNOWN}}};r(VY,"CopyBiomeTypeAttr");let lo=VY;const wY=class wY extends AE{constructor(e){super(!1),this.type=e}apply(e,I,L,N){return I.summonData.types=[this.type],I.updateInfo(),T.phaseManager.queueMessage(_.t("moveTriggers:transformedIntoType",{pokemonName:Q(I),typeName:_.t(`pokemonInfo:Type.${t[this.type]}`)})),!0}getCondition(){return(e,I,L)=>!I.isTerastallized&&!I.hasAbility(O.MULTITYPE)&&!I.hasAbility(O.RKS_SYSTEM)&&!(I.getTypes().length===1&&I.getTypes()[0]===this.type)}};r(wY,"ChangeTypeAttr");let hn=wY;const vY=class vY extends AE{constructor(e){super(!1),this.type=e}apply(e,I,L,N){return I.summonData.addedType=this.type,I.updateInfo(),T.phaseManager.queueMessage(_.t("moveTriggers:addType",{typeName:_.t(`pokemonInfo:Type.${t[this.type]}`),pokemonName:Q(I)})),!0}getCondition(){return(e,I,L)=>!I.isTerastallized&&!I.getTypes().includes(this.type)}};r(vY,"AddTypeAttr");let dn=vY;const xY=class xY extends AE{constructor(){super(!0)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=I.getMoveset()[0].getMove().type;return e.summonData.types=[S],T.phaseManager.queueMessage(_.t("battle:transformedIntoType",{pokemonName:Q(e),type:_.t(`pokemonInfo:Type.${t[S]}`)})),!0}};r(xY,"FirstMoveTypeAttr");let _o=xY;const ZY=class ZY extends bt{apply(e,I,L,N){const S=L.moveTarget===AA.NEAR_OTHER?AA.NEAR_ENEMY:void 0,n=jL(e,L.id,S);if(n.targets.length===0)return T.phaseManager.queueMessage(_.t("battle:attackFailed")),!1;const i=n.multiple||n.targets.length===1?n.targets:[this.hasTarget?I.getBattlerIndex():n.targets[e.randBattleSeedInt(n.targets.length)]];return e.getMoveQueue().push({move:L.id,targets:i,virtual:!0,ignorePP:!0}),T.phaseManager.unshiftNew("LoadMoveAnimPhase",L.id),T.phaseManager.unshiftNew("MovePhase",e,i,new pA(L.id,0,0,!0),!0,!0),!0}};r(ZY,"CallMoveAttr");let QS=ZY;const bY=class bY extends QS{constructor(e){super(),this.invalidMoves=e}getMoveOverride(){return null}apply(e,I,L,N){const S=nR(E).map(i=>!this.invalidMoves.has(i)&&!FA[i].name.endsWith(" (N)")?i:E.NONE);let n=E.NONE;do n=this.getMoveOverride()??S[e.randBattleSeedInt(S.length)];while(n===E.NONE);return super.apply(e,I,FA[n],N)}};r(bY,"RandomMoveAttr");let Go=bY;const kY=class kY extends QS{constructor(e,I=!1){super(),this.includeParty=I,this.invalidMoves=e}apply(e,I,L,N){return super.apply(e,I,FA[this.moveId],N)}getCondition(){return(e,I,L)=>{let N;this.includeParty?N=e.isPlayer()?T.getPlayerParty().filter(i=>i!==e):T.getEnemyParty().filter(i=>i!==e):N=[e];const n=N.map(i=>i.moveset).flat().filter(i=>!this.invalidMoves.has(i.moveId)&&!i.getMove().name.endsWith(" (N)"));return n.length===0?!1:(this.moveId=n[e.randBattleSeedInt(n.length)].moveId,!0)}}};r(kY,"RandomMovesetMoveAttr");let pn=kY;const XY=class XY extends bt{apply(e,I,L,N){let S;switch(T.arena.getTerrainType()){case bA.NONE:switch(T.arena.biomeType){case s.TOWN:S=E.ROUND;break;case s.METROPOLIS:S=E.TRI_ATTACK;break;case s.SLUM:S=E.SLUDGE_BOMB;break;case s.PLAINS:S=E.SILVER_WIND;break;case s.GRASS:S=E.GRASS_KNOT;break;case s.TALL_GRASS:S=E.POLLEN_PUFF;break;case s.MEADOW:S=E.GIGA_DRAIN;break;case s.FOREST:S=E.BUG_BUZZ;break;case s.JUNGLE:S=E.LEAF_STORM;break;case s.SEA:S=E.HYDRO_PUMP;break;case s.SWAMP:S=E.MUD_BOMB;break;case s.BEACH:S=E.SCALD;break;case s.LAKE:S=E.BUBBLE_BEAM;break;case s.SEABED:S=E.BRINE;break;case s.ISLAND:S=E.LEAF_TORNADO;break;case s.MOUNTAIN:S=E.AIR_SLASH;break;case s.BADLANDS:S=E.EARTH_POWER;break;case s.DESERT:S=E.SCORCHING_SANDS;break;case s.WASTELAND:S=E.DRAGON_PULSE;break;case s.CONSTRUCTION_SITE:S=E.STEEL_BEAM;break;case s.CAVE:S=E.POWER_GEM;break;case s.ICE_CAVE:S=E.ICE_BEAM;break;case s.SNOWY_FOREST:S=E.FROST_BREATH;break;case s.VOLCANO:S=E.LAVA_PLUME;break;case s.GRAVEYARD:S=E.SHADOW_BALL;break;case s.RUINS:S=E.ANCIENT_POWER;break;case s.TEMPLE:S=E.EXTRASENSORY;break;case s.DOJO:S=E.FOCUS_BLAST;break;case s.FAIRY_CAVE:S=E.ALLURING_VOICE;break;case s.ABYSS:S=E.OMINOUS_WIND;break;case s.SPACE:S=E.DRACO_METEOR;break;case s.FACTORY:S=E.FLASH_CANNON;break;case s.LABORATORY:S=E.ZAP_CANNON;break;case s.POWER_PLANT:S=E.CHARGE_BEAM;break;case s.END:S=E.ETERNABEAM;break}break;case bA.MISTY:S=E.MOONBLAST;break;case bA.ELECTRIC:S=E.THUNDERBOLT;break;case bA.GRASSY:S=E.ENERGY_BALL;break;case bA.PSYCHIC:S=E.PSYCHIC;break;default:S=E.TRI_ATTACK;break}return e.getMoveQueue().push({move:S,targets:[I.getBattlerIndex()],ignorePP:!0}),T.phaseManager.unshiftNew("LoadMoveAnimPhase",S),T.phaseManager.unshiftNew("MovePhase",e,[I.getBattlerIndex()],new pA(S,0,0,!0),!0),!0}};r(XY,"NaturePowerAttr");let Po=XY;const QY=class QY extends QS{constructor(e,I=new Set){super(),this.mirrorMove=e,this.invalidMoves=I}apply(e,I,L,N){this.hasTarget=this.mirrorMove;const S=this.mirrorMove?I.getLastXMoves()[0].move:T.currentBattle.lastMove;return super.apply(e,I,FA[S],N)}getCondition(){return(e,I,L)=>{var N;if(this.mirrorMove){const S=(N=I.getLastXMoves()[0])==null?void 0:N.move;return!!S&&!this.invalidMoves.has(S)}else{const S=T.currentBattle.lastMove;return S!==void 0&&!this.invalidMoves.has(S)}}}};r(QY,"CopyMoveAttr");let gn=QY;const JY=class JY extends AE{constructor(){super(!1,{trigger:vI.POST_APPLY})}apply(e,I,L,N){const S=I.getLastXMoves(-1).find(o=>o.move!==E.NONE),n=I.getMoveset().find(o=>o.moveId===S.move);let i=n.getMove().isMultiTarget()?jL(I,S.move).targets:S.targets;const C=T.getField()[i[0]];if(T.currentBattle.double&&i.length===1&&C.isFainted()&&C!==I.getAlly()){const o=C.getAlly();!SA(o)&&o.isActive()&&(i=[o.getBattlerIndex()])}return T.phaseManager.queueMessage(_.t("moveTriggers:instructingMove",{userPokemonName:Q(e),targetPokemonName:Q(I)})),I.getMoveQueue().unshift({move:S.move,targets:i,ignorePP:!1}),I.turnData.extraTurns++,T.phaseManager.appendNewToPhase("MoveEndPhase","MovePhase",I,i,n),!0}getCondition(){return(e,I,L)=>{const N=I.getLastXMoves(-1).find(i=>i.move!==E.NONE),S=I.getMoveset().find(i=>i.moveId===(N==null?void 0:N.move)),n=[E.OUTRAGE,E.RAGING_FURY,E.ROLLOUT,E.PETAL_DANCE,E.THRASH,E.ICE_BALL,E.BIDE,E.SHELL_TRAP,E.BEAK_BLAST,E.FOCUS_PUNCH,E.FAKE_OUT,E.FIRST_IMPRESSION,E.MAT_BLOCK,E.HYPER_BEAM,E.ETERNABEAM,E.FRENZY_PLANT,E.BLAST_BURN,E.HYDRO_CANNON,E.GIGA_IMPACT,E.PRISMATIC_LASER,E.ROAR_OF_TIME,E.ROCK_WRECKER,E.METEOR_ASSAULT,E.DIG,E.FLY,E.BOUNCE,E.SHADOW_FORCE,E.PHANTOM_FORCE,E.DIVE,E.ELECTRO_SHOT,E.ICE_BURN,E.GEOMANCY,E.FREEZE_SHOCK,E.SKY_DROP,E.SKY_ATTACK,E.SKULL_BASH,E.SOLAR_BEAM,E.SOLAR_BLADE,E.METEOR_BEAM,E.INSTRUCT,E.KINGS_SHIELD,E.SKETCH,E.TRANSFORM,E.MIMIC,E.STRUGGLE];return!(!(N!=null&&N.move)||!S||S.ppUsed===S.getMovePp()||FA[N.move].isChargingMove()||n.includes(N.move))}}getTargetBenefitScore(e,I,L){return 2}};r(JY,"RepeatMoveAttr");let Ho=JY;const $Y=class $Y extends AE{constructor(e){super(),this.reduction=e}apply(e,I,L,N){const S=I.getLastXMoves()[0],n=I.getMoveset().find(o=>o.moveId===S.move),i=n.ppUsed;n.ppUsed=Math.min(i+this.reduction,n.getMovePp());const C=_.t("battle:ppReduced",{targetName:Q(I),moveName:n.getName(),reduction:n.ppUsed-i});return T.eventTarget.dispatchEvent(new ka(I.id,n.getMove(),n.ppUsed)),T.phaseManager.queueMessage(C),!0}getCondition(){return(e,I,L)=>{const N=I.getLastXMoves()[0];if(N){const S=I.getMoveset().find(n=>n.moveId===N.move);return!!(S!=null&&S.getPpRatio())}return!1}}getTargetBenefitScore(e,I,L){const N=I.getLastXMoves()[0];if(N){const S=I.getMoveset().find(n=>n.moveId===N.move);if(S){const n=S.getMovePp(),i=n-S.ppUsed,C=-(8-Math.ceil(Math.min(n,30)/5));return i<4?C/4*i:C}}return 0}};r($Y,"ReducePpMoveAttr");let mn=$Y;const qY=class qY extends mn{constructor(e){super(e)}apply(e,I,L,N){const S=I.getLastXMoves().find(()=>!0);if(S){const n=I.getMoveset().find(i=>i.moveId===S.move);n!=null&&n.getPpRatio()&&super.apply(e,I,L,N)}return!0}getCondition(){return(e,I,L)=>!0}};r(qY,"AttackReducePpMoveAttr");let uo=qY;const G3=r((R,e,I)=>{const L=e.getMoveHistory().filter(S=>!S.virtual);if(!L.length)return!1;const N=L[0];return!(!N.move||FA[N.move].isChargingMove()&&N.result===De.OTHER)},"targetMoveCopiableCondition"),zY=class zY extends bt{apply(e,I,L,N){const S=I.getMoveHistory().filter(C=>!C.virtual);if(!S.length)return!1;const n=FA[S[0].move],i=e.getMoveset().findIndex(C=>C.moveId===L.id);return i===-1?!1:(e.summonData.moveset=e.getMoveset().slice(0),e.summonData.moveset[i]=new pA(n.id,0,0),T.phaseManager.queueMessage(_.t("moveTriggers:copiedMove",{pokemonName:Q(e),moveName:n.name})),!0)}getCondition(){return G3}};r(zY,"MovesetCopyMoveAttr");let co=zY;const jY=class jY extends AE{constructor(){super(!0)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=I.getLastXMoves(-1).find(C=>C.move!==E.NONE&&C.move!==E.STRUGGLE&&!C.virtual);if(!S)return!1;const n=FA[S.move],i=e.getMoveset().findIndex(C=>C.moveId===L.id);return i===-1?!1:(e.setMove(i,n.id),T.phaseManager.queueMessage(_.t("moveTriggers:sketchedMove",{pokemonName:Q(e),moveName:n.name})),!0)}getCondition(){return(e,I,L)=>{if(!G3(e,I))return!1;const N=I.getMoveHistory().filter(n=>!n.virtual).at(-1);return!N||[E.CHATTER,E.MIRROR_MOVE,E.SLEEP_TALK,E.STRUGGLE,E.SKETCH,E.REVIVAL_BLESSING,E.TERA_STARSTORM,E.BREAKNECK_BLITZ__PHYSICAL,E.BREAKNECK_BLITZ__SPECIAL].includes(N.move)?!1:!e.getMoveset().some(n=>n.moveId===N.move)}}};r(jY,"SketchAttr");let Bo=jY;const AW=class AW extends AE{constructor(e,I){super(I),this.ability=e}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=this.selfTarget?e:I;return T.triggerPokemonFormChange(S,dI),S.breakIllusion()&&T.phaseManager.queueMessage(_.t("abilityTriggers:illusionBreak",{pokemonName:Q(S)})),T.phaseManager.queueMessage(_.t("moveTriggers:acquiredAbility",{pokemonName:Q(S),abilityName:fe[this.ability].name})),S.setTempAbility(fe[this.ability]),T.triggerPokemonFormChange(S,dI),!0}getCondition(){return(e,I,L)=>(this.selfTarget?e:I).getAbility().isReplaceable&&(this.selfTarget?e:I).getAbility().id!==this.ability}};r(AW,"AbilityChangeAttr");let yn=AW;const EW=class EW extends AE{constructor(e=!1){super(!1),this.copyToPartner=e}apply(e,I,L,N){var n;if(!super.apply(e,I,L,N))return!1;T.phaseManager.queueMessage(_.t("moveTriggers:copiedTargetAbility",{pokemonName:Q(e),targetName:Q(I),abilityName:fe[I.getAbility().id].name})),e.setTempAbility(I.getAbility());const S=e.getAlly();return this.copyToPartner&&((n=T.currentBattle)!=null&&n.double)&&!SA(S)&&S.hp&&(T.phaseManager.queueMessage(_.t("moveTriggers:copiedTargetAbility",{pokemonName:Q(S),targetName:Q(I),abilityName:fe[I.getAbility().id].name})),S.setTempAbility(I.getAbility())),!0}getCondition(){return(e,I,L)=>{var n;const N=e.getAlly();let S=I.getAbility().isCopiable&&e.getAbility().isReplaceable;return this.copyToPartner&&((n=T.currentBattle)!=null&&n.double)?S=S&&(!(N!=null&&N.hp)||(N==null?void 0:N.getAbility().isReplaceable)):S=S&&e.getAbility().id!==I.getAbility().id,S}}};r(EW,"AbilityCopyAttr");let Vn=EW;const eW=class eW extends AE{constructor(){super(!1)}apply(e,I,L,N){return super.apply(e,I,L,N)?(T.phaseManager.queueMessage(_.t("moveTriggers:acquiredAbility",{pokemonName:Q(I),abilityName:fe[e.getAbility().id].name})),I.setTempAbility(e.getAbility()),!0):!1}getCondition(){return(e,I,L)=>e.getAbility().isCopiable&&I.getAbility().isReplaceable&&e.getAbility().id!==I.getAbility().id}};r(eW,"AbilityGiveAttr");let Ko=eW;const RW=class RW extends AE{apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=e.getAbility();return T.phaseManager.queueMessage(_.t("moveTriggers:swappedAbilitiesWithTarget",{pokemonName:Q(e)})),e.setTempAbility(I.getAbility()),I.setTempAbility(S),T.arena.triggerWeatherBasedFormChangesToNormal(),!0}getCondition(){return(e,I,L)=>[e,I].every(N=>N.getAbility().isSwappable)}};r(RW,"SwitchAbilitiesAttr");let fo=RW;const OW=class OW extends AE{apply(e,I,L,N){return super.apply(e,I,L,N)?(T.phaseManager.queueMessage(_.t("moveTriggers:suppressAbilities",{pokemonName:Q(I)})),I.suppressAbility(),T.arena.triggerWeatherBasedFormChangesToNormal(),!0):!1}getCondition(){return(e,I,L)=>!I.summonData.abilitySuppressed&&(I.getAbility().isSuppressable||I.hasPassive()&&I.getPassiveAbility().isSuppressable)}};r(OW,"SuppressAbilitiesAttr");let wn=OW;const IW=class IW extends AE{apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;if(I.turnData.acted){const S=new wn;S.getCondition()(e,I,L)&&S.apply(e,I,L,N)}return!0}};r(IW,"SuppressAbilitiesIfActedAttr");let s0=IW;const tW=class tW extends AE{apply(e,I,L,N){return super.apply(e,I,L,N)?(T.phaseManager.unshiftNew("PokemonTransformPhase",e.getBattlerIndex(),I.getBattlerIndex()),T.phaseManager.queueMessage(_.t("moveTriggers:transformedIntoTarget",{pokemonName:Q(e),targetName:Q(I)})),!0):!1}};r(tW,"TransformAttr");let Fo=tW;const LW=class LW extends AE{constructor(e){super(),this.stat=e}apply(e,I,L,N){if(super.apply(e,I,L,N)){const S=e.getStat(this.stat,!1);return e.setStat(this.stat,I.getStat(this.stat,!1),!1),I.setStat(this.stat,S,!1),T.phaseManager.queueMessage(_.t("moveTriggers:switchedStat",{pokemonName:Q(e),stat:_.t(aR(this.stat))})),!0}return!1}};r(LW,"SwapStatAttr");let Yo=LW;const NW=class NW extends AE{constructor(e,I){super(),this.statToSwitch=e,this.statToSwitchWith=I}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const S=e.getStat(this.statToSwitch,!1),n=e.getStat(this.statToSwitchWith,!1);return e.setStat(this.statToSwitch,n,!1),e.setStat(this.statToSwitchWith,S,!1),T.phaseManager.queueMessage(_.t("moveTriggers:shiftedStats",{pokemonName:Q(e),statToSwitch:_.t(aR(this.statToSwitch)),statToSwitchWith:_.t(aR(this.statToSwitchWith))})),!0}getUserBenefitScore(e,I,L){return e.getStat(this.statToSwitchWith,!1)>e.getStat(this.statToSwitch,!1)?10:0}};r(NW,"ShiftStatAttr");let Wo=NW;const SW=class SW extends AE{constructor(e,I){super(),this.stats=e,this.msgKey=I}apply(e,I,L,N){if(super.apply(e,I,L,N)){for(const S of this.stats){const n=Math.floor((e.getStat(S,!1)+I.getStat(S,!1))/2);e.setStat(S,n,!1),I.setStat(S,n,!1)}return T.phaseManager.queueMessage(_.t(this.msgKey,{pokemonName:Q(e)})),!0}return!1}};r(SW,"AverageStatsAttr");let vn=SW;const TW=class TW extends AE{constructor(){super(!0,{firstHitOnly:!0})}apply(e,I,L){return T.currentBattle.moneyScattered+=T.getWaveMoneyAmount(.2),T.phaseManager.queueMessage(_.t("moveTriggers:coinsScatteredEverywhere")),!0}};r(TW,"MoneyAttr");let xn=TW;const sW=class sW extends AE{constructor(){super(!0,{trigger:vI.PRE_APPLY})}apply(e,I,L,N){return T.phaseManager.queueMessage(`${_.t("moveTriggers:tryingToTakeFoeDown",{pokemonName:Q(e)})}`),e.addTag(d.DESTINY_BOND,void 0,L.id,e.id),!0}};r(sW,"DestinyBondAttr");let ho=sW;const aW=class aW extends OE{constructor(e){super(e,!1,!1,2,5)}apply(e,I,L,N){return I.turnData.statStagesIncreased&&super.apply(e,I,L,N),!0}};r(aW,"AddBattlerTagIfBoostedAttr");let po=aW;const nW=class nW extends AE{constructor(e){super(!0),this.effect=e}apply(e,I,L,N){return I.turnData.statStagesIncreased&&I.trySetStatus(this.effect,!0,e),!0}};r(nW,"StatusIfBoostedAttr");let go=nW;const rW=class rW extends dE{getCondition(){return(e,I,L)=>{const N=new Set(e.getMoveset().map(n=>n.moveId));if(!N.delete(L.id)||!N.size)return!1;const S=new Set(e.getMoveHistory().filter(n=>!n.virtual).map(n=>n.move));return[...N].every(n=>S.has(n))}}};r(rW,"LastResortAttr");let mo=rW;const iW=class iW extends dE{constructor(e){super(),this.targetChangeFunc=e}apply(e,I,L,N){const S=N[0];return S.value=this.targetChangeFunc(e,I,L),!0}};r(iW,"VariableTargetAttr");let Zn=iW;const CW=class CW extends AE{apply(e,I,L,N){T.phaseManager.queueMessage(_.t("moveTriggers:afterYou",{targetName:Q(I)}));const S=T.phaseManager.findPhase(n=>n.pokemon===I);return S&&T.phaseManager.tryRemovePhase(n=>n.pokemon===I)&&T.phaseManager.prependNewToPhase("MovePhase","MovePhase",I,[...S.targets],S.move),!0}};r(CW,"AfterYouAttr");let yo=CW;const UW=class UW extends AE{apply(e,I,L,N){T.phaseManager.queueMessage(_.t("moveTriggers:forceLast",{targetPokemonName:Q(I)}));const S=T.phaseManager.findPhase(n=>n.pokemon===I);if(S&&!S.isForcedLast()&&T.phaseManager.tryRemovePhase(n=>n.pokemon===I)){const n=T.phaseManager.findPhase(i=>[e0,E0].every(C=>!(i instanceof C))||i.is("MovePhase")&&X6(i,I,!!T.arena.getTag(CA.TRICK_ROOM)));n&&T.phaseManager.phaseQueue.splice(T.phaseManager.phaseQueue.indexOf(n),0,T.phaseManager.create("MovePhase",I,[...S.targets],S.move,!1,!1,!1,!0))}return!0}};r(UW,"ForceLastAttr");let Vo=UW;const X6=r((R,e,I)=>{let L;return R.pokemon.getEffectiveStat(c.SPD)===e.getEffectiveStat(c.SPD)?L=!!e.randBattleSeedInt(2):L=I?R.pokemon.getEffectiveStat(c.SPD)>e.getEffectiveStat(c.SPD):R.pokemon.getEffectiveStat(c.SPD)<e.getEffectiveStat(c.SPD),R.isForcedLast()&&L},"phaseForcedSlower"),nt=r((R,e,I)=>!T.arena.getTag(CA.GRAVITY),"failOnGravityCondition"),D_=r((R,e,I)=>!e.isBossImmune(),"failOnBossCondition"),CN=r((R,e,I)=>T.currentBattle.double,"failIfSingleBattle"),Ei=r((R,e,I)=>{const L=new nE(!1);return T.getField(!0).map(N=>SE("FieldPreventExplosiveMovesAbAttr",N,L)),L.value&&T.phaseManager.queueMessage(_.t("moveTriggers:cannotUseMove",{pokemonName:Q(R),moveName:I.name})),!L.value},"failIfDampCondition"),Q2=r((R,e,I)=>{var L;return((L=R.status)==null?void 0:L.effect)===J.SLEEP||R.hasAbility(O.COMATOSE)},"userSleptOrComatoseCondition"),l_=r((R,e,I)=>{var L;return((L=e.status)==null?void 0:L.effect)===J.SLEEP||e.hasAbility(O.COMATOSE)},"targetSleptOrComatoseCondition"),JR=r((R,e,I)=>T.phaseManager.phaseQueue.find(L=>L.is("MovePhase"))!==void 0,"failIfLastCondition"),ei=r((R,e,I)=>(R.isPlayer()?T.getPlayerParty():T.getEnemyParty()).some(N=>N.isActive()&&!N.isOnField()),"failIfLastInPartyCondition"),Ri=r((R,e,I)=>!e.isOfType(t.GHOST),"failIfGhostTypeCondition"),Q6=r((R,e,I)=>{var L;return((L=e.getHeldItems().filter(N=>N.isTransferable))==null?void 0:L.length)>0},"failIfNoTargetHeldItemsCondition"),J6=r((R,e,I)=>{var n,i;const L=e.getHeldItems().filter(C=>C.isTransferable);if(L.length===0)return"";const N=((i=(n=L[0])==null?void 0:n.type)==null?void 0:i.name)??"item";return _.t("moveTriggers:attackedByItem",{pokemonName:Q(e),itemName:N})},"attackedByItemMessageFunc"),oW=class oW{constructor(e){this.func=e}apply(e,I,L){return this.func(e,I,L)}getUserBenefitScore(e,I,L){return 0}};r(oW,"MoveCondition");let fL=oW;const MW=class MW extends fL{constructor(){super((e,I,L)=>e.tempSummonData.waveTurnCount===1)}getUserBenefitScore(e,I,L){return this.apply(e,I,L)?10:-20}};r(MW,"FirstMoveCondition");let hT=MW;const DW=class DW extends fL{constructor(){super((e,I,L)=>{var S;const N=T.currentBattle.turnCommands[I.getBattlerIndex()];return!!N&&N.command===pI.FIGHT&&!I.turnData.acted&&!!((S=N.move)!=null&&S.move)&&FA[N.move.move].category!==G.STATUS&&FA[N.move.move].getPriority(I)>0})}};r(DW,"UpperHandCondition");let a0=DW;const lW=class lW extends EN{apply(e,I,L,N){const S=N[0];return e.getTypes(!0).some(n=>I.getTypes(!0).includes(n))?!1:(S.value=0,!0)}};r(lW,"HitsSameTypeAttr");let wo=lW;const _W=class _W extends AE{constructor(){super(!0)}apply(e,I,L,N){if(!super.apply(e,I,L,N))return!1;const[S]=I.getLastXMoves(1);if(!S)return!1;const n=FA[S.move];if(n.type===t.STELLAR||n.type===t.UNKNOWN)return!1;const i=e.getTypes(),C=this.getTypeResistances(T.gameMode,n.type).filter(l=>!i.includes(l));if(!C.length)return!1;const o=C[e.randBattleSeedInt(C.length)];return e.summonData.types=[o],T.phaseManager.queueMessage(_.t("battle:transformedIntoType",{pokemonName:Q(e),type:WL(t[o])})),e.updateInfo(),!0}getTypeResistances(e,I){const L=[];for(let N=0;N<Object.keys(t).length;N++){const S=new VA(1);S.value=JP(I,N),fI(Ke.TYPE_EFFECTIVENESS,S),S.value<1&&L.push(N)}return L}getCondition(){return(e,I,L)=>I.getLastXMoves().length!==0}};r(_W,"ResistLastMoveTypeAttr");let vo=_W;const GW=class GW extends OE{constructor(e){super(e,!1,!0)}apply(e,I,L,N){return super.apply(e,I,L,N)?(T.phaseManager.queueMessage(_.t("moveTriggers:exposedMove",{pokemonName:Q(e),targetPokemonName:Q(I)})),!0):!1}};r(GW,"ExposedMoveAttr");let qN=GW;const $6=r((R,e,I)=>!R.getTypes().includes(t.UNKNOWN),"unknownTypeCondition"),bn=Object.freeze({MoveEffectAttr:AE,MoveHeaderAttr:$a,MessageHeaderAttr:QC,AddBattlerTagAttr:OE,AddBattlerTagHeaderAttr:qa,BeakBlastHeaderAttr:JC,PreMoveMessageAttr:NL,PreUseInterruptAttr:$C,RespectAttackTypeImmunityAttr:qC,IgnoreOpponentStatStagesAttr:hN,HighCritAttr:re,CritOnlyAttr:XI,FixedDamageAttr:iI,UserHpDamageAttr:zC,TargetHalfHpDamageAttr:dN,MatchHpAttr:jC,CounterDamageAttr:SL,LevelDamageAttr:za,RandomLevelDamageAttr:AU,ModifiedDamageAttr:EU,SurviveDamageAttr:ja,SplashAttr:eU,CelebrateAttr:RU,RecoilAttr:HR,SacrificialAttr:BL,SacrificialAttrOnHit:An,HalfSacrificialAttr:En,AddSubstituteAttr:en,HealAttr:sR,PartyStatusCureAttr:pN,FlameBurstAttr:OU,SacrificialFullRestoreAttr:Rn,IgnoreWeatherTypeDebuffAttr:IU,WeatherHealAttr:On,PlantHealAttr:gN,SandHealAttr:tU,BoostHealAttr:LU,HealOnAllyAttr:NU,HitHealAttr:uR,IncrementMovePriorityAttr:SU,MultiHitAttr:VE,ChangeMultiHitTypeAttr:TU,WaterShurikenMultiHitTypeAttr:sU,StatusEffectAttr:yA,MultiStatusEffectAttr:In,PsychoShiftEffectAttr:aU,StealHeldItemChanceAttr:tn,RemoveHeldItemAttr:Ln,EatBerryAttr:XS,StealEatBerryAttr:Nn,HealStatusEffectAttr:ie,BypassSleepAttr:Sn,BypassBurnDamageReductionAttr:nU,WeatherChangeAttr:Gt,ClearWeatherAttr:rU,TerrainChangeAttr:Pt,ClearTerrainAttr:TL,OneHitKOAttr:sL,InstantChargeAttr:iU,WeatherInstantChargeAttr:mN,OverrideMoveEffectAttr:bt,DelayedAttackAttr:Tn,AwaitCombinedPledgeAttr:yN,StatStageChangeAttr:LA,SecretPowerAttr:CU,PostVictoryStatStageChangeAttr:UU,AcupressureStatStageChangeAttr:oU,GrowthStatStageChangeAttr:MU,CutHpStatStageBoostAttr:VN,OrderUpStatBoostAttr:DU,CopyStatsAttr:lU,InvertStatsAttr:_U,ResetStatsAttr:wN,SwapStatStagesAttr:vN,HpSplitAttr:GU,VariablePowerAttr:Ne,LessPPMorePowerAttr:PU,MovePowerMultiplierAttr:vE,BeatUpAttr:HU,DoublePowerChanceAttr:uU,ConsecutiveUsePowerMultiplierAttr:sn,ConsecutiveUseDoublePowerAttr:xN,ConsecutiveUseMultiBasePowerAttr:cU,WeightPowerAttr:an,ElectroBallPowerAttr:BU,GyroBallPowerAttr:KU,LowHpPowerAttr:nn,CompareWeightPowerAttr:rn,HpPowerAttr:ZN,OpponentHighHpPowerAttr:bN,FirstAttackDoublePowerAttr:Cn,TurnDamagedDoublePowerAttr:Un,MagnitudePowerAttr:fU,AntiSunlightPowerDecreaseAttr:on,FriendshipPowerAttr:aL,RageFistPowerAttr:FU,PositiveStatStagePowerAttr:Mn,PunishmentPowerAttr:YU,PresentPowerAttr:WU,WaterShurikenPowerAttr:hU,SpitUpPowerAttr:dU,SwallowHealAttr:pU,MultiHitPowerIncrementAttr:Dn,LastMoveDoublePowerAttr:ln,CombinedPledgePowerAttr:kN,CombinedPledgeStabBoostAttr:XN,RoundPowerAttr:gU,CueNextRoundAttr:mU,StatChangeBeforeDmgCalcAttr:yU,SpectralThiefAttr:VU,VariableAtkAttr:_n,TargetAtkUserAtkAttr:wU,DefAtkAttr:vU,VariableDefAttr:xU,DefDefAttr:QN,VariableAccuracyAttr:tt,ThunderAccuracyAttr:Gn,StormAccuracyAttr:JN,AlwaysHitMinimizeAttr:gO,ToxicAccuracyAttr:ZU,BlizzardAccuracyAttr:bU,VariableMoveCategoryAttr:AN,PhotonGeyserCategoryAttr:Pn,TeraMoveCategoryAttr:Hn,TeraBlastPowerAttr:kU,StatusCategoryOnAllyAttr:XU,ShellSideArmCategoryAttr:QU,VariableMoveTypeAttr:tO,FormChangeItemTypeAttr:un,TechnoBlastTypeAttr:JU,AuraWheelTypeAttr:$U,RagingBullTypeAttr:qU,IvyCudgelTypeAttr:zU,WeatherBallTypeAttr:jU,TerrainPulseTypeAttr:Ao,HiddenPowerTypeAttr:Eo,TeraBlastTypeAttr:eo,TeraStarstormTypeAttr:Ro,MatchUserTypeAttr:Oo,CombinedPledgeTypeAttr:$N,VariableMoveTypeMultiplierAttr:EN,NeutralDamageAgainstFlyingTypeMultiplierAttr:Io,IceNoEffectTypeAttr:to,FlyingTypeMultiplierAttr:Lo,VariableMoveTypeChartAttr:No,FreezeDryAttr:So,OneHitKOAccuracyAttr:KL,SheerColdAccuracyAttr:To,MissEffectAttr:jO,NoEffectAttr:AI,TypelessAttr:so,BypassRedirectAttr:nL,FrenzyAttr:rL,SemiInvulnerableAttr:PI,LeechSeedAttr:cn,FallDownAttr:Bn,GulpMissileTagAttr:Kn,JawLockAttr:ao,CurseAttr:no,LapseBattlerTagAttr:ro,RemoveBattlerTagAttr:HI,FlinchAttr:mE,ConfuseAttr:be,RechargeAttr:GO,TrapAttr:PO,ProtectAttr:HO,IgnoreAccuracyAttr:fn,FaintCountdownAttr:io,RemoveAllSubstitutesAttr:Co,HitsTagAttr:yO,HitsTagForDoubleDamageAttr:cR,AddArenaTagAttr:Se,RemoveArenaTagsAttr:Fn,AddArenaTrapTagAttr:iL,AddArenaTrapTagHitAttr:Yn,RemoveArenaTrapAttr:CL,RemoveScreensAttr:UL,SwapArenaTagsAttr:Uo,AddPledgeEffectAttr:QI,RevivalBlessingAttr:oo,ForceSwitchOutAttr:EO,ChillyReceptionAttr:Mo,RemoveTypeAttr:Wn,CopyTypeAttr:Do,CopyBiomeTypeAttr:lo,ChangeTypeAttr:hn,AddTypeAttr:dn,FirstMoveTypeAttr:_o,CallMoveAttr:QS,RandomMoveAttr:Go,RandomMovesetMoveAttr:pn,NaturePowerAttr:Po,CopyMoveAttr:gn,RepeatMoveAttr:Ho,ReducePpMoveAttr:mn,AttackReducePpMoveAttr:uo,MovesetCopyMoveAttr:co,SketchAttr:Bo,AbilityChangeAttr:yn,AbilityCopyAttr:Vn,AbilityGiveAttr:Ko,SwitchAbilitiesAttr:fo,SuppressAbilitiesAttr:wn,TransformAttr:Fo,SwapStatAttr:Yo,ShiftStatAttr:Wo,AverageStatsAttr:vn,MoneyAttr:xn,DestinyBondAttr:ho,AddBattlerTagIfBoostedAttr:po,StatusIfBoostedAttr:go,LastResortAttr:mo,VariableTargetAttr:Zn,AfterYouAttr:yo,ForceLastAttr:Vo,HitsSameTypeAttr:wo,ResistLastMoveTypeAttr:vo,ExposedMoveAttr:qN}),q6=[];function z6(){FA.push(new gA(E.NONE,t.NORMAL,G.STATUS,-1,-1,0,1),new u(E.POUND,t.NORMAL,G.PHYSICAL,40,100,35,-1,0,1),new u(E.KARATE_CHOP,t.FIGHTING,G.PHYSICAL,50,100,25,-1,0,1).attr(re),new u(E.DOUBLE_SLAP,t.NORMAL,G.PHYSICAL,15,85,10,-1,0,1).attr(VE),new u(E.COMET_PUNCH,t.NORMAL,G.PHYSICAL,18,85,15,-1,0,1).attr(VE).punchingMove(),new u(E.MEGA_PUNCH,t.NORMAL,G.PHYSICAL,80,85,20,-1,0,1).punchingMove(),new u(E.PAY_DAY,t.NORMAL,G.PHYSICAL,40,100,20,-1,0,1).attr(xn).makesContact(!1),new u(E.FIRE_PUNCH,t.FIRE,G.PHYSICAL,75,100,15,10,0,1).attr(yA,J.BURN).punchingMove(),new u(E.ICE_PUNCH,t.ICE,G.PHYSICAL,75,100,15,10,0,1).attr(yA,J.FREEZE).punchingMove(),new u(E.THUNDER_PUNCH,t.ELECTRIC,G.PHYSICAL,75,100,15,10,0,1).attr(yA,J.PARALYSIS).punchingMove(),new u(E.SCRATCH,t.NORMAL,G.PHYSICAL,40,100,35,-1,0,1),new u(E.VISE_GRIP,t.NORMAL,G.PHYSICAL,55,100,30,-1,0,1),new u(E.GUILLOTINE,t.NORMAL,G.PHYSICAL,200,30,5,-1,0,1).attr(sL).attr(KL),new iR(E.RAZOR_WIND,t.NORMAL,G.SPECIAL,80,100,10,-1,0,1).chargeText(_.t("moveTriggers:whippedUpAWhirlwind",{pokemonName:"{USER}"})).attr(re).windMove().target(AA.ALL_NEAR_ENEMIES),new gA(E.SWORDS_DANCE,t.NORMAL,-1,20,-1,0,1).attr(LA,[c.ATK],2,!0).danceMove(),new u(E.CUT,t.NORMAL,G.PHYSICAL,50,95,30,-1,0,1).slicingMove(),new u(E.GUST,t.FLYING,G.SPECIAL,40,100,35,-1,0,1).attr(cR,d.FLYING).windMove(),new u(E.WING_ATTACK,t.FLYING,G.PHYSICAL,60,100,35,-1,0,1),new sA(E.WHIRLWIND,t.NORMAL,-1,20,-1,-6,1).attr(EO,!1,ER.FORCE_SWITCH).ignoresSubstitute().hidesTarget().windMove().reflectable(),new iR(E.FLY,t.FLYING,G.PHYSICAL,90,95,15,-1,0,1).chargeText(_.t("moveTriggers:flewUpHigh",{pokemonName:"{USER}"})).chargeAttr(PI,d.FLYING).condition(nt),new u(E.BIND,t.NORMAL,G.PHYSICAL,15,85,20,-1,0,1).attr(PO,d.BIND),new u(E.SLAM,t.NORMAL,G.PHYSICAL,80,75,20,-1,0,1),new u(E.VINE_WHIP,t.GRASS,G.PHYSICAL,45,100,25,-1,0,1),new u(E.STOMP,t.NORMAL,G.PHYSICAL,65,100,20,30,0,1).attr(gO).attr(cR,d.MINIMIZED).attr(mE),new u(E.DOUBLE_KICK,t.FIGHTING,G.PHYSICAL,30,100,30,-1,0,1).attr(VE,Le._2),new u(E.MEGA_KICK,t.NORMAL,G.PHYSICAL,120,75,5,-1,0,1),new u(E.JUMP_KICK,t.FIGHTING,G.PHYSICAL,100,95,10,-1,0,1).attr(jO,at).attr(AI,at).condition(nt).recklessMove(),new u(E.ROLLING_KICK,t.FIGHTING,G.PHYSICAL,60,85,15,30,0,1).attr(mE),new sA(E.SAND_ATTACK,t.GROUND,100,15,-1,0,1).attr(LA,[c.ACC],-1).reflectable(),new u(E.HEADBUTT,t.NORMAL,G.PHYSICAL,70,100,15,30,0,1).attr(mE),new u(E.HORN_ATTACK,t.NORMAL,G.PHYSICAL,65,100,25,-1,0,1),new u(E.FURY_ATTACK,t.NORMAL,G.PHYSICAL,15,85,20,-1,0,1).attr(VE),new u(E.HORN_DRILL,t.NORMAL,G.PHYSICAL,200,30,5,-1,0,1).attr(sL).attr(KL),new u(E.TACKLE,t.NORMAL,G.PHYSICAL,40,100,35,-1,0,1),new u(E.BODY_SLAM,t.NORMAL,G.PHYSICAL,85,100,15,30,0,1).attr(gO).attr(cR,d.MINIMIZED).attr(yA,J.PARALYSIS),new u(E.WRAP,t.NORMAL,G.PHYSICAL,15,90,20,-1,0,1).attr(PO,d.WRAP),new u(E.TAKE_DOWN,t.NORMAL,G.PHYSICAL,90,85,20,-1,0,1).attr(HR).recklessMove(),new u(E.THRASH,t.NORMAL,G.PHYSICAL,120,100,10,-1,0,1).attr(rL).attr(jO,xI).attr(AI,xI).target(AA.RANDOM_NEAR_ENEMY),new u(E.DOUBLE_EDGE,t.NORMAL,G.PHYSICAL,120,100,15,-1,0,1).attr(HR,!1,.33).recklessMove(),new sA(E.TAIL_WHIP,t.NORMAL,100,30,-1,0,1).attr(LA,[c.DEF],-1).target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.POISON_STING,t.POISON,G.PHYSICAL,15,100,35,30,0,1).attr(yA,J.POISON).makesContact(!1),new u(E.TWINEEDLE,t.BUG,G.PHYSICAL,25,100,20,20,0,1).attr(VE,Le._2).attr(yA,J.POISON).makesContact(!1),new u(E.PIN_MISSILE,t.BUG,G.PHYSICAL,25,95,20,-1,0,1).attr(VE).makesContact(!1),new sA(E.LEER,t.NORMAL,100,30,-1,0,1).attr(LA,[c.DEF],-1).target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.BITE,t.DARK,G.PHYSICAL,60,100,25,30,0,1).attr(mE).bitingMove(),new sA(E.GROWL,t.NORMAL,100,40,-1,0,1).attr(LA,[c.ATK],-1).soundBased().target(AA.ALL_NEAR_ENEMIES).reflectable(),new sA(E.ROAR,t.NORMAL,-1,20,-1,-6,1).attr(EO,!1,ER.FORCE_SWITCH).soundBased().hidesTarget().reflectable(),new sA(E.SING,t.NORMAL,55,15,-1,0,1).attr(yA,J.SLEEP).soundBased().reflectable(),new sA(E.SUPERSONIC,t.NORMAL,55,20,-1,0,1).attr(be).soundBased().reflectable(),new u(E.SONIC_BOOM,t.NORMAL,G.SPECIAL,-1,90,20,-1,0,1).attr(iI,20),new sA(E.DISABLE,t.NORMAL,100,20,-1,0,1).attr(OE,d.DISABLED,!1,!0).condition((R,e,I)=>{const L=e.getLastXMoves(-1).find(N=>!N.virtual);return!SA(L)&&L.move!==E.NONE&&L.move!==E.STRUGGLE}).ignoresSubstitute().reflectable(),new u(E.ACID,t.POISON,G.SPECIAL,40,100,30,10,0,1).attr(LA,[c.SPDEF],-1).target(AA.ALL_NEAR_ENEMIES),new u(E.EMBER,t.FIRE,G.SPECIAL,40,100,25,10,0,1).attr(yA,J.BURN),new u(E.FLAMETHROWER,t.FIRE,G.SPECIAL,90,100,15,10,0,1).attr(yA,J.BURN),new sA(E.MIST,t.ICE,-1,30,-1,0,1).attr(Se,CA.MIST,5,!0).target(AA.USER_SIDE),new u(E.WATER_GUN,t.WATER,G.SPECIAL,40,100,25,-1,0,1),new u(E.HYDRO_PUMP,t.WATER,G.SPECIAL,110,80,5,-1,0,1),new u(E.SURF,t.WATER,G.SPECIAL,90,100,15,-1,0,1).target(AA.ALL_NEAR_OTHERS).attr(cR,d.UNDERWATER).attr(Kn),new u(E.ICE_BEAM,t.ICE,G.SPECIAL,90,100,10,10,0,1).attr(yA,J.FREEZE),new u(E.BLIZZARD,t.ICE,G.SPECIAL,110,70,5,10,0,1).attr(bU).attr(yA,J.FREEZE).windMove().target(AA.ALL_NEAR_ENEMIES),new u(E.PSYBEAM,t.PSYCHIC,G.SPECIAL,65,100,20,10,0,1).attr(be),new u(E.BUBBLE_BEAM,t.WATER,G.SPECIAL,65,100,20,10,0,1).attr(LA,[c.SPD],-1),new u(E.AURORA_BEAM,t.ICE,G.SPECIAL,65,100,20,10,0,1).attr(LA,[c.ATK],-1),new u(E.HYPER_BEAM,t.NORMAL,G.SPECIAL,150,90,5,-1,0,1).attr(GO),new u(E.PECK,t.FLYING,G.PHYSICAL,35,100,35,-1,0,1),new u(E.DRILL_PECK,t.FLYING,G.PHYSICAL,80,100,20,-1,0,1),new u(E.SUBMISSION,t.FIGHTING,G.PHYSICAL,80,80,20,-1,0,1).attr(HR).recklessMove(),new u(E.LOW_KICK,t.FIGHTING,G.PHYSICAL,-1,100,20,-1,0,1).attr(an),new u(E.COUNTER,t.FIGHTING,G.PHYSICAL,-1,100,20,-1,-5,1).attr(SL,R=>R.category===G.PHYSICAL,2).target(AA.ATTACKER),new u(E.SEISMIC_TOSS,t.FIGHTING,G.PHYSICAL,-1,100,20,-1,0,1).attr(za),new u(E.STRENGTH,t.NORMAL,G.PHYSICAL,80,100,15,-1,0,1),new u(E.ABSORB,t.GRASS,G.SPECIAL,20,100,25,-1,0,1).attr(uR).triageMove(),new u(E.MEGA_DRAIN,t.GRASS,G.SPECIAL,40,100,15,-1,0,1).attr(uR).triageMove(),new sA(E.LEECH_SEED,t.GRASS,90,10,-1,0,1).attr(cn).condition((R,e,I)=>!e.getTag(d.SEEDED)&&!e.isOfType(t.GRASS)).reflectable(),new gA(E.GROWTH,t.NORMAL,-1,20,-1,0,1).attr(MU),new u(E.RAZOR_LEAF,t.GRASS,G.PHYSICAL,55,95,25,-1,0,1).attr(re).makesContact(!1).slicingMove().target(AA.ALL_NEAR_ENEMIES),new iR(E.SOLAR_BEAM,t.GRASS,G.SPECIAL,120,100,10,-1,0,1).chargeText(_.t("moveTriggers:tookInSunlight",{pokemonName:"{USER}"})).chargeAttr(mN,[Z.SUNNY,Z.HARSH_SUN]).attr(on),new sA(E.POISON_POWDER,t.POISON,75,35,-1,0,1).attr(yA,J.POISON).powderMove().reflectable(),new sA(E.STUN_SPORE,t.GRASS,75,30,-1,0,1).attr(yA,J.PARALYSIS).powderMove().reflectable(),new sA(E.SLEEP_POWDER,t.GRASS,75,15,-1,0,1).attr(yA,J.SLEEP).powderMove().reflectable(),new u(E.PETAL_DANCE,t.GRASS,G.SPECIAL,120,100,10,-1,0,1).attr(rL).attr(jO,xI).attr(AI,xI).makesContact().danceMove().target(AA.RANDOM_NEAR_ENEMY),new sA(E.STRING_SHOT,t.BUG,95,40,-1,0,1).attr(LA,[c.SPD],-2).target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.DRAGON_RAGE,t.DRAGON,G.SPECIAL,-1,100,10,-1,0,1).attr(iI,40),new u(E.FIRE_SPIN,t.FIRE,G.SPECIAL,35,85,15,-1,0,1).attr(PO,d.FIRE_SPIN),new u(E.THUNDER_SHOCK,t.ELECTRIC,G.SPECIAL,40,100,30,10,0,1).attr(yA,J.PARALYSIS),new u(E.THUNDERBOLT,t.ELECTRIC,G.SPECIAL,90,100,15,10,0,1).attr(yA,J.PARALYSIS),new sA(E.THUNDER_WAVE,t.ELECTRIC,90,20,-1,0,1).attr(yA,J.PARALYSIS).attr(qC).reflectable(),new u(E.THUNDER,t.ELECTRIC,G.SPECIAL,110,70,10,30,0,1).attr(yA,J.PARALYSIS).attr(Gn).attr(yO,d.FLYING),new u(E.ROCK_THROW,t.ROCK,G.PHYSICAL,50,90,15,-1,0,1).makesContact(!1),new u(E.EARTHQUAKE,t.GROUND,G.PHYSICAL,100,100,10,-1,0,1).attr(cR,d.UNDERGROUND).attr(vE,(R,e,I)=>T.arena.getTerrainType()===bA.GRASSY&&e.isGrounded()?.5:1).makesContact(!1).target(AA.ALL_NEAR_OTHERS),new u(E.FISSURE,t.GROUND,G.PHYSICAL,200,30,5,-1,0,1).attr(sL).attr(KL).attr(yO,d.UNDERGROUND).makesContact(!1),new iR(E.DIG,t.GROUND,G.PHYSICAL,80,100,10,-1,0,1).chargeText(_.t("moveTriggers:dugAHole",{pokemonName:"{USER}"})).chargeAttr(PI,d.UNDERGROUND),new sA(E.TOXIC,t.POISON,90,10,-1,0,1).attr(yA,J.TOXIC).attr(ZU).reflectable(),new u(E.CONFUSION,t.PSYCHIC,G.SPECIAL,50,100,25,10,0,1).attr(be),new u(E.PSYCHIC,t.PSYCHIC,G.SPECIAL,90,100,10,10,0,1).attr(LA,[c.SPDEF],-1),new sA(E.HYPNOSIS,t.PSYCHIC,60,20,-1,0,1).attr(yA,J.SLEEP).reflectable(),new gA(E.MEDITATE,t.PSYCHIC,-1,40,-1,0,1).attr(LA,[c.ATK],1,!0),new gA(E.AGILITY,t.PSYCHIC,-1,30,-1,0,1).attr(LA,[c.SPD],2,!0),new u(E.QUICK_ATTACK,t.NORMAL,G.PHYSICAL,40,100,30,-1,1,1),new u(E.RAGE,t.NORMAL,G.PHYSICAL,20,100,20,-1,0,1).partial(),new gA(E.TELEPORT,t.PSYCHIC,-1,20,-1,-6,1).attr(EO,!0).hidesUser(),new u(E.NIGHT_SHADE,t.GHOST,G.SPECIAL,-1,100,15,-1,0,1).attr(za),new sA(E.MIMIC,t.NORMAL,-1,10,-1,0,1).attr(co).ignoresSubstitute(),new sA(E.SCREECH,t.NORMAL,85,40,-1,0,1).attr(LA,[c.DEF],-2).soundBased().reflectable(),new gA(E.DOUBLE_TEAM,t.NORMAL,-1,15,-1,0,1).attr(LA,[c.EVA],1,!0),new gA(E.RECOVER,t.NORMAL,-1,5,-1,0,1).attr(sR,.5).triageMove(),new gA(E.HARDEN,t.NORMAL,-1,30,-1,0,1).attr(LA,[c.DEF],1,!0),new gA(E.MINIMIZE,t.NORMAL,-1,10,-1,0,1).attr(OE,d.MINIMIZED,!0,!1).attr(LA,[c.EVA],2,!0),new sA(E.SMOKESCREEN,t.NORMAL,100,20,-1,0,1).attr(LA,[c.ACC],-1).reflectable(),new sA(E.CONFUSE_RAY,t.GHOST,100,10,-1,0,1).attr(be).reflectable(),new gA(E.WITHDRAW,t.WATER,-1,40,-1,0,1).attr(LA,[c.DEF],1,!0),new gA(E.DEFENSE_CURL,t.NORMAL,-1,40,-1,0,1).attr(LA,[c.DEF],1,!0),new gA(E.BARRIER,t.PSYCHIC,-1,20,-1,0,1).attr(LA,[c.DEF],2,!0),new sA(E.LIGHT_SCREEN,t.PSYCHIC,-1,30,-1,0,1).attr(Se,CA.LIGHT_SCREEN,5,!0).target(AA.USER_SIDE),new gA(E.HAZE,t.ICE,-1,30,-1,0,1).ignoresSubstitute().attr(wN,!0),new sA(E.REFLECT,t.PSYCHIC,-1,20,-1,0,1).attr(Se,CA.REFLECT,5,!0).target(AA.USER_SIDE),new gA(E.FOCUS_ENERGY,t.NORMAL,-1,30,-1,0,1).attr(OE,d.CRIT_BOOST,!0,!0),new u(E.BIDE,t.NORMAL,G.PHYSICAL,-1,-1,10,-1,1,1).target(AA.USER).unimplemented(),new gA(E.METRONOME,t.NORMAL,-1,10,-1,0,1).attr(Go,m6),new sA(E.MIRROR_MOVE,t.FLYING,-1,20,-1,0,1).attr(gn,!0,v6),new u(E.SELF_DESTRUCT,t.NORMAL,G.PHYSICAL,200,100,5,-1,0,1).attr(BL).makesContact(!1).condition(Ei).target(AA.ALL_NEAR_OTHERS),new u(E.EGG_BOMB,t.NORMAL,G.PHYSICAL,100,75,10,-1,0,1).makesContact(!1).ballBombMove(),new u(E.LICK,t.GHOST,G.PHYSICAL,30,100,30,30,0,1).attr(yA,J.PARALYSIS),new u(E.SMOG,t.POISON,G.SPECIAL,30,70,20,40,0,1).attr(yA,J.POISON),new u(E.SLUDGE,t.POISON,G.SPECIAL,65,100,20,30,0,1).attr(yA,J.POISON),new u(E.BONE_CLUB,t.GROUND,G.PHYSICAL,65,85,20,10,0,1).attr(mE).makesContact(!1),new u(E.FIRE_BLAST,t.FIRE,G.SPECIAL,110,85,5,10,0,1).attr(yA,J.BURN),new u(E.WATERFALL,t.WATER,G.PHYSICAL,80,100,15,20,0,1).attr(mE),new u(E.CLAMP,t.WATER,G.PHYSICAL,35,85,15,-1,0,1).attr(PO,d.CLAMP),new u(E.SWIFT,t.NORMAL,G.SPECIAL,60,-1,20,-1,0,1).target(AA.ALL_NEAR_ENEMIES),new iR(E.SKULL_BASH,t.NORMAL,G.PHYSICAL,130,100,10,-1,0,1).chargeText(_.t("moveTriggers:loweredItsHead",{pokemonName:"{USER}"})).chargeAttr(LA,[c.DEF],1,!0),new u(E.SPIKE_CANNON,t.NORMAL,G.PHYSICAL,20,100,15,-1,0,1).attr(VE).makesContact(!1),new u(E.CONSTRICT,t.NORMAL,G.PHYSICAL,10,100,35,10,0,1).attr(LA,[c.SPD],-1),new gA(E.AMNESIA,t.PSYCHIC,-1,20,-1,0,1).attr(LA,[c.SPDEF],2,!0),new sA(E.KINESIS,t.PSYCHIC,80,15,-1,0,1).attr(LA,[c.ACC],-1).reflectable(),new gA(E.SOFT_BOILED,t.NORMAL,-1,5,-1,0,1).attr(sR,.5).triageMove(),new u(E.HIGH_JUMP_KICK,t.FIGHTING,G.PHYSICAL,130,90,10,-1,0,1).attr(jO,at).attr(AI,at).condition(nt).recklessMove(),new sA(E.GLARE,t.NORMAL,100,30,-1,0,1).attr(yA,J.PARALYSIS).reflectable(),new u(E.DREAM_EATER,t.PSYCHIC,G.SPECIAL,100,100,15,-1,0,1).attr(uR).condition(l_).triageMove(),new sA(E.POISON_GAS,t.POISON,90,40,-1,0,1).attr(yA,J.POISON).target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.BARRAGE,t.NORMAL,G.PHYSICAL,15,85,20,-1,0,1).attr(VE).makesContact(!1).ballBombMove(),new u(E.LEECH_LIFE,t.BUG,G.PHYSICAL,80,100,10,-1,0,1).attr(uR).triageMove(),new sA(E.LOVELY_KISS,t.NORMAL,75,10,-1,0,1).attr(yA,J.SLEEP).reflectable(),new iR(E.SKY_ATTACK,t.FLYING,G.PHYSICAL,140,90,5,30,0,1).chargeText(_.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).attr(re).attr(mE).makesContact(!1),new sA(E.TRANSFORM,t.NORMAL,-1,10,-1,0,1).attr(Fo).condition((R,e,I)=>!e.getTag(d.SUBSTITUTE)).condition((R,e,I)=>!e.summonData.illusion&&!R.summonData.illusion).condition((R,e,I)=>!e.getTag(d.SUBSTITUTE)&&!R.fusionSpecies&&!e.fusionSpecies).ignoresProtect().edgeCase(),new u(E.BUBBLE,t.WATER,G.SPECIAL,40,100,30,10,0,1).attr(LA,[c.SPD],-1).target(AA.ALL_NEAR_ENEMIES),new u(E.DIZZY_PUNCH,t.NORMAL,G.PHYSICAL,70,100,10,20,0,1).attr(be).punchingMove(),new sA(E.SPORE,t.GRASS,100,15,-1,0,1).attr(yA,J.SLEEP).powderMove().reflectable(),new sA(E.FLASH,t.NORMAL,100,20,-1,0,1).attr(LA,[c.ACC],-1).reflectable(),new u(E.PSYWAVE,t.PSYCHIC,G.SPECIAL,-1,100,15,-1,0,1).attr(AU),new gA(E.SPLASH,t.NORMAL,-1,40,-1,0,1).attr(eU).condition(nt),new gA(E.ACID_ARMOR,t.POISON,-1,20,-1,0,1).attr(LA,[c.DEF],2,!0),new u(E.CRABHAMMER,t.WATER,G.PHYSICAL,100,90,10,-1,0,1).attr(re),new u(E.EXPLOSION,t.NORMAL,G.PHYSICAL,250,100,5,-1,0,1).condition(Ei).attr(BL).makesContact(!1).target(AA.ALL_NEAR_OTHERS),new u(E.FURY_SWIPES,t.NORMAL,G.PHYSICAL,18,80,15,-1,0,1).attr(VE),new u(E.BONEMERANG,t.GROUND,G.PHYSICAL,50,90,10,-1,0,1).attr(VE,Le._2).makesContact(!1),new gA(E.REST,t.PSYCHIC,-1,5,-1,0,1).attr(yA,J.SLEEP,!0,3,!0).attr(sR,1,!0).condition((R,e,I)=>!R.isFullHp()&&R.canSetStatus(J.SLEEP,!0,!0,R)).triageMove(),new u(E.ROCK_SLIDE,t.ROCK,G.PHYSICAL,75,90,10,30,0,1).attr(mE).makesContact(!1).target(AA.ALL_NEAR_ENEMIES),new u(E.HYPER_FANG,t.NORMAL,G.PHYSICAL,80,90,15,10,0,1).attr(mE).bitingMove(),new gA(E.SHARPEN,t.NORMAL,-1,30,-1,0,1).attr(LA,[c.ATK],1,!0),new gA(E.CONVERSION,t.NORMAL,-1,30,-1,0,1).attr(_o),new u(E.TRI_ATTACK,t.NORMAL,G.SPECIAL,80,100,10,20,0,1).attr(In,[J.BURN,J.FREEZE,J.PARALYSIS]),new u(E.SUPER_FANG,t.NORMAL,G.PHYSICAL,-1,90,10,-1,0,1).attr(dN),new u(E.SLASH,t.NORMAL,G.PHYSICAL,70,100,20,-1,0,1).attr(re).slicingMove(),new gA(E.SUBSTITUTE,t.NORMAL,-1,10,-1,0,1).attr(en,.25,!1),new u(E.STRUGGLE,t.NORMAL,G.PHYSICAL,50,-1,1,-1,0,1).attr(HR,!0,.25,!0).attr(so).target(AA.RANDOM_NEAR_ENEMY),new sA(E.SKETCH,t.NORMAL,-1,1,-1,0,2).ignoresSubstitute().attr(Bo),new u(E.TRIPLE_KICK,t.FIGHTING,G.PHYSICAL,10,90,10,-1,0,2).attr(VE,Le._3).attr(Dn,3).checkAllHits(),new u(E.THIEF,t.DARK,G.PHYSICAL,60,100,25,-1,0,2).attr(tn,.3).edgeCase(),new sA(E.SPIDER_WEB,t.BUG,-1,10,-1,0,2).condition(Ri).attr(OE,d.TRAPPED,!1,!0,1).reflectable(),new sA(E.MIND_READER,t.NORMAL,-1,5,-1,0,2).attr(fn),new sA(E.NIGHTMARE,t.GHOST,100,15,-1,0,2).attr(OE,d.NIGHTMARE).condition(l_),new u(E.FLAME_WHEEL,t.FIRE,G.PHYSICAL,60,100,25,10,0,2).attr(ie,!0,J.FREEZE).attr(yA,J.BURN),new u(E.SNORE,t.NORMAL,G.SPECIAL,50,100,15,30,0,2).attr(Sn).attr(mE).condition(Q2).soundBased(),new sA(E.CURSE,t.GHOST,-1,10,-1,0,2).attr(no).ignoresSubstitute().ignoresProtect().target(AA.CURSE),new u(E.FLAIL,t.NORMAL,G.PHYSICAL,-1,100,15,-1,0,2).attr(nn),new sA(E.CONVERSION_2,t.NORMAL,-1,30,-1,0,2).attr(vo).ignoresSubstitute().partial(),new u(E.AEROBLAST,t.FLYING,G.SPECIAL,100,95,5,-1,0,2).windMove().attr(re),new sA(E.COTTON_SPORE,t.GRASS,100,40,-1,0,2).attr(LA,[c.SPD],-2).powderMove().target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.REVERSAL,t.FIGHTING,G.PHYSICAL,-1,100,15,-1,0,2).attr(nn),new sA(E.SPITE,t.GHOST,100,10,-1,0,2).ignoresSubstitute().attr(mn,4).reflectable(),new u(E.POWDER_SNOW,t.ICE,G.SPECIAL,40,100,25,10,0,2).attr(yA,J.FREEZE).target(AA.ALL_NEAR_ENEMIES),new gA(E.PROTECT,t.NORMAL,-1,10,-1,4,2).attr(HO).condition(JR),new u(E.MACH_PUNCH,t.FIGHTING,G.PHYSICAL,40,100,30,-1,1,2).punchingMove(),new sA(E.SCARY_FACE,t.NORMAL,100,10,-1,0,2).attr(LA,[c.SPD],-2).reflectable(),new u(E.FEINT_ATTACK,t.DARK,G.PHYSICAL,60,-1,20,-1,0,2),new sA(E.SWEET_KISS,t.FAIRY,75,10,-1,0,2).attr(be).reflectable(),new gA(E.BELLY_DRUM,t.NORMAL,-1,10,-1,0,2).attr(VN,[c.ATK],12,2,R=>{T.phaseManager.queueMessage(_.t("moveTriggers:cutOwnHpAndMaximizedStat",{pokemonName:Q(R),statName:_.t(aR(c.ATK))}))}),new u(E.SLUDGE_BOMB,t.POISON,G.SPECIAL,90,100,10,30,0,2).attr(yA,J.POISON).ballBombMove(),new u(E.MUD_SLAP,t.GROUND,G.SPECIAL,20,100,10,100,0,2).attr(LA,[c.ACC],-1),new u(E.OCTAZOOKA,t.WATER,G.SPECIAL,65,85,10,50,0,2).attr(LA,[c.ACC],-1).ballBombMove(),new sA(E.SPIKES,t.GROUND,-1,20,-1,0,2).attr(iL,CA.SPIKES).target(AA.ENEMY_SIDE).reflectable(),new u(E.ZAP_CANNON,t.ELECTRIC,G.SPECIAL,120,50,5,100,0,2).attr(yA,J.PARALYSIS).ballBombMove(),new sA(E.FORESIGHT,t.NORMAL,-1,40,-1,0,2).attr(qN,d.IGNORE_GHOST).ignoresSubstitute().reflectable(),new gA(E.DESTINY_BOND,t.GHOST,-1,5,-1,0,2).ignoresProtect().attr(ho).condition((R,e,I)=>{const L=R.getLastXMoves(1);return L.length===0||L[0].move!==I.id||L[0].result!==De.SUCCESS}),new sA(E.PERISH_SONG,t.NORMAL,-1,5,-1,0,2).attr(io).ignoresProtect().soundBased().condition(D_).target(AA.ALL),new u(E.ICY_WIND,t.ICE,G.SPECIAL,55,95,15,100,0,2).attr(LA,[c.SPD],-1).windMove().target(AA.ALL_NEAR_ENEMIES),new gA(E.DETECT,t.FIGHTING,-1,5,-1,4,2).attr(HO).condition(JR),new u(E.BONE_RUSH,t.GROUND,G.PHYSICAL,25,90,10,-1,0,2).attr(VE).makesContact(!1),new sA(E.LOCK_ON,t.NORMAL,-1,5,-1,0,2).attr(fn),new u(E.OUTRAGE,t.DRAGON,G.PHYSICAL,120,100,10,-1,0,2).attr(rL).attr(jO,xI).attr(AI,xI).target(AA.RANDOM_NEAR_ENEMY),new sA(E.SANDSTORM,t.ROCK,-1,10,-1,0,2).attr(Gt,Z.SANDSTORM).target(AA.BOTH_SIDES),new u(E.GIGA_DRAIN,t.GRASS,G.SPECIAL,75,100,10,-1,0,2).attr(uR).triageMove(),new gA(E.ENDURE,t.NORMAL,-1,10,-1,4,2).attr(HO,d.ENDURING).condition(JR),new sA(E.CHARM,t.FAIRY,100,20,-1,0,2).attr(LA,[c.ATK],-2).reflectable(),new u(E.ROLLOUT,t.ROCK,G.PHYSICAL,30,90,20,-1,0,2).partial().attr(xN,5,!0,!0,E.DEFENSE_CURL),new u(E.FALSE_SWIPE,t.NORMAL,G.PHYSICAL,40,100,40,-1,0,2).attr(ja),new sA(E.SWAGGER,t.NORMAL,85,15,-1,0,2).attr(LA,[c.ATK],2).attr(be).reflectable(),new gA(E.MILK_DRINK,t.NORMAL,-1,5,-1,0,2).attr(sR,.5).triageMove(),new u(E.SPARK,t.ELECTRIC,G.PHYSICAL,65,100,20,30,0,2).attr(yA,J.PARALYSIS),new u(E.FURY_CUTTER,t.BUG,G.PHYSICAL,40,95,20,-1,0,2).attr(xN,3,!0).slicingMove(),new u(E.STEEL_WING,t.STEEL,G.PHYSICAL,70,90,25,10,0,2).attr(LA,[c.DEF],1,!0),new sA(E.MEAN_LOOK,t.NORMAL,-1,5,-1,0,2).condition(Ri).attr(OE,d.TRAPPED,!1,!0,1).reflectable(),new sA(E.ATTRACT,t.NORMAL,100,15,-1,0,2).attr(OE,d.INFATUATED).ignoresSubstitute().condition((R,e,I)=>R.isOppositeGender(e)).reflectable(),new gA(E.SLEEP_TALK,t.NORMAL,-1,10,-1,0,2).attr(Sn).attr(pn,V6,!1).condition(Q2).target(AA.NEAR_ENEMY),new sA(E.HEAL_BELL,t.NORMAL,-1,5,-1,0,2).attr(pN,_.t("moveTriggers:bellChimed"),O.SOUNDPROOF).soundBased().target(AA.PARTY),new u(E.RETURN,t.NORMAL,G.PHYSICAL,-1,100,20,-1,0,2).attr(aL),new u(E.PRESENT,t.NORMAL,G.PHYSICAL,-1,90,15,-1,0,2).attr(WU).makesContact(!1),new u(E.FRUSTRATION,t.NORMAL,G.PHYSICAL,-1,100,20,-1,0,2).attr(aL,!0),new sA(E.SAFEGUARD,t.NORMAL,-1,25,-1,0,2).target(AA.USER_SIDE).attr(Se,CA.SAFEGUARD,5,!0,!0),new sA(E.PAIN_SPLIT,t.NORMAL,-1,20,-1,0,2).attr(GU).condition(D_),new u(E.SACRED_FIRE,t.FIRE,G.PHYSICAL,100,95,5,50,0,2).attr(ie,!0,J.FREEZE).attr(yA,J.BURN).makesContact(!1),new u(E.MAGNITUDE,t.GROUND,G.PHYSICAL,-1,100,30,-1,0,2).attr(NL,k6).attr(fU).attr(vE,(R,e,I)=>T.arena.getTerrainType()===bA.GRASSY&&e.isGrounded()?.5:1).attr(cR,d.UNDERGROUND).makesContact(!1).target(AA.ALL_NEAR_OTHERS),new u(E.DYNAMIC_PUNCH,t.FIGHTING,G.PHYSICAL,100,50,5,100,0,2).attr(be).punchingMove(),new u(E.MEGAHORN,t.BUG,G.PHYSICAL,120,85,10,-1,0,2),new u(E.DRAGON_BREATH,t.DRAGON,G.SPECIAL,60,100,20,30,0,2).attr(yA,J.PARALYSIS),new gA(E.BATON_PASS,t.NORMAL,-1,40,-1,0,2).attr(EO,!0,ER.BATON_PASS).condition(ei).hidesUser(),new sA(E.ENCORE,t.NORMAL,100,5,-1,0,2).attr(OE,d.ENCORE,!1,!0).ignoresSubstitute().condition((R,e,I)=>new Oa(R.id).canAdd(e)).reflectable(),new u(E.PURSUIT,t.DARK,G.PHYSICAL,40,100,20,-1,0,2).partial(),new u(E.RAPID_SPIN,t.NORMAL,G.PHYSICAL,50,100,40,100,0,2).attr(LA,[c.SPD],1,!0).attr(HI,[d.BIND,d.WRAP,d.FIRE_SPIN,d.WHIRLPOOL,d.CLAMP,d.SAND_TOMB,d.MAGMA_STORM,d.SNAP_TRAP,d.THUNDER_CAGE,d.SEEDED,d.INFESTATION],!0).attr(CL),new sA(E.SWEET_SCENT,t.NORMAL,100,20,-1,0,2).attr(LA,[c.EVA],-2).target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.IRON_TAIL,t.STEEL,G.PHYSICAL,100,75,15,30,0,2).attr(LA,[c.DEF],-1),new u(E.METAL_CLAW,t.STEEL,G.PHYSICAL,50,95,35,10,0,2).attr(LA,[c.ATK],1,!0),new u(E.VITAL_THROW,t.FIGHTING,G.PHYSICAL,70,-1,10,-1,-1,2),new gA(E.MORNING_SUN,t.NORMAL,-1,5,-1,0,2).attr(gN).triageMove(),new gA(E.SYNTHESIS,t.GRASS,-1,5,-1,0,2).attr(gN).triageMove(),new gA(E.MOONLIGHT,t.FAIRY,-1,5,-1,0,2).attr(gN).triageMove(),new u(E.HIDDEN_POWER,t.NORMAL,G.SPECIAL,60,100,15,-1,0,2).attr(Eo),new u(E.CROSS_CHOP,t.FIGHTING,G.PHYSICAL,100,80,5,-1,0,2).attr(re),new u(E.TWISTER,t.DRAGON,G.SPECIAL,40,100,20,20,0,2).attr(cR,d.FLYING).attr(mE).windMove().target(AA.ALL_NEAR_ENEMIES),new sA(E.RAIN_DANCE,t.WATER,-1,5,-1,0,2).attr(Gt,Z.RAIN).target(AA.BOTH_SIDES),new sA(E.SUNNY_DAY,t.FIRE,-1,5,-1,0,2).attr(Gt,Z.SUNNY).target(AA.BOTH_SIDES),new u(E.CRUNCH,t.DARK,G.PHYSICAL,80,100,15,20,0,2).attr(LA,[c.DEF],-1).bitingMove(),new u(E.MIRROR_COAT,t.PSYCHIC,G.SPECIAL,-1,100,20,-1,-5,2).attr(SL,R=>R.category===G.SPECIAL,2).target(AA.ATTACKER),new sA(E.PSYCH_UP,t.NORMAL,-1,10,-1,0,2).ignoresSubstitute().attr(lU),new u(E.EXTREME_SPEED,t.NORMAL,G.PHYSICAL,80,100,5,-1,2,2),new u(E.ANCIENT_POWER,t.ROCK,G.SPECIAL,60,100,5,10,0,2).attr(LA,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],1,!0),new u(E.SHADOW_BALL,t.GHOST,G.SPECIAL,80,100,15,20,0,2).attr(LA,[c.SPDEF],-1).ballBombMove(),new u(E.FUTURE_SIGHT,t.PSYCHIC,G.SPECIAL,120,100,10,-1,0,2).partial().ignoresProtect().attr(Tn,CA.FUTURE_SIGHT,et.FUTURE_SIGHT_CHARGING,_.t("moveTriggers:foresawAnAttack",{pokemonName:"{USER}"})),new u(E.ROCK_SMASH,t.FIGHTING,G.PHYSICAL,40,100,15,50,0,2).attr(LA,[c.DEF],-1),new u(E.WHIRLPOOL,t.WATER,G.SPECIAL,35,85,15,-1,0,2).attr(PO,d.WHIRLPOOL).attr(cR,d.UNDERWATER),new u(E.BEAT_UP,t.DARK,G.PHYSICAL,-1,100,10,-1,0,2).attr(VE,Le.BEAT_UP).attr(HU).makesContact(!1),new u(E.FAKE_OUT,t.NORMAL,G.PHYSICAL,40,100,10,100,3,3).attr(mE).condition(new hT),new u(E.UPROAR,t.NORMAL,G.SPECIAL,90,100,10,-1,0,3).soundBased().target(AA.RANDOM_NEAR_ENEMY).partial(),new gA(E.STOCKPILE,t.NORMAL,-1,20,-1,0,3).condition(R=>{var e;return(((e=R.getTag(gL))==null?void 0:e.stockpiledCount)??0)<3}).attr(OE,d.STOCKPILING,!0),new u(E.SPIT_UP,t.NORMAL,G.SPECIAL,-1,-1,10,-1,0,3).condition(X2).attr(dU,100).attr(HI,[d.STOCKPILING],!0),new gA(E.SWALLOW,t.NORMAL,-1,10,-1,0,3).condition(X2).attr(pU).attr(HI,[d.STOCKPILING],!0).triageMove(),new u(E.HEAT_WAVE,t.FIRE,G.SPECIAL,95,90,10,10,0,3).attr(ie,!0,J.FREEZE).attr(yA,J.BURN).windMove().target(AA.ALL_NEAR_ENEMIES),new sA(E.HAIL,t.ICE,-1,10,-1,0,3).attr(Gt,Z.HAIL).target(AA.BOTH_SIDES),new sA(E.TORMENT,t.DARK,100,15,-1,0,3).ignoresSubstitute().edgeCase().attr(OE,d.TORMENT,!1,!0,1).reflectable(),new sA(E.FLATTER,t.DARK,100,15,-1,0,3).attr(LA,[c.SPATK],1).attr(be).reflectable(),new sA(E.WILL_O_WISP,t.FIRE,85,15,-1,0,3).attr(yA,J.BURN).reflectable(),new sA(E.MEMENTO,t.DARK,100,10,-1,0,3).attr(An).attr(LA,[c.ATK,c.SPATK],-2),new u(E.FACADE,t.NORMAL,G.PHYSICAL,70,100,20,-1,0,3).attr(vE,(R,e,I)=>R.status&&(R.status.effect===J.BURN||R.status.effect===J.POISON||R.status.effect===J.TOXIC||R.status.effect===J.PARALYSIS)?2:1).attr(nU),new u(E.FOCUS_PUNCH,t.FIGHTING,G.PHYSICAL,150,100,20,-1,-3,3).attr(QC,(R,e)=>_.t("moveTriggers:isTighteningFocus",{pokemonName:Q(R)})).attr($C,(R,e,I)=>_.t("moveTriggers:lostFocus",{pokemonName:Q(R)}),R=>!!R.turnData.attacksReceived.find(e=>e.damage)).punchingMove(),new u(E.SMELLING_SALTS,t.NORMAL,G.PHYSICAL,70,100,10,-1,0,3).attr(vE,(R,e,I)=>{var L;return((L=e.status)==null?void 0:L.effect)===J.PARALYSIS?2:1}).attr(ie,!0,J.PARALYSIS),new gA(E.FOLLOW_ME,t.NORMAL,-1,20,-1,2,3).attr(OE,d.CENTER_OF_ATTENTION,!0),new sA(E.NATURE_POWER,t.NORMAL,-1,20,-1,0,3).attr(Po),new gA(E.CHARGE,t.ELECTRIC,-1,20,-1,0,3).attr(LA,[c.SPDEF],1,!0).attr(OE,d.CHARGED,!0,!1),new sA(E.TAUNT,t.DARK,100,20,-1,0,3).ignoresSubstitute().attr(OE,d.TAUNT,!1,!0,4).reflectable(),new sA(E.HELPING_HAND,t.NORMAL,-1,20,-1,5,3).attr(OE,d.HELPING_HAND).ignoresSubstitute().target(AA.NEAR_ALLY).condition(CN),new sA(E.TRICK,t.PSYCHIC,100,10,-1,0,3).unimplemented(),new sA(E.ROLE_PLAY,t.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(Vn),new gA(E.WISH,t.NORMAL,-1,10,-1,0,3).triageMove().attr(Se,CA.WISH,2,!0),new gA(E.ASSIST,t.NORMAL,-1,20,-1,0,3).attr(pn,y6,!0),new gA(E.INGRAIN,t.GRASS,-1,20,-1,0,3).attr(OE,d.INGRAIN,!0,!0).attr(OE,d.IGNORE_FLYING,!0,!0).attr(HI,[d.FLOATING],!0),new u(E.SUPERPOWER,t.FIGHTING,G.PHYSICAL,120,100,5,-1,0,3).attr(LA,[c.ATK,c.DEF],-1,!0),new gA(E.MAGIC_COAT,t.PSYCHIC,-1,15,-1,4,3).attr(OE,d.MAGIC_COAT,!0,!0,0).condition(JR).edgeCase(),new gA(E.RECYCLE,t.NORMAL,-1,10,-1,0,3).unimplemented(),new u(E.REVENGE,t.FIGHTING,G.PHYSICAL,60,100,10,-1,-4,3).attr(Un),new u(E.BRICK_BREAK,t.FIGHTING,G.PHYSICAL,75,100,15,-1,0,3).attr(UL),new sA(E.YAWN,t.NORMAL,-1,10,-1,0,3).attr(OE,d.DROWSY,!1,!0).condition((R,e,I)=>!e.status&&!e.isSafeguarded(R)).reflectable(),new u(E.KNOCK_OFF,t.DARK,G.PHYSICAL,65,100,20,-1,0,3).attr(vE,(R,e,I)=>e.getHeldItems().filter(L=>L.isTransferable).length>0?1.5:1).attr(Ln,!1).edgeCase(),new u(E.ENDEAVOR,t.NORMAL,G.PHYSICAL,-1,100,5,-1,0,3).attr(jC).condition(D_),new u(E.ERUPTION,t.FIRE,G.SPECIAL,150,100,5,-1,0,3).attr(ZN).target(AA.ALL_NEAR_ENEMIES),new sA(E.SKILL_SWAP,t.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(fo),new sA(E.IMPRISON,t.PSYCHIC,100,10,-1,0,3).ignoresSubstitute().attr(Se,CA.IMPRISON,1,!0,!1).target(AA.ENEMY_SIDE),new gA(E.REFRESH,t.NORMAL,-1,20,-1,0,3).attr(ie,!0,[J.PARALYSIS,J.POISON,J.TOXIC,J.BURN]).condition((R,e,I)=>!!R.status&&(R.status.effect===J.PARALYSIS||R.status.effect===J.POISON||R.status.effect===J.TOXIC||R.status.effect===J.BURN)),new gA(E.GRUDGE,t.GHOST,-1,5,-1,0,3).attr(OE,d.GRUDGE,!0,void 0,1),new gA(E.SNATCH,t.DARK,-1,10,-1,4,3).unimplemented(),new u(E.SECRET_POWER,t.NORMAL,G.PHYSICAL,70,100,20,30,0,3).makesContact(!1).attr(CU),new iR(E.DIVE,t.WATER,G.PHYSICAL,80,100,10,-1,0,3).chargeText(_.t("moveTriggers:hidUnderwater",{pokemonName:"{USER}"})).chargeAttr(PI,d.UNDERWATER).chargeAttr(Kn),new u(E.ARM_THRUST,t.FIGHTING,G.PHYSICAL,15,100,20,-1,0,3).attr(VE),new gA(E.CAMOUFLAGE,t.NORMAL,-1,20,-1,0,3).attr(lo),new gA(E.TAIL_GLOW,t.BUG,-1,20,-1,0,3).attr(LA,[c.SPATK],3,!0),new u(E.LUSTER_PURGE,t.PSYCHIC,G.SPECIAL,95,100,5,50,0,3).attr(LA,[c.SPDEF],-1),new u(E.MIST_BALL,t.PSYCHIC,G.SPECIAL,95,100,5,50,0,3).attr(LA,[c.SPATK],-1).ballBombMove(),new sA(E.FEATHER_DANCE,t.FLYING,100,15,-1,0,3).attr(LA,[c.ATK],-2).danceMove().reflectable(),new sA(E.TEETER_DANCE,t.NORMAL,100,20,-1,0,3).attr(be).danceMove().target(AA.ALL_NEAR_OTHERS),new u(E.BLAZE_KICK,t.FIRE,G.PHYSICAL,85,90,10,10,0,3).attr(re).attr(yA,J.BURN),new sA(E.MUD_SPORT,t.GROUND,-1,15,-1,0,3).ignoresProtect().attr(Se,CA.MUD_SPORT,5).target(AA.BOTH_SIDES),new u(E.ICE_BALL,t.ICE,G.PHYSICAL,30,90,20,-1,0,3).partial().attr(xN,5,!0,!0,E.DEFENSE_CURL).ballBombMove(),new u(E.NEEDLE_ARM,t.GRASS,G.PHYSICAL,60,100,15,30,0,3).attr(mE),new gA(E.SLACK_OFF,t.NORMAL,-1,5,-1,0,3).attr(sR,.5).triageMove(),new u(E.HYPER_VOICE,t.NORMAL,G.SPECIAL,90,100,10,-1,0,3).soundBased().target(AA.ALL_NEAR_ENEMIES),new u(E.POISON_FANG,t.POISON,G.PHYSICAL,50,100,15,50,0,3).attr(yA,J.TOXIC).bitingMove(),new u(E.CRUSH_CLAW,t.NORMAL,G.PHYSICAL,75,95,10,50,0,3).attr(LA,[c.DEF],-1),new u(E.BLAST_BURN,t.FIRE,G.SPECIAL,150,90,5,-1,0,3).attr(GO),new u(E.HYDRO_CANNON,t.WATER,G.SPECIAL,150,90,5,-1,0,3).attr(GO),new u(E.METEOR_MASH,t.STEEL,G.PHYSICAL,90,90,10,20,0,3).attr(LA,[c.ATK],1,!0).punchingMove(),new u(E.ASTONISH,t.GHOST,G.PHYSICAL,30,100,15,30,0,3).attr(mE),new u(E.WEATHER_BALL,t.NORMAL,G.SPECIAL,50,100,10,-1,0,3).attr(jU).attr(vE,(R,e,I)=>{const L=T.arena.weather;return L&&[Z.SUNNY,Z.RAIN,Z.SANDSTORM,Z.HAIL,Z.SNOW,Z.FOG,Z.HEAVY_RAIN,Z.HARSH_SUN].includes(L.weatherType)&&!L.isEffectSuppressed()?2:1}).ballBombMove(),new sA(E.AROMATHERAPY,t.GRASS,-1,5,-1,0,3).attr(pN,_.t("moveTriggers:soothingAromaWaftedThroughArea"),O.SAP_SIPPER).target(AA.PARTY),new sA(E.FAKE_TEARS,t.DARK,100,20,-1,0,3).attr(LA,[c.SPDEF],-2).reflectable(),new u(E.AIR_CUTTER,t.FLYING,G.SPECIAL,60,95,25,-1,0,3).attr(re).slicingMove().windMove().target(AA.ALL_NEAR_ENEMIES),new u(E.OVERHEAT,t.FIRE,G.SPECIAL,130,90,5,-1,0,3).attr(LA,[c.SPATK],-2,!0).attr(ie,!0,J.FREEZE),new sA(E.ODOR_SLEUTH,t.NORMAL,-1,40,-1,0,3).attr(qN,d.IGNORE_GHOST).ignoresSubstitute().reflectable(),new u(E.ROCK_TOMB,t.ROCK,G.PHYSICAL,60,95,15,100,0,3).attr(LA,[c.SPD],-1).makesContact(!1),new u(E.SILVER_WIND,t.BUG,G.SPECIAL,60,100,5,10,0,3).attr(LA,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],1,!0).windMove(),new sA(E.METAL_SOUND,t.STEEL,85,40,-1,0,3).attr(LA,[c.SPDEF],-2).soundBased().reflectable(),new sA(E.GRASS_WHISTLE,t.GRASS,55,15,-1,0,3).attr(yA,J.SLEEP).soundBased().reflectable(),new sA(E.TICKLE,t.NORMAL,100,20,-1,0,3).attr(LA,[c.ATK,c.DEF],-1).reflectable(),new gA(E.COSMIC_POWER,t.PSYCHIC,-1,20,-1,0,3).attr(LA,[c.DEF,c.SPDEF],1,!0),new u(E.WATER_SPOUT,t.WATER,G.SPECIAL,150,100,5,-1,0,3).attr(ZN).target(AA.ALL_NEAR_ENEMIES),new u(E.SIGNAL_BEAM,t.BUG,G.SPECIAL,75,100,15,10,0,3).attr(be),new u(E.SHADOW_PUNCH,t.GHOST,G.PHYSICAL,60,-1,20,-1,0,3).punchingMove(),new u(E.EXTRASENSORY,t.PSYCHIC,G.SPECIAL,80,100,20,10,0,3).attr(mE),new u(E.SKY_UPPERCUT,t.FIGHTING,G.PHYSICAL,85,90,15,-1,0,3).attr(yO,d.FLYING).punchingMove(),new u(E.SAND_TOMB,t.GROUND,G.PHYSICAL,35,85,15,-1,0,3).attr(PO,d.SAND_TOMB).makesContact(!1),new u(E.SHEER_COLD,t.ICE,G.SPECIAL,200,20,5,-1,0,3).attr(to).attr(sL).attr(To),new u(E.MUDDY_WATER,t.WATER,G.SPECIAL,90,85,10,30,0,3).attr(LA,[c.ACC],-1).target(AA.ALL_NEAR_ENEMIES),new u(E.BULLET_SEED,t.GRASS,G.PHYSICAL,25,100,30,-1,0,3).attr(VE).makesContact(!1).ballBombMove(),new u(E.AERIAL_ACE,t.FLYING,G.PHYSICAL,60,-1,20,-1,0,3).slicingMove(),new u(E.ICICLE_SPEAR,t.ICE,G.PHYSICAL,25,100,30,-1,0,3).attr(VE).makesContact(!1),new gA(E.IRON_DEFENSE,t.STEEL,-1,15,-1,0,3).attr(LA,[c.DEF],2,!0),new sA(E.BLOCK,t.NORMAL,-1,5,-1,0,3).condition(Ri).attr(OE,d.TRAPPED,!1,!0,1).reflectable(),new sA(E.HOWL,t.NORMAL,-1,40,-1,0,3).attr(LA,[c.ATK],1).soundBased().target(AA.USER_AND_ALLIES),new u(E.DRAGON_CLAW,t.DRAGON,G.PHYSICAL,80,100,15,-1,0,3),new u(E.FRENZY_PLANT,t.GRASS,G.SPECIAL,150,90,5,-1,0,3).attr(GO),new gA(E.BULK_UP,t.FIGHTING,-1,20,-1,0,3).attr(LA,[c.ATK,c.DEF],1,!0),new iR(E.BOUNCE,t.FLYING,G.PHYSICAL,85,85,5,30,0,3).chargeText(_.t("moveTriggers:sprangUp",{pokemonName:"{USER}"})).chargeAttr(PI,d.FLYING).attr(yA,J.PARALYSIS).condition(nt),new u(E.MUD_SHOT,t.GROUND,G.SPECIAL,55,95,15,100,0,3).attr(LA,[c.SPD],-1),new u(E.POISON_TAIL,t.POISON,G.PHYSICAL,50,100,25,10,0,3).attr(re).attr(yA,J.POISON),new u(E.COVET,t.NORMAL,G.PHYSICAL,60,100,25,-1,0,3).attr(tn,.3).edgeCase(),new u(E.VOLT_TACKLE,t.ELECTRIC,G.PHYSICAL,120,100,15,10,0,3).attr(HR,!1,.33).attr(yA,J.PARALYSIS).recklessMove(),new u(E.MAGICAL_LEAF,t.GRASS,G.SPECIAL,60,-1,20,-1,0,3),new sA(E.WATER_SPORT,t.WATER,-1,15,-1,0,3).ignoresProtect().attr(Se,CA.WATER_SPORT,5).target(AA.BOTH_SIDES),new gA(E.CALM_MIND,t.PSYCHIC,-1,20,-1,0,3).attr(LA,[c.SPATK,c.SPDEF],1,!0),new u(E.LEAF_BLADE,t.GRASS,G.PHYSICAL,90,100,15,-1,0,3).attr(re).slicingMove(),new gA(E.DRAGON_DANCE,t.DRAGON,-1,20,-1,0,3).attr(LA,[c.ATK,c.SPD],1,!0).danceMove(),new u(E.ROCK_BLAST,t.ROCK,G.PHYSICAL,25,90,10,-1,0,3).attr(VE).makesContact(!1).ballBombMove(),new u(E.SHOCK_WAVE,t.ELECTRIC,G.SPECIAL,60,-1,20,-1,0,3),new u(E.WATER_PULSE,t.WATER,G.SPECIAL,60,100,20,20,0,3).attr(be).pulseMove(),new u(E.DOOM_DESIRE,t.STEEL,G.SPECIAL,140,100,5,-1,0,3).partial().ignoresProtect().attr(Tn,CA.DOOM_DESIRE,et.DOOM_DESIRE_CHARGING,_.t("moveTriggers:choseDoomDesireAsDestiny",{pokemonName:"{USER}"})),new u(E.PSYCHO_BOOST,t.PSYCHIC,G.SPECIAL,140,90,5,-1,0,3).attr(LA,[c.SPATK],-2,!0),new gA(E.ROOST,t.FLYING,-1,5,-1,0,4).attr(sR,.5).attr(OE,d.ROOSTED,!0,!1).triageMove(),new sA(E.GRAVITY,t.PSYCHIC,-1,5,-1,0,4).ignoresProtect().attr(Se,CA.GRAVITY,5).target(AA.BOTH_SIDES),new sA(E.MIRACLE_EYE,t.PSYCHIC,-1,40,-1,0,4).attr(qN,d.IGNORE_DARK).ignoresSubstitute().reflectable(),new u(E.WAKE_UP_SLAP,t.FIGHTING,G.PHYSICAL,70,100,10,-1,0,4).attr(vE,(R,e,I)=>l_(R,e)?2:1).attr(ie,!1,J.SLEEP),new u(E.HAMMER_ARM,t.FIGHTING,G.PHYSICAL,100,90,10,-1,0,4).attr(LA,[c.SPD],-1,!0).punchingMove(),new u(E.GYRO_BALL,t.STEEL,G.PHYSICAL,-1,100,5,-1,0,4).attr(KU).ballBombMove(),new gA(E.HEALING_WISH,t.PSYCHIC,-1,10,-1,0,4).attr(Rn,!1,"moveTriggers:sacrificialFullRestore").triageMove().condition(ei),new u(E.BRINE,t.WATER,G.SPECIAL,65,100,10,-1,0,4).attr(vE,(R,e,I)=>e.getHpRatio()<.5?2:1),new u(E.NATURAL_GIFT,t.NORMAL,G.PHYSICAL,-1,100,15,-1,0,4).makesContact(!1).unimplemented(),new u(E.FEINT,t.NORMAL,G.PHYSICAL,30,100,10,-1,2,4).attr(HI,[d.PROTECTED]).attr(Fn,[CA.QUICK_GUARD,CA.WIDE_GUARD,CA.MAT_BLOCK,CA.CRAFTY_SHIELD],!1).makesContact(!1).ignoresProtect(),new u(E.PLUCK,t.FLYING,G.PHYSICAL,60,100,20,-1,0,4).attr(Nn),new sA(E.TAILWIND,t.FLYING,-1,15,-1,0,4).windMove().attr(Se,CA.TAILWIND,4,!0).target(AA.USER_SIDE),new sA(E.ACUPRESSURE,t.NORMAL,-1,30,-1,0,4).attr(oU).target(AA.USER_OR_NEAR_ALLY),new u(E.METAL_BURST,t.STEEL,G.PHYSICAL,-1,100,10,-1,0,4).attr(SL,R=>R.category===G.PHYSICAL||R.category===G.SPECIAL,1.5).redirectCounter().makesContact(!1).target(AA.ATTACKER),new u(E.U_TURN,t.BUG,G.PHYSICAL,70,100,20,-1,0,4).attr(EO,!0),new u(E.CLOSE_COMBAT,t.FIGHTING,G.PHYSICAL,120,100,5,-1,0,4).attr(LA,[c.DEF,c.SPDEF],-1,!0),new u(E.PAYBACK,t.DARK,G.PHYSICAL,50,100,10,-1,0,4).attr(vE,(R,e,I)=>{var L;return e.getLastXMoves(1).find(N=>N.turn===T.currentBattle.turn)||((L=T.currentBattle.turnCommands[e.getBattlerIndex()])==null?void 0:L.command)===pI.BALL?2:1}),new u(E.ASSURANCE,t.DARK,G.PHYSICAL,60,100,10,-1,0,4).attr(vE,(R,e,I)=>e.turnData.damageTaken>0?2:1),new sA(E.EMBARGO,t.DARK,100,15,-1,0,4).reflectable().unimplemented(),new u(E.FLING,t.DARK,G.PHYSICAL,-1,100,10,-1,0,4).makesContact(!1).unimplemented(),new sA(E.PSYCHO_SHIFT,t.PSYCHIC,100,10,-1,0,4).attr(aU).condition((R,e,I)=>{var N;let L=R.hasAbility(O.COMATOSE)?J.SLEEP:void 0;return(N=R.status)!=null&&N.effect&&A2(R.status.effect)&&(L=R.status.effect),!!L&&e.canSetStatus(L,!1,!1,R)}),new u(E.TRUMP_CARD,t.NORMAL,G.SPECIAL,-1,-1,5,-1,0,4).makesContact().attr(PU),new sA(E.HEAL_BLOCK,t.PSYCHIC,100,15,-1,0,4).attr(OE,d.HEAL_BLOCK,!1,!0,5).target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.WRING_OUT,t.NORMAL,G.SPECIAL,-1,100,5,-1,0,4).attr(bN,120).makesContact(),new gA(E.POWER_TRICK,t.PSYCHIC,-1,10,-1,0,4).attr(OE,d.POWER_TRICK,!0),new sA(E.GASTRO_ACID,t.POISON,100,10,-1,0,4).attr(wn).reflectable(),new sA(E.LUCKY_CHANT,t.NORMAL,-1,30,-1,0,4).attr(Se,CA.NO_CRIT,5,!0,!0).target(AA.USER_SIDE),new sA(E.ME_FIRST,t.NORMAL,-1,20,-1,0,4).ignoresSubstitute().target(AA.NEAR_ENEMY).unimplemented(),new gA(E.COPYCAT,t.NORMAL,-1,20,-1,0,4).attr(gn,!1,w6),new sA(E.POWER_SWAP,t.PSYCHIC,-1,10,100,0,4).attr(vN,[c.ATK,c.SPATK]).ignoresSubstitute(),new sA(E.GUARD_SWAP,t.PSYCHIC,-1,10,100,0,4).attr(vN,[c.DEF,c.SPDEF]).ignoresSubstitute(),new u(E.PUNISHMENT,t.DARK,G.PHYSICAL,-1,100,5,-1,0,4).makesContact(!0).attr(YU),new u(E.LAST_RESORT,t.NORMAL,G.PHYSICAL,140,100,5,-1,0,4).attr(mo).edgeCase(),new sA(E.WORRY_SEED,t.GRASS,100,10,-1,0,4).attr(yn,O.INSOMNIA).reflectable(),new u(E.SUCKER_PUNCH,t.DARK,G.PHYSICAL,70,100,5,-1,1,4).condition((R,e,I)=>{const L=T.currentBattle.turnCommands[e.getBattlerIndex()];return!L||!L.move?!1:L.command===pI.FIGHT&&!e.turnData.acted&&FA[L.move.move].category!==G.STATUS}),new sA(E.TOXIC_SPIKES,t.POISON,-1,20,-1,0,4).attr(iL,CA.TOXIC_SPIKES).target(AA.ENEMY_SIDE).reflectable(),new sA(E.HEART_SWAP,t.PSYCHIC,-1,10,-1,0,4).attr(vN,MI).ignoresSubstitute(),new gA(E.AQUA_RING,t.WATER,-1,20,-1,0,4).attr(OE,d.AQUA_RING,!0,!0),new gA(E.MAGNET_RISE,t.ELECTRIC,-1,10,-1,0,4).attr(OE,d.FLOATING,!0,!0,5).condition((R,e,I)=>!T.arena.getTag(CA.GRAVITY)&&[d.FLOATING,d.IGNORE_FLYING,d.INGRAIN].every(L=>!R.getTag(L))),new u(E.FLARE_BLITZ,t.FIRE,G.PHYSICAL,120,100,15,10,0,4).attr(HR,!1,.33).attr(ie,!0,J.FREEZE).attr(yA,J.BURN).recklessMove(),new u(E.FORCE_PALM,t.FIGHTING,G.PHYSICAL,60,100,10,30,0,4).attr(yA,J.PARALYSIS),new u(E.AURA_SPHERE,t.FIGHTING,G.SPECIAL,80,-1,20,-1,0,4).pulseMove().ballBombMove(),new gA(E.ROCK_POLISH,t.ROCK,-1,20,-1,0,4).attr(LA,[c.SPD],2,!0),new u(E.POISON_JAB,t.POISON,G.PHYSICAL,80,100,20,30,0,4).attr(yA,J.POISON),new u(E.DARK_PULSE,t.DARK,G.SPECIAL,80,100,15,20,0,4).attr(mE).pulseMove(),new u(E.NIGHT_SLASH,t.DARK,G.PHYSICAL,70,100,15,-1,0,4).attr(re).slicingMove(),new u(E.AQUA_TAIL,t.WATER,G.PHYSICAL,90,90,10,-1,0,4),new u(E.SEED_BOMB,t.GRASS,G.PHYSICAL,80,100,15,-1,0,4).makesContact(!1).ballBombMove(),new u(E.AIR_SLASH,t.FLYING,G.SPECIAL,75,95,15,30,0,4).attr(mE).slicingMove(),new u(E.X_SCISSOR,t.BUG,G.PHYSICAL,80,100,15,-1,0,4).slicingMove(),new u(E.BUG_BUZZ,t.BUG,G.SPECIAL,90,100,10,10,0,4).attr(LA,[c.SPDEF],-1).soundBased(),new u(E.DRAGON_PULSE,t.DRAGON,G.SPECIAL,85,100,10,-1,0,4).pulseMove(),new u(E.DRAGON_RUSH,t.DRAGON,G.PHYSICAL,100,75,10,20,0,4).attr(gO).attr(cR,d.MINIMIZED).attr(mE),new u(E.POWER_GEM,t.ROCK,G.SPECIAL,80,100,20,-1,0,4),new u(E.DRAIN_PUNCH,t.FIGHTING,G.PHYSICAL,75,100,10,-1,0,4).attr(uR).punchingMove().triageMove(),new u(E.VACUUM_WAVE,t.FIGHTING,G.SPECIAL,40,100,30,-1,1,4),new u(E.FOCUS_BLAST,t.FIGHTING,G.SPECIAL,120,70,5,10,0,4).attr(LA,[c.SPDEF],-1).ballBombMove(),new u(E.ENERGY_BALL,t.GRASS,G.SPECIAL,90,100,10,10,0,4).attr(LA,[c.SPDEF],-1).ballBombMove(),new u(E.BRAVE_BIRD,t.FLYING,G.PHYSICAL,120,100,15,-1,0,4).attr(HR,!1,.33).recklessMove(),new u(E.EARTH_POWER,t.GROUND,G.SPECIAL,90,100,10,10,0,4).attr(LA,[c.SPDEF],-1),new sA(E.SWITCHEROO,t.DARK,100,10,-1,0,4).unimplemented(),new u(E.GIGA_IMPACT,t.NORMAL,G.PHYSICAL,150,90,5,-1,0,4).attr(GO),new gA(E.NASTY_PLOT,t.DARK,-1,20,-1,0,4).attr(LA,[c.SPATK],2,!0),new u(E.BULLET_PUNCH,t.STEEL,G.PHYSICAL,40,100,30,-1,1,4).punchingMove(),new u(E.AVALANCHE,t.ICE,G.PHYSICAL,60,100,10,-1,-4,4).attr(Un),new u(E.ICE_SHARD,t.ICE,G.PHYSICAL,40,100,30,-1,1,4).makesContact(!1),new u(E.SHADOW_CLAW,t.GHOST,G.PHYSICAL,70,100,15,-1,0,4).attr(re),new u(E.THUNDER_FANG,t.ELECTRIC,G.PHYSICAL,65,95,15,10,0,4).attr(mE).attr(yA,J.PARALYSIS).bitingMove(),new u(E.ICE_FANG,t.ICE,G.PHYSICAL,65,95,15,10,0,4).attr(mE).attr(yA,J.FREEZE).bitingMove(),new u(E.FIRE_FANG,t.FIRE,G.PHYSICAL,65,95,15,10,0,4).attr(mE).attr(yA,J.BURN).bitingMove(),new u(E.SHADOW_SNEAK,t.GHOST,G.PHYSICAL,40,100,30,-1,1,4),new u(E.MUD_BOMB,t.GROUND,G.SPECIAL,65,85,10,30,0,4).attr(LA,[c.ACC],-1).ballBombMove(),new u(E.PSYCHO_CUT,t.PSYCHIC,G.PHYSICAL,70,100,20,-1,0,4).attr(re).slicingMove().makesContact(!1),new u(E.ZEN_HEADBUTT,t.PSYCHIC,G.PHYSICAL,80,90,15,20,0,4).attr(mE),new u(E.MIRROR_SHOT,t.STEEL,G.SPECIAL,65,85,10,30,0,4).attr(LA,[c.ACC],-1),new u(E.FLASH_CANNON,t.STEEL,G.SPECIAL,80,100,10,10,0,4).attr(LA,[c.SPDEF],-1),new u(E.ROCK_CLIMB,t.NORMAL,G.PHYSICAL,90,85,20,20,0,4).attr(be),new sA(E.DEFOG,t.FLYING,-1,15,-1,0,4).attr(LA,[c.EVA],-1).attr(rU,Z.FOG).attr(TL).attr(UL,!1).attr(CL,!0).attr(Fn,[CA.MIST,CA.SAFEGUARD],!1).reflectable(),new sA(E.TRICK_ROOM,t.PSYCHIC,-1,5,-1,-7,4).attr(Se,CA.TRICK_ROOM,5).ignoresProtect().target(AA.BOTH_SIDES),new u(E.DRACO_METEOR,t.DRAGON,G.SPECIAL,130,90,5,-1,0,4).attr(LA,[c.SPATK],-2,!0),new u(E.DISCHARGE,t.ELECTRIC,G.SPECIAL,80,100,15,30,0,4).attr(yA,J.PARALYSIS).target(AA.ALL_NEAR_OTHERS),new u(E.LAVA_PLUME,t.FIRE,G.SPECIAL,80,100,15,30,0,4).attr(yA,J.BURN).target(AA.ALL_NEAR_OTHERS),new u(E.LEAF_STORM,t.GRASS,G.SPECIAL,130,90,5,-1,0,4).attr(LA,[c.SPATK],-2,!0),new u(E.POWER_WHIP,t.GRASS,G.PHYSICAL,120,85,10,-1,0,4),new u(E.ROCK_WRECKER,t.ROCK,G.PHYSICAL,150,90,5,-1,0,4).attr(GO).makesContact(!1).ballBombMove(),new u(E.CROSS_POISON,t.POISON,G.PHYSICAL,70,100,20,10,0,4).attr(re).attr(yA,J.POISON).slicingMove(),new u(E.GUNK_SHOT,t.POISON,G.PHYSICAL,120,80,5,30,0,4).attr(yA,J.POISON).makesContact(!1),new u(E.IRON_HEAD,t.STEEL,G.PHYSICAL,80,100,15,30,0,4).attr(mE),new u(E.MAGNET_BOMB,t.STEEL,G.PHYSICAL,60,-1,20,-1,0,4).makesContact(!1).ballBombMove(),new u(E.STONE_EDGE,t.ROCK,G.PHYSICAL,100,80,5,-1,0,4).attr(re).makesContact(!1),new sA(E.CAPTIVATE,t.NORMAL,100,20,-1,0,4).attr(LA,[c.SPATK],-2).condition((R,e,I)=>e.isOppositeGender(R)).target(AA.ALL_NEAR_ENEMIES).reflectable(),new sA(E.STEALTH_ROCK,t.ROCK,-1,20,-1,0,4).attr(iL,CA.STEALTH_ROCK).target(AA.ENEMY_SIDE).reflectable(),new u(E.GRASS_KNOT,t.GRASS,G.SPECIAL,-1,100,20,-1,0,4).attr(an).makesContact(),new u(E.CHATTER,t.FLYING,G.SPECIAL,65,100,20,100,0,4).attr(be).soundBased(),new u(E.JUDGMENT,t.NORMAL,G.SPECIAL,100,100,10,-1,0,4).attr(un),new u(E.BUG_BITE,t.BUG,G.PHYSICAL,60,100,20,-1,0,4).attr(Nn),new u(E.CHARGE_BEAM,t.ELECTRIC,G.SPECIAL,50,90,10,70,0,4).attr(LA,[c.SPATK],1,!0),new u(E.WOOD_HAMMER,t.GRASS,G.PHYSICAL,120,100,15,-1,0,4).attr(HR,!1,.33).recklessMove(),new u(E.AQUA_JET,t.WATER,G.PHYSICAL,40,100,20,-1,1,4),new u(E.ATTACK_ORDER,t.BUG,G.PHYSICAL,90,100,15,-1,0,4).attr(re).makesContact(!1),new gA(E.DEFEND_ORDER,t.BUG,-1,10,-1,0,4).attr(LA,[c.DEF,c.SPDEF],1,!0),new gA(E.HEAL_ORDER,t.BUG,-1,5,-1,0,4).attr(sR,.5).triageMove(),new u(E.HEAD_SMASH,t.ROCK,G.PHYSICAL,150,80,5,-1,0,4).attr(HR,!1,.5).recklessMove(),new u(E.DOUBLE_HIT,t.NORMAL,G.PHYSICAL,35,90,10,-1,0,4).attr(VE,Le._2),new u(E.ROAR_OF_TIME,t.DRAGON,G.SPECIAL,150,90,5,-1,0,4).attr(GO),new u(E.SPACIAL_REND,t.DRAGON,G.SPECIAL,100,95,5,-1,0,4).attr(re),new gA(E.LUNAR_DANCE,t.PSYCHIC,-1,10,-1,0,4).attr(Rn,!0,"moveTriggers:lunarDanceRestore").danceMove().triageMove().condition(ei),new u(E.CRUSH_GRIP,t.NORMAL,G.PHYSICAL,-1,100,5,-1,0,4).attr(bN,120),new u(E.MAGMA_STORM,t.FIRE,G.SPECIAL,100,75,5,-1,0,4).attr(PO,d.MAGMA_STORM),new sA(E.DARK_VOID,t.DARK,80,10,-1,0,4).attr(yA,J.SLEEP).target(AA.ALL_NEAR_ENEMIES).reflectable(),new u(E.SEED_FLARE,t.GRASS,G.SPECIAL,120,85,5,40,0,4).attr(LA,[c.SPDEF],-2),new u(E.OMINOUS_WIND,t.GHOST,G.SPECIAL,60,100,5,10,0,4).attr(LA,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],1,!0).windMove(),new iR(E.SHADOW_FORCE,t.GHOST,G.PHYSICAL,120,100,5,-1,0,4).chargeText(_.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(PI,d.HIDDEN).ignoresProtect(),new gA(E.HONE_CLAWS,t.DARK,-1,15,-1,0,5).attr(LA,[c.ATK,c.ACC],1,!0),new sA(E.WIDE_GUARD,t.ROCK,-1,10,-1,3,5).target(AA.USER_SIDE).attr(Se,CA.WIDE_GUARD,1,!0,!0).condition(JR),new sA(E.GUARD_SPLIT,t.PSYCHIC,-1,10,-1,0,5).attr(vn,[c.DEF,c.SPDEF],"moveTriggers:sharedGuard"),new sA(E.POWER_SPLIT,t.PSYCHIC,-1,10,-1,0,5).attr(vn,[c.ATK,c.SPATK],"moveTriggers:sharedPower"),new sA(E.WONDER_ROOM,t.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(AA.BOTH_SIDES).unimplemented(),new u(E.PSYSHOCK,t.PSYCHIC,G.SPECIAL,80,100,10,-1,0,5).attr(QN),new u(E.VENOSHOCK,t.POISON,G.SPECIAL,65,100,10,-1,0,5).attr(vE,(R,e,I)=>e.status&&(e.status.effect===J.POISON||e.status.effect===J.TOXIC)?2:1),new gA(E.AUTOTOMIZE,t.STEEL,-1,15,-1,0,5).attr(LA,[c.SPD],2,!0).attr(OE,d.AUTOTOMIZED,!0),new gA(E.RAGE_POWDER,t.BUG,-1,20,-1,2,5).powderMove().attr(OE,d.CENTER_OF_ATTENTION,!0),new sA(E.TELEKINESIS,t.PSYCHIC,-1,15,-1,0,5).condition(nt).condition((R,e,I)=>![A.DIGLETT,A.DUGTRIO,A.ALOLA_DIGLETT,A.ALOLA_DUGTRIO,A.SANDYGAST,A.PALOSSAND,A.WIGLETT,A.WUGTRIO].includes(e.species.speciesId)).condition((R,e,I)=>!(e.species.speciesId===A.GENGAR&&e.getFormKey()==="mega")).condition((R,e,I)=>SA(e.getTag(d.INGRAIN))&&SA(e.getTag(d.IGNORE_FLYING))).attr(OE,d.TELEKINESIS,!1,!0,3).attr(OE,d.FLOATING,!1,!0,3).reflectable(),new sA(E.MAGIC_ROOM,t.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(AA.BOTH_SIDES).unimplemented(),new u(E.SMACK_DOWN,t.ROCK,G.PHYSICAL,50,100,15,-1,0,5).attr(Bn).attr(OE,d.INTERRUPTED).attr(HI,[d.FLYING,d.FLOATING,d.TELEKINESIS]).attr(yO,d.FLYING).makesContact(!1),new u(E.STORM_THROW,t.FIGHTING,G.PHYSICAL,60,100,10,-1,0,5).attr(XI),new u(E.FLAME_BURST,t.FIRE,G.SPECIAL,70,100,15,-1,0,5).attr(OU),new u(E.SLUDGE_WAVE,t.POISON,G.SPECIAL,95,100,10,10,0,5).attr(yA,J.POISON).target(AA.ALL_NEAR_OTHERS),new gA(E.QUIVER_DANCE,t.BUG,-1,20,-1,0,5).attr(LA,[c.SPATK,c.SPDEF,c.SPD],1,!0).danceMove(),new u(E.HEAVY_SLAM,t.STEEL,G.PHYSICAL,-1,100,10,-1,0,5).attr(gO).attr(rn).attr(cR,d.MINIMIZED),new u(E.SYNCHRONOISE,t.PSYCHIC,G.SPECIAL,120,100,10,-1,0,5).target(AA.ALL_NEAR_OTHERS).condition($6).attr(wo),new u(E.ELECTRO_BALL,t.ELECTRIC,G.SPECIAL,-1,100,10,-1,0,5).attr(BU).ballBombMove(),new sA(E.SOAK,t.WATER,100,20,-1,0,5).attr(hn,t.WATER).reflectable(),new u(E.FLAME_CHARGE,t.FIRE,G.PHYSICAL,50,100,20,100,0,5).attr(LA,[c.SPD],1,!0),new gA(E.COIL,t.POISON,-1,20,-1,0,5).attr(LA,[c.ATK,c.DEF,c.ACC],1,!0),new u(E.LOW_SWEEP,t.FIGHTING,G.PHYSICAL,65,100,20,100,0,5).attr(LA,[c.SPD],-1),new u(E.ACID_SPRAY,t.POISON,G.SPECIAL,40,100,20,100,0,5).attr(LA,[c.SPDEF],-2).ballBombMove(),new u(E.FOUL_PLAY,t.DARK,G.PHYSICAL,95,100,15,-1,0,5).attr(wU),new sA(E.SIMPLE_BEAM,t.NORMAL,100,15,-1,0,5).attr(yn,O.SIMPLE).reflectable(),new sA(E.ENTRAINMENT,t.NORMAL,100,15,-1,0,5).attr(Ko).reflectable(),new sA(E.AFTER_YOU,t.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().target(AA.NEAR_OTHER).condition(CN).condition((R,e,I)=>!e.turnData.acted).attr(yo),new u(E.ROUND,t.NORMAL,G.SPECIAL,60,100,15,-1,0,5).attr(mU).attr(gU).soundBased(),new u(E.ECHOED_VOICE,t.NORMAL,G.SPECIAL,40,100,15,-1,0,5).attr(cU,5,!1).soundBased(),new u(E.CHIP_AWAY,t.NORMAL,G.PHYSICAL,70,100,20,-1,0,5).attr(hN),new u(E.CLEAR_SMOG,t.POISON,G.SPECIAL,50,-1,15,-1,0,5).attr(wN,!1),new u(E.STORED_POWER,t.PSYCHIC,G.SPECIAL,20,100,10,-1,0,5).attr(Mn),new sA(E.QUICK_GUARD,t.FIGHTING,-1,15,-1,3,5).target(AA.USER_SIDE).attr(Se,CA.QUICK_GUARD,1,!0,!0).condition(JR),new gA(E.ALLY_SWITCH,t.PSYCHIC,-1,15,-1,2,5).ignoresProtect().unimplemented(),new u(E.SCALD,t.WATER,G.SPECIAL,80,100,15,30,0,5).attr(ie,!1,J.FREEZE).attr(ie,!0,J.FREEZE).attr(yA,J.BURN),new gA(E.SHELL_SMASH,t.NORMAL,-1,15,-1,0,5).attr(LA,[c.ATK,c.SPATK,c.SPD],2,!0).attr(LA,[c.DEF,c.SPDEF],-1,!0),new sA(E.HEAL_PULSE,t.PSYCHIC,-1,10,-1,0,5).attr(sR,.5,!1,!1).pulseMove().triageMove().reflectable(),new u(E.HEX,t.GHOST,G.SPECIAL,65,100,10,-1,0,5).attr(vE,(R,e,I)=>e.status||e.hasAbility(O.COMATOSE)?2:1),new iR(E.SKY_DROP,t.FLYING,G.PHYSICAL,60,100,10,-1,0,5).chargeText(_.t("moveTriggers:tookTargetIntoSky",{pokemonName:"{USER}",targetName:"{TARGET}"})).chargeAttr(PI,d.FLYING).condition(nt).condition((R,e,I)=>!e.getTag(d.SUBSTITUTE)).partial(),new gA(E.SHIFT_GEAR,t.STEEL,-1,10,-1,0,5).attr(LA,[c.ATK],1,!0).attr(LA,[c.SPD],2,!0),new u(E.CIRCLE_THROW,t.FIGHTING,G.PHYSICAL,60,90,10,-1,-6,5).attr(EO,!1,ER.FORCE_SWITCH).hidesTarget(),new u(E.INCINERATE,t.FIRE,G.SPECIAL,60,100,15,-1,0,5).target(AA.ALL_NEAR_ENEMIES).attr(Ln,!0).edgeCase(),new sA(E.QUASH,t.DARK,100,15,-1,0,5).condition(CN).condition((R,e,I)=>!e.turnData.acted).attr(Vo),new u(E.ACROBATICS,t.FLYING,G.PHYSICAL,55,100,15,-1,0,5).attr(vE,(R,e,I)=>Math.max(1,2-.2*R.getHeldItems().filter(L=>L.isTransferable).reduce((L,N)=>L+N.stackCount,0))),new sA(E.REFLECT_TYPE,t.NORMAL,-1,15,-1,0,5).ignoresSubstitute().attr(Do),new u(E.RETALIATE,t.NORMAL,G.PHYSICAL,70,100,5,-1,0,5).attr(vE,(R,e,I)=>{const L=T.currentBattle.turn,N=T.currentBattle.playerFaintsHistory[T.currentBattle.playerFaintsHistory.length-1],S=T.currentBattle.enemyFaintsHistory[T.currentBattle.enemyFaintsHistory.length-1];return N!==void 0&&L-N.turn===1&&R.isPlayer()||S!==void 0&&L-S.turn===1&&R.isEnemy()?2:1}),new u(E.FINAL_GAMBIT,t.FIGHTING,G.SPECIAL,-1,100,5,-1,0,5).attr(zC).attr(An),new sA(E.BESTOW,t.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().unimplemented(),new u(E.INFERNO,t.FIRE,G.SPECIAL,100,50,5,100,0,5).attr(yA,J.BURN),new u(E.WATER_PLEDGE,t.WATER,G.SPECIAL,80,100,10,-1,0,5).attr(yN).attr($N).attr(kN).attr(XN).attr(QI,CA.WATER_FIRE_PLEDGE,E.FIRE_PLEDGE,!0).attr(QI,CA.GRASS_WATER_PLEDGE,E.GRASS_PLEDGE).attr(nL,!0),new u(E.FIRE_PLEDGE,t.FIRE,G.SPECIAL,80,100,10,-1,0,5).attr(yN).attr($N).attr(kN).attr(XN).attr(QI,CA.FIRE_GRASS_PLEDGE,E.GRASS_PLEDGE).attr(QI,CA.WATER_FIRE_PLEDGE,E.WATER_PLEDGE,!0).attr(nL,!0),new u(E.GRASS_PLEDGE,t.GRASS,G.SPECIAL,80,100,10,-1,0,5).attr(yN).attr($N).attr(kN).attr(XN).attr(QI,CA.GRASS_WATER_PLEDGE,E.WATER_PLEDGE).attr(QI,CA.FIRE_GRASS_PLEDGE,E.FIRE_PLEDGE).attr(nL,!0),new u(E.VOLT_SWITCH,t.ELECTRIC,G.SPECIAL,70,100,20,-1,0,5).attr(EO,!0),new u(E.STRUGGLE_BUG,t.BUG,G.SPECIAL,50,100,20,100,0,5).attr(LA,[c.SPATK],-1).target(AA.ALL_NEAR_ENEMIES),new u(E.BULLDOZE,t.GROUND,G.PHYSICAL,60,100,20,100,0,5).attr(LA,[c.SPD],-1).attr(vE,(R,e,I)=>T.arena.getTerrainType()===bA.GRASSY&&e.isGrounded()?.5:1).makesContact(!1).target(AA.ALL_NEAR_OTHERS),new u(E.FROST_BREATH,t.ICE,G.SPECIAL,60,90,10,-1,0,5).attr(XI),new u(E.DRAGON_TAIL,t.DRAGON,G.PHYSICAL,60,90,10,-1,-6,5).attr(EO,!1,ER.FORCE_SWITCH).hidesTarget(),new gA(E.WORK_UP,t.NORMAL,-1,30,-1,0,5).attr(LA,[c.ATK,c.SPATK],1,!0),new u(E.ELECTROWEB,t.ELECTRIC,G.SPECIAL,55,95,15,100,0,5).attr(LA,[c.SPD],-1).target(AA.ALL_NEAR_ENEMIES),new u(E.WILD_CHARGE,t.ELECTRIC,G.PHYSICAL,90,100,15,-1,0,5).attr(HR).recklessMove(),new u(E.DRILL_RUN,t.GROUND,G.PHYSICAL,80,95,10,-1,0,5).attr(re),new u(E.DUAL_CHOP,t.DRAGON,G.PHYSICAL,40,90,15,-1,0,5).attr(VE,Le._2),new u(E.HEART_STAMP,t.PSYCHIC,G.PHYSICAL,60,100,25,30,0,5).attr(mE),new u(E.HORN_LEECH,t.GRASS,G.PHYSICAL,75,100,10,-1,0,5).attr(uR).triageMove(),new u(E.SACRED_SWORD,t.FIGHTING,G.PHYSICAL,90,100,15,-1,0,5).attr(hN).slicingMove(),new u(E.RAZOR_SHELL,t.WATER,G.PHYSICAL,75,95,10,50,0,5).attr(LA,[c.DEF],-1).slicingMove(),new u(E.HEAT_CRASH,t.FIRE,G.PHYSICAL,-1,100,10,-1,0,5).attr(gO).attr(rn).attr(cR,d.MINIMIZED),new u(E.LEAF_TORNADO,t.GRASS,G.SPECIAL,65,90,10,50,0,5).attr(LA,[c.ACC],-1),new u(E.STEAMROLLER,t.BUG,G.PHYSICAL,65,100,20,30,0,5).attr(gO).attr(cR,d.MINIMIZED).attr(mE),new gA(E.COTTON_GUARD,t.GRASS,-1,10,-1,0,5).attr(LA,[c.DEF],3,!0),new u(E.NIGHT_DAZE,t.DARK,G.SPECIAL,85,95,10,40,0,5).attr(LA,[c.ACC],-1),new u(E.PSYSTRIKE,t.PSYCHIC,G.SPECIAL,100,100,10,-1,0,5).attr(QN),new u(E.TAIL_SLAP,t.NORMAL,G.PHYSICAL,25,85,10,-1,0,5).attr(VE),new u(E.HURRICANE,t.FLYING,G.SPECIAL,110,70,10,30,0,5).attr(Gn).attr(be).attr(yO,d.FLYING).windMove(),new u(E.HEAD_CHARGE,t.NORMAL,G.PHYSICAL,120,100,15,-1,0,5).attr(HR).recklessMove(),new u(E.GEAR_GRIND,t.STEEL,G.PHYSICAL,50,85,15,-1,0,5).attr(VE,Le._2),new u(E.SEARING_SHOT,t.FIRE,G.SPECIAL,100,100,5,30,0,5).attr(yA,J.BURN).ballBombMove().target(AA.ALL_NEAR_OTHERS),new u(E.TECHNO_BLAST,t.NORMAL,G.SPECIAL,120,100,5,-1,0,5).attr(JU),new u(E.RELIC_SONG,t.NORMAL,G.SPECIAL,75,100,10,10,0,5).attr(yA,J.SLEEP).soundBased().target(AA.ALL_NEAR_ENEMIES),new u(E.SECRET_SWORD,t.FIGHTING,G.SPECIAL,85,100,10,-1,0,5).attr(QN).slicingMove(),new u(E.GLACIATE,t.ICE,G.SPECIAL,65,95,10,100,0,5).attr(LA,[c.SPD],-1).target(AA.ALL_NEAR_ENEMIES),new u(E.BOLT_STRIKE,t.ELECTRIC,G.PHYSICAL,130,85,5,20,0,5).attr(yA,J.PARALYSIS),new u(E.BLUE_FLARE,t.FIRE,G.SPECIAL,130,85,5,20,0,5).attr(yA,J.BURN),new u(E.FIERY_DANCE,t.FIRE,G.SPECIAL,80,100,10,50,0,5).attr(LA,[c.SPATK],1,!0).danceMove(),new iR(E.FREEZE_SHOCK,t.ICE,G.PHYSICAL,140,90,5,30,0,5).chargeText(_.t("moveTriggers:becameCloakedInFreezingLight",{pokemonName:"{USER}"})).attr(yA,J.PARALYSIS).makesContact(!1),new iR(E.ICE_BURN,t.ICE,G.SPECIAL,140,90,5,30,0,5).chargeText(_.t("moveTriggers:becameCloakedInFreezingAir",{pokemonName:"{USER}"})).attr(yA,J.BURN),new u(E.SNARL,t.DARK,G.SPECIAL,55,95,15,100,0,5).attr(LA,[c.SPATK],-1).soundBased().target(AA.ALL_NEAR_ENEMIES),new u(E.ICICLE_CRASH,t.ICE,G.PHYSICAL,85,90,10,30,0,5).attr(mE).makesContact(!1),new u(E.V_CREATE,t.FIRE,G.PHYSICAL,180,95,5,-1,0,5).attr(LA,[c.DEF,c.SPDEF,c.SPD],-1,!0),new u(E.FUSION_FLARE,t.FIRE,G.SPECIAL,100,100,5,-1,0,5).attr(ie,!0,J.FREEZE).attr(ln,E.FUSION_BOLT),new u(E.FUSION_BOLT,t.ELECTRIC,G.PHYSICAL,100,100,5,-1,0,5).attr(ln,E.FUSION_FLARE).makesContact(!1),new u(E.FLYING_PRESS,t.FIGHTING,G.PHYSICAL,100,95,10,-1,0,6).attr(gO).attr(Lo).attr(cR,d.MINIMIZED).condition(nt),new sA(E.MAT_BLOCK,t.FIGHTING,-1,10,-1,0,6).target(AA.USER_SIDE).attr(Se,CA.MAT_BLOCK,1,!0,!0).condition(new hT).condition(JR),new u(E.BELCH,t.POISON,G.SPECIAL,120,90,10,-1,0,6).condition((R,e,I)=>R.battleData.hasEatenBerry),new sA(E.ROTOTILLER,t.GROUND,-1,10,-1,0,6).target(AA.ALL).condition((R,e,I)=>[...T.getEnemyParty(),...T.getPlayerParty()].some(L=>L.isOfType(t.GRASS)&&L.isGrounded())).attr(LA,[c.ATK,c.SPATK],1,!1,{condition:r((R,e,I)=>e.isOfType(t.GRASS)&&e.isGrounded(),"condition")}),new sA(E.STICKY_WEB,t.BUG,-1,20,-1,0,6).attr(iL,CA.STICKY_WEB).target(AA.ENEMY_SIDE).reflectable(),new u(E.FELL_STINGER,t.BUG,G.PHYSICAL,50,100,25,-1,0,6).attr(UU,[c.ATK],3,!0),new iR(E.PHANTOM_FORCE,t.GHOST,G.PHYSICAL,90,100,10,-1,0,6).chargeText(_.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(PI,d.HIDDEN).ignoresProtect(),new sA(E.TRICK_OR_TREAT,t.GHOST,100,20,-1,0,6).attr(dn,t.GHOST).reflectable(),new sA(E.NOBLE_ROAR,t.NORMAL,100,30,-1,0,6).attr(LA,[c.ATK,c.SPATK],-1).soundBased().reflectable(),new sA(E.ION_DELUGE,t.ELECTRIC,-1,25,-1,1,6).attr(Se,CA.ION_DELUGE).target(AA.BOTH_SIDES),new u(E.PARABOLIC_CHARGE,t.ELECTRIC,G.SPECIAL,65,100,20,-1,0,6).attr(uR).target(AA.ALL_NEAR_OTHERS).triageMove(),new sA(E.FORESTS_CURSE,t.GRASS,100,20,-1,0,6).attr(dn,t.GRASS).reflectable(),new u(E.PETAL_BLIZZARD,t.GRASS,G.PHYSICAL,90,100,15,-1,0,6).windMove().makesContact(!1).target(AA.ALL_NEAR_OTHERS),new u(E.FREEZE_DRY,t.ICE,G.SPECIAL,70,100,20,10,0,6).attr(yA,J.FREEZE).attr(So),new u(E.DISARMING_VOICE,t.FAIRY,G.SPECIAL,40,-1,15,-1,0,6).soundBased().target(AA.ALL_NEAR_ENEMIES),new sA(E.PARTING_SHOT,t.DARK,100,20,-1,0,6).attr(LA,[c.ATK,c.SPATK],-1,!1,{trigger:vI.PRE_APPLY}).attr(EO,!0).soundBased().reflectable(),new sA(E.TOPSY_TURVY,t.DARK,-1,20,-1,0,6).attr(_U).reflectable(),new u(E.DRAINING_KISS,t.FAIRY,G.SPECIAL,50,100,10,-1,0,6).attr(uR,.75).makesContact().triageMove(),new sA(E.CRAFTY_SHIELD,t.FAIRY,-1,10,-1,3,6).target(AA.USER_SIDE).attr(Se,CA.CRAFTY_SHIELD,1,!0,!0).condition(JR),new sA(E.FLOWER_SHIELD,t.FAIRY,-1,10,-1,0,6).target(AA.ALL).attr(LA,[c.DEF],1,!1,{condition:r((R,e,I)=>e.getTypes().includes(t.GRASS)&&!e.getTag(CS),"condition")}),new sA(E.GRASSY_TERRAIN,t.GRASS,-1,10,-1,0,6).attr(Pt,bA.GRASSY).target(AA.BOTH_SIDES),new sA(E.MISTY_TERRAIN,t.FAIRY,-1,10,-1,0,6).attr(Pt,bA.MISTY).target(AA.BOTH_SIDES),new sA(E.ELECTRIFY,t.ELECTRIC,-1,20,-1,0,6).attr(OE,d.ELECTRIFIED,!1,!0),new u(E.PLAY_ROUGH,t.FAIRY,G.PHYSICAL,90,90,10,10,0,6).attr(LA,[c.ATK],-1),new u(E.FAIRY_WIND,t.FAIRY,G.SPECIAL,40,100,30,-1,0,6).windMove(),new u(E.MOONBLAST,t.FAIRY,G.SPECIAL,95,100,15,30,0,6).attr(LA,[c.SPATK],-1),new u(E.BOOMBURST,t.NORMAL,G.SPECIAL,140,100,10,-1,0,6).soundBased().target(AA.ALL_NEAR_OTHERS),new sA(E.FAIRY_LOCK,t.FAIRY,-1,10,-1,0,6).ignoresSubstitute().ignoresProtect().target(AA.BOTH_SIDES).attr(Se,CA.FAIRY_LOCK,2,!0),new gA(E.KINGS_SHIELD,t.STEEL,-1,10,-1,4,6).attr(HO,d.KINGS_SHIELD).condition(JR),new sA(E.PLAY_NICE,t.NORMAL,-1,20,-1,0,6).attr(LA,[c.ATK],-1).ignoresSubstitute().reflectable(),new sA(E.CONFIDE,t.NORMAL,-1,20,-1,0,6).attr(LA,[c.SPATK],-1).soundBased().reflectable(),new u(E.DIAMOND_STORM,t.ROCK,G.PHYSICAL,100,95,5,50,0,6).attr(LA,[c.DEF],2,!0,{firstTargetOnly:!0}).makesContact(!1).target(AA.ALL_NEAR_ENEMIES),new u(E.STEAM_ERUPTION,t.WATER,G.SPECIAL,110,95,5,30,0,6).attr(ie,!0,J.FREEZE).attr(ie,!1,J.FREEZE).attr(yA,J.BURN),new u(E.HYPERSPACE_HOLE,t.PSYCHIC,G.SPECIAL,80,-1,5,-1,0,6).ignoresProtect().ignoresSubstitute(),new u(E.WATER_SHURIKEN,t.WATER,G.SPECIAL,15,100,20,-1,1,6).attr(VE).attr(hU).attr(sU),new u(E.MYSTICAL_FIRE,t.FIRE,G.SPECIAL,75,100,10,100,0,6).attr(LA,[c.SPATK],-1),new gA(E.SPIKY_SHIELD,t.GRASS,-1,10,-1,4,6).attr(HO,d.SPIKY_SHIELD).condition(JR),new sA(E.AROMATIC_MIST,t.FAIRY,-1,20,-1,0,6).attr(LA,[c.SPDEF],1).ignoresSubstitute().condition(CN).target(AA.NEAR_ALLY),new sA(E.EERIE_IMPULSE,t.ELECTRIC,100,15,-1,0,6).attr(LA,[c.SPATK],-2).reflectable(),new sA(E.VENOM_DRENCH,t.POISON,100,20,-1,0,6).attr(LA,[c.ATK,c.SPATK,c.SPD],-1,!1,{condition:r((R,e,I)=>{var L,N;return((L=e.status)==null?void 0:L.effect)===J.POISON||((N=e.status)==null?void 0:N.effect)===J.TOXIC},"condition")}).target(AA.ALL_NEAR_ENEMIES).reflectable(),new sA(E.POWDER,t.BUG,100,20,-1,1,6).attr(OE,d.POWDER,!1,!0).ignoresSubstitute().powderMove().reflectable(),new T0(E.GEOMANCY,t.FAIRY,-1,10,-1,0,6).chargeText(_.t("moveTriggers:isChargingPower",{pokemonName:"{USER}"})).attr(LA,[c.SPATK,c.SPDEF,c.SPD],2,!0),new sA(E.MAGNETIC_FLUX,t.ELECTRIC,-1,20,-1,0,6).attr(LA,[c.DEF,c.SPDEF],1,!1,{condition:r((R,e,I)=>!![O.PLUS,O.MINUS].find(L=>e.hasAbility(L,!1)),"condition")}).ignoresSubstitute().target(AA.USER_AND_ALLIES).condition((R,e,I)=>!![R,R.getAlly()].filter(L=>L==null?void 0:L.isActive()).find(L=>!![O.PLUS,O.MINUS].find(N=>L==null?void 0:L.hasAbility(N,!1)))),new sA(E.HAPPY_HOUR,t.NORMAL,-1,30,-1,0,6).attr(Se,CA.HAPPY_HOUR,null,!0).target(AA.USER_SIDE),new sA(E.ELECTRIC_TERRAIN,t.ELECTRIC,-1,10,-1,0,6).attr(Pt,bA.ELECTRIC).target(AA.BOTH_SIDES),new u(E.DAZZLING_GLEAM,t.FAIRY,G.SPECIAL,80,100,10,-1,0,6).target(AA.ALL_NEAR_ENEMIES),new gA(E.CELEBRATE,t.NORMAL,-1,40,-1,0,6).attr(RU),new sA(E.HOLD_HANDS,t.NORMAL,-1,40,-1,0,6).ignoresSubstitute().target(AA.NEAR_ALLY),new sA(E.BABY_DOLL_EYES,t.FAIRY,100,30,-1,1,6).attr(LA,[c.ATK],-1).reflectable(),new u(E.NUZZLE,t.ELECTRIC,G.PHYSICAL,20,100,20,100,0,6).attr(yA,J.PARALYSIS),new u(E.HOLD_BACK,t.NORMAL,G.PHYSICAL,40,100,40,-1,0,6).attr(ja),new u(E.INFESTATION,t.BUG,G.SPECIAL,20,100,20,-1,0,6).makesContact().attr(PO,d.INFESTATION),new u(E.POWER_UP_PUNCH,t.FIGHTING,G.PHYSICAL,40,100,20,100,0,6).attr(LA,[c.ATK],1,!0).punchingMove(),new u(E.OBLIVION_WING,t.FLYING,G.SPECIAL,80,100,10,-1,0,6).attr(uR,.75).triageMove(),new u(E.THOUSAND_ARROWS,t.GROUND,G.PHYSICAL,90,100,10,-1,0,6).attr(Io).attr(Bn).attr(yO,d.FLYING).attr(yO,d.FLOATING).attr(OE,d.INTERRUPTED).attr(HI,[d.FLYING,d.FLOATING,d.TELEKINESIS]).makesContact(!1).target(AA.ALL_NEAR_ENEMIES),new u(E.THOUSAND_WAVES,t.GROUND,G.PHYSICAL,90,100,10,-1,0,6).attr(OE,d.TRAPPED,!1,!1,1,1,!0).makesContact(!1).target(AA.ALL_NEAR_ENEMIES),new u(E.LANDS_WRATH,t.GROUND,G.PHYSICAL,90,100,10,-1,0,6).makesContact(!1).target(AA.ALL_NEAR_ENEMIES),new u(E.LIGHT_OF_RUIN,t.FAIRY,G.SPECIAL,140,90,5,-1,0,6).attr(HR,!1,.5).recklessMove(),new u(E.ORIGIN_PULSE,t.WATER,G.SPECIAL,110,85,10,-1,0,6).pulseMove().target(AA.ALL_NEAR_ENEMIES),new u(E.PRECIPICE_BLADES,t.GROUND,G.PHYSICAL,120,85,10,-1,0,6).makesContact(!1).target(AA.ALL_NEAR_ENEMIES),new u(E.DRAGON_ASCENT,t.FLYING,G.PHYSICAL,120,100,5,-1,0,6).attr(LA,[c.DEF,c.SPDEF],-1,!0),new u(E.HYPERSPACE_FURY,t.DARK,G.PHYSICAL,100,-1,5,-1,0,6).attr(LA,[c.DEF],-1,!0).ignoresSubstitute().makesContact(!1).ignoresProtect(),new u(E.BREAKNECK_BLITZ__PHYSICAL,t.NORMAL,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.BREAKNECK_BLITZ__SPECIAL,t.NORMAL,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.ALL_OUT_PUMMELING__PHYSICAL,t.FIGHTING,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.ALL_OUT_PUMMELING__SPECIAL,t.FIGHTING,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SUPERSONIC_SKYSTRIKE__PHYSICAL,t.FLYING,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SUPERSONIC_SKYSTRIKE__SPECIAL,t.FLYING,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.ACID_DOWNPOUR__PHYSICAL,t.POISON,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.ACID_DOWNPOUR__SPECIAL,t.POISON,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.TECTONIC_RAGE__PHYSICAL,t.GROUND,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.TECTONIC_RAGE__SPECIAL,t.GROUND,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.CONTINENTAL_CRUSH__PHYSICAL,t.ROCK,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.CONTINENTAL_CRUSH__SPECIAL,t.ROCK,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SAVAGE_SPIN_OUT__PHYSICAL,t.BUG,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SAVAGE_SPIN_OUT__SPECIAL,t.BUG,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.NEVER_ENDING_NIGHTMARE__PHYSICAL,t.GHOST,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.NEVER_ENDING_NIGHTMARE__SPECIAL,t.GHOST,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.CORKSCREW_CRASH__PHYSICAL,t.STEEL,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.CORKSCREW_CRASH__SPECIAL,t.STEEL,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.INFERNO_OVERDRIVE__PHYSICAL,t.FIRE,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.INFERNO_OVERDRIVE__SPECIAL,t.FIRE,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.HYDRO_VORTEX__PHYSICAL,t.WATER,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.HYDRO_VORTEX__SPECIAL,t.WATER,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.BLOOM_DOOM__PHYSICAL,t.GRASS,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.BLOOM_DOOM__SPECIAL,t.GRASS,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.GIGAVOLT_HAVOC__PHYSICAL,t.ELECTRIC,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.GIGAVOLT_HAVOC__SPECIAL,t.ELECTRIC,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SHATTERED_PSYCHE__PHYSICAL,t.PSYCHIC,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SHATTERED_PSYCHE__SPECIAL,t.PSYCHIC,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SUBZERO_SLAMMER__PHYSICAL,t.ICE,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SUBZERO_SLAMMER__SPECIAL,t.ICE,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.DEVASTATING_DRAKE__PHYSICAL,t.DRAGON,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.DEVASTATING_DRAKE__SPECIAL,t.DRAGON,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.BLACK_HOLE_ECLIPSE__PHYSICAL,t.DARK,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.BLACK_HOLE_ECLIPSE__SPECIAL,t.DARK,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.TWINKLE_TACKLE__PHYSICAL,t.FAIRY,G.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.TWINKLE_TACKLE__SPECIAL,t.FAIRY,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.CATASTROPIKA,t.ELECTRIC,G.PHYSICAL,210,-1,1,-1,0,7).unimplemented(),new gA(E.SHORE_UP,t.GROUND,-1,5,-1,0,7).attr(tU).triageMove(),new u(E.FIRST_IMPRESSION,t.BUG,G.PHYSICAL,90,100,10,-1,2,7).condition(new hT),new gA(E.BANEFUL_BUNKER,t.POISON,-1,10,-1,4,7).attr(HO,d.BANEFUL_BUNKER).condition(JR),new u(E.SPIRIT_SHACKLE,t.GHOST,G.PHYSICAL,80,100,10,100,0,7).attr(OE,d.TRAPPED,!1,!1,1,1,!0).makesContact(!1),new u(E.DARKEST_LARIAT,t.DARK,G.PHYSICAL,85,100,10,-1,0,7).attr(hN),new u(E.SPARKLING_ARIA,t.WATER,G.SPECIAL,90,100,10,100,0,7).attr(ie,!1,J.BURN).soundBased().target(AA.ALL_NEAR_OTHERS),new u(E.ICE_HAMMER,t.ICE,G.PHYSICAL,100,90,10,-1,0,7).attr(LA,[c.SPD],-1,!0).punchingMove(),new sA(E.FLORAL_HEALING,t.FAIRY,-1,10,-1,0,7).attr(LU,.5,2/3,!0,!1,(R,e,I)=>{var L;return((L=T.arena.terrain)==null?void 0:L.terrainType)===bA.GRASSY}).triageMove().reflectable(),new u(E.HIGH_HORSEPOWER,t.GROUND,G.PHYSICAL,95,95,10,-1,0,7),new sA(E.STRENGTH_SAP,t.GRASS,100,10,-1,0,7).attr(uR,null,c.ATK).attr(LA,[c.ATK],-1).condition((R,e,I)=>e.getStatStage(c.ATK)>-6).triageMove().reflectable(),new iR(E.SOLAR_BLADE,t.GRASS,G.PHYSICAL,125,100,10,-1,0,7).chargeText(_.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).chargeAttr(mN,[Z.SUNNY,Z.HARSH_SUN]).attr(on).slicingMove(),new u(E.LEAFAGE,t.GRASS,G.PHYSICAL,40,100,40,-1,0,7).makesContact(!1),new sA(E.SPOTLIGHT,t.NORMAL,-1,15,-1,3,7).attr(OE,d.CENTER_OF_ATTENTION,!1).condition(CN).reflectable(),new sA(E.TOXIC_THREAD,t.POISON,100,20,-1,0,7).attr(yA,J.POISON).attr(LA,[c.SPD],-1).reflectable(),new gA(E.LASER_FOCUS,t.NORMAL,-1,30,-1,0,7).attr(OE,d.ALWAYS_CRIT,!0,!1),new sA(E.GEAR_UP,t.STEEL,-1,20,-1,0,7).attr(LA,[c.ATK,c.SPATK],1,!1,{condition:r((R,e,I)=>!![O.PLUS,O.MINUS].find(L=>e.hasAbility(L,!1)),"condition")}).ignoresSubstitute().target(AA.USER_AND_ALLIES).condition((R,e,I)=>!![R,R.getAlly()].filter(L=>L==null?void 0:L.isActive()).find(L=>!![O.PLUS,O.MINUS].find(N=>L==null?void 0:L.hasAbility(N,!1)))),new u(E.THROAT_CHOP,t.DARK,G.PHYSICAL,80,100,15,100,0,7).attr(OE,d.THROAT_CHOPPED),new u(E.POLLEN_PUFF,t.BUG,G.SPECIAL,90,100,15,-1,0,7).attr(XU).attr(NU,.5,!0,!1).ballBombMove(),new u(E.ANCHOR_SHOT,t.STEEL,G.PHYSICAL,80,100,20,100,0,7).attr(OE,d.TRAPPED,!1,!1,1,1,!0),new sA(E.PSYCHIC_TERRAIN,t.PSYCHIC,-1,10,-1,0,7).attr(Pt,bA.PSYCHIC).target(AA.BOTH_SIDES),new u(E.LUNGE,t.BUG,G.PHYSICAL,80,100,15,100,0,7).attr(LA,[c.ATK],-1),new u(E.FIRE_LASH,t.FIRE,G.PHYSICAL,80,100,15,100,0,7).attr(LA,[c.DEF],-1),new u(E.POWER_TRIP,t.DARK,G.PHYSICAL,20,100,10,-1,0,7).attr(Mn),new u(E.BURN_UP,t.FIRE,G.SPECIAL,130,100,5,-1,0,7).condition(R=>R.getTypes(!0).includes(t.FIRE)).attr(ie,!0,J.FREEZE).attr(OE,d.BURNED_UP,!0,!1).attr(Wn,t.FIRE,R=>{T.phaseManager.queueMessage(_.t("moveTriggers:burnedItselfOut",{pokemonName:Q(R)}))}),new sA(E.SPEED_SWAP,t.PSYCHIC,-1,10,-1,0,7).attr(Yo,c.SPD).ignoresSubstitute(),new u(E.SMART_STRIKE,t.STEEL,G.PHYSICAL,70,-1,10,-1,0,7),new sA(E.PURIFY,t.POISON,-1,20,-1,0,7).condition((R,e,I)=>e.status?A2(e.status.effect):!1).attr(sR,.5).attr(ie,!1,KT()).triageMove().reflectable(),new u(E.REVELATION_DANCE,t.NORMAL,G.SPECIAL,90,100,15,-1,0,7).danceMove().attr(Oo),new u(E.CORE_ENFORCER,t.DRAGON,G.SPECIAL,100,100,10,-1,0,7).target(AA.ALL_NEAR_ENEMIES).attr(s0),new u(E.TROP_KICK,t.GRASS,G.PHYSICAL,70,100,15,100,0,7).attr(LA,[c.ATK],-1),new sA(E.INSTRUCT,t.PSYCHIC,-1,15,-1,0,7).ignoresSubstitute().attr(Ho).edgeCase(),new u(E.BEAK_BLAST,t.FLYING,G.PHYSICAL,100,100,15,-1,-3,7).attr(JC).ballBombMove().makesContact(!1),new u(E.CLANGING_SCALES,t.DRAGON,G.SPECIAL,110,100,5,-1,0,7).attr(LA,[c.DEF],-1,!0,{firstTargetOnly:!0}).soundBased().target(AA.ALL_NEAR_ENEMIES),new u(E.DRAGON_HAMMER,t.DRAGON,G.PHYSICAL,90,100,15,-1,0,7),new u(E.BRUTAL_SWING,t.DARK,G.PHYSICAL,60,100,20,-1,0,7).target(AA.ALL_NEAR_OTHERS),new sA(E.AURORA_VEIL,t.ICE,-1,20,-1,0,7).condition((R,e,I)=>{var L,N,S;return(((L=T.arena.weather)==null?void 0:L.weatherType)===Z.HAIL||((N=T.arena.weather)==null?void 0:N.weatherType)===Z.SNOW)&&!((S=T.arena.weather)!=null&&S.isEffectSuppressed())}).attr(Se,CA.AURORA_VEIL,5,!0).target(AA.USER_SIDE),new u(E.SINISTER_ARROW_RAID,t.GHOST,G.PHYSICAL,180,-1,1,-1,0,7).unimplemented().makesContact(!1).edgeCase(),new u(E.MALICIOUS_MOONSAULT,t.DARK,G.PHYSICAL,180,-1,1,-1,0,7).unimplemented().attr(gO).attr(yO,d.MINIMIZED,!0).edgeCase(),new u(E.OCEANIC_OPERETTA,t.WATER,G.SPECIAL,195,-1,1,-1,0,7).unimplemented().edgeCase(),new u(E.GUARDIAN_OF_ALOLA,t.FAIRY,G.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new u(E.SOUL_STEALING_7_STAR_STRIKE,t.GHOST,G.PHYSICAL,195,-1,1,-1,0,7).unimplemented(),new u(E.STOKED_SPARKSURFER,t.ELECTRIC,G.SPECIAL,175,-1,1,100,0,7).unimplemented().edgeCase(),new u(E.PULVERIZING_PANCAKE,t.NORMAL,G.PHYSICAL,210,-1,1,-1,0,7).unimplemented().edgeCase(),new gA(E.EXTREME_EVOBOOST,t.NORMAL,-1,1,-1,0,7).unimplemented().attr(LA,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],2,!0),new u(E.GENESIS_SUPERNOVA,t.PSYCHIC,G.SPECIAL,185,-1,1,100,0,7).unimplemented().attr(Pt,bA.PSYCHIC),new u(E.SHELL_TRAP,t.FIRE,G.SPECIAL,150,100,5,-1,-3,7).attr(qa,d.SHELL_TRAP).target(AA.ALL_NEAR_ENEMIES).condition((R,e,I)=>{var L;return((L=R.getTag(oC))==null?void 0:L.activated)===!0}),new u(E.FLEUR_CANNON,t.FAIRY,G.SPECIAL,130,90,5,-1,0,7).attr(LA,[c.SPATK],-2,!0),new u(E.PSYCHIC_FANGS,t.PSYCHIC,G.PHYSICAL,85,100,10,-1,0,7).bitingMove().attr(UL),new u(E.STOMPING_TANTRUM,t.GROUND,G.PHYSICAL,75,100,10,-1,0,7).attr(vE,(R,e,I)=>{var L,N;return((L=R.getLastXMoves(2)[1])==null?void 0:L.result)===De.MISS||((N=R.getLastXMoves(2)[1])==null?void 0:N.result)===De.FAIL?2:1}),new u(E.SHADOW_BONE,t.GHOST,G.PHYSICAL,85,100,10,20,0,7).attr(LA,[c.DEF],-1).makesContact(!1),new u(E.ACCELEROCK,t.ROCK,G.PHYSICAL,40,100,20,-1,1,7),new u(E.LIQUIDATION,t.WATER,G.PHYSICAL,85,100,10,20,0,7).attr(LA,[c.DEF],-1),new u(E.PRISMATIC_LASER,t.PSYCHIC,G.SPECIAL,160,100,10,-1,0,7).attr(GO),new u(E.SPECTRAL_THIEF,t.GHOST,G.PHYSICAL,90,100,10,-1,0,7).attr(VU).ignoresSubstitute(),new u(E.SUNSTEEL_STRIKE,t.STEEL,G.PHYSICAL,100,100,5,-1,0,7).ignoresAbilities(),new u(E.MOONGEIST_BEAM,t.GHOST,G.SPECIAL,100,100,5,-1,0,7).ignoresAbilities(),new sA(E.TEARFUL_LOOK,t.NORMAL,-1,20,-1,0,7).attr(LA,[c.ATK,c.SPATK],-1).reflectable(),new u(E.ZING_ZAP,t.ELECTRIC,G.PHYSICAL,80,100,10,30,0,7).attr(mE),new u(E.NATURES_MADNESS,t.FAIRY,G.SPECIAL,-1,90,10,-1,0,7).attr(dN),new u(E.MULTI_ATTACK,t.NORMAL,G.PHYSICAL,120,100,10,-1,0,7).attr(un),new u(E.TEN_MILLION_VOLT_THUNDERBOLT,t.ELECTRIC,G.SPECIAL,195,-1,1,-1,0,7).unimplemented().edgeCase(),new u(E.MIND_BLOWN,t.FIRE,G.SPECIAL,150,100,5,-1,0,7).condition(Ei).attr(En).target(AA.ALL_NEAR_OTHERS),new u(E.PLASMA_FISTS,t.ELECTRIC,G.PHYSICAL,100,100,15,-1,0,7).attr(Se,CA.ION_DELUGE,1).punchingMove(),new u(E.PHOTON_GEYSER,t.PSYCHIC,G.SPECIAL,100,100,5,-1,0,7).attr(Pn).ignoresAbilities(),new u(E.LIGHT_THAT_BURNS_THE_SKY,t.PSYCHIC,G.SPECIAL,200,-1,1,-1,0,7).unimplemented().attr(Pn).ignoresAbilities(),new u(E.SEARING_SUNRAZE_SMASH,t.STEEL,G.PHYSICAL,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new u(E.MENACING_MOONRAZE_MAELSTROM,t.GHOST,G.SPECIAL,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new u(E.LETS_SNUGGLE_FOREVER,t.FAIRY,G.PHYSICAL,190,-1,1,-1,0,7).unimplemented().edgeCase(),new u(E.SPLINTERED_STORMSHARDS,t.ROCK,G.PHYSICAL,190,-1,1,-1,0,7).unimplemented().attr(TL).makesContact(!1),new u(E.CLANGOROUS_SOULBLAZE,t.DRAGON,G.SPECIAL,185,-1,1,100,0,7).unimplemented().attr(LA,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],1,!0,{firstTargetOnly:!0}).soundBased().target(AA.ALL_NEAR_ENEMIES).edgeCase(),new u(E.ZIPPY_ZAP,t.ELECTRIC,G.PHYSICAL,50,100,15,-1,2,7).attr(XI),new u(E.SPLISHY_SPLASH,t.WATER,G.SPECIAL,90,100,15,30,0,7).attr(yA,J.PARALYSIS).target(AA.ALL_NEAR_ENEMIES),new u(E.FLOATY_FALL,t.FLYING,G.PHYSICAL,90,95,15,30,0,7).attr(mE),new u(E.PIKA_PAPOW,t.ELECTRIC,G.SPECIAL,-1,-1,20,-1,0,7).attr(aL),new u(E.BOUNCY_BUBBLE,t.WATER,G.SPECIAL,60,100,20,-1,0,7).attr(uR,1).triageMove(),new u(E.BUZZY_BUZZ,t.ELECTRIC,G.SPECIAL,60,100,20,100,0,7).attr(yA,J.PARALYSIS),new u(E.SIZZLY_SLIDE,t.FIRE,G.PHYSICAL,60,100,20,100,0,7).attr(yA,J.BURN),new u(E.GLITZY_GLOW,t.PSYCHIC,G.SPECIAL,80,95,15,-1,0,7).attr(Se,CA.LIGHT_SCREEN,5,!1,!0),new u(E.BADDY_BAD,t.DARK,G.SPECIAL,80,95,15,-1,0,7).attr(Se,CA.REFLECT,5,!1,!0),new u(E.SAPPY_SEED,t.GRASS,G.PHYSICAL,100,90,10,-1,0,7).attr(cn).makesContact(!1),new u(E.FREEZY_FROST,t.ICE,G.SPECIAL,100,90,10,-1,0,7).attr(wN,!0),new u(E.SPARKLY_SWIRL,t.FAIRY,G.SPECIAL,120,85,5,-1,0,7).attr(pN,null,O.NONE),new u(E.VEEVEE_VOLLEY,t.NORMAL,G.PHYSICAL,-1,-1,20,-1,0,7).attr(aL),new u(E.DOUBLE_IRON_BASH,t.STEEL,G.PHYSICAL,60,100,5,30,0,7).attr(VE,Le._2).attr(mE).punchingMove(),new gA(E.MAX_GUARD,t.NORMAL,-1,10,-1,4,8).unimplemented().attr(HO).condition(JR),new u(E.DYNAMAX_CANNON,t.DRAGON,G.SPECIAL,100,100,5,-1,0,8).attr(vE,(R,e,I)=>e.level>T.getMaxExpLevel()?1+Math.min(1,(e.level-T.getMaxExpLevel())/(T.getMaxExpLevel()*.05)):1),new u(E.SNIPE_SHOT,t.WATER,G.SPECIAL,80,100,15,-1,0,8).attr(re).attr(nL),new u(E.JAW_LOCK,t.DARK,G.PHYSICAL,80,100,10,-1,0,8).attr(ao).bitingMove(),new gA(E.STUFF_CHEEKS,t.NORMAL,-1,10,-1,0,8).attr(XS,!0).attr(LA,[c.DEF],2,!0).condition(R=>T.findModifiers(I=>I instanceof ce,R.isPlayer()).length>0).edgeCase(),new gA(E.NO_RETREAT,t.FIGHTING,-1,5,-1,0,8).attr(LA,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],1,!0).attr(OE,d.NO_RETREAT,!0,!1).condition((R,e,I)=>{var L;return((L=R.getTag(WO))==null?void 0:L.sourceMove)!==E.NO_RETREAT}),new sA(E.TAR_SHOT,t.ROCK,100,15,-1,0,8).attr(LA,[c.SPD],-1).attr(OE,d.TAR_SHOT,!1).reflectable(),new sA(E.MAGIC_POWDER,t.PSYCHIC,100,20,-1,0,8).attr(hn,t.PSYCHIC).powderMove().reflectable(),new u(E.DRAGON_DARTS,t.DRAGON,G.PHYSICAL,50,100,10,-1,0,8).attr(VE,Le._2).makesContact(!1).partial(),new sA(E.TEATIME,t.NORMAL,-1,10,-1,0,8).attr(XS,!1).target(AA.ALL),new sA(E.OCTOLOCK,t.FIGHTING,100,15,-1,0,8).condition(Ri).attr(OE,d.OCTOLOCK,!1,!0,1),new u(E.BOLT_BEAK,t.ELECTRIC,G.PHYSICAL,85,100,10,-1,0,8).attr(Cn),new u(E.FISHIOUS_REND,t.WATER,G.PHYSICAL,85,100,10,-1,0,8).attr(Cn).bitingMove(),new sA(E.COURT_CHANGE,t.NORMAL,100,10,-1,0,8).attr(Uo,[CA.AURORA_VEIL,CA.LIGHT_SCREEN,CA.MIST,CA.REFLECT,CA.SPIKES,CA.STEALTH_ROCK,CA.STICKY_WEB,CA.TAILWIND,CA.TOXIC_SPIKES]),new u(E.MAX_FLARE,t.FIRE,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_FLUTTERBY,t.BUG,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_LIGHTNING,t.ELECTRIC,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_STRIKE,t.NORMAL,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_KNUCKLE,t.FIGHTING,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_PHANTASM,t.GHOST,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_HAILSTORM,t.ICE,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_OOZE,t.POISON,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_GEYSER,t.WATER,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_AIRSTREAM,t.FLYING,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_STARFALL,t.FAIRY,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_WYRMWIND,t.DRAGON,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_MINDSTORM,t.PSYCHIC,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_ROCKFALL,t.ROCK,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_QUAKE,t.GROUND,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_DARKNESS,t.DARK,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_OVERGROWTH,t.GRASS,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new u(E.MAX_STEELSPIKE,t.STEEL,G.PHYSICAL,10,-1,10,-1,0,8).target(AA.NEAR_ENEMY).unimplemented(),new gA(E.CLANGOROUS_SOUL,t.DRAGON,100,5,-1,0,8).attr(VN,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],1,3).soundBased().danceMove(),new u(E.BODY_PRESS,t.FIGHTING,G.PHYSICAL,80,100,10,-1,0,8).attr(vU),new sA(E.DECORATE,t.FAIRY,-1,15,-1,0,8).attr(LA,[c.ATK,c.SPATK],2).ignoresProtect(),new u(E.DRUM_BEATING,t.GRASS,G.PHYSICAL,80,100,10,100,0,8).attr(LA,[c.SPD],-1).makesContact(!1),new u(E.SNAP_TRAP,t.GRASS,G.PHYSICAL,35,100,15,-1,0,8).attr(PO,d.SNAP_TRAP),new u(E.PYRO_BALL,t.FIRE,G.PHYSICAL,120,90,5,10,0,8).attr(ie,!0,J.FREEZE).attr(yA,J.BURN).ballBombMove().makesContact(!1),new u(E.BEHEMOTH_BLADE,t.STEEL,G.PHYSICAL,100,100,5,-1,0,8).slicingMove(),new u(E.BEHEMOTH_BASH,t.STEEL,G.PHYSICAL,100,100,5,-1,0,8),new u(E.AURA_WHEEL,t.ELECTRIC,G.PHYSICAL,110,100,10,100,0,8).attr(LA,[c.SPD],1,!0).makesContact(!1).attr($U),new u(E.BREAKING_SWIPE,t.DRAGON,G.PHYSICAL,60,100,15,100,0,8).target(AA.ALL_NEAR_ENEMIES).attr(LA,[c.ATK],-1),new u(E.BRANCH_POKE,t.GRASS,G.PHYSICAL,40,100,40,-1,0,8),new u(E.OVERDRIVE,t.ELECTRIC,G.SPECIAL,80,100,10,-1,0,8).soundBased().target(AA.ALL_NEAR_ENEMIES),new u(E.APPLE_ACID,t.GRASS,G.SPECIAL,80,100,10,100,0,8).attr(LA,[c.SPDEF],-1),new u(E.GRAV_APPLE,t.GRASS,G.PHYSICAL,80,100,10,100,0,8).attr(LA,[c.DEF],-1).attr(vE,(R,e,I)=>T.arena.getTag(CA.GRAVITY)?1.5:1).makesContact(!1),new u(E.SPIRIT_BREAK,t.FAIRY,G.PHYSICAL,75,100,15,100,0,8).attr(LA,[c.SPATK],-1),new u(E.STRANGE_STEAM,t.FAIRY,G.SPECIAL,90,95,10,20,0,8).attr(be),new sA(E.LIFE_DEW,t.WATER,-1,10,-1,0,8).attr(sR,.25,!0,!1).target(AA.USER_AND_ALLIES).ignoresProtect(),new gA(E.OBSTRUCT,t.DARK,100,10,-1,4,8).attr(HO,d.OBSTRUCT).condition(JR),new u(E.FALSE_SURRENDER,t.DARK,G.PHYSICAL,80,-1,10,-1,0,8),new u(E.METEOR_ASSAULT,t.FIGHTING,G.PHYSICAL,150,100,5,-1,0,8).attr(GO).makesContact(!1),new u(E.ETERNABEAM,t.DRAGON,G.SPECIAL,160,90,5,-1,0,8).attr(GO),new u(E.STEEL_BEAM,t.STEEL,G.SPECIAL,140,95,5,-1,0,8).attr(En),new u(E.EXPANDING_FORCE,t.PSYCHIC,G.SPECIAL,80,100,10,-1,0,8).attr(vE,(R,e,I)=>T.arena.getTerrainType()===bA.PSYCHIC&&R.isGrounded()?1.5:1).attr(Zn,(R,e,I)=>T.arena.getTerrainType()===bA.PSYCHIC&&R.isGrounded()?AA.ALL_NEAR_ENEMIES:AA.NEAR_OTHER),new u(E.STEEL_ROLLER,t.STEEL,G.PHYSICAL,130,100,5,-1,0,8).attr(TL).condition((R,e,I)=>!!T.arena.terrain),new u(E.SCALE_SHOT,t.DRAGON,G.PHYSICAL,25,90,20,-1,0,8).attr(LA,[c.SPD],1,!0,{lastHitOnly:!0}).attr(LA,[c.DEF],-1,!0,{lastHitOnly:!0}).attr(VE).makesContact(!1),new iR(E.METEOR_BEAM,t.ROCK,G.SPECIAL,120,90,10,-1,0,8).chargeText(_.t("moveTriggers:isOverflowingWithSpacePower",{pokemonName:"{USER}"})).chargeAttr(LA,[c.SPATK],1,!0),new u(E.SHELL_SIDE_ARM,t.POISON,G.SPECIAL,90,100,10,20,0,8).attr(QU).attr(yA,J.POISON).partial(),new u(E.MISTY_EXPLOSION,t.FAIRY,G.SPECIAL,100,100,5,-1,0,8).attr(BL).target(AA.ALL_NEAR_OTHERS).attr(vE,(R,e,I)=>T.arena.getTerrainType()===bA.MISTY&&R.isGrounded()?1.5:1).condition(Ei).makesContact(!1),new u(E.GRASSY_GLIDE,t.GRASS,G.PHYSICAL,55,100,20,-1,0,8).attr(SU,(R,e,I)=>T.arena.getTerrainType()===bA.GRASSY&&R.isGrounded()),new u(E.RISING_VOLTAGE,t.ELECTRIC,G.SPECIAL,70,100,20,-1,0,8).attr(vE,(R,e,I)=>T.arena.getTerrainType()===bA.ELECTRIC&&e.isGrounded()?2:1),new u(E.TERRAIN_PULSE,t.NORMAL,G.SPECIAL,50,100,10,-1,0,8).attr(Ao).attr(vE,(R,e,I)=>T.arena.getTerrainType()!==bA.NONE&&R.isGrounded()?2:1).pulseMove(),new u(E.SKITTER_SMACK,t.BUG,G.PHYSICAL,70,90,10,100,0,8).attr(LA,[c.SPATK],-1),new u(E.BURNING_JEALOUSY,t.FIRE,G.SPECIAL,70,100,5,100,0,8).attr(go,J.BURN).target(AA.ALL_NEAR_ENEMIES),new u(E.LASH_OUT,t.DARK,G.PHYSICAL,75,100,5,-1,0,8).attr(vE,(R,e,I)=>R.turnData.statStagesDecreased?2:1),new u(E.POLTERGEIST,t.GHOST,G.PHYSICAL,110,90,5,-1,0,8).condition(Q6).attr(NL,J6).makesContact(!1),new sA(E.CORROSIVE_GAS,t.POISON,100,40,-1,0,8).target(AA.ALL_NEAR_OTHERS).reflectable().unimplemented(),new sA(E.COACHING,t.FIGHTING,-1,10,-1,0,8).attr(LA,[c.ATK,c.DEF],1).target(AA.NEAR_ALLY).condition(CN),new u(E.FLIP_TURN,t.WATER,G.PHYSICAL,60,100,20,-1,0,8).attr(EO,!0),new u(E.TRIPLE_AXEL,t.ICE,G.PHYSICAL,20,90,10,-1,0,8).attr(VE,Le._3).attr(Dn,3).checkAllHits(),new u(E.DUAL_WINGBEAT,t.FLYING,G.PHYSICAL,40,90,10,-1,0,8).attr(VE,Le._2),new u(E.SCORCHING_SANDS,t.GROUND,G.SPECIAL,70,100,10,30,0,8).attr(ie,!0,J.FREEZE).attr(ie,!1,J.FREEZE).attr(yA,J.BURN),new sA(E.JUNGLE_HEALING,t.GRASS,-1,10,-1,0,8).attr(sR,.25,!0,!1).attr(ie,!1,KT()).target(AA.USER_AND_ALLIES),new u(E.WICKED_BLOW,t.DARK,G.PHYSICAL,75,100,5,-1,0,8).attr(XI).punchingMove(),new u(E.SURGING_STRIKES,t.WATER,G.PHYSICAL,25,100,5,-1,0,8).attr(VE,Le._3).attr(XI).punchingMove(),new u(E.THUNDER_CAGE,t.ELECTRIC,G.SPECIAL,80,90,15,-1,0,8).attr(PO,d.THUNDER_CAGE),new u(E.DRAGON_ENERGY,t.DRAGON,G.SPECIAL,150,100,5,-1,0,8).attr(ZN).target(AA.ALL_NEAR_ENEMIES),new u(E.FREEZING_GLARE,t.PSYCHIC,G.SPECIAL,90,100,10,10,0,8).attr(yA,J.FREEZE),new u(E.FIERY_WRATH,t.DARK,G.SPECIAL,90,100,10,20,0,8).attr(mE).target(AA.ALL_NEAR_ENEMIES),new u(E.THUNDEROUS_KICK,t.FIGHTING,G.PHYSICAL,90,100,10,100,0,8).attr(LA,[c.DEF],-1),new u(E.GLACIAL_LANCE,t.ICE,G.PHYSICAL,120,100,5,-1,0,8).target(AA.ALL_NEAR_ENEMIES).makesContact(!1),new u(E.ASTRAL_BARRAGE,t.GHOST,G.SPECIAL,120,100,5,-1,0,8).target(AA.ALL_NEAR_ENEMIES),new u(E.EERIE_SPELL,t.PSYCHIC,G.SPECIAL,80,100,5,100,0,8).attr(uo,3).soundBased(),new u(E.DIRE_CLAW,t.POISON,G.PHYSICAL,80,100,15,50,0,8).attr(In,[J.POISON,J.PARALYSIS,J.SLEEP]),new u(E.PSYSHIELD_BASH,t.PSYCHIC,G.PHYSICAL,70,90,10,100,0,8).attr(LA,[c.DEF],1,!0),new gA(E.POWER_SHIFT,t.NORMAL,-1,10,-1,0,8).target(AA.USER).attr(Wo,c.ATK,c.DEF),new u(E.STONE_AXE,t.ROCK,G.PHYSICAL,65,90,15,100,0,8).attr(Yn,CA.STEALTH_ROCK).slicingMove(),new u(E.SPRINGTIDE_STORM,t.FAIRY,G.SPECIAL,100,80,5,30,0,8).attr(LA,[c.ATK],-1).windMove().target(AA.ALL_NEAR_ENEMIES),new u(E.MYSTICAL_POWER,t.PSYCHIC,G.SPECIAL,70,90,10,100,0,8).attr(LA,[c.SPATK],1,!0),new u(E.RAGING_FURY,t.FIRE,G.PHYSICAL,120,100,10,-1,0,8).makesContact(!1).attr(rL).attr(jO,xI).attr(AI,xI).target(AA.RANDOM_NEAR_ENEMY),new u(E.WAVE_CRASH,t.WATER,G.PHYSICAL,120,100,10,-1,0,8).attr(HR,!1,.33).recklessMove(),new u(E.CHLOROBLAST,t.GRASS,G.SPECIAL,150,95,5,-1,0,8).attr(HR,!0,.5),new u(E.MOUNTAIN_GALE,t.ICE,G.PHYSICAL,100,85,10,30,0,8).makesContact(!1).attr(mE),new gA(E.VICTORY_DANCE,t.FIGHTING,-1,10,-1,0,8).attr(LA,[c.ATK,c.DEF,c.SPD],1,!0).danceMove(),new u(E.HEADLONG_RUSH,t.GROUND,G.PHYSICAL,120,100,5,-1,0,8).attr(LA,[c.DEF,c.SPDEF],-1,!0).punchingMove(),new u(E.BARB_BARRAGE,t.POISON,G.PHYSICAL,60,100,10,50,0,8).makesContact(!1).attr(vE,(R,e,I)=>e.status&&(e.status.effect===J.POISON||e.status.effect===J.TOXIC)?2:1).attr(yA,J.POISON),new u(E.ESPER_WING,t.PSYCHIC,G.SPECIAL,80,100,10,100,0,8).attr(re).attr(LA,[c.SPD],1,!0),new u(E.BITTER_MALICE,t.GHOST,G.SPECIAL,75,100,10,100,0,8).attr(LA,[c.ATK],-1),new gA(E.SHELTER,t.STEEL,-1,10,-1,0,8).attr(LA,[c.DEF],2,!0),new u(E.TRIPLE_ARROWS,t.FIGHTING,G.PHYSICAL,90,100,10,30,0,8).makesContact(!1).attr(re).attr(LA,[c.DEF],-1,!1,{effectChanceOverride:50}).attr(mE),new u(E.INFERNAL_PARADE,t.GHOST,G.SPECIAL,60,100,15,30,0,8).attr(yA,J.BURN).attr(vE,(R,e,I)=>e.status?2:1),new u(E.CEASELESS_EDGE,t.DARK,G.PHYSICAL,65,90,15,100,0,8).attr(Yn,CA.SPIKES).slicingMove(),new u(E.BLEAKWIND_STORM,t.FLYING,G.SPECIAL,100,80,10,30,0,8).attr(JN).attr(LA,[c.SPD],-1).windMove().target(AA.ALL_NEAR_ENEMIES),new u(E.WILDBOLT_STORM,t.ELECTRIC,G.SPECIAL,100,80,10,20,0,8).attr(JN).attr(yA,J.PARALYSIS).windMove().target(AA.ALL_NEAR_ENEMIES),new u(E.SANDSEAR_STORM,t.GROUND,G.SPECIAL,100,80,10,20,0,8).attr(JN).attr(yA,J.BURN).windMove().target(AA.ALL_NEAR_ENEMIES),new sA(E.LUNAR_BLESSING,t.PSYCHIC,-1,5,-1,0,8).attr(sR,.25,!0,!1).attr(ie,!1,KT()).target(AA.USER_AND_ALLIES).triageMove(),new gA(E.TAKE_HEART,t.PSYCHIC,-1,10,-1,0,8).attr(LA,[c.SPATK,c.SPDEF],1,!0).attr(ie,!0,[J.PARALYSIS,J.POISON,J.TOXIC,J.BURN,J.SLEEP]),new u(E.TERA_BLAST,t.NORMAL,G.SPECIAL,80,100,10,-1,0,9).attr(Hn).attr(eo).attr(kU).attr(LA,[c.ATK,c.SPATK],-1,!0,{condition:r((R,e,I)=>R.isTerastallized&&R.isOfType(t.STELLAR),"condition")}),new gA(E.SILK_TRAP,t.BUG,-1,10,-1,4,9).attr(HO,d.SILK_TRAP).condition(JR),new u(E.AXE_KICK,t.FIGHTING,G.PHYSICAL,120,90,10,30,0,9).attr(jO,at).attr(AI,at).attr(be).recklessMove(),new u(E.LAST_RESPECTS,t.GHOST,G.PHYSICAL,50,100,10,-1,0,9).attr(vE,(R,e,I)=>1+Math.min(R.isPlayer()?T.arena.playerFaints:T.currentBattle.enemyFaints,100)).makesContact(!1),new u(E.LUMINA_CRASH,t.PSYCHIC,G.SPECIAL,80,100,10,100,0,9).attr(LA,[c.SPDEF],-2),new u(E.ORDER_UP,t.DRAGON,G.PHYSICAL,80,100,10,100,0,9).attr(DU).makesContact(!1),new u(E.JET_PUNCH,t.WATER,G.PHYSICAL,60,100,15,-1,1,9).punchingMove(),new sA(E.SPICY_EXTRACT,t.GRASS,-1,15,-1,0,9).attr(LA,[c.ATK],2).attr(LA,[c.DEF],-2),new u(E.SPIN_OUT,t.STEEL,G.PHYSICAL,100,100,5,-1,0,9).attr(LA,[c.SPD],-2,!0),new u(E.POPULATION_BOMB,t.NORMAL,G.PHYSICAL,20,90,10,-1,0,9).attr(VE,Le._10).slicingMove().checkAllHits(),new u(E.ICE_SPINNER,t.ICE,G.PHYSICAL,80,100,15,-1,0,9).attr(TL),new u(E.GLAIVE_RUSH,t.DRAGON,G.PHYSICAL,120,100,5,-1,0,9).attr(OE,d.ALWAYS_GET_HIT,!0,!1,0,0,!0).attr(OE,d.RECEIVE_DOUBLE_DAMAGE,!0,!1,0,0,!0).condition((R,e,I)=>{var L,N;return!(((L=e.getTag(d.PROTECTED))==null?void 0:L.tagType)==="PROTECTED"||((N=T.arena.getTag(CA.MAT_BLOCK))==null?void 0:N.tagType)==="MAT_BLOCK")}),new sA(E.REVIVAL_BLESSING,t.NORMAL,-1,1,-1,0,9).triageMove().attr(oo).target(AA.USER),new u(E.SALT_CURE,t.ROCK,G.PHYSICAL,40,100,15,100,0,9).attr(OE,d.SALT_CURED).makesContact(!1),new u(E.TRIPLE_DIVE,t.WATER,G.PHYSICAL,30,95,10,-1,0,9).attr(VE,Le._3),new u(E.MORTAL_SPIN,t.POISON,G.PHYSICAL,30,100,15,100,0,9).attr(ro,[d.BIND,d.WRAP,d.FIRE_SPIN,d.WHIRLPOOL,d.CLAMP,d.SAND_TOMB,d.MAGMA_STORM,d.SNAP_TRAP,d.THUNDER_CAGE,d.SEEDED,d.INFESTATION],!0).attr(yA,J.POISON).attr(CL).target(AA.ALL_NEAR_ENEMIES),new sA(E.DOODLE,t.NORMAL,100,10,-1,0,9).attr(Vn,!0),new gA(E.FILLET_AWAY,t.NORMAL,-1,10,-1,0,9).attr(VN,[c.ATK,c.SPATK,c.SPD],2,2),new u(E.KOWTOW_CLEAVE,t.DARK,G.PHYSICAL,85,-1,10,-1,0,9).slicingMove(),new u(E.FLOWER_TRICK,t.GRASS,G.PHYSICAL,70,-1,10,-1,0,9).attr(XI).makesContact(!1),new u(E.TORCH_SONG,t.FIRE,G.SPECIAL,80,100,10,100,0,9).attr(LA,[c.SPATK],1,!0).soundBased(),new u(E.AQUA_STEP,t.WATER,G.PHYSICAL,80,100,10,100,0,9).attr(LA,[c.SPD],1,!0).danceMove(),new u(E.RAGING_BULL,t.NORMAL,G.PHYSICAL,90,100,10,-1,0,9).attr(qU).attr(UL),new u(E.MAKE_IT_RAIN,t.STEEL,G.SPECIAL,120,100,5,-1,0,9).attr(xn).attr(LA,[c.SPATK],-1,!0,{firstTargetOnly:!0}).target(AA.ALL_NEAR_ENEMIES),new u(E.PSYBLADE,t.PSYCHIC,G.PHYSICAL,80,100,15,-1,0,9).attr(vE,(R,e,I)=>T.arena.getTerrainType()===bA.ELECTRIC&&R.isGrounded()?1.5:1).slicingMove(),new u(E.HYDRO_STEAM,t.WATER,G.SPECIAL,80,100,15,-1,0,9).attr(IU,Z.SUNNY).attr(vE,(R,e,I)=>{const L=T.arena.weather;return L&&[Z.SUNNY,Z.HARSH_SUN].includes(L.weatherType)&&!L.isEffectSuppressed()?1.5:1}),new u(E.RUINATION,t.DARK,G.SPECIAL,-1,90,10,-1,0,9).attr(dN),new u(E.COLLISION_COURSE,t.FIGHTING,G.PHYSICAL,100,100,5,-1,0,9).attr(vE,(R,e,I)=>e.getAttackTypeEffectiveness(I.type,R)>=2?5461/4096:1),new u(E.ELECTRO_DRIFT,t.ELECTRIC,G.SPECIAL,100,100,5,-1,0,9).attr(vE,(R,e,I)=>e.getAttackTypeEffectiveness(I.type,R)>=2?5461/4096:1).makesContact(),new gA(E.SHED_TAIL,t.NORMAL,-1,10,-1,0,9).attr(en,.5,!0).attr(EO,!0,ER.SHED_TAIL).condition(ei),new gA(E.CHILLY_RECEPTION,t.ICE,-1,10,-1,0,9).attr(NL,(R,e)=>_.t("moveTriggers:chillyReception",{pokemonName:Q(R)})).attr(Mo,!0),new gA(E.TIDY_UP,t.NORMAL,-1,10,-1,0,9).attr(LA,[c.ATK,c.SPD],1,!0).attr(CL,!0).attr(Co),new sA(E.SNOWSCAPE,t.ICE,-1,10,-1,0,9).attr(Gt,Z.SNOW).target(AA.BOTH_SIDES),new u(E.POUNCE,t.BUG,G.PHYSICAL,50,100,20,100,0,9).attr(LA,[c.SPD],-1),new u(E.TRAILBLAZE,t.GRASS,G.PHYSICAL,50,100,20,100,0,9).attr(LA,[c.SPD],1,!0),new u(E.CHILLING_WATER,t.WATER,G.SPECIAL,50,100,20,100,0,9).attr(LA,[c.ATK],-1),new u(E.HYPER_DRILL,t.NORMAL,G.PHYSICAL,100,100,5,-1,0,9).ignoresProtect(),new u(E.TWIN_BEAM,t.PSYCHIC,G.SPECIAL,40,100,10,-1,0,9).attr(VE,Le._2),new u(E.RAGE_FIST,t.GHOST,G.PHYSICAL,50,100,10,-1,0,9).attr(FU).punchingMove(),new u(E.ARMOR_CANNON,t.FIRE,G.SPECIAL,120,100,5,-1,0,9).attr(LA,[c.DEF,c.SPDEF],-1,!0),new u(E.BITTER_BLADE,t.FIRE,G.PHYSICAL,90,100,10,-1,0,9).attr(uR).slicingMove().triageMove(),new u(E.DOUBLE_SHOCK,t.ELECTRIC,G.PHYSICAL,120,100,5,-1,0,9).condition(R=>R.getTypes(!0).includes(t.ELECTRIC)).attr(OE,d.DOUBLE_SHOCKED,!0,!1).attr(Wn,t.ELECTRIC,R=>{T.phaseManager.queueMessage(_.t("moveTriggers:usedUpAllElectricity",{pokemonName:Q(R)}))}),new u(E.GIGATON_HAMMER,t.STEEL,G.PHYSICAL,160,100,5,-1,0,9).makesContact(!1).condition((R,e,I)=>{const L=R.getLastXMoves(1);return!L.length||L[0].move!==I.id||L[0].result!==De.SUCCESS}),new u(E.COMEUPPANCE,t.DARK,G.PHYSICAL,-1,100,10,-1,0,9).attr(SL,R=>R.category===G.PHYSICAL||R.category===G.SPECIAL,1.5).redirectCounter().target(AA.ATTACKER),new u(E.AQUA_CUTTER,t.WATER,G.PHYSICAL,70,100,20,-1,0,9).attr(re).slicingMove().makesContact(!1),new u(E.BLAZING_TORQUE,t.FIRE,G.PHYSICAL,80,100,10,30,0,9).attr(yA,J.BURN).makesContact(!1),new u(E.WICKED_TORQUE,t.DARK,G.PHYSICAL,80,100,10,10,0,9).attr(yA,J.SLEEP).makesContact(!1),new u(E.NOXIOUS_TORQUE,t.POISON,G.PHYSICAL,100,100,10,30,0,9).attr(yA,J.POISON).makesContact(!1),new u(E.COMBAT_TORQUE,t.FIGHTING,G.PHYSICAL,100,100,10,30,0,9).attr(yA,J.PARALYSIS).makesContact(!1),new u(E.MAGICAL_TORQUE,t.FAIRY,G.PHYSICAL,100,100,10,30,0,9).attr(be).makesContact(!1),new u(E.BLOOD_MOON,t.NORMAL,G.SPECIAL,140,100,5,-1,0,9).condition((R,e,I)=>{const L=R.getLastXMoves(1);return!L.length||L[0].move!==I.id||L[0].result!==De.SUCCESS}),new u(E.MATCHA_GOTCHA,t.GRASS,G.SPECIAL,80,90,15,20,0,9).attr(uR).attr(ie,!0,J.FREEZE).attr(ie,!1,J.FREEZE).attr(yA,J.BURN).target(AA.ALL_NEAR_ENEMIES).triageMove(),new u(E.SYRUP_BOMB,t.GRASS,G.SPECIAL,60,85,10,100,0,9).attr(OE,d.SYRUP_BOMB,!1,!1,3).ballBombMove(),new u(E.IVY_CUDGEL,t.GRASS,G.PHYSICAL,100,100,10,-1,0,9).attr(zU).attr(re).makesContact(!1),new iR(E.ELECTRO_SHOT,t.ELECTRIC,G.SPECIAL,130,100,10,100,0,9).chargeText(_.t("moveTriggers:absorbedElectricity",{pokemonName:"{USER}"})).chargeAttr(LA,[c.SPATK],1,!0).chargeAttr(mN,[Z.RAIN,Z.HEAVY_RAIN]),new u(E.TERA_STARSTORM,t.NORMAL,G.SPECIAL,120,100,5,-1,0,9).attr(Hn).attr(Ro).attr(Zn,(R,e,I)=>{var L;return R.hasSpecies(A.TERAPAGOS)&&(R.isTerastallized||((L=T.currentBattle.preTurnCommands[R.getFieldIndex()])==null?void 0:L.command)===pI.TERA)?AA.ALL_NEAR_ENEMIES:AA.NEAR_OTHER}).partial(),new u(E.FICKLE_BEAM,t.DRAGON,G.SPECIAL,80,100,5,30,0,9).attr(NL,b6).attr(uU).edgeCase(),new gA(E.BURNING_BULWARK,t.FIRE,-1,10,-1,4,9).attr(HO,d.BURNING_BULWARK).condition(JR),new u(E.THUNDERCLAP,t.ELECTRIC,G.SPECIAL,70,100,5,-1,1,9).condition((R,e,I)=>{const L=T.currentBattle.turnCommands[e.getBattlerIndex()];return!L||!L.move?!1:L.command===pI.FIGHT&&!e.turnData.acted&&FA[L.move.move].category!==G.STATUS}),new u(E.MIGHTY_CLEAVE,t.ROCK,G.PHYSICAL,95,100,5,-1,0,9).slicingMove().ignoresProtect(),new u(E.TACHYON_CUTTER,t.STEEL,G.SPECIAL,50,-1,10,-1,0,9).attr(VE,Le._2).slicingMove(),new u(E.HARD_PRESS,t.STEEL,G.PHYSICAL,-1,100,10,-1,0,9).attr(bN,100),new sA(E.DRAGON_CHEER,t.DRAGON,-1,15,-1,0,9).attr(OE,d.DRAGON_CHEER,!1,!0).target(AA.NEAR_ALLY),new u(E.ALLURING_VOICE,t.FAIRY,G.SPECIAL,80,100,10,100,0,9).attr(po,d.CONFUSED).soundBased(),new u(E.TEMPER_FLARE,t.FIRE,G.PHYSICAL,75,100,10,-1,0,9).attr(vE,(R,e,I)=>{var L,N;return((L=R.getLastXMoves(2)[1])==null?void 0:L.result)===De.MISS||((N=R.getLastXMoves(2)[1])==null?void 0:N.result)===De.FAIL?2:1}),new u(E.SUPERCELL_SLAM,t.ELECTRIC,G.PHYSICAL,100,95,15,-1,0,9).attr(gO).attr(cR,d.MINIMIZED).attr(jO,at).attr(AI,at).recklessMove(),new u(E.PSYCHIC_NOISE,t.PSYCHIC,G.SPECIAL,75,100,10,100,0,9).soundBased().attr(OE,d.HEAL_BLOCK,!1,!1,2),new u(E.UPPER_HAND,t.FIGHTING,G.PHYSICAL,65,100,15,100,3,9).attr(mE).condition(new a0),new u(E.MALIGNANT_CHAIN,t.POISON,G.SPECIAL,100,100,5,50,0,9).attr(yA,J.TOXIC)),FA.map(R=>{R.getAttrs("StatStageChangeAttr").some(e=>e.selfTarget&&e.stages<0)&&q6.push(R.id)})}r(z6,"initMoves");function kt(R,e=!1,I=!1,L=!1,N=rI.DEFAULT){let S=WL(ZA[R]);if(_.exists(`nature:${S}`)&&(S=_.t(`nature:${S}`)),e){let n=null,i=null;for(const l of dL){const H=I_(R,l);H>1?n=l:H<1&&(i=l)}const C=I?XA.SUMMARY_ALT:XA.WINDOW,o=L?(l,H)=>l:(l,H)=>kI(l,H,N);n&&i?S=`${o(`${S}${I?" ":`
`}(`,C)}${o(`+${_.t(GN(n))}`,XA.SUMMARY_PINK)}${o("/",C)}${o(`-${_.t(GN(i))}`,XA.SUMMARY_BLUE)}${o(")",C)}`:S=o(`${S}${I?" ":`
`}(-)`,C)}return S}r(kt,"getNatureName");function I_(R,e){switch(e){case c.ATK:switch(R){case ZA.LONELY:case ZA.BRAVE:case ZA.ADAMANT:case ZA.NAUGHTY:return 1.1;case ZA.BOLD:case ZA.TIMID:case ZA.MODEST:case ZA.CALM:return .9}break;case c.DEF:switch(R){case ZA.BOLD:case ZA.RELAXED:case ZA.IMPISH:case ZA.LAX:return 1.1;case ZA.LONELY:case ZA.HASTY:case ZA.MILD:case ZA.GENTLE:return .9}break;case c.SPATK:switch(R){case ZA.MODEST:case ZA.MILD:case ZA.QUIET:case ZA.RASH:return 1.1;case ZA.ADAMANT:case ZA.IMPISH:case ZA.JOLLY:case ZA.CAREFUL:return .9}break;case c.SPDEF:switch(R){case ZA.CALM:case ZA.GENTLE:case ZA.SASSY:case ZA.CAREFUL:return 1.1;case ZA.NAUGHTY:case ZA.LAX:case ZA.NAIVE:case ZA.RASH:return .9}break;case c.SPD:switch(R){case ZA.TIMID:case ZA.HASTY:case ZA.JOLLY:case ZA.NAIVE:return 1.1;case ZA.BRAVE:case ZA.RELAXED:case ZA.QUIET:case ZA.SASSY:return .9}break}return 1}r(I_,"getNatureStatMultiplier");var _T=(R=>(R[R.COMMON=0]="COMMON",R[R.GREAT=1]="GREAT",R[R.ULTRA=2]="ULTRA",R[R.ROGUE=3]="ROGUE",R[R.MASTER=4]="MASTER",R))(_T||{});const PW=class PW{constructor(e,I,L,N,S,n){this.name=I,this.description=L,this.iconImage=N,this.score=S,this.conditionFunc=n,this.localizationKey=e}getName(e=de.UNSET){const I=de[e].toLowerCase();return _.t(`achv:${this.localizationKey}.name`,{context:I})}getDescription(){return this.description}getIconImage(){return this.iconImage}setSecret(e){return this.secret=!0,this.hasParent=!!e,this}validate(e){return!this.conditionFunc||this.conditionFunc(e)}getTier(){return this.score>=100?4:this.score>=75?3:this.score>=50?2:this.score>=25?1:0}};r(PW,"Achv");let te=PW;const HW=class HW extends te{constructor(e,I,L,N,S){super(e,I,"",N,S,n=>T.money>=this.moneyAmount),this.moneyAmount=L}};r(HW,"MoneyAchv");let uN=HW;const uW=class uW extends te{constructor(e,I,L,N,S){super(e,I,"",N,S,n=>T.gameData.gameStats.ribbonsOwned>=this.ribbonAmount),this.ribbonAmount=L}};r(uW,"RibbonAchv");let eL=uW;const cW=class cW extends te{constructor(e,I,L,N,S){super(e,I,"",N,S,n=>(n[0]instanceof VA?n[0].value:n[0])>=this.damageAmount),this.damageAmount=L}};r(cW,"DamageAchv");let cN=cW;const BW=class BW extends te{constructor(e,I,L,N,S){super(e,I,"",N,S,n=>(n[0]instanceof VA?n[0].value:n[0])>=this.healAmount),this.healAmount=L}};r(BW,"HealAchv");let BN=BW;const KW=class KW extends te{constructor(e,I,L,N,S){super(e,I,"",N,S,n=>(n[0]instanceof VA?n[0].value:n[0])>=this.level),this.level=L}};r(KW,"LevelAchv");let dT=KW;const fW=class fW extends te{constructor(e,I,L,N,S,n){super(e,I,L,N,S,i=>n(i[0]))}};r(fW,"ModifierAchv");let n0=fW;const FW=class FW extends te{constructor(e,I,L,N,S,n){super(e,I,L,N,S,i=>n(i[0]))}};r(FW,"ChallengeAchv");let JE=FW;function j6(R){var L,N;const e=((N=(L=T)==null?void 0:L.gameData)==null?void 0:N.gender)??de.MALE,I=de[e].toLowerCase();switch(R){case"10K_MONEY":return _.t("achv:MoneyAchv.description",{context:I,moneyAmount:YE._10K_MONEY.moneyAmount.toLocaleString("en-US")});case"100K_MONEY":return _.t("achv:MoneyAchv.description",{context:I,moneyAmount:YE._100K_MONEY.moneyAmount.toLocaleString("en-US")});case"1M_MONEY":return _.t("achv:MoneyAchv.description",{context:I,moneyAmount:YE._1M_MONEY.moneyAmount.toLocaleString("en-US")});case"10M_MONEY":return _.t("achv:MoneyAchv.description",{context:I,moneyAmount:YE._10M_MONEY.moneyAmount.toLocaleString("en-US")});case"250_DMG":return _.t("achv:DamageAchv.description",{context:I,damageAmount:YE._250_DMG.damageAmount.toLocaleString("en-US")});case"1000_DMG":return _.t("achv:DamageAchv.description",{context:I,damageAmount:YE._1000_DMG.damageAmount.toLocaleString("en-US")});case"2500_DMG":return _.t("achv:DamageAchv.description",{context:I,damageAmount:YE._2500_DMG.damageAmount.toLocaleString("en-US")});case"10000_DMG":return _.t("achv:DamageAchv.description",{context:I,damageAmount:YE._10000_DMG.damageAmount.toLocaleString("en-US")});case"250_HEAL":return _.t("achv:HealAchv.description",{context:I,healAmount:YE._250_HEAL.healAmount.toLocaleString("en-US"),HP:_.t(GN(c.HP))});case"1000_HEAL":return _.t("achv:HealAchv.description",{context:I,healAmount:YE._1000_HEAL.healAmount.toLocaleString("en-US"),HP:_.t(GN(c.HP))});case"2500_HEAL":return _.t("achv:HealAchv.description",{context:I,healAmount:YE._2500_HEAL.healAmount.toLocaleString("en-US"),HP:_.t(GN(c.HP))});case"10000_HEAL":return _.t("achv:HealAchv.description",{context:I,healAmount:YE._10000_HEAL.healAmount.toLocaleString("en-US"),HP:_.t(GN(c.HP))});case"LV_100":return _.t("achv:LevelAchv.description",{context:I,level:YE.LV_100.level});case"LV_250":return _.t("achv:LevelAchv.description",{context:I,level:YE.LV_250.level});case"LV_1000":return _.t("achv:LevelAchv.description",{context:I,level:YE.LV_1000.level});case"10_RIBBONS":return _.t("achv:RibbonAchv.description",{context:I,ribbonAmount:YE._10_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"25_RIBBONS":return _.t("achv:RibbonAchv.description",{context:I,ribbonAmount:YE._25_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"50_RIBBONS":return _.t("achv:RibbonAchv.description",{context:I,ribbonAmount:YE._50_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"75_RIBBONS":return _.t("achv:RibbonAchv.description",{context:I,ribbonAmount:YE._75_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"100_RIBBONS":return _.t("achv:RibbonAchv.description",{context:I,ribbonAmount:YE._100_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"TRANSFER_MAX_STAT_STAGE":return _.t("achv:TRANSFER_MAX_STAT_STAGE.description",{context:I});case"MAX_FRIENDSHIP":return _.t("achv:MAX_FRIENDSHIP.description",{context:I});case"MEGA_EVOLVE":return _.t("achv:MEGA_EVOLVE.description",{context:I});case"GIGANTAMAX":return _.t("achv:GIGANTAMAX.description",{context:I});case"TERASTALLIZE":return _.t("achv:TERASTALLIZE.description",{context:I});case"STELLAR_TERASTALLIZE":return _.t("achv:STELLAR_TERASTALLIZE.description",{context:I});case"SPLICE":return _.t("achv:SPLICE.description",{context:I});case"MINI_BLACK_HOLE":return _.t("achv:MINI_BLACK_HOLE.description",{context:I});case"CATCH_MYTHICAL":return _.t("achv:CATCH_MYTHICAL.description",{context:I});case"CATCH_SUB_LEGENDARY":return _.t("achv:CATCH_SUB_LEGENDARY.description",{context:I});case"CATCH_LEGENDARY":return _.t("achv:CATCH_LEGENDARY.description",{context:I});case"SEE_SHINY":return _.t("achv:SEE_SHINY.description",{context:I});case"SHINY_PARTY":return _.t("achv:SHINY_PARTY.description",{context:I});case"HATCH_MYTHICAL":return _.t("achv:HATCH_MYTHICAL.description",{context:I});case"HATCH_SUB_LEGENDARY":return _.t("achv:HATCH_SUB_LEGENDARY.description",{context:I});case"HATCH_LEGENDARY":return _.t("achv:HATCH_LEGENDARY.description",{context:I});case"HATCH_SHINY":return _.t("achv:HATCH_SHINY.description",{context:I});case"HIDDEN_ABILITY":return _.t("achv:HIDDEN_ABILITY.description",{context:I});case"PERFECT_IVS":return _.t("achv:PERFECT_IVS.description",{context:I});case"CLASSIC_VICTORY":return _.t("achv:CLASSIC_VICTORY.description",{context:I});case"UNEVOLVED_CLASSIC_VICTORY":return _.t("achv:UNEVOLVED_CLASSIC_VICTORY.description",{context:I});case"MONO_GEN_ONE":return _.t("achv:MONO_GEN_ONE.description",{context:I});case"MONO_GEN_TWO":return _.t("achv:MONO_GEN_TWO.description",{context:I});case"MONO_GEN_THREE":return _.t("achv:MONO_GEN_THREE.description",{context:I});case"MONO_GEN_FOUR":return _.t("achv:MONO_GEN_FOUR.description",{context:I});case"MONO_GEN_FIVE":return _.t("achv:MONO_GEN_FIVE.description",{context:I});case"MONO_GEN_SIX":return _.t("achv:MONO_GEN_SIX.description",{context:I});case"MONO_GEN_SEVEN":return _.t("achv:MONO_GEN_SEVEN.description",{context:I});case"MONO_GEN_EIGHT":return _.t("achv:MONO_GEN_EIGHT.description",{context:I});case"MONO_GEN_NINE":return _.t("achv:MONO_GEN_NINE.description",{context:I});case"MONO_NORMAL":case"MONO_FIGHTING":case"MONO_FLYING":case"MONO_POISON":case"MONO_GROUND":case"MONO_ROCK":case"MONO_BUG":case"MONO_GHOST":case"MONO_STEEL":case"MONO_FIRE":case"MONO_WATER":case"MONO_GRASS":case"MONO_ELECTRIC":case"MONO_PSYCHIC":case"MONO_ICE":case"MONO_DRAGON":case"MONO_DARK":case"MONO_FAIRY":return _.t("achv:MonoType.description",{context:I,type:_.t(`pokemonInfo:Type.${R.slice(5)}`)});case"FRESH_START":return _.t("achv:FRESH_START.description",{context:I});case"INVERSE_BATTLE":return _.t("achv:INVERSE_BATTLE.description",{context:I});case"FLIP_STATS":return _.t("achv:FLIP_STATS.description",{context:I});case"FLIP_INVERSE":return _.t("achv:FLIP_INVERSE.description",{context:I});case"BREEDERS_IN_SPACE":return _.t("achv:BREEDERS_IN_SPACE.description",{context:I});default:return""}}r(j6,"getAchievementDescription");const YE={_10K_MONEY:new uN("10K_MONEY","",1e4,"nugget",10),_100K_MONEY:new uN("100K_MONEY","",1e5,"big_nugget",25).setSecret(!0),_1M_MONEY:new uN("1M_MONEY","",1e6,"relic_gold",50).setSecret(!0),_10M_MONEY:new uN("10M_MONEY","",1e7,"coin_case",100).setSecret(!0),_250_DMG:new cN("250_DMG","",250,"lucky_punch",10),_1000_DMG:new cN("1000_DMG","",1e3,"lucky_punch_great",25).setSecret(!0),_2500_DMG:new cN("2500_DMG","",2500,"lucky_punch_ultra",50).setSecret(!0),_10000_DMG:new cN("10000_DMG","",1e4,"lucky_punch_master",100).setSecret(!0),_250_HEAL:new BN("250_HEAL","",250,"potion",10),_1000_HEAL:new BN("1000_HEAL","",1e3,"super_potion",25).setSecret(!0),_2500_HEAL:new BN("2500_HEAL","",2500,"hyper_potion",50).setSecret(!0),_10000_HEAL:new BN("10000_HEAL","",1e4,"max_potion",100).setSecret(!0),LV_100:new dT("LV_100","",100,"rare_candy",25).setSecret(),LV_250:new dT("LV_250","",250,"rarer_candy",50).setSecret(!0),LV_1000:new dT("LV_1000","",1e3,"candy_jar",100).setSecret(!0),_10_RIBBONS:new eL("10_RIBBONS","",10,"bronze_ribbon",10),_25_RIBBONS:new eL("25_RIBBONS","",25,"great_ribbon",25).setSecret(!0),_50_RIBBONS:new eL("50_RIBBONS","",50,"ultra_ribbon",50).setSecret(!0),_75_RIBBONS:new eL("75_RIBBONS","",75,"rogue_ribbon",75).setSecret(!0),_100_RIBBONS:new eL("100_RIBBONS","",100,"master_ribbon",100).setSecret(!0),TRANSFER_MAX_STAT_STAGE:new te("TRANSFER_MAX_STAT_STAGE","","TRANSFER_MAX_STAT_STAGE.description","baton",20),MAX_FRIENDSHIP:new te("MAX_FRIENDSHIP","","MAX_FRIENDSHIP.description","soothe_bell",25),MEGA_EVOLVE:new te("MEGA_EVOLVE","","MEGA_EVOLVE.description","mega_bracelet",50),GIGANTAMAX:new te("GIGANTAMAX","","GIGANTAMAX.description","dynamax_band",50),TERASTALLIZE:new te("TERASTALLIZE","","TERASTALLIZE.description","tera_orb",25),STELLAR_TERASTALLIZE:new te("STELLAR_TERASTALLIZE","","STELLAR_TERASTALLIZE.description","stellar_tera_shard",25).setSecret(!0),SPLICE:new te("SPLICE","","SPLICE.description","dna_splicers",10),MINI_BLACK_HOLE:new n0("MINI_BLACK_HOLE","","MINI_BLACK_HOLE.description","mini_black_hole",25,R=>R instanceof wS).setSecret(),CATCH_MYTHICAL:new te("CATCH_MYTHICAL","","CATCH_MYTHICAL.description","strange_ball",50).setSecret(),CATCH_SUB_LEGENDARY:new te("CATCH_SUB_LEGENDARY","","CATCH_SUB_LEGENDARY.description","rb",75).setSecret(),CATCH_LEGENDARY:new te("CATCH_LEGENDARY","","CATCH_LEGENDARY.description","mb",100).setSecret(),SEE_SHINY:new te("SEE_SHINY","","SEE_SHINY.description","pb_gold",75),SHINY_PARTY:new te("SHINY_PARTY","","SHINY_PARTY.description","shiny_charm",100).setSecret(!0),HATCH_MYTHICAL:new te("HATCH_MYTHICAL","","HATCH_MYTHICAL.description","mystery_egg",75).setSecret(),HATCH_SUB_LEGENDARY:new te("HATCH_SUB_LEGENDARY","","HATCH_SUB_LEGENDARY.description","oval_stone",100).setSecret(),HATCH_LEGENDARY:new te("HATCH_LEGENDARY","","HATCH_LEGENDARY.description","lucky_egg",125).setSecret(),HATCH_SHINY:new te("HATCH_SHINY","","HATCH_SHINY.description","golden_egg",100).setSecret(),HIDDEN_ABILITY:new te("HIDDEN_ABILITY","","HIDDEN_ABILITY.description","ability_charm",75),PERFECT_IVS:new te("PERFECT_IVS","","PERFECT_IVS.description","blunder_policy",100),CLASSIC_VICTORY:new te("CLASSIC_VICTORY","","CLASSIC_VICTORY.description","relic_crown",150,R=>T.gameData.gameStats.sessionsWon===0),UNEVOLVED_CLASSIC_VICTORY:new te("UNEVOLVED_CLASSIC_VICTORY","","UNEVOLVED_CLASSIC_VICTORY.description","eviolite",175,R=>T.getPlayerParty().some(e=>e.getSpeciesForm(!0).speciesId in lE)),MONO_GEN_ONE_VICTORY:new JE("MONO_GEN_ONE","","MONO_GEN_ONE.description","ribbon_gen1",100,R=>R instanceof uO&&R.value===1&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_TWO_VICTORY:new JE("MONO_GEN_TWO","","MONO_GEN_TWO.description","ribbon_gen2",100,R=>R instanceof uO&&R.value===2&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_THREE_VICTORY:new JE("MONO_GEN_THREE","","MONO_GEN_THREE.description","ribbon_gen3",100,R=>R instanceof uO&&R.value===3&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_FOUR_VICTORY:new JE("MONO_GEN_FOUR","","MONO_GEN_FOUR.description","ribbon_gen4",100,R=>R instanceof uO&&R.value===4&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_FIVE_VICTORY:new JE("MONO_GEN_FIVE","","MONO_GEN_FIVE.description","ribbon_gen5",100,R=>R instanceof uO&&R.value===5&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_SIX_VICTORY:new JE("MONO_GEN_SIX","","MONO_GEN_SIX.description","ribbon_gen6",100,R=>R instanceof uO&&R.value===6&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_SEVEN_VICTORY:new JE("MONO_GEN_SEVEN","","MONO_GEN_SEVEN.description","ribbon_gen7",100,R=>R instanceof uO&&R.value===7&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_EIGHT_VICTORY:new JE("MONO_GEN_EIGHT","","MONO_GEN_EIGHT.description","ribbon_gen8",100,R=>R instanceof uO&&R.value===8&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GEN_NINE_VICTORY:new JE("MONO_GEN_NINE","","MONO_GEN_NINE.description","ribbon_gen9",100,R=>R instanceof uO&&R.value===9&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_NORMAL:new JE("MONO_NORMAL","","MONO_NORMAL.description","silk_scarf",100,R=>R instanceof Ve&&R.value===1&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_FIGHTING:new JE("MONO_FIGHTING","","MONO_FIGHTING.description","black_belt",100,R=>R instanceof Ve&&R.value===2&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_FLYING:new JE("MONO_FLYING","","MONO_FLYING.description","sharp_beak",100,R=>R instanceof Ve&&R.value===3&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_POISON:new JE("MONO_POISON","","MONO_POISON.description","poison_barb",100,R=>R instanceof Ve&&R.value===4&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GROUND:new JE("MONO_GROUND","","MONO_GROUND.description","soft_sand",100,R=>R instanceof Ve&&R.value===5&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_ROCK:new JE("MONO_ROCK","","MONO_ROCK.description","hard_stone",100,R=>R instanceof Ve&&R.value===6&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_BUG:new JE("MONO_BUG","","MONO_BUG.description","silver_powder",100,R=>R instanceof Ve&&R.value===7&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GHOST:new JE("MONO_GHOST","","MONO_GHOST.description","spell_tag",100,R=>R instanceof Ve&&R.value===8&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_STEEL:new JE("MONO_STEEL","","MONO_STEEL.description","metal_coat",100,R=>R instanceof Ve&&R.value===9&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_FIRE:new JE("MONO_FIRE","","MONO_FIRE.description","charcoal",100,R=>R instanceof Ve&&R.value===10&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_WATER:new JE("MONO_WATER","","MONO_WATER.description","mystic_water",100,R=>R instanceof Ve&&R.value===11&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_GRASS:new JE("MONO_GRASS","","MONO_GRASS.description","miracle_seed",100,R=>R instanceof Ve&&R.value===12&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_ELECTRIC:new JE("MONO_ELECTRIC","","MONO_ELECTRIC.description","magnet",100,R=>R instanceof Ve&&R.value===13&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_PSYCHIC:new JE("MONO_PSYCHIC","","MONO_PSYCHIC.description","twisted_spoon",100,R=>R instanceof Ve&&R.value===14&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_ICE:new JE("MONO_ICE","","MONO_ICE.description","never_melt_ice",100,R=>R instanceof Ve&&R.value===15&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_DRAGON:new JE("MONO_DRAGON","","MONO_DRAGON.description","dragon_fang",100,R=>R instanceof Ve&&R.value===16&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_DARK:new JE("MONO_DARK","","MONO_DARK.description","black_glasses",100,R=>R instanceof Ve&&R.value===17&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),MONO_FAIRY:new JE("MONO_FAIRY","","MONO_FAIRY.description","fairy_feather",100,R=>R instanceof Ve&&R.value===18&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),FRESH_START:new JE("FRESH_START","","FRESH_START.description","reviver_seed",100,R=>R instanceof Xa&&R.value>0&&!T.gameMode.challenges.some(e=>[QA.INVERSE_BATTLE,QA.FLIP_STAT].includes(e.id)&&e.value>0)),INVERSE_BATTLE:new JE("INVERSE_BATTLE","","INVERSE_BATTLE.description","inverse",100,R=>R instanceof Qa&&R.value>0),FLIP_STATS:new JE("FLIP_STATS","","FLIP_STATS.description","dubious_disc",100,R=>R instanceof kS&&R.value>0),FLIP_INVERSE:new JE("FLIP_INVERSE","","FLIP_INVERSE.description","cracked_pot",100,R=>R instanceof kS&&R.value>0&&T.gameMode.challenges.some(e=>e.id===QA.INVERSE_BATTLE&&e.value>0)).setSecret(),BREEDERS_IN_SPACE:new te("BREEDERS_IN_SPACE","","BREEDERS_IN_SPACE.description","moon_stone",50).setSecret()};function Av(){const R=Object.keys(YE);R.forEach((e,I)=>{YE[e].id=e,YE[e].hasParent&&(YE[e].parentId=R[I-1])})}r(Av,"initAchievements");var zi=(R=>(R[R.REGULAR=0]="REGULAR",R[R.PLUS=1]="PLUS",R[R.PREMIUM=2]="PREMIUM",R[R.GOLDEN=3]="GOLDEN",R))(zi||{});const YW=class YW{constructor(e,I,L){this.description=I,this.voucherType=e,this.conditionFunc=L}validate(e){return!this.conditionFunc||this.conditionFunc(e)}getName(e){return r0(this.voucherType)}getIconImage(){return P3(this.voucherType)}getTier(){switch(this.voucherType){case 0:return _T.COMMON;case 1:return _T.GREAT;case 2:return _T.ULTRA;case 3:return _T.ROGUE}}};r(YW,"Voucher");let xo=YW;function r0(R){switch(R){case 0:return _.t("voucher:eggVoucher");case 1:return _.t("voucher:eggVoucherPlus");case 2:return _.t("voucher:eggVoucherPremium");case 3:return _.t("voucher:eggVoucherGold")}}r(r0,"getVoucherTypeName");function P3(R){switch(R){case 0:return"coupon";case 1:return"pair_of_tickets";case 2:return"mystic_ticket";case 3:return"golden_mystic_ticket"}}r(P3,"getVoucherTypeIcon");const Oi={};function Ev(){for(const I of[YE.CLASSIC_VICTORY]){const L=I.score>=150?3:I.score>=100?2:I.score>=75?1:0;Oi[I.id]=new xo(L,j6(I.localizationKey))}const R=Object.keys(he).filter(I=>he[I].isBoss&&he[I].getDerivedType()!==U.RIVAL&&he[I].hasVoucher);for(const I of R){const L=he[I].moneyMultiplier<10?1:2,N=U[I],S=he[I].name,n=he[I],i=n.title?` (${n.title})`:"";Oi[N]=new xo(L,`${_.t("voucher:defeatTrainer",{trainerName:S})} ${i}`)}const e=Object.keys(Oi);for(const I of e)Oi[I].id=I}r(Ev,"initVouchers");const WW=class WW{constructor(e=null){this.cursor=0,this.active=!1,this.mode=e}show(e){return this.active=!0,!0}getUi(){return T.ui}getTextColor(e,I=!1){return nS(e,I,T.uiTheme)}getCursor(){return this.cursor}setCursor(e){const I=this.cursor!==e;return I&&(this.cursor=e),I}setMouseCursorStyle(e){T.input.manager.canvas.style.cursor=e}clear(){this.active=!1}destroy(){}};r(WW,"UiHandler");let kn=WW;const hW=class hW extends kn{constructor(e=null){super(e),this.tutorialActive=!1}processTutorialInput(e){if((e===WE.ACTION||e===WE.CANCEL)&&this.onActionInput){this.getUi().playSelect();const I=this.onActionInput;return this.onActionInput=null,I(),this.awaitingActionInput=!1,!0}return!1}initTutorialOverlay(e){this.tutorialOverlay||(this.tutorialOverlay=new Phaser.GameObjects.Rectangle(T,-1,-1,T.scaledCanvas.width,T.scaledCanvas.height,460551),this.tutorialOverlay.setName("tutorial-overlay"),this.tutorialOverlay.setOrigin(0,0),this.tutorialOverlay.setAlpha(0)),e&&e.add(this.tutorialOverlay)}};r(hW,"AwaitableUiHandler");let i0=hW;const dW=class dW extends i0{constructor(e=null){super(e),this.pendingPrompt=!1}initPromptSprite(e){if(!this.prompt){const I=T.add.sprite(0,0,"prompt");I.setVisible(!1),I.setOrigin(0,0),this.prompt=I}e&&e.add(this.prompt)}showText(e,I,L,N,S,n){this.showTextInternal(e,I,L,N,S,n)}showDialogue(e,I,L,N,S,n,i){this.showTextInternal(e,L,N,S,n,i)}showTextInternal(e,I,L,N,S,n){I==null&&(I=20);const i=new Map,C=new Map,o=new Map,l=new Map,H=/@(c|d|s|f)\{(.*?)\}/;let P;const K=[],f=["#POKEMON1","#POKEMON2"];for(let h=0;h<T.getPlayerField().length;h++)K.push(T.getPlayerField()[h].getNameToRender()),e=e.split(K[h]).join(f[h]);for(;P=H.exec(e);){switch(P[1]){case"c":i.set(P.index,P[2]);break;case"d":C.set(P.index,Number.parseInt(P[2]));break;case"s":o.set(P.index,P[2]);break;case"f":l.set(P.index,Number.parseInt(P[2]));break}e=e.slice(0,P.index)+e.slice(P.index+P[2].length+4)}for(let h=0;h<T.getPlayerField().length;h++)e=e.split(f[h]).join(K[h]);if(e){const h=e.split(" ");let F=1,w="";for(let m=0;m<h.length;m++){const y=w?`${w} ${h[m]}`:h[m];if(h[m].includes(`
`))w=y,F++;else{const x=this.message.runWordWrap(y).split(/\n/g).length;x>F?(F=x,w=`${w}
${h[m]}`):w=y}}e=w}if(this.textTimer&&(this.textTimer.remove(),this.textCallbackTimer&&this.textCallbackTimer.callback()),S){const h=L;L=r(()=>{const F=r(()=>this.showPrompt(h,N),"showPrompt");n?T.time.delayedCall(n,F):F()},"callback")}I?(this.clearText(),S&&(this.pendingPrompt=!0),this.textTimer=T.time.addEvent({delay:I,callback:r(()=>{var q;const h=e.length-((q=this.textTimer)==null?void 0:q.repeatCount),F=i.get(h),w=o.get(h),m=C.get(h),y=l.get(h);this.message.setText(e.slice(0,h));const x=r(()=>{var IA;F&&T.charSprite.setVariant(F),w&&T.playSound(w),L&&!((IA=this.textTimer)!=null&&IA.repeatCount)&&(N&&!S?this.textCallbackTimer=T.time.delayedCall(N,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),L()}):L())},"advance");m?(this.textTimer.paused=!0,T.tweens.addCounter({duration:xR(m),onComplete:r(()=>{this.textTimer.paused=!1,x()},"onComplete")})):y?(this.textTimer.paused=!0,T.time.delayedCall(150,()=>{T.ui.fadeOut(750).then(()=>{const IA=xR(y);T.time.delayedCall(IA,()=>{T.ui.fadeIn(500).then(()=>{this.textTimer.paused=!1,x()})})})})):x()},"callback"),repeat:e.length})):(this.message.setText(e),S&&(this.pendingPrompt=!0),L&&L())}showPrompt(e,I){const L=this.message.runWordWrap(this.message.text).split(/\n/g),N=L.length,S=L[L.length-1],n=T.add.text(0,0,S,{font:"96px emerald"});n.setScale(this.message.scale);const i=n.displayWidth;n.destroy(),this.prompt&&(this.prompt.setPosition(this.message.x+i+2,this.message.y+(N-1)*18+2),this.prompt.play("prompt")),this.pendingPrompt=!1,this.awaitingActionInput=!0,this.onActionInput=()=>{this.prompt&&(this.prompt.anims.stop(),this.prompt.setVisible(!1)),e&&(I?this.textCallbackTimer=T.time.delayedCall(I,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),e()}):e())}}isTextAnimationInProgress(){return this.textTimer?this.textTimer.repeatCount<this.textTimer.repeat:!1}clearText(){this.message.setText(""),this.pendingPrompt=!1}clear(){super.clear()}};r(dW,"MessageUiHandler");let C0=dW;var ji=(R=>(R[R.NONE=0]="NONE",R[R.PASSIVE=1]="PASSIVE",R[R.ACTIVE=2]="ACTIVE",R))(ji||{});const pW=class pW{setup(){this.icons=new Map,this.toggled=!1;const e=r(I=>{const L=I.getValue();this.toggled=!!L;for(const N of this.icons.keys()){const S=this.icons.get(N),n=S?this.getModeYDelta(S):0;N.y+=n*(this.toggled?1:-1)}},"onAlternate");T.tweens.addCounter({duration:We(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:e,onYoyo:e})}getModeYDelta(e){switch(e){case 0:return 0;case 1:return-1;case 2:return-2}}addOrUpdate(e,I){e=ue(e);for(const L of e)if(!(this.icons.has(L)&&this.icons.get(L)===I)){if(this.toggled){const N=this.icons.has(L)?this.icons.get(L):0,S=this.getModeYDelta(I);L.y+=S+N}this.icons.set(L,I)}}remove(e){e=ue(e);for(const I of e){if(this.toggled){const L=this.icons.get(I),N=L?this.getModeYDelta(L):0;I.y-=N}this.icons.delete(I)}}removeAll(){for(const e of this.icons.keys()){if(this.toggled){const I=this.icons.get(e),L=I?this.getModeYDelta(I):0;e.y-=L}this.icons.delete(e)}}};r(pW,"PokemonIconAnimHandler");let U0=pW;const $R=48,rt=82,nT=48,it=8,Ii=6,kl=class kl extends Phaser.GameObjects.Container{constructor(e){e!=null&&e.onSide&&(e.top=!1),super(T,e==null?void 0:e.x,e==null?void 0:e.y),this.active=!1,this.descScroll=null;const I=(e==null?void 0:e.scale)||1;this.setScale(I),this.options=e||{};const L=((e==null?void 0:e.width)||kl.getWidth(I))/I;this.descBg=zL(e!=null&&e.onSide&&!(e!=null&&e.right)?rt:0,e!=null&&e.top?$R:0,L-(e!=null&&e.onSide?rt:0),nT),this.descBg.setOrigin(0,0),this.add(this.descBg),this.desc=oE((e!=null&&e.onSide&&!(e!=null&&e.right)?rt:0)+it,(e!=null&&e.top?$R:0)+it-2,"",XA.BATTLE_INFO,{wordWrap:{width:(L-(it-2)*2-(e!=null&&e.onSide?rt:0))*Ii}}),this.desc.setLineSpacing(_.resolvedLanguage==="ja"?25:5);const N={x:(e==null?void 0:e.x)||0,y:(e==null?void 0:e.y)||0};N.x<0&&(N.x+=T.game.canvas.width/Ii),N.y<0&&(N.y+=T.game.canvas.height/Ii);const S=T.make.graphics();S.fillStyle(16711680),S.fillRect(N.x+((e!=null&&e.onSide&&!(e!=null&&e.right)?rt:0)+it)*I,N.y+((e!=null&&e.top?$R:0)+it-2)*I,L-((e!=null&&e.onSide?rt:0)-it*2)*I,(nT-(it-2)*2)*I),S.setScale(6);const n=this.createGeometryMask(S);this.add(this.desc),this.desc.setMask(n),this.val=new Phaser.GameObjects.Container(T,e!=null&&e.right?L-rt:0,e!=null&&e.top||e!=null&&e.onSide?0:nT),this.add(this.val);const i=zL(0,0,rt,$R);i.setOrigin(0,0),this.val.add(i),this.typ=T.add.sprite(25,$R-35,Kt("types"),"unknown"),this.typ.setScale(.8),this.val.add(this.typ),this.cat=T.add.sprite(57,$R-35,"categories","physical"),this.val.add(this.cat);const C=oE(12,$R-25,"PP",XA.MOVE_INFO_CONTENT);C.setOrigin(0,.5),C.setText(_.t("fightUiHandler:pp")),this.val.add(C),this.pp=oE(70,$R-25,"--",XA.MOVE_INFO_CONTENT),this.pp.setOrigin(1,.5),this.val.add(this.pp);const o=oE(12,$R-17,"POWER",XA.MOVE_INFO_CONTENT);o.setOrigin(0,.5),o.setText(_.t("fightUiHandler:power")),this.val.add(o),this.pow=oE(70,$R-17,"---",XA.MOVE_INFO_CONTENT),this.pow.setOrigin(1,.5),this.val.add(this.pow);const l=oE(12,$R-9,"ACC",XA.MOVE_INFO_CONTENT);l.setOrigin(0,.5),l.setText(_.t("fightUiHandler:accuracy")),this.val.add(l),this.acc=oE(70,$R-9,"---",XA.MOVE_INFO_CONTENT),this.acc.setOrigin(1,.5),this.val.add(this.acc),e!=null&&e.hideEffectBox&&this.val.setVisible(!1),e!=null&&e.hideBg&&this.descBg.setVisible(!1),this.setVisible(!1)}show(e){var L;if(!T.enableMoveInfo)return!1;this.move=e,this.pow.setText(e.power>=0?e.power.toString():"---"),this.acc.setText(e.accuracy>=0?e.accuracy.toString():"---"),this.pp.setText(e.pp>=0?e.pp.toString():"---"),this.typ.setTexture(Kt("types"),t[e.type].toLowerCase()),this.cat.setFrame(G[e.category].toLowerCase()),this.desc.setText((e==null?void 0:e.effect)||""),this.descScroll&&(this.descScroll.remove(),this.descScroll=null,this.desc.y=((L=this.options)!=null&&L.top?$R:0)+it-2);const I=Math.floor(this.desc.displayHeight*(96/72)/14.83);return I>3&&(this.descScroll=T.tweens.add({targets:this.desc,delay:We(2e3),loop:-1,hold:We(2e3),duration:We((I-3)*2e3),y:`-=${14.83*(72/96)*(I-3)}`})),this.options.delayVisibility||this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(e){e&&this.setVisible(!0),T.tweens.add({targets:this.desc,duration:We(125),ease:"Sine.easeInOut",alpha:e?1:0}),e||this.setVisible(!1)}isActive(){return this.active}static getWidth(e){return T.game.canvas.width/Ii/2}static getHeight(e,I){return(I?Math.max($R,nT):$R+nT)*e}};r(kl,"MoveInfoOverlay");let JS=kl;const J2=_.t("partyUiHandler:choosePokemon");var wr=(R=>(R[R.SWITCH=0]="SWITCH",R[R.FAINT_SWITCH=1]="FAINT_SWITCH",R[R.POST_BATTLE_SWITCH=2]="POST_BATTLE_SWITCH",R[R.REVIVAL_BLESSING=3]="REVIVAL_BLESSING",R[R.MODIFIER=4]="MODIFIER",R[R.MOVE_MODIFIER=5]="MOVE_MODIFIER",R[R.TM_MODIFIER=6]="TM_MODIFIER",R[R.REMEMBER_MOVE_MODIFIER=7]="REMEMBER_MOVE_MODIFIER",R[R.MODIFIER_TRANSFER=8]="MODIFIER_TRANSFER",R[R.SPLICE=9]="SPLICE",R[R.RELEASE=10]="RELEASE",R[R.CHECK=11]="CHECK",R[R.SELECT=12]="SELECT",R))(wr||{}),o0=(R=>(R[R.CANCEL=-1]="CANCEL",R[R.SEND_OUT=0]="SEND_OUT",R[R.PASS_BATON=1]="PASS_BATON",R[R.REVIVE=2]="REVIVE",R[R.APPLY=3]="APPLY",R[R.TEACH=4]="TEACH",R[R.TRANSFER=5]="TRANSFER",R[R.SUMMARY=6]="SUMMARY",R[R.POKEDEX=7]="POKEDEX",R[R.UNPAUSE_EVOLUTION=8]="UNPAUSE_EVOLUTION",R[R.SPLICE=9]="SPLICE",R[R.UNSPLICE=10]="UNSPLICE",R[R.RELEASE=11]="RELEASE",R[R.RENAME=12]="RENAME",R[R.SELECT=13]="SELECT",R[R.SCROLL_UP=1e3]="SCROLL_UP",R[R.SCROLL_DOWN=1001]="SCROLL_DOWN",R[R.FORM_CHANGE_ITEM=2e3]="FORM_CHANGE_ITEM",R[R.MOVE_1=3e3]="MOVE_1",R[R.MOVE_2=3001]="MOVE_2",R[R.MOVE_3=3002]="MOVE_3",R[R.MOVE_4=3003]="MOVE_4",R[R.ALL=4e3]="ALL",R))(o0||{});const zO=class zO extends C0{constructor(){super(hE.PARTY),this.optionsCursor=0,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.lastCursor=0,this.FilterChallengeLegal=e=>{const I=new nE(!0);return fI(Ke.POKEMON_IN_BATTLE,e,I),I.value?null:_.t("partyUiHandler:cantBeUsed",{pokemonName:Q(e,!1)})},this.localizedOptions=[0,6,7,-1,3,11,4,9,10,2,5,8,1,12,13]}setup(){const e=this.getUi(),I=T.add.container(0,0);I.setName("party"),I.setVisible(!1),e.add(I),this.partyContainer=I,this.partyBg=T.add.image(0,0,"party_bg"),this.partyBg.setName("img-party-bg"),I.add(this.partyBg),this.partyBg.setOrigin(0,1);const L=T.add.container(0,0);L.setName("party-slots"),I.add(L),this.partySlotsContainer=L;const N=T.add.container(0,-32);N.setName("party-msg-box"),I.add(N);const S=zL(1,31,262,30);S.setName("window-party-msg-box"),S.setOrigin(0,1),N.add(S),this.partyMessageBox=S;const n=oE(10,8,J2,XA.WINDOW,{maxLines:2});n.setName("text-party-msg"),n.setOrigin(0,0),N.add(n),this.message=n;const i=new D0(291,-16);I.add(i),this.partyCancelButton=i,this.optionsContainer=T.add.container(T.game.canvas.width/6-1,-1),I.add(this.optionsContainer),this.iconAnimHandler=new U0,this.iconAnimHandler.setup();const C=1;this.moveInfoOverlay=new JS({scale:C,top:!0,x:1,y:-JS.getHeight(C)-1,width:T.game.canvas.width/12-30}),e.add(this.moveInfoOverlay),this.options=[],this.partySlots=[]}show(e){return!e.length||this.active?!1:(super.show(e),this.moveInfoOverlay.clear(),this.partyUiMode=e[0],this.fieldIndex=e.length>1?e[1]:-1,this.selectCallback=e.length>2&&e[2]instanceof Function?e[2]:void 0,this.selectFilter=e.length>3&&e[3]instanceof Function?e[3]:zO.FilterAll,this.moveSelectFilter=e.length>4&&e[4]instanceof Function?e[4]:zO.FilterAllMoves,this.tmMoveId=e.length>5&&e[5]?e[5]:E.NONE,this.showMovePp=e.length>6&&e[6],this.partyContainer.setVisible(!0),this.partyBg.setTexture(`party_bg${T.currentBattle.double?"_double":""}`),this.populatePartySlots(),this.setCursor(0),!0)}processSummaryOption(e){const I=this.getUi();return I.playSelect(),I.setModeWithoutClear(hE.SUMMARY,e).then(()=>this.clearOptions()),!0}processPokedexOption(e){const I=this.getUi();I.playSelect();const L={shiny:e.shiny,variant:e.variant,form:e.formIndex,female:e.gender===mA.FEMALE};return I.setOverlayMode(hE.POKEDEX_PAGE,e.species,L).then(()=>this.clearOptions()),!0}processUnpauseEvolutionOption(e){const I=this.getUi();return this.clearOptions(),I.playSelect(),e.pauseEvolutions=!e.pauseEvolutions,this.showText(_.t(e.pauseEvolutions?"partyUiHandler:pausedEvolutions":"partyUiHandler:unpausedEvolutions",{pokemonName:Q(e,!1)}),void 0,()=>this.showText("",0),null,!0),!0}processUnspliceOption(e){var L;const I=this.getUi();return this.clearOptions(),I.playSelect(),this.showText(_.t("partyUiHandler:unspliceConfirmation",{fusionName:(L=e.fusionSpecies)==null?void 0:L.name,pokemonName:e.getName()}),null,()=>{I.setModeWithoutClear(hE.CONFIRM,()=>{const N=e.getName();e.unfuse().then(()=>{this.clearPartySlots(),this.populatePartySlots(),I.setMode(hE.PARTY),this.showText(_.t("partyUiHandler:wasReverted",{fusionName:N,pokemonName:e.getName(!1)}),void 0,()=>{I.setMode(hE.PARTY),this.showText("",0)},null,!0)})},()=>{I.setMode(hE.PARTY),this.showText("",0)})}),!0}processReleaseOption(e){const I=this.getUi();return this.clearOptions(),I.playSelect(),this.partyUiMode===10?(this.doRelease(this.cursor),!0):(this.cursor>=T.currentBattle.getBattlerCount()||!e.isAllowedInBattle()?(this.blockInput=!0,this.showText(_.t("partyUiHandler:releaseConfirmation",{pokemonName:Q(e,!1)}),null,()=>{this.blockInput=!1,I.setModeWithoutClear(hE.CONFIRM,()=>{I.setMode(hE.PARTY),this.doRelease(this.cursor)},()=>{I.setMode(hE.PARTY),this.showText("",0)})})):this.showText(_.t("partyUiHandler:releaseInBattle"),null,()=>this.showText("",0),null,!0),!0)}processRenameOption(e){const I=this.getUi();return this.clearOptions(),I.playSelect(),I.setModeWithoutClear(hE.RENAME_POKEMON,{buttonActions:[L=>{I.playSelect(),e.nickname=L,e.updateInfo(),this.clearPartySlots(),this.populatePartySlots(),I.setMode(hE.PARTY)},()=>{I.setMode(hE.PARTY)}]},e),!0}processTransferOption(){const e=this.getUi();return this.transferCursor!==this.cursor&&(this.transferAll?this.getTransferrableItemsFromPokemon(T.getPlayerParty()[this.transferCursor]).forEach((I,L,N)=>{const S=N.length-1-L;this.selectCallback(this.transferCursor,S,this.transferQuantitiesMax[S],this.cursor)}):this.selectCallback(this.transferCursor,this.transferOptionCursor,this.transferQuantities[this.transferOptionCursor],this.cursor)),this.clearTransfer(),this.clearOptions(),e.playSelect(),!0}processModifierTransferModeInput(e){const I=this.getUi();if(this.options[this.optionsCursor]===5)return this.processTransferOption();if(!this.transferMode){this.startTransfer();let N;for(let S=0;S<T.getPlayerParty().length;S++){const n=T.getPlayerParty()[S],i=T.findModifier(o=>o.is("PokemonHeldItemModifier")&&o.pokemonId===n.id&&o.matchType(this.getTransferrableItemsFromPokemon(e)[this.transferOptionCursor])),C=this.partySlots.filter(o=>o.getPokemon()===n)[0];S!==this.transferCursor?i?i.getMaxStackCount()===i.stackCount?N=_.t("partyUiHandler:notAble"):N=_.t("partyUiHandler:able"):N=_.t("partyUiHandler:able"):N="",C.slotHpBar.setVisible(!1),C.slotHpOverlay.setVisible(!1),C.slotHpText.setVisible(!1),C.slotDescriptionLabel.setText(N),C.slotDescriptionLabel.setVisible(!0)}return this.clearOptions(),I.playSelect(),!0}return!1}processModifierTransferModeLeftRightInput(e){let I=!1;const L=this.options[this.optionsCursor];return e===WE.LEFT&&this.partyUiMode===8&&(this.transferQuantities[L]=this.transferQuantities[L]===1?this.transferQuantitiesMax[L]:this.transferQuantities[L]-1,this.updateOptions(),I=this.setCursor(this.optionsCursor)),e===WE.RIGHT&&this.partyUiMode===8&&(this.transferQuantities[L]=this.transferQuantities[L]===this.transferQuantitiesMax[L]?1:this.transferQuantities[L]+1,this.updateOptions(),I=this.setCursor(this.optionsCursor)),I}processModifierTransferModeUpDownInput(e){let I=!1;const L=this.options[this.optionsCursor];return this.partyUiMode===8&&(L!==4e3&&(this.transferQuantities[L]=this.transferQuantitiesMax[L]),this.updateOptions()),I=this.moveOptionCursor(e),I}moveOptionCursor(e){return e===WE.UP?this.setCursor(this.optionsCursor?this.optionsCursor-1:this.options.length-1):this.setCursor(this.optionsCursor<this.options.length-1?this.optionsCursor+1:0)}processRememberMoveModeInput(e){var S;const I=this.getUi(),L=this.options[this.optionsCursor];this.moveInfoOverlay.clear();const N=this.selectFilter(e);return N===null?((S=this.selectCallback)==null||S.call(this,this.cursor,L),this.clearOptions()):(this.clearOptions(),this.showText(N,void 0,()=>this.showText("",0),void 0,!0)),I.playSelect(),!0}processRememberMoveModeUpDownInput(e){let I=!1;I=this.moveOptionCursor(e);const L=this.options[this.optionsCursor],N=T.getPlayerParty()[this.cursor],S=FA[N.getLearnableLevelMoves()[L]];return S?this.moveInfoOverlay.show(S):this.moveInfoOverlay.clear(),I}getTransferrableItemsFromPokemon(e){return T.findModifiers(I=>I.is("PokemonHeldItemModifier")&&I.isTransferable&&I.pokemonId===e.id)}getFilterResult(e,I){let L;return e!==5&&e!==9?(L=this.selectFilter(I),L===null&&(e===0||e===1)&&(L=this.FilterChallengeLegal(I)),L===null&&this.partyUiMode===5&&(L=this.moveSelectFilter(I.moveset[this.optionsCursor]))):L=this.selectFilter(I,this.getTransferrableItemsFromPokemon(T.getPlayerParty()[this.transferCursor])[this.transferOptionCursor]),L}processActionButtonForOptions(e){var S;const I=this.getUi();if(e===-1)return this.processOptionMenuInput(WE.CANCEL);const L=T.getPlayerParty()[this.cursor];if(this.partyUiMode===8)return this.processModifierTransferModeInput(L);if(this.partyUiMode===7)return this.processRememberMoveModeInput(L);if(e===6)return this.processSummaryOption(L);if(e===7)return this.processPokedexOption(L);if(e===8)return this.processUnpauseEvolutionOption(L);if(e===10)return this.processUnspliceOption(L);if(e===12)return this.processRenameOption(L);if(e>=2e3&&((S=T.phaseManager.getCurrentPhase())!=null&&S.is("SelectModifierPhase"))&&this.partyUiMode===11){const i=this.getFormChangeItemsModifiers(L)[e-2e3];i.active=!i.active,T.triggerPokemonFormChange(L,rA,!1,!0)}const N=this.getFilterResult(e,L);if(N)return this.clearOptions(),this.showText(N,void 0,()=>this.showText("",0),void 0,!0),!0;if(e===11)return this.processReleaseOption(L);if(this.partyUiMode===9)return e===9?(this.selectCallback(this.transferCursor,this.cursor),this.clearTransfer()):e===3&&this.startTransfer(),this.clearOptions(),I.playSelect(),!0;if((e===1||e===0)&&this.partyUiMode===0&&(this.clearOptions(),T.phaseManager.getCurrentPhase().handleCommand(pI.POKEMON,this.cursor,e===1)),[0,1,2,3,4,3e3,3001,3002,3003,13].includes(e)&&this.selectCallback){this.clearOptions();const n=this.selectCallback;return this.selectCallback=null,n(this.cursor,e),!0}return!1}processOptionMenuInput(e){const I=this.getUi(),L=this.options[this.optionsCursor];return e===WE.CANCEL?(this.clearOptions(),I.playSelect(),!0):e===WE.ACTION?this.processActionButtonForOptions(L):e===WE.UP||e===WE.DOWN?this.partyUiMode===8?this.processModifierTransferModeUpDownInput(e):this.partyUiMode===7?this.processRememberMoveModeUpDownInput(e):this.moveOptionCursor(e):(e===WE.LEFT||e===WE.RIGHT)&&this.partyUiMode===8?this.processModifierTransferModeLeftRightInput(e):!1}processInput(e){const I=this.getUi();if(this.pendingPrompt||this.blockInput)return!1;if(this.awaitingActionInput){if((e===WE.ACTION||e===WE.CANCEL)&&this.onActionInput){I.playSelect();const L=this.onActionInput;return this.onActionInput=null,L(),this.awaitingActionInput=!1,!0}return!1}if(this.optionsMode){let L=!1;return L=this.processOptionMenuInput(e),L&&I.playSelect(),L}return e===WE.ACTION?this.processPartyActionInput():e===WE.CANCEL?this.processPartyCancelInput():e===WE.UP||e===WE.DOWN||e===WE.RIGHT||e===WE.LEFT?this.processPartyDirectionalInput(e):!1}allowCancel(){return!(this.partyUiMode===1||this.partyUiMode===3)}processPartyActionInput(){const e=this.getUi();if(this.cursor<6){if(this.partyUiMode===8&&!this.transferMode){const I=T.findModifiers(L=>L.is("PokemonHeldItemModifier")&&L.isTransferable&&L.pokemonId===T.getPlayerParty()[this.cursor].id);this.transferQuantities=I.map(L=>L.getStackCount()),this.transferQuantitiesMax=I.map(L=>L.getStackCount())}this.showOptions(),e.playSelect()}if(this.cursor===6)if(!this.allowCancel())e.playError();else return this.processInput(WE.CANCEL);return!0}processPartyCancelInput(){const e=this.getUi();if((this.partyUiMode===8||this.partyUiMode===9)&&this.transferMode)this.clearTransfer(),e.playSelect();else if(this.allowCancel())if(this.selectCallback){const I=this.selectCallback;this.selectCallback=null,I(6,-1),e.playSelect()}else e.setMode(hE.COMMAND,this.fieldIndex),e.playSelect();return!0}processPartyDirectionalInput(e){const I=this.getUi(),L=this.partySlots.length,N=T.currentBattle.getBattlerCount();let S=!1;switch(e){case WE.UP:S=this.setCursor(this.cursor?this.cursor<6?this.cursor-1:L-1:6);break;case WE.DOWN:S=this.setCursor(this.cursor<6?this.cursor<L-1?this.cursor+1:6:0);break;case WE.LEFT:this.cursor>=N&&this.cursor<=6&&(S=this.setCursor(0));break;case WE.RIGHT:if(L===N){S=this.setCursor(6);break}if(N>=2&&L>N&&this.getCursor()===0&&this.lastCursor===1){S=this.setCursor(2);break}if(L>N&&this.cursor<N){S=this.setCursor(this.lastCursor<6&&this.lastCursor||N);break}}return S&&I.playSelect(),S}populatePartySlots(){const e=T.getPlayerParty();this.cursor<6&&this.cursor>=e.length?this.cursor=e.length-1:this.cursor===6&&this.partyCancelButton.select(),this.lastCursor<6&&this.lastCursor>=e.length&&(this.lastCursor=e.length-1);for(const I in e){const L=Number.parseInt(I),N=new M0(L,e[I],this.iconAnimHandler,this.partyUiMode,this.tmMoveId);T.add.existing(N),this.partySlotsContainer.add(N),this.partySlots.push(N),this.cursor===L&&N.select()}}setCursor(e){if(this.optionsMode)return this.setOptionsCursor(e);const I=this.cursor!==e;return I&&(this.lastCursor=this.cursor,this.cursor=e,this.lastCursor<6?this.partySlots[this.lastCursor].deselect():this.lastCursor===6&&this.partyCancelButton.deselect(),e<6?this.partySlots[e].select():e===6&&this.partyCancelButton.select()),I}setOptionsCursor(e){const I=this.optionsCursor!==e;let L=!1;if(I&&this.optionsScroll)if(Math.abs(e-this.optionsCursor)===this.options.length-1)this.optionsScrollCursor=e?this.optionsScrollTotal-8:0,this.updateOptions();else{const N=e&&e>this.optionsCursor;N?this.options[e]===1001&&(L=!0,this.optionsScrollCursor++):!e&&this.optionsScrollCursor&&(L=!0,this.optionsScrollCursor--),L&&this.optionsScrollCursor===1&&(this.optionsScrollCursor+=N?1:-1)}return L?this.updateOptions():this.optionsCursor=e,this.optionsCursorObj||(this.optionsCursorObj=T.add.image(0,0,"cursor"),this.optionsCursorObj.setOrigin(0,0),this.optionsContainer.add(this.optionsCursorObj)),this.optionsCursorObj.setPosition(8-this.optionsBg.displayWidth,-19-16*(this.options.length-1-this.optionsCursor)),I}showText(e,I,L,N,S,n){e.length===0&&(e=J2),(e==null?void 0:e.indexOf(`
`))===-1?(this.partyMessageBox.setSize(262,30),this.message.setY(10)):(this.partyMessageBox.setSize(262,42),this.message.setY(-5)),super.showText(e,I,L,N,S,n)}showOptions(){if(this.cursor===6)return;this.optionsMode=!0;let e=_.t("partyUiHandler:doWhatWithThisPokemon");switch(this.partyUiMode){case 5:e=_.t("partyUiHandler:selectAMove");break;case 8:this.transferMode||(e=_.t("partyUiHandler:changeQuantity"));break;case 9:this.transferMode||(e=_.t("partyUiHandler:selectAnotherPokemonToSplice"));break}this.showText(e,0),this.updateOptions(),this.partyUiMode===8?this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),42):this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),30),this.setCursor(0)}allowBatonModifierSwitch(){return!!(this.partyUiMode!==1&&T.findModifier(e=>e.is("SwitchEffectTransferModifier")&&e.pokemonId===T.getPlayerField()[this.fieldIndex].id))}isBatonPassMove(){var I;const e=T.getPlayerField()[this.fieldIndex].getMoveHistory();return!!(this.partyUiMode===1&&e.length&&((I=FA[e[e.length-1].move].getAttrs("ForceSwitchOutAttr")[0])!=null&&I.isBatonPass())&&e[e.length-1].result===De.SUCCESS)}getItemModifiers(e){return T.findModifiers(I=>I.is("PokemonHeldItemModifier")&&I.isTransferable&&I.pokemonId===e.id)??[]}updateOptionsWithRememberMoveModifierMode(e){const I=e.getLearnableLevelMoves();for(let L=0;L<I.length;L++)this.options.push(L);I!=null&&I.length&&this.moveInfoOverlay.show(FA[I[0]])}updateOptionsWithMoveModifierMode(e){for(let I=0;I<e.moveset.length;I++)this.options.push(3e3+I)}updateOptionsWithModifierTransferMode(e){const I=this.getItemModifiers(e);for(let L=0;L<I.length;L++)this.options.push(L);I.length>1&&this.options.push(4e3)}addCommonOptions(e){this.options.push(6),this.options.push(7),this.options.push(12),(lE.hasOwnProperty(e.species.speciesId)||e.isFusion()&&e.fusionSpecies&&lE.hasOwnProperty(e.fusionSpecies.speciesId))&&this.options.push(8)}addCancelAndScrollOptions(){this.optionsScrollTotal=this.options.length;const e=this.optionsScrollCursor,I=Math.min(this.optionsScrollTotal,e+(!e||this.optionsScrollCursor+8>=this.optionsScrollTotal?8:7));this.optionsScroll=this.optionsScrollTotal>9,this.optionsScroll&&(this.options.splice(I,this.optionsScrollTotal),this.options.splice(0,e),e&&this.options.unshift(1e3),I<this.optionsScrollTotal&&this.options.push(1001)),this.options.push(-1)}updateOptions(){var I;const e=T.getPlayerParty()[this.cursor];switch(this.options.length&&(this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor()),this.partyUiMode){case 5:this.updateOptionsWithMoveModifierMode(e);break;case 7:this.updateOptionsWithRememberMoveModifierMode(e);break;case 8:this.transferMode?(this.options.push(5),this.addCommonOptions(e)):this.updateOptionsWithModifierTransferMode(e);break;case 0:case 1:case 2:if(this.cursor>=T.currentBattle.getBattlerCount()){const L=this.allowBatonModifierSwitch(),N=this.isBatonPassMove();this.options.push(N&&!L?1:0),L&&!N&&this.options.push(1)}this.addCommonOptions(e),this.partyUiMode===0&&(e.isFusion()&&this.options.push(10),this.options.push(11));break;case 3:this.options.push(2),this.addCommonOptions(e);break;case 4:this.options.push(3),this.addCommonOptions(e);break;case 6:this.options.push(4),this.addCommonOptions(e);break;case 9:this.transferMode?this.cursor!==this.transferCursor&&this.options.push(9):this.options.push(3),this.addCommonOptions(e),e.isFusion()&&this.options.push(10);break;case 10:this.options.push(11),this.addCommonOptions(e);break;case 11:if((I=T.phaseManager.getCurrentPhase())!=null&&I.is("SelectModifierPhase")){const L=this.getFormChangeItemsModifiers(e);for(let N=0;N<L.length;N++)this.options.push(2e3+N)}this.addCommonOptions(e);break;case 12:this.options.push(13),this.addCommonOptions(e);break}this.addCancelAndScrollOptions(),this.updateOptionsWindow()}updateOptionsWindow(){const e=T.getPlayerParty()[this.cursor];this.optionsBg=zL(0,0,0,16*this.options.length+13),this.optionsBg.setOrigin(1,1),this.optionsContainer.add(this.optionsBg);const I=0,L=this.options.length;let N=0;const S=[];for(let n=I;n<L;n++){const i=this.options[this.options.length-(n+1)];let C=!1,o;if(i===1e3)o="↑";else if(i===1001)o="↓";else if(this.partyUiMode!==7&&(this.partyUiMode!==8||this.transferMode)||i===-1)switch(i){case 3e3:case 3001:case 3002:case 3003:const f=e.moveset[i-3e3];if(this.showMovePp){const F=f.getMovePp(),w=F-f.ppUsed;o=`${f.getName()} ${w}/${F}`}else o=f.getName();break;default:const h=this.getFormChangeItemsModifiers(e);if(h&&i>=2e3){const F=h[i-2e3];o=`${F.active?_.t("partyUiHandler:DEACTIVATE"):_.t("partyUiHandler:ACTIVATE")} ${F.type.name}`}else i===8?o=`${e.pauseEvolutions?_.t("partyUiHandler:UNPAUSE_EVOLUTION"):_.t("partyUiHandler:PAUSE_EVOLUTION")}`:this.localizedOptions.includes(i)?o=_.t(`partyUiHandler:${o0[i]}`):o=WL(o0[i]);break}else if(this.partyUiMode===7){const h=e.getLearnableLevelMoves()[i];o=FA[h].name,C=!e.getSpeciesForm().getLevelMoves().find(F=>F[1]===h)}else i===4e3?o=_.t("partyUiHandler:ALL"):o=this.getItemModifiers(e)[i].type.name;const l=-6-16*n,H=IG(0,l-16,o,XA.WINDOW,{maxLines:1});C&&(H.setColor("#40c8f8"),H.setShadowColor("#006090")),H.setOrigin(0,0);const K=this.getItemModifiers(e)[i];if(this.partyUiMode===8&&this.transferQuantitiesMax[i]>1&&!this.transferMode&&K!==void 0&&K.type.name===o){let f=` (${this.transferQuantities[i]})`;this.transferQuantitiesMax[i]===K.getMaxHeldItemCount(void 0)&&(f=`[color=${nS(XA.SUMMARY_RED)}]${f}[/color]`),H.setText(o+f)}H.setText(`[shadow]${H.text}[/shadow]`),S.push(H),N=Math.max(H.displayWidth,N),this.optionsContainer.add(H)}this.optionsBg.width=Math.max(N+24,94);for(const n of S)n.x=15-this.optionsBg.width}startTransfer(){this.transferMode=!0,this.transferCursor=this.cursor,this.transferOptionCursor=this.getOptionsCursorWithScroll(),this.transferAll=this.options[this.optionsCursor]===4e3,this.partySlots[this.transferCursor].setTransfer(!0)}clearTransfer(){this.transferMode=!1,this.transferAll=!1,this.partySlots[this.transferCursor].setTransfer(!1);for(let e=0;e<this.partySlots.length;e++)this.partySlots[e].slotDescriptionLabel.setVisible(!1),this.partySlots[e].slotHpBar.setVisible(!0),this.partySlots[e].slotHpOverlay.setVisible(!0),this.partySlots[e].slotHpText.setVisible(!0)}doRelease(e){this.showText(this.getReleaseMessage(Q(T.getPlayerParty()[e],!1)),null,()=>{if(this.clearPartySlots(),T.removePartyMemberModifiers(e),T.getPlayerParty().splice(e,1)[0].destroy(),this.populatePartySlots(),this.cursor>=T.getPlayerParty().length&&this.setCursor(this.cursor-1),this.partyUiMode===10){const L=this.selectCallback;this.selectCallback=null,L==null||L(this.cursor,11)}this.showText("",0)},null,!0)}getReleaseMessage(e){const I=we(128);return I<20?_.t("partyUiHandler:goodbye",{pokemonName:e}):I<40?_.t("partyUiHandler:byebye",{pokemonName:e}):I<60?_.t("partyUiHandler:farewell",{pokemonName:e}):I<80?_.t("partyUiHandler:soLong",{pokemonName:e}):I<100?_.t("partyUiHandler:thisIsWhereWePart",{pokemonName:e}):I<108?_.t("partyUiHandler:illMissYou",{pokemonName:e}):I<116?_.t("partyUiHandler:illNeverForgetYou",{pokemonName:e}):I<124?_.t("partyUiHandler:untilWeMeetAgain",{pokemonName:e}):I<127?_.t("partyUiHandler:sayonara",{pokemonName:e}):_.t("partyUiHandler:smellYaLater",{pokemonName:e})}getFormChangeItemsModifiers(e){let I=T.findModifiers(N=>N.is("PokemonFormChangeItemModifier")&&N.pokemonId===e.id);const L=I.filter(N=>N.active&&N.formChangeItem===aA.ULTRANECROZIUM_Z);return L.length>0?L:(I.find(N=>N.active)?I=I.filter(N=>N.active||N.formChangeItem===aA.ULTRANECROZIUM_Z):e.species.speciesId===A.NECROZMA&&(I=I.filter(N=>N.formChangeItem!==aA.ULTRANECROZIUM_Z)),I)}getOptionsCursorWithScroll(){return this.optionsCursor+this.optionsScrollCursor+(this.options&&this.options[0]===1e3?-1:0)}clearOptions(){this.moveInfoOverlay.clear(),this.optionsMode=!1,this.optionsScroll=!1,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor(),this.partyMessageBox.setSize(262,30),this.showText("",0)}eraseOptionsCursor(){this.optionsCursorObj&&this.optionsCursorObj.destroy(),this.optionsCursorObj=null}clear(){super.clear(),this.moveInfoOverlay.clear(),this.partyContainer.setVisible(!1),this.clearPartySlots()}clearPartySlots(){this.partySlots.splice(0,this.partySlots.length),this.partySlotsContainer.removeAll(!0)}};r(zO,"PartyUiHandler"),zO.FilterAll=e=>null,zO.FilterNonFainted=e=>e.isFainted()?_.t("partyUiHandler:noEnergy",{pokemonName:Q(e,!1)}):null,zO.FilterFainted=e=>e.isFainted()?null:_.t("partyUiHandler:hasEnergy",{pokemonName:Q(e,!1)}),zO.FilterAllMoves=e=>null,zO.FilterItemMaxStacks=(e,I)=>{const L=T.findModifier(N=>N.is("PokemonHeldItemModifier")&&N.pokemonId===e.id&&N.matchType(I));return L&&L.stackCount===L.getMaxStackCount()?_.t("partyUiHandler:tooManyItems",{pokemonName:Q(e,!1)}):null},zO.NoEffectMessage=_.t("partyUiHandler:anyEffect");let YR=zO;const gW=class gW extends Phaser.GameObjects.Container{constructor(e,I,L,N,S){super(T,e>=T.currentBattle.getBattlerCount()?230.5:64,e>=T.currentBattle.getBattlerCount()?-184+(T.currentBattle.double?-40:0)+(28+(T.currentBattle.double?8:0))*e:-124+(T.currentBattle.double?-8:0)+e*64),this.slotIndex=e,this.pokemon=I,this.iconAnimHandler=L,this.setup(N,S)}getPokemon(){return this.pokemon}setup(e,I){var w,m;const N=(_.resolvedLanguage??"en")==="ja",S=T.currentBattle.getBattlerCount(),n=`party_slot${this.slotIndex>=S?"":"_main"}`,i=T.add.sprite(0,0,n,`${n}${this.pokemon.hp?"":"_fnt"}`);this.slotBg=i,this.add(i);const C=T.add.sprite(this.slotIndex>=S?-85.5:-51,this.slotIndex>=S?0:-20.5,"party_pb");this.slotPb=C,this.add(C),this.pokemonIcon=T.addPokemonIcon(this.pokemon,C.x,C.y,.5,.5,!0),this.add(this.pokemonIcon),this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ji.PASSIVE);const o=T.add.container(0,0);this.add(o);let l=this.pokemon.getNameToRender(!1),H;const P=oE(0,0,l,XA.PARTY);for(H=P.displayWidth;H>(this.slotIndex>=S?52:76-(this.pokemon.fusionSpecies?8:0));)l=`${l.slice(0,l.endsWith(".")?-2:-1).trimEnd()}.`,P.setText(l),H=P.displayWidth;P.destroy(),this.slotName=oE(0,0,l,XA.PARTY),this.slotName.setPositionRelative(i,this.slotIndex>=S?21:24,(this.slotIndex>=S?2:10)+(N?2:0)),this.slotName.setOrigin(0,0);const K=T.add.image(0,0,"party_slot_overlay_lv");K.setPositionRelative(i,(this.slotIndex>=S?21:24)+8,(this.slotIndex>=S?2:10)+12),K.setOrigin(0,0);const f=oE(0,0,this.pokemon.level.toString(),this.pokemon.level<T.getMaxExpLevel()?XA.PARTY:XA.PARTY_RED);f.setPositionRelative(K,9,N?1.5:0),f.setOrigin(0,.25),o.add([this.slotName,K,f]);const h=$s(this.pokemon.getGender(!0));if(h){const y=oE(0,0,h,XA.PARTY);y.setColor(aS(this.pokemon.getGender(!0))),y.setShadowColor(aS(this.pokemon.getGender(!0),!0)),this.slotIndex>=S?y.setPositionRelative(K,36,0):y.setPositionRelative(this.slotName,76-(this.pokemon.fusionSpecies?8:0),3),y.setOrigin(0,.25),o.add(y)}if(this.pokemon.fusionSpecies){const y=T.add.image(0,0,"icon_spliced");y.setScale(.5),y.setOrigin(0,0),this.slotIndex>=S?y.setPositionRelative(K,36+(h?8:0),.5):y.setPositionRelative(this.slotName,76,3.5),o.add(y)}if(this.pokemon.status){const y=T.add.sprite(0,0,Kt("statuses"));y.setFrame(J[(w=this.pokemon.status)==null?void 0:w.effect].toLowerCase()),y.setOrigin(0,0),y.setPositionRelative(K,this.slotIndex>=S?43:55,0),o.add(y)}if(this.pokemon.isShiny()){const y=this.pokemon.isDoubleShiny(!1),x=T.add.image(0,0,`shiny_star_small${y?"_1":""}`);if(x.setOrigin(0,0),x.setPositionRelative(this.slotName,-9,3),x.setTint(jI(this.pokemon.getBaseVariant(y))),o.add(x),y){const q=T.add.image(0,0,"shiny_star_small_2");q.setOrigin(0,0),q.setPosition(x.x,x.y),q.setTint(jI(((m=this.pokemon.summonData.illusion)==null?void 0:m.basePokemon.fusionVariant)??this.pokemon.fusionVariant)),o.add(q)}}this.slotHpBar=T.add.image(0,0,"party_slot_hp_bar"),this.slotHpBar.setPositionRelative(i,this.slotIndex>=S?72:8,this.slotIndex>=S?6:31),this.slotHpBar.setOrigin(0,0),this.slotHpBar.setVisible(!1);const F=this.pokemon.getHpRatio();if(this.slotHpOverlay=T.add.sprite(0,0,"party_slot_hp_overlay",F>.5?"high":F>.25?"medium":"low"),this.slotHpOverlay.setPositionRelative(this.slotHpBar,16,2),this.slotHpOverlay.setOrigin(0,0),this.slotHpOverlay.setScale(F,1),this.slotHpOverlay.setVisible(!1),this.slotHpText=oE(0,0,`${this.pokemon.hp}/${this.pokemon.getMaxHp()}`,XA.PARTY),this.slotHpText.setPositionRelative(this.slotHpBar,this.slotHpBar.width-3,this.slotHpBar.height-2+(N?2:0)),this.slotHpText.setOrigin(1,0),this.slotHpText.setVisible(!1),this.slotDescriptionLabel=oE(0,0,"",XA.MESSAGE),this.slotDescriptionLabel.setPositionRelative(i,this.slotIndex>=S?94:32,this.slotIndex>=S?16:46),this.slotDescriptionLabel.setOrigin(0,1),this.slotDescriptionLabel.setVisible(!1),o.add([this.slotHpBar,this.slotHpOverlay,this.slotHpText,this.slotDescriptionLabel]),e!==6)this.slotDescriptionLabel.setVisible(!1),this.slotHpBar.setVisible(!0),this.slotHpOverlay.setVisible(!0),this.slotHpText.setVisible(!0);else{this.slotHpBar.setVisible(!1),this.slotHpOverlay.setVisible(!1),this.slotHpText.setVisible(!1);let y;this.pokemon.getMoveset().filter(x=>x.moveId===I).length>0?y=_.t("partyUiHandler:learned"):this.pokemon.compatibleTms.indexOf(I)===-1?y=_.t("partyUiHandler:notAble"):y=_.t("partyUiHandler:able"),this.slotDescriptionLabel.setText(y),this.slotDescriptionLabel.setVisible(!0)}}select(){this.selected||(this.selected=!0,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ji.ACTIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ji.PASSIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb"))}setTransfer(e){this.transfer!==e&&(this.transfer=e,this.updateSlotTexture())}updateSlotTexture(){const e=T.currentBattle.getBattlerCount();this.slotBg.setTexture(`party_slot${this.slotIndex>=e?"":"_main"}`,`party_slot${this.slotIndex>=e?"":"_main"}${this.transfer?"_swap":this.pokemon.hp?"":"_fnt"}${this.selected?"_sel":""}`)}};r(gW,"PartySlot");let M0=gW;const mW=class mW extends Phaser.GameObjects.Container{constructor(e,I){super(T,e,I),this.setup()}setup(){const e=T.add.sprite(0,0,"party_cancel");this.add(e),this.partyCancelBg=e;const I=T.add.sprite(-17,0,"party_pb");this.add(I),this.partyCancelPb=I;const L=oE(-8,-7,_.t("partyUiHandler:cancel"),XA.PARTY);this.add(L)}select(){this.selected||(this.selected=!0,this.partyCancelBg.setFrame("party_cancel_sel"),this.partyCancelPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.partyCancelBg.setFrame("party_cancel"),this.partyCancelPb.setFrame("party_pb"))}};r(mW,"PartyCancelButton");let D0=mW;const yW=class yW{is(e){const I=Iv[e];return I?this instanceof I:!1}constructor(e,I,L,N,S){this.localeKey=e,this.iconImage=I,this.group=N,this.soundName=S??"se/restore",this.newModifierFunc=L}get name(){return _.t(`${this.localeKey}.name`)}getDescription(){return _.t(`${this.localeKey}.description`)}setTier(e){this.tier=e}getOrInferTier(e=cE.PLAYER){if(this.tier)return this.tier;if(!this.id)return null;let I;switch(e){case cE.PLAYER:I=[e,cE.TRAINER,cE.WILD];break;case cE.WILD:I=[e,cE.PLAYER,cE.TRAINER];break;case cE.TRAINER:I=[e,cE.PLAYER,cE.WILD];break;default:I=[e];break}for(const L of I){const N=xC(L);for(const S of nR(p))if(N.hasOwnProperty(S)&&N[S].find(n=>n.modifierType.id===this.id))return this.tier=S}return null}withIdFromFunc(e){return this.id=Object.keys(Me).find(I=>Me[I]===e),this}withTierFromPool(e=cE.PLAYER,I,L=0){let N;for(const S of Object.values(xC(e)))for(const n of S)if(this.id===n.modifierType.id){let i;if(n.weight instanceof Function?i=I?n.weight(I,L):0:i=n.weight,i>0)return this.tier=n.modifierType.tier,this;SA(N)&&(N=n.modifierType.tier)}return N&&(this.tier=N),this}newModifier(...e){return this.newModifierFunc&&this.newModifierFunc(this,e)}};r(yW,"ModifierType");let FE=yW;const VW=class VW extends FE{constructor(e){super(null,null,null),this.genTypeFunc=e}generateType(e,I){const L=this.genTypeFunc(e,I);return L&&(L.id=this.id,L.setTier(this.tier)),L}};r(VW,"ModifierTypeGenerator");let Xe=VW;const wW=class wW extends FE{constructor(e,I,L){super("",e,(N,S)=>new ia(this,I,L),"pb","se/pb_bounce_1"),this.pokeballType=I,this.count=L}get name(){return _.t("modifierType:ModifierType.AddPokeballModifierType.name",{modifierCount:this.count,pokeballName:ZP(this.pokeballType)})}getDescription(){return _.t("modifierType:ModifierType.AddPokeballModifierType.description",{modifierCount:this.count,pokeballName:ZP(this.pokeballType),catchRate:bP(this.pokeballType)>-1?`${bP(this.pokeballType)}x`:"100%",pokeballAmount:`${T.pokeballCounts[this.pokeballType]}`})}};r(wW,"AddPokeballModifierType");let RL=wW;const vW=class vW extends FE{constructor(e,I){super("",P3(e),(L,N)=>new Ca(this,e,I),"voucher"),this.count=I,this.voucherType=e}get name(){return _.t("modifierType:ModifierType.AddVoucherModifierType.name",{modifierCount:this.count,voucherTypeName:r0(this.voucherType)})}getDescription(){return _.t("modifierType:ModifierType.AddVoucherModifierType.description",{modifierCount:this.count,voucherTypeName:r0(this.voucherType)})}};r(vW,"AddVoucherModifierType");let pT=vW;const xW=class xW extends FE{constructor(e,I,L,N,S,n){super(e,I,L,S,n),this.selectFilter=N}};r(xW,"PokemonModifierType");let LO=xW;const ZW=class ZW extends LO{constructor(e,I,L,N,S){super(e,I,L,n=>{const i=this.newModifier(n),C=T.findModifier(l=>l instanceof GE&&l.pokemonId===n.id&&l.matchType(i)),o=i.getMaxStackCount();return o?C&&C.stackCount===o?_.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.tooMany",{pokemonName:Q(n)}):null:_.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.inoperable",{pokemonName:Q(n)})},N,S)}newModifier(...e){return super.newModifier(...e)}};r(ZW,"PokemonHeldItemModifierType");let XE=ZW;const bW=class bW extends LO{constructor(e){super("",`${t[e].toLowerCase()}_tera_shard`,(I,L)=>new Da(I,L[0].id,e),I=>{var L;return[I.species.speciesId,(L=I.fusionSpecies)==null?void 0:L.speciesId].filter(N=>N===A.TERAPAGOS||N===A.OGERPON||N===A.SHEDINJA).length>0?YR.NoEffectMessage:null},"tera_shard"),this.teraType=e}get name(){return _.t("modifierType:ModifierType.TerastallizeModifierType.name",{teraType:_.t(`pokemonInfo:Type.${t[this.teraType]}`)})}getDescription(){return _.t("modifierType:ModifierType.TerastallizeModifierType.description",{teraType:_.t(`pokemonInfo:Type.${t[this.teraType]}`)})}getPregenArgs(){return[this.teraType]}};r(bW,"TerastallizeModifierType");let Zo=bW;const kW=class kW extends LO{constructor(e,I,L,N,S=!1,n,i,C){super(e,I,n||((o,l)=>new wt(this,l[0].id,this.restorePoints,this.restorePercent,this.healStatus,!1)),i||(o=>!o.hp||o.isFullHp()&&(!this.healStatus||!o.status&&!o.getTag(d.CONFUSED))?YR.NoEffectMessage:null),C||"potion"),this.restorePoints=L,this.restorePercent=N,this.healStatus=S}getDescription(){return this.restorePoints?_.t("modifierType:ModifierType.PokemonHpRestoreModifierType.description",{restorePoints:this.restorePoints,restorePercent:this.restorePercent}):this.healStatus?_.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fullyWithStatus"):_.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fully")}};r(kW,"PokemonHpRestoreModifierType");let Ht=kW;const XW=class XW extends Ht{constructor(e,I,L){super(e,I,0,L,!1,(N,S)=>new wt(this,S[0].id,0,this.restorePercent,!1,!0),N=>N.isFainted()?null:YR.NoEffectMessage,"revive"),this.selectFilter=N=>N.hp?YR.NoEffectMessage:null}getDescription(){return _.t("modifierType:ModifierType.PokemonReviveModifierType.description",{restorePercent:this.restorePercent})}};r(XW,"PokemonReviveModifierType");let bo=XW;const QW=class QW extends LO{constructor(e,I){super(e,I,(L,N)=>new la(this,N[0].id),L=>!L.hp||!L.status&&!L.getTag(d.CONFUSED)?YR.NoEffectMessage:null)}getDescription(){return _.t("modifierType:ModifierType.PokemonStatusHealModifierType.description")}};r(QW,"PokemonStatusHealModifierType");let l0=QW;const JW=class JW extends LO{constructor(e,I,L,N,S,n){super(e,I,L,N,n),this.moveSelectFilter=S}};r(JW,"PokemonMoveModifierType");let ko=JW;const $W=class $W extends ko{constructor(e,I,L){super(e,I,(N,S)=>new _a(this,S[0].id,S[1],this.restorePoints),N=>null,N=>N.ppUsed?null:YR.NoEffectMessage,"ether"),this.restorePoints=L}getDescription(){return this.restorePoints>-1?_.t("modifierType:ModifierType.PokemonPpRestoreModifierType.description",{restorePoints:this.restorePoints}):_.t("modifierType:ModifierType.PokemonPpRestoreModifierType.extra.fully")}};r($W,"PokemonPpRestoreModifierType");let Xo=$W;const qW=class qW extends LO{constructor(e,I,L){super(e,I,(N,S)=>new Ga(this,S[0].id,this.restorePoints),N=>N.getMoveset().filter(S=>S.ppUsed).length?null:YR.NoEffectMessage,"elixir"),this.restorePoints=L}getDescription(){return this.restorePoints>-1?_.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.description",{restorePoints:this.restorePoints}):_.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.extra.fully")}};r(qW,"PokemonAllMovePpRestoreModifierType");let Qo=qW;const zW=class zW extends ko{constructor(e,I,L){super(e,I,(N,S)=>new Pa(this,S[0].id,S[1],this.upPoints),N=>null,N=>N.getMove().pp<5||N.ppUp>=3||N.maxPpOverride?YR.NoEffectMessage:null,"ppUp"),this.upPoints=L}getDescription(){return _.t("modifierType:ModifierType.PokemonPpUpModifierType.description",{upPoints:this.upPoints})}};r(zW,"PokemonPpUpModifierType");let Jo=zW;const jW=class jW extends LO{constructor(e){var I;super("",`mint_${((I=sS(c).find(L=>I_(e,c[L])>1))==null?void 0:I.toLowerCase())||"neutral"}`,(L,N)=>new Ha(this,N[0].id,this.nature),L=>L.getNature()===this.nature?YR.NoEffectMessage:null,"mint"),this.nature=e}get name(){return _.t("modifierType:ModifierType.PokemonNatureChangeModifierType.name",{natureName:kt(this.nature)})}getDescription(){return _.t("modifierType:ModifierType.PokemonNatureChangeModifierType.description",{natureName:kt(this.nature,!0,!0,!0)})}};r(jW,"PokemonNatureChangeModifierType");let $o=jW;const Ah=class Ah extends LO{constructor(e,I,L){super(e,I,(N,S)=>new ca(N,S[0].id,S[1]),N=>N.getLearnableLevelMoves().length?null:YR.NoEffectMessage,L)}};r(Ah,"RememberMoveModifierType");let _0=Ah;const Eh=class Eh extends FE{constructor(e,I,L){super(e,I,(N,S)=>new GS(this,L),"lure"),this.maxBattles=L}getDescription(){return _.t("modifierType:ModifierType.DoubleBattleChanceBoosterModifierType.description",{battleCount:this.maxBattles})}};r(Eh,"DoubleBattleChanceBoosterModifierType");let gT=Eh;const eh=class eh extends FE{constructor(e){const I=LM.items[e];super("",I,(L,N)=>new mL(this,this.stat,5)),this.stat=e,this.nameKey=I,this.quantityKey=e!==c.ACC?"percentage":"stage"}get name(){return _.t(`modifierType:TempStatStageBoosterItem.${this.nameKey}`)}getDescription(){return _.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:_.t(aR(this.stat)),amount:_.t(`modifierType:ModifierType.TempStatStageBoosterModifierType.extra.${this.quantityKey}`)})}getPregenArgs(){return[this.stat]}};r(eh,"TempStatStageBoosterModifierType");let qo=eh;const Rh=class Rh extends XE{constructor(e){super("",`${EE[e].toLowerCase()}_berry`,(I,L)=>new ce(I,L[0].id,e),"berry"),this.berryType=e,this.id="BERRY"}get name(){return xP(this.berryType)}getDescription(){return mV(this.berryType)}getPregenArgs(){return[this.berryType]}};r(Rh,"BerryModifierType");let $S=Rh;var G0=(R=>(R[R.SILK_SCARF=0]="SILK_SCARF",R[R.BLACK_BELT=1]="BLACK_BELT",R[R.SHARP_BEAK=2]="SHARP_BEAK",R[R.POISON_BARB=3]="POISON_BARB",R[R.SOFT_SAND=4]="SOFT_SAND",R[R.HARD_STONE=5]="HARD_STONE",R[R.SILVER_POWDER=6]="SILVER_POWDER",R[R.SPELL_TAG=7]="SPELL_TAG",R[R.METAL_COAT=8]="METAL_COAT",R[R.CHARCOAL=9]="CHARCOAL",R[R.MYSTIC_WATER=10]="MYSTIC_WATER",R[R.MIRACLE_SEED=11]="MIRACLE_SEED",R[R.MAGNET=12]="MAGNET",R[R.TWISTED_SPOON=13]="TWISTED_SPOON",R[R.NEVER_MELT_ICE=14]="NEVER_MELT_ICE",R[R.DRAGON_FANG=15]="DRAGON_FANG",R[R.BLACK_GLASSES=16]="BLACK_GLASSES",R[R.FAIRY_FEATHER=17]="FAIRY_FEATHER",R))(G0||{});const Oh=class Oh extends XE{constructor(e,I){var L;super("",`${(L=G0[e])==null?void 0:L.toLowerCase()}`,(N,S)=>new sI(this,S[0].id,e,I)),this.moveType=e,this.boostPercent=I}get name(){var e;return _.t(`modifierType:AttackTypeBoosterItem.${(e=G0[this.moveType])==null?void 0:e.toLowerCase()}`)}getDescription(){return _.t("modifierType:ModifierType.AttackTypeBoosterModifierType.description",{moveType:_.t(`pokemonInfo:Type.${t[this.moveType]}`)})}getPregenArgs(){return[this.moveType]}};r(Oh,"AttackTypeBoosterModifierType");let zo=Oh;const Ih=class Ih extends XE{constructor(e){const I=Qn.items[e];super(`modifierType:SpeciesBoosterItem.${e}`,e.toLowerCase(),(L,N)=>new mt(L,N[0].id,I.stats,I.multiplier,I.species)),this.key=e}getPregenArgs(){return[this.key]}};r(Ih,"SpeciesStatBoosterModifierType");let jo=Ih;const th=class th extends LO{constructor(e,I){super(e,I,(L,N)=>new hS(this,N[0].id),L=>null)}getDescription(){let e=1;const I=T.modifiers.find(L=>L instanceof Rt);return I&&(e+=I.stackCount),_.t("modifierType:ModifierType.PokemonLevelIncrementModifierType.description",{levels:e})}};r(th,"PokemonLevelIncrementModifierType");let P0=th;const Lh=class Lh extends FE{constructor(e,I){super(e,I,(L,N)=>new hS(this,-1))}getDescription(){let e=1;const I=T.modifiers.find(L=>L instanceof Rt);return I&&(e+=I.stackCount),_.t("modifierType:ModifierType.AllPokemonLevelIncrementModifierType.description",{levels:e})}};r(Lh,"AllPokemonLevelIncrementModifierType");let H0=Lh;const Nh=class Nh extends XE{constructor(e){const I=tM.items[e];super("",I,(L,N)=>new uS(this,N[0].id,this.stat)),this.stat=e,this.key=I}get name(){return _.t(`modifierType:BaseStatBoosterItem.${this.key}`)}getDescription(){return _.t("modifierType:ModifierType.BaseStatBoosterModifierType.description",{stat:_.t(aR(this.stat))})}getPregenArgs(){return[this.stat]}};r(Nh,"BaseStatBoosterModifierType");let AM=Nh;const Sh=class Sh extends XE{constructor(e){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_SHUCKLE_JUICE","berry_juice",(I,L)=>new BS(this,L[0].id,this.statModifier)),this.statModifier=e}getDescription(){return _.t("modifierType:ModifierType.PokemonBaseStatTotalModifierType.description",{increaseDecrease:_.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.increase":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.decrease"),blessCurse:_.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.blessed":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.cursed"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier]}};r(Sh,"PokemonBaseStatTotalModifierType");let EM=Sh;const Th=class Th extends XE{constructor(e,I){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_OLD_GATEAU","old_gateau",(L,N)=>new KS(this,N[0].id,this.statModifier,this.stats)),this.statModifier=e,this.stats=I}getDescription(){return _.t("modifierType:ModifierType.PokemonBaseStatFlatModifierType.description",{stats:this.stats.map(e=>_.t(aR(e))).join("/"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier,this.stats]}};r(Th,"PokemonBaseStatFlatModifierType");let eM=Th;const sh=class sh extends FE{constructor(e,I,L,N){super(e,I,N||((S,n)=>new wt(this,-1,0,100,!1))),this.descriptionKey=L}getDescription(){return _.t(`${this.descriptionKey||"modifierType:ModifierType.AllPokemonFullHpRestoreModifierType"}.description`)}};r(sh,"AllPokemonFullHpRestoreModifierType");let u0=sh;const ah=class ah extends u0{constructor(e,I){super(e,I,"modifierType:ModifierType.AllPokemonFullReviveModifierType",(L,N)=>new wt(this,-1,0,100,!1,!0))}};r(ah,"AllPokemonFullReviveModifierType");let c0=ah;const nh=class nh extends FE{constructor(e,I,L,N){super(e,I,(S,n)=>new da(this,L),"money","se/buy"),this.moneyMultiplier=L,this.moneyMultiplierDescriptorKey=N}getDescription(){const e=new VA(T.getWaveMoneyAmount(this.moneyMultiplier));T.applyModifiers(XO,!0,e);const I=Dy(T.moneyFormat,e.value);return _.t("modifierType:ModifierType.MoneyRewardModifierType.description",{moneyMultiplier:_.t(this.moneyMultiplierDescriptorKey),moneyAmount:I})}};r(nh,"MoneyRewardModifierType");let mT=nh;const rh=class rh extends FE{constructor(e,I,L){super(e,I,()=>new Fa(this,L)),this.boostPercent=L}getDescription(){return _.t("modifierType:ModifierType.ExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};r(rh,"ExpBoosterModifierType");let yT=rh;const ih=class ih extends XE{constructor(e,I,L){super(e,I,(N,S)=>new Ya(this,S[0].id,L)),this.boostPercent=L}getDescription(){return _.t("modifierType:ModifierType.PokemonExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};r(ih,"PokemonExpBoosterModifierType");let RM=ih;const Ch=class Ch extends XE{constructor(e,I){super(e,I,(L,N)=>new pS(this,N[0].id))}getDescription(){return _.t("modifierType:ModifierType.PokemonFriendshipBoosterModifierType.description")}};r(Ch,"PokemonFriendshipBoosterModifierType");let B0=Ch;const Uh=class Uh extends XE{constructor(e,I,L,N,S){super(e,I,(n,i)=>new mS(this,i[0].id,L),N,S),this.amount=L}getDescription(){return _.t("modifierType:ModifierType.PokemonMoveAccuracyBoosterModifierType.description",{accuracyAmount:this.amount})}};r(Uh,"PokemonMoveAccuracyBoosterModifierType");let K0=Uh;const oh=class oh extends XE{constructor(e,I){super(e,I,(L,N)=>new Ot(L,N[0].id))}getDescription(){return _.t("modifierType:ModifierType.PokemonMultiHitModifierType.description")}};r(oh,"PokemonMultiHitModifierType");let f0=oh;const Mh=class Mh extends LO{constructor(e){super("",`tm_${t[FA[e].type].toLowerCase()}`,(I,L)=>new ua(this,L[0].id),I=>I.compatibleTms.indexOf(e)===-1||I.getMoveset().filter(L=>L.moveId===e).length?YR.NoEffectMessage:null,"tm"),this.moveId=e}get name(){return _.t("modifierType:ModifierType.TmModifierType.name",{moveId:UT(Object.keys(mI).indexOf(this.moveId.toString())+1,3),moveName:FA[this.moveId].name})}getDescription(){return _.t(T.enableMoveInfo?"modifierType:ModifierType.TmModifierTypeWithInfo.description":"modifierType:ModifierType.TmModifierType.description",{moveName:FA[this.moveId].name})}};r(Mh,"TmModifierType");let OM=Mh;const Dh=class Dh extends LO{constructor(e){super("",uL[e].toLowerCase(),(I,L)=>new Ba(this,L[0].id),I=>lE.hasOwnProperty(I.species.speciesId)&&lE[I.species.speciesId].filter(L=>L.item===this.evolutionItem&&(!L.condition||L.condition.predicate(I))&&(L.preFormKey===null||L.preFormKey===I.getFormKey())).length&&I.getFormKey()!==eA.GIGANTAMAX||I.isFusion()&&I.fusionSpecies&&lE.hasOwnProperty(I.fusionSpecies.speciesId)&&lE[I.fusionSpecies.speciesId].filter(L=>L.item===this.evolutionItem&&(!L.condition||L.condition.predicate(I))&&(L.preFormKey===null||L.preFormKey===I.getFusionFormKey())).length&&I.getFusionFormKey()!==eA.GIGANTAMAX?null:YR.NoEffectMessage),this.evolutionItem=e}get name(){return _.t(`modifierType:EvolutionItem.${uL[this.evolutionItem]}`)}getDescription(){return _.t("modifierType:ModifierType.EvolutionItemModifierType.description")}getPregenArgs(){return[this.evolutionItem]}};r(Dh,"EvolutionItemModifierType");let IM=Dh;const lh=class lh extends LO{constructor(e){super("",aA[e].toLowerCase(),(I,L)=>new VI(this,L[0].id,e,!0),I=>xt.hasOwnProperty(I.species.speciesId)&&xt[I.species.speciesId].filter(L=>L.trigger.hasTriggerType(rA)&&L.preFormKey===I.getFormKey()).flatMap(L=>L.findTrigger(rA)).flatMap(L=>L.item).includes(this.formChangeItem)?null:YR.NoEffectMessage),this.formChangeItem=e}get name(){return _.t(`modifierType:FormChangeItem.${aA[this.formChangeItem]}`)}getDescription(){return _.t("modifierType:ModifierType.FormChangeItemModifierType.description")}getPregenArgs(){return[this.formChangeItem]}};r(lh,"FormChangeItemModifierType");let Xn=lh;const _h=class _h extends LO{constructor(e,I){super(e,I,(L,N)=>new Ka(this,N[0].id,N[1].id),L=>L.isFusion()?YR.NoEffectMessage:null)}getDescription(){return _.t("modifierType:ModifierType.FusePokemonModifierType.description")}};r(_h,"FusePokemonModifierType");let F0=_h;const Gh=class Gh extends Xe{constructor(){super((e,I)=>{if(I&&I.length===1&&I[0]in t)return new zo(I[0],Vm);const L=e.flatMap(o=>o.getMoveset().map(l=>l.getMove()).filter(l=>l.is("AttackMove")).map(l=>l.type));if(!L.length)return null;const N=new Map;let S=0;for(const o of L){if(N.has(o))if(N.get(o)<3)N.set(o,N.get(o)+1);else continue;else N.set(o,1);S++}if(!S)return null;let n;const i=DA(S);let C=0;for(const o of N.keys()){const l=N.get(o);if(i<=C+l){n=o;break}C+=l}return new zo(n,Vm)})}};r(Gh,"AttackTypeBoosterModifierTypeGenerator");let Y0=Gh;const Xl=class Xl extends Xe{constructor(){super((e,I)=>{if(I)return new AM(I[0]);const L=DA(c.SPD+1);return new AM(L)})}};r(Xl,"BaseStatBoosterModifierTypeGenerator"),Xl.items={[c.HP]:"hp_up",[c.ATK]:"protein",[c.DEF]:"iron",[c.SPATK]:"calcium",[c.SPDEF]:"zinc",[c.SPD]:"carbos"};let tM=Xl;const Ql=class Ql extends Xe{constructor(){super((e,I)=>{if(I&&I.length===1&&R3.includes(I[0]))return new qo(I[0]);const L=DA(c.ACC,c.ATK);return new qo(L)})}};r(Ql,"TempStatStageBoosterModifierTypeGenerator"),Ql.items={[c.ATK]:"x_attack",[c.DEF]:"x_defense",[c.SPATK]:"x_sp_atk",[c.SPDEF]:"x_sp_def",[c.SPD]:"x_speed",[c.ACC]:"x_accuracy"};let LM=Ql;const FN=class FN extends Xe{constructor(e){super((I,L)=>{const N=FN.items;if(L&&L.length===1&&L[0]in N)return new jo(L[0]);const S=[],n=[],i=[];for(const[o,l]of Object.entries(FN.items))l.rare===e&&(n.push(l),S.push(o),i.push(0));for(const o of I){const l=o.getSpeciesForm(!0).speciesId,H=o.isFusion()?o.getFusionSpeciesForm(!0).speciesId:null,P=!1;for(const K in n){const f=n[K].species,h=n[K].stats;o.getHeldItems().some(w=>w instanceof mt&&w.contains(f[0],h[0]))||(f.includes(l)||H&&f.includes(H)?i[K]++:f.includes(A.PIKACHU))}}let C=0;for(const o of i)C+=o;if(C!==0){const o=DA(C,1);let l=0;for(const H in i)if(i[H]!==0){const P=l+i[H];if(o<=l+i[H])return new jo(S[H]);l=P}}return null})}};r(FN,"SpeciesStatBoosterModifierTypeGenerator"),FN.items={LIGHT_BALL:{stats:[c.ATK,c.SPATK],multiplier:2,species:[A.PIKACHU],rare:!0},THICK_CLUB:{stats:[c.ATK],multiplier:2,species:[A.CUBONE,A.MAROWAK,A.ALOLA_MAROWAK],rare:!0},METAL_POWDER:{stats:[c.DEF],multiplier:2,species:[A.DITTO],rare:!0},QUICK_POWDER:{stats:[c.SPD],multiplier:2,species:[A.DITTO],rare:!0},DEEP_SEA_SCALE:{stats:[c.SPDEF],multiplier:2,species:[A.CLAMPERL],rare:!1},DEEP_SEA_TOOTH:{stats:[c.SPATK],multiplier:2,species:[A.CLAMPERL],rare:!1}};let Qn=FN;const Ph=class Ph extends Xe{constructor(e){super((I,L)=>{if(L&&L.length===1&&L[0]in E)return new OM(L[0]);const S=I.map(i=>{const C=i.getLearnableLevelMoves();return i.compatibleTms.filter(o=>!i.moveset.find(l=>l.moveId===o)&&!C.find(l=>l===o))}).flat().filter(i=>$i[i]===e).filter(i=>!FA[i].name.endsWith(" (N)")).filter((i,C,o)=>o.indexOf(i)===C);if(!S.length)return null;const n=DA(S.length);return new OM(S[n])})}};r(Ph,"TmModifierTypeGenerator");let VT=Ph;const Hh=class Hh extends Xe{constructor(e){super((I,L)=>{if(L&&L.length===1&&L[0]in uL)return new IM(L[0]);const N=[I.filter(S=>lE.hasOwnProperty(S.species.speciesId)&&(!S.pauseEvolutions||S.species.speciesId===A.SLOWPOKE||S.species.speciesId===A.EEVEE)).flatMap(S=>lE[S.species.speciesId].filter(i=>i.item!==uL.NONE&&(i.evoFormKey===null||(i.preFormKey||"")===S.getFormKey())&&(!i.condition||i.condition.predicate(S)))),I.filter(S=>S.isFusion()&&S.fusionSpecies&&lE.hasOwnProperty(S.fusionSpecies.speciesId)&&(!S.pauseEvolutions||S.fusionSpecies.speciesId===A.SLOWPOKE||S.fusionSpecies.speciesId===A.EEVEE)).flatMap(S=>lE[S.fusionSpecies.speciesId].filter(i=>i.item!==uL.NONE&&(i.evoFormKey===null||(i.preFormKey||"")===S.getFusionFormKey())&&(!i.condition||i.condition.predicate(S))))].flat().flatMap(S=>S.item).filter(S=>(!!S&&S>50)===e);return N.length?new IM(N[DA(N.length)]):null})}};r(Hh,"EvolutionItemModifierTypeGenerator");let NM=Hh;const uh=class uh extends Xe{constructor(e){super((I,L)=>{if(L&&L.length===1&&L[0]in aA)return new Xn(L[0]);const N=[...new Set(I.filter(S=>xt.hasOwnProperty(S.species.speciesId)).flatMap(S=>{let i=xt[S.species.speciesId].filter(C=>(C.formKey.indexOf(eA.MEGA)===-1&&C.formKey.indexOf(eA.PRIMAL)===-1||T.getModifiers(yL).length)&&(C.formKey.indexOf(eA.GIGANTAMAX)===-1&&C.formKey.indexOf(eA.ETERNAMAX)===-1||T.getModifiers(VL).length)&&(!C.conditions.length||C.conditions.filter(o=>o instanceof BE&&o.predicate(S)).length)&&C.preFormKey===S.getFormKey()).map(C=>C.findTrigger(rA)).filter(C=>(C==null?void 0:C.active)&&!T.findModifier(o=>o instanceof VI&&o.pokemonId===S.id&&o.formChangeItem===C.item));if(S.species.speciesId===A.NECROZMA){let C=!1,o=!1,l=!1;i.forEach((H,P)=>{switch(H.item,H.item){case aA.ULTRANECROZIUM_Z:C=!0;break;case aA.N_LUNARIZER:o=!0;break;case aA.N_SOLARIZER:l=!0;break}}),C&&o&&l&&(i=i.filter(H=>H.item!==aA.ULTRANECROZIUM_Z))}return i}))].flat().flatMap(S=>S.item).filter(S=>(S&&S<100)===e);return N.length?new Xn(N[DA(N.length)]):null})}};r(uh,"FormChangeItemModifierTypeGenerator");let SM=uh;const ch=class ch extends XE{constructor(e,I,L,N,S){super(e,I,(n,i)=>new JL(n,i[0].id,L),N,S),this.chancePercent=L}getDescription(){return _.t("modifierType:ModifierType.ContactHeldItemTransferChanceModifierType.description",{chancePercent:this.chancePercent})}};r(ch,"ContactHeldItemTransferChanceModifierType");let W0=ch;const Bh=class Bh extends XE{constructor(e,I,L,N){super(e,I,(S,n)=>new wS(S,n[0].id),L,N)}getDescription(){return _.t("modifierType:ModifierType.TurnHeldItemTransferModifierType.description")}};r(Bh,"TurnHeldItemTransferModifierType");let h0=Bh;const Kh=class Kh extends FE{constructor(e,I,L,N,S){super(e,I,(n,i)=>new xa(n,N,L,S),"enemy_status_chance"),this.chancePercent=L,this.effect=N}getDescription(){return _.t("modifierType:ModifierType.EnemyAttackStatusEffectChanceModifierType.description",{chancePercent:this.chancePercent,statusEffect:I3(this.effect)})}};r(Kh,"EnemyAttackStatusEffectChanceModifierType");let wT=Kh;const fh=class fh extends FE{constructor(e,I,L){super(e,I,(N,S)=>new ba(N,L),"enemy_endure"),this.chancePercent=L}getDescription(){return _.t("modifierType:ModifierType.EnemyEndureChanceModifierType.description",{chancePercent:this.chancePercent})}};r(fh,"EnemyEndureChanceModifierType");let d0=fh;const Fh=class Fh{constructor(e,I,L){this.modifierType=e(),this.modifierType.id=Object.keys(Me).find(N=>Me[N]===e),this.weight=I,this.maxWeight=L||(I instanceof Function?0:I)}setTier(e){this.modifierType.setTier(e)}};r(Fh,"WeightedModifierType");let _A=Fh;const Me=Object.freeze({POKEBALL:r(()=>new RL("pb",MA.POKEBALL,5),"POKEBALL"),GREAT_BALL:r(()=>new RL("gb",MA.GREAT_BALL,5),"GREAT_BALL"),ULTRA_BALL:r(()=>new RL("ub",MA.ULTRA_BALL,5),"ULTRA_BALL"),ROGUE_BALL:r(()=>new RL("rb",MA.ROGUE_BALL,5),"ROGUE_BALL"),MASTER_BALL:r(()=>new RL("mb",MA.MASTER_BALL,1),"MASTER_BALL"),RARE_CANDY:r(()=>new P0("modifierType:ModifierType.RARE_CANDY","rare_candy"),"RARE_CANDY"),RARER_CANDY:r(()=>new H0("modifierType:ModifierType.RARER_CANDY","rarer_candy"),"RARER_CANDY"),EVOLUTION_ITEM:r(()=>new NM(!1),"EVOLUTION_ITEM"),RARE_EVOLUTION_ITEM:r(()=>new NM(!0),"RARE_EVOLUTION_ITEM"),FORM_CHANGE_ITEM:r(()=>new SM(!1),"FORM_CHANGE_ITEM"),RARE_FORM_CHANGE_ITEM:r(()=>new SM(!0),"RARE_FORM_CHANGE_ITEM"),EVOLUTION_TRACKER_GIMMIGHOUL:r(()=>new XE("modifierType:ModifierType.EVOLUTION_TRACKER_GIMMIGHOUL","relic_gold",(R,e)=>new cS(R,e[0].id,A.GIMMIGHOUL,10)),"EVOLUTION_TRACKER_GIMMIGHOUL"),MEGA_BRACELET:r(()=>new FE("modifierType:ModifierType.MEGA_BRACELET","mega_bracelet",(R,e)=>new yL(R)),"MEGA_BRACELET"),DYNAMAX_BAND:r(()=>new FE("modifierType:ModifierType.DYNAMAX_BAND","dynamax_band",(R,e)=>new VL(R)),"DYNAMAX_BAND"),TERA_ORB:r(()=>new FE("modifierType:ModifierType.TERA_ORB","tera_orb",(R,e)=>new HS(R)),"TERA_ORB"),MAP:r(()=>new FE("modifierType:ModifierType.MAP","map",(R,e)=>new Ua(R)),"MAP"),POTION:r(()=>new Ht("modifierType:ModifierType.POTION","potion",20,10),"POTION"),SUPER_POTION:r(()=>new Ht("modifierType:ModifierType.SUPER_POTION","super_potion",50,25),"SUPER_POTION"),HYPER_POTION:r(()=>new Ht("modifierType:ModifierType.HYPER_POTION","hyper_potion",200,50),"HYPER_POTION"),MAX_POTION:r(()=>new Ht("modifierType:ModifierType.MAX_POTION","max_potion",0,100),"MAX_POTION"),FULL_RESTORE:r(()=>new Ht("modifierType:ModifierType.FULL_RESTORE","full_restore",0,100,!0),"FULL_RESTORE"),REVIVE:r(()=>new bo("modifierType:ModifierType.REVIVE","revive",50),"REVIVE"),MAX_REVIVE:r(()=>new bo("modifierType:ModifierType.MAX_REVIVE","max_revive",100),"MAX_REVIVE"),FULL_HEAL:r(()=>new l0("modifierType:ModifierType.FULL_HEAL","full_heal"),"FULL_HEAL"),SACRED_ASH:r(()=>new c0("modifierType:ModifierType.SACRED_ASH","sacred_ash"),"SACRED_ASH"),REVIVER_SEED:r(()=>new XE("modifierType:ModifierType.REVIVER_SEED","reviver_seed",(R,e)=>new YS(R,e[0].id)),"REVIVER_SEED"),WHITE_HERB:r(()=>new XE("modifierType:ModifierType.WHITE_HERB","white_herb",(R,e)=>new Ma(R,e[0].id)),"WHITE_HERB"),ETHER:r(()=>new Xo("modifierType:ModifierType.ETHER","ether",10),"ETHER"),MAX_ETHER:r(()=>new Xo("modifierType:ModifierType.MAX_ETHER","max_ether",-1),"MAX_ETHER"),ELIXIR:r(()=>new Qo("modifierType:ModifierType.ELIXIR","elixir",10),"ELIXIR"),MAX_ELIXIR:r(()=>new Qo("modifierType:ModifierType.MAX_ELIXIR","max_elixir",-1),"MAX_ELIXIR"),PP_UP:r(()=>new Jo("modifierType:ModifierType.PP_UP","pp_up",1),"PP_UP"),PP_MAX:r(()=>new Jo("modifierType:ModifierType.PP_MAX","pp_max",3),"PP_MAX"),LURE:r(()=>new gT("modifierType:ModifierType.LURE","lure",10),"LURE"),SUPER_LURE:r(()=>new gT("modifierType:ModifierType.SUPER_LURE","super_lure",15),"SUPER_LURE"),MAX_LURE:r(()=>new gT("modifierType:ModifierType.MAX_LURE","max_lure",30),"MAX_LURE"),SPECIES_STAT_BOOSTER:r(()=>new Qn(!1),"SPECIES_STAT_BOOSTER"),RARE_SPECIES_STAT_BOOSTER:r(()=>new Qn(!0),"RARE_SPECIES_STAT_BOOSTER"),TEMP_STAT_STAGE_BOOSTER:r(()=>new LM,"TEMP_STAT_STAGE_BOOSTER"),DIRE_HIT:r(()=>new class extends FE{getDescription(){return _.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:_.t("modifierType:ModifierType.DIRE_HIT.extra.raises"),amount:_.t("modifierType:ModifierType.TempStatStageBoosterModifierType.extra.stage")})}}("modifierType:ModifierType.DIRE_HIT","dire_hit",(R,e)=>new PS(R,5)),"DIRE_HIT"),BASE_STAT_BOOSTER:r(()=>new tM,"BASE_STAT_BOOSTER"),ATTACK_TYPE_BOOSTER:r(()=>new Y0,"ATTACK_TYPE_BOOSTER"),MINT:r(()=>new Xe((R,e)=>e&&e.length===1&&e[0]in ZA?new $o(e[0]):new $o(DA(nR(ZA).length))),"MINT"),MYSTICAL_ROCK:r(()=>new XE("modifierType:ModifierType.MYSTICAL_ROCK","mystical_rock",(R,e)=>new XL(R,e[0].id)),"MYSTICAL_ROCK"),TERA_SHARD:r(()=>new Xe((R,e)=>{if(e&&e.length===1&&e[0]in t)return new Zo(e[0]);if(!T.getModifiers(HS).length)return null;const I=[];for(const S of R)S.hasSpecies(A.TERAPAGOS)||S.hasSpecies(A.OGERPON)||S.hasSpecies(A.SHEDINJA)||I.push(S.teraType);let L=t.UNKNOWN;I.length>0&&I.filter(S=>S===I[0]).length===I.length&&(L=I[0]);let N=DA(64)?DA(18):t.STELLAR;for(;N===L;)N=DA(64)?DA(18):t.STELLAR;return new Zo(N)}),"TERA_SHARD"),BERRY:r(()=>new Xe((R,e)=>{if(e&&e.length===1&&e[0]in EE)return new $S(e[0]);const I=nR(EE);let L;const N=DA(12);return N<2?L=EE.SITRUS:N<4?L=EE.LUM:N<6?L=EE.LEPPA:L=I[DA(I.length-3)+2],new $S(L)}),"BERRY"),TM_COMMON:r(()=>new VT(p.COMMON),"TM_COMMON"),TM_GREAT:r(()=>new VT(p.GREAT),"TM_GREAT"),TM_ULTRA:r(()=>new VT(p.ULTRA),"TM_ULTRA"),MEMORY_MUSHROOM:r(()=>new _0("modifierType:ModifierType.MEMORY_MUSHROOM","big_mushroom"),"MEMORY_MUSHROOM"),EXP_SHARE:r(()=>new FE("modifierType:ModifierType.EXP_SHARE","exp_share",(R,e)=>new Wa(R)),"EXP_SHARE"),EXP_BALANCE:r(()=>new FE("modifierType:ModifierType.EXP_BALANCE","exp_balance",(R,e)=>new ha(R)),"EXP_BALANCE"),OVAL_CHARM:r(()=>new FE("modifierType:ModifierType.OVAL_CHARM","oval_charm",(R,e)=>new fa(R)),"OVAL_CHARM"),EXP_CHARM:r(()=>new yT("modifierType:ModifierType.EXP_CHARM","exp_charm",25),"EXP_CHARM"),SUPER_EXP_CHARM:r(()=>new yT("modifierType:ModifierType.SUPER_EXP_CHARM","super_exp_charm",60),"SUPER_EXP_CHARM"),GOLDEN_EXP_CHARM:r(()=>new yT("modifierType:ModifierType.GOLDEN_EXP_CHARM","golden_exp_charm",100),"GOLDEN_EXP_CHARM"),LUCKY_EGG:r(()=>new RM("modifierType:ModifierType.LUCKY_EGG","lucky_egg",40),"LUCKY_EGG"),GOLDEN_EGG:r(()=>new RM("modifierType:ModifierType.GOLDEN_EGG","golden_egg",100),"GOLDEN_EGG"),SOOTHE_BELL:r(()=>new B0("modifierType:ModifierType.SOOTHE_BELL","soothe_bell"),"SOOTHE_BELL"),SCOPE_LENS:r(()=>new XE("modifierType:ModifierType.SCOPE_LENS","scope_lens",(R,e)=>new xL(R,e[0].id,1)),"SCOPE_LENS"),LEEK:r(()=>new XE("modifierType:ModifierType.LEEK","leek",(R,e)=>new fS(R,e[0].id,2,[A.FARFETCHD,A.GALAR_FARFETCHD,A.SIRFETCHD])),"LEEK"),EVIOLITE:r(()=>new XE("modifierType:ModifierType.EVIOLITE","eviolite",(R,e)=>new kC(R,e[0].id,[c.DEF,c.SPDEF],1.5)),"EVIOLITE"),SOUL_DEW:r(()=>new XE("modifierType:ModifierType.SOUL_DEW","soul_dew",(R,e)=>new gS(R,e[0].id)),"SOUL_DEW"),NUGGET:r(()=>new mT("modifierType:ModifierType.NUGGET","nugget",1,"modifierType:ModifierType.MoneyRewardModifierType.extra.small"),"NUGGET"),BIG_NUGGET:r(()=>new mT("modifierType:ModifierType.BIG_NUGGET","big_nugget",2.5,"modifierType:ModifierType.MoneyRewardModifierType.extra.moderate"),"BIG_NUGGET"),RELIC_GOLD:r(()=>new mT("modifierType:ModifierType.RELIC_GOLD","relic_gold",10,"modifierType:ModifierType.MoneyRewardModifierType.extra.large"),"RELIC_GOLD"),AMULET_COIN:r(()=>new FE("modifierType:ModifierType.AMULET_COIN","amulet_coin",(R,e)=>new XO(R)),"AMULET_COIN"),GOLDEN_PUNCH:r(()=>new XE("modifierType:ModifierType.GOLDEN_PUNCH","golden_punch",(R,e)=>new QL(R,e[0].id)),"GOLDEN_PUNCH"),COIN_CASE:r(()=>new FE("modifierType:ModifierType.COIN_CASE","coin_case",(R,e)=>new pa(R)),"COIN_CASE"),LOCK_CAPSULE:r(()=>new FE("modifierType:ModifierType.LOCK_CAPSULE","lock_capsule",(R,e)=>new ma(R)),"LOCK_CAPSULE"),GRIP_CLAW:r(()=>new W0("modifierType:ModifierType.GRIP_CLAW","grip_claw",10),"GRIP_CLAW"),WIDE_LENS:r(()=>new K0("modifierType:ModifierType.WIDE_LENS","wide_lens",5),"WIDE_LENS"),MULTI_LENS:r(()=>new f0("modifierType:ModifierType.MULTI_LENS","zoom_lens"),"MULTI_LENS"),HEALING_CHARM:r(()=>new FE("modifierType:ModifierType.HEALING_CHARM","healing_charm",(R,e)=>new dS(R,1.1)),"HEALING_CHARM"),CANDY_JAR:r(()=>new FE("modifierType:ModifierType.CANDY_JAR","candy_jar",(R,e)=>new Rt(R)),"CANDY_JAR"),BERRY_POUCH:r(()=>new FE("modifierType:ModifierType.BERRY_POUCH","berry_pouch",(R,e)=>new Vt(R)),"BERRY_POUCH"),FOCUS_BAND:r(()=>new XE("modifierType:ModifierType.FOCUS_BAND","focus_band",(R,e)=>new FS(R,e[0].id)),"FOCUS_BAND"),QUICK_CLAW:r(()=>new XE("modifierType:ModifierType.QUICK_CLAW","quick_claw",(R,e)=>new ZL(R,e[0].id)),"QUICK_CLAW"),KINGS_ROCK:r(()=>new XE("modifierType:ModifierType.KINGS_ROCK","kings_rock",(R,e)=>new oa(R,e[0].id)),"KINGS_ROCK"),LEFTOVERS:r(()=>new XE("modifierType:ModifierType.LEFTOVERS","leftovers",(R,e)=>new bL(R,e[0].id)),"LEFTOVERS"),SHELL_BELL:r(()=>new XE("modifierType:ModifierType.SHELL_BELL","shell_bell",(R,e)=>new kL(R,e[0].id)),"SHELL_BELL"),TOXIC_ORB:r(()=>new XE("modifierType:ModifierType.TOXIC_ORB","toxic_orb",(R,e)=>new yt(R,e[0].id)),"TOXIC_ORB"),FLAME_ORB:r(()=>new XE("modifierType:ModifierType.FLAME_ORB","flame_orb",(R,e)=>new yt(R,e[0].id)),"FLAME_ORB"),BATON:r(()=>new XE("modifierType:ModifierType.BATON","baton",(R,e)=>new Va(R,e[0].id)),"BATON"),SHINY_CHARM:r(()=>new FE("modifierType:ModifierType.SHINY_CHARM","shiny_charm",(R,e)=>new vt(R)),"SHINY_CHARM"),ABILITY_CHARM:r(()=>new FE("modifierType:ModifierType.ABILITY_CHARM","ability_charm",(R,e)=>new aI(R)),"ABILITY_CHARM"),CATCHING_CHARM:r(()=>new FE("modifierType:ModifierType.CATCHING_CHARM","catching_charm",(R,e)=>new ga(R)),"CATCHING_CHARM"),IV_SCANNER:r(()=>new FE("modifierType:ModifierType.IV_SCANNER","scanner",(R,e)=>new vS(R)),"IV_SCANNER"),DNA_SPLICERS:r(()=>new F0("modifierType:ModifierType.DNA_SPLICERS","dna_splicers"),"DNA_SPLICERS"),MINI_BLACK_HOLE:r(()=>new h0("modifierType:ModifierType.MINI_BLACK_HOLE","mini_black_hole"),"MINI_BLACK_HOLE"),VOUCHER:r(()=>new pT(zi.REGULAR,1),"VOUCHER"),VOUCHER_PLUS:r(()=>new pT(zi.PLUS,1),"VOUCHER_PLUS"),VOUCHER_PREMIUM:r(()=>new pT(zi.PREMIUM,1),"VOUCHER_PREMIUM"),GOLDEN_POKEBALL:r(()=>new FE("modifierType:ModifierType.GOLDEN_POKEBALL","pb_gold",(R,e)=>new $L(R),void 0,"se/pb_bounce_1"),"GOLDEN_POKEBALL"),SILVER_POKEBALL:r(()=>new FE("modifierType:ModifierType.SILVER_POKEBALL","pb_silver",(R,e)=>new qL(R,100),void 0,"se/pb_bounce_1"),"SILVER_POKEBALL"),ENEMY_DAMAGE_BOOSTER:r(()=>new FE("modifierType:ModifierType.ENEMY_DAMAGE_BOOSTER","wl_item_drop",(R,e)=>new xS(R,5)),"ENEMY_DAMAGE_BOOSTER"),ENEMY_DAMAGE_REDUCTION:r(()=>new FE("modifierType:ModifierType.ENEMY_DAMAGE_REDUCTION","wl_guard_spec",(R,e)=>new ZS(R,2.5)),"ENEMY_DAMAGE_REDUCTION"),ENEMY_HEAL:r(()=>new FE("modifierType:ModifierType.ENEMY_HEAL","wl_potion",(R,e)=>new va(R,2,10)),"ENEMY_HEAL"),ENEMY_ATTACK_POISON_CHANCE:r(()=>new wT("modifierType:ModifierType.ENEMY_ATTACK_POISON_CHANCE","wl_antidote",5,J.POISON,10),"ENEMY_ATTACK_POISON_CHANCE"),ENEMY_ATTACK_PARALYZE_CHANCE:r(()=>new wT("modifierType:ModifierType.ENEMY_ATTACK_PARALYZE_CHANCE","wl_paralyze_heal",2.5,J.PARALYSIS,10),"ENEMY_ATTACK_PARALYZE_CHANCE"),ENEMY_ATTACK_BURN_CHANCE:r(()=>new wT("modifierType:ModifierType.ENEMY_ATTACK_BURN_CHANCE","wl_burn_heal",5,J.BURN,10),"ENEMY_ATTACK_BURN_CHANCE"),ENEMY_STATUS_EFFECT_HEAL_CHANCE:r(()=>new FE("modifierType:ModifierType.ENEMY_STATUS_EFFECT_HEAL_CHANCE","wl_full_heal",(R,e)=>new Za(R,2.5,10)),"ENEMY_STATUS_EFFECT_HEAL_CHANCE"),ENEMY_ENDURE_CHANCE:r(()=>new d0("modifierType:ModifierType.ENEMY_ENDURE_CHANCE","wl_reset_urge",2),"ENEMY_ENDURE_CHANCE"),ENEMY_FUSED_CHANCE:r(()=>new FE("modifierType:ModifierType.ENEMY_FUSED_CHANCE","wl_custom_spliced",(R,e)=>new bS(R,1)),"ENEMY_FUSED_CHANCE"),MYSTERY_ENCOUNTER_SHUCKLE_JUICE:r(()=>new Xe((R,e)=>e?new EM(e[0]):new EM(DA(20,1))),"MYSTERY_ENCOUNTER_SHUCKLE_JUICE"),MYSTERY_ENCOUNTER_OLD_GATEAU:r(()=>new Xe((R,e)=>e?new eM(e[0],e[1]):new eM(DA(20,1),[c.HP,c.ATK,c.DEF])),"MYSTERY_ENCOUNTER_OLD_GATEAU"),MYSTERY_ENCOUNTER_BLACK_SLUDGE:r(()=>new Xe((R,e)=>e?new FE("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(I,L)=>new yS(I,e[0])):new FE("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(I,L)=>new yS(I,2.5))),"MYSTERY_ENCOUNTER_BLACK_SLUDGE"),MYSTERY_ENCOUNTER_MACHO_BRACE:r(()=>new XE("modifierType:ModifierType.MYSTERY_ENCOUNTER_MACHO_BRACE","macho_brace",(R,e)=>new wL(R,e[0].id)),"MYSTERY_ENCOUNTER_MACHO_BRACE"),MYSTERY_ENCOUNTER_GOLDEN_BUG_NET:r(()=>new FE("modifierType:ModifierType.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET","golden_net",(R,e)=>new ya(R)),"MYSTERY_ENCOUNTER_GOLDEN_BUG_NET")}),GT={};let H3={},p0={},u3={},g0={},c3={};const ev=[768/1024,195/1024,48/1024,12/1024,1/1024],ti=new Map;function t_(R,e,I=0){const L=xC(e);ti.forEach((i,C)=>{ti.set(C,!1)});const N={},S={},n=Object.fromEntries(new Map(Object.keys(L).map(i=>{N[i]=[];const C=new Map,o=[];let l=0,H=0;L[i].reduce((P,K)=>{const f=K,h=T.findModifiers(m=>m.type.id===f.modifierType.id,e===cE.PLAYER),F=f.modifierType instanceof Xe?f.modifierType.generateType(R):f.modifierType,w=!h.length||F instanceof XE||F instanceof Xn||h.find(m=>m.stackCount<m.getMaxStackCount(!0))?f.weight instanceof Function?f.weight(R,I):f.weight:0;if(f.maxWeight){const m=f.modifierType.id;o.push(m);const y=w;S[m]={weight:y,tier:Number.parseInt(i),tierPercent:0,totalPercent:0},l+=y}if(w)P+=w;else return N[i].push(H++),P;return ti.has(K.modifierType.id)&&ti.set(K.modifierType.id,!0),C.set(P,H++),P},0);for(const P of o)S[P].tierPercent=Math.floor(S[P].weight/l*1e4)/100;return[i,Object.fromEntries(C)]})));for(const i of Object.keys(S))S[i].totalPercent=Math.floor(S[i].tierPercent*ev[S[i].tier]*100)/100,S[i].tier=p[S[i].tier];switch(e){case cE.PLAYER:H3=n,p0=N;break;case cE.WILD:case cE.TRAINER:g0=n;break;case cE.ENEMY_BUFF:c3=n;break;case cE.DAILY_STARTER:u3=n;break}}r(t_,"regenerateModifierPoolThresholds");function oZ(R){return Me[R]}r(oZ,"getModifierTypeFuncById");function B3(R,e,I,L){const N=[],S=Math.min(R*5,50);if(!L)new Array(R).fill(0).map((n,i)=>{N.push(__(N,S,e,I&&I.length>i?I[i]:void 0))});else{if(L!=null&&L.guaranteedModifierTypeOptions&&L.guaranteedModifierTypeOptions.length>0&&N.push(...L.guaranteedModifierTypeOptions),L.guaranteedModifierTypeFuncs&&L.guaranteedModifierTypeFuncs.length>0&&L.guaranteedModifierTypeFuncs.forEach((n,i)=>{var H;const C=Object.keys(Me).find(P=>Me[P]===n);let o=(H=Me[C])==null?void 0:H.call(Me);o=o.withIdFromFunc(Me[C]).withTierFromPool(cE.PLAYER,e);const l=o instanceof Xe?o.generateType(e):o;if(l){const P=new TR(l,0);N.push(P)}}),L.guaranteedModifierTiers&&L.guaranteedModifierTiers.length>0){const n=L.allowLuckUpgrades??!0;for(const i of L.guaranteedModifierTiers)N.push(__(N,S,e,i,n))}if(N.length<R&&L.fillRemaining)for(;N.length<R;)N.push(__(N,S,e,void 0))}return Rv(N,e),N}r(B3,"getPlayerModifierTypeOptions");function __(R,e,I,L,N){N=N??!0;let S=eN(I,cE.PLAYER,L,void 0,0,N),n=0;for(;R.length&&++n<e&&R.filter(i=>i.type.name===(S==null?void 0:S.type.name)||i.type.group===(S==null?void 0:S.type.group)).length;)S=eN(I,cE.PLAYER,(S==null?void 0:S.type.tier)??L,S==null?void 0:S.upgradeCount,0,N);return S}r(__,"getModifierTypeOptionWithRetry");function Rv(R,e){const I=Math.min(R.length,aE.ITEM_REWARD_OVERRIDE.length);for(let L=0;L<I;L++){const N=aE.ITEM_REWARD_OVERRIDE[L],S=Me[N.name];let n=S();if(n instanceof Xe){const i="type"in N&&N.type!==null?[N.type]:void 0;n=n.generateType(e,i)}n&&(R[L].type=n.withIdFromFunc(S).withTierFromPool(cE.PLAYER,e))}}r(Rv,"overridePlayerModifierTypeOptions");function MZ(R,e){return R%10?[[new TR(Me.POTION(),0,e*.2),new TR(Me.ETHER(),0,e*.4),new TR(Me.REVIVE(),0,e*2)],[new TR(Me.SUPER_POTION(),0,e*.45),new TR(Me.FULL_HEAL(),0,e)],[new TR(Me.ELIXIR(),0,e),new TR(Me.MAX_ETHER(),0,e)],[new TR(Me.HYPER_POTION(),0,e*.8),new TR(Me.MAX_REVIVE(),0,e*2.75),new TR(Me.MEMORY_MUSHROOM(),0,e*4)],[new TR(Me.MAX_POTION(),0,e*1.5),new TR(Me.MAX_ELIXIR(),0,e*2.5)],[new TR(Me.FULL_RESTORE(),0,e*2.25)],[new TR(Me.SACRED_ASH(),0,e*10)]].slice(0,Math.ceil(Math.max(R+10,0)/30)).flat():[]}r(MZ,"getPlayerShopModifierTypeOptionsForWave");function DZ(R,e){var C;let I;switch(R){case p.ULTRA:I=5;break;case p.GREAT:I=3;break;default:I=1;break}const L=50;let N=eN([],cE.ENEMY_BUFF,R),S=0,n;for(;++S<L&&(n=e.find(o=>{var l;return o.type.id===((l=N==null?void 0:N.type)==null?void 0:l.id)}))&&n.getMaxStackCount()<n.stackCount+(S<10?I:1);)N=eN([],cE.ENEMY_BUFF,R);const i=(C=N==null?void 0:N.type)==null?void 0:C.newModifier();return i.stackCount=I,i}r(DZ,"getEnemyBuffModifierForWave");function lZ(R,e,I,L,N=0){const S=new Array(e).fill(0).map(()=>{var n;return(n=eN(I,L,void 0,N&&!DA(N)?1:0))==null?void 0:n.type});return R%1e3||S.push(s3(Me.MINI_BLACK_HOLE)),S}r(lZ,"getEnemyModifierTypesForWave");function _Z(R){var I,L;const e=[];for(const N of R)for(let S=0;S<3;S++){const n=DA(64);let i;n>25?i=p.COMMON:n>12?i=p.GREAT:n>4?i=p.ULTRA:n?i=p.ROGUE:i=p.MASTER;const C=(L=(I=eN(R,cE.DAILY_STARTER,i))==null?void 0:I.type)==null?void 0:L.newModifier(N);e.push(C)}return e}r(_Z,"getDailyRunStarterModifiers");function eN(R,e,I,L,N=0,S=!0){const n=!e,i=xC(e);let C;switch(e){case cE.PLAYER:C=H3;break;case cE.WILD:C=g0;break;case cE.TRAINER:C=g0;break;case cE.ENEMY_BUFF:C=c3;break;case cE.DAILY_STARTER:C=u3;break}if(I===void 0){const f=DA(1024);if(L||(L=0),n&&f&&S){const h=Jn(R),F=Math.floor(128/((h+4)/4));let w=!1;do w=DA(F)<4,w&&L++;while(w)}for(f>255?I=p.COMMON:f>60?I=p.GREAT:f>12?I=p.ULTRA:f?I=p.ROGUE:I=p.MASTER,I+=L;I&&(!GT.hasOwnProperty(I)||!GT[I].length);)I--,L&&L--}else if(L===void 0&&n){if(L=0,I<p.MASTER&&S){const f=Jn(R),h=Math.floor(128/((f+4)/4));for(;GT.hasOwnProperty(I+L+1)&&GT[I+L+1].length&&DA(h)<4;)L++;I+=L}}else N>=100&&I&&(N=0,I--);const o=Object.keys(C[I]),l=Number.parseInt(o[o.length-1]),H=DA(l);let P;for(const f of o){const h=Number.parseInt(f);if(H<h){P=C[I][h];break}}if(P===void 0)return null;n&&(p0[I].filter(f=>f<=P).length,p0[I]);let K=i[I][P].modifierType;return K instanceof Xe&&(K=K.generateType(R),K===null)?(n&&p[I],eN(R,e,I,L,++N)):new TR(K,L)}r(eN,"getNewModifierTypeOption");function GZ(R){let e=GT[R||p.COMMON][0];return e instanceof _A&&(e=e.modifierType),e}r(GZ,"getDefaultModifierTypeForTier");const Yh=class Yh{constructor(e,I,L=0){this.type=e,this.upgradeCount=I,this.cost=Math.min(Math.round(L),Number.MAX_SAFE_INTEGER)}};r(Yh,"ModifierTypeOption");let TR=Yh;function Jn(R){if(T.gameMode.isDaily){const L=new VA(0);return T.executeWithSeedOffset(()=>{L.value=DA(15)},0,T.seed),L.value}const e=pe.getEventLuckBoostedSpecies(),I=Phaser.Math.Clamp(R.map(L=>L.isAllowedInBattle()?L.getLuck()+(e.includes(L.species.speciesId)?1:0):0).reduce((L,N)=>L+=N,0),0,14);return Math.min(pe.getEventLuckBoost()+(I??0),14)}r(Jn,"getPartyLuckValue");function PZ(R){return["D","C","C+","B-","B","B+","A-","A","A+","A++","S","S+","SS","SS+","SSS"][R]}r(PZ,"getLuckString");function HZ(R){let e;return R>11?e=p.LUXURY:R>9?e=p.MASTER:R>5?e=p.ROGUE:R>2?e=p.ULTRA:R?e=p.GREAT:e=p.COMMON,oT(e)}r(HZ,"getLuckTextTint");function Ov(){for(const[R,e]of Object.entries(Me))k[R]=e}r(Ov,"initModifierTypes");const Iv=Object.freeze({ModifierTypeGenerator:Xe,PokemonHeldItemModifierType:XE}),Wh=class Wh{constructor(e,I,L=0){this.isSuppressable=!0,this.isCopiable=!0,this.isReplaceable=!0,this.id=e,this.nameAppend="",this.generation=I,this.postSummonPriority=L,this.attrs=[],this.conditions=[],this.localize()}get isSwappable(){return this.isCopiable&&this.isReplaceable}localize(){const e=O[this.id].split("_").filter(I=>I).map((I,L)=>L?`${I[0]}${I.slice(1).toLowerCase()}`:I.toLowerCase()).join("");this.name=this.id?`${_.t(`ability:${e}.name`)}${this.nameAppend}`:"",this.description=this.id?_.t(`ability:${e}.description`):""}getAttrs(e){const I=x0[e];return I?this.attrs.filter(L=>L instanceof I):[]}hasAttr(e){const I=x0[e];return I?this.attrs.some(L=>L instanceof I):!1}attr(e,...I){const L=new e(...I);return this.attrs.push(L),this}conditionalAttr(e,I,...L){const N=new I(...L);return N.addCondition(e),this.attrs.push(N),this}bypassFaint(){return this.isBypassFaint=!0,this}ignorable(){return this.isIgnorable=!0,this}unsuppressable(){return this.isSuppressable=!1,this}uncopiable(){return this.isCopiable=!1,this}unreplaceable(){return this.isReplaceable=!1,this}condition(e){return this.conditions.push(e),this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}edgeCase(){return this}};r(Wh,"Ability");let X=Wh;const hh=class hh{is(e){const I=x0[e];return I?this instanceof I:!1}constructor(e=!0){this.showAbility=e}apply(e,I,L,N,S){}getTriggerMessage(e,I,...L){return null}getCondition(){return this.extraCondition||null}addCondition(e){return this.extraCondition=e,this}canApply(e,I,L,N){return!0}};r(hh,"AbAttr");let xA=hh;const dh=class dh extends xA{constructor(){super(!1)}apply(e,I,L,N,S){N.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:blockRecoilDamage",{pokemonName:Q(e),abilityName:I})}};r(dh,"BlockRecoilDamageAttr");let TM=dh;const ph=class ph extends xA{constructor(){super(!1)}apply(e,I,L,N,S){const n=S[0];n.value=n.value/4}};r(ph,"DoubleBattleChanceAbAttr");let oL=ph;const gh=class gh extends xA{canApplyPostBattleInit(e,I,L,N){return!0}applyPostBattleInit(e,I,L,N){}};r(gh,"PostBattleInitAbAttr");let sM=gh;const mh=class mh extends sM{constructor(e){super(!1),this.formFunc=e}canApplyPostBattleInit(e,I,L,N){return this.formFunc(e)!==e.formIndex&&!L}applyPostBattleInit(e,I,L,N){T.triggerPokemonFormChange(e,DE,!1)}};r(mh,"PostBattleInitFormChangeAbAttr");let mO=mh;const yh=class yh extends xA{constructor(e,I){super(),this.stats=e,this.stages=I}apply(e,I,L,N,S){const n=[];if(!L){const i=T.phaseManager;n.push(i.create("StatStageChangePhase",e.getBattlerIndex(),!0,this.stats,this.stages));for(const C of n)i.unshiftPhase(C)}}};r(yh,"PostTeraFormChangeStatChangeAbAttr");let ML=yh;const Vh=class Vh extends xA{constructor(e){super(!0),this.weather=e}canApply(e,I,L,N){return T.arena.canSetWeather(Z.NONE)}apply(e,I,L,N,S){L||T.arena.trySetWeather(Z.NONE,e)}};r(Vh,"ClearWeatherAbAttr");let aM=Vh;const wh=class wh extends xA{constructor(e){super(!0),this.terrain=e}canApply(e,I,L,N){return T.arena.canSetTerrain(bA.NONE)}apply(e,I,L,N,S){L||T.arena.trySetTerrain(bA.NONE,!0,e)}};r(wh,"ClearTerrainAbAttr");let nM=wh;const vh=class vh extends xA{canApplyPreDefend(e,I,L,N,S,n,i){return!0}applyPreDefend(e,I,L,N,S,n,i){}};r(vh,"PreDefendAbAttr");let QO=vh;const xh=class xh extends QO{canApplyPreDefend(e,I,L,N,S,n,i){return e.isFullHp()&&e.getMaxHp()>1&&i[0].value>=e.hp}applyPreDefend(e,I,L,N,S,n,i){L||e.addTag(d.STURDY,1)}};r(xh,"PreDefendFullHpEndureAbAttr");let rM=xh;const Zh=class Zh extends xA{apply(e,I,L,N,S){N.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:blockItemTheft",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(Zh,"BlockItemTheftAbAttr");let iM=Zh;const bh=class bh extends xA{constructor(){super(!1)}canApply(e,I,L,N){return N[0].value>1}apply(e,I,L,N,S){S[0].value+=.5}};r(bh,"StabBoostAbAttr");let CM=bh;const kh=class kh extends QO{constructor(e,I,L=!1){super(L),this.condition=e,this.damageMultiplier=I}canApplyPreDefend(e,I,L,N,S,n,i){return this.condition(e,N,S)}applyPreDefend(e,I,L,N,S,n,i){i[0].value=UE(i[0].value*this.damageMultiplier)}};r(kh,"ReceivedMoveDamageMultiplierAbAttr");let eO=kh;const Xh=class Xh extends QO{constructor(e){super(),this.damageMultiplier=e}applyPreDefend(e,I,L,N,S,n,i){const C=i[0];C.value=UE(C.value*this.damageMultiplier)}};r(Xh,"AlliedFieldDamageReductionAbAttr");let UM=Xh;const Qh=class Qh extends eO{constructor(e,I){super((L,N,S)=>N.getMoveType(S)===e,I,!1)}};r(Qh,"ReceivedTypeDamageMultiplierAbAttr");let JI=Qh;const Jh=class Jh extends QO{constructor(e,I){super(!0),this.immuneType=e,this.condition=I??null}canApplyPreDefend(e,I,L,N,S,n,i){return![AA.BOTH_SIDES,AA.ENEMY_SIDE,AA.USER_SIDE].includes(S.moveTarget)&&N!==e&&N.getMoveType(S)===this.immuneType}applyPreDefend(e,I,L,N,S,n,i){i[0].value=0}getImmuneType(){return this.immuneType}getCondition(){return this.condition}};r(Jh,"TypeImmunityAbAttr");let Xt=Jh;const $h=class $h extends Xt{constructor(e,I){super(e,I)}canApplyPreDefend(e,I,L,N,S,n,i){return S.category!==G.STATUS&&!S.hasAttr("NeutralDamageAgainstFlyingTypeMultiplierAttr")&&super.canApplyPreDefend(e,I,L,N,S,n,i)}applyPreDefend(e,I,L,N,S,n,i){super.applyPreDefend(e,I,L,N,S,n,i)}};r($h,"AttackTypeImmunityAbAttr");let oM=$h;const qh=class qh extends Xt{constructor(e){super(e)}canApplyPreDefend(e,I,L,N,S,n,i){return super.canApplyPreDefend(e,I,L,N,S,n,i)}applyPreDefend(e,I,L,N,S,n,i){if(super.applyPreDefend(e,I,L,N,S,n,i),!e.isFullHp()&&!L){const C=(I?e.getPassiveAbility():e.getAbility()).name;T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/4),_.t("abilityTriggers:typeImmunityHeal",{pokemonNameWithAffix:Q(e),abilityName:C}),!0),n.value=!0}}};r(qh,"TypeImmunityHealAbAttr");let DL=qh;const zh=class zh extends Xt{constructor(e,I,L,N){super(e,N),this.stat=I,this.stages=L}canApplyPreDefend(e,I,L,N,S,n,i){return super.canApplyPreDefend(e,I,L,N,S,n,i)}applyPreDefend(e,I,L,N,S,n,i){super.applyPreDefend(e,I,L,N,S,n,i),n.value=!0,L||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[this.stat],this.stages)}};r(zh,"TypeImmunityStatStageChangeAbAttr");let OL=zh;const jh=class jh extends Xt{constructor(e,I,L,N){super(e,N),this.tagType=I,this.turnCount=L}canApplyPreDefend(e,I,L,N,S,n,i){return super.canApplyPreDefend(e,I,L,N,S,n,i)}applyPreDefend(e,I,L,N,S,n,i){super.applyPreDefend(e,I,L,N,S,n,i),n.value=!0,L||e.addTag(this.tagType,this.turnCount,void 0,e.id)}};r(jh,"TypeImmunityAddBattlerTagAbAttr");let m0=jh;const Ad=class Ad extends Xt{constructor(e){super(null,e)}canApplyPreDefend(e,I,L,N,S,n,i){const C=i.length>0?i[0].value:e.getAttackTypeEffectiveness(N.getMoveType(S),N,void 0,void 0,S);return S.is("AttackMove")&&C<2}applyPreDefend(e,I,L,N,S,n,i){n.value=!0,i[0].value=0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:nonSuperEffectiveImmunity",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(Ad,"NonSuperEffectiveImmunityAbAttr");let MM=Ad;const Ed=class Ed extends QO{canApplyPreDefend(e,I,L,N,S,n,i){const C=i[0];return C instanceof VA&&!(S!=null&&S.hasAttr("FixedDamageAttr"))&&e.isFullHp()&&C.value>.5}applyPreDefend(e,I,L,N,S,n,i){const C=i[0];C.value=.5,e.turnData.moveEffectiveness=.5}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:fullHpResistType",{pokemonNameWithAffix:Q(e)})}};r(Ed,"FullHpResistTypeAbAttr");let DM=Ed;const ed=class ed extends xA{canApplyPostDefend(e,I,L,N,S,n,i){return!0}applyPostDefend(e,I,L,N,S,n,i){}};r(ed,"PostDefendAbAttr");let Qe=ed;const Rd=class Rd extends QO{canApplyPreDefend(e,I,L,N,S,n,i){return!(S.moveTarget===AA.USER||S.moveTarget===AA.NEAR_ALLY)&&S.getPriority(N)>0&&!S.isMultiTarget()}applyPreDefend(e,I,L,N,S,n,i){n.value=!0}};r(Rd,"FieldPriorityMoveImmunityAbAttr");let zN=Rd;const Od=class Od extends xA{canApplyPostStatStageChange(e,I,L,N,S,n){return!0}applyPostStatStageChange(e,I,L,N,S,n){}};r(Od,"PostStatStageChangeAbAttr");let lM=Od;const Id=class Id extends QO{constructor(e){super(!0),this.immuneCondition=e}canApplyPreDefend(e,I,L,N,S,n,i){return this.immuneCondition(e,N,S)}applyPreDefend(e,I,L,N,S,n,i){n.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:Q(e)})}};r(Id,"MoveImmunityAbAttr");let zI=Id;const td=class td extends QO{constructor(){super(!1)}canApplyPreDefend(e,I,L,N,S,n,i){const C=i[0];return S.category===G.STATUS&&C.value>=50}applyPreDefend(e,I,L,N,S,n,i){const C=i[0];C.value=50}};r(td,"WonderSkinAbAttr");let _M=td;const Ld=class Ld extends zI{constructor(e,I,L){super(e),this.stat=I,this.stages=L}canApplyPreDefend(e,I,L,N,S,n,i){return!L&&super.canApplyPreDefend(e,I,L,N,S,n,i)}applyPreDefend(e,I,L,N,S,n,i){super.applyPreDefend(e,I,L,N,S,n,i),T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[this.stat],this.stages)}};r(Ld,"MoveImmunityStatStageChangeAbAttr");let GM=Ld;const Nd=class Nd extends Qe{canApplyPostDefend(e,I,L,N,S,n,i){return S.hasAttr("HitHealAttr")}applyPostDefend(e,I,L,N,S,n,i){L||T.phaseManager.queueMessage(_.t("abilityTriggers:reverseDrain",{pokemonNameWithAffix:Q(N)}))}};r(Nd,"ReverseDrainAbAttr");let PM=Nd;const Sd=class Sd extends Qe{constructor(e,I,L,N=!0,S=!1){super(!0),this.condition=e,this.stat=I,this.stages=L,this.selfTarget=N,this.allOthers=S}canApplyPostDefend(e,I,L,N,S,n,i){return this.condition(e,N,S)}applyPostDefend(e,I,L,N,S,n,i){if(!L)if(this.allOthers){const C=e.getAlly(),o=SA(C)?e.getOpponents():e.getOpponents().concat([C]);for(const l of o)T.phaseManager.unshiftNew("StatStageChangePhase",l.getBattlerIndex(),!1,[this.stat],this.stages)}else T.phaseManager.unshiftNew("StatStageChangePhase",(this.selfTarget?e:N).getBattlerIndex(),this.selfTarget,[this.stat],this.stages)}};r(Sd,"PostDefendStatStageChangeAbAttr");let iO=Sd;const Td=class Td extends Qe{constructor(e,I,L,N,S=!0){super(!0),this.condition=e,this.hpGate=I,this.stats=L,this.stages=N,this.selfTarget=S}canApplyPostDefend(e,I,L,N,S,n,i){const C=Math.ceil(e.getMaxHp()*this.hpGate),o=e.turnData.attacksReceived[e.turnData.attacksReceived.length-1],l=(o==null?void 0:o.damage)||0;return this.condition(e,N,S)&&e.hp<=C&&e.hp+l>C}applyPostDefend(e,I,L,N,S,n,i){L||T.phaseManager.unshiftNew("StatStageChangePhase",(this.selfTarget?e:N).getBattlerIndex(),!0,this.stats,this.stages)}};r(Td,"PostDefendHpGatedStatStageChangeAbAttr");let jN=Td;const sd=class sd extends Qe{constructor(e,I){super(!0),this.condition=e,this.tagType=I}canApplyPostDefend(e,I,L,N,S,n,i){const C=T.arena.getTag(this.tagType);return this.condition(e,N,S)&&(!T.arena.getTag(this.tagType)||C.layers<C.maxLayers)}applyPostDefend(e,I,L,N,S,n,i){L||T.arena.addTag(this.tagType,0,void 0,e.id,e.isPlayer()?hA.ENEMY:hA.PLAYER)}};r(sd,"PostDefendApplyArenaTrapTagAbAttr");let HM=sd;const ad=class ad extends Qe{constructor(e,I){super(!0),this.condition=e,this.tagType=I}canApplyPostDefend(e,I,L,N,S,n,i){return this.condition(e,N,S)}applyPostDefend(e,I,L,N,S,n,i){!e.getTag(this.tagType)&&!L&&(e.addTag(this.tagType,void 0,void 0,e.id),T.phaseManager.queueMessage(_.t("abilityTriggers:windPowerCharged",{pokemonName:Q(e),moveName:S.name})))}};r(ad,"PostDefendApplyBattlerTagAbAttr");let $n=ad;const nd=class nd extends Qe{canApplyPostDefend(e,I,L,N,S,n,i){this.type=N.getMoveType(S);const C=e.getTypes(!0);return n<_E.NO_EFFECT&&(L||C.length!==1||C[0]!==this.type)}applyPostDefend(e,I,L,N,S,n,i){const C=N.getMoveType(S);e.summonData.types=[C]}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:postDefendTypeChange",{pokemonNameWithAffix:Q(e),abilityName:I,typeName:_.t(`pokemonInfo:Type.${t[this.type]}`)})}};r(nd,"PostDefendTypeChangeAbAttr");let uM=nd;const rd=class rd extends Qe{constructor(e){super(),this.terrainType=e}canApplyPostDefend(e,I,L,N,S,n,i){return n<_E.NO_EFFECT&&T.arena.canSetTerrain(this.terrainType)}applyPostDefend(e,I,L,N,S,n,i){L||T.arena.trySetTerrain(this.terrainType,!1,e)}};r(rd,"PostDefendTerrainChangeAbAttr");let cM=rd;const id=class id extends Qe{constructor(e,...I){super(!0),this.chance=e,this.effects=I}canApplyPostDefend(e,I,L,N,S,n,i){const C=this.effects.length===1?this.effects[0]:this.effects[e.randBattleSeedInt(this.effects.length)];return S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e})&&!N.status&&(this.chance===-1||e.randBattleSeedInt(100)<this.chance)&&N.canSetStatus(C,!0,!1,e)}applyPostDefend(e,I,L,N,S,n,i){const C=this.effects.length===1?this.effects[0]:this.effects[e.randBattleSeedInt(this.effects.length)];N.trySetStatus(C,!0,e)}};r(id,"PostDefendContactApplyStatusEffectAbAttr");let FL=id;const Cd=class Cd extends FL{constructor(){super(10,J.POISON,J.PARALYSIS,J.SLEEP)}canApplyPostDefend(e,I,L,N,S,n,i){return!(N.hasAbility(O.OVERCOAT)||N.isOfType(t.GRASS))&&super.canApplyPostDefend(e,I,L,N,S,n,i)}applyPostDefend(e,I,L,N,S,n,i){super.applyPostDefend(e,I,L,N,S,n,i)}};r(Cd,"EffectSporeAbAttr");let BM=Cd;const Ud=class Ud extends Qe{constructor(e,I,L){super(),this.tagType=I,this.chance=e,this.turnCount=L}canApplyPostDefend(e,I,L,N,S,n,i){return S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e})&&e.randBattleSeedInt(100)<this.chance&&N.canAddTag(this.tagType)}applyPostDefend(e,I,L,N,S,n,i){L||N.addTag(this.tagType,this.turnCount,S.id,N.id)}};r(Ud,"PostDefendContactApplyTagChanceAbAttr");let KM=Ud;const od=class od extends Qe{constructor(e,I){super(),this.stat=e,this.stages=I}applyPostDefend(e,I,L,N,S,n,i){L||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[this.stat],this.stages)}getCondition(){return e=>e.turnData.attacksReceived.length!==0&&e.turnData.attacksReceived[e.turnData.attacksReceived.length-1].critical}};r(od,"PostDefendCritStatStageChangeAbAttr");let fM=od;const Md=class Md extends Qe{constructor(e){super(),this.damageRatio=e}canApplyPostDefend(e,I,L,N,S,n,i){return!L&&S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e})&&!N.hasAbilityWithAttr("BlockNonDirectDamageAbAttr")}applyPostDefend(e,I,L,N,S,n,i){N.damageAndUpdate(UE(N.getMaxHp()*(1/this.damageRatio)),{result:_E.INDIRECT}),N.turnData.damageTaken+=UE(N.getMaxHp()*(1/this.damageRatio))}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:postDefendContactDamage",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(Md,"PostDefendContactDamageAbAttr");let qn=Md;const Dd=class Dd extends Qe{constructor(e){super(),this.turns=e}canApplyPostDefend(e,I,L,N,S,n,i){return S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e})&&!N.getTag(d.PERISH_SONG)}applyPostDefend(e,I,L,N,S,n,i){L||(N.addTag(d.PERISH_SONG,this.turns),e.addTag(d.PERISH_SONG,this.turns))}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:perishBody",{pokemonName:Q(e),abilityName:I})}};r(Dd,"PostDefendPerishSongAbAttr");let FM=Dd;const ld=class ld extends Qe{constructor(e,I){super(),this.weatherType=e,this.condition=I}canApplyPostDefend(e,I,L,N,S,n,i){var C;return!(this.condition&&!this.condition(e,N,S))&&!((C=T.arena.weather)!=null&&C.isImmutable())&&T.arena.canSetWeather(this.weatherType)}applyPostDefend(e,I,L,N,S,n,i){L||T.arena.trySetWeather(this.weatherType,e)}};r(ld,"PostDefendWeatherChangeAbAttr");let YM=ld;const _d=class _d extends Qe{canApplyPostDefend(e,I,L,N,S,n,i){return S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e})&&N.getAbility().isSwappable}applyPostDefend(e,I,L,N,S,n,i){if(!L){const C=N.getAbility();N.setTempAbility(e.getAbility()),e.setTempAbility(C)}}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:postDefendAbilitySwap",{pokemonNameWithAffix:Q(e)})}};r(_d,"PostDefendAbilitySwapAbAttr");let WM=_d;const Gd=class Gd extends Qe{constructor(e){super(),this.ability=e}canApplyPostDefend(e,I,L,N,S,n,i){return S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e})&&N.getAbility().isSuppressable&&!N.getAbility().hasAttr("PostDefendAbilityGiveAbAttr")}applyPostDefend(e,I,L,N,S,n,i){L||N.setTempAbility(fe[this.ability])}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:postDefendAbilityGive",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(Gd,"PostDefendAbilityGiveAbAttr");let zn=Gd;const Pd=class Pd extends Qe{constructor(e){super(),this.chance=e}canApplyPostDefend(e,I,L,N,S,n,i){return N.getTag(d.DISABLED)===null&&S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e})&&(this.chance===-1||e.randBattleSeedInt(100)<this.chance)}applyPostDefend(e,I,L,N,S,n,i){L||(this.attacker=N,this.move=S,this.attacker.addTag(d.DISABLED,4,0,e.id))}};r(Pd,"PostDefendMoveDisableAbAttr");let hM=Pd;const Hd=class Hd extends lM{constructor(e,I,L){super(!0),this.condition=e,this.statsToChange=I,this.stages=L}canApplyPostStatStageChange(e,I,L,N,S,n){return this.condition(e,L,N)&&!S}applyPostStatStageChange(e,I,L,N,S,n){I||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,this.statsToChange,this.stages)}};r(Hd,"PostStatStageChangeStatStageChangeAbAttr");let jn=Hd;const ud=class ud extends xA{canApplyPreAttack(e,I,L,N,S,n){return!0}applyPreAttack(e,I,L,N,S,n){}};r(ud,"PreAttackAbAttr");let Qt=ud;const cd=class cd extends xA{constructor(e){super(!1),this.chanceMultiplier=e}canApply(e,I,L,N){const S=[E.ORDER_UP,E.ELECTRO_SHOT];return!(N[0].value<=0||S.includes(N[1].id))}apply(e,I,L,N,S){S[0].value*=this.chanceMultiplier,S[0].value=Math.min(S[0].value,100)}};r(cd,"MoveEffectChanceMultiplierAbAttr");let Ar=cd;const Bd=class Bd extends QO{constructor(e=!1){super(e)}canApplyPreDefend(e,I,L,N,S,n,i){return i[0].value>0}applyPreDefend(e,I,L,N,S,n,i){i[0].value=0}};r(Bd,"IgnoreMoveEffectsAbAttr");let dM=Bd;const Kd=class Kd extends Qt{canApplyPreAttack(e,I,L,N,S,n){return!0}};r(Kd,"VariableMovePowerAbAttr");let Er=Kd;const fd=class fd extends xA{apply(e,I,L,N,S){N.value=!0}};r(fd,"FieldPreventExplosiveMovesAbAttr");let pM=fd;const Fd=class Fd extends xA{constructor(e,I,L=!1){super(!1),this.stat=e,this.multiplier=I,this.canStack=L}canApplyFieldStat(e,I,L,N,S,n,i,C){return this.canStack||!i.value&&this.stat===N&&n.getAbilityAttrs("FieldMultiplyStatAbAttr").every(o=>o.stat!==N)}applyFieldStat(e,I,L,N,S,n,i,C){S.value*=this.multiplier,i.value=!0}};r(Fd,"FieldMultiplyStatAbAttr");let lL=Fd;const Yd=class Yd extends Qt{constructor(e,I,L){super(!1),this.newType=e,this.powerMultiplier=I,this.condition=L}canApplyPreAttack(e,I,L,N,S,n){return(!this.condition||this.condition(e,N,S))&&!x6.has(S.id)&&(!e.isTerastallized||S.id!==E.TERA_BLAST&&(S.id!==E.TERA_STARSTORM||e.getTeraType()!==t.STELLAR||!e.hasSpecies(A.TERAPAGOS)))}applyPreAttack(e,I,L,N,S,n){n[0]&&n[0]instanceof VA&&(n[0].value=this.newType),n[1]&&n[1]instanceof VA&&(n[1].value*=this.powerMultiplier)}};r(Yd,"MoveTypeChangeAbAttr");let $I=Yd;const Wd=class Wd extends Qt{constructor(){super(!0)}canApplyPreAttack(e,I,L,N,S,n){if(!e.isTerastallized&&S.id!==E.STRUGGLE&&!S.findAttr(i=>i.is("RandomMovesetMoveAttr")||i.is("RandomMoveAttr")||i.is("NaturePowerAttr")||i.is("CopyMoveAttr"))){const i=e.getMoveType(S);if(e.getTypes().some(C=>C!==i))return this.moveType=i,!0}return!1}applyPreAttack(e,I,L,N,S,n){const i=e.getMoveType(S);L||(this.moveType=i,e.summonData.types=[i],e.updateInfo())}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:Q(e),moveType:_.t(`pokemonInfo:Type.${t[this.moveType]}`)})}};r(Wd,"PokemonTypeChangeAbAttr");let er=Wd;const hd=class hd extends Qt{constructor(e){super(!1),this.damageMultiplier=e}canApplyPreAttack(e,I,L,N,S,n){return S.canBeMultiStrikeEnhanced(e,!0)}applyPreAttack(e,I,L,N,S,n){const i=n[0],C=n[1];i!=null&&i.value&&(i.value+=1),C!=null&&C.value&&e.turnData.hitsLeft===1&&(C.value=this.damageMultiplier)}};r(hd,"AddSecondStrikeAbAttr");let gM=hd;const dd=class dd extends Qt{constructor(e,I){super(!1),this.damageMultiplier=e,this.condition=I}canApplyPreAttack(e,I,L,N,S,n){return this.condition(e,N,S)}applyPreAttack(e,I,L,N,S,n){const i=n[0];i.value=UE(i.value*this.damageMultiplier)}};r(dd,"DamageBoostAbAttr");let mM=dd;const pd=class pd extends Er{constructor(e,I,L=!1){super(L),this.condition=e,this.powerMultiplier=I}canApplyPreAttack(e,I,L,N,S,n){return this.condition(e,N,S)}applyPreAttack(e,I,L,N,S,n){n[0].value*=this.powerMultiplier}};r(pd,"MovePowerBoostAbAttr");let je=pd;const gd=class gd extends je{constructor(e,I){super((L,N,S)=>(L==null?void 0:L.getMoveType(S))===e,I||1.5,!1)}};r(gd,"MoveTypePowerBoostAbAttr");let VO=gd;const md=class md extends VO{constructor(e){super(e)}getCondition(){return e=>e.getHpRatio()<=.33}};r(md,"LowHpMoveTypePowerBoostAbAttr");let _L=md;const yd=class yd extends Er{constructor(e,I=!0){super(I),this.mult=e}canApplyPreAttack(e,I,L,N,S,n){return this.mult(e,N,S)!==1}applyPreAttack(e,I,L,N,S,n){const i=this.mult(e,N,S);n[0].value*=i}};r(yd,"VariableMovePowerBoostAbAttr");let yM=yd;const Vd=class Vd extends xA{constructor(e,I){super(!1),this.condition=e,this.powerMultiplier=I}canApplyPreAttack(e,I,L,N,S,n){return!0}applyPreAttack(e,I,L,N,S,n){this.condition(e,N,S)&&(n[0].value*=this.powerMultiplier)}};r(Vd,"FieldMovePowerBoostAbAttr");let Rr=Vd;const wd=class wd extends Rr{constructor(e,I){super((L,N,S)=>(L==null?void 0:L.getMoveType(S))===e,I||1.5)}};r(wd,"PreAttackFieldMoveTypePowerBoostAbAttr");let Or=wd;const vd=class vd extends Or{};r(vd,"FieldMoveTypePowerBoostAbAttr");let GL=vd;const xd=class xd extends Or{};r(xd,"UserFieldMoveTypePowerBoostAbAttr");let VM=xd;const Zd=class Zd extends Rr{constructor(e,I){super((L,N,S)=>e.includes(S.category),I)}};r(Zd,"AllyMoveCategoryPowerBoostAbAttr");let Ir=Zd;const bd=class bd extends xA{constructor(e,I,L){super(!1),this.stat=e,this.multiplier=I,this.condition=L??null}canApplyStatStage(e,I,L,N,S,n){const i=n[0];return N===this.stat&&(!this.condition||this.condition(e,null,i))}applyStatStage(e,I,L,N,S,n){S.value*=this.multiplier}};r(bd,"StatMultiplierAbAttr");let ee=bd;const kd=class kd extends xA{constructor(e=(L,N,S)=>S.category!==G.STATUS,I=!0){super(I),this.attackCondition=e}canApplyPostAttack(e,I,L,N,S,n,i){return this.attackCondition(e,N,S)}applyPostAttack(e,I,L,N,S,n,i){}};r(kd,"PostAttackAbAttr");let RN=kd;const Xd=class Xd extends xA{constructor(e,I,L=!0){super(!1),this.stat=e,this.multiplier=I,this.ignorable=L}applyAllyStat(e,I,L,N,S,n,i,C){S.value*=this.multiplier}canApplyAllyStat(e,I,L,N,S,n,i,C){return N===this.stat&&!(i&&this.ignorable)}};r(Xd,"AllyStatMultiplierAbAttr");let AS=Xd;const Qd=class Qd extends xA{canApplyExecutedMove(e,I){return!0}applyExecutedMove(e,I){}};r(Qd,"ExecutedMoveAbAttr");let wM=Qd;const Jd=class Jd extends wM{constructor(e=!1){super(e)}canApplyExecutedMove(e,I){return I||!e.getTag(d.GORILLA_TACTICS)}applyExecutedMove(e,I){I||e.addTag(d.GORILLA_TACTICS)}};r(Jd,"GorillaTacticsAbAttr");let vM=Jd;const $d=class $d extends RN{constructor(e){super(),this.stealCondition=e??null}canApplyPostAttack(e,I,L,N,S,n,i){if(super.canApplyPostAttack(e,I,L,N,S,n,i)&&!L&&n<_E.NO_EFFECT&&(!this.stealCondition||this.stealCondition(e,N,S))){const C=this.getTargetHeldItems(N).filter(o=>o.isTransferable);if(C.length&&(this.stolenItem=C[e.randBattleSeedInt(C.length)],T.canTransferHeldItemModifier(this.stolenItem,e)))return!0}return this.stolenItem=void 0,!1}applyPostAttack(e,I,L,N,S,n,i){const C=this.getTargetHeldItems(N).filter(o=>o.isTransferable);this.stolenItem||(this.stolenItem=C[e.randBattleSeedInt(C.length)]),T.tryTransferHeldItemModifier(this.stolenItem,e,!1)&&T.phaseManager.queueMessage(_.t("abilityTriggers:postAttackStealHeldItem",{pokemonNameWithAffix:Q(e),defenderName:N.name,stolenItemType:this.stolenItem.type.name})),this.stolenItem=void 0}getTargetHeldItems(e){return T.findModifiers(I=>I instanceof GE&&I.pokemonId===e.id,e.isPlayer())}};r($d,"PostAttackStealHeldItemAbAttr");let xM=$d;const qd=class qd extends RN{constructor(e,I,...L){super(),this.contactRequired=e,this.chance=I,this.effects=L}canApplyPostAttack(e,I,L,N,S,n,i){if(super.canApplyPostAttack(e,I,L,N,S,n,i)&&(L||!N.hasAbilityWithAttr("IgnoreMoveEffectsAbAttr")&&e!==N&&(!this.contactRequired||S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e}))&&e.randBattleSeedInt(100)<this.chance&&!e.status)){const C=this.effects.length===1?this.effects[0]:this.effects[e.randBattleSeedInt(this.effects.length)];return L||N.canSetStatus(C,!0,!1,e)}return!1}applyPostAttack(e,I,L,N,S,n,i){const C=this.effects.length===1?this.effects[0]:this.effects[e.randBattleSeedInt(this.effects.length)];N.trySetStatus(C,!0,e)}};r(qd,"PostAttackApplyStatusEffectAbAttr");let tr=qd;const zd=class zd extends tr{constructor(e,...I){super(!0,e,...I)}};r(zd,"PostAttackContactApplyStatusEffectAbAttr");let ZM=zd;const jd=class jd extends RN{constructor(e,I,...L){super(void 0,!1),this.contactRequired=e,this.chance=I,this.effects=L}canApplyPostAttack(e,I,L,N,S,n,i){return super.canApplyPostAttack(e,I,L,N,S,n,i)&&!N.hasAbilityWithAttr("IgnoreMoveEffectsAbAttr")&&e!==N&&(!this.contactRequired||S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e}))&&e.randBattleSeedInt(100)<this.chance(N,e,S)&&!e.status}applyPostAttack(e,I,L,N,S,n,i){if(!L){const C=this.effects.length===1?this.effects[0]:this.effects[e.randBattleSeedInt(this.effects.length)];N.addTag(C)}}};r(jd,"PostAttackApplyBattlerTagAbAttr");let bM=jd;const A5=class A5 extends Qe{constructor(e){super(),this.condition=e}canApplyPostDefend(e,I,L,N,S,n,i){if(!L&&n<_E.NO_EFFECT&&(!this.condition||this.condition(e,N,S))){const C=this.getTargetHeldItems(N).filter(o=>o.isTransferable);if(C.length&&(this.stolenItem=C[e.randBattleSeedInt(C.length)],T.canTransferHeldItemModifier(this.stolenItem,e)))return!0}return!1}applyPostDefend(e,I,L,N,S,n,i){const C=this.getTargetHeldItems(N).filter(o=>o.isTransferable);this.stolenItem||(this.stolenItem=C[e.randBattleSeedInt(C.length)]),T.tryTransferHeldItemModifier(this.stolenItem,e,!1)&&T.phaseManager.queueMessage(_.t("abilityTriggers:postDefendStealHeldItem",{pokemonNameWithAffix:Q(e),attackerName:N.name,stolenItemType:this.stolenItem.type.name})),this.stolenItem=void 0}getTargetHeldItems(e){return T.findModifiers(I=>I instanceof GE&&I.pokemonId===e.id,e.isPlayer())}};r(A5,"PostDefendStealHeldItemAbAttr");let kM=A5;const E5=class E5 extends xA{canApplyPostSetStatus(e,I=null,L,N,S,n){return!0}applyPostSetStatus(e,I=null,L,N,S,n){}};r(E5,"PostSetStatusAbAttr");let XM=E5;const e5=class e5 extends XM{canApplyPostSetStatus(e,I,L,N,S,n){const i=new Set([J.BURN,J.PARALYSIS,J.POISON,J.TOXIC]);return(I??!1)&&i.has(N)}applyPostSetStatus(e,I=null,L,N,S,n){!S&&I&&I.trySetStatus(N,!0,e)}};r(e5,"SynchronizeStatusAbAttr");let QM=e5;const R5=class R5 extends xA{canApplyPostVictory(e,I,L,N){return!0}applyPostVictory(e,I,L,N){}};r(R5,"PostVictoryAbAttr");let Lr=R5;const O5=class O5 extends Lr{constructor(e,I){super(),this.stat=e,this.stages=I}applyPostVictory(e,I,L,N){const S=typeof this.stat=="function"?this.stat(e):this.stat;L||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[S],this.stages)}};r(O5,"PostVictoryStatStageChangeAbAttr");let Mt=O5;const I5=class I5 extends Lr{constructor(e){super(!0),this.formFunc=e}canApplyPostVictory(e,I,L,N){return this.formFunc(e)!==e.formIndex}applyPostVictory(e,I,L,N){L||T.triggerPokemonFormChange(e,DE,!1)}};r(I5,"PostVictoryFormChangeAbAttr");let JM=I5;const t5=class t5 extends xA{canApplyPostKnockOut(e,I,L,N,S){return!0}applyPostKnockOut(e,I,L,N,S){}};r(t5,"PostKnockOutAbAttr");let Nr=t5;const L5=class L5 extends Nr{constructor(e,I){super(),this.stat=e,this.stages=I}applyPostKnockOut(e,I,L,N,S){const n=typeof this.stat=="function"?this.stat(e):this.stat;L||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[n],this.stages)}};r(L5,"PostKnockOutStatStageChangeAbAttr");let $M=L5;const N5=class N5 extends Nr{canApplyPostKnockOut(e,I,L,N,S){return e.isPlayer()===N.isPlayer()&&N.getAbility().isCopiable}applyPostKnockOut(e,I,L,N,S){L||(e.setTempAbility(N.getAbility()),T.phaseManager.queueMessage(_.t("abilityTriggers:copyFaintedAllyAbility",{pokemonNameWithAffix:Q(N),abilityName:fe[N.getAbility().id].name})))}};r(N5,"CopyFaintedAllyAbilityAbAttr");let Sr=N5;const S5=class S5 extends xA{constructor(e){super(!1),this.stats=e??MI}canApply(e,I,L,N){return this.stats.includes(N[0])}apply(e,I,L,N,S){S[1].value=!0}};r(S5,"IgnoreOpponentStatStagesAbAttr");let ES=S5;const T5=class T5 extends xA{constructor(){super(!1)}apply(e,I,L,N,S){N.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:intimidateImmunity",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(T5,"IntimidateImmunityAbAttr");let PL=T5;const s5=class s5 extends xA{constructor(e,I,L){super(!0),this.stats=e,this.stages=I,this.overwrites=!!L}apply(e,I,L,N,S){L||T.phaseManager.pushNew("StatStageChangePhase",e.getBattlerIndex(),!1,this.stats,this.stages),N.value=this.overwrites}};r(s5,"PostIntimidateStatStageChangeAbAttr");let Tr=s5;const a5=class a5 extends xA{constructor(e=!0,I=!0){super(e),this.activateOnGain=I}shouldActivateOnGain(){return this.activateOnGain}canApplyPostSummon(e,I,L,N){return!0}applyPostSummon(e,I,L,N){}};r(a5,"PostSummonAbAttr");let Ye=a5;const n5=class n5 extends Ye{};r(n5,"PostSummonRemoveEffectAbAttr");let sr=n5;const r5=class r5 extends Ye{constructor(e){super(!0),this.arenaTags=e}canApplyPostSummon(e,I,L,N){return T.arena.tags.some(S=>this.arenaTags.includes(S.tagType))}applyPostSummon(e,I,L,N){if(!L)for(const S of this.arenaTags)T.arena.removeTag(S)}};r(r5,"PostSummonRemoveArenaTagAbAttr");let qM=r5;const i5=class i5 extends Ye{constructor(e,I,L,N,S){super(e),this.tagType=I,this.turnCount=L,this.side=N,this.quiet=S}applyPostSummon(e,I,L,N){this.sourceId=e.id,L||T.arena.addTag(this.tagType,this.turnCount,void 0,this.sourceId,this.side,this.quiet)}};r(i5,"PostSummonAddArenaTagAbAttr");let zM=i5;const C5=class C5 extends Ye{constructor(e){super(!0),this.messageFunc=e}applyPostSummon(e,I,L,N){L||T.phaseManager.queueMessage(this.messageFunc(e))}};r(C5,"PostSummonMessageAbAttr");let BR=C5;const U5=class U5 extends Ye{constructor(e){super(!0),this.message=e}applyPostSummon(e,I,L,N){L||T.phaseManager.queueMessage(this.message)}};r(U5,"PostSummonUnnamedMessageAbAttr");let ar=U5;const o5=class o5 extends Ye{constructor(e,I,L){super(L),this.tagType=e,this.turnCount=I}canApplyPostSummon(e,I,L,N){return e.canAddTag(this.tagType)}applyPostSummon(e,I,L,N){L||e.addTag(this.tagType,this.turnCount)}};r(o5,"PostSummonAddBattlerTagAbAttr");let uI=o5;const M5=class M5 extends sr{constructor(...e){super(),this.immuneTags=e}canApplyPostSummon(e,I,L,N){return this.immuneTags.some(S=>!!e.getTag(S))}applyPostSummon(e,I,L,N){this.immuneTags.forEach(S=>e.removeTag(S))}};r(M5,"PostSummonRemoveBattlerTagAbAttr");let nr=M5;const D5=class D5 extends Ye{constructor(e,I,L,N){super(!0),this.stats=e,this.stages=I,this.selfTarget=!!L,this.intimidate=!!N}applyPostSummon(e,I,L,N){if(!L)if(this.selfTarget)T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,this.stats,this.stages);else for(const S of e.getOpponents()){const n=new nE(!1);this.intimidate&&(SE("IntimidateImmunityAbAttr",S,n,L),SE("PostIntimidateStatStageChangeAbAttr",S,n,L),S.getTag(d.SUBSTITUTE)&&(n.value=!0)),n.value||T.phaseManager.unshiftNew("StatStageChangePhase",S.getBattlerIndex(),!1,this.stats,this.stages)}}};r(D5,"PostSummonStatStageChangeAbAttr");let Wt=D5;const l5=class l5 extends Ye{constructor(e,I=!1){super(),this.healRatio=e||4,this.showAnim=I}canApplyPostSummon(e,I,L,N){var S;return((S=e.getAlly())==null?void 0:S.isActive(!0))??!1}applyPostSummon(e,I,L,N){const S=e.getAlly();!L&&!SA(S)&&T.phaseManager.unshiftNew("PokemonHealPhase",S.getBattlerIndex(),UE(e.getMaxHp()/this.healRatio),_.t("abilityTriggers:postSummonAllyHeal",{pokemonNameWithAffix:Q(S),pokemonName:e.name}),!0,!this.showAnim)}};r(l5,"PostSummonAllyHealAbAttr");let jM=l5;const _5=class _5 extends Ye{canApplyPostSummon(e,I,L,N){var S;return((S=e.getAlly())==null?void 0:S.isActive(!0))??!1}applyPostSummon(e,I,L,N){const S=e.getAlly();if(!L&&!SA(S)){for(const n of MI)S.setStatStage(n,0);T.phaseManager.queueMessage(_.t("abilityTriggers:postSummonClearAllyStats",{pokemonNameWithAffix:Q(S)}))}}};r(_5,"PostSummonClearAllyStatStagesAbAttr");let AD=_5;const G5=class G5 extends Ye{canApplyPostSummon(e,I,L,N){this.enemyDef=0,this.enemySpDef=0,this.enemyCountTally=0;for(const S of e.getOpponents())this.enemyCountTally++,this.enemyDef+=S.getEffectiveStat(c.DEF),this.enemySpDef+=S.getEffectiveStat(c.SPDEF);return this.enemyDef=Math.round(this.enemyDef/this.enemyCountTally),this.enemySpDef=Math.round(this.enemySpDef/this.enemyCountTally),this.enemyDef>0&&this.enemySpDef>0}applyPostSummon(e,I,L,N){this.enemyDef<this.enemySpDef?this.stats=[c.ATK]:this.stats=[c.SPATK],L||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!1,this.stats,1)}};r(G5,"DownloadAbAttr");let ED=G5;const P5=class P5 extends Ye{constructor(e){super(),this.weatherType=e}canApplyPostSummon(e,I,L,N){var n;return(this.weatherType===Z.HEAVY_RAIN||this.weatherType===Z.HARSH_SUN||this.weatherType===Z.STRONG_WINDS||!((n=T.arena.weather)!=null&&n.isImmutable()))&&T.arena.canSetWeather(this.weatherType)}applyPostSummon(e,I,L,N){L||T.arena.trySetWeather(this.weatherType,e)}};r(P5,"PostSummonWeatherChangeAbAttr");let EI=P5;const H5=class H5 extends Ye{constructor(e){super(),this.terrainType=e}canApplyPostSummon(e,I,L,N){return T.arena.canSetTerrain(this.terrainType)}applyPostSummon(e,I,L,N){L||T.arena.trySetTerrain(this.terrainType,!1,e)}};r(H5,"PostSummonTerrainChangeAbAttr");let ut=H5;const u5=class u5 extends sr{constructor(...e){super(),this.immuneEffects=e}canApplyPostSummon(e,I,L,N){var n;const S=(n=e.status)==null?void 0:n.effect;return!SA(S)&&(this.immuneEffects.length<1||this.immuneEffects.includes(S))}applyPostSummon(e,I,L,N){var n;const S=(n=e.status)==null?void 0:n.effect;SA(S)||(this.statusHealed=S,e.resetStatus(!1),e.updateInfo())}getTriggerMessage(e,I,...L){return this.statusHealed?$t(this.statusHealed,Q(e)):null}};r(u5,"PostSummonHealStatusAbAttr");let eI=u5;const c5=class c5 extends Ye{constructor(e){super(!0),this.formFunc=e}canApplyPostSummon(e,I,L,N){return this.formFunc(e)!==e.formIndex}applyPostSummon(e,I,L,N){L||T.triggerPokemonFormChange(e,DE,!1)}};r(c5,"PostSummonFormChangeAbAttr");let qI=c5;const B5=class B5 extends Ye{canApplyPostSummon(e,I,L,N){const S=e.getOpponents();if(!S.length)return!1;let n;return S.length>1?T.executeWithSeedOffset(()=>n=He(S),T.currentBattle.waveIndex):n=S[0],!n.getAbility().isCopiable&&!(e.hasAbility(O.TRACE)&&n.getAbility().id===O.WONDER_GUARD)?!1:(this.target=n,this.targetAbilityName=fe[n.getAbility().id].name,!0)}applyPostSummon(e,I,L,N){L||(e.setTempAbility(this.target.getAbility()),K3(this.target),e.updateInfo())}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:trace",{pokemonName:Q(e),targetName:Q(this.target),abilityName:this.targetAbilityName})}};r(B5,"PostSummonCopyAbilityAbAttr");let eD=B5;const K5=class K5 extends Ye{constructor(...e){super(!1),this.statusEffect=e}canApplyPostSummon(e,I,L,N){return(e.isPlayer()?T.getPlayerField():T.getEnemyField()).filter(n=>n.isAllowedInBattle()).length>0}applyPostSummon(e,I,L,N){const n=(e.isPlayer()?T.getPlayerField():T.getEnemyField()).filter(i=>i.isAllowedInBattle());if(!L)for(const i of n)i.status&&this.statusEffect.includes(i.status.effect)&&(T.phaseManager.queueMessage($t(i.status.effect,Q(i))),i.resetStatus(!1),i.updateInfo())}};r(K5,"PostSummonUserFieldRemoveStatusEffectAbAttr");let rr=K5;const f5=class f5 extends Ye{canApplyPostSummon(e,I,L,N){if(!T.currentBattle.double)return!1;const S=e.getAlly();return!(SA(S)||S.getStatStages().every(n=>n===0))}applyPostSummon(e,I,L,N){const S=e.getAlly();if(!L&&!SA(S)){for(const n of MI)e.setStatStage(n,S.getStatStage(n));e.updateInfo()}}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:costar",{pokemonName:Q(e),allyName:Q(e.getAlly())})}};r(f5,"PostSummonCopyAllyStatsAbAttr");let RD=f5;const F5=class F5 extends Ye{constructor(){super(!0,!1)}getTarget(e){let I=e[0];return e.length>1?T.executeWithSeedOffset(()=>{if(e[0].fusionSpecies){I=e[1];return}if(e[1].fusionSpecies){I=e[0];return}I=He(e)},T.currentBattle.waveIndex):I=e[0],I=I,I}canApplyPostSummon(e,I,L,N){const S=e.getOpponents();return this.getTarget(S).summonData.illusion?!1:L||!S.length?L:!(this.getTarget(S).fusionSpecies||e.fusionSpecies)}applyPostSummon(e,I,L,N){const S=this.getTarget(e.getOpponents());T.phaseManager.unshiftNew("PokemonTransformPhase",e.getBattlerIndex(),S.getBattlerIndex(),!0)}};r(F5,"PostSummonTransformAbAttr");let OD=F5;const Y5=class Y5 extends Ye{canApplyPostSummon(e,I,L,N){return f3().length>0}applyPostSummon(e,I,L,N){L||T.arena.triggerWeatherBasedFormChangesToNormal()}};r(Y5,"PostSummonWeatherSuppressedFormChangeAbAttr");let ir=Y5;const W5=class W5 extends Ye{constructor(e){super(!0),this.ability=e}canApplyPostSummon(e,I,L,N){const S=e.species.speciesId===A.CASTFORM&&this.ability===O.FORECAST,n=e.species.speciesId===A.CHERRIM&&this.ability===O.FLOWER_GIFT;return S||n}applyPostSummon(e,I,L,N){L||(T.triggerPokemonFormChange(e,CO),T.triggerPokemonFormChange(e,dI))}};r(W5,"PostSummonFormChangeByWeatherAbAttr");let Cr=W5;const h5=class h5 extends xA{constructor(){super(!0)}canApply(e,I,L,N){var n;const S=e.getAlly();return((n=T.currentBattle)==null?void 0:n.double)&&!SA(S)&&S.species.speciesId===A.DONDOZO&&!(S.isFainted()||S.getTag(d.COMMANDED))}apply(e,I,L,N,S){var n;L||(e.lapseTags(BA.MOVE_EFFECT),T.triggerPokemonBattleAnim(e,Yt.COMMANDER_APPLY),(n=e.getAlly())==null||n.addTag(d.COMMANDED,0,E.NONE,e.id),T.phaseManager.tryRemovePhase(i=>i.is("MovePhase")&&i.pokemon===e))}};r(h5,"CommanderAbAttr");let ID=h5;const d5=class d5 extends xA{constructor(e=!0){super(e)}canApplyPreSwitchOut(e,I,L,N){return!0}applyPreSwitchOut(e,I,L,N){}};r(d5,"PreSwitchOutAbAttr");let ON=d5;const p5=class p5 extends ON{constructor(){super(!1)}canApplyPreSwitchOut(e,I,L,N){return!SA(e.status)}applyPreSwitchOut(e,I,L,N){L||(e.resetStatus(),e.updateInfo())}};r(p5,"PreSwitchOutResetStatusAbAttr");let tD=p5;const g5=class g5 extends ON{applyPreSwitchOut(e,I,L,N){var i;const S=(i=T.arena.weather)==null?void 0:i.weatherType;let n=!1;switch(S){case Z.HARSH_SUN:e.hasAbility(O.DESOLATE_LAND)&&T.getField(!0).filter(C=>C!==e).filter(C=>C.hasAbility(O.DESOLATE_LAND)).length===0&&(n=!0);break;case Z.HEAVY_RAIN:e.hasAbility(O.PRIMORDIAL_SEA)&&T.getField(!0).filter(C=>C!==e).filter(C=>C.hasAbility(O.PRIMORDIAL_SEA)).length===0&&(n=!0);break;case Z.STRONG_WINDS:e.hasAbility(O.DELTA_STREAM)&&T.getField(!0).filter(C=>C!==e).filter(C=>C.hasAbility(O.DELTA_STREAM)).length===0&&(n=!0);break}return L?n:n?(T.arena.trySetWeather(Z.NONE),!0):!1}};r(g5,"PreSwitchOutClearWeatherAbAttr");let y0=g5;const m5=class m5 extends ON{canApplyPreSwitchOut(e,I,L,N){return!e.isFullHp()}applyPreSwitchOut(e,I,L,N){if(!L){const S=UE(e.getMaxHp()*.33);e.heal(S),e.updateInfo()}}};r(m5,"PreSwitchOutHealAbAttr");let LD=m5;const y5=class y5 extends ON{constructor(e){super(),this.formFunc=e}canApplyPreSwitchOut(e,I,L,N){return this.formFunc(e)!==e.formIndex}applyPreSwitchOut(e,I,L,N){L||T.triggerPokemonFormChange(e,DE,!1)}};r(y5,"PreSwitchOutFormChangeAbAttr");let ND=y5;const V5=class V5 extends xA{canApplyPreLeaveField(e,I,L,N){return!0}applyPreLeaveField(e,I,L,N){}};r(V5,"PreLeaveFieldAbAttr");let Ur=V5;const w5=class w5 extends Ur{canApplyPreLeaveField(e,I,L,N){var n;switch((n=T.arena.weather)==null?void 0:n.weatherType){case Z.HARSH_SUN:if(e.hasAbility(O.DESOLATE_LAND)&&T.getField(!0).filter(i=>i!==e).filter(i=>i.hasAbility(O.DESOLATE_LAND)).length===0)return!0;break;case Z.HEAVY_RAIN:if(e.hasAbility(O.PRIMORDIAL_SEA)&&T.getField(!0).filter(i=>i!==e).filter(i=>i.hasAbility(O.PRIMORDIAL_SEA)).length===0)return!0;break;case Z.STRONG_WINDS:if(e.hasAbility(O.DELTA_STREAM)&&T.getField(!0).filter(i=>i!==e).filter(i=>i.hasAbility(O.DELTA_STREAM)).length===0)return!0;break}return!1}applyPreLeaveField(e,I,L,N){L||T.arena.trySetWeather(Z.NONE)}};r(w5,"PreLeaveFieldClearWeatherAbAttr");let eS=w5;const v5=class v5 extends Ur{constructor(){super(!1)}canApplyPreLeaveField(e,I,L,N){return!!T.arena.getTag(CA.NEUTRALIZING_GAS)}applyPreLeaveField(e,I,L,N){T.arena.getTag(CA.NEUTRALIZING_GAS).onSourceLeave(T.arena)}};r(v5,"PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr");let SD=v5;const x5=class x5 extends xA{canApplyPreStatStageChange(e,I,L,N,S,n){return!0}applyPreStatStageChange(e,I,L,N,S,n){}};r(x5,"PreStatStageChangeAbAttr");let qS=x5;const Z5=class Z5 extends qS{applyPreStatStageChange(e,I,L,N,S,n){const i=n[0],C=n[1];this.reflectedStat=N,L||T.phaseManager.unshiftNew("StatStageChangePhase",i.getBattlerIndex(),!1,[N],C,!0,!1,!0,null,!0),S.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:protectStat",{pokemonNameWithAffix:Q(e),abilityName:I,statName:this.reflectedStat?_.t(aR(this.reflectedStat)):_.t("battle:stats")})}};r(Z5,"ReflectStatStageChangeAbAttr");let TD=Z5;const b5=class b5 extends qS{constructor(e){super(),this.protectedStat=e}canApplyPreStatStageChange(e,I,L,N,S,n){return SA(this.protectedStat)||N===this.protectedStat}applyPreStatStageChange(e,I,L,N,S,n){S.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:protectStat",{pokemonNameWithAffix:Q(e),abilityName:I,statName:this.protectedStat?_.t(aR(this.protectedStat)):_.t("battle:stats")})}};r(b5,"ProtectStatAbAttr");let RI=b5;const k5=class k5 extends RN{constructor(...e){super((I,L,N)=>!0),this.effects=e}canApplyPostAttack(e,I,L,N,S,n,i){return super.canApplyPostAttack(e,I,L,N,S,n,i)&&this.effects.indexOf(i[0])>-1&&!N.isFainted()&&N.canAddTag(d.CONFUSED)}applyPostAttack(e,I,L,N,S,n,i){L||N.addTag(d.CONFUSED,e.randBattleSeedIntRange(2,5),S.id,N.id)}};r(k5,"ConfusionOnStatusEffectAbAttr");let sD=k5;const X5=class X5 extends xA{canApplyPreSetStatus(e,I,L,N,S,n){return!0}applyPreSetStatus(e,I,L,N,S,n){}};r(X5,"PreSetStatusAbAttr");let aD=X5;const Q5=class Q5 extends aD{constructor(...e){super(),this.immuneEffects=e}canApplyPreSetStatus(e,I,L,N,S,n){return N!==J.FAINT&&this.immuneEffects.length<1||this.immuneEffects.includes(N)}applyPreSetStatus(e,I,L,N,S,n){S.value=!0,this.lastEffect=N}getTriggerMessage(e,I,...L){return this.immuneEffects.length?_.t("abilityTriggers:statusEffectImmunityWithName",{pokemonNameWithAffix:Q(e),abilityName:I,statusEffectName:I3(this.lastEffect)}):_.t("abilityTriggers:statusEffectImmunity",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(Q5,"PreSetStatusEffectImmunityAbAttr");let or=Q5;const J5=class J5 extends or{};r(J5,"StatusEffectImmunityAbAttr");let AO=J5;const $5=class $5 extends or{};r($5,"UserFieldStatusEffectImmunityAbAttr");let zS=$5;const q5=class q5 extends zS{canApplyPreSetStatus(e,I,L,N,S,n){return(!S.value&&N!==J.FAINT&&this.immuneEffects.length<1||this.immuneEffects.includes(N))&&this.condition(n[0],n[1])}constructor(e,...I){super(...I),this.condition=e}};r(q5,"ConditionalUserFieldStatusEffectImmunityAbAttr");let nD=q5;const z5=class z5 extends qS{constructor(e,I){super(),this.condition=e}canApplyPreStatStageChange(e,I,L,N,S,n){const i=n[0];return i?!S.value&&(SA(this.protectedStat)||N===this.protectedStat)&&this.condition(i):!1}applyPreStatStageChange(e,I,L,N,S,n){S.value=!0}};r(z5,"ConditionalUserFieldProtectStatAbAttr");let rD=z5;const j5=class j5 extends xA{canApplyPreApplyBattlerTag(e,I,L,N,S,n){return!0}applyPreApplyBattlerTag(e,I,L,N,S,n){}};r(j5,"PreApplyBattlerTagAbAttr");let iD=j5;const Ap=class Ap extends iD{constructor(e){super(!0),this.immuneTagTypes=ue(e)}canApplyPreApplyBattlerTag(e,I,L,N,S,n){return this.battlerTag=N,!S.value&&this.immuneTagTypes.includes(N.tagType)}applyPreApplyBattlerTag(e,I,L,N,S,n){S.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:battlerTagImmunity",{pokemonNameWithAffix:Q(e),abilityName:I,battlerTagName:this.battlerTag.getDescriptor()})}};r(Ap,"PreApplyBattlerTagImmunityAbAttr");let Mr=Ap;const Ep=class Ep extends Mr{};r(Ep,"BattlerTagImmunityAbAttr");let cI=Ep;const ep=class ep extends Mr{};r(ep,"UserFieldBattlerTagImmunityAbAttr");let jS=ep;const Rp=class Rp extends jS{canApplyPreApplyBattlerTag(e,I,L,N,S,n){return super.canApplyPreApplyBattlerTag(e,I,L,N,S,n)&&this.condition(n[0])}constructor(e,I){super(I),this.condition=e}};r(Rp,"ConditionalUserFieldBattlerTagImmunityAbAttr");let CD=Rp;const Op=class Op extends xA{constructor(){super(!1)}apply(e,I,L,N,S){S[0].value=!1}};r(Op,"BlockCritAbAttr");let Dr=Op;const Ip=class Ip extends xA{constructor(){super(!1)}apply(e,I,L,N,S){S[0].value+=1}};r(Ip,"BonusCritAbAttr");let UD=Ip;const tp=class tp extends xA{constructor(e){super(!1),this.multAmount=e}canApply(e,I,L,N){return N[0].value>1}apply(e,I,L,N,S){const n=S[0];n.value*=this.multAmount}};r(tp,"MultCritAbAttr");let oD=tp;const Lp=class Lp extends xA{constructor(e,I){super(!1),this.condition=e}canApply(e,I,L,N){const S=N[1],n=N[2];return this.condition(e,S,n)}apply(e,I,L,N,S){S[0].value=!0}};r(Lp,"ConditionalCritAbAttr");let MD=Lp;const Np=class Np extends xA{constructor(){super(!1)}apply(e,I,L,N,S){N.value=!0}};r(Np,"BlockNonDirectDamageAbAttr");let DD=Np;const Sp=class Sp extends xA{constructor(...e){super(!1),this.effects=e}canApply(e,I,L,N){var S;return!!((S=e.status)!=null&&S.effect)&&this.effects.includes(e.status.effect)}apply(e,I,L,N,S){N.value=!0}};r(Sp,"BlockStatusDamageAbAttr");let lD=Sp;const Tp=class Tp extends xA{apply(e,I,L,N,S){N.value=!0}};r(Tp,"BlockOneHitKOAbAttr");let _D=Tp;const sp=class sp extends xA{constructor(e,I){super(!1),this.moveFunc=e,this.changeAmount=I}canApply(e,I,L,N){return this.moveFunc(e,N[0])}apply(e,I,L,N,S){S[1].value+=this.changeAmount}};r(sp,"ChangeMovePriorityAbAttr");let ct=sp;const ap=class ap extends xA{};r(ap,"IgnoreContactAbAttr");let GD=ap;const np=class np extends xA{canApplyPreWeatherEffect(e,I,L,N,S,n){return!0}applyPreWeatherEffect(e,I,L,N,S,n){}};r(np,"PreWeatherEffectAbAttr");let lr=np;const rp=class rp extends lr{};r(rp,"PreWeatherDamageAbAttr");let PD=rp;const ip=class ip extends PD{constructor(...e){super(!1),this.weatherTypes=e}canApplyPreWeatherEffect(e,I,L,N,S,n){return!this.weatherTypes.length||this.weatherTypes.indexOf(N==null?void 0:N.weatherType)>-1}applyPreWeatherEffect(e,I,L,N,S,n){S.value=!0}};r(ip,"BlockWeatherDamageAttr");let Dt=ip;const Cp=class Cp extends lr{constructor(e){super(!0),this.affectsImmutable=!!e}canApplyPreWeatherEffect(e,I,L,N,S,n){return this.affectsImmutable||N.isImmutable()}applyPreWeatherEffect(e,I,L,N,S,n){S.value=!0}};r(Cp,"SuppressWeatherEffectAbAttr");let _r=Cp;function Li(){return R=>{const e=R.turnData.attacksReceived[0];if(!e)return!0;const I=R.getOpponents().find(N=>N.id===e.sourceId);return I?!(FA[e.move].chance>=0&&I.hasAbility(O.SHEER_FORCE)):!0}}r(Li,"getSheerForceHitDisableAbCondition");function NR(...R){return()=>{var I,L,N;if(!((I=T)!=null&&I.arena)||(L=T.arena.weather)!=null&&L.isEffectSuppressed())return!1;const e=(N=T.arena.weather)==null?void 0:N.weatherType;return!!e&&R.indexOf(e)>-1}}r(NR,"getWeatherCondition");function tv(){return R=>{for(const e of R.getOpponents())for(const I of e.moveset)if(I){if(I.getMove().is("AttackMove")&&R.getAttackTypeEffectiveness(I.getMove().type,e,!0,void 0,I.getMove())>=2||I.getMove().hasAttr("OneHitKOAttr"))return!0;if(I.getMove().id===E.HIDDEN_POWER){const L=Math.floor(((e.ivs[c.HP]&1)+(e.ivs[c.ATK]&1)*2+(e.ivs[c.DEF]&1)*4+(e.ivs[c.SPD]&1)*8+(e.ivs[c.SPATK]&1)*16+(e.ivs[c.SPDEF]&1)*32)*15/63),N=[t.FIGHTING,t.FLYING,t.POISON,t.GROUND,t.ROCK,t.BUG,t.GHOST,t.STEEL,t.FIRE,t.WATER,t.GRASS,t.ELECTRIC,t.PSYCHIC,t.ICE,t.DRAGON,t.DARK][L];if(R.getAttackTypeEffectiveness(N,e)>=2)return!0}}return!1}}r(tv,"getAnticipationCondition");function $2(R){return e=>!e.waveData.abilitiesApplied.has(R)}r($2,"getOncePerBattleCondition");const Up=class Up extends Ye{constructor(){super(!0)}applyPostSummon(e,I,L,N){let S=0,n="",i=0;for(const C of e.getOpponents())for(const o of C.moveset)o!=null&&o.getMove().is("StatusMove")?i=1:o!=null&&o.getMove().hasAttr("OneHitKOAttr")?i=150:(o==null?void 0:o.getMove().id)===E.COUNTER||(o==null?void 0:o.getMove().id)===E.MIRROR_COAT||(o==null?void 0:o.getMove().id)===E.METAL_BURST?i=120:(o==null?void 0:o.getMove().power)===-1?i=80:i=(o==null?void 0:o.getMove().power)??0,i>S&&(S=i,n=(o==null?void 0:o.getName())??"");L||T.phaseManager.queueMessage(_.t("abilityTriggers:forewarn",{pokemonNameWithAffix:Q(e),moveName:n}))}};r(Up,"ForewarnAbAttr");let HD=Up;const op=class op extends Ye{constructor(){super(!0)}applyPostSummon(e,I,L,N){if(!L)for(const S of e.getOpponents())T.phaseManager.queueMessage(_.t("abilityTriggers:frisk",{pokemonNameWithAffix:Q(e),opponentName:S.name,opponentAbilityName:S.getAbility().name})),K3(S)}};r(op,"FriskAbAttr");let uD=op;const Mp=class Mp extends xA{canApplyPostWeatherChange(e,I,L,N,S){return!0}applyPostWeatherChange(e,I,L,N,S){}};r(Mp,"PostWeatherChangeAbAttr");let Gr=Mp;const Dp=class Dp extends Gr{constructor(e,I){super(!1),this.ability=e,this.formRevertingWeathers=I}canApplyPostWeatherChange(e,I,L,N,S){const n=e.species.speciesId===A.CASTFORM&&this.ability===O.FORECAST,i=e.species.speciesId===A.CHERRIM&&this.ability===O.FLOWER_GIFT;return n||i}applyPostWeatherChange(e,I,L,N,S){var i;if(L)return;const n=(i=T.arena.weather)==null?void 0:i.weatherType;n&&this.formRevertingWeathers.includes(n)?T.arena.triggerWeatherBasedFormChangesToNormal():T.arena.triggerWeatherBasedFormChanges()}};r(Dp,"PostWeatherChangeFormChangeAbAttr");let Pr=Dp;const lp=class lp extends Gr{constructor(e,I,...L){super(),this.tagType=e,this.turnCount=I,this.weatherTypes=L}canApplyPostWeatherChange(e,I,L,N,S){return!!this.weatherTypes.find(n=>N===n)&&e.canAddTag(this.tagType)}applyPostWeatherChange(e,I,L,N,S){L||e.addTag(this.tagType,this.turnCount)}};r(lp,"PostWeatherChangeAddBattlerTagAttr");let cD=lp;const _p=class _p extends xA{constructor(...e){super(),this.weatherTypes=e}canApplyPostWeatherLapse(e,I,L,N,S){return!0}applyPostWeatherLapse(e,I,L,N,S){}getCondition(){return NR(...this.weatherTypes)}};r(_p,"PostWeatherLapseAbAttr");let Hr=_p;const Gp=class Gp extends Hr{constructor(e,...I){super(...I),this.healFactor=e}canApplyPostWeatherLapse(e,I,L,N,S){return!e.isFullHp()}applyPostWeatherLapse(e,I,L,N,S){const n=(I?e.getPassiveAbility():e.getAbility()).name;L||T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/(16/this.healFactor)),_.t("abilityTriggers:postWeatherLapseHeal",{pokemonNameWithAffix:Q(e),abilityName:n}),!0)}};r(Gp,"PostWeatherLapseHealAbAttr");let RS=Gp;const Pp=class Pp extends Hr{constructor(e,...I){super(...I),this.damageFactor=e}canApplyPostWeatherLapse(e,I,L,N,S){return!e.hasAbilityWithAttr("BlockNonDirectDamageAbAttr")}applyPostWeatherLapse(e,I,L,N,S){if(!L){const n=(I?e.getPassiveAbility():e.getAbility()).name;T.phaseManager.queueMessage(_.t("abilityTriggers:postWeatherLapseDamage",{pokemonNameWithAffix:Q(e),abilityName:n})),e.damageAndUpdate(UE(e.getMaxHp()/(16/this.damageFactor)),{result:_E.INDIRECT})}}};r(Pp,"PostWeatherLapseDamageAbAttr");let ur=Pp;const Hp=class Hp extends xA{canApplyPostTerrainChange(e,I,L,N,S){return!0}applyPostTerrainChange(e,I,L,N,S){}};r(Hp,"PostTerrainChangeAbAttr");let BD=Hp;const up=class up extends BD{constructor(e,I,...L){super(),this.tagType=e,this.turnCount=I,this.terrainTypes=L}canApplyPostTerrainChange(e,I,L,N,S){return!!this.terrainTypes.find(n=>n===N)&&e.canAddTag(this.tagType)}applyPostTerrainChange(e,I,L,N,S){L||e.addTag(this.tagType,this.turnCount)}};r(up,"PostTerrainChangeAddBattlerTagAttr");let V0=up;function Ni(...R){return e=>{var L;const I=(L=T.arena.terrain)==null?void 0:L.terrainType;return!!I&&R.indexOf(I)>-1}}r(Ni,"getTerrainCondition");const cp=class cp extends xA{canApplyPostTurn(e,I,L,N){return!0}applyPostTurn(e,I,L,N){}};r(cp,"PostTurnAbAttr");let hO=cp;const Bp=class Bp extends hO{constructor(...e){super(!1),this.effects=e}canApplyPostTurn(e,I,L,N){return!SA(e.status)&&this.effects.includes(e.status.effect)&&!e.isFullHp()}applyPostTurn(e,I,L,N){if(!L){const S=(I?e.getPassiveAbility():e.getAbility()).name;T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/8),_.t("abilityTriggers:poisonHeal",{pokemonName:Q(e),abilityName:S}),!0)}}};r(Bp,"PostTurnStatusHealAbAttr");let KD=Bp;const Kp=class Kp extends hO{constructor(e=!1){super(!0),this.allyTarget=e}canApplyPostTurn(e,I,L,N){var n,i;this.allyTarget?this.target=e.getAlly():this.target=e;const S=(i=(n=this.target)==null?void 0:n.status)==null?void 0:i.effect;return!!S&&S!==J.FAINT}applyPostTurn(e,I,L,N){var S,n;!L&&((S=this.target)!=null&&S.status)&&(T.phaseManager.queueMessage($t((n=this.target.status)==null?void 0:n.effect,Q(this.target))),this.target.resetStatus(!1),this.target.updateInfo())}};r(Kp,"PostTurnResetStatusAbAttr");let OS=Kp;const fp=class fp extends hO{constructor(e){super(),this.procChance=e}canApplyPostTurn(e,I,L,N){const S=new Set(T.getModifiers(ce,e.isPlayer()).filter(i=>i.pokemonId===e.id&&i.getCountUnderMax()<1).map(i=>i.berryType));if(this.berriesUnderCap=e.battleData.berriesEaten.filter(i=>!S.has(i)),!this.berriesUnderCap.length)return!1;const n=nI();return this.procChance(e)>=n}applyPostTurn(e,I,L,N){L||this.createEatenBerry(e)}createEatenBerry(e){const I=DA(this.berriesUnderCap.length),L=this.berriesUnderCap[I];e.battleData.berriesEaten.splice(I,1);const N=new $S(L),S=T.findModifier(n=>n instanceof ce&&n.berryType===L&&n.pokemonId===e.id,e.isPlayer());if(S)S.stackCount++;else{const n=new ce(N,e.id,L,1);e.isPlayer()?T.addModifier(n):T.addEnemyModifier(n)}return T.updateModifiers(e.isPlayer()),T.phaseManager.queueMessage(_.t("abilityTriggers:postTurnLootCreateEatenBerry",{pokemonNameWithAffix:Q(e),berryName:N.name})),!0}};r(fp,"PostTurnRestoreBerryAbAttr");let fD=fp;const Fp=class Fp extends hO{canApply(e,I,L,N){return this.showAbility=!0,!!e.summonData.berriesEatenLast.length}apply(e,I,L,N,S){T.phaseManager.unshiftNew("CommonAnimPhase",e.getBattlerIndex(),e.getBattlerIndex(),jE.USE_ITEM);for(const n of e.summonData.berriesEatenLast){CH(n)(e);const i=new ce(new $S(n),e.id,n,1);T.eventTarget.dispatchEvent(new qP(i))}}canApplyPostTurn(e,I,L,N){return this.showAbility=!1,!0}applyPostTurn(e,I,L,N){e.summonData.berriesEatenLast=e.turnData.berriesEaten}};r(Fp,"RepeatBerryNextTurnAbAttr");let FD=Fp;const Yp=class Yp extends hO{constructor(){super(!0)}applyPostTurn(e,I,L,N){const S=dL.filter(i=>e.getStatStage(i)<6);let n=dL.filter(i=>e.getStatStage(i)>-6);if(!L){if(S.length>0){const i=S[e.randBattleSeedInt(S.length)];n=S.filter(C=>C!==i),T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[i],2)}if(n.length>0){const i=n[e.randBattleSeedInt(n.length)];T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[i],-1)}}}};r(Yp,"MoodyAbAttr");let YD=Yp;const Wp=class Wp extends hO{constructor(){super(!0)}canApplyPostTurn(e,I,L,N){return L||!e.turnData.switchedInThisTurn&&!e.turnData.failedRunAway}applyPostTurn(e,I,L,N){T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,[c.SPD],1)}};r(Wp,"SpeedBoostAbAttr");let WD=Wp;const hp=class hp extends hO{canApplyPostTurn(e,I,L,N){return!e.isFullHp()}applyPostTurn(e,I,L,N){if(!L){const S=(I?e.getPassiveAbility():e.getAbility()).name;T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()/16),_.t("abilityTriggers:postTurnHeal",{pokemonNameWithAffix:Q(e),abilityName:S}),!0)}}};r(hp,"PostTurnHealAbAttr");let w0=hp;const dp=class dp extends hO{constructor(e){super(!0),this.formFunc=e}canApplyPostTurn(e,I,L,N){return this.formFunc(e)!==e.formIndex}applyPostTurn(e,I,L,N){L||T.triggerPokemonFormChange(e,DE,!1)}};r(dp,"PostTurnFormChangeAbAttr");let BI=dp;const pp=class pp extends hO{canApplyPostTurn(e,I,L,N){return e.getOpponents().some(S=>{var n;return(((n=S.status)==null?void 0:n.effect)===J.SLEEP||S.hasAbility(O.COMATOSE))&&!S.hasAbilityWithAttr("BlockNonDirectDamageAbAttr")&&!S.switchOutStatus})}applyPostTurn(e,I,L,N){var S;for(const n of e.getOpponents())(((S=n.status)==null?void 0:S.effect)===J.SLEEP||n.hasAbility(O.COMATOSE))&&!n.hasAbilityWithAttr("BlockNonDirectDamageAbAttr")&&!n.switchOutStatus&&(L||(n.damageAndUpdate(UE(n.getMaxHp()/8),{result:_E.INDIRECT}),T.phaseManager.queueMessage(_.t("abilityTriggers:badDreams",{pokemonName:Q(n)}))))}};r(pp,"PostTurnHurtIfSleepingAbAttr");let hD=pp;const gp=class gp extends hO{canApplyPostTurn(e,I,L,N){return!L&&!SA(T.currentBattle.lastUsedPokeball)&&!!e.isPlayer}applyPostTurn(e,I,L,N){const S=T.currentBattle.lastUsedPokeball;T.pokeballCounts[S]++,T.currentBattle.lastUsedPokeball=null,T.phaseManager.queueMessage(_.t("abilityTriggers:fetchBall",{pokemonNameWithAffix:Q(e),pokeballName:ZP(S)}))}};r(gp,"FetchBallAbAttr");let dD=gp;const mp=class mp extends xA{};r(mp,"PostBiomeChangeAbAttr");let cr=mp;const yp=class yp extends cr{constructor(e){super(),this.weatherType=e}canApply(e,I,L,N){var S;return(((S=T.arena.weather)==null?void 0:S.isImmutable())??!1)&&T.arena.canSetWeather(this.weatherType)}apply(e,I,L,N,S){L||T.arena.trySetWeather(this.weatherType,e)}};r(yp,"PostBiomeChangeWeatherChangeAbAttr");let OI=yp;const Vp=class Vp extends cr{constructor(e){super(),this.terrainType=e}canApply(e,I,L,N){return T.arena.canSetTerrain(this.terrainType)}apply(e,I,L,N,S){L||T.arena.trySetTerrain(this.terrainType,!1,e)}};r(Vp,"PostBiomeChangeTerrainChangeAbAttr");let Bt=Vp;const wp=class wp extends xA{canApplyPostMoveUsed(e,I,L,N,S,n){return!0}applyPostMoveUsed(e,I,L,N,S,n){}};r(wp,"PostMoveUsedAbAttr");let pD=wp;const vp=class vp extends pD{canApplyPostMoveUsed(e,I,L,N,S,n){const i=[d.FLYING,d.UNDERWATER,d.UNDERGROUND,d.HIDDEN];return L.getBattlerIndex()!==e.getBattlerIndex()&&!e.summonData.tags.some(C=>i.includes(C.tagType))}applyPostMoveUsed(e,I,L,N,S,n){if(!S){e.turnData.extraTurns++;const i=T.phaseManager;if(I.getMove().is("AttackMove")||I.getMove().is("StatusMove")){const C=this.getTarget(e,L,N);i.unshiftNew("MovePhase",e,C,I,!0,!0)}else I.getMove().is("SelfStatusMove")&&i.unshiftNew("MovePhase",e,[e.getBattlerIndex()],I,!0,!0)}}getTarget(e,I,L){return e.isPlayer()?I.isPlayer()?L:[I.getBattlerIndex()]:I.isPlayer()?[I.getBattlerIndex()]:L}};r(vp,"PostDancingMoveAbAttr");let gD=vp;const xp=class xp extends xA{canApplyPostItemLost(e,I,L){return!0}applyPostItemLost(e,I,L){}};r(xp,"PostItemLostAbAttr");let mD=xp;const Zp=class Zp extends mD{constructor(e){super(!1),this.tagType=e}canApplyPostItemLost(e,I,L){return!e.getTag(this.tagType)&&!I}applyPostItemLost(e,I,L){e.addTag(this.tagType)}};r(Zp,"PostItemLostApplyBattlerTagAbAttr");let yD=Zp;const bp=class bp extends xA{constructor(e){super(!1),this.multiplier=e}apply(e,I,L,N,S){S[0].value*=this.multiplier}};r(bp,"StatStageChangeMultiplierAbAttr");let Br=bp;const kp=class kp extends xA{apply(e,I,L,N,S){L||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,S[0],S[1],!0,!1,!1)}};r(kp,"StatStageChangeCopyAbAttr");let VD=kp;const Xp=class Xp extends xA{constructor(){super(!1)}apply(e,I,L,N,S){N.value=!0}};r(Xp,"BypassBurnDamageReductionAbAttr");let wD=Xp;const Qp=class Qp extends xA{constructor(e){super(!1),this.multiplier=e}apply(e,I,L,N,S){S[0].value=UE(S[0].value*this.multiplier)}};r(Qp,"ReduceBurnDamageAbAttr");let vD=Qp;const Jp=class Jp extends xA{apply(e,I,L,N,S){S[0].value*=2}};r(Jp,"DoubleBerryEffectAbAttr");let xD=Jp;const $p=class $p extends xA{apply(e,I,L,N){N.value=!0}};r($p,"PreventBerryUseAbAttr");let IS=$p;const qp=class qp extends xA{constructor(e){super(),this.healPercent=Math.max(Math.min(e,1),0)}apply(e,I,L,...N){if(L)return;const{name:S}=I?e.getPassiveAbility():e.getAbility();T.phaseManager.unshiftNew("PokemonHealPhase",e.getBattlerIndex(),UE(e.getMaxHp()*this.healPercent),_.t("abilityTriggers:healFromBerryUse",{pokemonNameWithAffix:Q(e),abilityName:S}),!0)}};r(qp,"HealFromBerryUseAbAttr");let ZD=qp;const zp=class zp extends xA{apply(e,I,L,N,S){S[0].value=256}};r(zp,"RunSuccessAbAttr");let bD=zp;const jp=class jp extends xA{constructor(e){super(!1),this.arenaTrapCondition=e}canApplyCheckTrapped(e,I,L,N,S,n){return!0}applyCheckTrapped(e,I,L,N,S,n){}};r(jp,"CheckTrappedAbAttr");let kD=jp;const Ag=class Ag extends kD{canApplyCheckTrapped(e,I,L,N,S,n){return this.arenaTrapCondition(e,S)&&!(S.getTypes(!0).includes(t.GHOST)||S.getTypes(!0).includes(t.STELLAR)&&S.getTypes().includes(t.GHOST))&&!S.hasAbility(O.RUN_AWAY)}applyCheckTrapped(e,I,L,N,S,n){N.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:arenaTrap",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(Ag,"ArenaTrapAbAttr");let tS=Ag;const Eg=class Eg extends xA{constructor(){super(!1)}apply(e,I,L,N,S){S[0].value=0}};r(Eg,"MaxMultiHitAbAttr");let XD=Eg;const eg=class eg extends xA{constructor(e=!0){super(e)}canApplyPostBattle(e,I,L,N){return!0}applyPostBattle(e,I,L,N){}};r(eg,"PostBattleAbAttr");let AT=eg;const Rg=class Rg extends AT{canApplyPostBattle(e,I,L,N){const S=T.currentBattle.postBattleLoot;return!L&&S.length&&N[0]?(this.randItem=He(S),T.canTransferHeldItemModifier(this.randItem,e,1)):!1}applyPostBattle(e,I,L,N){const S=T.currentBattle.postBattleLoot;this.randItem||(this.randItem=He(S)),T.tryTransferHeldItemModifier(this.randItem,e,!0,1,!0,void 0,!1)&&(S.splice(S.indexOf(this.randItem),1),T.phaseManager.queueMessage(_.t("abilityTriggers:postBattleLoot",{pokemonNameWithAffix:Q(e),itemName:this.randItem.type.name}))),this.randItem=void 0}};r(Rg,"PostBattleLootAbAttr");let QD=Rg;const Og=class Og extends xA{canApplyPostFaint(e,I,L,N,S,n,...i){return!0}applyPostFaint(e,I,L,N,S,n,...i){}};r(Og,"PostFaintAbAttr");let ET=Og;const Ig=class Ig extends ET{canApplyPostFaint(e,I,L,N,S,n,...i){return f3().length>0}applyPostFaint(e,I,L,N,S,n,i){L||T.arena.triggerWeatherBasedFormChanges()}};r(Ig,"PostFaintUnsuppressedWeatherFormChangeAbAttr");let Kr=Ig;const tg=class tg extends ET{constructor(e){super(!0),this.damageRatio=e}canApplyPostFaint(e,I,L,N,S,n,...i){const C=S!==void 0&&N!==void 0&&S.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:N,target:e}),o=new nE(!1);return T.getField(!0).map(l=>SE("FieldPreventExplosiveMovesAbAttr",l,o,L)),!(!C||o.value||N.hasAbilityWithAttr("BlockNonDirectDamageAbAttr"))}applyPostFaint(e,I,L,N,S,n,...i){L||(N.damageAndUpdate(UE(N.getMaxHp()*(1/this.damageRatio)),{result:_E.INDIRECT}),N.turnData.damageTaken+=UE(N.getMaxHp()*(1/this.damageRatio)))}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:postFaintContactDamage",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(tg,"PostFaintContactDamageAbAttr");let JD=tg;const Lg=class Lg extends ET{applyPostFaint(e,I,L,N,S,n,...i){if(S!==void 0&&N!==void 0&&!L){const C=e.turnData.attacksReceived[0].damage;N.damageAndUpdate(C,{result:_E.INDIRECT}),N.turnData.damageTaken+=C}}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:postFaintHpDamage",{pokemonNameWithAffix:Q(e),abilityName:I})}};r(Lg,"PostFaintHPDamageAbAttr");let $D=Lg;const Ng=class Ng extends xA{canApply(e,I,L,N){if(!this.canRedirect(N[0],N[2]))return!1;const S=N[1],n=e.getBattlerIndex();return S.value!==n}apply(e,I,L,N,S){const n=S[1],i=e.getBattlerIndex();n.value=i}canRedirect(e,I){const L=FA[e];return!![AA.NEAR_OTHER,AA.OTHER].find(N=>L.moveTarget===N)}};r(Ng,"RedirectMoveAbAttr");let qD=Ng;const Sg=class Sg extends qD{constructor(e){super(),this.type=e}canRedirect(e,I){return super.canRedirect(e,I)&&I.getMoveType(FA[e])===this.type}};r(Sg,"RedirectTypeMoveAbAttr");let fr=Sg;const Tg=class Tg extends xA{};r(Tg,"BlockRedirectAbAttr");let Fr=Tg;const sg=class sg extends xA{constructor(e){super(!1),this.statusEffect=e}canApply(e,I,L,N){return N[1]instanceof VA&&N[0]===this.statusEffect}apply(e,I,L,N,S){S[1].value-=1}};r(sg,"ReduceStatusEffectDurationAbAttr");let zD=sg;const ag=class ag extends xA{constructor(){super(!0)}};r(ag,"FlinchEffectAbAttr");let jD=ag;const ng=class ng extends jD{constructor(e,I){super(),this.stats=e,this.stages=I}apply(e,I,L,N,S){L||T.phaseManager.unshiftNew("StatStageChangePhase",e.getBattlerIndex(),!0,this.stats,this.stages)}};r(ng,"FlinchStatStageChangeAbAttr");let Al=ng;const rg=class rg extends xA{};r(rg,"IncreasePpAbAttr");let El=rg;const ig=class ig extends xA{apply(e,I,L,N,S){N.value=!0}};r(ig,"ForceSwitchOutImmunityAbAttr");let Yr=ig;const Cg=class Cg extends xA{constructor(){super(!1)}canApply(e,I,L,N){const S=e.getHpRatio();return N[0].value<S}apply(e,I,L,N,S){S[0].value*=2}};r(Cg,"ReduceBerryUseThresholdAbAttr");let el=Cg;const Ug=class Ug extends xA{constructor(e){super(!1),this.multiplier=e}apply(e,I,L,N,S){S[0].value*=this.multiplier}};r(Ug,"WeightMultiplierAbAttr");let Wr=Ug;const og=class og extends xA{constructor(){super(!1)}apply(e,I,L,N,S){S[0].setNature(e.getNature())}};r(og,"SyncEncounterNatureAbAttr");let Rl=og;const Mg=class Mg extends xA{constructor(e){super(!1),this.moveIgnoreFunc=e||((I,L)=>!0)}canApply(e,I,L,N){return this.moveIgnoreFunc(e,N[0])}apply(e,I,L,N,S){N.value=!0}};r(Mg,"MoveAbilityBypassAbAttr");let HL=Mg;const Dg=class Dg extends xA{};r(Dg,"AlwaysHitAbAttr");let Ol=Dg;const lg=class lg extends xA{};r(lg,"IgnoreProtectOnContactAbAttr");let Il=lg;const _g=class _g extends xA{constructor(){super(!1)}canApply(e,I,L,N){return N[0]instanceof nE}apply(e,I,L,N,S){const n=S[0];n.value=!0}};r(_g,"InfiltratorAbAttr");let tl=_g;const Gg=class Gg extends xA{};r(Gg,"ReflectStatusMoveAbAttr");let Ll=Gg;const Pg=class Pg extends xA{constructor(){super(!1)}};r(Pg,"NoTransformAbilityAbAttr");let KR=Pg;const Hg=class Hg extends xA{constructor(){super(!1)}};r(Hg,"NoFusionAbilityAbAttr");let ze=Hg;const ug=class ug extends xA{constructor(e,I){super(!1),this.defenderType=e,this.allowedMoveTypes=I}canApply(e,I,L,N){return this.defenderType===N[1]&&this.allowedMoveTypes.includes(N[0])}apply(e,I,L,N,S){N.value=!0}};r(ug,"IgnoreTypeImmunityAbAttr");let hr=ug;const cg=class cg extends xA{constructor(e,I){super(!1),this.statusEffect=e,this.defenderType=I}canApply(e,I,L,N){return this.statusEffect.includes(N[0])&&this.defenderType.includes(N[1])}apply(e,I,L,N,S){N.value=!0}};r(cg,"IgnoreTypeStatusEffectImmunityAbAttr");let Nl=cg;const Bg=class Bg extends AT{canApplyPostBattle(e,I,L,N){return!L&&N[0]}applyPostBattle(e,I,L,N){T.currentBattle.moneyScattered+=T.getWaveMoneyAmount(.2)}};r(Bg,"MoneyAbAttr");let Sl=Bg;const Kg=class Kg extends Wt{constructor(e){super([c.ATK],1,!0,!1),this.tagType=e}canApplyPostSummon(e,I,L,N){const S=e.isPlayer()?hA.PLAYER:hA.ENEMY;return(T.arena.getTagOnSide(this.tagType,S)??!1)&&super.canApplyPostSummon(e,I,L,N)}applyPostSummon(e,I,L,N){super.applyPostSummon(e,I,L,N)}};r(Kg,"PostSummonStatStageChangeOnArenaAbAttr");let Tl=Kg;const fg=class fg extends eO{constructor(e,I,L,N,S){super(e,I),this.multiplier=I,this.tagType=L,this.recoilDamageFunc=S,this.triggerMessageFunc=N}canApplyPreDefend(e,I,L,N,S,n,i){return this.condition(e,N,S)&&!S.hitsSubstitute(N,e)}applyPreDefend(e,I,L,N,S,n,i){L||(i[0].value=this.multiplier,e.removeTag(this.tagType),this.recoilDamageFunc&&e.damageAndUpdate(this.recoilDamageFunc(e),{result:_E.INDIRECT,ignoreSegments:!0,ignoreFaintPhase:!0}))}getTriggerMessage(e,I,...L){return this.triggerMessageFunc(e,I)}};r(fg,"FormBlockDamageAbAttr");let dr=fg;const Fg=class Fg extends xA{applyPreSummon(e,I,L){}canApplyPreSummon(e,I,L){return!0}};r(Fg,"PreSummonAbAttr");let sl=Fg;const Yg=class Yg extends sl{applyPreSummon(e,I,L){const S=(e.isPlayer()?T.getPlayerParty():T.getEnemyParty()).filter(n=>n.isAllowedInBattle()).filter(n=>n!==e).at(-1)||e;e.setIllusion(S)}canApplyPreSummon(e,I,L){if(e.hasTrainer()){const S=(e.isPlayer()?T.getPlayerParty():T.getEnemyParty()).filter(i=>i.isAllowedInBattle()).filter(i=>i!==e).at(-1)||e,n=S.species.speciesId;if(S===e||(n===A.OGERPON||n===A.TERAPAGOS)&&(S.isTerastallized||e.isTerastallized))return!1}return!e.summonData.illusionBroken}};r(Yg,"IllusionPreSummonAbAttr");let al=Yg;const Wg=class Wg extends xA{apply(e,I,L,N,S){e.breakIllusion(),e.summonData.illusionBroken=!0}};r(Wg,"IllusionBreakAbAttr");let nl=Wg;const hg=class hg extends Qe{applyPostDefend(e,I,L,N,S,n,i){e.breakIllusion(),e.summonData.illusionBroken=!0}canApplyPostDefend(e,I,L,N,S,n,i){return[_E.EFFECTIVE,_E.SUPER_EFFECTIVE,_E.NOT_VERY_EFFECTIVE,_E.ONE_HIT_KO].includes(n)&&!!e.summonData.illusion}};r(hg,"PostDefendIllusionBreakAbAttr");let rl=hg;const dg=class dg extends AT{applyPostBattle(e,I,L,N){e.breakIllusion()}};r(dg,"IllusionPostBattleAbAttr");let il=dg;const pg=class pg extends xA{constructor(e){super(!0),this.chance=e}canApply(e,I,L,N){var l;const S=N[0],n=T.currentBattle.turnCommands[e.getBattlerIndex()],i=(n==null?void 0:n.command)===pI.FIGHT,C=(l=n==null?void 0:n.move)!=null&&l.move?FA[n.move.move]:null,o=(C==null?void 0:C.category)===G.PHYSICAL||(C==null?void 0:C.category)===G.SPECIAL;return!L&&!S.value&&e.randBattleSeedInt(100)<this.chance&&i&&o}apply(e,I,L,N,S){const n=S[0];n.value=!0}getTriggerMessage(e,I,...L){return _.t("abilityTriggers:quickDraw",{pokemonName:Q(e)})}};r(pg,"BypassSpeedChanceAbAttr");let Cl=pg;const gg=class gg extends xA{constructor(e){super(!0),this.condition=e}canApply(e,I,L,N){var C;const S=T.currentBattle.turnCommands[e.getBattlerIndex()],n=(S==null?void 0:S.command)===pI.FIGHT,i=(C=S==null?void 0:S.move)!=null&&C.move?FA[S.move.move]:null;return n&&this.condition(e,i)}apply(e,I,L,N,S){const n=S[0],i=S[1];n.value=!1,i.value=!1}};r(gg,"PreventBypassSpeedChanceAbAttr");let Ul=gg;const mg=class mg extends Ye{constructor(){super(!0)}canApply(e,I,L,N){return!e.isTerastallized}apply(e,I,L,N,S){const n=T.arena.getTerrainType(),i=this.determineTypeChange(e,n);i.length!==0&&(e.summonData.addedType&&i.includes(e.summonData.addedType)&&(e.summonData.addedType=null),e.summonData.types=i,e.updateInfo())}determineTypeChange(e,I){const L=[];switch(I){case bA.ELECTRIC:L.push(t.ELECTRIC);break;case bA.MISTY:L.push(t.FAIRY);break;case bA.GRASSY:L.push(t.GRASS);break;case bA.PSYCHIC:L.push(t.PSYCHIC);break;default:e.getTypes(!1,!1,!0).forEach(N=>{L.push(N)});break}return L}canApplyPostSummon(e,I,L,N){return T.arena.getTerrainType()!==bA.NONE&&this.canApply(e,I,L,N)}applyPostSummon(e,I,L,N){this.apply(e,I,L,new nE(!1),[])}getTriggerMessage(e,I,...L){const N=T.arena.getTerrainType(),S=Q(e);if(N===bA.NONE)return _.t("abilityTriggers:pokemonTypeChangeRevert",{pokemonNameWithAffix:S});const n=_.t(`pokemonInfo:Type.${t[this.determineTypeChange(e,N)[0]]}`);return _.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:S,moveType:n})}};r(mg,"TerrainEventTypeChangeAbAttr");let ol=mg;const yg=class yg{constructor(e){this.switchType=e}switchOutLogic(e){const I=e;if(I.isPlayer()){if(T.getPlayerParty().filter(L=>L.isAllowedInBattle()&&!L.isOnField()).length<1)return!1;if(I.hp>0)return I.leaveField(this.switchType===ER.SWITCH),T.phaseManager.prependNewToPhase("MoveEndPhase","SwitchPhase",this.switchType,I.getFieldIndex(),!0,!0),!0}else if(T.currentBattle.battleType!==yE.WILD){if(T.getEnemyParty().filter(L=>L.isAllowedInBattle()&&!L.isOnField()).length<1)return!1;if(I.hp>0){I.leaveField(this.switchType===ER.SWITCH);const L=T.currentBattle.trainer?T.currentBattle.trainer.getNextSummonIndex(I.trainerSlot):0;return T.phaseManager.prependNewToPhase("MoveEndPhase","SwitchSummonPhase",this.switchType,I.getFieldIndex(),L,!1,!1),!0}}else{const L=I.getAlly();if(!T.currentBattle.waveIndex||T.currentBattle.waveIndex%10===0)return!1;I.hp>0&&(I.leaveField(!1),T.phaseManager.queueMessage(_.t("moveTriggers:fled",{pokemonName:Q(I)}),null,!0,500),T.currentBattle.double&&!SA(L)&&T.redirectPokemonMoves(I,L)),L!=null&&L.isActive(!0)||(T.clearEnemyHeldItemModifiers(),I.hp&&(T.phaseManager.pushNew("BattleEndPhase",!1),(T.gameMode.hasRandomBiomes||T.isNewBiome())&&T.phaseManager.pushNew("SelectBiomePhase"),T.phaseManager.pushNew("NewBattlePhase")))}return!1}getSwitchOutCondition(e,I){var n;const L=e,N=L.isPlayer();if(N){const i=new nE(!1);return SE("ForceSwitchOutImmunityAbAttr",I,i),!i.value}if(!N&&T.currentBattle.battleType===yE.WILD&&!T.currentBattle.waveIndex&&T.currentBattle.waveIndex%10===0||!N&&T.currentBattle.isBattleMysteryEncounter()&&!((n=T.currentBattle.mysteryEncounter)!=null&&n.fleeAllowed))return!1;const S=N?T.getPlayerParty():T.getEnemyParty();return!N&&T.currentBattle.battleType===yE.WILD||S.filter(i=>i.isAllowedInBattle()&&!i.isOnField()&&(N||i.trainerSlot===L.trainerSlot)).length>0}getFailedText(e){const I=new nE(!1);return SE("ForceSwitchOutImmunityAbAttr",e,I),I.value?_.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:Q(e)}):null}};r(yg,"ForceSwitchOutHelper");let v0=yg;function Lv(R){const e=R.getHeldItems().find(I=>I instanceof kL);return e?UE(R.turnData.totalDamageDealt/8)*e.stackCount:0}r(Lv,"calculateShellBellRecovery");const Vg=class Vg extends xA{canApplyPostDamage(e,I,L,N,S,n){return!0}applyPostDamage(e,I,L,N,S,n){}};r(Vg,"PostDamageAbAttr");let Ml=Vg;const wg=class wg extends Ml{constructor(e=.5){super(),this.helper=new v0(ER.SWITCH),this.hpRatio=e}canApplyPostDamage(e,I,L,N,S,n){const i=e.getMoveHistory(),C=[E.BELLY_DRUM,E.SUBSTITUTE,E.CURSE,E.PAIN_SPLIT];if(i.length>0){const l=i[i.length-1];if(C.includes(l.move))return!1}const o=[E.DRAGON_TAIL,E.CIRCLE_THROW];if(n){const l=n.getMoveHistory();if(l.length>0){const H=l[l.length-1];if(o.includes(H.move)||H.move===E.SKY_DROP&&H.result===De.OTHER||FA[H.move].chance>=0&&n.hasAbility(O.SHEER_FORCE)||n.turnData.hitsLeft>1)return!1;n.turnData.hitCount>1&&(I=e.turnData.damageTaken)}}if(e.hp+I>=e.getMaxHp()*this.hpRatio){const l=Lv(e);if(e.hp-l<e.getMaxHp()*this.hpRatio){for(const H of e.getOpponents())if(!this.helper.getSwitchOutCondition(e,H))return!1;return!0}}return!1}applyPostDamage(e,I,L,N,S,n){this.helper.switchOutLogic(e)}};r(wg,"PostDamageForceSwitchAbAttr");let pr=wg;const x0=Object.freeze({BlockRecoilDamageAttr:TM,DoubleBattleChanceAbAttr:oL,PostBattleInitAbAttr:sM,PostBattleInitFormChangeAbAttr:mO,PostTeraFormChangeStatChangeAbAttr:ML,ClearWeatherAbAttr:aM,ClearTerrainAbAttr:nM,PreDefendAbAttr:QO,PreDefendFullHpEndureAbAttr:rM,BlockItemTheftAbAttr:iM,StabBoostAbAttr:CM,ReceivedMoveDamageMultiplierAbAttr:eO,AlliedFieldDamageReductionAbAttr:UM,ReceivedTypeDamageMultiplierAbAttr:JI,TypeImmunityAbAttr:Xt,AttackTypeImmunityAbAttr:oM,TypeImmunityHealAbAttr:DL,NonSuperEffectiveImmunityAbAttr:MM,FullHpResistTypeAbAttr:DM,PostDefendAbAttr:Qe,FieldPriorityMoveImmunityAbAttr:zN,PostStatStageChangeAbAttr:lM,MoveImmunityAbAttr:zI,WonderSkinAbAttr:_M,MoveImmunityStatStageChangeAbAttr:GM,ReverseDrainAbAttr:PM,PostDefendStatStageChangeAbAttr:iO,PostDefendHpGatedStatStageChangeAbAttr:jN,PostDefendApplyArenaTrapTagAbAttr:HM,PostDefendApplyBattlerTagAbAttr:$n,PostDefendTypeChangeAbAttr:uM,PostDefendTerrainChangeAbAttr:cM,PostDefendContactApplyStatusEffectAbAttr:FL,EffectSporeAbAttr:BM,PostDefendContactApplyTagChanceAbAttr:KM,PostDefendCritStatStageChangeAbAttr:fM,PostDefendContactDamageAbAttr:qn,PostDefendPerishSongAbAttr:FM,PostDefendWeatherChangeAbAttr:YM,PostDefendAbilitySwapAbAttr:WM,PostDefendAbilityGiveAbAttr:zn,PostDefendMoveDisableAbAttr:hM,PostStatStageChangeStatStageChangeAbAttr:jn,PreAttackAbAttr:Qt,MoveEffectChanceMultiplierAbAttr:Ar,IgnoreMoveEffectsAbAttr:dM,VariableMovePowerAbAttr:Er,FieldPreventExplosiveMovesAbAttr:pM,FieldMultiplyStatAbAttr:lL,MoveTypeChangeAbAttr:$I,PokemonTypeChangeAbAttr:er,AddSecondStrikeAbAttr:gM,DamageBoostAbAttr:mM,MovePowerBoostAbAttr:je,MoveTypePowerBoostAbAttr:VO,LowHpMoveTypePowerBoostAbAttr:_L,VariableMovePowerBoostAbAttr:yM,FieldMovePowerBoostAbAttr:Rr,PreAttackFieldMoveTypePowerBoostAbAttr:Or,FieldMoveTypePowerBoostAbAttr:GL,UserFieldMoveTypePowerBoostAbAttr:VM,AllyMoveCategoryPowerBoostAbAttr:Ir,StatMultiplierAbAttr:ee,PostAttackAbAttr:RN,AllyStatMultiplierAbAttr:AS,ExecutedMoveAbAttr:wM,GorillaTacticsAbAttr:vM,PostAttackStealHeldItemAbAttr:xM,PostAttackApplyStatusEffectAbAttr:tr,PostAttackContactApplyStatusEffectAbAttr:ZM,PostAttackApplyBattlerTagAbAttr:bM,PostDefendStealHeldItemAbAttr:kM,PostSetStatusAbAttr:XM,SynchronizeStatusAbAttr:QM,PostVictoryAbAttr:Lr,PostVictoryFormChangeAbAttr:JM,PostKnockOutAbAttr:Nr,PostKnockOutStatStageChangeAbAttr:$M,CopyFaintedAllyAbilityAbAttr:Sr,IgnoreOpponentStatStagesAbAttr:ES,IntimidateImmunityAbAttr:PL,PostIntimidateStatStageChangeAbAttr:Tr,PostSummonAbAttr:Ye,PostSummonRemoveEffectAbAttr:sr,PostSummonRemoveArenaTagAbAttr:qM,PostSummonAddArenaTagAbAttr:zM,PostSummonMessageAbAttr:BR,PostSummonUnnamedMessageAbAttr:ar,PostSummonAddBattlerTagAbAttr:uI,PostSummonRemoveBattlerTagAbAttr:nr,PostSummonStatStageChangeAbAttr:Wt,PostSummonAllyHealAbAttr:jM,PostSummonClearAllyStatStagesAbAttr:AD,DownloadAbAttr:ED,PostSummonWeatherChangeAbAttr:EI,PostSummonTerrainChangeAbAttr:ut,PostSummonHealStatusAbAttr:eI,PostSummonFormChangeAbAttr:qI,PostSummonCopyAbilityAbAttr:eD,PostSummonUserFieldRemoveStatusEffectAbAttr:rr,PostSummonCopyAllyStatsAbAttr:RD,PostSummonTransformAbAttr:OD,PostSummonWeatherSuppressedFormChangeAbAttr:ir,PostSummonFormChangeByWeatherAbAttr:Cr,CommanderAbAttr:ID,PreSwitchOutAbAttr:ON,PreSwitchOutResetStatusAbAttr:tD,PreSwitchOutClearWeatherAbAttr:y0,PreSwitchOutHealAbAttr:LD,PreSwitchOutFormChangeAbAttr:ND,PreLeaveFieldAbAttr:Ur,PreLeaveFieldClearWeatherAbAttr:eS,PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr:SD,PreStatStageChangeAbAttr:qS,ReflectStatStageChangeAbAttr:TD,ProtectStatAbAttr:RI,ConfusionOnStatusEffectAbAttr:sD,PreSetStatusAbAttr:aD,PreSetStatusEffectImmunityAbAttr:or,StatusEffectImmunityAbAttr:AO,UserFieldStatusEffectImmunityAbAttr:zS,ConditionalUserFieldStatusEffectImmunityAbAttr:nD,ConditionalUserFieldProtectStatAbAttr:rD,PreApplyBattlerTagAbAttr:iD,PreApplyBattlerTagImmunityAbAttr:Mr,BattlerTagImmunityAbAttr:cI,UserFieldBattlerTagImmunityAbAttr:jS,ConditionalUserFieldBattlerTagImmunityAbAttr:CD,BlockCritAbAttr:Dr,BonusCritAbAttr:UD,MultCritAbAttr:oD,ConditionalCritAbAttr:MD,BlockNonDirectDamageAbAttr:DD,BlockStatusDamageAbAttr:lD,BlockOneHitKOAbAttr:_D,ChangeMovePriorityAbAttr:ct,IgnoreContactAbAttr:GD,PreWeatherEffectAbAttr:lr,PreWeatherDamageAbAttr:PD,SuppressWeatherEffectAbAttr:_r,ForewarnAbAttr:HD,FriskAbAttr:uD,PostWeatherChangeAbAttr:Gr,PostWeatherChangeFormChangeAbAttr:Pr,PostWeatherLapseAbAttr:Hr,PostWeatherLapseHealAbAttr:RS,PostWeatherLapseDamageAbAttr:ur,PostTerrainChangeAbAttr:BD,PostTurnAbAttr:hO,PostTurnStatusHealAbAttr:KD,PostTurnResetStatusAbAttr:OS,PostTurnRestoreBerryAbAttr:fD,RepeatBerryNextTurnAbAttr:FD,MoodyAbAttr:YD,SpeedBoostAbAttr:WD,PostTurnHealAbAttr:w0,PostTurnFormChangeAbAttr:BI,PostTurnHurtIfSleepingAbAttr:hD,FetchBallAbAttr:dD,PostBiomeChangeAbAttr:cr,PostBiomeChangeWeatherChangeAbAttr:OI,PostBiomeChangeTerrainChangeAbAttr:Bt,PostMoveUsedAbAttr:pD,PostDancingMoveAbAttr:gD,PostItemLostAbAttr:mD,PostItemLostApplyBattlerTagAbAttr:yD,StatStageChangeMultiplierAbAttr:Br,StatStageChangeCopyAbAttr:VD,BypassBurnDamageReductionAbAttr:wD,ReduceBurnDamageAbAttr:vD,DoubleBerryEffectAbAttr:xD,PreventBerryUseAbAttr:IS,HealFromBerryUseAbAttr:ZD,RunSuccessAbAttr:bD,CheckTrappedAbAttr:kD,ArenaTrapAbAttr:tS,MaxMultiHitAbAttr:XD,PostBattleAbAttr:AT,PostBattleLootAbAttr:QD,PostFaintAbAttr:ET,PostFaintUnsuppressedWeatherFormChangeAbAttr:Kr,PostFaintContactDamageAbAttr:JD,PostFaintHPDamageAbAttr:$D,RedirectMoveAbAttr:qD,RedirectTypeMoveAbAttr:fr,BlockRedirectAbAttr:Fr,ReduceStatusEffectDurationAbAttr:zD,FlinchEffectAbAttr:jD,FlinchStatStageChangeAbAttr:Al,IncreasePpAbAttr:El,ForceSwitchOutImmunityAbAttr:Yr,ReduceBerryUseThresholdAbAttr:el,WeightMultiplierAbAttr:Wr,SyncEncounterNatureAbAttr:Rl,MoveAbilityBypassAbAttr:HL,AlwaysHitAbAttr:Ol,IgnoreProtectOnContactAbAttr:Il,InfiltratorAbAttr:tl,ReflectStatusMoveAbAttr:Ll,NoTransformAbilityAbAttr:KR,NoFusionAbilityAbAttr:ze,IgnoreTypeImmunityAbAttr:hr,IgnoreTypeStatusEffectImmunityAbAttr:Nl,MoneyAbAttr:Sl,PostSummonStatStageChangeOnArenaAbAttr:Tl,FormBlockDamageAbAttr:dr,PreSummonAbAttr:sl,IllusionPreSummonAbAttr:al,IllusionBreakAbAttr:nl,PostDefendIllusionBreakAbAttr:rl,IllusionPostBattleAbAttr:il,BypassSpeedChanceAbAttr:Cl,PreventBypassSpeedChanceAbAttr:Ul,TerrainEventTypeChangeAbAttr:ol,PostDamageAbAttr:Ml,PostDamageForceSwitchAbAttr:pr});function K3(R){R.waveData.abilityRevealed=!0}r(K3,"setAbilityRevealed");function f3(){return T.getField(!0).filter(R=>R.hasAbility(O.FORECAST)&&R.species.speciesId===A.CASTFORM||R.hasAbility(O.FLOWER_GIFT)&&R.species.speciesId===A.CHERRIM)}r(f3,"getPokemonWithWeatherBasedForms");function Nv(){fe.push(new X(O.NONE,3),new X(O.STENCH,3).attr(bM,!1,(R,e,I)=>!I.hasAttr("FlinchAttr")&&!I.hitsSubstitute(R,e)?10:0,d.FLINCHED),new X(O.DRIZZLE,3).attr(EI,Z.RAIN).attr(OI,Z.RAIN),new X(O.SPEED_BOOST,3).attr(WD),new X(O.BATTLE_ARMOR,3).attr(Dr).ignorable(),new X(O.STURDY,3).attr(rM).attr(_D).ignorable(),new X(O.DAMP,3).attr(pM).ignorable(),new X(O.LIMBER,3).attr(AO,J.PARALYSIS).attr(eI,J.PARALYSIS).ignorable(),new X(O.SAND_VEIL,3).attr(ee,c.EVA,1.2).attr(Dt,Z.SANDSTORM).condition(NR(Z.SANDSTORM)).ignorable(),new X(O.STATIC,3).attr(FL,30,J.PARALYSIS).bypassFaint(),new X(O.VOLT_ABSORB,3).attr(DL,t.ELECTRIC).ignorable(),new X(O.WATER_ABSORB,3).attr(DL,t.WATER).ignorable(),new X(O.OBLIVIOUS,3).attr(cI,[d.INFATUATED,d.TAUNT]).attr(nr,d.INFATUATED,d.TAUNT).attr(PL).ignorable(),new X(O.CLOUD_NINE,3).attr(_r,!0).attr(ar,_.t("abilityTriggers:weatherEffectDisappeared")).attr(ir).attr(Kr).bypassFaint(),new X(O.COMPOUND_EYES,3).attr(ee,c.ACC,1.3),new X(O.INSOMNIA,3).attr(AO,J.SLEEP).attr(eI,J.SLEEP).attr(cI,d.DROWSY).ignorable(),new X(O.COLOR_CHANGE,3).attr(uM).condition(Li()),new X(O.IMMUNITY,3).attr(AO,J.POISON,J.TOXIC).attr(eI,J.POISON,J.TOXIC).ignorable(),new X(O.FLASH_FIRE,3).attr(m0,t.FIRE,d.FIRE_BOOST,1).ignorable(),new X(O.SHIELD_DUST,3).attr(dM).ignorable(),new X(O.OWN_TEMPO,3).attr(cI,d.CONFUSED).attr(nr,d.CONFUSED).attr(PL).ignorable(),new X(O.SUCTION_CUPS,3).attr(Yr).ignorable(),new X(O.INTIMIDATE,3).attr(Wt,[c.ATK],-1,!1,!0),new X(O.SHADOW_TAG,3).attr(tS,(R,e)=>!e.hasAbility(O.SHADOW_TAG)),new X(O.ROUGH_SKIN,3).attr(qn,8).bypassFaint(),new X(O.WONDER_GUARD,3).attr(MM).uncopiable().ignorable(),new X(O.LEVITATE,3).attr(oM,t.GROUND,R=>!R.getTag(Sa)&&!T.arena.getTag(CA.GRAVITY)).ignorable(),new X(O.EFFECT_SPORE,3).attr(BM),new X(O.SYNCHRONIZE,3).attr(Rl).attr(QM),new X(O.CLEAR_BODY,3).attr(RI).ignorable(),new X(O.NATURAL_CURE,3).attr(tD),new X(O.LIGHTNING_ROD,3).attr(fr,t.ELECTRIC).attr(OL,t.ELECTRIC,c.SPATK,1).ignorable(),new X(O.SERENE_GRACE,3).attr(Ar,2),new X(O.SWIFT_SWIM,3).attr(ee,c.SPD,2).condition(NR(Z.RAIN,Z.HEAVY_RAIN)),new X(O.CHLOROPHYLL,3).attr(ee,c.SPD,2).condition(NR(Z.SUNNY,Z.HARSH_SUN)),new X(O.ILLUMINATE,3).attr(RI,c.ACC).attr(oL).attr(ES,[c.EVA]).ignorable(),new X(O.TRACE,3).attr(eD).uncopiable(),new X(O.HUGE_POWER,3).attr(ee,c.ATK,2),new X(O.POISON_POINT,3).attr(FL,30,J.POISON).bypassFaint(),new X(O.INNER_FOCUS,3).attr(cI,d.FLINCHED).attr(PL).ignorable(),new X(O.MAGMA_ARMOR,3).attr(AO,J.FREEZE).attr(eI,J.FREEZE).ignorable(),new X(O.WATER_VEIL,3).attr(AO,J.BURN).attr(eI,J.BURN).ignorable(),new X(O.MAGNET_PULL,3).attr(tS,(R,e)=>e.getTypes(!0).includes(t.STEEL)||e.getTypes(!0).includes(t.STELLAR)&&e.getTypes().includes(t.STEEL)),new X(O.SOUNDPROOF,3).attr(zI,(R,e,I)=>R!==e&&I.hasFlag(JA.SOUND_BASED)).ignorable(),new X(O.RAIN_DISH,3).attr(RS,1,Z.RAIN,Z.HEAVY_RAIN),new X(O.SAND_STREAM,3).attr(EI,Z.SANDSTORM).attr(OI,Z.SANDSTORM),new X(O.PRESSURE,3).attr(El).attr(BR,R=>_.t("abilityTriggers:postSummonPressure",{pokemonNameWithAffix:Q(R)})),new X(O.THICK_FAT,3).attr(JI,t.FIRE,.5).attr(JI,t.ICE,.5).ignorable(),new X(O.EARLY_BIRD,3).attr(zD,J.SLEEP),new X(O.FLAME_BODY,3).attr(FL,30,J.BURN).bypassFaint(),new X(O.RUN_AWAY,3).attr(bD),new X(O.KEEN_EYE,3).attr(RI,c.ACC).ignorable(),new X(O.HYPER_CUTTER,3).attr(RI,c.ATK).ignorable(),new X(O.PICKUP,3).attr(QD).unsuppressable(),new X(O.TRUANT,3).attr(uI,d.TRUANT,1,!1),new X(O.HUSTLE,3).attr(ee,c.ATK,1.5).attr(ee,c.ACC,.8,(R,e,I)=>I.category===G.PHYSICAL),new X(O.CUTE_CHARM,3).attr(KM,30,d.INFATUATED),new X(O.PLUS,3).conditionalAttr(R=>T.currentBattle.double&&[O.PLUS,O.MINUS].some(e=>{var I;return((I=R.getAlly())==null?void 0:I.hasAbility(e))??!1}),ee,c.SPATK,1.5),new X(O.MINUS,3).conditionalAttr(R=>T.currentBattle.double&&[O.PLUS,O.MINUS].some(e=>{var I;return((I=R.getAlly())==null?void 0:I.hasAbility(e))??!1}),ee,c.SPATK,1.5),new X(O.FORECAST,3,-2).uncopiable().unreplaceable().attr(ze).attr(Cr,O.FORECAST).attr(Pr,O.FORECAST,[Z.NONE,Z.SANDSTORM,Z.STRONG_WINDS,Z.FOG]),new X(O.STICKY_HOLD,3).attr(iM).bypassFaint().ignorable(),new X(O.SHED_SKIN,3).conditionalAttr(R=>!DA(3),OS),new X(O.GUTS,3).attr(wD).conditionalAttr(R=>!!R.status||R.hasAbility(O.COMATOSE),ee,c.ATK,1.5),new X(O.MARVEL_SCALE,3).conditionalAttr(R=>!!R.status||R.hasAbility(O.COMATOSE),ee,c.DEF,1.5).ignorable(),new X(O.LIQUID_OOZE,3).attr(PM),new X(O.OVERGROW,3).attr(_L,t.GRASS),new X(O.BLAZE,3).attr(_L,t.FIRE),new X(O.TORRENT,3).attr(_L,t.WATER),new X(O.SWARM,3).attr(_L,t.BUG),new X(O.ROCK_HEAD,3).attr(TM),new X(O.DROUGHT,3).attr(EI,Z.SUNNY).attr(OI,Z.SUNNY),new X(O.ARENA_TRAP,3).attr(tS,(R,e)=>e.isGrounded()).attr(oL),new X(O.VITAL_SPIRIT,3).attr(AO,J.SLEEP).attr(eI,J.SLEEP).attr(cI,d.DROWSY).ignorable(),new X(O.WHITE_SMOKE,3).attr(RI).ignorable(),new X(O.PURE_POWER,3).attr(ee,c.ATK,2),new X(O.SHELL_ARMOR,3).attr(Dr).ignorable(),new X(O.AIR_LOCK,3).attr(_r,!0).attr(ar,_.t("abilityTriggers:weatherEffectDisappeared")).attr(ir).attr(Kr).bypassFaint(),new X(O.TANGLED_FEET,4).conditionalAttr(R=>!!R.getTag(d.CONFUSED),ee,c.EVA,2).ignorable(),new X(O.MOTOR_DRIVE,4).attr(OL,t.ELECTRIC,c.SPD,1).ignorable(),new X(O.RIVALRY,4).attr(je,(R,e,I)=>(R==null?void 0:R.gender)!==mA.GENDERLESS&&(e==null?void 0:e.gender)!==mA.GENDERLESS&&(R==null?void 0:R.gender)===(e==null?void 0:e.gender),1.25,!0).attr(je,(R,e,I)=>(R==null?void 0:R.gender)!==mA.GENDERLESS&&(e==null?void 0:e.gender)!==mA.GENDERLESS&&(R==null?void 0:R.gender)!==(e==null?void 0:e.gender),.75),new X(O.STEADFAST,4).attr(Al,[c.SPD],1),new X(O.SNOW_CLOAK,4).attr(ee,c.EVA,1.2).attr(Dt,Z.HAIL).condition(NR(Z.HAIL,Z.SNOW)).ignorable(),new X(O.GLUTTONY,4).attr(el),new X(O.ANGER_POINT,4).attr(fM,c.ATK,6),new X(O.UNBURDEN,4).attr(yD,d.UNBURDEN).bypassFaint().edgeCase(),new X(O.HEATPROOF,4).attr(JI,t.FIRE,.5).attr(vD,.5).ignorable(),new X(O.SIMPLE,4).attr(Br,2).ignorable(),new X(O.DRY_SKIN,4).attr(ur,2,Z.SUNNY,Z.HARSH_SUN).attr(RS,2,Z.RAIN,Z.HEAVY_RAIN).attr(JI,t.FIRE,1.25).attr(DL,t.WATER).ignorable(),new X(O.DOWNLOAD,4).attr(ED),new X(O.IRON_FIST,4).attr(je,(R,e,I)=>I.hasFlag(JA.PUNCHING_MOVE),1.2),new X(O.POISON_HEAL,4).attr(KD,J.TOXIC,J.POISON).attr(lD,J.TOXIC,J.POISON),new X(O.ADAPTABILITY,4).attr(CM),new X(O.SKILL_LINK,4).attr(XD),new X(O.HYDRATION,4).attr(OS).condition(NR(Z.RAIN,Z.HEAVY_RAIN)),new X(O.SOLAR_POWER,4).attr(ur,2,Z.SUNNY,Z.HARSH_SUN).attr(ee,c.SPATK,1.5).condition(NR(Z.SUNNY,Z.HARSH_SUN)),new X(O.QUICK_FEET,4).conditionalAttr(R=>R.status?R.status.effect===J.PARALYSIS:!1,ee,c.SPD,2).conditionalAttr(R=>!!R.status||R.hasAbility(O.COMATOSE),ee,c.SPD,1.5),new X(O.NORMALIZE,4).attr($I,t.NORMAL,1.2),new X(O.SNIPER,4).attr(oD,1.5),new X(O.MAGIC_GUARD,4).attr(DD),new X(O.NO_GUARD,4).attr(Ol).attr(oL),new X(O.STALL,4).attr(ct,(R,e)=>!0,-.2),new X(O.TECHNICIAN,4).attr(je,(R,e,I)=>{const L=new VA(I.power);return Ce("VariablePowerAttr",R,e,I,L),L.value<=60},1.5),new X(O.LEAF_GUARD,4).attr(AO).condition(NR(Z.SUNNY,Z.HARSH_SUN)).ignorable(),new X(O.KLUTZ,4,1).unimplemented(),new X(O.MOLD_BREAKER,4).attr(BR,R=>_.t("abilityTriggers:postSummonMoldBreaker",{pokemonNameWithAffix:Q(R)})).attr(HL),new X(O.SUPER_LUCK,4).attr(UD),new X(O.AFTERMATH,4).attr(JD,4).bypassFaint(),new X(O.ANTICIPATION,4).conditionalAttr(tv(),BR,R=>_.t("abilityTriggers:postSummonAnticipation",{pokemonNameWithAffix:Q(R)})),new X(O.FOREWARN,4).attr(HD),new X(O.UNAWARE,4).attr(ES,[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.ACC,c.EVA]).ignorable(),new X(O.TINTED_LENS,4).attr(mM,2,(R,e,I)=>((e==null?void 0:e.getMoveEffectiveness(R,I))??1)<=.5),new X(O.FILTER,4).attr(eO,(R,e,I)=>R.getMoveEffectiveness(e,I)>=2,.75).ignorable(),new X(O.SLOW_START,4).attr(uI,d.SLOW_START,5),new X(O.SCRAPPY,4).attr(hr,t.GHOST,[t.NORMAL,t.FIGHTING]).attr(PL),new X(O.STORM_DRAIN,4).attr(fr,t.WATER).attr(OL,t.WATER,c.SPATK,1).ignorable(),new X(O.ICE_BODY,4).attr(Dt,Z.HAIL).attr(RS,1,Z.HAIL,Z.SNOW),new X(O.SOLID_ROCK,4).attr(eO,(R,e,I)=>R.getMoveEffectiveness(e,I)>=2,.75).ignorable(),new X(O.SNOW_WARNING,4).attr(EI,Z.SNOW).attr(OI,Z.SNOW),new X(O.HONEY_GATHER,4).attr(Sl).unsuppressable(),new X(O.FRISK,4).attr(uD),new X(O.RECKLESS,4).attr(je,(R,e,I)=>I.hasFlag(JA.RECKLESS_MOVE),1.2),new X(O.MULTITYPE,4).attr(ze).uncopiable().unsuppressable().unreplaceable(),new X(O.FLOWER_GIFT,4,-2).conditionalAttr(NR(Z.SUNNY||Z.HARSH_SUN),ee,c.ATK,1.5).conditionalAttr(NR(Z.SUNNY||Z.HARSH_SUN),ee,c.SPDEF,1.5).conditionalAttr(NR(Z.SUNNY||Z.HARSH_SUN),AS,c.ATK,1.5).conditionalAttr(NR(Z.SUNNY||Z.HARSH_SUN),AS,c.SPDEF,1.5).attr(ze).attr(Cr,O.FLOWER_GIFT).attr(Pr,O.FLOWER_GIFT,[Z.NONE,Z.SANDSTORM,Z.STRONG_WINDS,Z.FOG,Z.HAIL,Z.HEAVY_RAIN,Z.SNOW,Z.RAIN]).uncopiable().unreplaceable().ignorable(),new X(O.BAD_DREAMS,4).attr(hD),new X(O.PICKPOCKET,5).attr(kM,(R,e,I)=>I.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:e,target:R})).condition(Li()),new X(O.SHEER_FORCE,5).attr(je,(R,e,I)=>I.chance>=1,1.3).attr(Ar,0),new X(O.CONTRARY,5).attr(Br,-1).ignorable(),new X(O.UNNERVE,5,1).attr(IS),new X(O.DEFIANT,5).attr(jn,(R,e,I)=>I<0,[c.ATK],2),new X(O.DEFEATIST,5).attr(ee,c.ATK,.5).attr(ee,c.SPATK,.5).condition(R=>R.getHpRatio()<=.5),new X(O.CURSED_BODY,5).attr(hM,30).bypassFaint(),new X(O.HEALER,5).conditionalAttr(R=>!SA(R.getAlly())&&DA(10)<3,OS,!0),new X(O.FRIEND_GUARD,5).attr(UM,.75).ignorable(),new X(O.WEAK_ARMOR,5).attr(iO,(R,e,I)=>I.category===G.PHYSICAL,c.DEF,-1).attr(iO,(R,e,I)=>I.category===G.PHYSICAL,c.SPD,2),new X(O.HEAVY_METAL,5).attr(Wr,2).ignorable(),new X(O.LIGHT_METAL,5).attr(Wr,.5).ignorable(),new X(O.MULTISCALE,5).attr(eO,(R,e,I)=>R.isFullHp(),.5).ignorable(),new X(O.TOXIC_BOOST,5).attr(je,(R,e,I)=>{var L,N;return I.category===G.PHYSICAL&&(((L=R==null?void 0:R.status)==null?void 0:L.effect)===J.POISON||((N=R==null?void 0:R.status)==null?void 0:N.effect)===J.TOXIC)},1.5),new X(O.FLARE_BOOST,5).attr(je,(R,e,I)=>{var L;return I.category===G.SPECIAL&&((L=R==null?void 0:R.status)==null?void 0:L.effect)===J.BURN},1.5),new X(O.HARVEST,5).attr(fD,R=>.5*(NR(Z.SUNNY,Z.HARSH_SUN)(R)?2:1)).edgeCase(),new X(O.TELEPATHY,5).attr(zI,(R,e,I)=>R.getAlly()===e&&I.is("AttackMove")).ignorable(),new X(O.MOODY,5).attr(YD),new X(O.OVERCOAT,5).attr(Dt).attr(zI,(R,e,I)=>R!==e&&I.hasFlag(JA.POWDER_MOVE)).ignorable(),new X(O.POISON_TOUCH,5).attr(ZM,30,J.POISON),new X(O.REGENERATOR,5).attr(LD),new X(O.BIG_PECKS,5).attr(RI,c.DEF).ignorable(),new X(O.SAND_RUSH,5).attr(ee,c.SPD,2).attr(Dt,Z.SANDSTORM).condition(NR(Z.SANDSTORM)),new X(O.WONDER_SKIN,5).attr(_M).ignorable(),new X(O.ANALYTIC,5).attr(je,(R,e,I)=>{const L=T.phaseManager.findPhase(N=>N.is("MovePhase")&&N.pokemon.id!==(R==null?void 0:R.id));return SA(L)},1.3),new X(O.ILLUSION,5).attr(al,!1).attr(nl).attr(rl,!0).attr(ze).conditionalAttr(R=>R.isAllowedInBattle(),il,!1).uncopiable().bypassFaint(),new X(O.IMPOSTER,5).attr(OD).uncopiable(),new X(O.INFILTRATOR,5).attr(tl).partial(),new X(O.MUMMY,5).attr(zn,O.MUMMY).bypassFaint(),new X(O.MOXIE,5).attr(Mt,c.ATK,1),new X(O.JUSTIFIED,5).attr(iO,(R,e,I)=>e.getMoveType(I)===t.DARK&&I.category!==G.STATUS,c.ATK,1),new X(O.RATTLED,5).attr(iO,(R,e,I)=>{const L=e.getMoveType(I);return I.category!==G.STATUS&&(L===t.DARK||L===t.BUG||L===t.GHOST)},c.SPD,1).attr(Tr,[c.SPD],1),new X(O.MAGIC_BOUNCE,5).attr(Ll).ignorable().edgeCase(),new X(O.SAP_SIPPER,5).attr(OL,t.GRASS,c.ATK,1).ignorable(),new X(O.PRANKSTER,5).attr(ct,(R,e)=>e.category===G.STATUS,1),new X(O.SAND_FORCE,5).attr(VO,t.ROCK,1.3).attr(VO,t.GROUND,1.3).attr(VO,t.STEEL,1.3).attr(Dt,Z.SANDSTORM).condition(NR(Z.SANDSTORM)),new X(O.IRON_BARBS,5).attr(qn,8).bypassFaint(),new X(O.ZEN_MODE,5).attr(mO,()=>0).attr(qI,R=>R.getHpRatio()<=.5?1:0).attr(BI,R=>R.getHpRatio()<=.5?1:0).attr(ze).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new X(O.VICTORY_STAR,5).attr(ee,c.ACC,1.1).attr(AS,c.ACC,1.1,!1),new X(O.TURBOBLAZE,5).attr(BR,R=>_.t("abilityTriggers:postSummonTurboblaze",{pokemonNameWithAffix:Q(R)})).attr(HL),new X(O.TERAVOLT,5).attr(BR,R=>_.t("abilityTriggers:postSummonTeravolt",{pokemonNameWithAffix:Q(R)})).attr(HL),new X(O.AROMA_VEIL,6).attr(jS,[d.INFATUATED,d.TAUNT,d.DISABLED,d.TORMENT,d.HEAL_BLOCK]).ignorable(),new X(O.FLOWER_VEIL,6).attr(nD,(R,e)=>e?R.getTypes().includes(t.GRASS)&&R.id!==e.id:!1).attr(CD,R=>R.getTypes().includes(t.GRASS),[d.DROWSY]).attr(rD,R=>R.getTypes().includes(t.GRASS)).ignorable(),new X(O.CHEEK_POUCH,6).attr(ZD,1/3),new X(O.PROTEAN,6).attr(er),new X(O.FUR_COAT,6).attr(eO,(R,e,I)=>I.category===G.PHYSICAL,.5).ignorable(),new X(O.MAGICIAN,6).attr(xM),new X(O.BULLETPROOF,6).attr(zI,(R,e,I)=>R!==e&&I.hasFlag(JA.BALLBOMB_MOVE)).ignorable(),new X(O.COMPETITIVE,6).attr(jn,(R,e,I)=>I<0,[c.SPATK],2),new X(O.STRONG_JAW,6).attr(je,(R,e,I)=>I.hasFlag(JA.BITING_MOVE),1.5),new X(O.REFRIGERATE,6).attr($I,t.ICE,1.2,(R,e,I)=>I.type===t.NORMAL),new X(O.SWEET_VEIL,6).attr(zS,J.SLEEP).attr(rr,J.SLEEP).attr(jS,d.DROWSY).ignorable().partial(),new X(O.STANCE_CHANGE,6).attr(ze).uncopiable().unreplaceable().unsuppressable(),new X(O.GALE_WINGS,6).attr(ct,(R,e)=>R.isFullHp()&&R.getMoveType(e)===t.FLYING,1),new X(O.MEGA_LAUNCHER,6).attr(je,(R,e,I)=>I.hasFlag(JA.PULSE_MOVE),1.5),new X(O.GRASS_PELT,6).conditionalAttr(Ni(bA.GRASSY),ee,c.DEF,1.5).ignorable(),new X(O.SYMBIOSIS,6).unimplemented(),new X(O.TOUGH_CLAWS,6).attr(je,(R,e,I)=>I.hasFlag(JA.MAKES_CONTACT),1.3),new X(O.PIXILATE,6).attr($I,t.FAIRY,1.2,(R,e,I)=>I.type===t.NORMAL),new X(O.GOOEY,6).attr(iO,(R,e,I)=>I.hasFlag(JA.MAKES_CONTACT),c.SPD,-1,!1),new X(O.AERILATE,6).attr($I,t.FLYING,1.2,(R,e,I)=>I.type===t.NORMAL),new X(O.PARENTAL_BOND,6).attr(gM,.25),new X(O.DARK_AURA,6).attr(BR,R=>_.t("abilityTriggers:postSummonDarkAura",{pokemonNameWithAffix:Q(R)})).attr(GL,t.DARK,4/3),new X(O.FAIRY_AURA,6).attr(BR,R=>_.t("abilityTriggers:postSummonFairyAura",{pokemonNameWithAffix:Q(R)})).attr(GL,t.FAIRY,4/3),new X(O.AURA_BREAK,6).ignorable().conditionalAttr(R=>T.getField(!0).some(e=>e.hasAbility(O.DARK_AURA)),GL,t.DARK,9/16).conditionalAttr(R=>T.getField(!0).some(e=>e.hasAbility(O.FAIRY_AURA)),GL,t.FAIRY,9/16).conditionalAttr(R=>T.getField(!0).some(e=>e.hasAbility(O.DARK_AURA)||e.hasAbility(O.FAIRY_AURA)),BR,R=>_.t("abilityTriggers:postSummonAuraBreak",{pokemonNameWithAffix:Q(R)})),new X(O.PRIMORDIAL_SEA,6).attr(EI,Z.HEAVY_RAIN).attr(OI,Z.HEAVY_RAIN).attr(eS).bypassFaint(),new X(O.DESOLATE_LAND,6).attr(EI,Z.HARSH_SUN).attr(OI,Z.HARSH_SUN).attr(eS).bypassFaint(),new X(O.DELTA_STREAM,6).attr(EI,Z.STRONG_WINDS).attr(OI,Z.STRONG_WINDS).attr(eS).bypassFaint(),new X(O.STAMINA,7).attr(iO,(R,e,I)=>I.category!==G.STATUS,c.DEF,1),new X(O.WIMP_OUT,7).attr(pr).edgeCase(),new X(O.EMERGENCY_EXIT,7).attr(pr).edgeCase(),new X(O.WATER_COMPACTION,7).attr(iO,(R,e,I)=>e.getMoveType(I)===t.WATER&&I.category!==G.STATUS,c.DEF,2),new X(O.MERCILESS,7).attr(MD,(R,e,I)=>{var L,N;return((L=e==null?void 0:e.status)==null?void 0:L.effect)===J.TOXIC||((N=e==null?void 0:e.status)==null?void 0:N.effect)===J.POISON}),new X(O.SHIELDS_DOWN,7,-1).attr(mO,()=>0).attr(qI,R=>R.formIndex%7+(R.getHpRatio()<=.5?7:0)).attr(BI,R=>R.formIndex%7+(R.getHpRatio()<=.5?7:0)).conditionalAttr(R=>R.formIndex!==7,AO).conditionalAttr(R=>R.formIndex!==7,cI,d.DROWSY).attr(ze).attr(KR).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new X(O.STAKEOUT,7).attr(je,(R,e,I)=>!!(e!=null&&e.turnData.switchedInThisTurn),2),new X(O.WATER_BUBBLE,7).attr(JI,t.FIRE,.5).attr(VO,t.WATER,2).attr(AO,J.BURN).attr(eI,J.BURN).ignorable(),new X(O.STEELWORKER,7).attr(VO,t.STEEL),new X(O.BERSERK,7).attr(jN,(R,e,I)=>I.category!==G.STATUS,.5,[c.SPATK],1).condition(Li()),new X(O.SLUSH_RUSH,7).attr(ee,c.SPD,2).condition(NR(Z.HAIL,Z.SNOW)),new X(O.LONG_REACH,7).attr(GD),new X(O.LIQUID_VOICE,7).attr($I,t.WATER,1,(R,e,I)=>I.hasFlag(JA.SOUND_BASED)),new X(O.TRIAGE,7).attr(ct,(R,e)=>e.hasFlag(JA.TRIAGE_MOVE),3),new X(O.GALVANIZE,7).attr($I,t.ELECTRIC,1.2,(R,e,I)=>I.type===t.NORMAL),new X(O.SURGE_SURFER,7).conditionalAttr(Ni(bA.ELECTRIC),ee,c.SPD,2),new X(O.SCHOOLING,7,-1).attr(mO,()=>0).attr(qI,R=>R.level<20||R.getHpRatio()<=.25?0:1).attr(BI,R=>R.level<20||R.getHpRatio()<=.25?0:1).attr(ze).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new X(O.DISGUISE,7).attr(KR).attr(ze).conditionalAttr(R=>R.formIndex===0,uI,d.DISGUISE,0,!1).attr(dr,(R,e,I)=>!!R.getTag(d.DISGUISE)&&R.getMoveEffectiveness(e,I)>0,0,d.DISGUISE,(R,e)=>_.t("abilityTriggers:disguiseAvoidedDamage",{pokemonNameWithAffix:Q(R),abilityName:e}),R=>UE(R.getMaxHp()/8)).attr(mO,()=>0).uncopiable().unreplaceable().unsuppressable().bypassFaint().ignorable(),new X(O.BATTLE_BOND,7).attr(JM,()=>2).attr(mO,()=>1).attr(ze).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new X(O.POWER_CONSTRUCT,7).conditionalAttr(R=>R.formIndex===2||R.formIndex===4,mO,()=>2).conditionalAttr(R=>R.formIndex===3||R.formIndex===5,mO,()=>3).conditionalAttr(R=>R.formIndex===2||R.formIndex===4,qI,R=>R.getHpRatio()<=.5||R.getFormKey()==="complete"?4:2).conditionalAttr(R=>R.formIndex===2||R.formIndex===4,BI,R=>R.getHpRatio()<=.5||R.getFormKey()==="complete"?4:2).conditionalAttr(R=>R.formIndex===3||R.formIndex===5,qI,R=>R.getHpRatio()<=.5||R.getFormKey()==="10-complete"?5:3).conditionalAttr(R=>R.formIndex===3||R.formIndex===5,BI,R=>R.getHpRatio()<=.5||R.getFormKey()==="10-complete"?5:3).attr(ze).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new X(O.CORROSION,7).attr(Nl,[J.POISON,J.TOXIC],[t.STEEL,t.POISON]).edgeCase(),new X(O.COMATOSE,7).attr(AO,...KT()).attr(cI,d.DROWSY).uncopiable().unreplaceable().unsuppressable(),new X(O.QUEENLY_MAJESTY,7).attr(zN).ignorable(),new X(O.INNARDS_OUT,7).attr($D).bypassFaint(),new X(O.DANCER,7).attr(gD),new X(O.BATTERY,7).attr(Ir,[G.SPECIAL],1.3),new X(O.FLUFFY,7).attr(eO,(R,e,I)=>I.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:e,target:R}),.5).attr(eO,(R,e,I)=>e.getMoveType(I)===t.FIRE,2).ignorable(),new X(O.DAZZLING,7).attr(zN).ignorable(),new X(O.SOUL_HEART,7).attr($M,c.SPATK,1),new X(O.TANGLING_HAIR,7).attr(iO,(R,e,I)=>I.doesFlagEffectApply({flag:JA.MAKES_CONTACT,user:e,target:R}),c.SPD,-1,!1),new X(O.RECEIVER,7).attr(Sr).uncopiable(),new X(O.POWER_OF_ALCHEMY,7).attr(Sr).uncopiable(),new X(O.BEAST_BOOST,7).attr(Mt,R=>{let e,I=0;for(const L of dL){const N=R.getStat(L,!1);N>I&&(e=L,I=N)}return e},1),new X(O.RKS_SYSTEM,7).attr(ze).uncopiable().unreplaceable().unsuppressable(),new X(O.ELECTRIC_SURGE,7).attr(ut,bA.ELECTRIC).attr(Bt,bA.ELECTRIC),new X(O.PSYCHIC_SURGE,7).attr(ut,bA.PSYCHIC).attr(Bt,bA.PSYCHIC),new X(O.MISTY_SURGE,7).attr(ut,bA.MISTY).attr(Bt,bA.MISTY),new X(O.GRASSY_SURGE,7).attr(ut,bA.GRASSY).attr(Bt,bA.GRASSY),new X(O.FULL_METAL_BODY,7).attr(RI),new X(O.SHADOW_SHIELD,7).attr(eO,(R,e,I)=>R.isFullHp(),.5),new X(O.PRISM_ARMOR,7).attr(eO,(R,e,I)=>R.getMoveEffectiveness(e,I)>=2,.75),new X(O.NEUROFORCE,7).attr(je,(R,e,I)=>((e==null?void 0:e.getMoveEffectiveness(R,I))??1)>=2,1.25),new X(O.INTREPID_SWORD,8).attr(Wt,[c.ATK],1,!0),new X(O.DAUNTLESS_SHIELD,8).attr(Wt,[c.DEF],1,!0),new X(O.LIBERO,8).attr(er),new X(O.BALL_FETCH,8).attr(dD).condition($2(O.BALL_FETCH)),new X(O.COTTON_DOWN,8).attr(iO,(R,e,I)=>I.category!==G.STATUS,c.SPD,-1,!1,!0).bypassFaint(),new X(O.PROPELLER_TAIL,8).attr(Fr),new X(O.MIRROR_ARMOR,8).attr(TD).ignorable(),new X(O.GULP_MISSILE,8).attr(KR).attr(ze).unsuppressable().uncopiable().unreplaceable().bypassFaint(),new X(O.STALWART,8).attr(Fr),new X(O.STEAM_ENGINE,8).attr(iO,(R,e,I)=>{const L=e.getMoveType(I);return I.category!==G.STATUS&&(L===t.FIRE||L===t.WATER)},c.SPD,6),new X(O.PUNK_ROCK,8).attr(je,(R,e,I)=>I.hasFlag(JA.SOUND_BASED),1.3).attr(eO,(R,e,I)=>I.hasFlag(JA.SOUND_BASED),.5).ignorable(),new X(O.SAND_SPIT,8).attr(YM,Z.SANDSTORM,(R,e,I)=>I.category!==G.STATUS).bypassFaint(),new X(O.ICE_SCALES,8).attr(eO,(R,e,I)=>I.category===G.SPECIAL,.5).ignorable(),new X(O.RIPEN,8).attr(xD),new X(O.ICE_FACE,8,-2).attr(KR).attr(ze).conditionalAttr(R=>R.formIndex===0,uI,d.ICE_FACE,0,!1).conditionalAttr(NR(Z.HAIL,Z.SNOW),uI,d.ICE_FACE,0).attr(cD,d.ICE_FACE,0,Z.HAIL,Z.SNOW).attr(dr,(R,e,I)=>I.category===G.PHYSICAL&&!!R.getTag(d.ICE_FACE),0,d.ICE_FACE,(R,e)=>_.t("abilityTriggers:iceFaceAvoidedDamage",{pokemonNameWithAffix:Q(R),abilityName:e})).attr(mO,()=>0).uncopiable().unreplaceable().unsuppressable().bypassFaint().ignorable(),new X(O.POWER_SPOT,8).attr(Ir,[G.SPECIAL,G.PHYSICAL],1.3),new X(O.MIMICRY,8,-1).attr(ol),new X(O.SCREEN_CLEANER,8).attr(qM,[CA.AURORA_VEIL,CA.LIGHT_SCREEN,CA.REFLECT]),new X(O.STEELY_SPIRIT,8).attr(VM,t.STEEL),new X(O.PERISH_BODY,8).attr(FM,4).bypassFaint(),new X(O.WANDERING_SPIRIT,8).attr(WM).bypassFaint().edgeCase(),new X(O.GORILLA_TACTICS,8).attr(vM),new X(O.NEUTRALIZING_GAS,8,2).attr(zM,!0,CA.NEUTRALIZING_GAS,0).attr(SD).uncopiable().attr(KR).bypassFaint(),new X(O.PASTEL_VEIL,8).attr(rr,J.POISON,J.TOXIC).attr(zS,J.POISON,J.TOXIC).ignorable(),new X(O.HUNGER_SWITCH,8).attr(BI,R=>R.getFormKey()?0:1).attr(BI,R=>R.getFormKey()?1:0).attr(KR).attr(ze).condition(R=>!R.isTerastallized).uncopiable().unreplaceable(),new X(O.QUICK_DRAW,8).attr(Cl,30),new X(O.UNSEEN_FIST,8).attr(Il),new X(O.CURIOUS_MEDICINE,8).attr(AD),new X(O.TRANSISTOR,8).attr(VO,t.ELECTRIC,1.3),new X(O.DRAGONS_MAW,8).attr(VO,t.DRAGON),new X(O.CHILLING_NEIGH,8).attr(Mt,c.ATK,1),new X(O.GRIM_NEIGH,8).attr(Mt,c.SPATK,1),new X(O.AS_ONE_GLASTRIER,8,1).attr(BR,R=>_.t("abilityTriggers:postSummonAsOneGlastrier",{pokemonNameWithAffix:Q(R)})).attr(IS).attr(Mt,c.ATK,1).uncopiable().unreplaceable().unsuppressable(),new X(O.AS_ONE_SPECTRIER,8,1).attr(BR,R=>_.t("abilityTriggers:postSummonAsOneSpectrier",{pokemonNameWithAffix:Q(R)})).attr(IS).attr(Mt,c.SPATK,1).uncopiable().unreplaceable().unsuppressable(),new X(O.LINGERING_AROMA,9).attr(zn,O.LINGERING_AROMA).bypassFaint(),new X(O.SEED_SOWER,9).attr(cM,bA.GRASSY).bypassFaint(),new X(O.THERMAL_EXCHANGE,9).attr(iO,(R,e,I)=>e.getMoveType(I)===t.FIRE&&I.category!==G.STATUS,c.ATK,1).attr(AO,J.BURN).attr(eI,J.BURN).ignorable(),new X(O.ANGER_SHELL,9).attr(jN,(R,e,I)=>I.category!==G.STATUS,.5,[c.ATK,c.SPATK,c.SPD],1).attr(jN,(R,e,I)=>I.category!==G.STATUS,.5,[c.DEF,c.SPDEF],-1).condition(Li()),new X(O.PURIFYING_SALT,9).attr(AO).attr(JI,t.GHOST,.5).ignorable(),new X(O.WELL_BAKED_BODY,9).attr(OL,t.FIRE,c.DEF,2).ignorable(),new X(O.WIND_RIDER,9).attr(GM,(R,e,I)=>R!==e&&I.hasFlag(JA.WIND_MOVE)&&I.category!==G.STATUS,c.ATK,1).attr(Tl,CA.TAILWIND).ignorable(),new X(O.GUARD_DOG,9).attr(Tr,[c.ATK],1,!0).attr(Yr).ignorable(),new X(O.ROCKY_PAYLOAD,9).attr(VO,t.ROCK),new X(O.WIND_POWER,9).attr($n,(R,e,I)=>I.hasFlag(JA.WIND_MOVE),d.CHARGED),new X(O.ZERO_TO_HERO,9).uncopiable().unreplaceable().unsuppressable().attr(KR).attr(ze).attr(mO,()=>0).attr(ND,R=>R.isFainted()?R.formIndex:1).bypassFaint(),new X(O.COMMANDER,9).attr(ID).attr(oL).uncopiable().unreplaceable().edgeCase(),new X(O.ELECTROMORPHOSIS,9).attr($n,(R,e,I)=>I.category!==G.STATUS,d.CHARGED),new X(O.PROTOSYNTHESIS,9,-2).conditionalAttr(NR(Z.SUNNY,Z.HARSH_SUN),uI,d.PROTOSYNTHESIS,0,!0).attr(cD,d.PROTOSYNTHESIS,0,Z.SUNNY,Z.HARSH_SUN).uncopiable().attr(KR),new X(O.QUARK_DRIVE,9,-2).conditionalAttr(Ni(bA.ELECTRIC),uI,d.QUARK_DRIVE,0,!0).attr(V0,d.QUARK_DRIVE,0,bA.ELECTRIC).uncopiable().attr(KR),new X(O.GOOD_AS_GOLD,9).attr(zI,(R,e,I)=>R!==e&&I.category===G.STATUS&&![AA.ENEMY_SIDE,AA.BOTH_SIDES,AA.USER_SIDE].includes(I.moveTarget)).edgeCase().ignorable(),new X(O.VESSEL_OF_RUIN,9).attr(lL,c.SPATK,.75).attr(BR,R=>_.t("abilityTriggers:postSummonVesselOfRuin",{pokemonNameWithAffix:Q(R),statName:_.t(aR(c.SPATK))})).ignorable(),new X(O.SWORD_OF_RUIN,9).attr(lL,c.DEF,.75).attr(BR,R=>_.t("abilityTriggers:postSummonSwordOfRuin",{pokemonNameWithAffix:Q(R),statName:_.t(aR(c.DEF))})),new X(O.TABLETS_OF_RUIN,9).attr(lL,c.ATK,.75).attr(BR,R=>_.t("abilityTriggers:postSummonTabletsOfRuin",{pokemonNameWithAffix:Q(R),statName:_.t(aR(c.ATK))})).ignorable(),new X(O.BEADS_OF_RUIN,9).attr(lL,c.SPDEF,.75).attr(BR,R=>_.t("abilityTriggers:postSummonBeadsOfRuin",{pokemonNameWithAffix:Q(R),statName:_.t(aR(c.SPDEF))})),new X(O.ORICHALCUM_PULSE,9).attr(EI,Z.SUNNY).attr(OI,Z.SUNNY).conditionalAttr(NR(Z.SUNNY,Z.HARSH_SUN),ee,c.ATK,4/3),new X(O.HADRON_ENGINE,9).attr(ut,bA.ELECTRIC).attr(Bt,bA.ELECTRIC).conditionalAttr(Ni(bA.ELECTRIC),ee,c.SPATK,4/3),new X(O.OPPORTUNIST,9).attr(VD),new X(O.CUD_CHEW,9).attr(FD),new X(O.SHARPNESS,9).attr(je,(R,e,I)=>I.hasFlag(JA.SLICING_MOVE),1.5),new X(O.SUPREME_OVERLORD,9).attr(yM,(R,e,I)=>1+.1*Math.min(R.isPlayer()?T.arena.playerFaints:T.currentBattle.enemyFaints,5)).partial(),new X(O.COSTAR,9,-2).attr(RD),new X(O.TOXIC_DEBRIS,9).attr(HM,(R,e,I)=>I.category===G.PHYSICAL,CA.TOXIC_SPIKES).bypassFaint(),new X(O.ARMOR_TAIL,9).attr(zN).ignorable(),new X(O.EARTH_EATER,9).attr(DL,t.GROUND).ignorable(),new X(O.MYCELIUM_MIGHT,9).attr(ct,(R,e)=>e.category===G.STATUS,-.2).attr(Ul,(R,e)=>e.category===G.STATUS).attr(HL,(R,e)=>e.category===G.STATUS),new X(O.MINDS_EYE,9).attr(hr,t.GHOST,[t.NORMAL,t.FIGHTING]).attr(RI,c.ACC).attr(ES,[c.EVA]).ignorable(),new X(O.SUPERSWEET_SYRUP,9).attr(Wt,[c.EVA],-1),new X(O.HOSPITALITY,9,-2).attr(jM,4,!0),new X(O.TOXIC_CHAIN,9).attr(tr,!1,30,J.TOXIC),new X(O.EMBODY_ASPECT_TEAL,9).attr(ML,[c.SPD],1).uncopiable().unreplaceable().attr(KR),new X(O.EMBODY_ASPECT_WELLSPRING,9).attr(ML,[c.SPDEF],1).uncopiable().unreplaceable().attr(KR),new X(O.EMBODY_ASPECT_HEARTHFLAME,9).attr(ML,[c.ATK],1).uncopiable().unreplaceable().attr(KR),new X(O.EMBODY_ASPECT_CORNERSTONE,9).attr(ML,[c.DEF],1).uncopiable().unreplaceable().attr(KR),new X(O.TERA_SHIFT,9,2).attr(qI,R=>R.getFormKey()?0:1).uncopiable().unreplaceable().unsuppressable().attr(KR).attr(ze),new X(O.TERA_SHELL,9).attr(DM).uncopiable().unreplaceable().ignorable(),new X(O.TERAFORM_ZERO,9).attr(aM,[Z.SUNNY,Z.RAIN,Z.SANDSTORM,Z.HAIL,Z.SNOW,Z.FOG,Z.HEAVY_RAIN,Z.HARSH_SUN,Z.STRONG_WINDS]).attr(nM,[bA.MISTY,bA.ELECTRIC,bA.GRASSY,bA.PSYCHIC]).uncopiable().unreplaceable().condition($2(O.TERAFORM_ZERO)),new X(O.POISON_PUPPETEER,9).uncopiable().unreplaceable().attr(sD,J.POISON,J.TOXIC))}r(Nv,"initAbilities");const q2={[U.YOUNGSTER]:[{encounter:["dialogue:youngster.encounter.1","dialogue:youngster.encounter.2","dialogue:youngster.encounter.3","dialogue:youngster.encounter.4","dialogue:youngster.encounter.5","dialogue:youngster.encounter.6","dialogue:youngster.encounter.7","dialogue:youngster.encounter.8","dialogue:youngster.encounter.9","dialogue:youngster.encounter.10","dialogue:youngster.encounter.11","dialogue:youngster.encounter.12","dialogue:youngster.encounter.13"],victory:["dialogue:youngster.victory.1","dialogue:youngster.victory.2","dialogue:youngster.victory.3","dialogue:youngster.victory.4","dialogue:youngster.victory.5","dialogue:youngster.victory.6","dialogue:youngster.victory.7","dialogue:youngster.victory.8","dialogue:youngster.victory.9","dialogue:youngster.victory.10","dialogue:youngster.victory.11","dialogue:youngster.victory.12","dialogue:youngster.victory.13"]},{encounter:["dialogue:lass.encounter.1","dialogue:lass.encounter.2","dialogue:lass.encounter.3","dialogue:lass.encounter.4","dialogue:lass.encounter.5","dialogue:lass.encounter.6","dialogue:lass.encounter.7","dialogue:lass.encounter.8","dialogue:lass.encounter.9"],victory:["dialogue:lass.victory.1","dialogue:lass.victory.2","dialogue:lass.victory.3","dialogue:lass.victory.4","dialogue:lass.victory.5","dialogue:lass.victory.6","dialogue:lass.victory.7","dialogue:lass.victory.8","dialogue:lass.victory.9"]}],[U.BREEDER]:[{encounter:["dialogue:breeder.encounter.1","dialogue:breeder.encounter.2","dialogue:breeder.encounter.3"],victory:["dialogue:breeder.victory.1","dialogue:breeder.victory.2","dialogue:breeder.victory.3"],defeat:["dialogue:breeder.defeat.1","dialogue:breeder.defeat.2","dialogue:breeder.defeat.3"]},{encounter:["dialogue:breeder_female.encounter.1","dialogue:breeder_female.encounter.2","dialogue:breeder_female.encounter.3"],victory:["dialogue:breeder_female.victory.1","dialogue:breeder_female.victory.2","dialogue:breeder_female.victory.3"],defeat:["dialogue:breeder_female.defeat.1","dialogue:breeder_female.defeat.2","dialogue:breeder_female.defeat.3"]}],[U.FISHERMAN]:[{encounter:["dialogue:fisherman.encounter.1","dialogue:fisherman.encounter.2","dialogue:fisherman.encounter.3"],victory:["dialogue:fisherman.victory.1","dialogue:fisherman.victory.2","dialogue:fisherman.victory.3"]},{encounter:["dialogue:fisherman_female.encounter.1","dialogue:fisherman_female.encounter.2","dialogue:fisherman_female.encounter.3"],victory:["dialogue:fisherman_female.victory.1","dialogue:fisherman_female.victory.2","dialogue:fisherman_female.victory.3"]}],[U.SWIMMER]:[{encounter:["dialogue:swimmer.encounter.1","dialogue:swimmer.encounter.2","dialogue:swimmer.encounter.3"],victory:["dialogue:swimmer.victory.1","dialogue:swimmer.victory.2","dialogue:swimmer.victory.3"]}],[U.BACKPACKER]:[{encounter:["dialogue:backpacker.encounter.1","dialogue:backpacker.encounter.2","dialogue:backpacker.encounter.3","dialogue:backpacker.encounter.4"],victory:["dialogue:backpacker.victory.1","dialogue:backpacker.victory.2","dialogue:backpacker.victory.3","dialogue:backpacker.victory.4"]}],[U.ACE_TRAINER]:[{encounter:["dialogue:ace_trainer.encounter.1","dialogue:ace_trainer.encounter.2","dialogue:ace_trainer.encounter.3","dialogue:ace_trainer.encounter.4"],victory:["dialogue:ace_trainer.victory.1","dialogue:ace_trainer.victory.2","dialogue:ace_trainer.victory.3","dialogue:ace_trainer.victory.4"],defeat:["dialogue:ace_trainer.defeat.1","dialogue:ace_trainer.defeat.2","dialogue:ace_trainer.defeat.3","dialogue:ace_trainer.defeat.4"]}],[U.PARASOL_LADY]:[{encounter:["dialogue:parasol_lady.encounter.1"],victory:["dialogue:parasol_lady.victory.1"]}],[U.TWINS]:[{encounter:["dialogue:twins.encounter.1","dialogue:twins.encounter.2","dialogue:twins.encounter.3"],victory:["dialogue:twins.victory.1","dialogue:twins.victory.2","dialogue:twins.victory.3"],defeat:["dialogue:twins.defeat.1","dialogue:twins.defeat.2","dialogue:twins.defeat.3"]}],[U.CYCLIST]:[{encounter:["dialogue:cyclist.encounter.1","dialogue:cyclist.encounter.2","dialogue:cyclist.encounter.3"],victory:["dialogue:cyclist.victory.1","dialogue:cyclist.victory.2","dialogue:cyclist.victory.3"]}],[U.BLACK_BELT]:[{encounter:["dialogue:black_belt.encounter.1","dialogue:black_belt.encounter.2"],victory:["dialogue:black_belt.victory.1","dialogue:black_belt.victory.2"]},{encounter:["dialogue:battle_girl.encounter.1"],victory:["dialogue:battle_girl.victory.1"]}],[U.HIKER]:[{encounter:["dialogue:hiker.encounter.1","dialogue:hiker.encounter.2"],victory:["dialogue:hiker.victory.1","dialogue:hiker.victory.2"]}],[U.RANGER]:[{encounter:["dialogue:ranger.encounter.1","dialogue:ranger.encounter.2"],victory:["dialogue:ranger.victory.1","dialogue:ranger.victory.2"],defeat:["dialogue:ranger.defeat.1","dialogue:ranger.defeat.2"]}],[U.SCIENTIST]:[{encounter:["dialogue:scientist.encounter.1"],victory:["dialogue:scientist.victory.1"]}],[U.SCHOOL_KID]:[{encounter:["dialogue:school_kid.encounter.1","dialogue:school_kid.encounter.2"],victory:["dialogue:school_kid.victory.1","dialogue:school_kid.victory.2"]}],[U.ARTIST]:[{encounter:["dialogue:artist.encounter.1"],victory:["dialogue:artist.victory.1"]}],[U.GUITARIST]:[{encounter:["dialogue:guitarist.encounter.1"],victory:["dialogue:guitarist.victory.1"]}],[U.WORKER]:[{encounter:["dialogue:worker.encounter.1"],victory:["dialogue:worker.victory.1"]},{encounter:["dialogue:worker_female.encounter.1"],victory:["dialogue:worker_female.victory.1"],defeat:["dialogue:worker_female.defeat.1"]},{encounter:["dialogue:worker_double.encounter.1"],victory:["dialogue:worker_double.victory.1"]}],[U.SNOW_WORKER]:[{encounter:["dialogue:snow_worker.encounter.1"],victory:["dialogue:snow_worker.victory.1"]},{encounter:["dialogue:snow_worker_double.encounter.1"],victory:["dialogue:snow_worker_double.victory.1"]}],[U.HEX_MANIAC]:[{encounter:["dialogue:hex_maniac.encounter.1","dialogue:hex_maniac.encounter.2"],victory:["dialogue:hex_maniac.victory.1","dialogue:hex_maniac.victory.2"],defeat:["dialogue:hex_maniac.defeat.1","dialogue:hex_maniac.defeat.2"]}],[U.PSYCHIC]:[{encounter:["dialogue:psychic.encounter.1"],victory:["dialogue:psychic.victory.1"]}],[U.OFFICER]:[{encounter:["dialogue:officer.encounter.1","dialogue:officer.encounter.2"],victory:["dialogue:officer.victory.1","dialogue:officer.victory.2"]}],[U.BEAUTY]:[{encounter:["dialogue:beauty.encounter.1"],victory:["dialogue:beauty.victory.1"]}],[U.BAKER]:[{encounter:["dialogue:baker.encounter.1"],victory:["dialogue:baker.victory.1"]}],[U.BIKER]:[{encounter:["dialogue:biker.encounter.1"],victory:["dialogue:biker.victory.1"]}],[U.FIREBREATHER]:[{encounter:["dialogue:firebreather.encounter.1","dialogue:firebreather.encounter.2","dialogue:firebreather.encounter.3"],victory:["dialogue:firebreather.victory.1","dialogue:firebreather.victory.2","dialogue:firebreather.victory.3"]}],[U.SAILOR]:[{encounter:["dialogue:sailor.encounter.1","dialogue:sailor.encounter.2","dialogue:sailor.encounter.3"],victory:["dialogue:sailor.victory.1","dialogue:sailor.victory.2","dialogue:sailor.victory.3"]}],[U.CLERK]:[{encounter:["dialogue:clerk.encounter.1","dialogue:clerk.encounter.2","dialogue:clerk.encounter.3"],victory:["dialogue:clerk.victory.1","dialogue:clerk.victory.2","dialogue:clerk.victory.3"]},{encounter:["dialogue:clerk_female.encounter.1","dialogue:clerk_female.encounter.2","dialogue:clerk_female.encounter.3"],victory:["dialogue:clerk_female.victory.1","dialogue:clerk_female.victory.2","dialogue:clerk_female.victory.3"]}],[U.HOOLIGANS]:[{encounter:["dialogue:hooligans.encounter.1","dialogue:hooligans.encounter.2"],victory:["dialogue:hooligans.victory.1","dialogue:hooligans.victory.2"]}],[U.MUSICIAN]:[{encounter:["dialogue:musician.encounter.1","dialogue:musician.encounter.2","dialogue:musician.encounter.3","dialogue:musician.encounter.4"],victory:["dialogue:musician.victory.1","dialogue:musician.victory.2","dialogue:musician.victory.3"]}],[U.PILOT]:[{encounter:["dialogue:pilot.encounter.1","dialogue:pilot.encounter.2","dialogue:pilot.encounter.3","dialogue:pilot.encounter.4"],victory:["dialogue:pilot.victory.1","dialogue:pilot.victory.2","dialogue:pilot.victory.3","dialogue:pilot.victory.4"]}],[U.POKEFAN]:[{encounter:["dialogue:pokefan.encounter.1","dialogue:pokefan.encounter.2","dialogue:pokefan.encounter.3"],victory:["dialogue:pokefan.victory.1","dialogue:pokefan.victory.2","dialogue:pokefan.victory.3"]},{encounter:["dialogue:pokefan_female.encounter.1","dialogue:pokefan_female.encounter.2","dialogue:pokefan_female.encounter.3"],victory:["dialogue:pokefan_female.victory.1","dialogue:pokefan_female.victory.2","dialogue:pokefan_female.victory.3"]}],[U.RICH]:[{encounter:["dialogue:rich.encounter.1","dialogue:rich.encounter.2","dialogue:rich.encounter.3"],victory:["dialogue:rich.victory.1","dialogue:rich.victory.2","dialogue:rich.victory.3"]},{encounter:["dialogue:rich_female.encounter.1","dialogue:rich_female.encounter.2","dialogue:rich_female.encounter.3"],victory:["dialogue:rich_female.victory.1","dialogue:rich_female.victory.2","dialogue:rich_female.victory.3"]}],[U.RICH_KID]:[{encounter:["dialogue:rich_kid.encounter.1","dialogue:rich_kid.encounter.2","dialogue:rich_kid.encounter.3"],victory:["dialogue:rich_kid.victory.1","dialogue:rich_kid.victory.2","dialogue:rich_kid.victory.3","dialogue:rich_kid.victory.4"]},{encounter:["dialogue:rich_kid_female.encounter.1","dialogue:rich_kid_female.encounter.2","dialogue:rich_kid_female.encounter.3"],victory:["dialogue:rich_kid_female.victory.1","dialogue:rich_kid_female.victory.2","dialogue:rich_kid_female.victory.3","dialogue:rich_kid_female.victory.4"]}],[U.ROCKET_GRUNT]:[{encounter:["dialogue:rocket_grunt.encounter.1","dialogue:rocket_grunt.encounter.2","dialogue:rocket_grunt.encounter.3","dialogue:rocket_grunt.encounter.4","dialogue:rocket_grunt.encounter.5"],victory:["dialogue:rocket_grunt.victory.1","dialogue:rocket_grunt.victory.2","dialogue:rocket_grunt.victory.3","dialogue:rocket_grunt.victory.4","dialogue:rocket_grunt.victory.5"]}],[U.ARCHER]:[{encounter:["dialogue:archer.encounter.1","dialogue:archer.encounter.2","dialogue:archer.encounter.3"],victory:["dialogue:archer.victory.1","dialogue:archer.victory.2","dialogue:archer.victory.3"]}],[U.ARIANA]:[{encounter:["dialogue:ariana.encounter.1","dialogue:ariana.encounter.2","dialogue:ariana.encounter.3"],victory:["dialogue:ariana.victory.1","dialogue:ariana.victory.2","dialogue:ariana.victory.3"]}],[U.PROTON]:[{encounter:["dialogue:proton.encounter.1","dialogue:proton.encounter.2","dialogue:proton.encounter.3"],victory:["dialogue:proton.victory.1","dialogue:proton.victory.2","dialogue:proton.victory.3"]}],[U.PETREL]:[{encounter:["dialogue:petrel.encounter.1","dialogue:petrel.encounter.2","dialogue:petrel.encounter.3"],victory:["dialogue:petrel.victory.1","dialogue:petrel.victory.2","dialogue:petrel.victory.3"]}],[U.MAGMA_GRUNT]:[{encounter:["dialogue:magma_grunt.encounter.1","dialogue:magma_grunt.encounter.2","dialogue:magma_grunt.encounter.3","dialogue:magma_grunt.encounter.4","dialogue:magma_grunt.encounter.5"],victory:["dialogue:magma_grunt.victory.1","dialogue:magma_grunt.victory.2","dialogue:magma_grunt.victory.3","dialogue:magma_grunt.victory.4","dialogue:magma_grunt.victory.5"]}],[U.TABITHA]:[{encounter:["dialogue:tabitha.encounter.1","dialogue:tabitha.encounter.2","dialogue:tabitha.encounter.3"],victory:["dialogue:tabitha.victory.1","dialogue:tabitha.victory.2","dialogue:tabitha.victory.3"]}],[U.COURTNEY]:[{encounter:["dialogue:courtney.encounter.1","dialogue:courtney.encounter.2","dialogue:courtney.encounter.3"],victory:["dialogue:courtney.victory.1","dialogue:courtney.victory.2","dialogue:courtney.victory.3"]}],[U.AQUA_GRUNT]:[{encounter:["dialogue:aqua_grunt.encounter.1","dialogue:aqua_grunt.encounter.2","dialogue:aqua_grunt.encounter.3","dialogue:aqua_grunt.encounter.4","dialogue:aqua_grunt.encounter.5"],victory:["dialogue:aqua_grunt.victory.1","dialogue:aqua_grunt.victory.2","dialogue:aqua_grunt.victory.3","dialogue:aqua_grunt.victory.4","dialogue:aqua_grunt.victory.5"]}],[U.MATT]:[{encounter:["dialogue:matt.encounter.1","dialogue:matt.encounter.2","dialogue:matt.encounter.3"],victory:["dialogue:matt.victory.1","dialogue:matt.victory.2","dialogue:matt.victory.3"]}],[U.SHELLY]:[{encounter:["dialogue:shelly.encounter.1","dialogue:shelly.encounter.2","dialogue:shelly.encounter.3"],victory:["dialogue:shelly.victory.1","dialogue:shelly.victory.2","dialogue:shelly.victory.3"]}],[U.GALACTIC_GRUNT]:[{encounter:["dialogue:galactic_grunt.encounter.1","dialogue:galactic_grunt.encounter.2","dialogue:galactic_grunt.encounter.3","dialogue:galactic_grunt.encounter.4","dialogue:galactic_grunt.encounter.5"],victory:["dialogue:galactic_grunt.victory.1","dialogue:galactic_grunt.victory.2","dialogue:galactic_grunt.victory.3","dialogue:galactic_grunt.victory.4","dialogue:galactic_grunt.victory.5"]}],[U.JUPITER]:[{encounter:["dialogue:jupiter.encounter.1","dialogue:jupiter.encounter.2","dialogue:jupiter.encounter.3"],victory:["dialogue:jupiter.victory.1","dialogue:jupiter.victory.2","dialogue:jupiter.victory.3"]}],[U.MARS]:[{encounter:["dialogue:mars.encounter.1","dialogue:mars.encounter.2","dialogue:mars.encounter.3"],victory:["dialogue:mars.victory.1","dialogue:mars.victory.2","dialogue:mars.victory.3"]}],[U.SATURN]:[{encounter:["dialogue:saturn.encounter.1","dialogue:saturn.encounter.2","dialogue:saturn.encounter.3"],victory:["dialogue:saturn.victory.1","dialogue:saturn.victory.2","dialogue:saturn.victory.3"]}],[U.PLASMA_GRUNT]:[{encounter:["dialogue:plasma_grunt.encounter.1","dialogue:plasma_grunt.encounter.2","dialogue:plasma_grunt.encounter.3","dialogue:plasma_grunt.encounter.4","dialogue:plasma_grunt.encounter.5"],victory:["dialogue:plasma_grunt.victory.1","dialogue:plasma_grunt.victory.2","dialogue:plasma_grunt.victory.3","dialogue:plasma_grunt.victory.4","dialogue:plasma_grunt.victory.5"]}],[U.ZINZOLIN]:[{encounter:["dialogue:zinzolin.encounter.1","dialogue:zinzolin.encounter.2","dialogue:zinzolin.encounter.3"],victory:["dialogue:zinzolin.victory.1","dialogue:zinzolin.victory.2","dialogue:zinzolin.victory.3"]}],[U.COLRESS]:[{encounter:["dialogue:colress.encounter.1","dialogue:colress.encounter.2","dialogue:colress.encounter.3"],victory:["dialogue:colress.victory.1","dialogue:colress.victory.2","dialogue:colress.victory.3"]}],[U.FLARE_GRUNT]:[{encounter:["dialogue:flare_grunt.encounter.1","dialogue:flare_grunt.encounter.2","dialogue:flare_grunt.encounter.3","dialogue:flare_grunt.encounter.4","dialogue:flare_grunt.encounter.5"],victory:["dialogue:flare_grunt.victory.1","dialogue:flare_grunt.victory.2","dialogue:flare_grunt.victory.3","dialogue:flare_grunt.victory.4","dialogue:flare_grunt.victory.5"]}],[U.BRYONY]:[{encounter:["dialogue:bryony.encounter.1","dialogue:bryony.encounter.2","dialogue:bryony.encounter.3"],victory:["dialogue:bryony.victory.1","dialogue:bryony.victory.2","dialogue:bryony.victory.3"]}],[U.XEROSIC]:[{encounter:["dialogue:xerosic.encounter.1","dialogue:xerosic.encounter.2","dialogue:xerosic.encounter.3"],victory:["dialogue:xerosic.victory.1","dialogue:xerosic.victory.2","dialogue:xerosic.victory.3"]}],[U.AETHER_GRUNT]:[{encounter:["dialogue:aether_grunt.encounter.1","dialogue:aether_grunt.encounter.2","dialogue:aether_grunt.encounter.3","dialogue:aether_grunt.encounter.4","dialogue:aether_grunt.encounter.5"],victory:["dialogue:aether_grunt.victory.1","dialogue:aether_grunt.victory.2","dialogue:aether_grunt.victory.3","dialogue:aether_grunt.victory.4","dialogue:aether_grunt.victory.5"]}],[U.FABA]:[{encounter:["dialogue:faba.encounter.1","dialogue:faba.encounter.2","dialogue:faba.encounter.3"],victory:["dialogue:faba.victory.1","dialogue:faba.victory.2","dialogue:faba.victory.3"]}],[U.SKULL_GRUNT]:[{encounter:["dialogue:skull_grunt.encounter.1","dialogue:skull_grunt.encounter.2","dialogue:skull_grunt.encounter.3","dialogue:skull_grunt.encounter.4","dialogue:skull_grunt.encounter.5"],victory:["dialogue:skull_grunt.victory.1","dialogue:skull_grunt.victory.2","dialogue:skull_grunt.victory.3","dialogue:skull_grunt.victory.4","dialogue:skull_grunt.victory.5"]}],[U.PLUMERIA]:[{encounter:["dialogue:plumeria.encounter.1","dialogue:plumeria.encounter.2","dialogue:plumeria.encounter.3"],victory:["dialogue:plumeria.victory.1","dialogue:plumeria.victory.2","dialogue:plumeria.victory.3"]}],[U.MACRO_GRUNT]:[{encounter:["dialogue:macro_grunt.encounter.1","dialogue:macro_grunt.encounter.2","dialogue:macro_grunt.encounter.3","dialogue:macro_grunt.encounter.4","dialogue:macro_grunt.encounter.5"],victory:["dialogue:macro_grunt.victory.1","dialogue:macro_grunt.victory.2","dialogue:macro_grunt.victory.3","dialogue:macro_grunt.victory.4","dialogue:macro_grunt.victory.5"]}],[U.OLEANA]:[{encounter:["dialogue:oleana.encounter.1","dialogue:oleana.encounter.2","dialogue:oleana.encounter.3"],victory:["dialogue:oleana.victory.1","dialogue:oleana.victory.2","dialogue:oleana.victory.3"]}],[U.STAR_GRUNT]:[{encounter:["dialogue:star_grunt.encounter.1","dialogue:star_grunt.encounter.2","dialogue:star_grunt.encounter.3","dialogue:star_grunt.encounter.4","dialogue:star_grunt.encounter.5"],victory:["dialogue:star_grunt.victory.1","dialogue:star_grunt.victory.2","dialogue:star_grunt.victory.3","dialogue:star_grunt.victory.4","dialogue:star_grunt.victory.5"]}],[U.GIACOMO]:[{encounter:["dialogue:giacomo.encounter.1","dialogue:giacomo.encounter.2"],victory:["dialogue:giacomo.victory.1","dialogue:giacomo.victory.2"]}],[U.MELA]:[{encounter:["dialogue:mela.encounter.1","dialogue:mela.encounter.2"],victory:["dialogue:mela.victory.1","dialogue:mela.victory.2"]}],[U.ATTICUS]:[{encounter:["dialogue:atticus.encounter.1","dialogue:atticus.encounter.2"],victory:["dialogue:atticus.victory.1","dialogue:atticus.victory.2"]}],[U.ORTEGA]:[{encounter:["dialogue:ortega.encounter.1","dialogue:ortega.encounter.2"],victory:["dialogue:ortega.victory.1","dialogue:ortega.victory.2"]}],[U.ERI]:[{encounter:["dialogue:eri.encounter.1","dialogue:eri.encounter.2"],victory:["dialogue:eri.victory.1","dialogue:eri.victory.2"]}],[U.ROCKET_BOSS_GIOVANNI_1]:[{encounter:["dialogue:rocket_boss_giovanni_1.encounter.1"],victory:["dialogue:rocket_boss_giovanni_1.victory.1"],defeat:["dialogue:rocket_boss_giovanni_1.defeat.1"]}],[U.ROCKET_BOSS_GIOVANNI_2]:[{encounter:["dialogue:rocket_boss_giovanni_2.encounter.1"],victory:["dialogue:rocket_boss_giovanni_2.victory.1"],defeat:["dialogue:rocket_boss_giovanni_2.defeat.1"]}],[U.MAXIE]:[{encounter:["dialogue:magma_boss_maxie_1.encounter.1"],victory:["dialogue:magma_boss_maxie_1.victory.1"],defeat:["dialogue:magma_boss_maxie_1.defeat.1"]}],[U.MAXIE_2]:[{encounter:["dialogue:magma_boss_maxie_2.encounter.1"],victory:["dialogue:magma_boss_maxie_2.victory.1"],defeat:["dialogue:magma_boss_maxie_2.defeat.1"]}],[U.ARCHIE]:[{encounter:["dialogue:aqua_boss_archie_1.encounter.1"],victory:["dialogue:aqua_boss_archie_1.victory.1"],defeat:["dialogue:aqua_boss_archie_1.defeat.1"]}],[U.ARCHIE_2]:[{encounter:["dialogue:aqua_boss_archie_2.encounter.1"],victory:["dialogue:aqua_boss_archie_2.victory.1"],defeat:["dialogue:aqua_boss_archie_2.defeat.1"]}],[U.CYRUS]:[{encounter:["dialogue:galactic_boss_cyrus_1.encounter.1"],victory:["dialogue:galactic_boss_cyrus_1.victory.1"],defeat:["dialogue:galactic_boss_cyrus_1.defeat.1"]}],[U.CYRUS_2]:[{encounter:["dialogue:galactic_boss_cyrus_2.encounter.1"],victory:["dialogue:galactic_boss_cyrus_2.victory.1"],defeat:["dialogue:galactic_boss_cyrus_2.defeat.1"]}],[U.GHETSIS]:[{encounter:["dialogue:plasma_boss_ghetsis_1.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_1.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_1.defeat.1"]}],[U.GHETSIS_2]:[{encounter:["dialogue:plasma_boss_ghetsis_2.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_2.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_2.defeat.1"]}],[U.LYSANDRE]:[{encounter:["dialogue:flare_boss_lysandre_1.encounter.1"],victory:["dialogue:flare_boss_lysandre_1.victory.1"],defeat:["dialogue:flare_boss_lysandre_1.defeat.1"]}],[U.LYSANDRE_2]:[{encounter:["dialogue:flare_boss_lysandre_2.encounter.1"],victory:["dialogue:flare_boss_lysandre_2.victory.1"],defeat:["dialogue:flare_boss_lysandre_2.defeat.1"]}],[U.LUSAMINE]:[{encounter:["dialogue:aether_boss_lusamine_1.encounter.1"],victory:["dialogue:aether_boss_lusamine_1.victory.1"],defeat:["dialogue:aether_boss_lusamine_1.defeat.1"]}],[U.LUSAMINE_2]:[{encounter:["dialogue:aether_boss_lusamine_2.encounter.1"],victory:["dialogue:aether_boss_lusamine_2.victory.1"],defeat:["dialogue:aether_boss_lusamine_2.defeat.1"]}],[U.GUZMA]:[{encounter:["dialogue:skull_boss_guzma_1.encounter.1"],victory:["dialogue:skull_boss_guzma_1.victory.1"],defeat:["dialogue:skull_boss_guzma_1.defeat.1"]}],[U.GUZMA_2]:[{encounter:["dialogue:skull_boss_guzma_2.encounter.1"],victory:["dialogue:skull_boss_guzma_2.victory.1"],defeat:["dialogue:skull_boss_guzma_2.defeat.1"]}],[U.ROSE]:[{encounter:["dialogue:macro_boss_rose_1.encounter.1"],victory:["dialogue:macro_boss_rose_1.victory.1"],defeat:["dialogue:macro_boss_rose_1.defeat.1"]}],[U.ROSE_2]:[{encounter:["dialogue:macro_boss_rose_2.encounter.1"],victory:["dialogue:macro_boss_rose_2.victory.1"],defeat:["dialogue:macro_boss_rose_2.defeat.1"]}],[U.PENNY]:[{encounter:["dialogue:star_boss_penny_1.encounter.1"],victory:["dialogue:star_boss_penny_1.victory.1"],defeat:["dialogue:star_boss_penny_1.defeat.1"]}],[U.PENNY_2]:[{encounter:["dialogue:star_boss_penny_2.encounter.1"],victory:["dialogue:star_boss_penny_2.victory.1"],defeat:["dialogue:star_boss_penny_2.defeat.1"]}],[U.BUCK]:[{encounter:["dialogue:stat_trainer_buck.encounter.1","dialogue:stat_trainer_buck.encounter.2"],victory:["dialogue:stat_trainer_buck.victory.1","dialogue:stat_trainer_buck.victory.2"],defeat:["dialogue:stat_trainer_buck.defeat.1","dialogue:stat_trainer_buck.defeat.2"]}],[U.CHERYL]:[{encounter:["dialogue:stat_trainer_cheryl.encounter.1","dialogue:stat_trainer_cheryl.encounter.2"],victory:["dialogue:stat_trainer_cheryl.victory.1","dialogue:stat_trainer_cheryl.victory.2"],defeat:["dialogue:stat_trainer_cheryl.defeat.1","dialogue:stat_trainer_cheryl.defeat.2"]}],[U.MARLEY]:[{encounter:["dialogue:stat_trainer_marley.encounter.1","dialogue:stat_trainer_marley.encounter.2"],victory:["dialogue:stat_trainer_marley.victory.1","dialogue:stat_trainer_marley.victory.2"],defeat:["dialogue:stat_trainer_marley.defeat.1","dialogue:stat_trainer_marley.defeat.2"]}],[U.MIRA]:[{encounter:["dialogue:stat_trainer_mira.encounter.1","dialogue:stat_trainer_mira.encounter.2"],victory:["dialogue:stat_trainer_mira.victory.1","dialogue:stat_trainer_mira.victory.2"],defeat:["dialogue:stat_trainer_mira.defeat.1","dialogue:stat_trainer_mira.defeat.2"]}],[U.RILEY]:[{encounter:["dialogue:stat_trainer_riley.encounter.1","dialogue:stat_trainer_riley.encounter.2"],victory:["dialogue:stat_trainer_riley.victory.1","dialogue:stat_trainer_riley.victory.2"],defeat:["dialogue:stat_trainer_riley.defeat.1","dialogue:stat_trainer_riley.defeat.2"]}],[U.VICTOR]:[{encounter:["dialogue:winstrates_victor.encounter.1"],victory:["dialogue:winstrates_victor.victory.1"]}],[U.VICTORIA]:[{encounter:["dialogue:winstrates_victoria.encounter.1"],victory:["dialogue:winstrates_victoria.victory.1"]}],[U.VIVI]:[{encounter:["dialogue:winstrates_vivi.encounter.1"],victory:["dialogue:winstrates_vivi.victory.1"]}],[U.VICKY]:[{encounter:["dialogue:winstrates_vicky.encounter.1"],victory:["dialogue:winstrates_vicky.victory.1"]}],[U.VITO]:[{encounter:["dialogue:winstrates_vito.encounter.1"],victory:["dialogue:winstrates_vito.victory.1"]}],[U.BROCK]:{encounter:["dialogue:brock.encounter.1","dialogue:brock.encounter.2","dialogue:brock.encounter.3"],victory:["dialogue:brock.victory.1","dialogue:brock.victory.2","dialogue:brock.victory.3"],defeat:["dialogue:brock.defeat.1","dialogue:brock.defeat.2","dialogue:brock.defeat.3"]},[U.MISTY]:{encounter:["dialogue:misty.encounter.1","dialogue:misty.encounter.2","dialogue:misty.encounter.3"],victory:["dialogue:misty.victory.1","dialogue:misty.victory.2","dialogue:misty.victory.3"],defeat:["dialogue:misty.defeat.1","dialogue:misty.defeat.2","dialogue:misty.defeat.3"]},[U.LT_SURGE]:{encounter:["dialogue:lt_surge.encounter.1","dialogue:lt_surge.encounter.2","dialogue:lt_surge.encounter.3"],victory:["dialogue:lt_surge.victory.1","dialogue:lt_surge.victory.2","dialogue:lt_surge.victory.3"],defeat:["dialogue:lt_surge.defeat.1","dialogue:lt_surge.defeat.2","dialogue:lt_surge.defeat.3"]},[U.ERIKA]:{encounter:["dialogue:erika.encounter.1","dialogue:erika.encounter.2","dialogue:erika.encounter.3","dialogue:erika.encounter.4"],victory:["dialogue:erika.victory.1","dialogue:erika.victory.2","dialogue:erika.victory.3","dialogue:erika.victory.4"],defeat:["dialogue:erika.defeat.1","dialogue:erika.defeat.2","dialogue:erika.defeat.3","dialogue:erika.defeat.4"]},[U.JANINE]:{encounter:["dialogue:janine.encounter.1","dialogue:janine.encounter.2","dialogue:janine.encounter.3"],victory:["dialogue:janine.victory.1","dialogue:janine.victory.2","dialogue:janine.victory.3"],defeat:["dialogue:janine.defeat.1","dialogue:janine.defeat.2","dialogue:janine.defeat.3"]},[U.SABRINA]:{encounter:["dialogue:sabrina.encounter.1","dialogue:sabrina.encounter.2","dialogue:sabrina.encounter.3"],victory:["dialogue:sabrina.victory.1","dialogue:sabrina.victory.2","dialogue:sabrina.victory.3"],defeat:["dialogue:sabrina.defeat.1","dialogue:sabrina.defeat.2","dialogue:sabrina.defeat.3"]},[U.BLAINE]:{encounter:["dialogue:blaine.encounter.1","dialogue:blaine.encounter.2","dialogue:blaine.encounter.3"],victory:["dialogue:blaine.victory.1","dialogue:blaine.victory.2","dialogue:blaine.victory.3"],defeat:["dialogue:blaine.defeat.1","dialogue:blaine.defeat.2","dialogue:blaine.defeat.3"]},[U.GIOVANNI]:{encounter:["dialogue:giovanni.encounter.1","dialogue:giovanni.encounter.2","dialogue:giovanni.encounter.3"],victory:["dialogue:giovanni.victory.1","dialogue:giovanni.victory.2","dialogue:giovanni.victory.3"],defeat:["dialogue:giovanni.defeat.1","dialogue:giovanni.defeat.2","dialogue:giovanni.defeat.3"]},[U.ROXANNE]:{encounter:["dialogue:roxanne.encounter.1","dialogue:roxanne.encounter.2","dialogue:roxanne.encounter.3"],victory:["dialogue:roxanne.victory.1","dialogue:roxanne.victory.2","dialogue:roxanne.victory.3"],defeat:["dialogue:roxanne.defeat.1","dialogue:roxanne.defeat.2","dialogue:roxanne.defeat.3"]},[U.BRAWLY]:{encounter:["dialogue:brawly.encounter.1","dialogue:brawly.encounter.2","dialogue:brawly.encounter.3"],victory:["dialogue:brawly.victory.1","dialogue:brawly.victory.2","dialogue:brawly.victory.3"],defeat:["dialogue:brawly.defeat.1","dialogue:brawly.defeat.2","dialogue:brawly.defeat.3"]},[U.WATTSON]:{encounter:["dialogue:wattson.encounter.1","dialogue:wattson.encounter.2","dialogue:wattson.encounter.3"],victory:["dialogue:wattson.victory.1","dialogue:wattson.victory.2","dialogue:wattson.victory.3"],defeat:["dialogue:wattson.defeat.1","dialogue:wattson.defeat.2","dialogue:wattson.defeat.3"]},[U.FLANNERY]:{encounter:["dialogue:flannery.encounter.1","dialogue:flannery.encounter.2","dialogue:flannery.encounter.3"],victory:["dialogue:flannery.victory.1","dialogue:flannery.victory.2","dialogue:flannery.victory.3"],defeat:["dialogue:flannery.defeat.1","dialogue:flannery.defeat.2","dialogue:flannery.defeat.3"]},[U.NORMAN]:{encounter:["dialogue:norman.encounter.1","dialogue:norman.encounter.2","dialogue:norman.encounter.3"],victory:["dialogue:norman.victory.1","dialogue:norman.victory.2","dialogue:norman.victory.3"],defeat:["dialogue:norman.defeat.1","dialogue:norman.defeat.2","dialogue:norman.defeat.3"]},[U.WINONA]:{encounter:["dialogue:winona.encounter.1","dialogue:winona.encounter.2","dialogue:winona.encounter.3"],victory:["dialogue:winona.victory.1","dialogue:winona.victory.2","dialogue:winona.victory.3"],defeat:["dialogue:winona.defeat.1","dialogue:winona.defeat.2","dialogue:winona.defeat.3"]},[U.TATE]:{encounter:["dialogue:tate.encounter.1","dialogue:tate.encounter.2","dialogue:tate.encounter.3"],victory:["dialogue:tate.victory.1","dialogue:tate.victory.2","dialogue:tate.victory.3"],defeat:["dialogue:tate.defeat.1","dialogue:tate.defeat.2","dialogue:tate.defeat.3"]},[U.LIZA]:{encounter:["dialogue:liza.encounter.1","dialogue:liza.encounter.2","dialogue:liza.encounter.3"],victory:["dialogue:liza.victory.1","dialogue:liza.victory.2","dialogue:liza.victory.3"],defeat:["dialogue:liza.defeat.1","dialogue:liza.defeat.2","dialogue:liza.defeat.3"]},[U.JUAN]:{encounter:["dialogue:juan.encounter.1","dialogue:juan.encounter.2","dialogue:juan.encounter.3","dialogue:juan.encounter.4"],victory:["dialogue:juan.victory.1","dialogue:juan.victory.2","dialogue:juan.victory.3","dialogue:juan.victory.4"],defeat:["dialogue:juan.defeat.1","dialogue:juan.defeat.2","dialogue:juan.defeat.3","dialogue:juan.defeat.4"]},[U.CRASHER_WAKE]:{encounter:["dialogue:crasher_wake.encounter.1","dialogue:crasher_wake.encounter.2","dialogue:crasher_wake.encounter.3"],victory:["dialogue:crasher_wake.victory.1","dialogue:crasher_wake.victory.2","dialogue:crasher_wake.victory.3"],defeat:["dialogue:crasher_wake.defeat.1","dialogue:crasher_wake.defeat.2","dialogue:crasher_wake.defeat.3"]},[U.FALKNER]:{encounter:["dialogue:falkner.encounter.1","dialogue:falkner.encounter.2","dialogue:falkner.encounter.3"],victory:["dialogue:falkner.victory.1","dialogue:falkner.victory.2","dialogue:falkner.victory.3"],defeat:["dialogue:falkner.defeat.1","dialogue:falkner.defeat.2","dialogue:falkner.defeat.3"]},[U.NESSA]:{encounter:["dialogue:nessa.encounter.1","dialogue:nessa.encounter.2","dialogue:nessa.encounter.3"],victory:["dialogue:nessa.victory.1","dialogue:nessa.victory.2","dialogue:nessa.victory.3"],defeat:["dialogue:nessa.defeat.1","dialogue:nessa.defeat.2","dialogue:nessa.defeat.3"]},[U.MELONY]:{encounter:["dialogue:melony.encounter.1","dialogue:melony.encounter.2","dialogue:melony.encounter.3"],victory:["dialogue:melony.victory.1","dialogue:melony.victory.2","dialogue:melony.victory.3"],defeat:["dialogue:melony.defeat.1","dialogue:melony.defeat.2","dialogue:melony.defeat.3"]},[U.MARLON]:{encounter:["dialogue:marlon.encounter.1","dialogue:marlon.encounter.2","dialogue:marlon.encounter.3"],victory:["dialogue:marlon.victory.1","dialogue:marlon.victory.2","dialogue:marlon.victory.3"],defeat:["dialogue:marlon.defeat.1","dialogue:marlon.defeat.2","dialogue:marlon.defeat.3"]},[U.SHAUNTAL]:{encounter:["dialogue:shauntal.encounter.1","dialogue:shauntal.encounter.2","dialogue:shauntal.encounter.3"],victory:["dialogue:shauntal.victory.1","dialogue:shauntal.victory.2","dialogue:shauntal.victory.3"],defeat:["dialogue:shauntal.defeat.1","dialogue:shauntal.defeat.2","dialogue:shauntal.defeat.3"]},[U.MARSHAL]:{encounter:["dialogue:marshal.encounter.1","dialogue:marshal.encounter.2","dialogue:marshal.encounter.3"],victory:["dialogue:marshal.victory.1","dialogue:marshal.victory.2","dialogue:marshal.victory.3"],defeat:["dialogue:marshal.defeat.1","dialogue:marshal.defeat.2","dialogue:marshal.defeat.3"]},[U.CHEREN]:{encounter:["dialogue:cheren.encounter.1","dialogue:cheren.encounter.2","dialogue:cheren.encounter.3"],victory:["dialogue:cheren.victory.1","dialogue:cheren.victory.2","dialogue:cheren.victory.3"],defeat:["dialogue:cheren.defeat.1","dialogue:cheren.defeat.2","dialogue:cheren.defeat.3"]},[U.CHILI]:{encounter:["dialogue:chili.encounter.1","dialogue:chili.encounter.2","dialogue:chili.encounter.3"],victory:["dialogue:chili.victory.1","dialogue:chili.victory.2","dialogue:chili.victory.3"],defeat:["dialogue:chili.defeat.1","dialogue:chili.defeat.2","dialogue:chili.defeat.3"]},[U.CILAN]:{encounter:["dialogue:cilan.encounter.1","dialogue:cilan.encounter.2","dialogue:cilan.encounter.3"],victory:["dialogue:cilan.victory.1","dialogue:cilan.victory.2","dialogue:cilan.victory.3"],defeat:["dialogue:cilan.defeat.1","dialogue:cilan.defeat.2","dialogue:cilan.defeat.3"]},[U.ROARK]:{encounter:["dialogue:roark.encounter.1","dialogue:roark.encounter.2","dialogue:roark.encounter.3","dialogue:roark.encounter.4"],victory:["dialogue:roark.victory.1","dialogue:roark.victory.2","dialogue:roark.victory.3","dialogue:roark.victory.4"],defeat:["dialogue:roark.defeat.1","dialogue:roark.defeat.2","dialogue:roark.defeat.3"]},[U.MORTY]:{encounter:["dialogue:morty.encounter.1","dialogue:morty.encounter.2","dialogue:morty.encounter.3","dialogue:morty.encounter.4","dialogue:morty.encounter.5","dialogue:morty.encounter.6"],victory:["dialogue:morty.victory.1","dialogue:morty.victory.2","dialogue:morty.victory.3","dialogue:morty.victory.4","dialogue:morty.victory.5","dialogue:morty.victory.6"],defeat:["dialogue:morty.defeat.1","dialogue:morty.defeat.2","dialogue:morty.defeat.3","dialogue:morty.defeat.4","dialogue:morty.defeat.5","dialogue:morty.defeat.6"]},[U.CRISPIN]:{encounter:["dialogue:crispin.encounter.1","dialogue:crispin.encounter.2"],victory:["dialogue:crispin.victory.1","dialogue:crispin.victory.2"],defeat:["dialogue:crispin.defeat.1","dialogue:crispin.defeat.2"]},[U.AMARYS]:{encounter:["dialogue:amarys.encounter.1"],victory:["dialogue:amarys.victory.1"],defeat:["dialogue:amarys.defeat.1"]},[U.LACEY]:{encounter:["dialogue:lacey.encounter.1"],victory:["dialogue:lacey.victory.1"],defeat:["dialogue:lacey.defeat.1"]},[U.DRAYTON]:{encounter:["dialogue:drayton.encounter.1"],victory:["dialogue:drayton.victory.1"],defeat:["dialogue:drayton.defeat.1"]},[U.RAMOS]:{encounter:["dialogue:ramos.encounter.1"],victory:["dialogue:ramos.victory.1"],defeat:["dialogue:ramos.defeat.1"]},[U.VIOLA]:{encounter:["dialogue:viola.encounter.1","dialogue:viola.encounter.2"],victory:["dialogue:viola.victory.1","dialogue:viola.victory.2"],defeat:["dialogue:viola.defeat.1","dialogue:viola.defeat.2"]},[U.CANDICE]:{encounter:["dialogue:candice.encounter.1","dialogue:candice.encounter.2"],victory:["dialogue:candice.victory.1","dialogue:candice.victory.2"],defeat:["dialogue:candice.defeat.1","dialogue:candice.defeat.2"]},[U.GARDENIA]:{encounter:["dialogue:gardenia.encounter.1"],victory:["dialogue:gardenia.victory.1"],defeat:["dialogue:gardenia.defeat.1"]},[U.AARON]:{encounter:["dialogue:aaron.encounter.1"],victory:["dialogue:aaron.victory.1"],defeat:["dialogue:aaron.defeat.1"]},[U.CRESS]:{encounter:["dialogue:cress.encounter.1"],victory:["dialogue:cress.victory.1"],defeat:["dialogue:cress.defeat.1"]},[U.ALLISTER]:{encounter:["dialogue:allister.encounter.1"],victory:["dialogue:allister.victory.1"],defeat:["dialogue:allister.defeat.1"]},[U.CLAY]:{encounter:["dialogue:clay.encounter.1"],victory:["dialogue:clay.victory.1"],defeat:["dialogue:clay.defeat.1"]},[U.KOFU]:{encounter:["dialogue:kofu.encounter.1"],victory:["dialogue:kofu.victory.1"],defeat:["dialogue:kofu.defeat.1"]},[U.TULIP]:{encounter:["dialogue:tulip.encounter.1"],victory:["dialogue:tulip.victory.1"],defeat:["dialogue:tulip.defeat.1"]},[U.SIDNEY]:{encounter:["dialogue:sidney.encounter.1"],victory:["dialogue:sidney.victory.1"],defeat:["dialogue:sidney.defeat.1"]},[U.PHOEBE]:{encounter:["dialogue:phoebe.encounter.1"],victory:["dialogue:phoebe.victory.1"],defeat:["dialogue:phoebe.defeat.1"]},[U.GLACIA]:{encounter:["dialogue:glacia.encounter.1"],victory:["dialogue:glacia.victory.1"],defeat:["dialogue:glacia.defeat.1"]},[U.DRAKE]:{encounter:["dialogue:drake.encounter.1"],victory:["dialogue:drake.victory.1"],defeat:["dialogue:drake.defeat.1"]},[U.WALLACE]:{encounter:["dialogue:wallace.encounter.1"],victory:["dialogue:wallace.victory.1"],defeat:["dialogue:wallace.defeat.1"]},[U.LORELEI]:{encounter:["dialogue:lorelei.encounter.1"],victory:["dialogue:lorelei.victory.1"],defeat:["dialogue:lorelei.defeat.1"]},[U.WILL]:{encounter:["dialogue:will.encounter.1"],victory:["dialogue:will.victory.1"],defeat:["dialogue:will.defeat.1"]},[U.MALVA]:{encounter:["dialogue:malva.encounter.1"],victory:["dialogue:malva.victory.1"],defeat:["dialogue:malva.defeat.1"]},[U.HALA]:{encounter:["dialogue:hala.encounter.1"],victory:["dialogue:hala.victory.1"],defeat:["dialogue:hala.defeat.1"]},[U.MOLAYNE]:{encounter:["dialogue:molayne.encounter.1"],victory:["dialogue:molayne.victory.1"],defeat:["dialogue:molayne.defeat.1"]},[U.RIKA]:{encounter:["dialogue:rika.encounter.1"],victory:["dialogue:rika.victory.1"],defeat:["dialogue:rika.defeat.1"]},[U.BRUNO]:{encounter:["dialogue:bruno.encounter.1"],victory:["dialogue:bruno.victory.1"],defeat:["dialogue:bruno.defeat.1"]},[U.BUGSY]:{encounter:["dialogue:bugsy.encounter.1"],victory:["dialogue:bugsy.victory.1"],defeat:["dialogue:bugsy.defeat.1"]},[U.KOGA]:{encounter:["dialogue:koga.encounter.1"],victory:["dialogue:koga.victory.1"],defeat:["dialogue:koga.defeat.1"]},[U.BERTHA]:{encounter:["dialogue:bertha.encounter.1"],victory:["dialogue:bertha.victory.1"],defeat:["dialogue:bertha.defeat.1"]},[U.LENORA]:{encounter:["dialogue:lenora.encounter.1"],victory:["dialogue:lenora.victory.1"],defeat:["dialogue:lenora.defeat.1"]},[U.SIEBOLD]:{encounter:["dialogue:siebold.encounter.1"],victory:["dialogue:siebold.victory.1"],defeat:["dialogue:siebold.defeat.1"]},[U.ROXIE]:{encounter:["dialogue:roxie.encounter.1"],victory:["dialogue:roxie.victory.1"],defeat:["dialogue:roxie.defeat.1"]},[U.OLIVIA]:{encounter:["dialogue:olivia.encounter.1"],victory:["dialogue:olivia.victory.1"],defeat:["dialogue:olivia.defeat.1"]},[U.POPPY]:{encounter:["dialogue:poppy.encounter.1"],victory:["dialogue:poppy.victory.1"],defeat:["dialogue:poppy.defeat.1"]},[U.AGATHA]:{encounter:["dialogue:agatha.encounter.1"],victory:["dialogue:agatha.victory.1"],defeat:["dialogue:agatha.defeat.1"]},[U.FLINT]:{encounter:["dialogue:flint.encounter.1"],victory:["dialogue:flint.victory.1"],defeat:["dialogue:flint.defeat.1"]},[U.GRIMSLEY]:{encounter:["dialogue:grimsley.encounter.1"],victory:["dialogue:grimsley.victory.1"],defeat:["dialogue:grimsley.defeat.1"]},[U.CAITLIN]:{encounter:["dialogue:caitlin.encounter.1"],victory:["dialogue:caitlin.victory.1"],defeat:["dialogue:caitlin.defeat.1"]},[U.DIANTHA]:{encounter:["dialogue:diantha.encounter.1"],victory:["dialogue:diantha.victory.1"],defeat:["dialogue:diantha.defeat.1"]},[U.WIKSTROM]:{encounter:["dialogue:wikstrom.encounter.1"],victory:["dialogue:wikstrom.victory.1"],defeat:["dialogue:wikstrom.defeat.1"]},[U.ACEROLA]:{encounter:["dialogue:acerola.encounter.1"],victory:["dialogue:acerola.victory.1"],defeat:["dialogue:acerola.defeat.1"]},[U.LARRY_ELITE]:{encounter:["dialogue:larry_elite.encounter.1"],victory:["dialogue:larry_elite.victory.1"],defeat:["dialogue:larry_elite.defeat.1"]},[U.LANCE]:{encounter:["dialogue:lance.encounter.1","dialogue:lance.encounter.2"],victory:["dialogue:lance.victory.1","dialogue:lance.victory.2"],defeat:["dialogue:lance.defeat.1","dialogue:lance.defeat.2"]},[U.KAREN]:{encounter:["dialogue:karen.encounter.1","dialogue:karen.encounter.2","dialogue:karen.encounter.3"],victory:["dialogue:karen.victory.1","dialogue:karen.victory.2","dialogue:karen.victory.3"],defeat:["dialogue:karen.defeat.1","dialogue:karen.defeat.2","dialogue:karen.defeat.3"]},[U.MILO]:{encounter:["dialogue:milo.encounter.1"],victory:["dialogue:milo.victory.1"],defeat:["dialogue:milo.defeat.1"]},[U.LUCIAN]:{encounter:["dialogue:lucian.encounter.1"],victory:["dialogue:lucian.victory.1"],defeat:["dialogue:lucian.defeat.1"]},[U.DRASNA]:{encounter:["dialogue:drasna.encounter.1"],victory:["dialogue:drasna.victory.1"],defeat:["dialogue:drasna.defeat.1"]},[U.KAHILI]:{encounter:["dialogue:kahili.encounter.1"],victory:["dialogue:kahili.victory.1"],defeat:["dialogue:kahili.defeat.1"]},[U.HASSEL]:{encounter:["dialogue:hassel.encounter.1"],victory:["dialogue:hassel.victory.1"],defeat:["dialogue:hassel.defeat.1"]},[U.BLUE]:{encounter:["dialogue:blue.encounter.1"],victory:["dialogue:blue.victory.1"],defeat:["dialogue:blue.defeat.1"]},[U.PIERS]:{encounter:["dialogue:piers.encounter.1"],victory:["dialogue:piers.victory.1"],defeat:["dialogue:piers.defeat.1"]},[U.RED]:{encounter:["dialogue:red.encounter.1"],victory:["dialogue:red.victory.1"],defeat:["dialogue:red.defeat.1"]},[U.JASMINE]:{encounter:["dialogue:jasmine.encounter.1"],victory:["dialogue:jasmine.victory.1"],defeat:["dialogue:jasmine.defeat.1"]},[U.LANCE_CHAMPION]:{encounter:["dialogue:lance_champion.encounter.1"],victory:["dialogue:lance_champion.victory.1"],defeat:["dialogue:lance_champion.defeat.1"]},[U.STEVEN]:{encounter:["dialogue:steven.encounter.1"],victory:["dialogue:steven.victory.1"],defeat:["dialogue:steven.defeat.1"]},[U.CYNTHIA]:{encounter:["dialogue:cynthia.encounter.1"],victory:["dialogue:cynthia.victory.1"],defeat:["dialogue:cynthia.defeat.1"]},[U.IRIS]:{encounter:["dialogue:iris.encounter.1"],victory:["dialogue:iris.victory.1"],defeat:["dialogue:iris.defeat.1"]},[U.KUKUI]:{encounter:["dialogue:kukui.encounter.1"],victory:["dialogue:kukui.victory.1"],defeat:["dialogue:kukui.defeat.1"]},[U.HAU]:{encounter:["dialogue:hau.encounter.1"],victory:["dialogue:hau.victory.1"],defeat:["dialogue:hau.defeat.1"]},[U.GEETA]:{encounter:["dialogue:geeta.encounter.1"],victory:["dialogue:geeta.victory.1"],defeat:["dialogue:geeta.defeat.1"]},[U.NEMONA]:{encounter:["dialogue:nemona.encounter.1"],victory:["dialogue:nemona.victory.1"],defeat:["dialogue:nemona.defeat.1"]},[U.LEON]:{encounter:["dialogue:leon.encounter.1"],victory:["dialogue:leon.victory.1"],defeat:["dialogue:leon.defeat.1"]},[U.MUSTARD]:{encounter:["dialogue:mustard.encounter.1"],victory:["dialogue:mustard.victory.1"],defeat:["dialogue:mustard.defeat.1"]},[U.WHITNEY]:{encounter:["dialogue:whitney.encounter.1"],victory:["dialogue:whitney.victory.1"],defeat:["dialogue:whitney.defeat.1"]},[U.CHUCK]:{encounter:["dialogue:chuck.encounter.1"],victory:["dialogue:chuck.victory.1"],defeat:["dialogue:chuck.defeat.1"]},[U.KATY]:{encounter:["dialogue:katy.encounter.1"],victory:["dialogue:katy.victory.1"],defeat:["dialogue:katy.defeat.1"]},[U.PRYCE]:{encounter:["dialogue:pryce.encounter.1"],victory:["dialogue:pryce.victory.1"],defeat:["dialogue:pryce.defeat.1"]},[U.CLAIR]:{encounter:["dialogue:clair.encounter.1"],victory:["dialogue:clair.victory.1"],defeat:["dialogue:clair.defeat.1"]},[U.MAYLENE]:{encounter:["dialogue:maylene.encounter.1"],victory:["dialogue:maylene.victory.1"],defeat:["dialogue:maylene.defeat.1"]},[U.FANTINA]:{encounter:["dialogue:fantina.encounter.1"],victory:["dialogue:fantina.victory.1"],defeat:["dialogue:fantina.defeat.1"]},[U.BYRON]:{encounter:["dialogue:byron.encounter.1"],victory:["dialogue:byron.victory.1"],defeat:["dialogue:byron.defeat.1"]},[U.OLYMPIA]:{encounter:["dialogue:olympia.encounter.1"],victory:["dialogue:olympia.victory.1"],defeat:["dialogue:olympia.defeat.1"]},[U.VOLKNER]:{encounter:["dialogue:volkner.encounter.1"],victory:["dialogue:volkner.victory.1"],defeat:["dialogue:volkner.defeat.1"]},[U.BURGH]:{encounter:["dialogue:burgh.encounter.1","dialogue:burgh.encounter.2"],victory:["dialogue:burgh.victory.1","dialogue:burgh.victory.2"],defeat:["dialogue:burgh.defeat.1","dialogue:burgh.defeat.2"]},[U.ELESA]:{encounter:["dialogue:elesa.encounter.1"],victory:["dialogue:elesa.victory.1"],defeat:["dialogue:elesa.defeat.1"]},[U.SKYLA]:{encounter:["dialogue:skyla.encounter.1"],victory:["dialogue:skyla.victory.1"],defeat:["dialogue:skyla.defeat.1"]},[U.BRYCEN]:{encounter:["dialogue:brycen.encounter.1"],victory:["dialogue:brycen.victory.1"],defeat:["dialogue:brycen.defeat.1"]},[U.DRAYDEN]:{encounter:["dialogue:drayden.encounter.1"],victory:["dialogue:drayden.victory.1"],defeat:["dialogue:drayden.defeat.1"]},[U.GRANT]:{encounter:["dialogue:grant.encounter.1"],victory:["dialogue:grant.victory.1"],defeat:["dialogue:grant.defeat.1"]},[U.KORRINA]:{encounter:["dialogue:korrina.encounter.1"],victory:["dialogue:korrina.victory.1"],defeat:["dialogue:korrina.defeat.1"]},[U.CLEMONT]:{encounter:["dialogue:clemont.encounter.1"],victory:["dialogue:clemont.victory.1"],defeat:["dialogue:clemont.defeat.1"]},[U.VALERIE]:{encounter:["dialogue:valerie.encounter.1"],victory:["dialogue:valerie.victory.1"],defeat:["dialogue:valerie.defeat.1"]},[U.WULFRIC]:{encounter:["dialogue:wulfric.encounter.1"],victory:["dialogue:wulfric.victory.1"],defeat:["dialogue:wulfric.defeat.1"]},[U.KABU]:{encounter:["dialogue:kabu.encounter.1"],victory:["dialogue:kabu.victory.1"],defeat:["dialogue:kabu.defeat.1"]},[U.BEA]:{encounter:["dialogue:bea.encounter.1"],victory:["dialogue:bea.victory.1"],defeat:["dialogue:bea.defeat.1"]},[U.OPAL]:{encounter:["dialogue:opal.encounter.1"],victory:["dialogue:opal.victory.1"],defeat:["dialogue:opal.defeat.1"]},[U.BEDE]:{encounter:["dialogue:bede.encounter.1"],victory:["dialogue:bede.victory.1"],defeat:["dialogue:bede.defeat.1"]},[U.GORDIE]:{encounter:["dialogue:gordie.encounter.1"],victory:["dialogue:gordie.victory.1"],defeat:["dialogue:gordie.defeat.1"]},[U.MARNIE]:{encounter:["dialogue:marnie.encounter.1"],victory:["dialogue:marnie.victory.1"],defeat:["dialogue:marnie.defeat.1"]},[U.RAIHAN]:{encounter:["dialogue:raihan.encounter.1"],victory:["dialogue:raihan.victory.1"],defeat:["dialogue:raihan.defeat.1"]},[U.BRASSIUS]:{encounter:["dialogue:brassius.encounter.1"],victory:["dialogue:brassius.victory.1"],defeat:["dialogue:brassius.defeat.1"]},[U.IONO]:{encounter:["dialogue:iono.encounter.1"],victory:["dialogue:iono.victory.1"],defeat:["dialogue:iono.defeat.1"]},[U.LARRY]:{encounter:["dialogue:larry.encounter.1"],victory:["dialogue:larry.victory.1"],defeat:["dialogue:larry.defeat.1"]},[U.RYME]:{encounter:["dialogue:ryme.encounter.1"],victory:["dialogue:ryme.victory.1"],defeat:["dialogue:ryme.defeat.1"]},[U.GRUSHA]:{encounter:["dialogue:grusha.encounter.1"],victory:["dialogue:grusha.victory.1"],defeat:["dialogue:grusha.defeat.1"]},[U.MARNIE_ELITE]:{encounter:["dialogue:marnie_elite.encounter.1","dialogue:marnie_elite.encounter.2"],victory:["dialogue:marnie_elite.victory.1","dialogue:marnie_elite.victory.2"],defeat:["dialogue:marnie_elite.defeat.1","dialogue:marnie_elite.defeat.2"]},[U.NESSA_ELITE]:{encounter:["dialogue:nessa_elite.encounter.1","dialogue:nessa_elite.encounter.2"],victory:["dialogue:nessa_elite.victory.1","dialogue:nessa_elite.victory.2"],defeat:["dialogue:nessa_elite.defeat.1","dialogue:nessa_elite.defeat.2"]},[U.BEA_ELITE]:{encounter:["dialogue:bea_elite.encounter.1","dialogue:bea_elite.encounter.2"],victory:["dialogue:bea_elite.victory.1","dialogue:bea_elite.victory.2"],defeat:["dialogue:bea_elite.defeat.1","dialogue:bea_elite.defeat.2"]},[U.ALLISTER_ELITE]:{encounter:["dialogue:allister_elite.encounter.1","dialogue:allister_elite.encounter.2"],victory:["dialogue:allister_elite.victory.1","dialogue:allister_elite.victory.2"],defeat:["dialogue:allister_elite.defeat.1","dialogue:allister_elite.defeat.2"]},[U.RAIHAN_ELITE]:{encounter:["dialogue:raihan_elite.encounter.1","dialogue:raihan_elite.encounter.2"],victory:["dialogue:raihan_elite.victory.1","dialogue:raihan_elite.victory.2"],defeat:["dialogue:raihan_elite.defeat.1","dialogue:raihan_elite.defeat.2"]},[U.ALDER]:{encounter:["dialogue:alder.encounter.1"],victory:["dialogue:alder.victory.1"],defeat:["dialogue:alder.defeat.1"]},[U.KIERAN]:{encounter:["dialogue:kieran.encounter.1"],victory:["dialogue:kieran.victory.1"],defeat:["dialogue:kieran.defeat.1"]},[U.RIVAL]:[{encounter:["dialogue:rival.encounter.1"],victory:["dialogue:rival.victory.1"]},{encounter:["dialogue:rival_female.encounter.1"],victory:["dialogue:rival_female.victory.1"]}],[U.RIVAL_2]:[{encounter:["dialogue:rival_2.encounter.1"],victory:["dialogue:rival_2.victory.1"]},{encounter:["dialogue:rival_2_female.encounter.1"],victory:["dialogue:rival_2_female.victory.1"],defeat:["dialogue:rival_2_female.defeat.1"]}],[U.RIVAL_3]:[{encounter:["dialogue:rival_3.encounter.1"],victory:["dialogue:rival_3.victory.1"]},{encounter:["dialogue:rival_3_female.encounter.1"],victory:["dialogue:rival_3_female.victory.1"],defeat:["dialogue:rival_3_female.defeat.1"]}],[U.RIVAL_4]:[{encounter:["dialogue:rival_4.encounter.1"],victory:["dialogue:rival_4.victory.1"]},{encounter:["dialogue:rival_4_female.encounter.1"],victory:["dialogue:rival_4_female.victory.1"],defeat:["dialogue:rival_4_female.defeat.1"]}],[U.RIVAL_5]:[{encounter:["dialogue:rival_5.encounter.1"],victory:["dialogue:rival_5.victory.1"]},{encounter:["dialogue:rival_5_female.encounter.1"],victory:["dialogue:rival_5_female.victory.1"],defeat:["dialogue:rival_5_female.defeat.1"]}],[U.RIVAL_6]:[{encounter:["dialogue:rival_6.encounter.1"],victory:["dialogue:rival_6.victory.1"]},{encounter:["dialogue:rival_6_female.encounter.1"],victory:["dialogue:rival_6_female.victory.1"]}]},uZ={[xO.FINAL_BOSS]:{encounter:"battleSpecDialogue:encounter",firstStageWin:"battleSpecDialogue:firstStageWin",secondStageWin:"battleSpecDialogue:secondStageWin"}};function cZ(R){const e=/@c\{(.*?)\}/.exec(R);return e?e[1]:"neutral"}r(cZ,"getCharVariantFromDialogue");function Sv(){const R=Object.keys(q2).map(e=>Number.parseInt(e));for(const e of R){const I=q2[e],L=["encounter","victory","defeat"];for(const N of L)Array.isArray(I)?(I[0][N]&&(he[e][`${N}Messages`]=I[0][N]),I.length>1&&(he[e][`female${N.slice(0,1).toUpperCase()}${N.slice(1)}Messages`]=I[1][N])):he[e][`${N}Messages`]=I[N]}}r(Sv,"initTrainerTypeDialogue");const wO={playTime:{label_key:"playTime",sourceFunc:r(R=>_y(R.gameStats.playTime),"sourceFunc")},battles:{label_key:"totalBattles",sourceFunc:r(R=>R.gameStats.battles.toString(),"sourceFunc")},startersUnlocked:{label_key:"starters",sourceFunc:r(R=>{const e=R.getStarterCount(I=>!!I.caughtAttr);return`${e} (${Math.floor(e/Object.keys(FR).length*1e3)/10}%)`},"sourceFunc")},shinyStartersUnlocked:{label_key:"shinyStarters",sourceFunc:r(R=>{const e=R.getStarterCount(I=>!!(I.caughtAttr&vR.SHINY));return`${e} (${Math.floor(e/Object.keys(FR).length*1e3)/10}%)`},"sourceFunc")},dexSeen:{label_key:"speciesSeen",sourceFunc:r(R=>{const e=R.getSpeciesCount(I=>!!I.seenAttr);return`${e} (${Math.floor(e/Object.keys(R.dexData).length*1e3)/10}%)`},"sourceFunc")},dexCaught:{label_key:"speciesCaught",sourceFunc:r(R=>{const e=R.getSpeciesCount(I=>!!I.caughtAttr);return`${e} (${Math.floor(e/Object.keys(R.dexData).length*1e3)/10}%)`},"sourceFunc")},ribbonsOwned:{label_key:"ribbonsOwned",sourceFunc:r(R=>R.gameStats.ribbonsOwned.toString(),"sourceFunc")},classicSessionsPlayed:{label_key:"classicRuns",sourceFunc:r(R=>R.gameStats.classicSessionsPlayed.toString(),"sourceFunc")},sessionsWon:{label_key:"classicWins",sourceFunc:r(R=>R.gameStats.sessionsWon.toString(),"sourceFunc")},dailyRunSessionsPlayed:{label_key:"dailyRunAttempts",sourceFunc:r(R=>R.gameStats.dailyRunSessionsPlayed.toString(),"sourceFunc")},dailyRunSessionsWon:{label_key:"dailyRunWins",sourceFunc:r(R=>R.gameStats.dailyRunSessionsWon.toString(),"sourceFunc")},endlessSessionsPlayed:{label_key:"endlessRuns",sourceFunc:r(R=>R.gameStats.endlessSessionsPlayed.toString(),"sourceFunc"),hidden:!0},highestEndlessWave:{label_key:"highestWaveEndless",sourceFunc:r(R=>R.gameStats.highestEndlessWave.toString(),"sourceFunc"),hidden:!0},highestMoney:{label_key:"highestMoney",sourceFunc:r(R=>ly(R.gameStats.highestMoney),"sourceFunc")},highestDamage:{label_key:"highestDamage",sourceFunc:r(R=>R.gameStats.highestDamage.toString(),"sourceFunc")},highestHeal:{label_key:"highestHPHealed",sourceFunc:r(R=>R.gameStats.highestHeal.toString(),"sourceFunc")},pokemonSeen:{label_key:"pokemonEncountered",sourceFunc:r(R=>R.gameStats.pokemonSeen.toString(),"sourceFunc")},pokemonDefeated:{label_key:"pokemonDefeated",sourceFunc:r(R=>R.gameStats.pokemonDefeated.toString(),"sourceFunc")},pokemonCaught:{label_key:"pokemonCaught",sourceFunc:r(R=>R.gameStats.pokemonCaught.toString(),"sourceFunc")},pokemonHatched:{label_key:"eggsHatched",sourceFunc:r(R=>R.gameStats.pokemonHatched.toString(),"sourceFunc")},subLegendaryPokemonSeen:{label_key:"subLegendsSeen",sourceFunc:r(R=>R.gameStats.subLegendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonCaught:{label_key:"subLegendsCaught",sourceFunc:r(R=>R.gameStats.subLegendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonHatched:{label_key:"subLegendsHatched",sourceFunc:r(R=>R.gameStats.subLegendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},legendaryPokemonSeen:{label_key:"legendsSeen",sourceFunc:r(R=>R.gameStats.legendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},legendaryPokemonCaught:{label_key:"legendsCaught",sourceFunc:r(R=>R.gameStats.legendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},legendaryPokemonHatched:{label_key:"legendsHatched",sourceFunc:r(R=>R.gameStats.legendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},mythicalPokemonSeen:{label_key:"mythicalsSeen",sourceFunc:r(R=>R.gameStats.mythicalPokemonSeen.toString(),"sourceFunc"),hidden:!0},mythicalPokemonCaught:{label_key:"mythicalsCaught",sourceFunc:r(R=>R.gameStats.mythicalPokemonCaught.toString(),"sourceFunc"),hidden:!0},mythicalPokemonHatched:{label_key:"mythicalsHatched",sourceFunc:r(R=>R.gameStats.mythicalPokemonHatched.toString(),"sourceFunc"),hidden:!0},shinyPokemonSeen:{label_key:"shiniesSeen",sourceFunc:r(R=>R.gameStats.shinyPokemonSeen.toString(),"sourceFunc"),hidden:!0},shinyPokemonCaught:{label_key:"shiniesCaught",sourceFunc:r(R=>R.gameStats.shinyPokemonCaught.toString(),"sourceFunc"),hidden:!0},shinyPokemonHatched:{label_key:"shiniesHatched",sourceFunc:r(R=>R.gameStats.shinyPokemonHatched.toString(),"sourceFunc"),hidden:!0},pokemonFused:{label_key:"pokemonFused",sourceFunc:r(R=>R.gameStats.pokemonFused.toString(),"sourceFunc"),hidden:!0},trainersDefeated:{label_key:"trainersDefeated",sourceFunc:r(R=>R.gameStats.trainersDefeated.toString(),"sourceFunc")},eggsPulled:{label_key:"eggsPulled",sourceFunc:r(R=>R.gameStats.eggsPulled.toString(),"sourceFunc"),hidden:!0},rareEggsPulled:{label_key:"rareEggsPulled",sourceFunc:r(R=>R.gameStats.rareEggsPulled.toString(),"sourceFunc"),hidden:!0},epicEggsPulled:{label_key:"epicEggsPulled",sourceFunc:r(R=>R.gameStats.epicEggsPulled.toString(),"sourceFunc"),hidden:!0},legendaryEggsPulled:{label_key:"legendaryEggsPulled",sourceFunc:r(R=>R.gameStats.legendaryEggsPulled.toString(),"sourceFunc"),hidden:!0},manaphyEggsPulled:{label_key:"manaphyEggsPulled",sourceFunc:r(R=>R.gameStats.manaphyEggsPulled.toString(),"sourceFunc"),hidden:!0}},vg=class vg extends kn{constructor(e=null){super(e),this.statLabels=[],this.statValues=[]}setup(){const e=this.getUi();this.gameStatsContainer=T.add.container(1,-(T.game.canvas.height/6)+1),this.gameStatsContainer.setInteractive(new wR.Geom.Rectangle(0,0,T.game.canvas.width/6,T.game.canvas.height/6),wR.Geom.Rectangle.Contains);const I=zL(0,0,T.game.canvas.width/6-2,24);I.setOrigin(0,0);const L=oE(0,0,_.t("gameStatsUiHandler:stats"),XA.SETTINGS_LABEL);L.setOrigin(0,0),L.setPositionRelative(I,8,4);const N=(T.game.canvas.width/6-2)/2,[S,n]=new Array(2).fill(null).map((C,o)=>{const l=N+2,H=Math.floor(T.game.canvas.height/6-I.height-2),P=zL((N-2)*o,I.height,l,H,!1,!1,o>0?-3:0,1);return P.setOrigin(0,0),P});this.statsContainer=T.add.container(0,0),new Array(18).fill(null).map((C,o)=>{const l=oE(8+(o%2===1?N:0),28+Math.floor(o/2)*16,"",XA.STATS_LABEL);l.setOrigin(0,0),this.statsContainer.add(l),this.statLabels.push(l);const H=oE(N*(o%2+1)-8,l.y,"",XA.STATS_VALUE);H.setOrigin(1,0),this.statsContainer.add(H),this.statValues.push(H)}),this.gameStatsContainer.add(I),this.gameStatsContainer.add(L),this.gameStatsContainer.add(S),this.gameStatsContainer.add(n),this.gameStatsContainer.add(this.statsContainer);const i=T.uiTheme===rI.LEGACY;this.arrowDown=T.add.sprite(N,T.game.canvas.height/6-(i?9:5),"prompt"),this.gameStatsContainer.add(this.arrowDown),this.arrowUp=T.add.sprite(N,I.height+(i?7:3),"prompt"),this.arrowUp.flipY=!0,this.gameStatsContainer.add(this.arrowUp),e.add(this.gameStatsContainer),this.setCursor(0),this.gameStatsContainer.setVisible(!1)}show(e){return super.show(e),this.setCursor(0),this.updateStats(),this.arrowUp.play("prompt"),this.arrowDown.play("prompt"),T.uiTheme===rI.LEGACY&&(this.arrowUp.setTint(4737096),this.arrowDown.setTint(4737096)),this.updateArrows(),this.gameStatsContainer.setVisible(!0),this.getUi().moveTo(this.gameStatsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateStats(){const e=Object.keys(wO).slice(this.cursor*2,this.cursor*2+18);if(e.forEach((I,L)=>{const N=wO[I],S=N.sourceFunc(T.gameData);this.statLabels[L].setText(!N.hidden||Number.isNaN(Number.parseInt(S))||Number.parseInt(S)?_.t(`gameStatsUiHandler:${N.label_key}`):"???"),this.statValues[L].setText(S)}),e.length<18)for(let I=e.length;I<18;I++)this.statLabels[I].setText(""),this.statValues[I].setText("")}updateArrows(){const e=this.cursor>0;this.arrowUp.setVisible(e);const I=this.cursor<Math.ceil((Object.keys(wO).length-18)/2);this.arrowDown.setVisible(I)}processInput(e){const I=this.getUi();let L=!1;if(e===WE.CANCEL)L=!0,T.ui.revertMode();else switch(e){case WE.UP:this.cursor&&(L=this.setCursor(this.cursor-1));break;case WE.DOWN:this.cursor<Math.ceil((Object.keys(wO).length-18)/2)&&(L=this.setCursor(this.cursor+1));break}return L&&I.playSelect(),L}setCursor(e){const I=super.setCursor(e);return I&&(this.updateStats(),this.updateArrows()),I}clear(){super.clear(),this.gameStatsContainer.setVisible(!1)}};r(vg,"GameStatsUiHandler");let z2=vg;function Tv(){const R=Object.keys(wO);for(const e of R){if(typeof wO[e]=="string"){let I=wO[e],L=!1;I.endsWith("?")&&(I=I.slice(0,-1),L=!0),wO[e]={label_key:I,sourceFunc:r(N=>N.gameStats[e].toString(),"sourceFunc"),hidden:L}}else wO[e]===null&&(wO[e]={sourceFunc:r(I=>I.gameStats[e].toString(),"sourceFunc")});if(!wO[e].label_key){const I=e.replace(/([a-z]{2,})([A-Z]{1}(?:[^A-Z]|$))/g,"$1_$2");wO[e].label_key=WL(`${I[0].toUpperCase()}${I.slice(1)}`)}}}r(Tv,"initStatsKeys");function F3(R,e,I){switch(I){case MA.POKEBALL:j2(R,e,48);break;case MA.GREAT_BALL:j2(R,e,96);break;case MA.ULTRA_BALL:A4(R,e,8);break;case MA.ROGUE_BALL:A4(R,e,10);break;case MA.MASTER_BALL:sv(R,e);break}}r(F3,"addPokeballOpenParticles");function j2(R,e,I){const L=T.anims.generateFrameNames("pb_particles",{start:0,end:3,suffix:".png"});T.anims.exists("pb_open_particle")||T.anims.create({key:"pb_open_particle",frames:L,frameRate:16,repeat:-1});const N=r(n=>{const i=T.add.sprite(R,e,"pb_open_particle");T.field.add(i);const C=n*45,[o,l]=[I*Math.cos(C*Math.PI/180),I*Math.sin(C*Math.PI/180)];T.tweens.add({targets:i,x:R+o,y:e+l,duration:575}),i.play({key:"pb_open_particle",startFrame:(n+3)%4,frameRate:Math.floor(16*T.gameSpeed)}),T.tweens.add({targets:i,delay:500,duration:75,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>i.destroy(),"onComplete")})},"addParticle");let S=0;T.time.addEvent({delay:20,repeat:16,callback:r(()=>N(++S),"callback")})}r(j2,"doDefaultPbOpenParticles");function A4(R,e,I){const L=[];for(let N=0;N<10;N++)L.push(Y3(N*25,R,e,1,1,5,I));T.tweens.add({targets:L,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>{for(const N of L)N.destroy()},"onComplete")})}r(A4,"doUbOpenParticles");function sv(R,e){const I=[];for(let L=0;L<2;L++){for(let N=0;N<8;N++)I.push(Y3(N*32,R,e,L?1:2,L?2:1,8,4));T.tweens.add({targets:I,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>{for(const N of I)N.destroy()},"onComplete")})}}r(sv,"doMbOpenParticles");function Y3(R,e,I,L,N,S,n){let i=0;const C=T.add.image(e,I,"pb_particles",`${n}.png`);T.field.add(C);const o=r(()=>{if(!C.scene)return l.remove();C.x=e+gr(R,i*L),C.y=I+L_(R,i*N),R=R+S,i++},"updateParticle"),l=T.tweens.addCounter({repeat:-1,duration:xR(1),onRepeat:r(()=>{o()},"onRepeat")});return C}r(Y3,"doFanOutParticle");function av(R){const e=r(()=>{const I=T.add.sprite(R.x,R.y,"pb_particles","4.png");I.setOrigin(R.originX,R.originY),I.setAlpha(.5),T.field.add(I),T.tweens.add({targets:I,y:R.y-10,ease:"Sine.easeOut",duration:250,onComplete:r(()=>{T.tweens.add({targets:I,y:R.y,alpha:0,ease:"Sine.easeIn",duration:250})},"onComplete")});const L=Gy(25);T.tweens.add({targets:I,x:R.x+L,duration:500}),T.tweens.add({targets:I,alpha:0,delay:425,duration:75,onComplete:r(()=>I.destroy(),"onComplete")})},"addParticle");new Array(3).fill(null).map(()=>e())}r(av,"addPokeballCaptureStars");function gr(R,e){return e*Math.sin(R*(Math.PI/128))}r(gr,"sin");function L_(R,e){return e*Math.cos(R*(Math.PI/128))}r(L_,"cos");function _H(R,e){const I=e?`_${e+1}`:"",L=`shiny${I}`,N=`sparkle${I}`;if(!T.anims.exists(N)){const S=T.anims.generateFrameNames(L,{suffix:".png",end:34});T.anims.create({key:`sparkle${I}`,frames:S,frameRate:32,showOnStart:!0,hideOnComplete:!0})}R.play(N),T.playSound("se/sparkle")}r(_H,"doShinySparkleAnim");function eR(R,e){if(SA(R))return null;const I=T.uiTheme??rI.DEFAULT;let L=nv(R);return e&&L&&(L=eV(L,e,I)),L}r(eR,"getEncounterText");function nv(R){var I,L;const e=(L=(I=T.currentBattle)==null?void 0:I.mysteryEncounter)==null?void 0:L.dialogueTokens;return _.exists(R,e)?_.t(R,e):R??null}r(nv,"getTextWithDialogueTokens");function le(R){const e=eR(R);T.phaseManager.queueMessage(e??"",null,!0)}r(le,"queueEncounterMessage");function HE(R,e=null,I=0,L=!0,N=null){return new Promise(S=>{const n=eR(R);T.ui.showText(n??"",e,()=>S(),I,L,N)})}r(HE,"showEncounterText");function FI(R,e,I=null,L=0){return new Promise(N=>{const S=eR(R),n=eR(e);T.ui.showDialogue(S??"",n??"",I,()=>N(),L)})}r(FI,"showEncounterDialogue");const rv={};var Z0=(R=>(R[R.PROFILE=0]="PROFILE",R[R.STATS=1]="STATS",R[R.MOVES=2]="MOVES",R))(Z0||{}),W3=(R=>(R[R.DEFAULT=0]="DEFAULT",R[R.LEARN_MOVE=1]="LEARN_MOVE",R))(W3||{});const xg=class xg extends kn{constructor(){super(hE.SUMMARY)}setup(){const e=this.getUi();this.summaryContainer=T.add.container(0,0),this.summaryContainer.setVisible(!1),e.add(this.summaryContainer);const I=T.add.image(0,0,"summary_bg");I.setOrigin(0,1),this.summaryContainer.add(I),this.tabSprite=T.add.sprite(134,-I.displayHeight+16,"summary_tabs_1"),this.tabSprite.setOrigin(1,1),this.summaryContainer.add(this.tabSprite);const L=oE(4,-165,_.t("pokemonSummary:pokemonInfo"),XA.SUMMARY);L.setOrigin(0,1),this.summaryContainer.add(L),this.shinyOverlay=T.add.image(6,-54,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,1),this.shinyOverlay.setVisible(!1),this.summaryContainer.add(this.shinyOverlay),this.numberText=oE(17,-149,"0000",XA.SUMMARY),this.numberText.setOrigin(0,1),this.summaryContainer.add(this.numberText),this.pokemonSprite=T.initPokemonSprite(T.add.sprite(56,-106,"pkmn__sub"),void 0,!1,!0),this.summaryContainer.add(this.pokemonSprite),this.nameText=oE(6,-54,"",XA.SUMMARY),this.nameText.setOrigin(0,0),this.summaryContainer.add(this.nameText),this.splicedIcon=T.add.sprite(0,-54,"icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.75),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.splicedIcon),this.shinyIcon=T.add.image(0,-54,"shiny_star"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.75),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.shinyIcon),this.fusionShinyIcon=T.add.image(0,0,"shiny_star_2"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.75),this.summaryContainer.add(this.fusionShinyIcon),this.pokeball=T.add.sprite(6,-19,"pb"),this.pokeball.setOrigin(0,1),this.summaryContainer.add(this.pokeball),this.candyIcon=T.add.sprite(13,-140,"candy"),this.candyIcon.setScale(.8),this.summaryContainer.add(this.candyIcon),this.candyOverlay=T.add.sprite(13,-140,"candy_overlay"),this.candyOverlay.setScale(.8),this.summaryContainer.add(this.candyOverlay),this.candyShadow=T.add.sprite(13,-140,"candy"),this.candyShadow.setTint(0),this.candyShadow.setAlpha(.5),this.candyShadow.setScale(.8),this.candyShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,30,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.candyShadow),this.candyCountText=oE(20,-146,"x0",XA.WINDOW_ALT,{fontSize:"76px"}),this.candyCountText.setOrigin(0,0),this.summaryContainer.add(this.candyCountText),this.friendshipIcon=T.add.sprite(13,-60,"friendship"),this.friendshipIcon.setScale(.8),this.summaryContainer.add(this.friendshipIcon),this.friendshipOverlay=T.add.sprite(13,-60,"friendship_overlay"),this.friendshipOverlay.setScale(.8),this.summaryContainer.add(this.friendshipOverlay),this.friendshipShadow=T.add.sprite(13,-60,"friendship"),this.friendshipShadow.setTint(0),this.friendshipShadow.setAlpha(.5),this.friendshipShadow.setScale(.8),this.friendshipShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,50,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.friendshipShadow),this.friendshipText=oE(20,-66,"x0",XA.WINDOW_ALT,{fontSize:"76px"}),this.friendshipText.setOrigin(0,0),this.summaryContainer.add(this.friendshipText),this.championRibbon=T.add.image(88,-146,"champion_ribbon"),this.championRibbon.setOrigin(0,0),this.championRibbon.setScale(1.25),this.summaryContainer.add(this.championRibbon),this.championRibbon.setVisible(!1),this.levelText=oE(24,-17,"",XA.SUMMARY_ALT),this.levelText.setOrigin(0,1),this.summaryContainer.add(this.levelText),this.genderText=oE(96,-17,"",XA.SUMMARY),this.genderText.setOrigin(0,1),this.summaryContainer.add(this.genderText),this.statusContainer=T.add.container(-106,-16);const N=T.add.image(0,0,"summary_status");N.setOrigin(0,0),this.statusContainer.add(N);const S=oE(3,0,_.t("pokemonSummary:status"),XA.SUMMARY);S.setOrigin(0,0),this.statusContainer.add(S),this.status=T.add.sprite(91,4,Kt("statuses")),this.status.setOrigin(.5,0),this.statusContainer.add(this.status),this.summaryContainer.add(this.statusContainer),this.moveEffectContainer=T.add.container(106,-62),this.summaryContainer.add(this.moveEffectContainer);const n=T.add.image(0,0,"summary_moves_effect");n.setOrigin(0,0),this.moveEffectContainer.add(n);const i=oE(8,12,_.t("pokemonSummary:powerAccuracyCategory"),XA.SUMMARY);i.setLineSpacing(9),i.setOrigin(0,0),this.moveEffectContainer.add(i),this.movePowerText=oE(99,27,"0",XA.WINDOW_ALT),this.movePowerText.setOrigin(1,1),this.moveEffectContainer.add(this.movePowerText),this.moveAccuracyText=oE(99,43,"0",XA.WINDOW_ALT),this.moveAccuracyText.setOrigin(1,1),this.moveEffectContainer.add(this.moveAccuracyText),this.moveCategoryIcon=T.add.sprite(99,57,"categories"),this.moveCategoryIcon.setOrigin(1,1),this.moveEffectContainer.add(this.moveCategoryIcon);const C=r(()=>{const o=T.add.sprite(0,0,this.getPageKey(0));return o.setOrigin(0,1),o},"getSummaryPageBg");this.summaryContainer.add(this.summaryPageContainer=T.add.container(106,0)),this.summaryPageContainer.add(C()),this.summaryPageContainer.setVisible(!1),this.summaryContainer.add(this.summaryPageTransitionContainer=T.add.container(106,0)),this.summaryPageTransitionContainer.add(C()),this.summaryPageTransitionContainer.setVisible(!1)}getPageKey(e){return e===void 0&&(e=this.cursor),`summary_${Z0[e].toLowerCase()}`}show(e){var H,P,K,f,h;super.show(e),this.pokemon=e[0],this.summaryUiMode=e.length>1?e[1]:0,this.playerParty=e[4]??!0,T.ui.bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.cursor=-1,this.shinyOverlay.setVisible(this.pokemon.isShiny());const I=rv[this.pokemon.species.getRootSpeciesId()];this.candyIcon.setTint(YN(_N(I[0]))),this.candyOverlay.setTint(YN(_N(I[1]))),this.numberText.setText(UT(this.pokemon.species.speciesId,4)),this.numberText.setColor(this.getTextColor(this.pokemon.isShiny()?XA.SUMMARY_GOLD:XA.SUMMARY)),this.numberText.setShadowColor(this.getTextColor(this.pokemon.isShiny()?XA.SUMMARY_GOLD:XA.SUMMARY,!0));const L=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(L)}catch(F){console.error(`Failed to play animation for ${L}`,F)}this.pokemonSprite.setPipelineData("teraColor",Zt(this.pokemon.getTeraType())),this.pokemonSprite.setPipelineData("isTerastallized",this.pokemon.isTerastallized),this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",((H=this.pokemon.summonData.illusion)==null?void 0:H.basePokemon.shiny)??this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",((P=this.pokemon.summonData.illusion)==null?void 0:P.basePokemon.variant)??this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(F=>{var w,m;delete this.pokemonSprite.pipelineData[`${F}Base`],(w=this.pokemon)!=null&&w.summonData.speciesForm&&(F+="Base"),this.pokemonSprite.pipelineData[F]=(m=this.pokemon)==null?void 0:m.getSprite().pipelineData[F]}),this.pokemon.cry(),this.nameText.setText(this.pokemon.getNameToRender(!1));const N=this.pokemon.isFusion();this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+2,3),this.splicedIcon.setVisible(N),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var F,w,m,y;return T.ui.showTooltip("",`${(F=this.pokemon)==null?void 0:F.species.getName(this.pokemon.formIndex)}/${(y=(w=this.pokemon)==null?void 0:w.fusionSpecies)==null?void 0:y.getName((m=this.pokemon)==null?void 0:m.fusionFormIndex)}`,!0)}),this.splicedIcon.on("pointerout",()=>T.ui.hideTooltip())),T.gameData.starterData[this.pokemon.species.getRootSpeciesId()].classicWinCount>0&&T.gameData.starterData[this.pokemon.species.getRootSpeciesId(!0)].classicWinCount>0?this.championRibbon.setVisible(!0):this.championRibbon.setVisible(!1);let S=T.gameData.starterData[this.pokemon.species.getRootSpeciesId()].friendship;(!S||S===void 0)&&(S=0);const n=X4(FR[this.pokemon.species.getRootSpeciesId()]),i=16-16*(S/n);this.candyShadow.visible&&(this.candyShadow.on("pointerover",()=>T.ui.showTooltip("",`${S}/${n}`,!0)),this.candyShadow.on("pointerout",()=>T.ui.hideTooltip())),this.candyCountText.setText(`x${T.gameData.starterData[this.pokemon.species.getRootSpeciesId()].candyCount}`),this.candyShadow.setCrop(0,0,16,i),this.friendshipShadow.visible&&(this.friendshipShadow.on("pointerover",()=>T.ui.showTooltip("",`${_.t("pokemonSummary:friendship")}`,!0)),this.friendshipShadow.on("pointerout",()=>T.ui.hideTooltip())),this.friendshipText.setText(`${((K=this.pokemon)==null?void 0:K.friendship)||"0"} / 255`),this.friendshipShadow.setCrop(0,0,16,16-16*((((f=this.pokemon)==null?void 0:f.friendship)||0)/255));const C=this.pokemon.isDoubleShiny(!1),o=this.pokemon.getBaseVariant(C);if(this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0)+1,3),this.shinyIcon.setTexture(`shiny_star${C?"_1":""}`),this.shinyIcon.setVisible(this.pokemon.isShiny(!1)),this.shinyIcon.setTint(jI(o)),this.shinyIcon.visible){let F="";(C||o)&&(F=" ("+OC(o),C&&(F+="/"+OC(this.pokemon.fusionVariant)),F+=")"),this.shinyIcon.on("pointerover",()=>T.ui.showTooltip("",_.t("common:shinyOnHover")+F,!0)).on("pointerout",()=>T.ui.hideTooltip())}switch(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(C),N&&this.fusionShinyIcon.setTint(jI(((h=this.pokemon.summonData.illusion)==null?void 0:h.basePokemon.fusionVariant)??this.pokemon.fusionVariant)),this.pokeball.setFrame(lS(this.pokemon.pokeball)),this.levelText.setText(`${_.t("pokemonSummary:lv")}${this.pokemon.level.toString()}`),this.genderText.setText($s(this.pokemon.getGender(!0))),this.genderText.setColor(aS(this.pokemon.getGender(!0))),this.genderText.setShadowColor(aS(this.pokemon.getGender(!0),!0)),this.summaryUiMode){case 0:{const F=e.length<2?0:e[2];this.hideMoveEffect(!0),this.setCursor(F),e.length>3&&(this.selectCallback=e[3]);break}case 1:this.newMove=e[2],this.moveSelectFunction=e[3],this.showMoveEffect(!0),this.setCursor(2),this.showMoveSelect();break}const l=e.length>=2;return this.pokemon.status||this.pokemon.pokerus?(this.showStatus(!l),this.status.setFrame(this.pokemon.status?J[this.pokemon.status.effect].toLowerCase():"pokerus")):this.hideStatus(!l),!0}processInput(e){var n,i,C,o,l,H,P,K,f;if(this.transitioning)return!1;const I=this.getUi(),L=I.handlers[hE.PARTY].active;let N=!1,S=!1;if(this.moveSelect)if(e===WE.ACTION)if(this.pokemon&&this.moveCursor<this.pokemon.moveset.length){if(this.summaryUiMode===1)(n=this.moveSelectFunction)==null||n.call(this,this.moveCursor);else if(this.selectedMoveIndex===-1)this.selectedMoveIndex=this.moveCursor,this.setCursor(this.moveCursor);else{if(this.selectedMoveIndex!==this.moveCursor){const h=(i=this.pokemon)==null?void 0:i.moveset[this.selectedMoveIndex];this.pokemon.moveset[this.selectedMoveIndex]=this.pokemon.moveset[this.moveCursor],this.pokemon.moveset[this.moveCursor]=h;const F=this.moveRowsContainer.getAt(this.selectedMoveIndex),w=this.moveRowsContainer.getAt(this.moveCursor);this.moveRowsContainer.moveTo(F,this.moveCursor),this.moveRowsContainer.moveTo(w,this.selectedMoveIndex),F.setY(this.moveCursor*16),w.setY(this.selectedMoveIndex*16)}this.selectedMoveIndex=-1,this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}N=!0}else{if(this.moveCursor===4)return this.processInput(WE.CANCEL);S=!0}else if(e===WE.CANCEL)this.hideMoveSelect(),N=!0;else switch(e){case WE.UP:N=this.setCursor(this.moveCursor?this.moveCursor-1:4);break;case WE.DOWN:N=this.setCursor(this.moveCursor<4?this.moveCursor+1:0);break;case WE.LEFT:if(this.moveSelect=!1,this.setCursor(1),this.summaryUiMode===1){this.hideMoveEffect(),this.destroyBlinkCursor(),N=!0;break}this.hideMoveSelect(),N=!0;break}else if(e===WE.ACTION)this.cursor===2?(this.showMoveSelect(),N=!0):this.cursor===0&&((C=this.pokemon)!=null&&C.hasPassive())?((l=this.abilityContainer.nameText)==null||l.setVisible(!((o=this.abilityContainer.descriptionText)!=null&&o.visible)),(H=this.abilityContainer.descriptionText)==null||H.setVisible(!this.abilityContainer.descriptionText.visible),this.abilityContainer.labelImage.setVisible(!this.abilityContainer.labelImage.visible),(K=this.passiveContainer.nameText)==null||K.setVisible(!((P=this.passiveContainer.descriptionText)!=null&&P.visible)),(f=this.passiveContainer.descriptionText)==null||f.setVisible(!this.passiveContainer.descriptionText.visible),this.passiveContainer.labelImage.setVisible(!this.passiveContainer.labelImage.visible)):this.cursor===1&&(this.permStatsContainer.setVisible(!this.permStatsContainer.visible),this.ivContainer.setVisible(!this.ivContainer.visible));else if(e===WE.CANCEL){if(this.summaryUiMode===1)this.hideMoveSelect();else{if(this.selectCallback instanceof Function){const h=this.selectCallback;this.selectCallback=null,h()}L?I.setMode(hE.PARTY):I.setMode(hE.MESSAGE)}N=!0}else{const h=nR(Z0);switch(e){case WE.UP:case WE.DOWN:{if(this.summaryUiMode===1||!L)break;const F=e===WE.DOWN,w=T.getPlayerParty(),m=this.pokemon?w.indexOf(this.pokemon):-1;if(F&&m<w.length-1||!F&&m){const y=this.cursor;this.clear(),this.show([w[m+(F?1:-1)],this.summaryUiMode,y])}break}case WE.LEFT:this.cursor&&(N=this.setCursor(this.cursor-1));break;case WE.RIGHT:this.cursor<h.length-1&&(N=this.setCursor(this.cursor+1),this.summaryUiMode===1&&this.cursor===2&&(this.moveSelect=!0));break}}return N?I.playSelect():S&&I.playError(),N||S}setCursor(e,I=!1){let L=I||this.moveCursor!==e;if(this.moveSelect){this.moveCursor=e;const N=this.getSelectedMove();N?(this.moveDescriptionText.setY(84),this.movePowerText.setText(N.power>=0?N.power.toString():"---"),this.moveAccuracyText.setText(N.accuracy>=0?N.accuracy.toString():"---"),this.moveCategoryIcon.setFrame(G[N.category].toLowerCase()),this.showMoveEffect()):this.hideMoveEffect(),this.moveDescriptionText.setText((N==null?void 0:N.effect)||"");const S=Math.floor(this.moveDescriptionText.displayHeight/14.83);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),S>3&&(this.descriptionScrollTween=T.tweens.add({targets:this.moveDescriptionText,delay:We(2e3),loop:-1,hold:We(2e3),duration:We((S-3)*2e3),y:`-=${14.83*(S-3)}`})),this.moveCursorObj||(this.moveCursorObj=T.add.sprite(-2,0,"summary_moves_cursor","highlight"),this.moveCursorObj.setOrigin(0,1),this.movesContainer.add(this.moveCursorObj)),this.moveCursorObj.setY(16*this.moveCursor+1),this.moveCursorBlinkTimer&&this.moveCursorBlinkTimer.destroy(),this.moveCursorObj.setVisible(!0),this.moveCursorBlinkTimer=T.time.addEvent({loop:!0,delay:We(600),callback:r(()=>{var n;(n=this.moveCursorObj)==null||n.setVisible(!1),T.time.delayedCall(We(100),()=>{this.moveCursorObj&&this.moveCursorObj.setVisible(!0)})},"callback")}),this.selectedMoveIndex>-1&&(this.selectedMoveCursorObj||(this.selectedMoveCursorObj=T.add.sprite(-2,0,"summary_moves_cursor","select"),this.selectedMoveCursorObj.setOrigin(0,1),this.movesContainer.add(this.selectedMoveCursorObj),this.movesContainer.moveBelow(this.selectedMoveCursorObj,this.moveCursorObj)),this.selectedMoveCursorObj.setY(16*this.selectedMoveIndex+1))}else if(L=this.cursor!==e,L){const N=this.cursor<e;this.cursor=e,this.tabSprite.setTexture(`summary_tabs_${this.cursor+1}`),this.getUi().hideTooltip(),this.summaryPageContainer.visible?(this.transitioning=!0,this.populatePageContainer(this.summaryPageTransitionContainer,N?e:e+1),N?this.summaryPageTransitionContainer.x+=214:this.populatePageContainer(this.summaryPageContainer),T.tweens.add({targets:this.summaryPageTransitionContainer,x:N?"-=214":"+=214",duration:250,onComplete:r(()=>{N?(this.populatePageContainer(this.summaryPageContainer),this.cursor===2&&(this.moveCursorObj=null,this.showMoveSelect(),this.showMoveEffect())):this.summaryPageTransitionContainer.x-=214,this.summaryPageTransitionContainer.setVisible(!1),this.transitioning=!1},"onComplete")}),this.summaryPageTransitionContainer.setVisible(!0)):(this.populatePageContainer(this.summaryPageContainer),this.summaryPageContainer.setVisible(!0))}return L}populatePageContainer(e,I){var N,S,n,i,C,o,l,H,P,K,f,h,F,w,m,y,x,q,IA,$,tA,UA,RA;I===void 0&&(I=this.cursor),e.getAll().length>1&&(e.each(OA=>{OA instanceof Phaser.GameObjects.Container&&OA.removeAll(!0)}),e.removeBetween(1,void 0,!0));const L=e.getAt(0);switch(L.setTexture(this.getPageKey(I)),this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),I){case 0:{const OA=T.add.container(0,-L.height);e.add(OA);const NA=IG(7,12,`${_.t("pokemonSummary:ot")}/${kI((FO==null?void 0:FO.username)||_.t("pokemonSummary:unknown"),T.gameData.gender===de.FEMALE?XA.SUMMARY_PINK:XA.SUMMARY_BLUE)}`,XA.SUMMARY_ALT);NA.setOrigin(0,0),OA.add(NA);const iA=oE(141,12,`${_.t("pokemonSummary:idNo")}${T.gameData.trainerId.toString()}`,XA.SUMMARY_ALT);iA.setOrigin(0,0),OA.add(iA);const KA=oE(7,28,`${_.t("pokemonSummary:type")}/`,XA.WINDOW_ALT);KA.setOrigin(0,0),OA.add(KA);const wA=r((TA,GA,zA=!1)=>{const jA=KA.width*KA.scale+9+34*TA,ME=zA?T.add.sprite(jA,42,"type_tera"):T.add.sprite(jA,42,Kt("types"),t[GA].toLowerCase());if(zA){ME.setScale(.5);const eE=Zt(GA);ME.setTint(Phaser.Display.Color.GetColor(eE[0],eE[1],eE[2]))}return ME.setOrigin(0,1),ME},"getTypeIcon"),vA=(N=this.pokemon)==null?void 0:N.getTypes(!1,!1,!0,!1);if(OA.add(wA(0,vA[0])),vA.length>1&&OA.add(wA(1,vA[1])),(S=this.pokemon)!=null&&S.getLuck()){const TA=oE(141,28,_.t("common:luckIndicator"),XA.SUMMARY_ALT);TA.setOrigin(0,0),OA.add(TA);const GA=oE(141+TA.displayWidth+2,28,this.pokemon.getLuck().toString(),XA.SUMMARY);GA.setOrigin(0,0),GA.setTint(jI(Math.min(this.pokemon.getLuck()-1,2))),OA.add(GA)}if(T.gameData.achvUnlocks.hasOwnProperty(YE.TERASTALLIZE.id)&&!SA(this.pokemon)){const TA=T.add.sprite(123,26,"button_tera");TA.setName("terrastallize-icon"),TA.setFrame(t[this.pokemon.getTeraType()].toLowerCase()),OA.add(TA)}this.abilityContainer={labelImage:T.add.image(0,0,"summary_profile_ability"),ability:(n=this.pokemon)==null?void 0:n.getAbility(!0),nameText:null,descriptionText:null};const $A=[this.abilityContainer];(i=this.pokemon)!=null&&i.hasPassive()&&(this.passiveContainer={labelImage:T.add.image(0,0,"summary_profile_passive"),ability:this.pokemon.getPassiveAbility(),nameText:null,descriptionText:null},$A.push(this.passiveContainer),this.abilityPrompt=T.add.image(0,0,(C=T.inputController)!=null&&C.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,43),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),OA.add(this.abilityPrompt)),$A.forEach(TA=>{var ME,eE;TA.labelImage.setPosition(17,43),TA.labelImage.setVisible(!0),TA.labelImage.setOrigin(0,0),OA.add(TA.labelImage),TA.nameText=oE(7,66,(ME=TA.ability)==null?void 0:ME.name,XA.SUMMARY_ALT),TA.nameText.setOrigin(0,1),OA.add(TA.nameText),TA.descriptionText=oE(7,69,(eE=TA.ability)==null?void 0:eE.description,XA.WINDOW_ALT,{wordWrap:{width:1224}}),TA.descriptionText.setOrigin(0,0),OA.add(TA.descriptionText);const GA=T.make.graphics({});GA.setScale(6),GA.fillStyle(16777215),GA.beginPath(),GA.fillRect(110,90.5,206,31);const zA=GA.createGeometryMask();TA.descriptionText.setMask(zA);const jA=Math.floor(TA.descriptionText.displayHeight/14.83);jA>2&&(TA.descriptionText.setY(69),this.descriptionScrollTween=T.tweens.add({targets:TA.descriptionText,delay:We(2e3),loop:-1,hold:We(2e3),duration:We((jA-2)*2e3),y:`-=${14.83*(jA-2)}`}))}),(o=this.passiveContainer)==null||o.labelImage.setVisible(!1),(H=(l=this.passiveContainer)==null?void 0:l.nameText)==null||H.setVisible(!1),(K=(P=this.passiveContainer)==null?void 0:P.descriptionText)==null||K.setVisible(!1);const RE=kI("",XA.WINDOW_ALT),LE=WL(ZA[(f=this.pokemon)==null?void 0:f.getNature()]),cA=`${kI(WL(kt((h=this.pokemon)==null?void 0:h.getNature())),XA.SUMMARY_RED)}${RE}`,nA=_.t("pokemonSummary:memoString",{metFragment:_.t(`pokemonSummary:metFragment.${((F=this.pokemon)==null?void 0:F.metBiome)===-1?"apparently":"normal"}`,{biome:`${kI(J4((w=this.pokemon)==null?void 0:w.metBiome),XA.SUMMARY_RED)}${RE}`,level:`${kI((m=this.pokemon)==null?void 0:m.metLevel.toString(),XA.SUMMARY_RED)}${RE}`,wave:`${kI((y=this.pokemon)!=null&&y.metWave?this.pokemon.metWave.toString():_.t("pokemonSummary:unknownTrainer"),XA.SUMMARY_RED)}${RE}`}),natureFragment:_.t(`pokemonSummary:natureFragment.${LE}`,{nature:cA})}),lA=IG(7,113,String(nA),XA.WINDOW_ALT);lA.setOrigin(0,0),OA.add(lA);break}case 1:{this.statsContainer=T.add.container(0,-L.height),e.add(this.statsContainer),this.permStatsContainer=T.add.container(27,56),this.statsContainer.add(this.permStatsContainer),this.ivContainer=T.add.container(27,56),this.statsContainer.add(this.ivContainer),this.statsContainer.setVisible(!0),BT.forEach((jA,ME)=>{var Nt,TN,St,SO,XR,JO;const eE=_.t(aR(jA)),gE=ME%3,ae=Math.floor(ME/3),ge=I_((Nt=this.pokemon)==null?void 0:Nt.getNature(),ME),NO=oE(115*ae+(ae===1?5:0),16*gE,eE,ge===1?XA.SUMMARY:ge>1?XA.SUMMARY_PINK:XA.SUMMARY_BLUE),WR=oE(115*ae+(ae===1?5:0),16*gE,eE,((TN=this.pokemon)==null?void 0:TN.ivs[jA])===31?XA.SUMMARY_GOLD:XA.SUMMARY);NO.setOrigin(.5,0),WR.setOrigin(.5,0),this.permStatsContainer.add(NO),this.ivContainer.add(WR);const oR=jA!==c.HP?s_((St=this.pokemon)==null?void 0:St.getStat(jA)):`${s_((SO=this.pokemon)==null?void 0:SO.hp,!0)}/${s_((XR=this.pokemon)==null?void 0:XR.getMaxHp(),!0)}`,SN=`${(JO=this.pokemon)==null?void 0:JO.ivs[jA]}/31`,Lt=oE(93+88*ae,16*gE,oR,XA.WINDOW_ALT);Lt.setOrigin(1,0),this.permStatsContainer.add(Lt);const zt=oE(93+88*ae,16*gE,SN,XA.WINDOW_ALT);zt.setOrigin(1,0),this.ivContainer.add(zt)}),this.ivContainer.setVisible(!1),T.findModifiers(jA=>{var ME;return jA instanceof GE&&jA.pokemonId===((ME=this.pokemon)==null?void 0:ME.id)},this.playerParty).sort(ZC).forEach((jA,ME)=>{const eE=jA.getIcon(!0);eE.setPosition(ME%17*12+3,14*Math.floor(ME/17)+15),this.statsContainer.add(eE),eE.setInteractive(new Phaser.Geom.Rectangle(0,0,32,32),Phaser.Geom.Rectangle.Contains),eE.on("pointerover",()=>T.ui.showTooltip(jA.type.name,jA.type.getDescription(),!0)),eE.on("pointerout",()=>T.ui.hideTooltip())});const NA=(x=this.pokemon)==null?void 0:x.level,iA=(q=this.pokemon)==null?void 0:q.levelExp,KA=(IA=this.pokemon)==null?void 0:IA.exp,wA=($=this.pokemon)==null?void 0:$.species.growthRate,vA=A3(NA+1,wA),$A=NA<T.getMaxExpLevel()?iA/vA:0,RE=oE(6,112,_.t("pokemonSummary:expPoints"),XA.SUMMARY);RE.setOrigin(0,0),this.statsContainer.add(RE);const LE=oE(6,128,_.t("pokemonSummary:nextLv"),XA.SUMMARY);LE.setOrigin(0,0),this.statsContainer.add(LE);const cA=oE(208,112,KA.toString(),XA.WINDOW_ALT);cA.setOrigin(1,0),this.statsContainer.add(cA);const nA=NA<T.getMaxExpLevel()?BO(NA+1,wA)-KA:0,lA=oE(208,128,nA.toString(),XA.WINDOW_ALT);lA.setOrigin(1,0),this.statsContainer.add(lA);const TA=T.add.image(140,145,"summary_stats_overlay_exp");TA.setOrigin(0,0),this.statsContainer.add(TA);const GA=T.make.graphics({});GA.setScale(6),GA.fillStyle(16777215),GA.beginPath(),GA.fillRect(140+e.x,145+e.y+21,Math.floor($A*64),3);const zA=GA.createGeometryMask();TA.setMask(zA),this.abilityPrompt=T.add.image(0,0,(tA=T.inputController)!=null&&tA.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,47),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),this.statsContainer.add(this.abilityPrompt);break}case 2:{this.movesContainer=T.add.container(5,-L.height+26),e.add(this.movesContainer),this.extraMoveRowContainer=T.add.container(0,64),this.extraMoveRowContainer.setVisible(!1),this.movesContainer.add(this.extraMoveRowContainer);const OA=T.add.image(-2,1,"summary_moves_overlay_row");OA.setOrigin(0,1),this.extraMoveRowContainer.add(OA);const NA=oE(35,0,this.summaryUiMode===1&&this.newMove?this.newMove.name:_.t("pokemonSummary:cancel"),this.summaryUiMode===1?XA.SUMMARY_PINK:XA.SUMMARY);if(NA.setOrigin(0,1),this.extraMoveRowContainer.add(NA),this.summaryUiMode===1){if(this.extraMoveRowContainer.setVisible(!0),this.newMove&&this.pokemon){const RE=Kt("types"),LE=this.pokemon.getMoveType(this.newMove),cA=T.add.sprite(0,0,RE,t[LE].toLowerCase());cA.setOrigin(0,1),this.extraMoveRowContainer.add(cA)}const wA=T.add.image(163,-1,"summary_moves_overlay_pp");wA.setOrigin(0,1),this.extraMoveRowContainer.add(wA);const vA=UT((UA=this.newMove)==null?void 0:UA.pp,2,"  "),$A=oE(173,1,`${vA}/${vA}`,XA.WINDOW);$A.setOrigin(0,1),this.extraMoveRowContainer.add($A)}this.moveRowsContainer=T.add.container(0,0),this.movesContainer.add(this.moveRowsContainer);for(let wA=0;wA<4;wA++){const vA=this.pokemon&&this.pokemon.moveset.length>wA?(RA=this.pokemon)==null?void 0:RA.moveset[wA]:null,$A=T.add.container(0,16*wA);if(this.moveRowsContainer.add($A),vA&&this.pokemon){const nA=Kt("types"),lA=this.pokemon.getMoveType(vA.getMove()),TA=T.add.sprite(0,0,nA,t[lA].toLowerCase());TA.setOrigin(0,1),$A.add(TA)}const RE=oE(35,0,vA?vA.getName():"-",XA.SUMMARY);RE.setOrigin(0,1),$A.add(RE);const LE=T.add.image(163,-1,"summary_moves_overlay_pp");LE.setOrigin(0,1),$A.add(LE);const cA=oE(173,1,"--/--",XA.WINDOW);if(cA.setOrigin(0,1),vA){const nA=vA.getMovePp(),lA=nA-vA.ppUsed;cA.setText(`${UT(lA,2,"  ")}/${UT(nA,2,"  ")}`)}$A.add(cA)}this.moveDescriptionText=oE(2,84,"",XA.WINDOW_ALT,{wordWrap:{width:1212}}),this.movesContainer.add(this.moveDescriptionText);const iA=T.make.graphics({});iA.setScale(6),iA.fillStyle(16777215),iA.beginPath(),iA.fillRect(112,130,202,46);const KA=iA.createGeometryMask();this.moveDescriptionText.setMask(KA);break}}}showStatus(e){this.statusVisible||(this.statusVisible=!0,T.tweens.add({targets:this.statusContainer,x:0,duration:e?0:250,ease:"Sine.easeOut"}))}hideStatus(e){this.statusVisible&&(this.statusVisible=!1,T.tweens.add({targets:this.statusContainer,x:-106,duration:e?0:250,ease:"Sine.easeIn"}))}getSelectedMove(){return this.cursor!==2?null:this.moveCursor<4&&this.pokemon&&this.moveCursor<this.pokemon.moveset.length?this.pokemon.moveset[this.moveCursor].getMove():this.summaryUiMode===1&&this.moveCursor===4?this.newMove:null}showMoveSelect(){this.moveSelect=!0,this.extraMoveRowContainer.setVisible(!0),this.selectedMoveIndex=-1,this.setCursor(this.summaryUiMode===1?4:0),this.showMoveEffect()}hideMoveSelect(){var e;if(this.summaryUiMode===1){(e=this.moveSelectFunction)==null||e.call(this,4);return}this.moveSelect=!1,this.extraMoveRowContainer.setVisible(!1),this.moveDescriptionText.setText(""),this.destroyBlinkCursor(),this.hideMoveEffect()}destroyBlinkCursor(){this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}showMoveEffect(e){this.moveEffectsVisible||(this.moveEffectsVisible=!0,T.tweens.add({targets:this.moveEffectContainer,x:6,duration:e?0:250,ease:"Sine.easeOut"}))}hideMoveEffect(e){this.moveEffectsVisible&&(this.moveEffectsVisible=!1,T.tweens.add({targets:this.moveEffectContainer,x:106,duration:e?0:250,ease:"Sine.easeIn"}))}clear(){super.clear(),this.pokemon=null,this.cursor=-1,this.newMove=null,this.moveSelect&&(this.moveSelect=!1,this.moveSelectFunction=null,this.extraMoveRowContainer.setVisible(!1),this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null),this.hideMoveEffect(!0)),this.summaryContainer.setVisible(!1),this.summaryPageContainer.setVisible(!1)}};r(xg,"SummaryUiHandler");let E4=xg;const Zg=class Zg{constructor(e){this.spriteScale=-1,this.hitsRecCount=null,this.spriteScale=(e==null?void 0:e.spriteScale)??-1,this.ability=(e==null?void 0:e.ability)??-1,this.passive=(e==null?void 0:e.passive)??-1,this.nature=(e==null?void 0:e.nature)??-1,this.types=(e==null?void 0:e.types)??[],this.hitsRecCount=(e==null?void 0:e.hitsRecCount)??null}};r(Zg,"CustomPokemonData");let fO=Zg;const vr=1;function YI(R,e,I,L,N){const S=YA(R).getSpriteKey(e??!1,I??0,L??!1,N??0),n=YA(R).getSpriteAtlasPath(e??!1,I??0,L??!1,N??0);return{spriteKey:S,fileRoot:n}}r(YI,"getSpriteKeysFromSpecies");function N_(R){const e=R.getSpeciesForm().getSpriteKey(R.getGender()===mA.FEMALE,R.formIndex,R.shiny,R.variant),I=R.getSpeciesForm().getSpriteAtlasPath(R.getGender()===mA.FEMALE,R.formIndex,R.shiny,R.variant);return{spriteKey:e,fileRoot:I}}r(N_,"getSpriteKeysFromPokemon");function iv(R=!1,e=!1,I=!1){const L=T.getPlayerParty();let N,S=null;const n=L.filter(C=>(!R||C.isAllowedInChallenge())&&(e||!C.isFainted())),i=L.filter(C=>C.isAllowedInChallenge());if(I&&n.length===1){const C=L.filter(o=>(!R||o.isAllowedInChallenge())&&o.isFainted());C.length>0&&(N=DA(C.length),S=C[N])}return!S&&n.length>0&&(N=DA(n.length),S=n[N]),!S&&R&&i.length>0&&(N=DA(i.length),S=i[N]),S||(N=DA(L.length),S=L[N]),S}r(iv,"getRandomPlayerPokemon");function GH(R=!1,e=!1){const I=T.getPlayerParty();let L=null;for(const N of I)R&&!N.isAllowedInChallenge()||!e&&N.isFainted()||(L=L?(L==null?void 0:L.level)<(N==null?void 0:N.level)?N:L:N);return L}r(GH,"getHighestLevelPlayerPokemon");function Cv(R,e=!1,I=!1){const L=T.getPlayerParty();let N=null;for(const S of L)e&&!S.isAllowedInChallenge()||!I&&S.isFainted()||(N=N?N.getStat(R)<(S==null?void 0:S.getStat(R))?S:N:S);return N}r(Cv,"getHighestStatPlayerPokemon");function Uv(R=!1,e=!1){const I=T.getPlayerParty();let L=null;for(const N of I)R&&!N.isAllowedInChallenge()||!e&&N.isFainted()||(L=L?(L==null?void 0:L.stats.reduce((S,n)=>S+n))<(N==null?void 0:N.stats.reduce((S,n)=>S+n))?N:L:N);return L}r(Uv,"getHighestStatTotalPlayerPokemon");function PH(R,e,I,L=!0,N=!0,S=!0){let n=Array.isArray(R)?R[0]:R,i=Array.isArray(R)?R[1]:R,C=Object.keys(FR).map(l=>[Number.parseInt(l),FR[l]]).filter(l=>{const H=YA(l[0]);return H&&(!e||!e.includes(l[0]))&&(L||!H.subLegendary)&&(N||!H.legendary)&&(S||!H.mythical)}).map(l=>[YA(l[0]),l[1]]);I&&I.length>0&&(C=C.filter(l=>I.includes(l[0].type1)||!SA(l[0].type2)&&I.includes(l[0].type2)));let o=C.filter(l=>l[1]>=n&&l[1]<=i);for(;o.length===0&&!(n===0&&i===10);)n>0?n--:i++,o=C.filter(l=>l[1]>=n&&l[1]<=i);if(o.length>0){const l=DA(o.length);return Phaser.Math.RND.shuffle(o)[l][0].speciesId}return A.BULBASAUR}r(PH,"getRandomSpeciesByStarterCost");function h3(R){R.hp=0,R.trySetStatus(J.FAINT),R.updateInfo(),le(_.t("battle:fainted",{pokemonNameWithAffix:Q(R)}))}r(h3,"koPlayerPokemon");function ov(R,e){const I=Math.round(R.hp+e),L=Math.max(Math.min(I,R.getMaxHp()),0);L===0?h3(R):R.hp=L}r(ov,"applyHpChangeToPokemon");function HH(R,e){e<=0&&console.warn("Healing pokemon with `applyDamageToPokemon` is not recommended! Please use `applyHealToPokemon` instead."),R.isAllowedInBattle()&&R.hp-e<=0&&(e=R.hp-1),ov(R,-e)}r(HH,"applyDamageToPokemon");async function e4(R,e){var N;const I=(N=k.MYSTERY_ENCOUNTER_SHUCKLE_JUICE().generateType(T.getPlayerParty(),[e]))==null?void 0:N.withIdFromFunc(k.MYSTERY_ENCOUNTER_SHUCKLE_JUICE),L=I==null?void 0:I.newModifier(R);L&&(T.addModifier(L,!1,!1,!1,!0),R.calculateStats())}r(e4,"modifyPlayerPokemonBST");async function MO(R,e,I){const L=e.newModifier(R),N=T.findModifier(S=>S instanceof GE&&S.type.id===e.id&&S.pokemonId===R.id&&S.matchType(L));N&&N.getStackCount()>=N.getMaxStackCount()||T.addModifier(L,!1,!1,!1,!0)}r(MO,"applyModifierTypeToPlayerPokemon");function Mv(R,e,I){const L=R.y;if(!I){const i=3*R.getMaxHp(),C=2*R.hp,o=R.species.catchRate,l=bP(e),H=R.status?PV(R.status.effect):1,P=Math.round((i-C)*o*l/i*H);I=Math.round(65536/Math.sqrt(Math.sqrt(255/P)))}const N=R.getFieldPositionOffset(),S=lS(e),n=T.addFieldSprite(91,105,"pb",S);return n.setOrigin(.5,.625),T.field.add(n),T.time.delayedCall(300,()=>{T.field.moveBelow(n,R)}),new Promise(i=>{T.trainer.setTexture(`trainer_${T.gameData.gender===de.FEMALE?"f":"m"}_back_pb`),T.time.delayedCall(512,()=>{T.playSound("se/pb_throw"),T.trainer.setFrame("2"),T.time.delayedCall(256,()=>{T.trainer.setFrame("3"),T.time.delayedCall(768,()=>{T.trainer.setTexture(`trainer_${T.gameData.gender===de.FEMALE?"f":"m"}_back`)})}),T.tweens.add({targets:n,x:{value:236+N[0],ease:"Linear"},y:{value:16+N[1],ease:"Cubic.easeOut"},duration:500,onComplete:r(()=>{n.setTexture("pb",`${S}_opening`),T.time.delayedCall(17,()=>n.setTexture("pb",`${S}_open`)),T.playSound("se/pb_rel"),R.tint(_S(e)),F3(n.x,n.y,e),T.tweens.add({targets:R,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:r(()=>{n.setTexture("pb",`${S}_opening`),R.setVisible(!1),T.playSound("se/pb_catch"),T.time.delayedCall(17,()=>n.setTexture("pb",`${S}`));const C=r(()=>{let o=0;const l=n.x,H=T.tweens.addCounter({from:0,to:1,repeat:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:r(P=>{if(o&&o<4){const K=P.getValue(),f=o%2===1?1:-1;n.setX(l+K*4*f),n.setAngle(K*27.5*f)}},"onUpdate"),onRepeat:r(()=>{if(!R.species.isObtainable())H.stop(),R4(R,L,n,e).then(()=>i(!1));else if(o++<3)DA(65536)<I?T.playSound("se/pb_move"):(H.stop(),R4(R,L,n,e).then(()=>i(!1)));else{T.playSound("se/pb_lock"),av(n);const P=T.add.sprite(n.x,n.y,"pb","pb");P.setOrigin(n.originX,n.originY),P.setTintFill(0),P.setAlpha(0),T.field.add(P),T.tweens.add({targets:P,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:r(()=>{T.tweens.add({targets:P,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:r(()=>P.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:r(()=>{eT(R,n,e).then(()=>i(!0))},"onComplete")})},"doShake");T.time.delayedCall(250,()=>VV(n,16,72,350,C))},"onComplete")})},"onComplete")})})})}r(Mv,"trainerThrowPokeball");function R4(R,e,I,L){return new Promise(N=>{var n;T.playSound("se/pb_rel"),R.setY(e),((n=R.status)==null?void 0:n.effect)!==J.SLEEP&&R.cry(R.getHpRatio()>.25?void 0:{rate:.85}),R.tint(_S(L)),R.setVisible(!0),R.untint(250,"Sine.easeOut");const S=lS(L);I.setTexture("pb",`${S}_opening`),T.time.delayedCall(17,()=>I.setTexture("pb",`${S}_open`)),T.tweens.add({targets:R,duration:250,ease:"Sine.easeOut",scale:1}),T.currentBattle.lastUsedPokeball=L,d3(I),T.ui.showText(_.t("battle:pokemonBrokeFree",{pokemonName:R.getNameToRender()}),null,()=>N(),null,!0)})}r(R4,"failCatch");async function eT(R,e,I,L=!0,N=!1){const S=R.fusionSpecies?R.getFusionSpeciesForm():R.getSpeciesForm();return S.abilityHidden&&(R.fusionSpecies?R.fusionAbilityIndex:R.abilityIndex)===S.getAbilityCount()-1&&T.validateAchv(YE.HIDDEN_ABILITY),R.species.subLegendary&&T.validateAchv(YE.CATCH_SUB_LEGENDARY),R.species.legendary&&T.validateAchv(YE.CATCH_LEGENDARY),R.species.mythical&&T.validateAchv(YE.CATCH_MYTHICAL),T.pokemonInfoContainer.show(R,!0),T.gameData.updateSpeciesDexIvs(R.species.getRootSpeciesId(!0),R.ivs),new Promise(n=>{const i=r(()=>{const C=r(()=>{T.getEnemyParty().some(H=>H.id===R.id)||T.getEnemyParty().push(R),T.phaseManager.unshiftNew("VictoryPhase",R.id,!0),T.pokemonInfoContainer.hide(),e&&d3(e),n()},"end"),o=r(()=>{R&&R.leaveField(!1,!0,!0)},"removePokemon"),l=r(H=>{const P=R.addToParty(I,H),K=T.findModifiers(f=>f instanceof GE,!1);T.getPlayerParty().filter(f=>f.isShiny()).length===6&&T.validateAchv(YE.SHINY_PARTY),Promise.all(K.map(f=>T.addModifier(f,!0))).then(()=>{T.updateModifiers(!0),o(),P?P.loadAssets().then(C):C()})},"addToParty");Promise.all([R.hideInfo(),T.gameData.setPokemonCaught(R)]).then(()=>{if(T.getPlayerParty().length===6){const H=r(()=>{T.ui.showText(_.t("battle:partyFull",{pokemonName:R.getNameToRender()}),null,()=>{T.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),T.ui.setMode(hE.CONFIRM,()=>{const P=T.addPlayerPokemon(R.species,R.level,R.abilityIndex,R.formIndex,R.gender,R.shiny,R.variant,R.ivs,R.nature,R);T.ui.setMode(hE.SUMMARY,P,0,W3.DEFAULT,()=>{T.ui.setMode(hE.MESSAGE).then(()=>{H()})},!1)},()=>{const P={shiny:R.shiny,variant:R.variant,form:R.formIndex,female:R.gender===mA.FEMALE};T.ui.setOverlayMode(hE.POKEDEX_PAGE,R.species,R.formIndex,P,null,()=>{T.ui.setMode(hE.MESSAGE).then(()=>{H()})})},()=>{T.ui.setMode(hE.PARTY,wr.RELEASE,0,(P,K)=>{T.ui.setMode(hE.MESSAGE).then(()=>{P<6?l(P):H()})})},()=>{T.ui.setMode(hE.MESSAGE).then(()=>{o(),C()})},"fullParty")})},"promptRelease");H()}else l()})},"doPokemonCatchMenu");L?T.ui.showText(_.t(N?"battle:pokemonObtained":"battle:pokemonCaught",{pokemonName:R.getNameToRender()}),null,i,0,!0):i()})}r(eT,"catchPokemon");function d3(R){R&&T.tweens.add({targets:R,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:r(()=>{R.destroy()},"onComplete")})}r(d3,"removePb");async function Dv(R){await new Promise(e=>{T.playSound("se/flee"),T.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:R.getSpriteScale(),onComplete:r(()=>{R.setVisible(!1),R.leaveField(!0,!0,!0),HE(_.t("battle:pokemonFled",{pokemonName:R.getNameToRender()}),null,600,!1).then(()=>{e()})},"onComplete")})})}r(Dv,"doPokemonFlee");function lv(R){return new Promise(e=>{T.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:R.getSpriteScale(),onComplete:r(()=>{R.setVisible(!1),R.leaveField(!0,!0,!0),HE(_.t("battle:playerFled",{pokemonName:R.getNameToRender()}),null,600,!1).then(()=>{e()})},"onComplete")})})}r(lv,"doPlayerFlee");const O4=[[A.SCYTHER,40],[A.SCIZOR,40],[A.KLEAVOR,40],[A.PINSIR,40],[A.HERACROSS,40],[A.YANMA,40],[A.YANMEGA,40],[A.SHUCKLE,40],[A.ANORITH,40],[A.ARMALDO,40],[A.ESCAVALIER,40],[A.ACCELGOR,40],[A.JOLTIK,40],[A.GALVANTULA,40],[A.DURANT,40],[A.LARVESTA,40],[A.VOLCARONA,40],[A.DEWPIDER,40],[A.ARAQUANID,40],[A.WIMPOD,40],[A.GOLISOPOD,40],[A.SIZZLIPEDE,40],[A.CENTISKORCH,40],[A.NYMBLE,40],[A.LOKIX,40],[A.BUZZWOLE,1],[A.PHEROMOSA,1]];function BZ(R){const e=O4.reduce((N,S)=>N+S[1],0),I=DA(e);let L=0;for(const N of O4)if(L+=N[1],I<L){const S=YA(N[0]);return YA(S.getSpeciesForLevel(R,!0))}return YA(A.SCYTHER)}r(BZ,"getGoldenBugNetSpecies");function xr(R=0){const e=T.currentBattle;return e.getLevelForWave()+Math.max(Math.round(e.waveIndex/10*R),0)}r(xr,"getEncounterPokemonLevelForWave");async function I4(R){const e=R.fusionSpecies?R.getFusionSpeciesForm():R.getSpeciesForm();return e.abilityHidden&&(R.fusionSpecies?R.fusionAbilityIndex:R.abilityIndex)===e.getAbilityCount()-1&&T.validateAchv(YE.HIDDEN_ABILITY),R.species.subLegendary&&T.validateAchv(YE.CATCH_SUB_LEGENDARY),R.species.legendary&&T.validateAchv(YE.CATCH_LEGENDARY),R.species.mythical&&T.validateAchv(YE.CATCH_MYTHICAL),T.gameData.updateSpeciesDexIvs(R.species.getRootSpeciesId(!0),R.ivs),T.gameData.setPokemonCaught(R,!0,!1,!1)}r(I4,"addPokemonDataToDexAndValidateAchievements");function YL(R,e){return R.isAllowedInChallenge()?R.isAllowedInBattle()?null:eR(e)??null:_.t("partyUiHandler:cantBeUsed",{pokemonName:R.getNameToRender()})??null}r(YL,"isPokemonValidForEncounterOptionSelection");function p3(R,e){R.isFusion()?(R.fusionCustomPokemonData||(R.fusionCustomPokemonData=new fO),R.fusionCustomPokemonData.ability=e):R.customPokemonData.ability=e}r(p3,"applyAbilityOverrideToPokemon");const bg=class bg extends Phaser.GameObjects.Container{constructor(e){var l;if(super(T,-72,76),this.encounter=e,this.enterFromRight=e.enterIntroVisualsFromRight??!1,this.spriteConfigs=e.spriteConfigs.map(H=>{const P={...H};if(!SA(P.species)){const K=YI(P.species,void 0,void 0,P.isShiny,P.variant);P.spriteKey=K.spriteKey,P.fileRoot=K.fileRoot,P.isPokemon=!0}return P}),!this.spriteConfigs)return;const I=r((H,P,K)=>{const f=T.addFieldSprite(0,0,H);return f.setOrigin(.5,1),f.setPipeline(T.spritePipeline,{tone:[0,0,0,0],hasShadow:!!P,yShadowOffset:K??0}),f},"getSprite"),L=r((H,P,K)=>{const f=T.add.sprite(-19,2,"items",H);return f.setOrigin(.5,1),f.setPipeline(T.spritePipeline,{tone:[0,0,0,0],hasShadow:!!P,yShadowOffset:K??0}),f},"getItemSprite"),N=-40,S=40,n=4;let i=0;const C=Math.round((S-N)/Math.max(this.spriteConfigs.filter(H=>!H.x&&!H.y).length,1));this.shinySparkleSprites=[];const o=T.add.container(0,0);(l=this.spriteConfigs)==null||l.forEach(H=>{const{spriteKey:P,isItem:K,hasShadow:f,scale:h,x:F,y:w,yShadow:m,alpha:y,isPokemon:x,isShiny:q,variant:IA}=H;let $,tA,UA;K?($=L(P,f,m),tA=L(P)):($=I(P,f,m),tA=I(P),x&&q&&($.setPipelineData("spriteKey",P),tA.setPipelineData("spriteKey",P),$.setPipelineData("shiny",!0),$.setPipelineData("variant",IA),tA.setPipelineData("shiny",!0),tA.setPipelineData("variant",IA),UA=T.add.sprite($.x,$.y,"shiny"),UA.setOrigin(.5,1),UA.setVisible(!1),this.shinySparkleSprites.push({sprite:UA,variant:IA??0}),o.add(UA))),$.setVisible(!H.hidden),tA.setVisible(!1),h&&($.setScale(h),tA.setScale(h)),F||w?(F&&($.setPosition(n+F,$.y),tA.setPosition(n+F,tA.y)),w&&($.setPosition($.x,$.y+w),tA.setPosition(tA.x,tA.y+w))):this.spriteConfigs.length===1?($.x=n,tA.x=n):($.x=N+(i+.5)*C+n,tA.x=N+(i+.5)*C+n,i++),SA(UA)||UA.setPosition($.x,$.y),SA(y)||($.setAlpha(y),tA.setAlpha(y)),this.add($),this.add(tA)}),this.add(o)}loadAssets(){return new Promise(e=>{this.spriteConfigs||e();const I=[];this.spriteConfigs.forEach(L=>{L.isPokemon?(T.loadPokemonAtlas(L.spriteKey,L.fileRoot),L.isShiny&&!SA(L.variant)&&I.push(E3(L.spriteKey,L.fileRoot,L.variant))):L.isItem?T.loadAtlas("items",""):T.loadAtlas(L.spriteKey,L.fileRoot)}),T.load.once(Phaser.Loader.Events.COMPLETE,()=>{this.spriteConfigs.every(L=>{if(L.isItem)return!0;const N=console.warn;console.warn=()=>{};const S=T.anims.generateFrameNames(L.spriteKey,{zeroPad:4,suffix:".png",start:1,end:128});return console.warn=N,T.anims.exists(L.spriteKey)||T.anims.create({key:L.spriteKey,frames:S,frameRate:10,repeat:-1}),!0}),Promise.all(I).then(()=>e())}),T.load.isLoading()||T.load.start()})}initSprite(){this.spriteConfigs&&(this.getSprites().map((e,I)=>{if(!this.spriteConfigs[I].isItem&&(e.setTexture(this.spriteConfigs[I].spriteKey).setFrame(0),e.texture.frameTotal>1)){const L=e.texture.frames["0001.png"];e.setFrame(L??0)}}),this.getTintSprites().map((e,I)=>{if(!this.spriteConfigs[I].isItem&&(e.setTexture(this.spriteConfigs[I].spriteKey).setFrame(0),e.texture.frameTotal>1)){const L=e.texture.frames["0001.png"];e.setFrame(L??0)}}),this.spriteConfigs.every((e,I)=>{if(!e.tint)return!0;const L=this.getAt(I*2+1);return this.tint(L,0,e.tint),!0}))}tryPlaySprite(e,I,L){return e.texture.key==="__MISSING"?(console.error(`No texture found for '${L.key}'!`),!1):e.texture.frameTotal<=1?(console.warn(`No animation found for '${L.key}'. Is this intentional?`),!1):(e.play(L),I.play(L),!0)}playShinySparkles(){for(const e of this.shinySparkleSprites)T.time.delayedCall(500,()=>{_H(e.sprite,e.variant)})}playAnim(){if(!this.spriteConfigs)return;const e=this.getSprites(),I=this.getTintSprites();this.spriteConfigs.forEach((L,N)=>{if(!L.disableAnimation){const S={key:L.spriteKey,repeat:L!=null&&L.repeat?-1:0,startFrame:(L==null?void 0:L.startFrame)??0};this.tryPlaySprite(e[N],I[N],S)}})}getSpriteAtIndex(e){if(!this.spriteConfigs)return[];const I=[];return I.push(this.getAt(e*2)),I.push(this.getAt(e*2+1)),I}getSprites(){if(!this.spriteConfigs)return[];const e=[];return this.spriteConfigs.forEach((I,L)=>{e.push(this.getAt(L*2))}),e}getTintSprites(){if(!this.spriteConfigs)return[];const e=[];return this.spriteConfigs.forEach((I,L)=>{e.push(this.getAt(L*2+1))}),e}tint(e,I,L,N,S){e.setTintFill(I),e.setVisible(!0),N?(e.setAlpha(0),T.tweens.add({targets:e,alpha:L||1,duration:N,ease:S||"Linear"})):e.setAlpha(L)}tintAll(e,I,L,N){this.getTintSprites().map(n=>{this.tint(n,e,I,L,N)})}untint(e,I,L){I?T.tweens.add({targets:e,alpha:0,duration:I,ease:L||"Linear",onComplete:r(()=>{e.setVisible(!1),e.setAlpha(1)},"onComplete")}):(e.setVisible(!1),e.setAlpha(1))}untintAll(e,I){this.getTintSprites().map(N=>{this.untint(N,e,I)})}setVisible(e){for(const I of this.getSprites())I.setVisible(e);return super.setVisible(e)}};r(bg,"MysteryEncounterIntroVisuals");let b0=bg;const kg=class kg{};r(kg,"EncounterSceneRequirement");let IN=kg;const Xg=class Xg{};r(Xg,"EncounterPokemonRequirement");let CI=Xg;const Js=class Js extends CI{static Some(...e){return new Js(!1,...e)}static Every(...e){return new Js(!0,...e)}constructor(e,...I){super(),this.isAnd=e,this.invertQuery=!1,this.minNumberOfPokemon=1,this.requirements=I}meetsRequirement(){return this.isAnd?this.requirements.every(e=>e.meetsRequirement()):this.requirements.some(e=>e.meetsRequirement())}queryParty(e){if(this.isAnd)return this.requirements.reduce((L,N)=>N.queryParty(L),e);const I=this.requirements.find(L=>L.queryParty(e).length>0);return I?I.queryParty(e):[]}getDialogueToken(e){if(this.isAnd)throw new Error("Not implemented (Sorry)");for(const I of this.requirements)if(I.meetsRequirement())return I.getDialogueToken(e);return this.requirements[0].getDialogueToken(e)}};r(Js,"CombinationPokemonRequirement");let tN=Js;const Qg=class Qg extends IN{constructor(e){super(),this.waveRange=e}meetsRequirement(){if(!SA(this.waveRange)&&this.waveRange[0]<=this.waveRange[1]){const e=T.currentBattle.waveIndex;if(e>=0&&this.waveRange[0]>=0&&this.waveRange[0]>e||this.waveRange[1]>=0&&this.waveRange[1]<e)return!1}return!0}getDialogueToken(e){return["waveIndex",T.currentBattle.waveIndex.toString()]}};r(Qg,"WaveRangeRequirement");let k0=Qg;const Jg=class Jg extends IN{constructor(e,I){super(),this.waveModuli=e,this.modulusValue=I}meetsRequirement(){return this.waveModuli.includes(T.currentBattle.waveIndex%this.modulusValue)}getDialogueToken(e){return["waveIndex",T.currentBattle.waveIndex.toString()]}};r(Jg,"WaveModulusRequirement");let X0=Jg;const $g=class $g extends IN{constructor(e,I){super(),this.partySizeRange=e,this.excludeDisallowedPokemon=I}meetsRequirement(){if(!SA(this.partySizeRange)&&this.partySizeRange[0]<=this.partySizeRange[1]){const e=this.excludeDisallowedPokemon?T.getPokemonAllowedInBattle().length:T.getPlayerParty().length;if(e>=0&&this.partySizeRange[0]>=0&&this.partySizeRange[0]>e||this.partySizeRange[1]>=0&&this.partySizeRange[1]<e)return!1}return!0}getDialogueToken(e){return["partySize",T.getPlayerParty().length.toString()]}};r($g,"PartySizeRequirement");let Q0=$g;const qg=class qg extends IN{constructor(e,I=1){super(),this.minNumberOfItems=I,this.requiredHeldItemModifiers=ue(e)}meetsRequirement(){var L;const e=T.getPlayerParty();if(SA(e)||((L=this.requiredHeldItemModifiers)==null?void 0:L.length)<0)return!1;let I=0;for(const N of this.requiredHeldItemModifiers){const S=T.findModifiers(n=>n.constructor.name===N);if((S==null?void 0:S.length)>0)for(const n of S)I+=n.stackCount}return I>=this.minNumberOfItems}getDialogueToken(e){return["requiredItem",this.requiredHeldItemModifiers[0]]}};r(qg,"PersistentModifierRequirement");let Dl=qg;const zg=class zg extends IN{constructor(e,I){super(),this.requiredMoney=e??0,this.scalingMultiplier=I??0}meetsRequirement(){const e=T.money;return SA(e)?!1:(this.scalingMultiplier>0&&(this.requiredMoney=T.getWaveMoneyAmount(this.scalingMultiplier)),!(this.requiredMoney>0&&this.requiredMoney>e))}getDialogueToken(e){return["money",this.scalingMultiplier>0?T.getWaveMoneyAmount(this.scalingMultiplier).toString():this.requiredMoney.toString()]}};r(zg,"MoneyRequirement");let UI=zg;const jg=class jg extends CI{constructor(e,I=!0,L=1,N=!1){super(),this.excludeFainted=I,this.minNumberOfPokemon=L,this.invertQuery=N,this.requiredType=ue(e)}meetsRequirement(){let e=T.getPlayerParty();return SA(e)?!1:(this.excludeFainted&&(e=e.filter(I=>!I.isFainted())),this.queryParty(e).length>=this.minNumberOfPokemon)}queryParty(e){return this.invertQuery?e.filter(I=>this.requiredType.filter(L=>I.getTypes().includes(L)).length===0):e.filter(I=>this.requiredType.filter(L=>I.getTypes().includes(L)).length>0)}getDialogueToken(e){const I=this.requiredType.filter(L=>e==null?void 0:e.getTypes().includes(L));return I.length>0?["type",t[I[0]]]:["type",""]}};r(jg,"TypeRequirement");let RT=jg;const Am=class Am extends CI{constructor(e,I,L=1,N=!1){super(),this.requiredMoves=[],this.excludeDisallowedPokemon=I,this.minNumberOfPokemon=L,this.invertQuery=N,this.requiredMoves=ue(e)}meetsRequirement(){var I;const e=T.getPlayerParty();return SA(e)||((I=this.requiredMoves)==null?void 0:I.length)<0?!1:this.queryParty(e).length>=this.minNumberOfPokemon}queryParty(e){return this.invertQuery?e.filter(I=>(!this.excludeDisallowedPokemon||I.isAllowedInBattle())&&!I.moveset.some(L=>L.moveId&&this.requiredMoves.includes(L.moveId))):e.filter(I=>(!this.excludeDisallowedPokemon||I.isAllowedInBattle())&&I.moveset.some(L=>L.moveId&&this.requiredMoves.includes(L.moveId)))}getDialogueToken(e){const I=e==null?void 0:e.moveset.filter(L=>L.moveId&&this.requiredMoves.includes(L.moveId));return I&&I.length>0&&I[0]?["move",I[0].getName()]:["move",""]}};r(Am,"MoveRequirement");let Jt=Am;const Em=class Em extends CI{constructor(e,I,L=1,N=!1){super(),this.excludeDisallowedPokemon=I,this.minNumberOfPokemon=L,this.invertQuery=N,this.requiredAbilities=ue(e)}meetsRequirement(){var I;const e=T.getPlayerParty();return SA(e)||((I=this.requiredAbilities)==null?void 0:I.length)<0?!1:this.queryParty(e).length>=this.minNumberOfPokemon}queryParty(e){return this.invertQuery?e.filter(I=>(!this.excludeDisallowedPokemon||I.isAllowedInBattle())&&this.requiredAbilities.filter(L=>I.hasAbility(L,!1)).length===0):e.filter(I=>(!this.excludeDisallowedPokemon||I.isAllowedInBattle())&&this.requiredAbilities.some(L=>I.hasAbility(L,!1)))}getDialogueToken(e){const I=this.requiredAbilities.find(L=>e==null?void 0:e.hasAbility(L,!1));return SA(I)?["ability",""]:["ability",fe[I].name]}};r(Em,"AbilityRequirement");let ll=Em;const em=class em extends CI{constructor(e,I=1,L=!1){super(),this.minNumberOfPokemon=I,this.invertQuery=L,this.requiredStatusEffect=ue(e)}meetsRequirement(){var L;const e=T.getPlayerParty();return SA(e)||((L=this.requiredStatusEffect)==null?void 0:L.length)<0?!1:this.queryParty(e).length>=this.minNumberOfPokemon}queryParty(e){return this.invertQuery?e.filter(I=>!this.requiredStatusEffect.some(L=>{var N;return L===J.NONE?SA(I.status)||SA(I.status.effect)||I.status.effect===L:((N=I.status)==null?void 0:N.effect)===L})):e.filter(I=>this.requiredStatusEffect.some(L=>{var N;return L===J.NONE?SA(I.status)||SA(I.status.effect)||I.status.effect===L:((N=I.status)==null?void 0:N.effect)===L}))}getDialogueToken(e){const I=this.requiredStatusEffect.filter(L=>{var N;return L===J.NONE?SA(e==null?void 0:e.status)||SA(e.status.effect)||e.status.effect===L:((N=e.status)==null?void 0:N.effect)===L});return I.length>0?["status",J[I[0]]]:["status",""]}};r(em,"StatusEffectRequirement");let J0=em;const Rm=class Rm extends CI{constructor(e,I=1,L=!1,N=!0){super(),this.minNumberOfPokemon=I,this.invertQuery=L,this.requiredHeldItemModifiers=ue(e),this.requireTransferable=N}meetsRequirement(){const e=T.getPlayerParty();return SA(e)?!1:this.queryParty(e).length>=this.minNumberOfPokemon}queryParty(e){return this.invertQuery?e.filter(I=>I.getHeldItems().filter(L=>!this.requiredHeldItemModifiers.some(N=>L.constructor.name===N)&&(!this.requireTransferable||L.isTransferable)).length>0):e.filter(I=>this.requiredHeldItemModifiers.some(L=>I.getHeldItems().some(N=>N.constructor.name===L&&(!this.requireTransferable||N.isTransferable))))}getDialogueToken(e){const I=e==null?void 0:e.getHeldItems().filter(L=>this.requiredHeldItemModifiers.some(N=>L.constructor.name===N)&&(!this.requireTransferable||L.isTransferable));return I&&I.length>0?["heldItem",I[0].type.name]:["heldItem",""]}};r(Rm,"HeldItemRequirement");let ht=Rm;const Om=class Om extends CI{constructor(e,I=1,L=!1,N=!0){super(),this.minNumberOfPokemon=I,this.invertQuery=L,this.requiredHeldItemTypes=ue(e),this.requireTransferable=N}meetsRequirement(){const e=T.getPlayerParty();return SA(e)?!1:this.queryParty(e).length>=this.minNumberOfPokemon}queryParty(e){return this.invertQuery?e.filter(I=>I.getHeldItems().filter(L=>!this.requiredHeldItemTypes.some(N=>L instanceof sI&&L.type.moveType===N&&(!this.requireTransferable||L.isTransferable))).length>0):e.filter(I=>this.requiredHeldItemTypes.some(L=>I.getHeldItems().some(N=>N instanceof sI&&N.type.moveType===L&&(!this.requireTransferable||N.isTransferable))))}getDialogueToken(e){const I=e==null?void 0:e.getHeldItems().filter(L=>this.requiredHeldItemTypes.some(N=>L instanceof sI&&L.type.moveType===N)&&(!this.requireTransferable||L.isTransferable));return I&&I.length>0?["heldItem",I[0].type.name]:["heldItem",""]}};r(Om,"AttackTypeBoosterHeldItemTypeRequirement");let _l=Om;const Im=class Im extends CI{constructor(e,I=1,L=!1){super(),this.minNumberOfPokemon=I,this.invertQuery=L,this.requiredHealthRange=e}meetsRequirement(){if(!SA(this.requiredHealthRange)&&this.requiredHealthRange[0]<=this.requiredHealthRange[1]){const e=T.getPlayerParty();if(this.queryParty(e).length<this.minNumberOfPokemon)return!1}return!0}queryParty(e){return this.invertQuery?e.filter(I=>I.getHpRatio()<this.requiredHealthRange[0]||I.getHpRatio()>this.requiredHealthRange[1]):e.filter(I=>I.getHpRatio()>=this.requiredHealthRange[0]&&I.getHpRatio()<=this.requiredHealthRange[1])}getDialogueToken(e){const I=e==null?void 0:e.getHpRatio();return SA(I)?["healthRatio",""]:["healthRatio",Math.floor(I*100).toString()+"%"]}};r(Im,"HealthRatioRequirement");let $0=Im;const tm=class tm extends CI{constructor(e,I={}){super(),this.requiredMoves=ue(e),this.excludeLevelMoves=I.excludeLevelMoves??!1,this.excludeTmMoves=I.excludeTmMoves??!1,this.excludeEggMoves=I.excludeEggMoves??!1,this.includeFainted=I.includeFainted??!1,this.minNumberOfPokemon=I.minNumberOfPokemon??1,this.invertQuery=I.invertQuery??!1}meetsRequirement(){var I;const e=T.getPlayerParty().filter(L=>this.includeFainted?L.isAllowedInChallenge():L.isAllowedInBattle());return SA(e)||((I=this.requiredMoves)==null?void 0:I.length)<0?!1:this.queryParty(e).length>=this.minNumberOfPokemon}queryParty(e){return this.invertQuery?e.filter(I=>!this.requiredMoves.some(L=>this.getAllPokemonMoves(I).includes(L))):e.filter(I=>this.requiredMoves.every(L=>this.getAllPokemonMoves(I).includes(L)))}getDialogueToken(e){return["requiredMoves",this.requiredMoves.map(I=>new pA(I).getName()).join(", ")]}getPokemonLevelMoves(e){return e.getLevelMoves().map(([I,L])=>L)}getAllPokemonMoves(e){const I=[];return this.excludeLevelMoves||I.push(...this.getPokemonLevelMoves(e)??[]),this.excludeTmMoves||I.push(...e.compatibleTms??[]),this.excludeEggMoves||I.push(...e.getEggMoves()??[]),I}};r(tm,"CanLearnMoveRequirement");let q0=tm;var rE=(R=>(R[R.DEFAULT=0]="DEFAULT",R[R.DISABLED_OR_DEFAULT=1]="DISABLED_OR_DEFAULT",R[R.DEFAULT_OR_SPECIAL=2]="DEFAULT_OR_SPECIAL",R[R.DISABLED_OR_SPECIAL=3]="DISABLED_OR_SPECIAL",R))(rE||{});const Lm=class Lm{constructor(e){SA(e)||Object.assign(this,e),this.hasDexProgress=this.hasDexProgress??!1,this.requirements=this.requirements??[],this.primaryPokemonRequirements=this.primaryPokemonRequirements??[],this.secondaryPokemonRequirements=this.secondaryPokemonRequirements??[]}hasRequirements(){return this.requirements.length>0||this.primaryPokemonRequirements.length>0||this.secondaryPokemonRequirements.length>0}meetsRequirements(){return!this.requirements.some(e=>!e.meetsRequirement())&&this.meetsSupportingRequirementAndSupportingPokemonSelected()&&this.meetsPrimaryRequirementAndPrimaryPokemonSelected()}pokemonMeetsPrimaryRequirements(e){return!this.primaryPokemonRequirements.some(I=>!I.queryParty(T.getPlayerParty()).map(L=>L.id).includes(e.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0)return!0;let e=T.getPlayerParty();for(const I of this.primaryPokemonRequirements)if(I.meetsRequirement()){const L=I.queryParty(T.getPlayerParty());e=e.filter(N=>L.includes(N))}else return this.primaryPokemon=void 0,!1;if(e.length===0)return!1;if(this.excludePrimaryFromSecondaryRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const I=[],L=[];for(const N of e)this.secondaryPokemon.includes(N)?L.push(N):I.push(N);return I.length>0?(this.primaryPokemon=I[DA(I.length)],!0):L.length>1||this.secondaryPokemon.length-L.length>=1?(this.primaryPokemon=L[DA(L.length)],this.secondaryPokemon=this.secondaryPokemon.filter(N=>N!==this.primaryPokemon),!0):!1}return this.primaryPokemon=e[0],!0}meetsSupportingRequirementAndSupportingPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let e=T.getPlayerParty();for(const I of this.secondaryPokemonRequirements)if(I.meetsRequirement()){const L=I.queryParty(T.getPlayerParty());e=e.filter(N=>L.includes(N))}else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=e,!0}};r(Lm,"MysteryEncounterOption");let z0=Lm;const Jl=class Jl{constructor(){this.optionMode=rE.DEFAULT,this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSecondaryRequirements=!1,this.isDisabledOnRequirementsNotMet=!0,this.hasDexProgress=!1}static newOptionWithMode(e){return Object.assign(new Jl,{optionMode:e})}withHasDexProgress(e){return Object.assign(this,{hasDexProgress:e})}withSceneRequirement(e){return this.requirements.push(e),Object.assign(this,{requirements:this.requirements})}withSceneMoneyRequirement(e,I){return this.withSceneRequirement(new UI(e,I))}withPreOptionPhase(e){return Object.assign(this,{onPreOptionPhase:e})}withOptionPhase(e){return Object.assign(this,{onOptionPhase:e})}withPostOptionPhase(e){return Object.assign(this,{onPostOptionPhase:e})}withPrimaryPokemonRequirement(e){return this.primaryPokemonRequirements.push(e),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPokemonTypeRequirement(e,I,L,N){return this.withPrimaryPokemonRequirement(new RT(e,I,L,N))}withPokemonCanLearnMoveRequirement(e,I){return this.withPrimaryPokemonRequirement(new q0(e,I))}withSecondaryPokemonRequirement(e,I=!0){return this.secondaryPokemonRequirements.push(e),this.excludePrimaryFromSecondaryRequirements=I,Object.assign(this,{secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withDialogue(e){return this.dialogue=e,this}build(){return new z0(this)}};r(Jl,"MysteryEncounterOptionBuilder");let iE=Jl;const _v=2,Gv=1,Nm=class Nm{constructor(e){this.startOfBattleEffects=[],SA(e)||Object.assign(this,e),this.encounterTier=this.encounterTier??xE.COMMON,this.localizationKey=this.localizationKey??"",this.dialogue=this.dialogue??{},this.spriteConfigs=this.spriteConfigs?[...this.spriteConfigs]:[],this.maxAllowedEncounters=this.maxAllowedEncounters??this.encounterTier===xE.ROGUE?Gv:_v,this.encounterMode=DO.DEFAULT,this.requirements=this.requirements?this.requirements:[],this.hideBattleIntroMessage=this.hideBattleIntroMessage??!1,this.autoHideIntroVisuals=this.autoHideIntroVisuals??!0,this.enterIntroVisualsFromRight=this.enterIntroVisualsFromRight??!1,this.continuousEncounter=this.continuousEncounter??!1,this.startOfBattleEffectsComplete=!1,this.lockEncounterRewardTiers=!0,this.dialogueTokens={},this.enemyPartyConfigs=[],this.startOfBattleEffects=[],this.introVisuals=void 0,this.misc=null,this.expMultiplier=1,this.loadAssets=[]}meetsRequirements(){const e=!this.requirements.some(N=>!N.meetsRequirement()),I=this.meetsSecondaryRequirementAndSecondaryPokemonSelected(),L=this.meetsPrimaryRequirementAndPrimaryPokemonSelected();return e&&I&&L}pokemonMeetsPrimaryRequirements(e){return!this.primaryPokemonRequirements.some(I=>!I.queryParty(T.getPlayerParty()).map(L=>L.id).includes(e.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0){const I=T.getPlayerParty().filter(L=>L.isActive(!0));return I.length>0?this.primaryPokemon=I[0]:this.primaryPokemon=T.getPlayerParty().filter(L=>L.isAllowedInBattle())[0],!0}let e=T.getPlayerParty();for(const I of this.primaryPokemonRequirements)if(I.meetsRequirement())e=e.filter(L=>I.queryParty(T.getPlayerParty()).includes(L));else return this.primaryPokemon=void 0,!1;if(e.length===0)return!1;if(this.excludePrimaryFromSupportRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const I=[],L=[];for(const N of e)this.secondaryPokemon.includes(N)?L.push(N):I.push(N);return I.length>0?(this.primaryPokemon=I[DA(I.length,0)],!0):L.length>1||this.secondaryPokemon.length-L.length>=1?(this.primaryPokemon=L[DA(L.length,0)],this.secondaryPokemon=this.secondaryPokemon.filter(N=>N!==this.primaryPokemon),!0):!1}return this.primaryPokemon=e[DA(e.length,0)],!0}meetsSecondaryRequirementAndSecondaryPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let e=T.getPlayerParty();for(const I of this.secondaryPokemonRequirements)if(I.meetsRequirement())e=e.filter(L=>I.queryParty(T.getPlayerParty()).includes(L));else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=e,!0}initIntroVisuals(){this.introVisuals=new b0(this)}populateDialogueTokensFromRequirements(){var e,I,L;if(this.meetsRequirements(),((e=this.requirements)==null?void 0:e.length)>0)for(const N of this.requirements){const S=N.getDialogueToken();(S==null?void 0:S.length)===2&&this.setDialogueToken(...S)}if(this.primaryPokemon&&this.primaryPokemon.length>0){this.setDialogueToken("primaryName",this.primaryPokemon.getNameToRender());for(const N of this.primaryPokemonRequirements)if(!N.invertQuery){const S=N.getDialogueToken(this.primaryPokemon);(S==null?void 0:S.length)===2&&this.setDialogueToken("primary"+nN(S[0]),S[1])}}if(((I=this.secondaryPokemonRequirements)==null?void 0:I.length)>0&&this.secondaryPokemon&&this.secondaryPokemon.length>0){this.setDialogueToken("secondaryName",this.secondaryPokemon[0].getNameToRender());for(const N of this.secondaryPokemonRequirements)if(!N.invertQuery){const S=N.getDialogueToken(this.secondaryPokemon[0]);(S==null?void 0:S.length)===2&&this.setDialogueToken("primary"+nN(S[0]),S[1]),this.setDialogueToken("secondary"+nN(S[0]),S[1])}}for(let N=0;N<this.options.length;N++){const S=this.options[N];S.meetsRequirements();const n=N+1;if(S.requirements.length>0)for(const i of S.requirements){const C=i.getDialogueToken();(C==null?void 0:C.length)===2&&this.setDialogueToken("option"+n+nN(C[0]),C[1])}if(S.primaryPokemonRequirements.length>0&&S.primaryPokemon){this.setDialogueToken("option"+n+"PrimaryName",S.primaryPokemon.getNameToRender());for(const i of S.primaryPokemonRequirements)if(!i.invertQuery){const C=i.getDialogueToken(S.primaryPokemon);(C==null?void 0:C.length)===2&&this.setDialogueToken("option"+n+"Primary"+nN(C[0]),C[1])}}if(((L=S.secondaryPokemonRequirements)==null?void 0:L.length)>0&&S.secondaryPokemon&&S.secondaryPokemon.length>0){this.setDialogueToken("option"+n+"SecondaryName",S.secondaryPokemon[0].getNameToRender());for(const i of S.secondaryPokemonRequirements)if(!i.invertQuery){const C=i.getDialogueToken(S.secondaryPokemon[0]);(C==null?void 0:C.length)===2&&this.setDialogueToken("option"+n+"Secondary"+nN(C[0]),C[1])}}}}setDialogueToken(e,I){this.dialogueTokens[e]=I}getSeedOffset(){return this.seedOffset}updateSeedOffset(){const e=this.seedOffset??T.currentBattle.waveIndex*1e3;this.seedOffset=e+512}};r(Nm,"MysteryEncounter");let j0=Nm;const $l=class $l{constructor(){this.enemyPartyConfigs=[],this.localizationKey="",this.dialogue={},this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSupportRequirements=!0,this.dialogueTokens={},this.hideBattleIntroMessage=!1,this.autoHideIntroVisuals=!0,this.enterIntroVisualsFromRight=!1,this.continuousEncounter=!1,this.catchAllowed=!1,this.fleeAllowed=!0,this.lockEncounterRewardTiers=!1,this.startOfBattleEffectsComplete=!1,this.hasBattleAnimationsWithoutTargets=!1,this.skipEnemyBattleTurns=!1,this.skipToFightInput=!1,this.preventGameStatsUpdates=!1,this.maxAllowedEncounters=3,this.expMultiplier=1}static withEncounterType(e){return Object.assign(new $l,{encounterType:e})}withOption(e){return this.options?(this.options.push(e),this):Object.assign(this,{options:[e]})}withSimpleOption(e,I){return this.withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue(e).withOptionPhase(I).build())}withSimpleDexProgressOption(e,I){return this.withOption(iE.newOptionWithMode(rE.DEFAULT).withHasDexProgress(!0).withDialogue(e).withOptionPhase(I).build())}withIntroSpriteConfigs(e){return Object.assign(this,{spriteConfigs:e})}withIntroDialogue(e=[]){return this.dialogue={...this.dialogue,intro:e},this}withIntro({spriteConfigs:e,dialogue:I}){return this.withIntroSpriteConfigs(e).withIntroDialogue(I)}setLocalizationKey(e){return this.localizationKey=e,this}withEncounterTier(e){return Object.assign(this,{encounterTier:e})}withAnimations(...e){const I=ue(e);return Object.assign(this,{encounterAnimations:I})}withDisallowedGameModes(...e){const I=ue(e);return Object.assign(this,{disallowedGameModes:I})}withDisallowedChallenges(...e){const I=ue(e);return Object.assign(this,{disallowedChallenges:I})}withContinuousEncounter(e){return Object.assign(this,{continuousEncounter:e})}withBattleAnimationsWithoutTargets(e){return Object.assign(this,{hasBattleAnimationsWithoutTargets:e})}withSkipEnemyBattleTurns(e){return Object.assign(this,{skipEnemyBattleTurns:e})}withSkipToFightInput(e){return Object.assign(this,{skipToFightInput:e})}withPreventGameStatsUpdates(e){return Object.assign(this,{preventGameStatsUpdates:e})}withMaxAllowedEncounters(e){return Object.assign(this,{maxAllowedEncounters:e})}withSceneRequirement(e){return this.requirements.push(e),this}withSceneWaveRangeRequirement(e,I){return this.withSceneRequirement(new k0([e,I??e]))}withScenePartySizeRequirement(e,I,L=!1){return this.withSceneRequirement(new Q0([e,I??e],L))}withPrimaryPokemonRequirement(e){return this.primaryPokemonRequirements.push(e),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPrimaryPokemonStatusEffectRequirement(e,I=1,L=!1){return this.withPrimaryPokemonRequirement(new J0(e,I,L))}withPrimaryPokemonHealthRatioRequirement(e,I=1,L=!1){return this.withPrimaryPokemonRequirement(new $0(e,I,L))}withSecondaryPokemonRequirement(e,I=!1){return this.secondaryPokemonRequirements.push(e),this.excludePrimaryFromSupportRequirements=I,Object.assign(this,{excludePrimaryFromSecondaryRequirements:this.excludePrimaryFromSupportRequirements,secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withRewards(e){return Object.assign(this,{doEncounterRewards:e})}withExp(e){return Object.assign(this,{doEncounterExp:e})}withOnInit(e){return Object.assign(this,{onInit:e})}withOnVisualsStart(e){return Object.assign(this,{onVisualsStart:e})}withCatchAllowed(e){return Object.assign(this,{catchAllowed:e})}withFleeAllowed(e){return Object.assign(this,{fleeAllowed:e})}withHideWildIntroMessage(e){return Object.assign(this,{hideBattleIntroMessage:e})}withAutoHideIntroVisuals(e){return Object.assign(this,{autoHideIntroVisuals:e})}withEnterIntroVisualsFromRight(e){return Object.assign(this,{enterIntroVisualsFromRight:e})}withTitle(e){const I=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...I,title:e}},this}withDescription(e){const I=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...I,description:e}},this}withQuery(e){const I=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...I,query:e}},this}withOutroDialogue(e=[]){return this.dialogue={...this.dialogue,outro:e},this}build(){return new j0(this)}};r($l,"MysteryEncounterBuilder");let qE=$l;const ql=class ql extends Phaser.GameObjects.Container{get statOrder(){return[]}constructIcons(){const e=new Phaser.Geom.Rectangle(0,0,12,15),I=Phaser.Geom.Rectangle.Contains;this.teraIcon=T.add.sprite(0,0,"icon_tera").setName("icon_tera").setVisible(!1).setOrigin(0).setScale(.5).setInteractive(e,I).setPositionRelative(this.nameText,0,2),this.shinyIcon=T.add.sprite(0,0,"shiny_star").setName("icon_shiny").setVisible(!1).setOrigin(0).setScale(.5).setInteractive(e,I).setPositionRelative(this.nameText,0,2),this.fusionShinyIcon=T.add.sprite(0,0,"shiny_star_2").setName("icon_fusion_shiny").setVisible(!1).setOrigin(0).setScale(.5).copyPosition(this.shinyIcon),this.splicedIcon=T.add.sprite(0,0,"icon_spliced").setName("icon_spliced").setVisible(!1).setOrigin(0).setScale(.5).setInteractive(e,I).setPositionRelative(this.nameText,0,2),this.add([this.teraIcon,this.shinyIcon,this.fusionShinyIcon,this.splicedIcon])}constructStatContainer({xOffset:e,paddingX:I,statOverflow:L}){this.statsContainer=T.add.container(0,0).setName("container_stats").setAlpha(0),this.add(this.statsContainer),this.statsBox=T.add.sprite(0,0,`${this.getTextureName()}_stats`).setName("box_stats").setOrigin(1,.5),this.statsContainer.add(this.statsBox),this.statNumbers=[],this.statValuesContainer=T.add.container(),this.statsContainer.add(this.statValuesContainer);const N=-this.statsBox.width+e;for(const[S,n]of this.statOrder.entries()){const i=n===c.HP,C=S>L?this.statNumbers[Math.max(S-2,0)].x+this.statNumbers[Math.max(S-2,0)].width+I:N;let o=-this.statsBox.height/2+4;i||n===c.SPD?o+=5:this.player===!!(S%2)&&(o+=10);const l=T.add.sprite(C,o,"pbinfo_stat",c[n]).setName("icon_stat_label_"+S.toString()).setOrigin(0);this.statValuesContainer.add(l);const H=T.add.sprite(C+l.width,o,"pbinfo_stat_numbers",i?"empty":"3").setName("icon_stat_number_"+S.toString()).setOrigin(0);this.statNumbers.push(H),this.statValuesContainer.add(H),i&&(l.setVisible(!1),H.setVisible(!1))}}constructor(e,I,L,N){super(T,e,I),this.baseY=I,this.player=L,this.mini=!L,this.boss=!1,this.offset=!1,this.lastName=null,this.lastTeraType=t.UNKNOWN,this.lastStatus=J.NONE,this.lastHp=-1,this.lastMaxHp=-1,this.lastHpFrame=null,this.lastExp=-1,this.lastLevelExp=-1,this.lastLevel=-1,this.baseLvContainerX=N.levelContainerX,this.setVisible(!1),this.box=T.add.sprite(0,0,this.getTextureName()).setName("box").setOrigin(1,.5),this.add(this.box),this.nameText=oE(N.nameTextX,N.nameTextY,"",XA.BATTLE_INFO).setName("text_name").setOrigin(0),this.add(this.nameText),this.genderText=oE(0,0,"",XA.BATTLE_INFO).setName("text_gender").setOrigin(0).setPositionRelative(this.nameText,0,2),this.add(this.genderText),this.constructIcons(),this.statusIndicator=T.add.sprite(0,0,Kt("statuses")).setName("icon_status").setVisible(!1).setOrigin(0).setPositionRelative(this.nameText,0,11.5),this.add(this.statusIndicator),this.levelContainer=T.add.container(N.levelContainerX,N.levelContainerY).setName("container_level"),this.add(this.levelContainer);const S=T.add.image(0,0,"overlay_lv");this.levelContainer.add(S),this.hpBar=T.add.image(N.hpBarX,N.hpBarY,"overlay_hp").setName("hp_bar").setOrigin(0),this.add(this.hpBar),this.levelNumbersContainer=T.add.container(9.5,T.uiTheme?0:-.5).setName("container_level"),this.levelContainer.add(this.levelNumbersContainer),this.constructStatContainer(N.statBox),this.constructTypeIcons()}getStatsValueContainer(){return this.statValuesContainer}initSplicedIcon(e,I){this.splicedIcon.setPositionRelative(this.nameText,I+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),2.5),this.splicedIcon.setVisible(e.isFusion(!0)),this.splicedIcon.visible&&this.splicedIcon.on("pointerover",()=>{var L;return T.ui.showTooltip("",`${e.species.getName(e.formIndex)}/${(L=e.fusionSpecies)==null?void 0:L.getName(e.fusionFormIndex)}`)}).on("pointerout",()=>T.ui.hideTooltip())}initShinyIcon(e,I,L){const N=L?e.variant:e.getVariant(!0);if(this.shinyIcon.setPositionRelative(this.nameText,I+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5),this.shinyIcon.setTexture(`shiny_star${L?"_1":""}`).setVisible(e.isShiny()).setTint(jI(N)),!this.shinyIcon.visible)return;let S="";(L||N)&&(S=" ("+OC(N),L&&(S+="/"+OC(e.fusionVariant)),S+=")"),this.shinyIcon.on("pointerover",()=>T.ui.showTooltip("",_.t("common:shinyOnHover")+S)).on("pointerout",()=>T.ui.hideTooltip())}initInfo(e){this.updateNameText(e);const I=this.nameText.displayWidth;this.name=e.getNameToRender(),this.box.name=e.getNameToRender(),this.genderText.setText($s(e.gender)).setColor(aS(e.gender)).setPositionRelative(this.nameText,I,0),this.lastTeraType=e.getTeraType(),this.teraIcon.setVisible(e.isTerastallized).on("pointerover",()=>{e.isTerastallized&&T.ui.showTooltip("",_.t("fightUiHandler:teraHover",{type:_.t(`pokemonInfo:Type.${t[this.lastTeraType]}`)}))}).on("pointerout",()=>T.ui.hideTooltip()).setPositionRelative(this.nameText,I+this.genderText.displayWidth+1,2);const L=e.isFusion(!0);this.initSplicedIcon(e,I);const N=L&&e.shiny&&e.fusionShiny;this.initShinyIcon(e,I,N),this.fusionShinyIcon.setVisible(N).copyPosition(this.shinyIcon),L&&this.fusionShinyIcon.setTint(jI(e.fusionVariant)),this.hpBar.setScale(e.getHpRatio(!0),1),this.lastHpFrame=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low",this.hpBar.setFrame(this.lastHpFrame),this.lastHp=e.hp,this.lastMaxHp=e.getMaxHp(),this.setLevel(e.level),this.lastLevel=e.level,this.shinyIcon.setVisible(e.isShiny()),this.setTypes(e.getTypes(!0,!1,void 0,!0));const S=this.statOrder.map(()=>0);this.lastStats=S.join(""),this.updateStats(S)}setMini(e){}toggleStats(e){T.tweens.add({targets:this.statsContainer,duration:We(125),ease:"Sine.easeInOut",alpha:e?1:0})}setOffset(e){this.offset!==e&&(this.offset=e,this.x+=10*(this.offset===this.player?1:-1),this.y+=27*(this.offset?1:-1),this.baseY=this.y)}updateStatusIcon(e,I=0){var L,N;this.lastStatus!==(((L=e.status)==null?void 0:L.effect)||J.NONE)&&(this.lastStatus=((N=e.status)==null?void 0:N.effect)||J.NONE,this.lastStatus!==J.NONE&&this.statusIndicator.setFrame(J[this.lastStatus].toLowerCase()),this.statusIndicator.setVisible(!!this.lastStatus).setPositionRelative(this.nameText,I,11.5))}updateName(e){const I=e.getNameToRender();return this.lastName===I?!1:(this.updateNameText(e),this.genderText.setPositionRelative(this.nameText,this.nameText.displayWidth,0),!0)}updateTeraType(e){return this.lastTeraType===e?!1:(this.teraIcon.setVisible(e!==t.UNKNOWN).setTintFill(Phaser.Display.Color.GetColor(...Zt(e))).setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.lastTeraType=e,!0)}setTypes(e){this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${e.length>1?"1":""}`).setFrame(t[e[0]].toLowerCase()),this.type2Icon.setVisible(e.length>1),this.type3Icon.setVisible(e.length>2),e.length>1&&this.type2Icon.setFrame(t[e[1]].toLowerCase()),e.length>2&&this.type3Icon.setFrame(t[e[2]].toLowerCase())}updateIconDisplay(e){this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.splicedIcon.setVisible(e).setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),1.5),this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5)}updateHpFrame(){const e=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low";e!==this.lastHpFrame&&(this.hpBar.setFrame(e),this.lastHpFrame=e)}onHpTweenUpdate(e){this.updateHpFrame()}updatePokemonHp(e,I,L){let N=L?0:Phaser.Math.Clamp(Math.abs(this.lastHp-e.hp)*5,250,5e3);const S=T.hpBarSpeed;S&&(N=S>=3?0:N/Math.pow(2,S)),T.tweens.add({targets:this.hpBar,ease:"Sine.easeOut",scaleX:e.getHpRatio(!0),duration:N,onUpdate:r(()=>{this.onHpTweenUpdate(e)},"onUpdate"),onComplete:r(()=>{this.updateHpFrame(),I()},"onComplete")}),this.lastMaxHp=e.getMaxHp()}async updateInfo(e,I){var K,f;let L=r(()=>{},"resolve");const N=new Promise(h=>L=h);if(!T)return L();const S=((f=(K=e.summonData)==null?void 0:K.illusion)==null?void 0:f.gender)??e.gender;this.genderText.setText($s(S)).setColor(aS(S));const n=this.updateName(e),i=this.updateTeraType(e.isTerastallized?e.getTeraType():t.UNKNOWN),C=e.isFusion(!0);if((n||i)&&this.updateIconDisplay(C),this.updateStatusIcon(e),this.setTypes(e.getTypes(!0,!1,void 0,!0)),this.lastHp!==e.hp||this.lastMaxHp!==e.getMaxHp())return this.updatePokemonHp(e,L,I);!this.player&&this.lastLevel!==e.level&&(this.setLevel(e.level),this.lastLevel=e.level);const o=e.getStatStages(),l=o.join("");this.lastStats!==l&&(this.updateStats(o),this.lastStats=l),this.shinyIcon.setVisible(e.isShiny(!0));const H=C&&e.shiny&&e.fusionShiny,P=H?e.variant:e.getVariant(!0);this.shinyIcon.setTint(jI(P)),this.fusionShinyIcon.setVisible(H).setPosition(this.shinyIcon.x,this.shinyIcon.y),C&&this.fusionShinyIcon.setTint(jI(e.fusionVariant)),L(),await N}updateNameText(e){var n;let I=e.getNameToRender().replace(/[♂♀]/g,""),L;const N=oE(0,0,I,XA.BATTLE_INFO);L=N.displayWidth;const S=((n=e.summonData.illusion)==null?void 0:n.gender)??e.gender;for(;L>(this.player||!this.boss?60:98)-((S!==mA.GENDERLESS?6:0)+(e.fusionSpecies?8:0)+(e.isShiny()?8:0)+(Math.min(e.level.toString().length,3)-3)*8);)I=`${I.slice(0,I.endsWith(".")?-2:-1).trimEnd()}.`,N.setText(I),L=N.displayWidth;N.destroy(),this.nameText.setText(I),this.lastName=e.getNameToRender(),this.nameText.visible&&this.nameText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.nameText.width,this.nameText.height),Phaser.Geom.Rectangle.Contains)}setLevel(e,I="numbers"){this.levelNumbersContainer.removeAll(!0);const L=e.toString();for(let N=0;N<L.length;N++)this.levelNumbersContainer.add(T.add.image(N*8,0,I,L[N]));this.levelContainer.setX(this.baseLvContainerX-8*Math.max(L.length-3,0))}updateStats(e){for(const[I,L]of this.statOrder.entries())L!==c.HP&&this.statNumbers[I].setFrame(e[L-1].toString())}getBaseY(){return this.baseY}resetY(){this.y=this.baseY}};r(ql,"BattleInfo"),ql.EXP_GAINS_DURATION_BASE=1650;let OT=ql;const Sm=class Sm extends Phaser.GameObjects.Container{constructor(e){super(T,0,0),this.flyoutWidth=118,this.flyoutHeight=23,this.flyoutText=new Array(4),this.moveInfo=new Array,this.flyoutVisible=!1,this.onMoveUsedEvent=I=>this.onMoveUsed(I),this.onBerryUsedEvent=I=>this.onBerryUsed(I),this.player=e,this.translationX=this.player?-this.flyoutWidth:this.flyoutWidth,this.anchorX=this.player?-130:-40,this.anchorY=-2.5+(this.player?-18.5:-13),this.flyoutParent=T.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutBackground=T.add.sprite(0,0,"pbinfo_enemy_boss_stats"),this.flyoutBackground.setOrigin(0,0),this.flyoutParent.add(this.flyoutBackground),this.flyoutContainer=T.add.container(44+(this.player?-this.flyoutWidth:0),2),this.flyoutParent.add(this.flyoutContainer);for(let I=0;I<4;I++)this.flyoutText[I]=oE(this.flyoutWidth/4+this.flyoutWidth/2*(I%2),this.flyoutHeight/4+this.flyoutHeight/2*(I<2?0:1),"???",XA.BATTLE_INFO),this.flyoutText[I].setFontSize(45),this.flyoutText[I].setLineSpacing(-10),this.flyoutText[I].setAlign("center"),this.flyoutText[I].setOrigin();this.flyoutContainer.add(this.flyoutText),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(T,this.flyoutWidth/2,0,1,this.flyoutHeight+(T.uiTheme===rI.LEGACY?1:0),2171169).setOrigin(.5,0)),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(T,0,this.flyoutHeight/2,this.flyoutWidth+6,1,2171169).setOrigin(0,.5))}initInfo(e){this.pokemon=e,this.name=`Flyout ${Q(this.pokemon)}`,this.flyoutParent.name=`Flyout Parent ${Q(this.pokemon)}`,T.eventTarget.addEventListener(MT.MOVE_USED,this.onMoveUsedEvent),T.eventTarget.addEventListener(MT.BERRY_USED,this.onBerryUsedEvent)}setText(){for(let e=0;e<this.flyoutText.length;e++){const I=this.flyoutText[e],L=this.moveInfo[e];if(!L)continue;const N=L.maxPp-L.ppUsed;I.text=`${L.move.name}  ${N}/${L.maxPp}`}}onMoveUsed(e){var N;const I=e;if(!I||I.pokemonId!==((N=this.pokemon)==null?void 0:N.id)||I.move.id===E.STRUGGLE)return;const L=this.moveInfo.find(S=>(S==null?void 0:S.move.id)===I.move.id);L?L.ppUsed=I.ppUsed:this.moveInfo.push({move:I.move,maxPp:I.move.pp,ppUsed:I.ppUsed}),this.setText()}onBerryUsed(e){var N;const I=e;if(!I||I.berryModifier.pokemonId!==((N=this.pokemon)==null?void 0:N.id)||I.berryModifier.berryType!==EE.LEPPA)return;const L=this.moveInfo.find(S=>S.ppUsed===S.maxPp);L&&(L.ppUsed=Math.max(L.ppUsed-10,0),this.setText())}toggleFlyout(e){this.flyoutVisible=e,T.tweens.add({targets:this.flyoutParent,x:e?this.anchorX:this.anchorX-this.translationX,duration:We(125),ease:"Sine.easeInOut",alpha:e?1:0})}destroy(e){T.eventTarget.removeEventListener(MT.MOVE_USED,this.onMoveUsedEvent),T.eventTarget.removeEventListener(MT.BERRY_USED,this.onBerryUsedEvent),super.destroy(e)}};r(Sm,"BattleFlyout");let AH=Sm;const Tm=class Tm extends OT{constructor(){const e={nameTextX:-124,nameTextY:-11.2,levelContainerX:-50,levelContainerY:-5,hpBarX:-71,hpBarY:4.5,statBox:{xOffset:5,paddingX:2,statOverflow:0}};super(140,-141,!1,e),this.player=!1,this.hpBarSegmentDividers=[],this.ownedIcon=T.add.sprite(0,0,"icon_owned").setName("icon_owned").setVisible(!1).setOrigin(0,0).setPositionRelative(this.nameText,0,11.75),this.championRibbon=T.add.sprite(0,0,"champion_ribbon").setName("icon_champion_ribbon").setVisible(!1).setOrigin(0,0).setPositionRelative(this.nameText,8,11.75),this.addAt([this.ownedIcon,this.championRibbon],this.getIndex(this.statsContainer)),this.flyoutMenu=new AH(this.player),this.add(this.flyoutMenu),this.moveBelow(this.flyoutMenu,this.box),this.effectivenessContainer=T.add.container(0,0).setVisible(!1).setPositionRelative(this.type1Icon,22,4),this.add(this.effectivenessContainer),this.effectivenessText=oE(5,4.5,"",XA.BATTLE_INFO),this.effectivenessWindow=zL(0,0,0,20,void 0,!1,void 0,void 0,MH.XTHIN),this.effectivenessContainer.add([this.effectivenessWindow,this.effectivenessText])}get statOrder(){return[c.HP,c.ATK,c.DEF,c.SPATK,c.SPDEF,c.ACC,c.EVA,c.SPD]}getTextureName(){return this.boss?"pbinfo_enemy_boss":"pbinfo_enemy_mini"}constructTypeIcons(){this.type1Icon=T.add.sprite(-15,-15.5,"pbinfo_enemy_type1").setName("icon_type_1").setOrigin(0),this.type2Icon=T.add.sprite(-15,-2.5,"pbinfo_enemy_type2").setName("icon_type_2").setOrigin(0),this.type3Icon=T.add.sprite(0,15.5,"pbinfo_enemy_type3").setName("icon_type_3").setOrigin(0),this.add([this.type1Icon,this.type2Icon,this.type3Icon])}initInfo(e){this.flyoutMenu.initInfo(e),super.initInfo(e),this.nameText.visible&&this.nameText.on("pointerover",()=>T.ui.showTooltip("",_.t("battleInfo:generation",{generation:_.t(`starterSelectUiHandler:gen${e.species.generation}`)}))).on("pointerout",()=>T.ui.hideTooltip());const I=T.gameData.dexData[e.species.speciesId];this.ownedIcon.setVisible(!!I.caughtAttr);const L=e.getDexAttr();T.gameMode.isClassic&&T.gameData.starterData[e.species.getRootSpeciesId()].classicWinCount>0&&T.gameData.starterData[e.species.getRootSpeciesId(!0)].classicWinCount>0&&this.championRibbon.setVisible(!0);const N=(I.caughtAttr&L)<L,S=T.gameData.starterData[e.species.getRootSpeciesId()].abilityAttr,n=e.checkIfPlayerHasAbilityOfStarter(S);(N||!n)&&this.ownedIcon.setTint(8421504),this.boss&&this.updateBossSegmentDividers(e)}updateEffectiveness(e){if(this.currentEffectiveness=e,!T.typeHints||e===void 0||this.flyoutMenu.flyoutVisible){this.effectivenessContainer.setVisible(!1);return}this.effectivenessText.setText(e),this.effectivenessWindow.width=10+this.effectivenessText.displayWidth,this.effectivenessContainer.setVisible(!0)}toggleFlyout(e){this.flyoutMenu.toggleFlyout(e),e?this.effectivenessContainer.setVisible(!1):this.updateEffectiveness(this.currentEffectiveness)}updateBossSegments(e){const I=!!e.bossSegments;I!==this.boss&&(this.boss=I,[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.ownedIcon,this.championRibbon,this.statusIndicator,this.levelContainer,this.statValuesContainer].map(L=>L.x+=48*(I?-1:1)),this.hpBar.x+=38*(I?-1:1),this.hpBar.y+=2*(this.boss?-1:1),this.hpBar.setTexture(`overlay_hp${I?"_boss":""}`),this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`)),this.bossSegments=I?e.bossSegments:0,this.updateBossSegmentDividers(e)}updateBossSegmentDividers(e){var I;for(;this.hpBarSegmentDividers.length;)(I=this.hpBarSegmentDividers.pop())==null||I.destroy();if(this.boss&&this.bossSegments>1){const L=T.uiTheme,N=e.getMaxHp();for(let S=1;S<this.bossSegments;S++){const n=Math.round(N/this.bossSegments*S)/N*this.hpBar.width,i=T.add.rectangle(0,0,1,this.hpBar.height-(L?0:1),e.bossSegmentIndex>=S?16777215:4210752);i.setOrigin(.5,0).setName("hpBar_divider_"+S.toString()),this.add(i),this.moveBelow(i,this.statsContainer),i.setPositionRelative(this.hpBar,n,L?0:1),this.hpBarSegmentDividers.push(i)}}}updateStatusIcon(e){super.updateStatusIcon(e,(this.ownedIcon.visible?8:0)+(this.championRibbon.visible?8:0))}updatePokemonHp(e,I,L){super.updatePokemonHp(e,I,L),this.lastHp=e.hp}};r(Tm,"EnemyBattleInfo");let EH=Tm;var AC=(R=>(R[R.DEFAULT=0]="DEFAULT",R[R.FAST=1]="FAST",R[R.FASTER=2]="FASTER",R[R.SKIP=3]="SKIP",R))(AC||{});const sm=class sm extends OT{constructor(){const e={nameTextX:-115,nameTextY:-15.2,levelContainerX:-41,levelContainerY:-10,hpBarX:-61,hpBarY:-1,statBox:{xOffset:8,paddingX:4,statOverflow:1}};super(Math.floor(T.game.canvas.width/6)-10,-72,!0,e),this.player=!0,this.hpNumbersContainer=T.add.container(-15,10).setName("container_hp"),this.addAt(this.hpNumbersContainer,this.getIndex(this.statsContainer));const I=T.add.image(-98,18,"overlay_exp").setName("overlay_exp").setOrigin(0);this.add(I);const L=T.make.graphics({}).setScale(6).fillStyle(16777215).beginPath().fillRect(127,126,85,2),N=L.createGeometryMask();I.setMask(N),this.expBar=I,this.expMaskRect=L}get statOrder(){return[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.ACC,c.EVA,c.SPD]}getTextureName(){return this.mini?"pbinfo_player_mini":"pbinfo_player"}constructTypeIcons(){this.type1Icon=T.add.sprite(-139,-17,"pbinfo_player_type1").setName("icon_type_1").setOrigin(0),this.type2Icon=T.add.sprite(-139,-1,"pbinfo_player_type2").setName("icon_type_2").setOrigin(0),this.type3Icon=T.add.sprite(-154,-17,"pbinfo_player_type3").setName("icon_type_3").setOrigin(0),this.add([this.type1Icon,this.type2Icon,this.type3Icon])}initInfo(e){super.initInfo(e),this.setHpNumbers(e.hp,e.getMaxHp()),this.expMaskRect.x=e.levelExp/BO(e.level,e.species.growthRate)*510,this.lastExp=e.exp,this.lastLevelExp=e.levelExp,this.statValuesContainer.setPosition(8,7)}setMini(e){if(this.mini===e)return;this.mini=e,this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`),this.player&&(this.y-=12*(e?1:-1),this.baseY=this.y),[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.statusIndicator,this.levelContainer].forEach(N=>N.y+=1.5*(e?-1:1)),[this.type1Icon,this.type2Icon,this.type3Icon].forEach(N=>{N.x+=4*(e?1:-1),N.y+=-8*(e?1:-1)}),this.statValuesContainer.x+=2*(e?1:-1),this.statValuesContainer.y+=-7*(e?1:-1),[this.hpNumbersContainer,this.expBar].forEach(N=>N.setVisible(!e))}onHpTweenUpdate(e){const I=Math.ceil(this.hpBar.scaleX*e.getMaxHp());this.setHpNumbers(I,e.getMaxHp()),this.lastHp=I,this.updateHpFrame()}updatePokemonExp(e,I,L=1){const N=this.lastLevel<e.level,S=A3(this.lastLevel+1,e.species.growthRate),n=N?S:e.levelExp;let i=S?n/S:0;this.lastLevel>=T.getMaxExpLevel(!0)&&(i=N?1:0,I=!0);const C=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.max(this.lastLevel-100,0)/150);let o=this.visible&&!I?(n-this.lastLevelExp)/S*OT.EXP_GAINS_DURATION_BASE*C*L:0;const l=T.expGainsSpeed;return l&&l>=AC.DEFAULT&&(o=l>=AC.SKIP?AC.DEFAULT:o/Math.pow(2,l)),i===1?(this.lastLevelExp=0,this.lastLevel++):(this.lastExp=e.exp,this.lastLevelExp=e.levelExp),o&&T.playSound("se/exp"),new Promise(H=>{T.tweens.add({targets:this.expMaskRect,ease:"Sine.easeIn",x:i*510,duration:o,onComplete:r(()=>{if(!T)return H();if(o&&T.sound.stopByKey("se/exp"),i===1){T.playSound("se/level_up"),this.setLevel(this.lastLevel),T.time.delayedCall(500*L,()=>{this.expMaskRect.x=0,this.updateInfo(e,I).then(()=>H())});return}H()},"onComplete")})})}async updateInfo(e,I){await super.updateInfo(e,I);const L=e.level>=T.getMaxExpLevel(),N=this.lastLevelCapped;if(this.lastLevelCapped=L,this.lastExp!==e.exp||this.lastLevel!==e.level){const S=Math.max(Phaser.Tweens.Builders.GetEaseFunction("Cubic.easeIn")(1-Math.min(e.level-this.lastLevel,10)/10),.1);await this.updatePokemonExp(e,!1,S)}else L!==N&&this.setLevel(e.level)}setHpNumbers(e,I){if(!T)return;this.hpNumbersContainer.removeAll(!0);const L=e.toString(),N=I.toString();let S=0;for(let n=N.length-1;n>=0;n--)this.hpNumbersContainer.add(T.add.image(S++*-8,0,"numbers",N[n]));this.hpNumbersContainer.add(T.add.image(S++*-8,0,"numbers","/"));for(let n=L.length-1;n>=0;n--)this.hpNumbersContainer.add(T.add.image(S++*-8,0,"numbers",L[n]))}setLevel(e){super.setLevel(e,e>=T.getMaxExpLevel()?"numbers_red":"numbers")}};r(sm,"PlayerBattleInfo");let Gl=sm;const Si={fadeIn:Hy,fadeOut:Py},t4=64,G_=256,Pv=52,Hv=8,uv=1,L4=1,cv=412,Bv=59,Kv=9,fv=10,Fv=25,Yv=50,Wv=100,hv=50,dv=128,pv=64,gv=12,mv=8,N4=8,yv=192,Vv=6,wv=3,vv=3,g3=4,m3=1;async function xv(R){await Promise.allSettled(R.map(e=>L3(e))),await N3(R)}r(xv,"loadMoveAnimations");var EC=(R=>(R[R.MISC=0]="MISC",R[R.LEVEL_UP=1]="LEVEL_UP",R[R.RELEARN=2]="RELEARN",R[R.EVOLUTION=3]="EVOLUTION",R[R.EVOLUTION_FUSED=4]="EVOLUTION_FUSED",R[R.EVOLUTION_FUSED_BASE=5]="EVOLUTION_FUSED_BASE",R))(EC||{}),bI=(R=>(R[R.RANDOM=0]="RANDOM",R[R.SMART_RANDOM=1]="SMART_RANDOM",R[R.SMART=2]="SMART",R))(bI||{});const am=class am extends wR.GameObjects.Container{constructor(e,I,L,N,S,n,i,C,o,l,H,P){if(super(T,e,I),this.switchOutStatus=!1,this.customPokemonData=new fO,this.battleData=new NS,this.summonData=new LS,this.tempSummonData=new Pl,this.waveData=new Hl,this.turnData=new ul,!L.isObtainable()&&this.isPlayer())throw`Cannot create a player Pokemon for species '${L.getName(n)}'`;if(this.species=L,this.pokeball=(P==null?void 0:P.pokeball)||MA.POKEBALL,this.level=N,this.abilityIndex=S??this.generateAbilityIndex(),n!==void 0&&(this.formIndex=n),i!==void 0&&(this.gender=i),C!==void 0&&(this.shiny=C),o!==void 0&&(this.variant=o),this.exp=(P==null?void 0:P.exp)||BO(this.level,L.growthRate),this.levelExp=(P==null?void 0:P.levelExp)||0,P)this.id=P.id,this.hp=P.hp,this.stats=P.stats,this.ivs=P.ivs,this.passive=!!P.passive,this.variant===void 0&&(this.variant=0),this.nature=P.nature||0,this.nickname=P.nickname,this.moveset=P.moveset,this.status=P.status,this.friendship=P.friendship??this.species.baseFriendship,this.metLevel=P.metLevel||5,this.luck=P.luck,this.metBiome=P.metBiome,this.metSpecies=P.metSpecies??(this.metBiome!==-1?this.species.speciesId:this.species.getRootSpeciesId(!0)),this.metWave=P.metWave??(this.metBiome===-1?-1:0),this.pauseEvolutions=P.pauseEvolutions,this.pokerus=!!P.pokerus,this.evoCounter=P.evoCounter??0,this.fusionSpecies=P.fusionSpecies instanceof M?P.fusionSpecies:P.fusionSpecies?YA(P.fusionSpecies):null,this.fusionFormIndex=P.fusionFormIndex,this.fusionAbilityIndex=P.fusionAbilityIndex,this.fusionShiny=P.fusionShiny,this.fusionVariant=P.fusionVariant||0,this.fusionGender=P.fusionGender,this.fusionLuck=P.fusionLuck,this.fusionCustomPokemonData=P.fusionCustomPokemonData,this.fusionTeraType=P.fusionTeraType,this.usedTMs=P.usedTMs??[],this.customPokemonData=new fO(P.customPokemonData),this.teraType=P.teraType,this.isTerastallized=P.isTerastallized,this.stellarTypesBoosted=P.stellarTypesBoosted??[];else{if(this.id=DA(4294967296),this.ivs=l||b4(this.id),this.gender===void 0&&this.generateGender(),this.formIndex===void 0&&(this.formIndex=T.getSpeciesFormIndex(L,this.gender,this.nature,this.isPlayer())),this.shiny===void 0&&this.trySetShiny(),this.variant===void 0&&(this.variant=this.shiny?this.generateShinyVariant():0),H!==void 0?this.setNature(H):this.generateNature(),this.friendship=L.baseFriendship,this.metLevel=N,this.metBiome=T.currentBattle?T.arena.biomeType:-1,this.metSpecies=L.speciesId,this.metWave=T.currentBattle?T.currentBattle.waveIndex:-1,this.pokerus=!1,N>1){const K=new nE(T.gameMode.isSplicedOnly);!K.value&&this.isEnemy()&&!this.hasTrainer()&&T.applyModifier(bS,!1,K),K.value&&(this.calculateStats(),this.generateFusionSpecies())}this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0),this.fusionLuck=this.luck,this.teraType=He(this.getTypes(!1,!1,!0)),this.isTerastallized=!1,this.stellarTypesBoosted=[]}this.summonData=new LS(P==null?void 0:P.summonData),this.battleData=new NS(P==null?void 0:P.battleData),this.generateName(),L.isObtainable()||(this.shiny=!1),P||this.calculateStats()}getNameToRender(e=!0){const I=!e&&this.summonData.illusion?this.summonData.illusion.basePokemon.name:this.name,L=!e&&this.summonData.illusion?this.summonData.illusion.basePokemon.nickname:this.nickname;try{return L?decodeURIComponent(escape(atob(L))):I}catch(N){return console.error(`Failed to decode nickname for ${I}`,N),I}}getPokeball(e=!1){var I;return e?((I=this.summonData.illusion)==null?void 0:I.pokeball)??this.pokeball:this.pokeball}init(){this.fieldPosition=vO.CENTER,this.initBattleInfo(),T.fieldUI.addAt(this.battleInfo,0);const e=r(N=>{const S=T.addPokemonSprite(this,0,0,`pkmn__${this.isPlayer()?"back__":""}sub`,void 0,!0);return S.setOrigin(.5,1),S.setPipeline(T.spritePipeline,{tone:[0,0,0,0],hasShadow:!!N,teraColor:Zt(this.getTeraType()),isTerastallized:this.isTerastallized}),S},"getSprite");this.setScale(this.getSpriteScale());const I=e(!0),L=e();L.setVisible(!1),this.addAt(I,0),this.addAt(L,1),this.isShiny(!0)&&!this.shinySparkle&&this.initShinySparkle()}isOnField(){return!T||this.switchOutStatus?!1:T.field.getIndex(this)>-1}isFainted(e=!1){var I;return this.hp<=0&&(!e||((I=this.status)==null?void 0:I.effect)===J.FAINT)}isAllowedInBattle(){return!this.isFainted()&&this.isAllowedInChallenge()}isAllowedInChallenge(){const e=new nE(!0);return fI(Ke.POKEMON_IN_BATTLE,this,e),e.value}isActive(e=!1){return T?this.isAllowedInBattle()&&(!e||this.isOnField()):!1}getDexAttr(){let e=0n;return e|=this.gender!==mA.FEMALE?vR.MALE:vR.FEMALE,e|=this.shiny?vR.SHINY:vR.NON_SHINY,e|=this.variant>=2?vR.VARIANT_3:this.variant===1?vR.VARIANT_2:vR.DEFAULT_VARIANT,e|=T.gameData.getFormAttr(this.formIndex),e}generateName(){if(!this.fusionSpecies){this.name=this.species.getName(this.formIndex);return}this.name=jy(this.species.getName(this.formIndex),this.fusionSpecies.getName(this.fusionFormIndex)),this.battleInfo&&this.updateInfo(!0)}generateAbilityIndex(){const e=new VA(G_);this.hasTrainer()||T.applyModifiers(aI,!0,e);const I=!DA(e.value);return this.species.abilityHidden&&I?2:this.species.ability2!==this.species.ability1?DA(2):0}setIllusion(e){if(this.summonData.illusion&&this.breakIllusion(),this.hasTrainer()){const I=e.species.speciesId;this.summonData.illusion={basePokemon:{name:this.name,nickname:this.nickname,shiny:this.shiny,variant:this.variant,fusionShiny:this.fusionShiny,fusionVariant:this.fusionVariant},species:I,formIndex:e.formIndex,gender:e.gender,pokeball:e.pokeball,fusionFormIndex:e.fusionFormIndex,fusionSpecies:e.fusionSpecies||void 0,fusionGender:e.fusionGender},this.name=e.name,this.nickname=e.nickname,this.shiny=e.shiny,this.variant=e.variant,this.fusionVariant=e.fusionVariant,this.fusionShiny=e.fusionShiny,this.shiny&&this.initShinySparkle(),this.loadAssets(!1,!0).then(()=>this.playAnim()),this.updateInfo()}else{const I=T.arena.randomSpecies(T.currentBattle.waveIndex,this.level);this.summonData.illusion={basePokemon:{name:this.name,nickname:this.nickname,shiny:this.shiny,variant:this.variant,fusionShiny:this.fusionShiny,fusionVariant:this.fusionVariant},species:I.speciesId,formIndex:I.formIndex,gender:this.gender,pokeball:this.pokeball},this.name=I.name,this.loadAssets(!1,!0).then(()=>this.playAnim())}return!0}breakIllusion(){return this.summonData.illusion?(this.name=this.summonData.illusion.basePokemon.name,this.nickname=this.summonData.illusion.basePokemon.nickname,this.shiny=this.summonData.illusion.basePokemon.shiny,this.variant=this.summonData.illusion.basePokemon.variant,this.fusionVariant=this.summonData.illusion.basePokemon.fusionVariant,this.fusionShiny=this.summonData.illusion.basePokemon.fusionShiny,this.summonData.illusion=null,this.isOnField()&&T.playSound("PRSFX- Transform"),this.shiny&&this.initShinySparkle(),this.loadAssets(!1).then(()=>this.playAnim()),this.updateInfo(!0),!0):!1}async loadAssets(e=!0,I=!1){var n,i;const L=[];L.push(xv(this.getMoveset().map(C=>C.getMove().id)));const N=I&&this.summonData.illusion?this.summonData.illusion.formIndex:this.formIndex;if(L.push(this.getSpeciesForm(!1,I).loadAssets(this.getGender(I)===mA.FEMALE,N,this.isShiny(I),this.getVariant(I))),(this.isPlayer()||this.getFusionSpeciesForm(!1,I))&&T.loadPokemonAtlas(this.getBattleSpriteKey(!0,e),this.getBattleSpriteAtlasPath(!0,e)),this.getFusionSpeciesForm()){const C=I&&this.summonData.illusion?this.summonData.illusion.fusionFormIndex:this.fusionFormIndex,o=!I&&((n=this.summonData.illusion)!=null&&n.basePokemon)?this.summonData.illusion.basePokemon.fusionShiny:this.fusionShiny,l=!I&&((i=this.summonData.illusion)!=null&&i.basePokemon)?this.summonData.illusion.basePokemon.fusionVariant:this.fusionVariant;L.push(this.getFusionSpeciesForm(!1,I).loadAssets(this.getFusionGender(!1,I)===mA.FEMALE,C,o,l)),T.loadPokemonAtlas(this.getFusionBattleSpriteKey(!0,e),this.getFusionBattleSpriteAtlasPath(!0,e))}this.isShiny(!0)&&(L.push(Xm(this,!1,e)),this.isPlayer()&&L.push(Xm(this,!0,e))),await Promise.allSettled(L);const S=new Promise(C=>T.load.once(wR.Loader.Events.COMPLETE,C));if(T.load.isLoading()||T.load.start(),await S,this.isPlayer()){const C=console.warn;console.warn=()=>{};const o=this.getBattleSpriteKey(this.isPlayer(),e),l=T.anims.generateFrameNames(o,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=C,T.anims.exists(o)||T.anims.create({key:o,frames:l,frameRate:10,repeat:-1})}this.playAnim(),this.updateFusionPalette(),this.summonData.speciesForm&&this.updateFusionPalette(!0)}async fallbackVariantColor(e,I,L,N,...S){console.warn(`Could not load ${I}!`,...S),L&&await this.populateVariantColorCache(e,!1,N)}async populateVariantColorCache(e,I,L){const N=`./images/pokemon/variant/${I?"exp/":""}${L}.json`;return T.cachedFetch(N).then(S=>S.ok?S.json():this.fallbackVariantColor(e,S.url,I,L,S.status,S.statusText)).catch(S=>this.fallbackVariantColor(e,N,I,L,S)).then(S=>{SA(S)||(dt[e]=S)})}getFormKey(){return!this.species.forms.length||this.species.forms.length<=this.formIndex?"":this.species.forms[this.formIndex].formKey}getFusionFormKey(){return this.fusionSpecies?!this.fusionSpecies.forms.length||this.fusionSpecies.forms.length<=this.fusionFormIndex?"":this.fusionSpecies.forms[this.fusionFormIndex].formKey:null}getSpriteAtlasPath(e){const I=this.getSpriteId(e).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(I)?"variant/":""}${I}`}getBattleSpriteAtlasPath(e,I){const L=this.getBattleSpriteId(e,I).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(L)?"variant/":""}${L}`}getSpriteId(e){var L;const I=((L=this.summonData.illusion)==null?void 0:L.formIndex)??this.formIndex;return this.getSpeciesForm(e,!0).getSpriteId(this.getGender(e,!0)===mA.FEMALE,I,this.shiny,this.variant)}getBattleSpriteId(e,I){var N;e===void 0&&(e=this.isPlayer());const L=((N=this.summonData.illusion)==null?void 0:N.formIndex)??this.formIndex;return this.getSpeciesForm(I,!0).getSpriteId(this.getGender(I,!0)===mA.FEMALE,L,this.shiny,this.variant,e)}getSpriteKey(e){var I,L;return this.getSpeciesForm(e,!1).getSpriteKey(this.getGender(e)===mA.FEMALE,this.formIndex,((I=this.summonData.illusion)==null?void 0:I.basePokemon.shiny)??this.shiny,((L=this.summonData.illusion)==null?void 0:L.basePokemon.variant)??this.variant)}getBattleSpriteKey(e,I){return`pkmn__${this.getBattleSpriteId(e,I)}`}getFusionSpriteId(e){var L;const I=((L=this.summonData.illusion)==null?void 0:L.fusionFormIndex)??this.fusionFormIndex;return this.getFusionSpeciesForm(e,!0).getSpriteId(this.getFusionGender(e,!0)===mA.FEMALE,I,this.fusionShiny,this.fusionVariant)}getFusionBattleSpriteId(e,I){var N;e===void 0&&(e=this.isPlayer());const L=((N=this.summonData.illusion)==null?void 0:N.fusionFormIndex)??this.fusionFormIndex;return this.getFusionSpeciesForm(I,!0).getSpriteId(this.getFusionGender(I,!0)===mA.FEMALE,L,this.fusionShiny,this.fusionVariant,e)}getFusionBattleSpriteKey(e,I){return`pkmn__${this.getFusionBattleSpriteId(e,I)}`}getFusionBattleSpriteAtlasPath(e,I){return this.getFusionBattleSpriteId(e,I).replace(/\_{2}/g,"/")}getIconAtlasKey(e=!1,I=!0){var S;const L=I&&((S=this.summonData.illusion)!=null&&S.formIndex)?this.summonData.illusion.formIndex:this.formIndex,N=!I&&this.summonData.illusion?this.summonData.illusion.basePokemon.variant:this.variant;return this.getSpeciesForm(e,I).getIconAtlasKey(L,this.isBaseShiny(I),N)}getFusionIconAtlasKey(e=!1,I=!0){var S;const L=I&&((S=this.summonData.illusion)!=null&&S.fusionFormIndex)?this.summonData.illusion.fusionFormIndex:this.fusionFormIndex,N=!I&&this.summonData.illusion?this.summonData.illusion.basePokemon.fusionVariant:this.fusionVariant;return this.getFusionSpeciesForm(e,I).getIconAtlasKey(L,this.isFusionShiny(),N)}getIconId(e,I=!0){var S,n,i;const L=I&&((S=this.summonData.illusion)!=null&&S.formIndex)?(n=this.summonData.illusion)==null?void 0:n.formIndex:this.formIndex,N=!I&&this.summonData.illusion?(i=this.summonData.illusion)==null?void 0:i.basePokemon.variant:this.variant;return this.getSpeciesForm(e,I).getIconId(this.getGender(e,I)===mA.FEMALE,L,this.isBaseShiny(),N)}getFusionIconId(e,I=!0){var S,n,i;const L=I&&((S=this.summonData.illusion)!=null&&S.fusionFormIndex)?(n=this.summonData.illusion)==null?void 0:n.fusionFormIndex:this.fusionFormIndex,N=!I&&this.summonData.illusion?(i=this.summonData.illusion)==null?void 0:i.basePokemon.fusionVariant:this.fusionVariant;return this.getFusionSpeciesForm(e,I).getIconId(this.getFusionGender(e,I)===mA.FEMALE,L,this.isFusionShiny(),N)}getSpeciesForm(e=!1,I=!1){if(!e&&this.summonData.speciesForm)return this.summonData.speciesForm;const L=I&&this.summonData.illusion?YA(this.summonData.illusion.species):this.species,N=I&&this.summonData.illusion?this.summonData.illusion.formIndex:this.formIndex;return L.forms&&L.forms.length>0?L.forms[N]:L}getFusionSpeciesForm(e,I=!1){var S;const L=I&&this.summonData.illusion?this.summonData.illusion.fusionSpecies:this.fusionSpecies,N=I&&this.summonData.illusion?this.summonData.illusion.fusionFormIndex:this.fusionFormIndex;return!e&&this.summonData.fusionSpeciesForm?this.summonData.fusionSpeciesForm:!((S=L==null?void 0:L.forms)!=null&&S.length)||N>=(L==null?void 0:L.forms.length)?L:L==null?void 0:L.forms[N]}getSprite(){return this.getAt(0)}getTintSprite(){return this.maskEnabled?this.maskSprite:this.getAt(1)}getSpriteScale(){const e=this.getFormKey();return this.isMax()===!0||e==="segin-starmobile"||e==="schedar-starmobile"||e==="navi-starmobile"||e==="ruchbah-starmobile"||e==="caph-starmobile"?1.5:this.customPokemonData.spriteScale<=0?1:this.customPokemonData.spriteScale}resetSprite(){this.setVisible(!1),this.isOffsetBySubstitute()&&(this.x-=this.getSubstituteOffset()[0],this.y-=this.getSubstituteOffset()[1]),this.setAlpha(1),this.setScale(this.getSpriteScale())}getHeldItems(){return T?T.findModifiers(e=>e instanceof GE&&e.pokemonId===this.id,this.isPlayer()):[]}updateScale(){this.setScale(this.getSpriteScale())}updateSpritePipelineData(){[this.getSprite(),this.getTintSprite()].filter(e=>!!e).map(e=>{e.pipelineData.teraColor=Zt(this.getTeraType()),e.pipelineData.isTerastallized=this.isTerastallized}),this.updateInfo(!0)}initShinySparkle(){const e=T.addFieldSprite(0,0,"shiny");e.setVisible(!1),e.setOrigin(.5,1),this.add(e),this.shinySparkle=e}tryPlaySprite(e,I,L){try{e.play(L),I.play(L)}catch(N){return console.error(`Couldn't play animation for '${L}'!
Is the image for this Pokemon missing?
`,N),!1}return!0}playAnim(){this.tryPlaySprite(this.getSprite(),this.getTintSprite(),this.getBattleSpriteKey())}getFieldPositionOffset(){switch(this.fieldPosition){case vO.CENTER:return[0,0];case vO.LEFT:return[-32,-8];case vO.RIGHT:return[32,0]}}getSubstituteOffset(){return this.isPlayer()?[-30,10]:[30,-10]}isOffsetBySubstitute(){const e=this.getTag(LI);if(!e||e.sprite===void 0)return!1;const I=T.phaseManager.getCurrentPhase();return!(I!=null&&I.is("MoveEffectPhase")&&I.getPokemon()===this)}destroySubstitute(){const e=this.getTag(LI);e!=null&&e.sprite&&e.sprite.destroy()}setFieldPosition(e,I){return new Promise(L=>{if(e===this.fieldPosition){L();return}const N=this.getFieldPositionOffset();this.fieldPosition=e,this.battleInfo.setMini(e!==vO.CENTER),this.battleInfo.setOffset(e===vO.RIGHT);const S=this.getFieldPositionOffset(),n=S[0]-N[0],i=S[1]-N[1],C=this.getTag(LI);if(I){const o=[this];C!=null&&C.sprite&&o.push(C.sprite),T.tweens.add({targets:o,x:r((l,H,P)=>P+n,"x"),y:r((l,H,P)=>P+i,"y"),duration:I,ease:"Sine.easeOut",onComplete:r(()=>L(),"onComplete")})}else this.x+=n,this.y+=i,C!=null&&C.sprite&&(C.sprite.x+=n,C.sprite.y+=i)})}getStats(e=!0){return!e&&this.summonData.stats?this.summonData.stats:this.stats}getStat(e,I=!0){return!I&&this.summonData.stats[e]!==0?this.summonData.stats[e]:this.stats[e]}setStat(e,I,L=!0){I<0||(L?this.stats[e]=I:this.summonData.stats[e]=I)}getStatStages(){return this.summonData?this.summonData.statStages:[0,0,0,0,0,0,0]}getStatStage(e){return this.summonData?this.summonData.statStages[e-1]:0}setStatStage(e,I){I>=-6?this.summonData.statStages[e-1]=Math.min(I,6):this.summonData.statStages[e-1]=Math.max(I,-6)}getCritStage(e,I){const L=new VA(0);Ce("HighCritAttr",e,this,I,L),T.applyModifiers(xL,e.isPlayer(),e,L),T.applyModifiers(PS,e.isPlayer(),L),SE("BonusCritAbAttr",e,null,!1,L);const N=e.getTag(La);return N&&(N instanceof BC?L.value+=N.typesOnAdd.includes(t.DRAGON)?2:1:L.value+=2),`${L.value}`,L.value}getMoveCategory(e,I){const L=new VA(I.category);return Ce("VariableMoveCategoryAttr",this,e,I,L),L.value}getEffectiveStat(e,I,L,N=!1,S=!1,n=!1,i=!1,C=!0,o=!1){var h,F;const l=new VA(this.getStat(e,!1));o||T.applyModifiers(vL,this.isPlayer(),this,e,l);const H=new nE(!1);for(const w of T.getField(!0))if(aV("FieldMultiplyStatAbAttr",w,e,l,this,H,C),H.value)break;N||n_("StatMultiplierAbAttr",this,e,l,C);const P=this.getAlly();SA(P)||r_("AllyStatMultiplierAbAttr",P,e,l,C,this,(L==null?void 0:L.hasFlag(JA.IGNORE_ABILITIES))||n);let K=l.value*this.getStatStageMultiplier(e,I,L,S,i,C,o);switch(e){case c.ATK:this.getTag(d.SLOW_START)&&(K>>=1);break;case c.DEF:this.isOfType(t.ICE)&&((h=T.arena.weather)==null?void 0:h.weatherType)===Z.SNOW&&(K*=1.5);break;case c.SPATK:break;case c.SPDEF:this.isOfType(t.ROCK)&&((F=T.arena.weather)==null?void 0:F.weatherType)===Z.SANDSTORM&&(K*=1.5);break;case c.SPD:{const w=this.isPlayer()?hA.PLAYER:hA.ENEMY;T.arena.getTagOnSide(CA.TAILWIND,w)&&(K*=2),T.arena.getTagOnSide(CA.GRASS_WATER_PLEDGE,w)&&(K>>=2),this.getTag(d.SLOW_START)&&(K>>=1),this.status&&this.status.effect===J.PARALYSIS&&(K>>=1),this.getTag(d.UNBURDEN)&&this.hasAbility(O.UNBURDEN)&&(K*=2);break}}const f=this.findTag(w=>w instanceof Ia&&w.stat===e);return f&&(K*=f.multiplier),Math.floor(K)}calculateStats(){this.stats||(this.stats=[0,0,0,0,0,0]);const e=this.calculateBaseStats();for(const I of BT){const L=new VA(Math.floor((2*e[I]+this.ivs[I])*this.level*.01));if(I===c.HP){if(L.value=L.value+this.level+10,T.applyModifier(wL,this.isPlayer(),this,I,L),this.hasAbility(O.WONDER_GUARD,!1,!0)&&(L.value=1),this.hp>L.value||this.hp===void 0)this.hp=L.value;else if(this.hp){const N=this.getMaxHp();N&&L.value>N&&(this.hp+=L.value-N)}}else{L.value+=5;const N=new VA(I_(this.getNature(),I));T.applyModifier(gS,this.isPlayer(),this,N),N.value!==1&&(L.value=Math.max(Math[N.value>1?"ceil":"floor"](L.value*N.value),1)),T.applyModifier(wL,this.isPlayer(),this,I,L)}L.value=wR.Math.Clamp(L.value,1,Number.MAX_SAFE_INTEGER),this.setStat(I,L.value)}}calculateBaseStats(){const e=this.getSpeciesForm(!0).baseStats.slice(0);if(fI(Ke.FLIP_STAT,this,e),T.applyModifiers(BS,this.isPlayer(),this,e),T.applyModifiers(KS,this.isPlayer(),this,e),this.isFusion()){const I=this.getFusionSpeciesForm(!0).baseStats;fI(Ke.FLIP_STAT,this,I);for(const L of BT)e[L]=Math.ceil((e[L]+I[L])/2)}else if(T.gameMode.isSplicedOnly)for(const I of BT)e[I]=Math.ceil(e[I]/2);return T.applyModifiers(uS,this.isPlayer(),this,e),e}getNature(){return this.customPokemonData.nature!==-1?this.customPokemonData.nature:this.nature}setNature(e){this.nature=e,this.calculateStats()}setCustomNature(e){this.customPokemonData.nature=e,this.calculateStats()}generateNature(e){e===void 0&&(e=nR(ZA));const I=e[DA(e.length)];this.setNature(I)}isFullHp(){return this.hp>=this.getMaxHp()}getMaxHp(){return this.getStat(c.HP)}getInverseHp(){return this.getMaxHp()-this.hp}getHpRatio(e=!1){return e?this.hp/this.getMaxHp():Math.round(this.hp/this.getMaxHp()*100)/100}generateGender(){this.species.malePercent===null?this.gender=mA.GENDERLESS:this.id%256*.390625<this.species.malePercent?this.gender=mA.MALE:this.gender=mA.FEMALE}getGender(e,I=!1){return I&&this.summonData.illusion?this.summonData.illusion.gender:!e&&!SA(this.summonData.gender)?this.summonData.gender:this.gender}getFusionGender(e,I=!1){var L;return I&&((L=this.summonData.illusion)!=null&&L.fusionGender)?this.summonData.illusion.fusionGender:!e&&!SA(this.summonData.fusionGender)?this.summonData.fusionGender:this.fusionGender}isShiny(e=!1){var I,L;return!e&&this.summonData.illusion?!!((I=this.summonData.illusion.basePokemon)!=null&&I.shiny||this.summonData.illusion.fusionSpecies&&((L=this.summonData.illusion.basePokemon)!=null&&L.fusionShiny)):this.shiny||this.isFusion(e)&&this.fusionShiny}isBaseShiny(e=!1){var I;return!e&&this.summonData.illusion?!!((I=this.summonData.illusion.basePokemon)!=null&&I.shiny):this.shiny}isFusionShiny(e=!1){var I;return!e&&this.summonData.illusion?!!((I=this.summonData.illusion.basePokemon)!=null&&I.fusionShiny):this.isFusion(e)&&this.fusionShiny}isDoubleShiny(e=!1){var I;return!e&&((I=this.summonData.illusion)!=null&&I.basePokemon)?this.isFusion(!1)&&this.summonData.illusion.basePokemon.shiny&&this.summonData.illusion.basePokemon.fusionShiny:this.isFusion(e)&&this.shiny&&this.fusionShiny}getVariant(e=!1){return!e&&this.summonData.illusion?this.isFusion(!1)?Math.max(this.variant,this.fusionVariant):this.summonData.illusion.basePokemon.variant:this.isFusion(!0)?Math.max(this.variant,this.fusionVariant):this.variant}getBaseVariant(e){var I,L;return e?((L=(I=this.summonData.illusion)==null?void 0:I.basePokemon)==null?void 0:L.variant)??this.variant:this.getVariant()}getLuck(){return this.luck+(this.isFusion()?this.fusionLuck:0)}isFusion(e=!1){return e&&this.summonData.illusion?!!this.summonData.illusion.fusionSpecies:!!this.fusionSpecies}getName(e=!1){var I;return!e&&((I=this.summonData.illusion)!=null&&I.basePokemon)?this.summonData.illusion.basePokemon.name:this.name}hasFusionSpecies(e){var I;return((I=this.fusionSpecies)==null?void 0:I.speciesId)===e}hasSpecies(e,I){var L,N;return SA(I)?this.species.speciesId===e||((L=this.fusionSpecies)==null?void 0:L.speciesId)===e:this.species.speciesId===e&&this.getFormKey()===I||((N=this.fusionSpecies)==null?void 0:N.speciesId)===e&&this.getFusionFormKey()===I}getMoveset(e){const I=!e&&this.summonData.moveset?this.summonData.moveset:this.moveset;let L=this.isPlayer()?aE.MOVESET_OVERRIDE:aE.OPP_MOVESET_OVERRIDE;return L=ue(L),L.length>0&&(this.isPlayer()||(this.moveset=[]),L.forEach((N,S)=>{var i;const n=((i=this.moveset[S])==null?void 0:i.ppUsed)??0;this.moveset[S]=new pA(N,Math.min(n,FA[N].pp))})),I}getUnlockedEggMoves(){const e=[],I=this.metSpecies in lI?this.metSpecies:this.getSpeciesForm(!0).getRootSpeciesId(!0);if(I in lI)for(let L=0;L<4;L++)T.gameData.starterData[I].eggMoves&1<<L&&e.push(lI[I][L]);return e}getLearnableLevelMoves(){let e=this.getLevelMoves(1,!0,!1,!0).map(I=>I[1]);return this.metBiome===-1&&!T.gameMode.isFreshStartChallenge()&&!T.gameMode.isDaily&&(e=this.getUnlockedEggMoves().concat(e)),Array.isArray(this.usedTMs)&&this.usedTMs.length>0&&(e=this.usedTMs.filter(I=>!e.includes(I)).concat(e)),e=e.filter(I=>!this.moveset.some(L=>L.moveId===I)),e}getTypes(e=!1,I=!1,L=!1,N=!1){var n,i,C;const S=[];if(e&&this.isTerastallized){const o=this.getTeraType();if(this.isTerastallized&&!(I&&o===t.STELLAR)&&(S.push(o),I))return S}if(!S.length||!e)if(!L&&this.summonData.types&&this.summonData.types.length>0&&(!this.summonData.illusion||!N))this.summonData.types.forEach(o=>S.push(o));else{const o=this.getSpeciesForm(L,N),l=this.getFusionSpeciesForm(L,N),H=((n=this.customPokemonData.types)==null?void 0:n.length)>0,P=H&&this.customPokemonData.types[0]!==t.UNKNOWN?this.customPokemonData.types[0]:o.type1;S.push(P);let K=t.UNKNOWN;if(l){const f=(i=this.fusionCustomPokemonData)!=null&&i.types&&this.fusionCustomPokemonData.types.length>0&&this.fusionCustomPokemonData.types[0]!==t.UNKNOWN?this.fusionCustomPokemonData.types[0]:l.type1,h=(C=this.fusionCustomPokemonData)!=null&&C.types&&this.fusionCustomPokemonData.types.length>1&&this.fusionCustomPokemonData.types[1]!==t.UNKNOWN?this.fusionCustomPokemonData.types[1]:l.type2;h!==null&&h!==S[0]?K=h:f!==S[0]&&(K=f),K===t.UNKNOWN&&SA(h)&&(K=H&&this.customPokemonData.types.length>1&&this.customPokemonData.types[1]!==t.UNKNOWN?this.customPokemonData.types[1]:o.type2??t.UNKNOWN)}else K=H&&this.customPokemonData.types.length>1&&this.customPokemonData.types[1]!==t.UNKNOWN?this.customPokemonData.types[1]:o.type2??t.UNKNOWN;K!==t.UNKNOWN&&S.push(K)}if(S.length||S.push(t.UNKNOWN),S.length>1&&S.includes(t.UNKNOWN)){const o=S.indexOf(t.UNKNOWN);o!==-1&&S.splice(o,1)}return!L&&this.summonData.addedType&&!S.includes(this.summonData.addedType)&&S.push(this.summonData.addedType),S.length>1&&S[0]===S[1]&&S.splice(0,1),S}isOfType(e,I=!0,L=!1,N=!1){return this.getTypes(I,L,N).some(S=>S===e)}getAbility(e=!1){var L;if(!e&&this.summonData.ability)return fe[this.summonData.ability];if(aE.ABILITY_OVERRIDE&&this.isPlayer())return fe[aE.ABILITY_OVERRIDE];if(aE.OPP_ABILITY_OVERRIDE&&this.isEnemy())return fe[aE.OPP_ABILITY_OVERRIDE];if(this.isFusion())return!SA((L=this.fusionCustomPokemonData)==null?void 0:L.ability)&&this.fusionCustomPokemonData.ability!==-1?fe[this.fusionCustomPokemonData.ability]:fe[this.getFusionSpeciesForm(e).getAbility(this.fusionAbilityIndex)];if(!SA(this.customPokemonData.ability)&&this.customPokemonData.ability!==-1)return fe[this.customPokemonData.ability];let I=this.getSpeciesForm(e).getAbility(this.abilityIndex);return I===O.NONE&&(I=this.species.ability1),fe[I]}getPassiveAbility(){return aE.PASSIVE_ABILITY_OVERRIDE&&this.isPlayer()?fe[aE.PASSIVE_ABILITY_OVERRIDE]:aE.OPP_PASSIVE_ABILITY_OVERRIDE&&this.isEnemy()?fe[aE.OPP_PASSIVE_ABILITY_OVERRIDE]:!SA(this.customPokemonData.passive)&&this.customPokemonData.passive!==-1?fe[this.customPokemonData.passive]:fe[this.species.getPassiveAbility(this.formIndex)]}getAbilityAttrs(e,I=!0,L=!1){const N=[];return(!I||this.canApplyAbility())&&N.push(...this.getAbility(L).getAttrs(e)),(!I||this.canApplyAbility(!0))&&N.push(...this.getPassiveAbility().getAttrs(e)),N}setTempAbility(e,I=!1){NG(this,I),I?this.summonData.passiveAbility=e.id:this.summonData.ability=e.id,LG(this,I)}suppressAbility(){[!0,!1].forEach(e=>NG(this,e)),this.summonData.abilitySuppressed=!0}hasPassive(){if(aE.HAS_PASSIVE_ABILITY_OVERRIDE===!1&&this.isPlayer()||aE.OPP_HAS_PASSIVE_ABILITY_OVERRIDE===!1&&this.isEnemy())return!1;if((aE.PASSIVE_ABILITY_OVERRIDE!==O.NONE||aE.HAS_PASSIVE_ABILITY_OVERRIDE)&&this.isPlayer()||(aE.OPP_PASSIVE_ABILITY_OVERRIDE!==O.NONE||aE.OPP_HAS_PASSIVE_ABILITY_OVERRIDE)&&this.isEnemy())return!0;const{currentBattle:e,gameMode:I}=T,L=e==null?void 0:e.waveIndex;return this.isEnemy()&&((e==null?void 0:e.battleSpec)===xO.FINAL_BOSS||I.isEndlessMinorBoss(L)||I.isEndlessMajorBoss(L))?!1:this.passive||this.isBoss()}canApplyAbility(e=!1){var n;if(e&&!this.hasPassive())return!1;const I=e?this.getPassiveAbility():this.getAbility();if(this.isFusion()&&I.hasAttr("NoFusionAbilityAbAttr"))return!1;const L=(n=T)==null?void 0:n.arena;if(L.ignoreAbilities&&L.ignoringEffectSource!==this.getBattlerIndex()&&I.isIgnorable||this.summonData.abilitySuppressed&&I.isSuppressable)return!1;const N=L.getTag(CA.NEUTRALIZING_GAS),S=I.hasAttr("PreSummonAbAttr");if((this.isOnField()||S)&&N&&!N.isBeingRemoved()){const i=I.hasAttr("PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr"),C=this.hasAbilityWithAttr("PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr",!1);if(!(!I.isSuppressable||i||C&&!N.shouldApplyToSelf()))return!1}return(this.hp>0||I.isBypassFaint)&&!I.conditions.find(i=>!i(this))}hasAbility(e,I=!0,L=!1){return this.getAbility(L).id===e&&(!I||this.canApplyAbility())?!0:this.getPassiveAbility().id===e&&this.hasPassive()&&(!I||this.canApplyAbility(!0))}hasAbilityWithAttr(e,I=!0,L=!1){return(!I||this.canApplyAbility())&&this.getAbility(L).hasAttr(e)?!0:this.hasPassive()&&(!I||this.canApplyAbility(!0))&&this.getPassiveAbility().hasAttr(e)}getAbilityPriorities(){return[this.getAbility().postSummonPriority,this.getPassiveAbility().postSummonPriority]}getWeight(){const e=this.getTag(WC);let I=0;SA(e)||(I=100*e.autotomizeCount);const L=.1,N=new VA(this.species.weight-I);return SE("WeightMultiplierAbAttr",this,null,!1,N),Math.max(L,N.value)}getTeraType(){if(this.hasSpecies(A.TERAPAGOS))return t.STELLAR;if(this.hasSpecies(A.OGERPON))switch(this.species.speciesId===A.OGERPON?this.formIndex:this.fusionFormIndex){case 0:case 4:return t.GRASS;case 1:case 5:return t.WATER;case 2:case 6:return t.FIRE;case 3:case 7:return t.ROCK}return this.hasSpecies(A.SHEDINJA)?t.BUG:this.teraType}isGrounded(){return!!this.getTag(Sa)||!this.isOfType(t.FLYING,!0,!0)&&!this.hasAbility(O.LEVITATE)&&!this.getTag(d.FLOATING)&&!this.getTag(CS)}isTrapped(e=[],I=!0){var C;const L=this.getTag(d.COMMANDED);if((C=L==null?void 0:L.getSourcePokemon())!=null&&C.isActive(!0))return!0;if(this.isOfType(t.GHOST))return!1;const N=new nE(!1),n=(this.isPlayer()?T.getEnemyField():T.getPlayerField()).filter(o=>o.switchOutStatus===!1);for(const o of n)oV("CheckTrappedAbAttr",o,N,this,e,I);const i=this.isPlayer()?hA.PLAYER:hA.ENEMY;return N.value||!!this.getTag(WO)||!!T.arena.getTagOnSide(CA.FAIRY_LOCK,i)}getMoveType(e,I=!0){const L=new VA(e.type);return Ce("VariableMoveTypeAttr",this,null,e,L),hI("MoveTypeChangeAbAttr",this,null,e,I,L),this.isTerastallized&&(e.id===E.TERA_BLAST||e.id===E.TERA_STARSTORM&&L.value===t.STELLAR)||(T.arena.applyTags(CA.ION_DELUGE,I,L),this.getTag(d.ELECTRIFIED)&&(L.value=t.ELECTRIC)),L.value}getMoveEffectiveness(e,I,L=!1,N=!0,S,n=!1){var H,P;if(!SA((H=this.turnData)==null?void 0:H.moveEffectiveness))return(P=this.turnData)==null?void 0:P.moveEffectiveness;if(I.hasAttr("TypelessAttr"))return 1;const i=e.getMoveType(I),C=new VA(I.category!==G.STATUS||I.hasAttr("RespectAttackTypeImmunityAttr")?this.getAttackTypeEffectiveness(i,e,!1,N,I,n):1);Ce("VariableMoveTypeMultiplierAttr",e,this,I,C),this.getTypes(!0,!0).find(K=>I.isTypeImmune(e,this,K))&&(C.value=0),this.getTag(YC)&&this.getMoveType(I)===t.FIRE&&(C.value*=2);const o=S??new nE(!1);L||(ZI("TypeImmunityAbAttr",this,e,I,o,N,C),o.value||ZI("MoveImmunityAbAttr",this,e,I,o,N,C),o.value||(this.isPlayer()?T.getPlayerField():T.getEnemyField()).forEach(f=>ZI("FieldPriorityMoveImmunityAbAttr",f,e,I,o)));const l=this.findTags(K=>K instanceof cC&&K.immuneType===i);for(const K of l)if(I&&!I.getAttrs("HitsTagAttr").some(f=>f.tagType===K.tagType)){C.value=0;break}return!L&&I.category!==G.STATUS&&ZI("FullHpResistTypeAbAttr",this,e,I,o,N,C),I.category===G.STATUS&&I.hitsSubstitute(e,this)&&(C.value=0),o.value?0:C.value}getAttackTypeEffectiveness(e,I,L=!1,N=!0,S,n=!1){var H;if(e===t.STELLAR)return this.isTerastallized?2:1;const i=this.getTypes(!0,!0,void 0,n),C=T.arena;if(e===t.GROUND&&(this.isGrounded()||C.hasTag(CA.GRAVITY))){const P=i.indexOf(t.FLYING);P>-1&&i.splice(P,1)}let o=i.map(P=>{const K=new VA(JP(e,P));if(fI(Ke.TYPE_EFFECTIVENESS,K),S&&Ce("VariableMoveTypeChartAttr",null,this,S,K,P),I){const f=new nE(!1);if(I.isActive(!0)&&I.hasAbilityWithAttr("IgnoreTypeImmunityAbAttr")&&SE("IgnoreTypeImmunityAbAttr",I,f,N,e,P),f.value&&K.value===0||this.findTags(F=>F instanceof US).some(F=>F.ignoreImmunity(P,e))&&K.value===0)return 1}return K.value}).reduce((P,K)=>P*K,1);const l=new VA(JP(e,t.FLYING));return fI(Ke.TYPE_EFFECTIVENESS,l),!L&&((H=C.weather)==null?void 0:H.weatherType)===Z.STRONG_WINDS&&!C.weather.isEffectSuppressed()&&this.isOfType(t.FLYING)&&l.value===2&&(o/=2,N||T.phaseManager.queueMessage(_.t("weather:strongWindsEffectMessage"))),o}getMatchupScore(e){const I=this.getTypes(!0),L=e.getTypes(!0,!0,!1,!0),N=(this.isActive(!0)?this.getEffectiveStat(c.SPD,e):this.getStat(c.SPD,!1))>=e.getEffectiveStat(c.SPD,this);let S=e.getAttackTypeEffectiveness(I[0],this,!1,!0,void 0,!0)*(N?1.25:1),n=1/Math.max(this.getAttackTypeEffectiveness(L[0],e),.25);I.length>1&&(S*=e.getAttackTypeEffectiveness(I[1],this)),L.length>1&&(n*=1/Math.max(this.getAttackTypeEffectiveness(L[1],e,!1,!1,void 0,!0),.25));let i=this.getHpRatio()+(1-e.getHpRatio());return N&&(i=Math.min(i*1.5,1)),(S+n)*i}getEvolution(){if(lE.hasOwnProperty(this.species.speciesId)){const e=lE[this.species.speciesId];for(const I of e)if(!I.item&&this.level>=I.level&&(SA(I.preFormKey)||this.getFormKey()===I.preFormKey)&&(I.condition===null||I.condition.predicate(this)))return I}if(this.isFusion()&&this.fusionSpecies&&lE.hasOwnProperty(this.fusionSpecies.speciesId)){const e=lE[this.fusionSpecies.speciesId].map(I=>new ft(this.species.speciesId,I));for(const I of e)if(!I.item&&this.level>=I.level&&(SA(I.preFormKey)||this.getFusionFormKey()===I.preFormKey)&&(I.condition===null||I.condition.predicate(this)))return I}return null}getLevelMoves(e,I=!1,L=!1,N=!1,S=EC.MISC){const n=[];let i=[];if(e||(e=this.level),S===EC.EVOLUTION_FUSED&&this.fusionSpecies)i=this.getFusionSpeciesForm(!0).getLevelMoves().filter(C=>I&&C[0]===b||N&&C[0]===V||C[0]>0);else{if(L){const C=this.species.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let o=0;o<C.length;o++){const l=sC(C[o][0],this.formIndex).getLevelMoves();N?i.push(...l):i.push(...l.filter(H=>I&&H[0]===b||(!o||H[0]>1)&&(o===C.length-1||H[0]<=C[o+1][1])))}}else i=this.getSpeciesForm(!0).getLevelMoves().filter(C=>I&&C[0]===b||N&&C[0]===V||C[0]>0);if(this.fusionSpecies&&S!==EC.EVOLUTION_FUSED_BASE)if(L){const C=this.fusionSpecies.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let o=0;o<C.length;o++){const l=sC(C[o][0],this.fusionFormIndex).getLevelMoves();N?i.push(...l.filter(H=>I&&H[0]===b||H[0]!==b)):i.push(...l.filter(H=>I&&H[0]===b||(!o||H[0]>1)&&(o===C.length-1||H[0]<=C[o+1][1])))}}else i.push(...this.getFusionSpeciesForm(!0).getLevelMoves().filter(C=>I&&C[0]===b||N&&C[0]===V||C[0]>0))}return i.sort((C,o)=>C[0]>o[0]?1:C[0]<o[0]?-1:0),i=i.filter(C=>{const o=C[0],l=o<e,H=o===0&&I;return!(o>this.level)&&(N||!l||H)}),i&&this.getUniqueMoves(i,n),n}getUniqueMoves(e,I){const L=[];for(const N of e)L.find(S=>S===N[1])||(L.push(N[1]),I.push(N))}getEggMoves(){return lI[this.getSpeciesForm().getRootSpeciesId()]}setMove(e,I){if(I===E.NONE)return;const L=new pA(I);this.moveset[e]=L,this.summonData.moveset&&(this.summonData.moveset[e]=L)}trySetShiny(e){if(T.gameMode.isEndless&&T.arena.biomeType===s.END)return!1;const I=(this.id&4294901760)>>>16,L=this.id&65535,N=T.gameData.trainerId^T.gameData.secretId,S=I^L,n=new VA(t4);if(e===void 0){if(pe.isEventActive()){const i=pe.getClassicTrainerShinyChance();n.value*=pe.getShinyMultiplier(),this.hasTrainer()&&i>0&&(n.value=Math.max(i,n.value))}this.hasTrainer()||T.applyModifiers(vt,!0,n)}else n.value=e;return this.shiny=(N^S)<n.value,this.shiny&&this.initShinySparkle(),this.shiny}trySetShinySeed(e,I){if(!this.shiny){const L=new VA(t4);e===void 0||I?(e!==void 0&&I&&(L.value=e),pe.isEventActive()&&(L.value*=pe.getShinyMultiplier()),T.applyModifiers(vt,!0,L)):L.value=e,this.shiny=DA(65536)<L.value}return this.shiny&&(this.variant=this.variant??0,this.variant=Math.max(this.generateShinyVariant(),this.variant),this.luck=this.variant+1+(this.fusionShiny?this.fusionVariant+1:0),this.initShinySparkle()),this.shiny}generateShinyVariant(){var N;const e=this.formIndex;let I=this.species.speciesId;if(this.species.forms.length>0){const S=(N=this.species.forms[e])==null?void 0:N.formKey;S&&(I=`${I}-${S}`)}if(!this.shiny||!oO.hasOwnProperty(I)&&!oO.hasOwnProperty(this.species.speciesId))return 0;const L=new VA(0);return T.executeWithSeedOffset(()=>{L.value=DA(10)},this.id,T.waveSeed),L.value>=g3?0:L.value>=m3?1:2}tryRerollHiddenAbilitySeed(e,I){if(!this.species.abilityHidden)return!1;const L=new VA(G_);return e===void 0||I?(e!==void 0&&I&&(L.value=e),this.hasTrainer()||T.applyModifiers(aI,!0,L)):L.value=e,DA(65536)<L.value&&(this.abilityIndex=2),this.abilityIndex===2}generateFusionSpecies(e){var i;const I=new VA(G_);this.hasTrainer()||T.applyModifiers(aI,!0,I);const L=!DA(I.value),N=DA(2),S=e?C=>lE.hasOwnProperty(C.speciesId)&&!Fe.hasOwnProperty(C.speciesId)&&!C.subLegendary&&!C.legendary&&!C.mythical&&!C.isTrainerForbidden()&&C.speciesId!==this.species.speciesId&&C.speciesId!==A.DITTO:this.species.getCompatibleFusionSpeciesFilter();let n;e&&this.isPlayer()&&aE.STARTER_FUSION_SPECIES_OVERRIDE?n=YA(aE.STARTER_FUSION_SPECIES_OVERRIDE):this.isEnemy()&&aE.OPP_FUSION_SPECIES_OVERRIDE&&(n=YA(aE.OPP_FUSION_SPECIES_OVERRIDE)),this.fusionSpecies=n??T.randomSpecies(((i=T.currentBattle)==null?void 0:i.waveIndex)||0,this.level,!1,S,!0),this.fusionAbilityIndex=this.fusionSpecies.abilityHidden&&L?2:this.fusionSpecies.ability2!==this.fusionSpecies.ability1?N:0,this.fusionShiny=this.shiny,this.fusionVariant=this.variant,this.fusionSpecies.malePercent===null?this.fusionGender=mA.GENDERLESS:this.id%256*.390625<this.fusionSpecies.malePercent?this.fusionGender=mA.MALE:this.fusionGender=mA.FEMALE,this.fusionFormIndex=T.getSpeciesFormIndex(this.fusionSpecies,this.fusionGender,this.getNature(),!0),this.fusionLuck=this.luck,this.generateName()}clearFusionSpecies(){this.fusionSpecies=null,this.fusionFormIndex=0,this.fusionAbilityIndex=0,this.fusionShiny=!1,this.fusionVariant=0,this.fusionGender=0,this.fusionLuck=0,this.fusionCustomPokemonData=null,this.generateName(),this.calculateStats()}generateAndPopulateMoveset(){var H,P;this.moveset=[];let e=[];const I=this.getLevelMoves(1,!0,!0);if(!I){console.warn("Error encountered trying to generate moveset for:",this.species.name);return}for(let K=0;K<I.length;K++){const f=I[K];if(this.level<f[0])break;let h=f[0];h===b&&(h=50),(h===1&&FA[f[1]].power>=80||h===V&&this.hasTrainer())&&(h=40),!e.some(F=>F[0]===f[1])&&!FA[f[1]].name.endsWith(" (N)")&&e.push([f[1],h])}if(this.hasTrainer()){const K=Object.keys(mI);for(const f of K){const h=Number.parseInt(f);let F=!1;for(const w of mI[f])if(Array.isArray(w)){if(w[0]===this.species.speciesId||this.fusionSpecies&&w[0]===this.fusionSpecies.speciesId&&w.slice(1).indexOf(this.species.forms[this.formIndex])>-1){F=!0;break}}else if(w===this.species.speciesId||this.fusionSpecies&&w===this.fusionSpecies.speciesId){F=!0;break}F&&!e.some(w=>w[0]===h)&&!FA[h].name.endsWith(" (N)")&&($i[h]===p.COMMON&&this.level>=15?e.push([h,4]):$i[h]===p.GREAT&&this.level>=30?e.push([h,8]):$i[h]===p.ULTRA&&this.level>=50&&e.push([h,14]))}if(this.level>=60){for(let h=0;h<3;h++){const F=lI[this.species.getRootSpeciesId()][h];!e.some(w=>w[0]===F)&&!FA[F].name.endsWith(" (N)")&&e.push([F,40])}const f=lI[this.species.getRootSpeciesId()][3];if(this.level>=170&&!e.some(h=>h[0]===f)&&!FA[f].name.endsWith(" (N)")&&!this.isBoss()&&e.push([f,30]),this.fusionSpecies){for(let F=0;F<3;F++){const w=lI[this.fusionSpecies.getRootSpeciesId()][F];!e.some(m=>m[0]===w)&&!FA[w].name.endsWith(" (N)")&&e.push([w,40])}const h=lI[this.fusionSpecies.getRootSpeciesId()][3];this.level>=170&&!e.some(F=>F[0]===h)&&!FA[h].name.endsWith(" (N)")&&!this.isBoss()&&e.push([h,30])}}}this.isBoss()&&(e=e.filter(K=>!FA[K[0]].hasAttr("SacrificialAttr")&&!FA[K[0]].hasAttr("HpSplitAttr"))),e=e.filter(K=>!FA[K[0]].hasAttr("SacrificialAttrOnHit")),this.hasTrainer()&&(e=e.filter(K=>!FA[K[0]].hasAttr("OneHitKOAttr")),e=e.map(K=>[K[0],K[1]*(FA[K[0]].hasAttr("SacrificialAttr")?.5:1)]),e=e.map(K=>[K[0],K[1]*(FA[K[0]].getAttrs("StatStageChangeAttr").some(f=>f.stages>1&&f.selfTarget)?1.25:1)]),e=e.map(K=>[K[0],K[1]*(FA[K[0]].isChargingMove()||FA[K[0]].hasAttr("RechargeAttr")?.7:1)]));const L=Math.min(e.reduce((K,f)=>Math.max(FA[f[0]].calculateEffectivePower(),K),40),90);e=e.map(K=>[K[0],K[1]*(FA[K[0]].category===G.STATUS?1:Math.max(Math.min(FA[K[0]].calculateEffectivePower()/L,1),.5))]);const N=this.getStat(c.ATK),S=this.getStat(c.SPATK),n=N>S?G.SPECIAL:G.PHYSICAL,i=n===G.PHYSICAL?N/S:S/N;e=e.map(K=>[K[0],K[1]*(FA[K[0]].category===n?Math.min(Math.pow(i,3)*1.3,1):1)]);let C=1.6;this.isBoss()&&(C+=.4);const o=e.map(K=>[K[0],Math.ceil(Math.pow(K[1],C)*100)]),l=o.filter(K=>FA[K[0]].category!==G.STATUS&&this.isOfType(FA[K[0]].type));if(l.length){const K=l.reduce((F,w)=>F+w[1],0);let f=DA(K),h=0;for(;f>l[h][1];)f-=l[h++][1];this.moveset.push(new pA(l[h][0],0,0))}for(;o.length>this.moveset.length&&this.moveset.length<4;){this.hasTrainer()?e=o.filter(F=>!this.moveset.some(w=>F[0]===w.moveId||FA[F[0]].hasAttr("SacrificialAttr")&&w.getMove().hasAttr("SacrificialAttr"))).map(F=>{let w;return this.moveset.some(m=>m.getMove().category!==G.STATUS&&m.getMove().type===FA[F[0]].type)?w=Math.ceil(Math.sqrt(F[1])):FA[F[0]].category!==G.STATUS?w=Math.ceil(F[1]/Math.max(Math.pow(4,this.moveset.filter(m=>(m.getMove().power??0)>1).length)/8,.5)*(this.isOfType(FA[F[0]].type)?20:1)):w=F[1],[F[0],w]}):e=o.filter(F=>!this.moveset.some(w=>F[0]===w.moveId||FA[F[0]].hasAttr("SacrificialAttr")&&w.getMove().hasAttr("SacrificialAttr")));const K=e.reduce((F,w)=>F+w[1],0);let f=DA(K),h=0;for(;f>e[h][1];)f-=e[h++][1];this.moveset.push(new pA(e[h][0],0,0))}(this.isPlayer()||!((H=T.currentBattle)!=null&&H.isBattleMysteryEncounter())||!((P=T.currentBattle)!=null&&P.mysteryEncounter))&&T.triggerPokemonFormChange(this,ea)}trySelectMove(e,I){const L=this.getMoveset().length>e?this.getMoveset()[e]:null;return(L==null?void 0:L.isUsable(this,I))??!1}showInfo(){if(!this.battleInfo.visible){const e=T.fieldUI.getAll().slice(0,4).filter(I=>I instanceof OT&&I instanceof Gl===this.isPlayer()).find(()=>!0);!e||!this.getFieldIndex()?(T.fieldUI.sendToBack(this.battleInfo),T.sendTextToBack()):T.fieldUI.moveAbove(this.battleInfo,e),this.battleInfo.setX(this.battleInfo.x+(this.isPlayer()?150:this.isBoss()?-198:-150)),this.battleInfo.setVisible(!0),this.isPlayer()&&(this.battleInfo.expMaskRect.x+=150),T.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"-=150":`+=${this.isBoss()?246:150}`,duration:1e3,ease:"Cubic.easeOut"})}}hideInfo(){return new Promise(e=>{var I;(I=this.battleInfo)!=null&&I.visible?T.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"+=150":`-=${this.isBoss()?246:150}`,duration:500,ease:"Cubic.easeIn",onComplete:r(()=>{this.isPlayer()&&(this.battleInfo.expMaskRect.x-=150),this.battleInfo.setVisible(!1),this.battleInfo.setX(this.battleInfo.x-(this.isPlayer()?150:this.isBoss()?-198:-150)),e()},"onComplete")}):e()})}setSwitchOutStatus(e){this.switchOutStatus=e}updateInfo(e){return this.battleInfo.updateInfo(this,e)}toggleStats(e){this.battleInfo.toggleStats(e)}addExp(e,I=!1){const L=T.getMaxExpLevel(I),N=this.exp;for(this.exp+=e;this.level<L&&this.exp>=BO(this.level+1,this.species.growthRate);)this.level++;this.level>=L&&(this.exp,BO(this.level,this.species.growthRate),this.exp=Math.max(BO(this.level,this.species.growthRate),N)),this.levelExp=this.exp-BO(this.level,this.species.growthRate)}isOpponent(e){return this.isPlayer()!==e.isPlayer()}getOpponent(e){const I=this.getOpponents()[e];return I.summonData?I:null}getOpponents(e=!0){return(this.isPlayer()?T.getEnemyField():T.getPlayerField()).filter(I=>I.isActive(e))}getOpponentDescriptor(){const e=this.getOpponents();return e.length===1?e[0].name:this.isPlayer()?_.t("arenaTag:opposingTeam"):_.t("arenaTag:yourTeam")}getAlly(){return(this.isPlayer()?T.getPlayerField():T.getEnemyField())[this.getFieldIndex()?0:1]}getAlliedField(){return this.isPlayer()?T.getPlayerField():T.getEnemyField()}getStatStageMultiplier(e,I,L,N=!1,S=!1,n=!0,i=!1){const C=new VA(this.getStatStage(e)),o=new nE(!1);if(I){if(S)switch(e){case c.ATK:case c.SPATK:C.value=Math.max(C.value,0);break;case c.DEF:case c.SPDEF:C.value=Math.min(C.value,0);break}N||SE("IgnoreOpponentStatStagesAbAttr",I,null,n,e,o),L&&Ce("IgnoreOpponentStatStagesAttr",this,I,L,o)}if(!o.value){const l=new VA(Math.max(2,2+C.value)/Math.max(2,2-C.value));return i||T.applyModifiers(mL,this.isPlayer(),e,l),Math.min(l.value,4)}return 1}getAccuracyMultiplier(e,I){if(I.hasAttr("OneHitKOAccuracyAttr"))return 1;const N=new VA(this.getStatStage(c.ACC)),S=new VA(e.getStatStage(c.EVA)),n=new nE(!1),i=new nE(!1);SE("IgnoreOpponentStatStagesAbAttr",e,null,!1,c.ACC,n),SE("IgnoreOpponentStatStagesAbAttr",this,null,!1,c.EVA,i),Ce("IgnoreOpponentStatStagesAttr",this,e,I,i),T.applyModifiers(mL,this.isPlayer(),c.ACC,N),N.value=n.value?0:Math.min(N.value,6),S.value=i.value?0:S.value,e.findTag(H=>H instanceof US)&&(S.value=Math.min(0,S.value));const C=new VA(1);N.value!==S.value&&(C.value=N.value>S.value?(3+Math.min(N.value-S.value,6))/3:3/(3+Math.min(S.value-N.value,6))),n_("StatMultiplierAbAttr",this,c.ACC,C,!1,I);const o=new VA(1);n_("StatMultiplierAbAttr",e,c.EVA,o);const l=this.getAlly();if(!SA(l)){const H=this.hasAbilityWithAttr("MoveAbilityBypassAbAttr")||I.hasFlag(JA.IGNORE_ABILITIES);r_("AllyStatMultiplierAbAttr",l,c.ACC,C,!1,this,H),r_("AllyStatMultiplierAbAttr",l,c.EVA,o,!1,this,H)}return C.value/o.value}getBaseDamage({source:e,move:I,moveCategory:L,ignoreAbility:N=!1,ignoreSourceAbility:S=!1,ignoreAllyAbility:n=!1,ignoreSourceAllyAbility:i=!1,isCritical:C=!1,simulated:o=!0}){const l=L===G.PHYSICAL,H=2*e.level/5+2,P=I.calculateBattlePower(e,this,o),K=new VA(e.getEffectiveStat(l?c.ATK:c.SPATK,this,void 0,S,N,n,C,o));Ce("VariableAtkAttr",e,this,I,K);const f=new VA(this.getEffectiveStat(l?c.DEF:c.SPDEF,e,I,N,S,i,C,o));Ce("VariableDefAttr",e,this,I,f);const h=H*P*K.value/f.value/50+2;return o||(I.name,K.value,f.value),h}calculateStabMultiplier(e,I,L,N){if(I.hasAttr("TypelessAttr"))return 1;const S=e.getTypes(),n=e.getTeraType(),i=e.getMoveType(I),C=S.includes(e.getMoveType(I)),o=new VA(1);return C&&i!==t.STELLAR&&(o.value+=.5),Ce("CombinedPledgeStabBoostAttr",e,this,I,o),L||SE("StabBoostAbAttr",e,null,N,o),e.isTerastallized&&n===i&&i!==t.STELLAR&&(o.value+=.5),e.isTerastallized&&e.getTeraType()===t.STELLAR&&(!e.stellarTypesBoosted.includes(i)||e.hasSpecies(A.TERAPAGOS))&&(o.value+=C?.5:.2),Math.min(o.value,2.25)}getAttackDamage({source:e,move:I,ignoreAbility:L=!1,ignoreSourceAbility:N=!1,ignoreAllyAbility:S=!1,ignoreSourceAllyAbility:n=!1,isCritical:i=!1,simulated:C=!0,effectiveness:o}){var nA;const l=new VA(0),H=this.isPlayer()?hA.PLAYER:hA.ENEMY,P=new VA(I.category);Ce("VariableMoveCategoryAttr",e,this,I,P);const K=P.value,f=e.getMoveType(I),h=new nE(!1),F=o??this.getMoveEffectiveness(e,I,L,C,h),w=K===G.PHYSICAL,m=new VA(T.arena.getAttackTypeMultiplier(f,e.isGrounded()));Ce("IgnoreWeatherTypeDebuffAttr",e,this,I,m);const y=F*m.value===0;if(h.value||y)return{cancelled:h.value,result:I.id===E.SHEER_COLD?_E.IMMUNE:_E.NO_EFFECT,damage:0};const x=new VA(0);if(Ce("FixedDamageAttr",e,this,I,x),x.value){const lA=new VA(1);return T.applyModifiers(Ot,e.isPlayer(),e,I.id,null,lA),x.value=UE(x.value*lA.value),{cancelled:!1,result:_E.EFFECTIVE,damage:x.value}}const q=new nE(!1);if(Ce("OneHitKOAttr",e,this,I,q),q.value)return{cancelled:!1,result:_E.ONE_HIT_KO,damage:this.hp};const IA=this.getBaseDamage({source:e,move:I,moveCategory:K,ignoreAbility:L,ignoreSourceAbility:N,ignoreAllyAbility:S,ignoreSourceAllyAbility:n,isCritical:i,simulated:C}),{targets:$,multiple:tA}=jL(e,I.id),RA=(tA?$.length:1)>1?.75:1,OA=new VA(1);T.applyModifiers(Ot,e.isPlayer(),e,I.id,null,OA),N||hI("AddSecondStrikeAbAttr",e,this,I,C,null,OA);const NA=new VA(1);this.getTag(d.RECEIVE_DOUBLE_DAMAGE)&&(NA.value=2);const iA=new VA(i?1.5:1);SE("MultCritAbAttr",e,null,C,iA);const KA=C?1:this.randBattleSeedIntRange(85,100)/100,wA=this.calculateStabMultiplier(e,I,N,C);let vA=1;if(w&&e.status&&e.status.effect===J.BURN&&!I.hasAttr("BypassBurnDamageReductionAttr")){const lA=new nE(!1);N||SE("BypassBurnDamageReductionAbAttr",e,lA,C),lA.value||(vA=.5)}const $A=new VA(1);i||T.arena.applyTagsForSide(oS,H,C,e,K,$A);const RE=new VA(1);I.getAttrs("HitsTagAttr").filter(lA=>lA.doubleDamage).forEach(lA=>{this.getTag(lA.tagType)&&(RE.value*=2)});const LE=((nA=T.arena.terrain)==null?void 0:nA.terrainType)===bA.MISTY&&this.isGrounded()&&f===t.DRAGON?.5:1;if(l.value=UE(IA*RA*OA.value*m.value*NA.value*iA.value*KA*wA*F*vA*$A.value*RE.value*LE),N||hI("DamageBoostAbAttr",e,this,I,C,l),e.isPlayer()||T.applyModifiers(xS,!1,l),this.isPlayer()||T.applyModifiers(ZS,!1,l),!L){ZI("ReceivedMoveDamageMultiplierAbAttr",this,e,I,h,C,l);const lA=this.getAlly();T.currentBattle.double&&!SA(lA)&&lA.isActive(!0)&&ZI("AlliedFieldDamageReductionAbAttr",lA,e,I,h,C,l)}Ce("ModifiedDamageAttr",e,this,I,l),this.isFullHp()&&!L&&ZI("PreDefendFullHpEndureAbAttr",this,e,I,h,!1,l),C||(l.value,I.name);let cA;return F<1?cA=_E.NOT_VERY_EFFECTIVE:F>1?cA=_E.SUPER_EFFECTIVE:cA=_E.EFFECTIVE,{cancelled:h.value,result:cA,damage:l.value}}getCriticalHitResult(e,I,L=!0){const N=this.isPlayer()?hA.PLAYER:hA.ENEMY;if(T.arena.getTagOnSide(wC,N)||aE.NEVER_CRIT_OVERRIDE||I.hasAttr("FixedDamageAttr"))return!1;const n=new nE(!1);if(e.getTag(d.ALWAYS_CRIT)&&(n.value=!0),Ce("CritOnlyAttr",e,this,I,n),SE("ConditionalCritAbAttr",e,null,L,n,this,I),!n.value){const i=[24,8,2,1][Math.max(0,Math.min(this.getCritStage(e,I),3))];n.value=i===1||!T.randBattleSeedInt(i)}return SE("BlockCritAbAttr",this,null,L,n),n.value}damage(e,I=!1,L=!1,N=!1){if(this.isFainted())return 0;const S=new nE(!1);return!L&&this.hp-e<=0&&(this.hp>=1&&this.getTag(d.ENDURING)?S.value=this.lapseTag(d.ENDURING):this.hp>1&&this.getTag(d.STURDY)?S.value=this.lapseTag(d.STURDY):this.hp>=1&&this.getTag(d.ENDURE_TOKEN)&&(S.value=this.lapseTag(d.ENDURE_TOKEN)),S.value||T.applyModifiers(FS,this.isPlayer(),this,S),S.value&&(e=this.hp-1)),e=Math.min(e,this.hp),this.hp=this.hp-e,this.isFainted()&&!N&&(T.phaseManager.setPhaseQueueSplice(),T.phaseManager.unshiftNew("FaintPhase",this.getBattlerIndex(),L),this.destroySubstitute(),this.lapseTag(d.COMMANDED)),e}damageAndUpdate(e,{result:I=_E.EFFECTIVE,isCritical:L=!1,ignoreSegments:N=!1,ignoreFaintPhase:S=!1,source:n=void 0}={}){const i=[_E.INDIRECT,_E.INDIRECT_KO].includes(I),C=T.phaseManager.create("DamageAnimPhase",this.getBattlerIndex(),e,I,L);return T.phaseManager.unshiftPhase(C),this.switchOutStatus&&n&&(e=0),e=this.damage(e,N,i,S),this.battleInfo.visible&&this.updateInfo(),C.updateAmount(e),(!n||n.turnData.hitCount<=1)&&sV("PostDamageAbAttr",this,e,this.hasPassive(),!1,[],n),e}heal(e){const I=Math.min(e,this.getMaxHp()-this.hp);return this.hp+=I,I}isBossImmune(){return this.isBoss()}isMax(){const e=[eA.GIGANTAMAX,eA.GIGANTAMAX_RAPID,eA.GIGANTAMAX_SINGLE,eA.ETERNAMAX];return e.includes(this.getFormKey())||!!this.getFusionFormKey()&&e.includes(this.getFusionFormKey())}isMega(){const e=[eA.MEGA,eA.MEGA_X,eA.MEGA_Y,eA.PRIMAL];return e.includes(this.getFormKey())||!!this.getFusionFormKey()&&e.includes(this.getFusionFormKey())}canAddTag(e){if(this.getTag(e))return!1;const I=new CE(e,0,0),L=new nE(!1);return qr("BattlerTagImmunityAbAttr",this,I,L,!0),this.getAlliedField().forEach(S=>qr("UserFieldBattlerTagImmunityAbAttr",S,I,L,!0,this)),!L.value}addTag(e,I=0,L,N){const S=this.getTag(e);if(S)return S.onOverlap(this),!1;const n=t3(e,I,L,N),i=new nE(!1);if(qr("BattlerTagImmunityAbAttr",this,n,i),i.value)return!1;for(const C of this.getAlliedField())if(qr("UserFieldBattlerTagImmunityAbAttr",C,n,i,!1,this),i.value)return!1;return n.canAdd(this)?(this.summonData.tags.push(n),n.onAdd(this),!0):!1}getTag(e){return e instanceof Function?this.summonData.tags.find(I=>I instanceof e):this.summonData.tags.find(I=>I.tagType===e)}findTag(e){return this.summonData.tags.find(I=>e(I))}findTags(e){return this.summonData.tags.filter(I=>e(I))}lapseTag(e){const I=this.summonData.tags,L=I.find(N=>N.tagType===e);return L?(L.lapse(this,BA.CUSTOM)||(L.onRemove(this),I.splice(I.indexOf(L),1)),!0):!1}lapseTags(e){const I=this.summonData.tags;I.filter(L=>e===BA.FAINT||L.lapseTypes.some(N=>N===e)&&!L.lapse(this,e)).forEach(L=>{L.onRemove(this),I.splice(I.indexOf(L),1)})}removeTag(e){const I=this.summonData.tags,L=I.find(N=>N.tagType===e);L&&(L.onRemove(this),I.splice(I.indexOf(L),1))}findAndRemoveTags(e){const I=this.summonData.tags,L=I.filter(N=>e(N));for(const N of L)N.turnCount=0,N.onRemove(this),I.splice(I.indexOf(N),1)}removeTagsBySourceId(e){this.findAndRemoveTags(I=>I.isSourceLinked()&&I.sourceId===e)}transferTagsBySourceId(e,I){this.summonData.tags.forEach(L=>{L.sourceId===e&&(L.sourceId=I)})}transferSummon(e){for(const I of MI){const L=e.getStatStage(I);this.isPlayer()&&L===6&&T.validateAchv(YE.TRANSFER_MAX_STAT_STAGE),this.setStatStage(I,L)}for(const I of e.summonData.tags)!I.isBatonPassable||I.tagType===d.TELEKINESIS&&this.species.speciesId===A.GENGAR&&this.getFormKey()==="mega"||(I instanceof hC&&I.swapStat(this),this.summonData.tags.push(I));this.updateInfo()}isMoveRestricted(e,I){return this.getRestrictingTag(e,I)!==null}isMoveTargetRestricted(e,I,L){for(const N of this.findTags(S=>S instanceof bO))if(N.isMoveTargetRestricted(e,I,L))return N!==null;return!1}getRestrictingTag(e,I,L){for(const N of this.findTags(S=>S instanceof bO))if(N.isMoveRestricted(e,I)||I&&L&&N.isMoveTargetRestricted(e,I,L))return N;return null}getMoveHistory(){return this.summonData.moveHistory}pushMoveHistory(e){var I;this.isOnField()&&(e.turn=(I=T.currentBattle)==null?void 0:I.turn,this.getMoveHistory().push(e))}getLastXMoves(e=1){const I=this.getMoveHistory();return e>=0?I.slice(Math.max(I.length-e,0)).reverse():I.slice(0).reverse()}getMoveQueue(){return this.summonData.moveQueue}changeForm(e){return new Promise(I=>{this.formIndex=Math.max(this.species.forms.findIndex(N=>N.formKey===e.formKey),0),this.generateName();const L=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=L&&(this.abilityIndex=L-1),T.gameData.setPokemonSeen(this,!1),this.setScale(this.getSpriteScale()),this.loadAssets().then(()=>{this.calculateStats(),T.updateModifiers(this.isPlayer(),!0),Promise.all([this.updateInfo(),T.updateFieldScale()]).then(()=>I())})})}cry(e,I){const L=I??T,N=this.getSpeciesForm(void 0,!0).cry(e);let S=N.totalDuration*1e3;if(this.fusionSpecies&&this.getSpeciesForm(void 0,!0)!==this.getFusionSpeciesForm(void 0,!0)){let n=this.getFusionSpeciesForm(void 0,!0).cry(e,!0);S=Math.min(S,n.totalDuration*1e3),n.destroy(),L.time.delayedCall(We(Math.ceil(S*.4)),()=>{try{Si.fadeOut(L,N,We(Math.ceil(S*.2))),n=this.getFusionSpeciesForm(void 0,!0).cry(Object.assign({seek:Math.max(n.totalDuration*.4,0)},e)),Si.fadeIn(L,n,We(Math.ceil(S*.2)),L.masterVolume*L.fieldVolume,0)}catch(i){console.error(i)}})}return N}faintCry(e){if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm())return this.fusionFaintCry(e);const I=this.species.getCryKey(this.formIndex);let L=.85;const N=T.playSound(I,{rate:L});if(!N||T.fieldVolume===0)return e();const S=this.getSprite(),n=this.getTintSprite(),i=Math.max(T.sound.get(I).totalDuration*50,25);let C=0,o;S.anims.pause(),n==null||n.anims.pause();let l=T.time.addEvent({delay:We(i),repeat:-1,callback:r(()=>{for(o=S.anims.msPerFrame/L,C+=i;C>o;)S.anims.duration&&(S.anims.nextFrame(),n==null||n.anims.nextFrame()),C-=o;N&&!N.pendingRemove?(L*=.99,N.setRate(L)):(l==null||l.destroy(),l=null,e&&e())},"callback")});T.time.delayedCall(We(3e3),()=>{!l||!T||(N!=null&&N.isPlaying&&N.stop(),l.destroy(),e&&e())})}fusionFaintCry(e){const I=this.species.getCryKey(this.formIndex);let L=0,N=.85;const S=T.playSound(I,{rate:N}),n=this.getSprite(),i=this.getTintSprite();let C=S.totalDuration*1e3;const o=this.fusionSpecies.getCryKey(this.fusionFormIndex);let l=T.playSound(o,{rate:N});if(!S||!l||T.fieldVolume===0)return e();l.stop(),C=Math.min(C,l.totalDuration*1e3),l.destroy();const H=Math.max(C*.05,25);let P=0,K=0;const f=Math.ceil(C*.4);for(;K<f;)++L,K+=H*N,N*=.99;P=L,L=0,N=.85;let h=0,F;n.anims.pause(),i==null||i.anims.pause();let w=T.time.addEvent({delay:We(H),repeat:-1,callback:r(()=>{for(++L,F=n.anims.msPerFrame/N,h+=H;h>F;)n.anims.duration&&(n.anims.nextFrame(),i==null||i.anims.nextFrame()),h-=F;L===P&&o&&(Si.fadeOut(T,S,We(Math.ceil(C/N*.2))),l=T.playSound(o,Object.assign({seek:Math.max(l.totalDuration*.4,0),rate:N})),Si.fadeIn(T,l,We(Math.ceil(C/N*.2)),T.masterVolume*T.fieldVolume,0)),N*=.99,S&&!S.pendingRemove&&S.setRate(N),l&&!l.pendingRemove&&l.setRate(N),(!S||S.pendingRemove)&&(!l||l.pendingRemove)&&(w==null||w.destroy(),w=null,e&&e())},"callback")});T.time.delayedCall(We(3e3),()=>{!w||!T||(S!=null&&S.isPlaying&&S.stop(),l!=null&&l.isPlaying&&l.stop(),w.destroy(),e&&e())})}isOppositeGender(e){return this.gender!==mA.GENDERLESS&&e.gender===(this.gender===mA.MALE?mA.FEMALE:mA.MALE)}queueImmuneMessage(e,I){var N;if(!I||e)return;const L=I&&((N=this.status)==null?void 0:N.effect)===I?GV(I??J.NONE,Q(this)):_.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:Q(this)});T.phaseManager.queueMessage(L)}canSetStatus(e,I=!1,L=!1,N=null,S=!1){var C,o,l,H,P,K;if(e!==J.FAINT){if(L?((C=this.status)==null?void 0:C.effect)===e:this.status)return this.queueImmuneMessage(I,e),!1;if(this.isGrounded()&&!S&&((o=T.arena.terrain)==null?void 0:o.terrainType)===bA.MISTY)return this.queueImmuneMessage(I,e),!1}const n=this.getTypes(!0,!0);switch(e){case J.POISON:case J.TOXIC:{const f=n.map(h=>{if(h!==t.POISON&&h!==t.STEEL)return!1;const F=new nE(!1);return!(N&&(SE("IgnoreTypeStatusEffectImmunityAbAttr",N,F,!1,e,h),F.value))});if((this.isOfType(t.POISON)||this.isOfType(t.STEEL))&&f.includes(!0))return this.queueImmuneMessage(I,e),!1;break}case J.PARALYSIS:if(this.isOfType(t.ELECTRIC))return this.queueImmuneMessage(I,e),!1;break;case J.SLEEP:if(this.isGrounded()&&((l=T.arena.terrain)==null?void 0:l.terrainType)===bA.ELECTRIC)return this.queueImmuneMessage(I,e),!1;break;case J.FREEZE:if(this.isOfType(t.ICE)||!S&&((K=(P=(H=T)==null?void 0:H.arena)==null?void 0:P.weather)!=null&&K.weatherType)&&[Z.SUNNY,Z.HARSH_SUN].includes(T.arena.weather.weatherType))return this.queueImmuneMessage(I,e),!1;break;case J.BURN:if(this.isOfType(t.FIRE))return this.queueImmuneMessage(I,e),!1;break}const i=new nE(!1);if(qm("StatusEffectImmunityAbAttr",this,e,i,I),i.value)return!1;for(const f of this.getAlliedField())if(qm("UserFieldStatusEffectImmunityAbAttr",f,e,i,I,this,N),i.value)break;return i.value?!1:N&&N!==this&&this.isSafeguarded(N)?(I||T.phaseManager.queueMessage(_.t("moveTriggers:safeguard",{targetName:Q(this)})),!1):!0}trySetStatus(e,I=!1,L=null,N=0,S=null,n,i=!0){if(!this.canSetStatus(e,i,n,L)||this.isFainted()&&e!==J.FAINT)return!1;if(e===J.SLEEP||e===J.FREEZE){const o=T.phaseManager.getCurrentPhase();o!=null&&o.is("MoveEffectPhase")&&o.getUserPokemon()===this&&(this.turnData.hitCount=1,this.turnData.hitsLeft=1)}if(I)return n&&this.resetStatus(!1),T.phaseManager.unshiftNew("ObtainStatusEffectPhase",this.getBattlerIndex(),e,N,S,L),!0;let C;if(e===J.SLEEP){C=new VA(this.randBattleSeedIntRange(2,4)),this.setFrameRate(4);const l=[d.UNDERGROUND,d.UNDERWATER,d.HIDDEN,d.FLYING].find(H=>this.getTag(H));l&&(this.removeTag(l),this.getMoveQueue().pop())}return C=C,e=e,this.status=new pL(e,0,C==null?void 0:C.value),!0}resetStatus(e=!0,I=!1,L=!1,N=!0){var n;const S=(n=this.status)==null?void 0:n.effect;!e&&S===J.FAINT||(N?T.phaseManager.unshiftNew("ResetStatusPhase",this,I,L):this.clearStatus(I,L))}clearStatus(e,I){var N;const L=(N=this.status)==null?void 0:N.effect;this.status=null,L===J.SLEEP&&(this.setFrameRate(10),this.getTag(d.NIGHTMARE)&&this.lapseTag(d.NIGHTMARE)),e&&this.getTag(d.CONFUSED)&&this.lapseTag(d.CONFUSED),I&&this.loadAssets(!1).then(()=>this.playAnim()),this.updateInfo(!0)}isSafeguarded(e){const I=this.isPlayer()?hA.PLAYER:hA.ENEMY;if(T.arena.getTagOnSide(CA.SAFEGUARD,I)){const L=new nE(!1);return e&&SE("InfiltratorAbAttr",e,null,!1,L),!L.value}return!1}fieldSetup(e){var I;this.setSwitchOutStatus(!1),T&&T.triggerPokemonFormChange(this,iC,!0),this.getTag(LI)&&(T.triggerPokemonBattleAnim(this,Yt.SUBSTITUTE_ADD),this.getTag(LI).sourceInFocus=!1),this.hasAbilityWithAttr("CommanderAbAttr")&&T.currentBattle.double&&((I=this.getAlly())==null?void 0:I.species.speciesId)===A.DONDOZO&&this.setVisible(!1),e&&this.resetSummonData()}resetSummonData(){const e=this.summonData.illusion;this.summonData.speciesForm&&(this.summonData.speciesForm=null,this.updateFusionPalette()),this.summonData=new LS,this.tempSummonData=new Pl,this.summonData.illusion=e,this.updateInfo()}resetBattleAndWaveData(){this.battleData=new NS,this.resetWaveData()}resetWaveData(){this.waveData=new Hl}resetTera(){const e=this.isTerastallized;this.isTerastallized=!1,this.stellarTypesBoosted=[],e&&(this.updateSpritePipelineData(),T.triggerPokemonFormChange(this,_t))}resetTurnData(){this.turnData=new ul}getExpValue(){return this.getSpeciesForm().getBaseExp()*this.level/5+1}setFrameRate(e){var I;T.anims.get(this.getBattleSpriteKey()).frameRate=e;try{this.getSprite().play(this.getBattleSpriteKey())}catch(L){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,L)}try{(I=this.getTintSprite())==null||I.play(this.getBattleSpriteKey())}catch(L){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,L)}}tint(e,I,L,N){const S=this.getTintSprite();S==null||S.setTintFill(e),S==null||S.setVisible(!0),L?(S==null||S.setAlpha(0),T.tweens.add({targets:S,alpha:I||1,duration:L,ease:N||"Linear"})):S==null||S.setAlpha(I)}untint(e,I){const L=this.getTintSprite();e?T.tweens.add({targets:L,alpha:0,duration:e,ease:I||"Linear",onComplete:r(()=>{L==null||L.setVisible(!1),L==null||L.setAlpha(1)},"onComplete")}):(L==null||L.setVisible(!1),L==null||L.setAlpha(1))}enableMask(){var e,I,L;this.maskEnabled||(this.maskSprite=this.getTintSprite(),(e=this.maskSprite)==null||e.setVisible(!0),(I=this.maskSprite)==null||I.setPosition(this.x*this.parentContainer.scale+this.parentContainer.x,this.y*this.parentContainer.scale+this.parentContainer.y),(L=this.maskSprite)==null||L.setScale(this.getSpriteScale()*this.parentContainer.scale),this.maskEnabled=!0)}disableMask(){var e,I,L;this.maskEnabled&&((e=this.maskSprite)==null||e.setVisible(!1),(I=this.maskSprite)==null||I.setPosition(0,0),(L=this.maskSprite)==null||L.setScale(this.getSpriteScale()),this.maskSprite=null,this.maskEnabled=!1)}sparkle(){this.shinySparkle&&_H(this.shinySparkle,this.variant)}updateFusionPalette(e){if(!this.getFusionSpeciesForm(e)){[this.getSprite(),this.getTintSprite()].filter(cA=>!!cA).map(cA=>{cA.pipelineData[`spriteColors${e&&this.summonData.speciesForm?"Base":""}`]=[],cA.pipelineData[`fusionSpriteColors${e&&this.summonData.speciesForm?"Base":""}`]=[]});return}const I=this.getSpeciesForm(e),L=this.getFusionSpeciesForm(e),N=I.getSpriteKey(this.getGender(e)===mA.FEMALE,I.formIndex,this.shiny,this.variant),S=I.getSpriteKey(this.getGender(e)===mA.FEMALE,I.formIndex,this.shiny,this.variant).replace("pkmn__","pkmn__back__"),n=L.getSpriteKey(this.getFusionGender(e)===mA.FEMALE,L.formIndex,this.fusionShiny,this.fusionVariant),i=L.getSpriteKey(this.getFusionGender(e)===mA.FEMALE,L.formIndex,this.fusionShiny,this.fusionVariant).replace("pkmn__","pkmn__back__"),C=T.textures.get(N),o=T.textures.get(S),l=T.textures.get(n),H=T.textures.get(i),[P,K,f,h]=[C,o,l,H].map(cA=>cA.frames[cA.firstFrame]),[F,w,m,y]=[C,o,l,H].map(cA=>cA.getSourceImage()),x=document.createElement("canvas"),q=document.createElement("canvas"),IA=document.createElement("canvas"),$=document.createElement("canvas"),tA=[],UA=[];[x,q,IA,$].forEach((cA,nA)=>{const lA=cA.getContext("2d"),TA=[P,K,f,h][nA];if(cA.width=TA.width,cA.height=TA.height,lA){lA.drawImage([F,w,m,y][nA],TA.cutX,TA.cutY,TA.width,TA.height,0,0,TA.width,TA.height);const GA=lA.getImageData(TA.cutX,TA.cutY,TA.width,TA.height);UA.push(GA.data)}});for(let cA=0;cA<2;cA++){const nA=dt[cA?S:N],lA=new Map;this.shiny&&nA&&nA[this.variant]&&Object.keys(nA[this.variant]).forEach(TA=>{lA.set(Qr(Array.from(Object.values(_N(TA)))),Array.from(Object.values(_N(nA[this.variant][TA]))))});for(let TA=0;TA<UA[cA].length;TA+=4)if(UA[cA][TA+3]){const GA=UA[cA].slice(TA,TA+4);let[zA,jA,ME,eE]=GA;if(nA){const gE=Qr([zA,jA,ME,eE]);if(lA.has(gE)){const ae=lA.get(gE);ae&&([zA,jA,ME,eE]=ae)}}tA.find(gE=>gE[0]===zA&&gE[1]===jA&&gE[2]===ME)||tA.push([zA,jA,ME,eE])}}const RA=JSON.parse(JSON.stringify(tA)),OA=[];for(let cA=0;cA<2;cA++)for(let nA=0;nA<UA[cA].length;nA+=4)UA[cA].slice(nA,nA+3).reduce((TA,GA)=>TA+GA,0)&&OA.push(YN({r:UA[cA][nA],g:UA[cA][nA+1],b:UA[cA][nA+2],a:UA[cA][nA+3]}));const NA=[];for(let cA=0;cA<2;cA++){const nA=dt[cA?i:n],lA=new Map;if(this.fusionShiny&&nA&&nA[this.fusionVariant])for(const TA of Object.keys(nA[this.fusionVariant]))lA.set(Qr(Array.from(Object.values(_N(TA)))),Array.from(Object.values(_N(nA[this.fusionVariant][TA]))));for(let TA=0;TA<UA[2+cA].length;TA+=4){if(!UA[2+cA].slice(TA,TA+3).reduce((gE,ae)=>gE+ae,0))continue;let[zA,jA,ME,eE]=[UA[2+cA][TA],UA[2+cA][TA+1],UA[2+cA][TA+2],UA[2+cA][TA+3]];if(nA){const gE=Qr([zA,jA,ME,eE]);if(lA.has(gE)){const ae=lA.get(gE);ae&&([zA,jA,ME,eE]=ae)}}NA.push(YN({r:zA,g:jA,b:ME,a:eE}))}}if(NA.length===0)return;let iA,KA;const wA=Math.random;Math.random=()=>nI(),T.executeWithSeedOffset(()=>{iA=js.quantize(OA,4),KA=js.quantize(NA,4)},0,"This result should not vary"),Math.random=wA,iA=iA,KA=KA;const[vA,$A]=[iA,KA].map(cA=>{let nA=Array.from(cA.keys()).sort((zA,jA)=>cA.get(zA)<cA.get(jA)?1:-1),lA,TA;const GA=new Map;do{GA.clear(),lA=nA.reduce((zA,jA)=>(zA.set(jA,Object.values(Q_(jA))),zA),new Map),TA=Array.from(lA.keys()).reduce((zA,jA)=>{const ME=lA.get(jA).slice(0,3);return zA.set(jA,uy(ME[0],ME[1],ME[2])),zA},new Map);for(let zA=nA.length-1;zA>=0;zA--){const jA=TA.get(nA[zA]);for(let ME=0;ME<zA;ME++){const eE=TA.get(nA[ME]),gE=Math.abs(jA[0]-eE[0]);if(gE<30||gE>=330){GA.has(nA[zA])?GA.get(nA[zA]).push(nA[ME]):GA.set(nA[zA],[nA[ME]]);break}}}GA.forEach((zA,jA)=>{const ME=lA.get(jA),eE=zA.map(ge=>lA.get(ge)),gE=ME.slice(0);let ae=cA.get(jA);for(const ge of zA){const NO=cA.get(ge);NO&&(ae+=NO)}for(let ge=0;ge<3;ge++)gE[ge]*=cA.get(jA)/ae,zA.forEach((NO,WR)=>{if(cA.has(NO)){const oR=cA.get(NO);gE[ge]+=eE[WR][ge]*(oR/ae)}}),gE[ge]=Math.round(gE[ge]);cA.delete(jA);for(const ge of zA)cA.delete(ge),GA.has(ge)&&GA.delete(ge);cA.set(YN({r:gE[0],g:gE[1],b:gE[2],a:gE[3]}),ae)}),nA=Array.from(cA.keys()).sort((zA,jA)=>cA.get(zA)<cA.get(jA)?1:-1)}while(GA.size);return nA.map(zA=>Object.values(Q_(zA)))}),RE=[];tA.forEach((cA,nA)=>{RE.push([]);for(let lA=0;lA<vA.length;lA++)RE[nA].push(cy(cA,vA[lA]))});const LE=wR.Tweens.Builders.GetEaseFunction("Cubic.easeIn");for(let cA=0;cA<tA.length;cA++){const nA=Math.min(...RE[cA]),lA=Math.min(RE[cA].findIndex(TA=>TA===nA),$A.length-1);if(nA<255){const TA=LE(nA/255),GA=[0,0,0,RA[cA][3]];for(let zA=0;zA<3;zA++)GA[zA]=Math.round(RA[cA][zA]*TA+$A[lA][zA]*(1-TA));RA[cA]=GA}}[this.getSprite(),this.getTintSprite()].filter(cA=>!!cA).map(cA=>{cA.pipelineData[`spriteColors${e&&this.summonData.speciesForm?"Base":""}`]=tA,cA.pipelineData[`fusionSpriteColors${e&&this.summonData.speciesForm?"Base":""}`]=RA}),x.remove(),IA.remove()}randBattleSeedInt(e,I=0){return T.currentBattle?T.randBattleSeedInt(e,I):DA(e,I)}randBattleSeedIntRange(e,I){return T.currentBattle?T.randBattleSeedInt(I-e+1,e):LH(e,I)}leaveField(e=!0,I=!0,L=!1){this.resetSprite(),this.resetTurnData(),T.getField(!0).filter(N=>N!==this).forEach(N=>N.removeTagsBySourceId(this.id)),e&&(this.destroySubstitute(),this.resetSummonData()),I&&this.hideInfo(),iV("PreLeaveFieldAbAttr",this),this.setSwitchOutStatus(!0),T.triggerPokemonFormChange(this,UO,!0),T.field.remove(this,L)}destroy(){var e;(e=this.battleInfo)==null||e.destroy(),this.destroySubstitute(),super.destroy()}getBattleInfo(){return this.battleInfo}hasSameAbilityInRootForm(e){const I=this.abilityIndex,L=YA(this.species.getRootSpeciesId());return L.getAbility(e)===L.getAbility(I)}checkIfPlayerHasAbilityOfStarter(e){return(e&1)>0&&this.hasSameAbilityInRootForm(0)||(e&2)>0&&this.hasSameAbilityInRootForm(1)?!0:(e&4)>0&&this.hasSameAbilityInRootForm(2)}loseHeldItem(e,I=!0){return e.pokemonId!==-1&&e.pokemonId!==this.id?!1:(e.stackCount--,e.stackCount<=0&&T.removeModifier(e,this.isEnemy()),I&&e_("PostItemLostAbAttr",this,!1),!0)}recordEatenBerry(e,I=!0){this.battleData.hasEatenBerry=!0,I&&this.battleData.berriesEaten.push(e),this.turnData.berriesEaten.push(e)}};r(am,"Pokemon");let mr=am;const nm=class nm extends mr{constructor(e,I,L,N,S,n,i,C,o,l){super(106,148,e,I,L,N,S,n,i,C,o,l),aE.STATUS_OVERRIDE&&(this.status=new pL(aE.STATUS_OVERRIDE,0,4)),aE.SHINY_OVERRIDE?(this.shiny=!0,this.initShinySparkle()):aE.SHINY_OVERRIDE===!1&&(this.shiny=!1),aE.VARIANT_OVERRIDE!==null&&this.shiny&&(this.variant=aE.VARIANT_OVERRIDE),l||(T.gameMode.isDaily?this.generateAndPopulateMoveset():this.moveset=[]),this.generateCompatibleTms()}initBattleInfo(){this.battleInfo=new Gl,this.battleInfo.initInfo(this)}isPlayer(){return!0}isEnemy(){return!1}hasTrainer(){return!0}isBoss(){return!1}getFieldIndex(){return T.getPlayerField().indexOf(this)}getBattlerIndex(){return this.getFieldIndex()}generateCompatibleTms(){this.compatibleTms=[];const e=Object.keys(mI);for(const I of e){const L=Number.parseInt(I);let N=!1;for(const S of mI[I])if(Array.isArray(S)){const[n,i]=S;if((n===this.species.speciesId||this.fusionSpecies&&n===this.fusionSpecies.speciesId)&&i===this.getFormKey()){N=!0;break}}else if(S===this.species.speciesId||this.fusionSpecies&&S===this.fusionSpecies.speciesId){N=!0;break}L6.indexOf(L)>-1&&(N=!N),N&&this.compatibleTms.push(L)}}tryPopulateMoveset(e){return this.getSpeciesForm().validateStarterMoveset(e,T.gameData.starterData[this.species.getRootSpeciesId()].eggMoves)?(this.moveset=e.map(I=>new pA(I)),!0):!1}switchOut(e=ER.SWITCH){return new Promise(I=>{this.leaveField(e===ER.SWITCH),T.ui.setMode(hE.PARTY,wr.FAINT_SWITCH,this.getFieldIndex(),(L,N)=>{L>=T.currentBattle.getBattlerCount()&&L<6&&T.phaseManager.prependNewToPhase("MoveEndPhase","SwitchSummonPhase",e,this.getFieldIndex(),L,!1),T.ui.setMode(hE.MESSAGE).then(I)},YR.FilterNonFainted)})}addFriendship(e){if(e>0){const I=this.species.getRootSpeciesId(),L=this.isFusion()&&this.fusionSpecies?this.fusionSpecies.getRootSpeciesId():0,N=[T.gameData.starterData[I],L?T.gameData.starterData[L]:null].filter(o=>!!o),S=new VA(e);T.applyModifier(pS,!0,this,S);const n=T.gameMode.isClassic?pe.getClassicFriendshipMultiplier():1,i=L?pe.areFusionsBoosted()?1.5:2:1,C=new VA(Math.floor(S.value*n/i));this.friendship=Math.min(this.friendship+S.value,255),this.friendship===255&&T.validateAchv(YE.MAX_FRIENDSHIP),N.forEach((o,l)=>{const H=l?L:I;o.friendship=(o.friendship||0)+C.value,o.friendship>=X4(FR[H])&&(T.gameData.addStarterCandy(YA(H),1),o.friendship=0)})}else this.friendship=Math.max(this.friendship+e,0)}getPossibleEvolution(e){return e?new Promise(I=>{const L=YA(e.speciesId),N=e instanceof ft;let S;if(N){const n=this.fusionSpecies,i=this.fusionFormIndex;this.fusionSpecies=L,this.fusionFormIndex=e.evoFormKey!==null?Math.max(L.forms.findIndex(C=>C.formKey===e.evoFormKey),0):this.fusionFormIndex,S=T.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this),this.fusionSpecies=n,this.fusionFormIndex=i}else{const n=e.evoFormKey!==null&&!N?Math.max(L.forms.findIndex(i=>i.formKey===e.evoFormKey),0):this.formIndex;S=T.addPlayerPokemon(N?this.species:L,this.level,this.abilityIndex,n,this.gender,this.shiny,this.variant,this.ivs,this.nature,this)}S.loadAssets().then(()=>I(S))}):new Promise(I=>I(this))}evolve(e,I){return e?new Promise(L=>{this.pauseEvolutions=!1,this.handleSpecialEvolutions(e);const N=e instanceof ft;if(N?this.fusionSpecies=YA(e.speciesId):this.species=YA(e.speciesId),e.preFormKey!==null){const n=Math.max((!N||!this.fusionSpecies?this.species:this.fusionSpecies).forms.findIndex(i=>i.formKey===e.evoFormKey),0);N?this.fusionFormIndex=n:this.formIndex=n}if(this.generateName(),N){const n=this.getFusionSpeciesForm().getAbilityCount(),i=I.getAbilityCount();[0,1,2].includes(this.fusionAbilityIndex)?this.fusionAbilityIndex===2&&i===3&&n===2&&(this.fusionAbilityIndex=1):(console.warn("this.fusionAbilityIndex is somehow an illegal value, please report this"),console.warn(this.fusionAbilityIndex),this.fusionAbilityIndex=0)}else{const n=this.getSpeciesForm().getAbilityCount(),i=I.getAbilityCount();[0,1,2].includes(this.abilityIndex)?this.abilityIndex===2&&i===3&&n===2&&(this.abilityIndex=1):(console.warn("this.abilityIndex is somehow an illegal value, please report this"),console.warn(this.abilityIndex),this.abilityIndex=0)}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const S=r(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.updateInfo(!0).then(()=>L())})},"updateAndResolve");if(I.speciesId===A.GIMMIGHOUL){const n=this.getHeldItems().filter(i=>i instanceof cS)[0]??null;n&&T.removeModifier(n)}!T.gameMode.isDaily||this.metBiome>-1?(T.gameData.updateSpeciesDexIvs(this.species.speciesId,this.ivs),T.gameData.setPokemonSeen(this,!1),T.gameData.setPokemonCaught(this,!1).then(()=>S())):S()}):new Promise(L=>L())}handleSpecialEvolutions(e){var N;const I=e instanceof ft,L=I?this.fusionSpecies:this.species;if((L==null?void 0:L.speciesId)===A.NINCADA&&e.speciesId===A.NINJASK){const S=lE[L.speciesId][1];if((N=S.condition)!=null&&N.predicate(this)){const n=T.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,void 0,this.shiny,this.variant,this.ivs,this.nature);n.passive=this.passive,n.moveset=this.moveset.slice(),n.moveset=this.copyMoveset(),n.luck=this.luck,n.gender=mA.GENDERLESS,n.metLevel=this.metLevel,n.metBiome=this.metBiome,n.metSpecies=this.metSpecies,n.metWave=this.metWave,n.fusionSpecies=this.fusionSpecies,n.fusionFormIndex=this.fusionFormIndex,n.fusionAbilityIndex=this.fusionAbilityIndex,n.fusionShiny=this.fusionShiny,n.fusionVariant=this.fusionVariant,n.fusionGender=this.fusionGender,n.fusionLuck=this.fusionLuck,n.fusionTeraType=this.fusionTeraType,n.usedTMs=this.usedTMs,n.evoCounter=this.evoCounter,T.getPlayerParty().push(n),n.evolve(I?new ft(this.id,S):S,L),T.findModifiers(C=>C instanceof GE&&C.pokemonId===this.id,!0).forEach(C=>{const o=C.clone();o.pokemonId=n.id,T.addModifier(o,!0)}),T.updateModifiers(!0)}}}getPossibleForm(e){return new Promise(I=>{const L=Math.max(this.species.forms.findIndex(S=>S.formKey===e.formKey),0),N=T.addPlayerPokemon(this.species,this.level,this.abilityIndex,L,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);N.loadAssets().then(()=>I(N))})}changeForm(e){return new Promise(I=>{this.formIndex=Math.max(this.species.forms.findIndex(S=>S.formKey===e.formKey),0),this.generateName();const L=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=L&&(this.abilityIndex=L-1),this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const N=r(()=>{this.loadAssets().then(()=>{this.calculateStats(),T.updateModifiers(!0,!0),this.updateInfo(!0).then(()=>I())})},"updateAndResolve");!T.gameMode.isDaily||this.metBiome>-1?(T.gameData.setPokemonSeen(this,!1),T.gameData.setPokemonCaught(this,!1).then(()=>N())):N()})}clearFusionSpecies(){super.clearFusionSpecies(),this.generateCompatibleTms()}fuse(e){this.fusionSpecies=e.species,this.fusionFormIndex=e.formIndex,this.fusionAbilityIndex=e.abilityIndex,this.fusionShiny=e.shiny,this.fusionVariant=e.variant,this.fusionGender=e.gender,this.fusionLuck=e.luck,this.fusionCustomPokemonData=e.customPokemonData,this.evoCounter=Math.max(e.evoCounter,this.evoCounter),(e.pauseEvolutions||this.pauseEvolutions)&&(this.pauseEvolutions=!0),T.validateAchv(YE.SPLICE),T.gameData.gameStats.pokemonFused++;const I=this.getMaxHp(),L=(e.hp/e.getMaxHp()+this.hp/I)/2;this.generateName(),this.calculateStats(),this.hp=Math.round(I*L),this.isFainted()?e.isFainted()||(this.hp=Math.max(this.hp,1),this.status=e.status):(this.hp=Math.min(this.hp,I),this.status=HV(this.status,e.status)),this.generateCompatibleTms(),this.updateInfo(!0);const N=T.getPlayerParty().indexOf(e);T.getPlayerParty().indexOf(this);const S=T.findModifiers(i=>i instanceof GE&&i.pokemonId===e.id,!0);for(const i of S)T.tryTransferHeldItemModifier(i,this,!1,i.getStackCount(),!0,!0,!1);T.updateModifiers(!0,!0),T.removePartyMemberModifiers(N),T.getPlayerParty().splice(N,1)[0];const n=T.getPlayerParty().indexOf(this);e.getMoveset(!0).map(i=>T.phaseManager.unshiftNew("LearnMovePhase",n,i.getMove().id)),e.destroy(),this.updateFusionPalette()}unfuse(){return new Promise(e=>{this.clearFusionSpecies(),this.updateInfo(!0).then(()=>e()),this.updateFusionPalette()})}copyMoveset(){const e=[];return this.moveset.forEach(I=>{e.push(new pA(I.moveId,0,I.ppUp,I.virtual,I.maxPpOverride))}),e}};r(nm,"PlayerPokemon");let IL=nm;const rm=class rm extends mr{constructor(e,I,L,N,S=!1,n){var C,o;super(236,84,e,I,n==null?void 0:n.abilityIndex,n==null?void 0:n.formIndex,n==null?void 0:n.gender,!S&&n?n.shiny:!1,!S&&n?n.variant:void 0,void 0,n?n.nature:void 0,n),this.trainerSlot=L,this.initialTeamIndex=((C=T.currentBattle)==null?void 0:C.enemyParty.length)??0,this.isPopulatedFromDataSource=!!n,N&&this.setBoss(N,n==null?void 0:n.bossSegments),aE.OPP_STATUS_OVERRIDE&&(this.status=new pL(aE.OPP_STATUS_OVERRIDE,0,4)),aE.OPP_GENDER_OVERRIDE!==null&&(this.gender=aE.OPP_GENDER_OVERRIDE);const i=this.species.speciesId;if(i in aE.OPP_FORM_OVERRIDES&&!SA(aE.OPP_FORM_OVERRIDES[i])&&this.species.forms[aE.OPP_FORM_OVERRIDES[i]]&&(this.formIndex=aE.OPP_FORM_OVERRIDES[i]),!n){this.generateAndPopulateMoveset(),S||aE.OPP_SHINY_OVERRIDE===!1?this.shiny=!1:this.trySetShiny(),!this.shiny&&aE.OPP_SHINY_OVERRIDE&&(this.shiny=!0,this.initShinySparkle()),this.shiny&&(this.variant=this.generateShinyVariant(),aE.OPP_VARIANT_OVERRIDE!==null&&(this.variant=aE.OPP_VARIANT_OVERRIDE)),this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0);let l,H=e.speciesId;for(;l=Fe[H];){const P=lE[l].find(K=>K.speciesId===H&&(!K.evoFormKey||K.evoFormKey===this.getFormKey()));(o=P==null?void 0:P.condition)!=null&&o.enforceFunc&&P.condition.enforceFunc(this),H=l}if(this.hasTrainer()&&T.currentBattle){const{waveIndex:P}=T.currentBattle,K=[];for(;K.length<6;)K.push(LH(Math.floor(P/10),31));this.ivs=K}}this.aiType=N||this.hasTrainer()?bI.SMART:bI.SMART_RANDOM}initBattleInfo(){this.battleInfo?this.battleInfo.updateBossSegments(this):(this.battleInfo=new EH,this.battleInfo.initInfo(this),this.battleInfo.updateBossSegments(this))}setBoss(e=!0,I=0){e?(this.bossSegments=I||T.getEncounterBossSegments(T.currentBattle.waveIndex,this.level,this.species,!0),this.bossSegmentIndex=this.bossSegments-1):(this.bossSegments=0,this.bossSegmentIndex=0)}generateAndPopulateMoveset(e){switch(!0){case this.species.speciesId===A.SMEARGLE:this.moveset=[new pA(E.SKETCH),new pA(E.SKETCH),new pA(E.SKETCH),new pA(E.SKETCH)];break;case this.species.speciesId===A.ETERNATUS:this.moveset=(e!==void 0?e:this.formIndex)?[new pA(E.DYNAMAX_CANNON),new pA(E.CROSS_POISON),new pA(E.FLAMETHROWER),new pA(E.RECOVER,0,-4)]:[new pA(E.ETERNABEAM),new pA(E.SLUDGE_BOMB),new pA(E.FLAMETHROWER),new pA(E.COSMIC_POWER)],T.gameMode.hasChallenge(QA.INVERSE_BATTLE)&&(this.moveset[2]=new pA(E.THUNDERBOLT));break;default:super.generateAndPopulateMoveset();break}}getNextMove(){const e=this.getMoveQueue();if(e.length!==0){const L=e[0];if(L){const N=this.getMoveset().findIndex(S=>S.moveId===L.move);return N>-1&&this.getMoveset()[N].isUsable(this,L.ignorePP)||L.virtual?L:(this.getMoveQueue().shift(),this.getNextMove())}}let I=this.getMoveset().filter(L=>L.isUsable(this));if(I.length){if(I.length===1)return{move:I[0].moveId,targets:this.getNextTargets(I[0].moveId)};const L=this.getTag(Oa);if(L){const N=I.find(S=>S.moveId===L.moveId);if(N)return{move:N.moveId,targets:this.getNextTargets(N.moveId)}}switch(this.aiType){case bI.RANDOM:{const N=I[T.randBattleSeedInt(I.length)].moveId;return{move:N,targets:this.getNextTargets(N)}}case bI.SMART_RANDOM:case bI.SMART:{const N=I.filter(o=>{if(!o)return!1;const l=o.getMove();if(l.moveTarget===AA.ATTACKER)return!1;const H=T.getField(),P=jL(this,l.id).targets.map(f=>H[f]).filter(f=>this.isPlayer()!==f.isPlayer()),K=l.hasAttr("CritOnlyAttr")||!!this.getTag(d.ALWAYS_CRIT);return l.category!==G.STATUS&&P.some(f=>{var F;return(l.applyConditions(this,f,l)||[E.SUCKER_PUNCH,E.UPPER_HAND,E.THUNDERCLAP].includes(l.id))&&f.getAttackDamage({source:this,move:l,ignoreAbility:!f.waveData.abilityRevealed,ignoreSourceAbility:!1,ignoreAllyAbility:!((F=f.getAlly())!=null&&F.waveData.abilityRevealed),ignoreSourceAllyAbility:!1,isCritical:K}).damage>=f.hp})},this);N.length>0&&(I=N);const S=I.map(()=>0),n=Object.fromEntries(I.map(o=>[o.moveId,this.getNextTargets(o.moveId)]));for(const o in I){const H=I[o].getMove();let P=S[o];const K=[];for(const f of n[H.id]){if(f===KE.ATTACKER)break;const h=T.getField()[f];let F=H.getUserBenefitScore(this,h,H)+H.getTargetBenefitScore(this,h,H)*(f<KE.ENEMY===this.isPlayer()?1:-1);if(Number.isNaN(F)&&(console.error(`Move ${H.name} returned score of NaN`),F=0),(H.name.endsWith(" (N)")||!H.applyConditions(this,h,H))&&![E.SUCKER_PUNCH,E.UPPER_HAND,E.THUNDERCLAP].includes(H.id))F=-20;else if(H.is("AttackMove")){const w=h.getMoveEffectiveness(this,H,!h.waveData.abilityRevealed,void 0,void 0,!0);h.isPlayer()!==this.isPlayer()?(F*=w,this.isOfType(H.type)&&(F*=1.5)):w&&(F/=w,this.isOfType(H.type)&&(F/=1.5)),F||(F=-20)}K.push(F)}P+=Math.max(...K),S[o]=P}const i=I.slice(0);i.sort((o,l)=>{const H=S[I.indexOf(o)],P=S[I.indexOf(l)];return H<P?1:H>P?-1:0});let C=0;if(this.aiType===bI.SMART_RANDOM)for(;C<i.length-1&&T.randBattleSeedInt(8)>=5;)C++;else if(this.aiType===bI.SMART)for(;C<i.length-1&&S[I.indexOf(i[C+1])]/S[I.indexOf(i[C])]>=0&&T.randBattleSeedInt(100)<Math.round(S[I.indexOf(i[C+1])]/S[I.indexOf(i[C])]*50);)C++;return I.map(o=>o.getName()),i.map(o=>o.getName()),{move:i[C].moveId,targets:n[i[C].moveId]}}}}return{move:E.STRUGGLE,targets:this.getNextTargets(E.STRUGGLE)}}getNextTargets(e){const I=jL(this,e),L=T.getField(!0).filter(f=>I.targets.indexOf(f.getBattlerIndex())>-1);if(I.multiple)return L.map(f=>f.getBattlerIndex());const N=FA[e],n=L.map(f=>[f.getBattlerIndex(),N.getTargetBenefitScore(this,f,N)*(f.isPlayer()===this.isPlayer()?1:-1)]).slice(0);if(n.sort((f,h)=>{const F=f[1],w=h[1];return F<w?1:F>w?-1:0}),!n.length)return N.hasAttr("CounterDamageAttr")?[KE.ATTACKER]:[];let i=n.map(f=>f[1]);const C=i[i.length-1];if(C<1)for(let f=0;f<i.length;f++)i[f]+=Math.abs(C-1);const o=i.findIndex(f=>f<i[0]/2);o>-1&&(i=i.slice(0,o));const l=[];let H=0;i.reduce((f,h)=>(f+=h,l.push(f),H=f,f),0);const P=T.randBattleSeedInt(H);let K=0;return l.every((f,h)=>P>=f?!0:(K=h,!1)),[n[K][0]]}isPlayer(){return!1}isEnemy(){return!0}hasTrainer(){return!!this.trainerSlot}isBoss(){return!!this.bossSegments}getBossSegmentIndex(){const e=this.bossSegments,I=this.getMaxHp()/e;for(let L=e-1;L>0;L--){const N=Math.round(I*L);if(this.hp>N)return L}return 0}damage(e,I=!1,L=!1,N=!1){if(this.isFainted())return 0;let S=this.isBoss()?this.bossSegmentIndex+1:0;if(this.isBoss()&&!I){const i=this.getMaxHp()/this.bossSegments;for(let C=this.bossSegmentIndex;C>0;C--){const o=i*C,l=Math.round(o);if(this.hp>=l){if(this.hp-e<=l){const H=this.hp-l;let P=0;for(;P<this.bossSegmentIndex&&this.canBypassBossSegments(P+1)&&e-H>=Math.round(i*Math.pow(2,P+1));)P++;e=UE(this.hp-o+i*P),S=C-P}break}}}switch(T.currentBattle.battleSpec){case xO.FINAL_BOSS:!this.formIndex&&this.bossSegmentIndex<1&&(e=Math.min(e,this.hp-1))}const n=super.damage(e,I,L,N);if(this.isBoss()){if(I){const i=this.getMaxHp()/this.bossSegments;S=Math.ceil(this.hp/i)}S<=this.bossSegmentIndex&&this.handleBossSegmentCleared(S),this.battleInfo.updateBossSegments(this)}return n}canBypassBossSegments(e=1){return!(T.currentBattle.battleSpec===xO.FINAL_BOSS&&!this.formIndex&&this.bossSegmentIndex-e<1)}handleBossSegmentCleared(e){for(;this.bossSegmentIndex>0&&e-1<this.bossSegmentIndex;){const I=dL.filter(o=>this.getStatStage(o)<6),L=I.map(o=>this.getStat(o,!1));let N;const S=[];let n=0;for(const o in L)n+=L[o],S.push(n);const i=DA(n);for(const o in S)if(i<S[o]){N=I[o];break}let C=1;this.bossSegments>=3&&this.bossSegmentIndex===1&&C++,this.bossSegments>=5&&this.bossSegmentIndex===2&&C++,T.phaseManager.unshiftNew("StatStageChangePhase",this.getBattlerIndex(),!0,[N],C,!0,!0),this.bossSegmentIndex--}}getFieldIndex(){return T.getEnemyField().indexOf(this)}getBattlerIndex(){return KE.ENEMY+this.getFieldIndex()}addToParty(e,I=-1){const L=T.getPlayerParty();let N=null;if(L.length<wm){this.pokeball=e,this.metLevel=this.level,this.metBiome=T.arena.biomeType,this.metWave=T.currentBattle.waveIndex,this.metSpecies=this.species.speciesId;const S=T.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);By(I,0,wm-1)?L.splice(I,0,S):L.push(S),S.setVisible(!1),N=S,T.triggerPokemonFormChange(S,UO,!0)}return N}updateEffectiveness(e){this.battleInfo.updateEffectiveness(e)}toggleFlyout(e){this.battleInfo.toggleFlyout(e)}};r(rm,"EnemyPokemon");let oI=rm;const im=class im{constructor(e){if(this.statStages=[0,0,0,0,0,0,0],this.moveQueue=[],this.tags=[],this.abilitySuppressed=!1,this.speciesForm=null,this.fusionSpeciesForm=null,this.stats=[0,0,0,0,0,0],this.types=[],this.addedType=null,this.illusion=null,this.illusionBroken=!1,this.berriesEatenLast=[],this.moveHistory=[],!SA(e)){for(const[I,L]of Object.entries(e))if(!(SA(L)&&this.hasOwnProperty(I))){if(I==="moveset"){this.moveset=L==null?void 0:L.map(N=>pA.loadMove(N));continue}if(I==="tags"){this.tags=L.map(N=>cV(N));continue}this[I]=L}}}};r(im,"PokemonSummonData");let LS=im;const Cm=class Cm{constructor(){this.turnCount=1,this.waveTurnCount=1}};r(Cm,"PokemonTempSummonData");let Pl=Cm;const Um=class Um{constructor(e){this.hitCount=0,this.hasEatenBerry=!1,this.berriesEaten=[],SA(e)||(this.hitCount=e.hitCount??0,this.hasEatenBerry=e.hasEatenBerry??!1,this.berriesEaten=e.berriesEaten??[])}};r(Um,"PokemonBattleData");let NS=Um;const om=class om{constructor(){this.endured=!1,this.abilitiesApplied=new Set,this.abilityRevealed=!1}};r(om,"PokemonWaveData");let Hl=om;const Mm=class Mm{constructor(){this.flinched=!1,this.acted=!1,this.hitCount=0,this.hitsLeft=-1,this.totalDamageDealt=0,this.singleHitDamageDealt=0,this.damageTaken=0,this.attacksReceived=[],this.statStagesIncreased=!1,this.statStagesDecreased=!1,this.moveEffectiveness=null,this.switchedInThisTurn=!1,this.failedRunAway=!1,this.joinedRound=!1,this.extraTurns=0,this.berriesEaten=[]}};r(Mm,"PokemonTurnData");let ul=Mm;var AR=(R=>(R[R.GACHA_MOVE=0]="GACHA_MOVE",R[R.GACHA_LEGENDARY=1]="GACHA_LEGENDARY",R[R.GACHA_SHINY=2]="GACHA_SHINY",R[R.SAME_SPECIES_EGG=3]="SAME_SPECIES_EGG",R[R.EVENT=4]="EVENT",R))(AR||{});const vT={[A.BULBASAUR]:B.COMMON,[A.CHARMANDER]:B.COMMON,[A.SQUIRTLE]:B.COMMON,[A.CATERPIE]:B.COMMON,[A.WEEDLE]:B.COMMON,[A.PIDGEY]:B.COMMON,[A.RATTATA]:B.COMMON,[A.SPEAROW]:B.COMMON,[A.EKANS]:B.COMMON,[A.SANDSHREW]:B.COMMON,[A.NIDORAN_F]:B.COMMON,[A.NIDORAN_M]:B.COMMON,[A.VULPIX]:B.COMMON,[A.ZUBAT]:B.COMMON,[A.ODDISH]:B.COMMON,[A.PARAS]:B.COMMON,[A.VENONAT]:B.COMMON,[A.DIGLETT]:B.COMMON,[A.MEOWTH]:B.COMMON,[A.PSYDUCK]:B.COMMON,[A.MANKEY]:B.RARE,[A.GROWLITHE]:B.RARE,[A.POLIWAG]:B.COMMON,[A.ABRA]:B.RARE,[A.MACHOP]:B.COMMON,[A.BELLSPROUT]:B.COMMON,[A.TENTACOOL]:B.COMMON,[A.GEODUDE]:B.COMMON,[A.PONYTA]:B.COMMON,[A.SLOWPOKE]:B.COMMON,[A.MAGNEMITE]:B.RARE,[A.FARFETCHD]:B.RARE,[A.DODUO]:B.COMMON,[A.SEEL]:B.COMMON,[A.GRIMER]:B.COMMON,[A.SHELLDER]:B.RARE,[A.GASTLY]:B.RARE,[A.ONIX]:B.COMMON,[A.DROWZEE]:B.COMMON,[A.KRABBY]:B.COMMON,[A.VOLTORB]:B.COMMON,[A.EXEGGCUTE]:B.COMMON,[A.CUBONE]:B.COMMON,[A.LICKITUNG]:B.RARE,[A.KOFFING]:B.COMMON,[A.RHYHORN]:B.RARE,[A.TANGELA]:B.COMMON,[A.KANGASKHAN]:B.RARE,[A.HORSEA]:B.COMMON,[A.GOLDEEN]:B.COMMON,[A.STARYU]:B.COMMON,[A.SCYTHER]:B.RARE,[A.PINSIR]:B.RARE,[A.TAUROS]:B.RARE,[A.MAGIKARP]:B.COMMON,[A.LAPRAS]:B.RARE,[A.DITTO]:B.COMMON,[A.EEVEE]:B.COMMON,[A.PORYGON]:B.RARE,[A.OMANYTE]:B.RARE,[A.KABUTO]:B.RARE,[A.AERODACTYL]:B.RARE,[A.ARTICUNO]:B.EPIC,[A.ZAPDOS]:B.EPIC,[A.MOLTRES]:B.EPIC,[A.DRATINI]:B.RARE,[A.MEWTWO]:B.LEGENDARY,[A.MEW]:B.EPIC,[A.CHIKORITA]:B.COMMON,[A.CYNDAQUIL]:B.COMMON,[A.TOTODILE]:B.COMMON,[A.SENTRET]:B.COMMON,[A.HOOTHOOT]:B.COMMON,[A.LEDYBA]:B.COMMON,[A.SPINARAK]:B.COMMON,[A.CHINCHOU]:B.COMMON,[A.PICHU]:B.RARE,[A.CLEFFA]:B.COMMON,[A.IGGLYBUFF]:B.COMMON,[A.TOGEPI]:B.COMMON,[A.NATU]:B.COMMON,[A.MAREEP]:B.COMMON,[A.HOPPIP]:B.COMMON,[A.AIPOM]:B.COMMON,[A.SUNKERN]:B.COMMON,[A.YANMA]:B.COMMON,[A.WOOPER]:B.COMMON,[A.MURKROW]:B.COMMON,[A.MISDREAVUS]:B.COMMON,[A.UNOWN]:B.COMMON,[A.GIRAFARIG]:B.COMMON,[A.PINECO]:B.COMMON,[A.DUNSPARCE]:B.COMMON,[A.GLIGAR]:B.COMMON,[A.SNUBBULL]:B.COMMON,[A.QWILFISH]:B.COMMON,[A.SHUCKLE]:B.COMMON,[A.HERACROSS]:B.RARE,[A.SNEASEL]:B.RARE,[A.TEDDIURSA]:B.RARE,[A.SLUGMA]:B.COMMON,[A.SWINUB]:B.COMMON,[A.CORSOLA]:B.COMMON,[A.REMORAID]:B.COMMON,[A.DELIBIRD]:B.COMMON,[A.SKARMORY]:B.RARE,[A.HOUNDOUR]:B.COMMON,[A.PHANPY]:B.COMMON,[A.STANTLER]:B.COMMON,[A.SMEARGLE]:B.COMMON,[A.TYROGUE]:B.COMMON,[A.SMOOCHUM]:B.COMMON,[A.ELEKID]:B.COMMON,[A.MAGBY]:B.COMMON,[A.MILTANK]:B.RARE,[A.RAIKOU]:B.EPIC,[A.ENTEI]:B.EPIC,[A.SUICUNE]:B.EPIC,[A.LARVITAR]:B.RARE,[A.LUGIA]:B.LEGENDARY,[A.HO_OH]:B.LEGENDARY,[A.CELEBI]:B.EPIC,[A.TREECKO]:B.COMMON,[A.TORCHIC]:B.COMMON,[A.MUDKIP]:B.COMMON,[A.POOCHYENA]:B.COMMON,[A.ZIGZAGOON]:B.COMMON,[A.WURMPLE]:B.COMMON,[A.LOTAD]:B.COMMON,[A.SEEDOT]:B.COMMON,[A.TAILLOW]:B.COMMON,[A.WINGULL]:B.COMMON,[A.RALTS]:B.RARE,[A.SURSKIT]:B.COMMON,[A.SHROOMISH]:B.COMMON,[A.SLAKOTH]:B.RARE,[A.NINCADA]:B.RARE,[A.WHISMUR]:B.COMMON,[A.MAKUHITA]:B.COMMON,[A.AZURILL]:B.COMMON,[A.NOSEPASS]:B.COMMON,[A.SKITTY]:B.COMMON,[A.SABLEYE]:B.COMMON,[A.MAWILE]:B.COMMON,[A.ARON]:B.COMMON,[A.MEDITITE]:B.COMMON,[A.ELECTRIKE]:B.COMMON,[A.PLUSLE]:B.COMMON,[A.MINUN]:B.COMMON,[A.VOLBEAT]:B.COMMON,[A.ILLUMISE]:B.COMMON,[A.GULPIN]:B.COMMON,[A.CARVANHA]:B.COMMON,[A.WAILMER]:B.COMMON,[A.NUMEL]:B.COMMON,[A.TORKOAL]:B.COMMON,[A.SPOINK]:B.COMMON,[A.SPINDA]:B.COMMON,[A.TRAPINCH]:B.COMMON,[A.CACNEA]:B.COMMON,[A.SWABLU]:B.COMMON,[A.ZANGOOSE]:B.RARE,[A.SEVIPER]:B.RARE,[A.LUNATONE]:B.COMMON,[A.SOLROCK]:B.COMMON,[A.BARBOACH]:B.COMMON,[A.CORPHISH]:B.COMMON,[A.BALTOY]:B.COMMON,[A.LILEEP]:B.RARE,[A.ANORITH]:B.RARE,[A.FEEBAS]:B.RARE,[A.CASTFORM]:B.COMMON,[A.KECLEON]:B.COMMON,[A.SHUPPET]:B.COMMON,[A.DUSKULL]:B.COMMON,[A.TROPIUS]:B.COMMON,[A.ABSOL]:B.RARE,[A.WYNAUT]:B.COMMON,[A.SNORUNT]:B.COMMON,[A.SPHEAL]:B.COMMON,[A.CLAMPERL]:B.COMMON,[A.RELICANTH]:B.RARE,[A.LUVDISC]:B.COMMON,[A.BAGON]:B.RARE,[A.BELDUM]:B.RARE,[A.REGIROCK]:B.EPIC,[A.REGICE]:B.EPIC,[A.REGISTEEL]:B.EPIC,[A.LATIAS]:B.EPIC,[A.LATIOS]:B.EPIC,[A.KYOGRE]:B.LEGENDARY,[A.GROUDON]:B.LEGENDARY,[A.RAYQUAZA]:B.LEGENDARY,[A.JIRACHI]:B.EPIC,[A.DEOXYS]:B.EPIC,[A.TURTWIG]:B.COMMON,[A.CHIMCHAR]:B.COMMON,[A.PIPLUP]:B.COMMON,[A.STARLY]:B.COMMON,[A.BIDOOF]:B.COMMON,[A.KRICKETOT]:B.COMMON,[A.SHINX]:B.COMMON,[A.BUDEW]:B.COMMON,[A.CRANIDOS]:B.RARE,[A.SHIELDON]:B.RARE,[A.BURMY]:B.COMMON,[A.COMBEE]:B.COMMON,[A.PACHIRISU]:B.COMMON,[A.BUIZEL]:B.COMMON,[A.CHERUBI]:B.COMMON,[A.SHELLOS]:B.COMMON,[A.DRIFLOON]:B.COMMON,[A.BUNEARY]:B.COMMON,[A.GLAMEOW]:B.COMMON,[A.CHINGLING]:B.COMMON,[A.STUNKY]:B.COMMON,[A.BRONZOR]:B.COMMON,[A.BONSLY]:B.COMMON,[A.MIME_JR]:B.COMMON,[A.HAPPINY]:B.RARE,[A.CHATOT]:B.COMMON,[A.SPIRITOMB]:B.RARE,[A.GIBLE]:B.RARE,[A.MUNCHLAX]:B.RARE,[A.RIOLU]:B.RARE,[A.HIPPOPOTAS]:B.COMMON,[A.SKORUPI]:B.COMMON,[A.CROAGUNK]:B.COMMON,[A.CARNIVINE]:B.COMMON,[A.FINNEON]:B.COMMON,[A.MANTYKE]:B.COMMON,[A.SNOVER]:B.COMMON,[A.ROTOM]:B.RARE,[A.UXIE]:B.EPIC,[A.MESPRIT]:B.EPIC,[A.AZELF]:B.EPIC,[A.DIALGA]:B.LEGENDARY,[A.PALKIA]:B.LEGENDARY,[A.HEATRAN]:B.EPIC,[A.REGIGIGAS]:B.LEGENDARY,[A.GIRATINA]:B.LEGENDARY,[A.CRESSELIA]:B.EPIC,[A.PHIONE]:B.EPIC,[A.MANAPHY]:B.EPIC,[A.DARKRAI]:B.EPIC,[A.SHAYMIN]:B.EPIC,[A.ARCEUS]:B.LEGENDARY,[A.VICTINI]:B.EPIC,[A.SNIVY]:B.COMMON,[A.TEPIG]:B.COMMON,[A.OSHAWOTT]:B.COMMON,[A.PATRAT]:B.COMMON,[A.LILLIPUP]:B.COMMON,[A.PURRLOIN]:B.COMMON,[A.PANSAGE]:B.COMMON,[A.PANSEAR]:B.COMMON,[A.PANPOUR]:B.COMMON,[A.MUNNA]:B.COMMON,[A.PIDOVE]:B.COMMON,[A.BLITZLE]:B.COMMON,[A.ROGGENROLA]:B.COMMON,[A.WOOBAT]:B.COMMON,[A.DRILBUR]:B.RARE,[A.AUDINO]:B.RARE,[A.TIMBURR]:B.RARE,[A.TYMPOLE]:B.COMMON,[A.THROH]:B.RARE,[A.SAWK]:B.RARE,[A.SEWADDLE]:B.COMMON,[A.VENIPEDE]:B.COMMON,[A.COTTONEE]:B.COMMON,[A.PETILIL]:B.COMMON,[A.BASCULIN]:B.RARE,[A.SANDILE]:B.RARE,[A.DARUMAKA]:B.RARE,[A.MARACTUS]:B.COMMON,[A.DWEBBLE]:B.COMMON,[A.SCRAGGY]:B.COMMON,[A.SIGILYPH]:B.RARE,[A.YAMASK]:B.COMMON,[A.TIRTOUGA]:B.RARE,[A.ARCHEN]:B.RARE,[A.TRUBBISH]:B.COMMON,[A.ZORUA]:B.COMMON,[A.MINCCINO]:B.COMMON,[A.GOTHITA]:B.COMMON,[A.SOLOSIS]:B.COMMON,[A.DUCKLETT]:B.COMMON,[A.VANILLITE]:B.COMMON,[A.DEERLING]:B.COMMON,[A.EMOLGA]:B.COMMON,[A.KARRABLAST]:B.COMMON,[A.FOONGUS]:B.COMMON,[A.FRILLISH]:B.COMMON,[A.ALOMOMOLA]:B.RARE,[A.JOLTIK]:B.COMMON,[A.FERROSEED]:B.COMMON,[A.KLINK]:B.COMMON,[A.TYNAMO]:B.COMMON,[A.ELGYEM]:B.COMMON,[A.LITWICK]:B.COMMON,[A.AXEW]:B.RARE,[A.CUBCHOO]:B.COMMON,[A.CRYOGONAL]:B.RARE,[A.SHELMET]:B.COMMON,[A.STUNFISK]:B.COMMON,[A.MIENFOO]:B.COMMON,[A.DRUDDIGON]:B.RARE,[A.GOLETT]:B.COMMON,[A.PAWNIARD]:B.RARE,[A.BOUFFALANT]:B.RARE,[A.RUFFLET]:B.COMMON,[A.VULLABY]:B.COMMON,[A.HEATMOR]:B.RARE,[A.DURANT]:B.RARE,[A.DEINO]:B.RARE,[A.LARVESTA]:B.RARE,[A.COBALION]:B.EPIC,[A.TERRAKION]:B.EPIC,[A.VIRIZION]:B.EPIC,[A.TORNADUS]:B.EPIC,[A.THUNDURUS]:B.EPIC,[A.RESHIRAM]:B.LEGENDARY,[A.ZEKROM]:B.LEGENDARY,[A.LANDORUS]:B.EPIC,[A.KYUREM]:B.LEGENDARY,[A.KELDEO]:B.EPIC,[A.MELOETTA]:B.EPIC,[A.GENESECT]:B.EPIC,[A.CHESPIN]:B.COMMON,[A.FENNEKIN]:B.COMMON,[A.FROAKIE]:B.COMMON,[A.BUNNELBY]:B.COMMON,[A.FLETCHLING]:B.COMMON,[A.SCATTERBUG]:B.COMMON,[A.LITLEO]:B.COMMON,[A.FLABEBE]:B.COMMON,[A.SKIDDO]:B.COMMON,[A.PANCHAM]:B.COMMON,[A.FURFROU]:B.COMMON,[A.ESPURR]:B.COMMON,[A.HONEDGE]:B.RARE,[A.SPRITZEE]:B.COMMON,[A.SWIRLIX]:B.COMMON,[A.INKAY]:B.COMMON,[A.BINACLE]:B.COMMON,[A.SKRELP]:B.COMMON,[A.CLAUNCHER]:B.COMMON,[A.HELIOPTILE]:B.COMMON,[A.TYRUNT]:B.RARE,[A.AMAURA]:B.RARE,[A.HAWLUCHA]:B.RARE,[A.DEDENNE]:B.COMMON,[A.CARBINK]:B.COMMON,[A.GOOMY]:B.RARE,[A.KLEFKI]:B.COMMON,[A.PHANTUMP]:B.COMMON,[A.PUMPKABOO]:B.COMMON,[A.BERGMITE]:B.COMMON,[A.NOIBAT]:B.RARE,[A.XERNEAS]:B.LEGENDARY,[A.YVELTAL]:B.LEGENDARY,[A.ZYGARDE]:B.LEGENDARY,[A.DIANCIE]:B.EPIC,[A.HOOPA]:B.EPIC,[A.VOLCANION]:B.EPIC,[A.ETERNAL_FLOETTE]:B.EPIC,[A.ROWLET]:B.COMMON,[A.LITTEN]:B.COMMON,[A.POPPLIO]:B.COMMON,[A.PIKIPEK]:B.COMMON,[A.YUNGOOS]:B.COMMON,[A.GRUBBIN]:B.COMMON,[A.CRABRAWLER]:B.COMMON,[A.ORICORIO]:B.COMMON,[A.CUTIEFLY]:B.COMMON,[A.ROCKRUFF]:B.COMMON,[A.WISHIWASHI]:B.COMMON,[A.MAREANIE]:B.COMMON,[A.MUDBRAY]:B.COMMON,[A.DEWPIDER]:B.COMMON,[A.FOMANTIS]:B.COMMON,[A.MORELULL]:B.COMMON,[A.SALANDIT]:B.COMMON,[A.STUFFUL]:B.COMMON,[A.BOUNSWEET]:B.COMMON,[A.COMFEY]:B.RARE,[A.ORANGURU]:B.RARE,[A.PASSIMIAN]:B.RARE,[A.WIMPOD]:B.COMMON,[A.SANDYGAST]:B.COMMON,[A.PYUKUMUKU]:B.COMMON,[A.TYPE_NULL]:B.EPIC,[A.MINIOR]:B.RARE,[A.KOMALA]:B.COMMON,[A.TURTONATOR]:B.RARE,[A.TOGEDEMARU]:B.COMMON,[A.MIMIKYU]:B.RARE,[A.BRUXISH]:B.RARE,[A.DRAMPA]:B.RARE,[A.DHELMISE]:B.RARE,[A.JANGMO_O]:B.RARE,[A.TAPU_KOKO]:B.EPIC,[A.TAPU_LELE]:B.EPIC,[A.TAPU_BULU]:B.EPIC,[A.TAPU_FINI]:B.EPIC,[A.COSMOG]:B.LEGENDARY,[A.NIHILEGO]:B.EPIC,[A.BUZZWOLE]:B.EPIC,[A.PHEROMOSA]:B.EPIC,[A.XURKITREE]:B.EPIC,[A.CELESTEELA]:B.EPIC,[A.KARTANA]:B.EPIC,[A.GUZZLORD]:B.EPIC,[A.NECROZMA]:B.LEGENDARY,[A.MAGEARNA]:B.EPIC,[A.MARSHADOW]:B.EPIC,[A.POIPOLE]:B.EPIC,[A.STAKATAKA]:B.EPIC,[A.BLACEPHALON]:B.EPIC,[A.ZERAORA]:B.EPIC,[A.MELTAN]:B.EPIC,[A.ALOLA_RATTATA]:B.COMMON,[A.ALOLA_SANDSHREW]:B.RARE,[A.ALOLA_VULPIX]:B.RARE,[A.ALOLA_DIGLETT]:B.RARE,[A.ALOLA_MEOWTH]:B.RARE,[A.ALOLA_GEODUDE]:B.RARE,[A.ALOLA_GRIMER]:B.RARE,[A.GROOKEY]:B.COMMON,[A.SCORBUNNY]:B.COMMON,[A.SOBBLE]:B.COMMON,[A.SKWOVET]:B.COMMON,[A.ROOKIDEE]:B.COMMON,[A.BLIPBUG]:B.COMMON,[A.NICKIT]:B.COMMON,[A.GOSSIFLEUR]:B.COMMON,[A.WOOLOO]:B.COMMON,[A.CHEWTLE]:B.COMMON,[A.YAMPER]:B.COMMON,[A.ROLYCOLY]:B.COMMON,[A.APPLIN]:B.COMMON,[A.SILICOBRA]:B.COMMON,[A.CRAMORANT]:B.COMMON,[A.ARROKUDA]:B.COMMON,[A.TOXEL]:B.COMMON,[A.SIZZLIPEDE]:B.COMMON,[A.CLOBBOPUS]:B.COMMON,[A.SINISTEA]:B.COMMON,[A.HATENNA]:B.COMMON,[A.IMPIDIMP]:B.COMMON,[A.MILCERY]:B.COMMON,[A.FALINKS]:B.RARE,[A.PINCURCHIN]:B.COMMON,[A.SNOM]:B.COMMON,[A.STONJOURNER]:B.COMMON,[A.EISCUE]:B.COMMON,[A.INDEEDEE]:B.RARE,[A.MORPEKO]:B.COMMON,[A.CUFANT]:B.COMMON,[A.DRACOZOLT]:B.RARE,[A.ARCTOZOLT]:B.RARE,[A.DRACOVISH]:B.RARE,[A.ARCTOVISH]:B.RARE,[A.DURALUDON]:B.RARE,[A.DREEPY]:B.RARE,[A.ZACIAN]:B.LEGENDARY,[A.ZAMAZENTA]:B.LEGENDARY,[A.ETERNATUS]:B.LEGENDARY,[A.KUBFU]:B.EPIC,[A.ZARUDE]:B.EPIC,[A.REGIELEKI]:B.EPIC,[A.REGIDRAGO]:B.EPIC,[A.GLASTRIER]:B.EPIC,[A.SPECTRIER]:B.EPIC,[A.CALYREX]:B.LEGENDARY,[A.ENAMORUS]:B.EPIC,[A.GALAR_MEOWTH]:B.RARE,[A.GALAR_PONYTA]:B.RARE,[A.GALAR_SLOWPOKE]:B.RARE,[A.GALAR_FARFETCHD]:B.RARE,[A.GALAR_ARTICUNO]:B.EPIC,[A.GALAR_ZAPDOS]:B.EPIC,[A.GALAR_MOLTRES]:B.EPIC,[A.GALAR_CORSOLA]:B.RARE,[A.GALAR_ZIGZAGOON]:B.RARE,[A.GALAR_DARUMAKA]:B.RARE,[A.GALAR_YAMASK]:B.RARE,[A.GALAR_STUNFISK]:B.RARE,[A.HISUI_GROWLITHE]:B.RARE,[A.HISUI_VOLTORB]:B.RARE,[A.HISUI_QWILFISH]:B.RARE,[A.HISUI_SNEASEL]:B.RARE,[A.HISUI_ZORUA]:B.RARE,[A.SPRIGATITO]:B.COMMON,[A.FUECOCO]:B.COMMON,[A.QUAXLY]:B.COMMON,[A.LECHONK]:B.COMMON,[A.TAROUNTULA]:B.COMMON,[A.NYMBLE]:B.COMMON,[A.PAWMI]:B.COMMON,[A.TANDEMAUS]:B.RARE,[A.FIDOUGH]:B.COMMON,[A.SMOLIV]:B.COMMON,[A.SQUAWKABILLY]:B.COMMON,[A.NACLI]:B.RARE,[A.CHARCADET]:B.RARE,[A.TADBULB]:B.COMMON,[A.WATTREL]:B.COMMON,[A.MASCHIFF]:B.COMMON,[A.SHROODLE]:B.COMMON,[A.BRAMBLIN]:B.COMMON,[A.TOEDSCOOL]:B.COMMON,[A.KLAWF]:B.COMMON,[A.CAPSAKID]:B.COMMON,[A.RELLOR]:B.COMMON,[A.FLITTLE]:B.COMMON,[A.TINKATINK]:B.RARE,[A.WIGLETT]:B.COMMON,[A.BOMBIRDIER]:B.COMMON,[A.FINIZEN]:B.RARE,[A.VAROOM]:B.RARE,[A.CYCLIZAR]:B.RARE,[A.ORTHWORM]:B.RARE,[A.GLIMMET]:B.RARE,[A.GREAVARD]:B.COMMON,[A.FLAMIGO]:B.RARE,[A.CETODDLE]:B.COMMON,[A.VELUZA]:B.RARE,[A.DONDOZO]:B.RARE,[A.TATSUGIRI]:B.RARE,[A.GREAT_TUSK]:B.EPIC,[A.SCREAM_TAIL]:B.EPIC,[A.BRUTE_BONNET]:B.EPIC,[A.FLUTTER_MANE]:B.EPIC,[A.SLITHER_WING]:B.EPIC,[A.SANDY_SHOCKS]:B.EPIC,[A.IRON_TREADS]:B.EPIC,[A.IRON_BUNDLE]:B.EPIC,[A.IRON_HANDS]:B.EPIC,[A.IRON_JUGULIS]:B.EPIC,[A.IRON_MOTH]:B.EPIC,[A.IRON_THORNS]:B.EPIC,[A.FRIGIBAX]:B.RARE,[A.GIMMIGHOUL]:B.RARE,[A.WO_CHIEN]:B.EPIC,[A.CHIEN_PAO]:B.EPIC,[A.TING_LU]:B.EPIC,[A.CHI_YU]:B.EPIC,[A.ROARING_MOON]:B.EPIC,[A.IRON_VALIANT]:B.EPIC,[A.KORAIDON]:B.LEGENDARY,[A.MIRAIDON]:B.LEGENDARY,[A.WALKING_WAKE]:B.EPIC,[A.IRON_LEAVES]:B.EPIC,[A.POLTCHAGEIST]:B.RARE,[A.OKIDOGI]:B.EPIC,[A.MUNKIDORI]:B.EPIC,[A.FEZANDIPITI]:B.EPIC,[A.OGERPON]:B.EPIC,[A.GOUGING_FIRE]:B.EPIC,[A.RAGING_BOLT]:B.EPIC,[A.IRON_BOULDER]:B.EPIC,[A.IRON_CROWN]:B.EPIC,[A.TERAPAGOS]:B.LEGENDARY,[A.PECHARUNT]:B.EPIC,[A.PALDEA_TAUROS]:B.RARE,[A.PALDEA_WOOPER]:B.RARE,[A.BLOODMOON_URSALUNA]:B.EPIC},eC=1073741824,Dm=class Dm{get id(){return this._id}get tier(){return this._tier}get sourceType(){return this._sourceType}get hatchWaves(){return this._hatchWaves}set hatchWaves(e){this._hatchWaves=e}get timestamp(){return this._timestamp}get species(){return this._species}get isShiny(){return this._isShiny}get variantTier(){return this._variantTier}get eggMoveIndex(){return this._eggMoveIndex}get overrideHiddenAbility(){return this._overrideHiddenAbility}constructor(e){const I=r(N=>{this._sourceType=N==null?void 0:N.sourceType,this._tier=(N==null?void 0:N.tier)??aE.EGG_TIER_OVERRIDE??this.rollEggTier(),N!=null&&N.pulled&&this.checkForPityTierOverrides(),this._id=(N==null?void 0:N.id)??we(eC,eC*this._tier),this._sourceType=(N==null?void 0:N.sourceType)??void 0,this._hatchWaves=(N==null?void 0:N.hatchWaves)??this.getEggTierDefaultHatchWaves(),this._timestamp=(N==null?void 0:N.timestamp)??new Date().getTime(),this._isShiny=(N==null?void 0:N.isShiny)??(aE.EGG_SHINY_OVERRIDE||this.rollShiny()),this._variantTier=(N==null?void 0:N.variantTier)??aE.EGG_VARIANT_OVERRIDE??this.rollVariant(),this._species=(N==null?void 0:N.species)??this.rollSpecies(),this._overrideHiddenAbility=(N==null?void 0:N.overrideHiddenAbility)??!1,N!=null&&N.species&&(this._tier=this.getEggTier(),this._hatchWaves=N.hatchWaves??this.getEggTierDefaultHatchWaves()),this._species&&!YA(this._species).hasVariants()&&(this._variantTier=tI.STANDARD),this._eggMoveIndex=(N==null?void 0:N.eggMoveIndex)??this.rollEggMoveIndex(),N!=null&&N.pulled&&(this.increasePullStatistic(),this.addEggToGameData())},"generateEggProperties"),L=tH(24);T.executeWithSeedOffset(()=>{I(e)},0,L),this._eggDescriptor=e==null?void 0:e.eggDescriptor}isManaphyEgg(){return this._species===A.PHIONE||this._species===A.MANAPHY||this._tier===B.COMMON&&!(this._id%204)&&!this._species}getKey(){return this.isManaphyEgg()?"manaphy":this._tier.toString()}generatePlayerPokemon(){let e;const I=r(()=>{this._species||(this._isShiny=this.rollShiny(),this._species=this.rollSpecies());let L=YA(this._species);this._species===A.PHIONE&&this._sourceType===AR.SAME_SPECIES_EGG&&(L=YA(DA(N4)?A.PHIONE:A.MANAPHY));let N;const S=this._sourceType===AR.SAME_SPECIES_EGG&&!DA(mv),n=this._sourceType!==AR.SAME_SPECIES_EGG&&!DA(yv);L.abilityHidden&&(this._overrideHiddenAbility||S||n)&&(N=2),e=T.addPlayerPokemon(L,1,N,void 0,void 0,!1),e.shiny=this._isShiny,e.variant=this._variantTier;const i=b4(DA(4294967295));for(let C=0;C<e.ivs.length;C++)e.ivs[C]=Math.max(e.ivs[C],i[C])},"generatePlayerPokemonHelper");return e=e,T.executeWithSeedOffset(()=>{I()},this._id,eC.toString()),e}addEggToGameData(){T.gameData.eggs.push(this)}getEggDescriptor(){if(this.isManaphyEgg())return"Manaphy";switch(this.tier){case B.RARE:return _.t("egg:greatTier");case B.EPIC:return _.t("egg:ultraTier");case B.LEGENDARY:return _.t("egg:masterTier");default:return _.t("egg:defaultTier")}}getEggHatchWavesMessage(){return this.hatchWaves<=5?_.t("egg:hatchWavesMessageSoon"):this.hatchWaves<=15?_.t("egg:hatchWavesMessageClose"):this.hatchWaves<=50?_.t("egg:hatchWavesMessageNotClose"):_.t("egg:hatchWavesMessageLongTime")}getEggTypeDescriptor(){switch(this.sourceType){case AR.SAME_SPECIES_EGG:return this._eggDescriptor??_.t("egg:sameSpeciesEgg",{species:YA(this._species).getName()});case AR.GACHA_LEGENDARY:return this._eggDescriptor??`${_.t("egg:gachaTypeLegendary")} (${YA(S4(this.timestamp)).getName()})`;case AR.GACHA_SHINY:return this._eggDescriptor??_.t("egg:gachaTypeShiny");case AR.GACHA_MOVE:return this._eggDescriptor??_.t("egg:gachaTypeMove");case AR.EVENT:return this._eggDescriptor??_.t("egg:eventType");default:return console.warn("getEggTypeDescriptor case not defined. Returning default empty string"),""}}rollEggMoveIndex(){let e=Vv;switch(this._sourceType){case AR.SAME_SPECIES_EGG:e=wv;break;case AR.GACHA_MOVE:e=vv;break}const I=this.isManaphyEgg()?2:Math.pow(2,3-this.tier);return DA(e*I)?DA(3):3}getEggTierDefaultHatchWaves(e){if(this._species===A.PHIONE||this._species===A.MANAPHY)return hv;switch(e??this._tier){case B.COMMON:return fv;case B.RARE:return Fv;case B.EPIC:return Yv}return Wv}rollEggTier(){const e=this._sourceType===AR.GACHA_LEGENDARY?L4:0,I=we(256);return I>=Pv+e?B.COMMON:I>=Hv+e?B.RARE:I>=uv+e?B.EPIC:B.LEGENDARY}rollSpecies(){if(!T)return null;if(this.isManaphyEgg())return DA(N4)!==1?A.PHIONE:A.MANAPHY;if(this.tier===B.LEGENDARY&&this._sourceType===AR.GACHA_LEGENDARY&&!DA(2))return S4(this.timestamp);let e,I;switch(this.tier){case B.RARE:e=4,I=5;break;case B.EPIC:e=6,I=7;break;case B.LEGENDARY:e=8,I=9;break;default:e=1,I=3;break}const L=[A.PHIONE,A.MANAPHY,A.ETERNATUS];let N=Object.keys(vT).filter(o=>vT[o]===this.tier).map(o=>Number.parseInt(o)).filter(o=>!Fe.hasOwnProperty(o)&&YA(o).isObtainable()&&L.indexOf(o)===-1);if(T.gameData.unlockPity[this.tier]>=9){const o=N.filter(l=>!T.gameData.dexData[l].caughtAttr&&!T.gameData.eggs.some(H=>H.species===l));o.length&&(N=o)}this.variantTier&&(this.variantTier===tI.RARE||this.variantTier===tI.EPIC)&&(N=N.filter(o=>YA(o).hasVariants()));let S=0;const n=[];for(const o of N){const l=Phaser.Math.Clamp(FR[o],e,I),H=Math.floor(((I-l)/(I-e+1)*1.5+1)*100);n.push(S+H),S+=H}let i;const C=DA(S);for(let o=0;o<n.length;o++)if(C<n[o]){i=N[o];break}return i=i,T.gameData.dexData[i].caughtAttr||T.gameData.eggs.some(o=>o.species===i)?T.gameData.unlockPity[this.tier]=Math.min(T.gameData.unlockPity[this.tier]+1,10):T.gameData.unlockPity[this.tier]=0,i}rollShiny(){let e=dv;switch(this._sourceType){case AR.GACHA_SHINY:e=pv;break;case AR.SAME_SPECIES_EGG:e=gv;break}return!DA(e)}rollVariant(){if(!this.isShiny)return tI.STANDARD;const e=DA(10);return e>=g3?tI.STANDARD:e>=m3?tI.RARE:tI.EPIC}checkForPityTierOverrides(){const e=this._sourceType===AR.GACHA_LEGENDARY?L4:0;T.gameData.eggPity[B.RARE]+=1,T.gameData.eggPity[B.EPIC]+=1,T.gameData.eggPity[B.LEGENDARY]+=1+e,T.gameData.eggPity[B.LEGENDARY]>=cv&&this._tier===B.COMMON?this._tier=B.LEGENDARY:T.gameData.eggPity[B.EPIC]>=Bv&&this._tier===B.COMMON?this._tier=B.EPIC:T.gameData.eggPity[B.RARE]>=Kv&&this._tier===B.COMMON&&(this._tier=B.RARE),T.gameData.eggPity[this._tier]=0}increasePullStatistic(){if(T.gameData.gameStats.eggsPulled++,this.isManaphyEgg()){T.gameData.gameStats.manaphyEggsPulled++,this._hatchWaves=this.getEggTierDefaultHatchWaves(B.EPIC);return}switch(this.tier){case B.RARE:T.gameData.gameStats.rareEggsPulled++;break;case B.EPIC:T.gameData.gameStats.epicEggsPulled++;break;case B.LEGENDARY:T.gameData.gameStats.legendaryEggsPulled++;break}}getEggTier(){return vT[this.species]??B.COMMON}};r(Dm,"Egg");let eH=Dm;function Zv(){return Object.entries(vT).filter(R=>R[1]===B.LEGENDARY).map(R=>Number.parseInt(R[0])).filter(R=>YA(R).isObtainable()&&R!==A.ETERNATUS)}r(Zv,"getValidLegendaryGachaSpecies");function S4(R){const e=Zv();let I;const N=new Date(R).getTime(),S=Math.floor(Math.floor(N/864e5)/e.length),n=Math.floor(N/864e5)%e.length;return T.executeWithSeedOffset(()=>{I=Phaser.Math.RND.shuffle(e)[n]},S,eC.toString()),I=I,I}r(S4,"getLegendaryGachaSpeciesForTimestamp");function KZ(R){return vT[R.getRootSpeciesId()]}r(KZ,"getEggTierForSpecies");function fZ(){const R=T.add.sprite(0,0,"encounter_exclaim");R.setName("exclamation"),T.field.add(R),T.field.moveTo(R,T.field.getAll().length-1),R.setVisible(!0),R.setPosition(110,68),T.tweens.add({targets:R,y:"-=25",ease:"Cubic.easeOut",duration:300,yoyo:!0,onComplete:r(()=>{T.time.delayedCall(800,()=>{T.field.remove(R,!0)})},"onComplete")}),T.playSound("battle_anims/GEN8- Exclaim",{volume:.7})}r(fZ,"doTrainerExclamation");async function se(R){var o,l;const e=[],I=T.currentBattle;let L=(R==null?void 0:R.doubleBattle)??!1;const N=R==null?void 0:R.trainerType,S=R==null?void 0:R.trainerConfig;let n;if(!SA(N)||S){T.currentBattle.mysteryEncounter.encounterMode=DO.TRAINER_BATTLE,T.currentBattle.trainer&&(T.currentBattle.trainer.setVisible(!1),T.currentBattle.trainer.destroy()),n=S||he[N];const H=n.doubleOnly||n.hasDouble&&!!R.doubleBattle;L=H;const P=SA(R.female)?!!DA(2):R.female,K=new cO(n.trainerType,H?PE.DOUBLE:P?PE.FEMALE:PE.DEFAULT,void 0,void 0,void 0,n);K.x+=300,K.setVisible(!1),T.field.add(K),T.currentBattle.trainer=K,e.push(K.loadAssets().then(()=>K.initSprite())),I.enemyLevels=T.currentBattle.trainer.getPartyLevels(T.currentBattle.waveIndex)}else{T.currentBattle.mysteryEncounter.encounterMode=DO.WILD_BATTLE;const H=R!=null&&R.pokemonConfigs&&R.pokemonConfigs.length>0?(o=R==null?void 0:R.pokemonConfigs)==null?void 0:o.length:L?2:1;I.enemyLevels=new Array(H).fill(null).map(()=>T.currentBattle.getLevelForWave())}T.getEnemyParty().forEach(H=>{H.leaveField(!0,!0,!0)}),I.enemyParty=[],I.double=L;const i=SA(R.levelAdditiveModifier)?0:R.levelAdditiveModifier,C=Math.max(Math.round(T.currentBattle.waveIndex/10*i),0);I.enemyLevels=I.enemyLevels.map(H=>H+C),I.enemyLevels.forEach((H,P)=>{let K,f,h=!1;if((!SA(N)||n)&&I.trainer)if(R!=null&&R.pokemonConfigs&&P<R.pokemonConfigs.length){const m=R.pokemonConfigs[P];H=m.level?m.level:H,f=m.dataSource,K=m.species,h=m.isBoss,I.enemyParty[P]=T.addEnemyPokemon(K,H,v.TRAINER,h,!1,f)}else I.enemyParty[P]=I.trainer.genPartyMember(P);else{if(R!=null&&R.pokemonConfigs&&P<R.pokemonConfigs.length){const m=R.pokemonConfigs[P];H=m.level?m.level:H,f=m.dataSource,K=m.species,h=m.isBoss,h&&(T.currentBattle.mysteryEncounter.encounterMode=DO.BOSS_BATTLE)}else K=T.randomSpecies(I.waveIndex,H,!0);I.enemyParty[P]=T.addEnemyPokemon(K,H,v.NONE,h,!1,f)}const F=T.getEnemyParty()[P];if(F.hp=F.getMaxHp(),F.status=null,F.passive=!1,P<(L?2:1)&&(F.setX(-66+F.getFieldPositionOffset()[0]),F.resetSummonData()),(SA(R.countAsSeen)||R.countAsSeen)&&T.gameData.setPokemonSeen(F,!0,!!(N||n)),R!=null&&R.pokemonConfigs&&P<R.pokemonConfigs.length){const m=R.pokemonConfigs[P];if(SA(m.nickname)||(F.nickname=btoa(unescape(encodeURIComponent(m.nickname)))),m.dataSource&&(F.id=DA(4294967296)),SA(m.formIndex)||(F.formIndex=m.formIndex),SA(m.shiny)||(F.shiny=m.shiny),F.shiny&&!SA(m.variant)&&(F.variant=m.variant),SA(m.customPokemonData)||(F.customPokemonData=m.customPokemonData),m.isBoss){let x=SA(m.bossSegments)?T.getEncounterBossSegments(T.currentBattle.waveIndex,H,K,!0):m.bossSegments;SA(m.bossSegmentModifier)||(x+=m.bossSegmentModifier),F.setBoss(!0,x)}m.passive&&(F.passive=!0),m.nature&&(F.nature=m.nature),m.ivs&&(F.ivs=m.ivs);const y=m.status;if(y){const x=Array.isArray(y)?y[0]:y,q=Array.isArray(y)?y[1]:y===J.SLEEP?3:void 0;F.status=new pL(x,0,q)}if(SA(m.abilityIndex)||(F.abilityIndex=m.abilityIndex),SA(m.gender)||(F.gender=m.gender,F.summonData.gender=m.gender),SA(m.aiType)||(F.aiType=m.aiType),m!=null&&m.moveSet&&m.moveSet.length>0){const x=m.moveSet.map(q=>new pA(q));F.moveset=x,F.summonData.moveset=x}m.tags&&m.tags.length>0&&m.tags.forEach(q=>F.addTag(q)),m.tera&&m.tera!==t.UNKNOWN&&(F.teraType=m.tera,I.trainer&&I.trainer.config.setInstantTera(P)),m.mysteryEncounterBattleEffects&&(F.mysteryEncounterBattleEffects=m.mysteryEncounterBattleEffects),F.isShiny()&&!F.shinySparkle&&F.initShinySparkle(),F.initBattleInfo(),F.getBattleInfo().initInfo(F),F.generateName()}e.push(F.loadAssets()),`${F.stats[0]}${F.ivs[0]}`,`${F.stats[1]}${F.ivs[1]}`,`${F.stats[2]}${F.ivs[2]}`,`${F.stats[3]}${F.ivs[3]}`,`${F.stats[4]}${F.ivs[4]}`,`${F.stats[5]}${F.ivs[5]}`;const w=[];F.getMoveset().forEach(m=>{w.push(m.getName())}),`${Q(F)}`,`${F.species.speciesId}`,`${F.level}`,`${kt(F.nature,!0,!0,!0)}`,`${F.getAbility().name}`,F.hasPassive(),`${F.getPassiveAbility().name}`,F.isBoss()&&`${F.bossSegments}`}),T.phaseManager.pushNew("MysteryEncounterBattlePhase",R.disableSwitch),await Promise.all(e),I.enemyParty.forEach((H,P)=>{P<(L?2:1)&&(H.setVisible(!1),I.double&&H.setFieldPosition(P?vO.RIGHT:vO.LEFT),H.x+=300)});{t_(T.getEnemyField(),I.battleType===yE.TRAINER?cE.TRAINER:cE.WILD);const H=(l=R==null?void 0:R.pokemonConfigs)==null?void 0:l.filter(P=>P==null?void 0:P.modifierConfigs).map(P=>P.modifierConfigs);T.generateEnemyModifiers(H)}}r(se,"initBattleWithEnemyConfig");function Zr(R){return R=ue(R),Promise.all(R.map(e=>L3(e))).then(()=>N3(R))}r(Zr,"loadCustomMovesForEncounter");function YO(R,e=!0,I=!0){T.money=Math.min(Math.max(T.money+R,0),Number.MAX_SAFE_INTEGER),T.updateMoneyText(),T.animateMoneyChanged(!1),e&&T.playSound("se/buy"),I&&(R<0?T.phaseManager.queueMessage(_.t("mysteryEncounterMessages:paid_money",{amount:-R}),null,!0):T.phaseManager.queueMessage(_.t("mysteryEncounterMessages:receive_money",{amount:R}),null,!0))}r(YO,"updatePlayerMoney");function qA(R,e){const I=Object.keys(k).find(N=>k[N]===R);if(!I)return null;let L=k[I]();return L=L.withIdFromFunc(k[I]).withTierFromPool(cE.PLAYER,T.getPlayerParty()),L instanceof Xe?L.generateType(T.getPlayerParty(),e):L}r(qA,"generateModifierType");function Ue(R,e){const I=qA(R,e);return I&&new TR(I,0)}r(Ue,"generateModifierTypeOption");function RR(R,e,I){return new Promise(L=>{const N=T.ui.getMode();T.ui.setMode(hE.PARTY,wr.SELECT,-1,(S,n)=>{S<T.getPlayerParty().length?T.ui.setMode(N).then(()=>{const i=T.getPlayerParty()[S],C=R(i);if(!C){T.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",i.getNameToRender()),L(!0);return}T.ui.setMode(hE.MESSAGE).then(()=>{var H,P,K;const o=r(()=>{const f=C.map(F=>{const w=F.handler;return F.handler=()=>(w(),T.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",i.getNameToRender()),L(!0),!0),F}).concat({label:_.t("menu:cancel"),handler:r(()=>(T.ui.clearText(),T.ui.setMode(N),L(!1),!0),"handler"),onHover:r(()=>{HE(_.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),h={options:f,maxOptions:7,yOffset:0,supportHover:!0};f[0].onHover&&f[0].onHover(),T.ui.setModeWithoutClear(hE.OPTION_SELECT,h,null,!0)},"displayOptions"),l=(K=(P=(H=T.currentBattle.mysteryEncounter)==null?void 0:H.selectedOption)==null?void 0:P.dialogue)==null?void 0:K.secondOptionPrompt;l?HE(l).then(()=>o()):o()})}):T.ui.setMode(N).then(()=>{e&&e(),L(!1)})},I)})}r(RR,"selectPokemonForOption");function bv(R,e,I,L){return new Promise(N=>{const S=T.ui.getMode(),n=r(l=>{T.ui.setMode(hE.MESSAGE).then(()=>{e?HE(e).then(()=>{C[0].onHover&&C[0].onHover(),T.ui.setMode(hE.OPTION_SELECT,l)}):(C[0].onHover&&C[0].onHover(),T.ui.setMode(hE.OPTION_SELECT,l))})},"displayOptions"),i=r(l=>{T.ui.setMode(hE.PARTY,wr.SELECT,-1,(H,P)=>{H<T.getPlayerParty().length?T.ui.setMode(S).then(()=>{N({selectedPokemonIndex:H,selectedOptionIndex:l})}):n(o)},I)},"selectPokemonAfterOption"),C=R.map((l,H)=>{const P=l.handler;return l.handler=()=>(P(),i(H),!0),l}).concat({label:_.t("menu:cancel"),handler:r(()=>(T.ui.clearText(),T.ui.setMode(S),N(null),!0),"handler"),onHover:r(()=>{L&&L(),HE(_.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),o={options:C,maxOptions:7,yOffset:0,supportHover:!0};n(o)})}r(bv,"selectOptionThenPokemon");function TE(R,e,I){T.currentBattle.mysteryEncounter.doEncounterRewards=()=>(I&&I(),R?T.phaseManager.unshiftNew("SelectModifierPhase",0,void 0,R):T.phaseManager.tryRemovePhase(L=>L.is("MysteryEncounterRewardsPhase")),e&&e.forEach(L=>{new eH(L).addEggToGameData()}),!0)}r(TE,"setEncounterRewards");function RO(R,e,I=!0){const L=ue(R);T.currentBattle.mysteryEncounter.doEncounterExp=()=>(T.phaseManager.unshiftNew("PartyExpPhase",e,I,new Set(L)),!0)}r(RO,"setEncounterExp");function yr(R){T.phaseManager.pushNew("MysteryEncounterPhase",R)}r(yr,"initSubsequentOptionSelect");function IE(R=!1,e=DO.NO_BATTLE){T.currentBattle.mysteryEncounter.encounterMode=e,T.phaseManager.clearPhaseQueue(),T.phaseManager.clearPhaseQueueSplice(),kv(R)}r(IE,"leaveEncounterWithoutBattle");function kv(R=!1,e=!1){if(T.getPlayerParty().filter(N=>N.isAllowedInBattle()).length===0){T.phaseManager.clearPhaseQueue(),T.phaseManager.unshiftNew("GameOverPhase");return}const L=T.currentBattle.mysteryEncounter;L.continuousEncounter||e||(L.encounterMode===DO.NO_BATTLE?(T.phaseManager.pushNew("MysteryEncounterRewardsPhase",R),T.phaseManager.pushNew("EggLapsePhase")):T.getEnemyParty().find(N=>L.encounterMode!==DO.TRAINER_BATTLE?N.isOnField():!(N!=null&&N.isFainted(!0)))||(T.phaseManager.pushNew("BattleEndPhase",!0),L.encounterMode===DO.TRAINER_BATTLE&&T.phaseManager.pushNew("TrainerVictoryPhase"),(T.gameMode.isEndless||!T.gameMode.isWaveFinal(T.currentBattle.waveIndex))&&(T.phaseManager.pushNew("MysteryEncounterRewardsPhase",R),L.doContinueEncounter||T.phaseManager.pushNew("EggLapsePhase"))))}r(kv,"handleMysteryEncounterVictory");function Xv(R=!1,e=!1){if(T.getPlayerParty().filter(N=>N.isAllowedInBattle()).length===0){T.phaseManager.clearPhaseQueue(),T.phaseManager.unshiftNew("GameOverPhase");return}const L=T.currentBattle.mysteryEncounter;L.continuousEncounter||e||(L.encounterMode!==DO.NO_BATTLE&&T.phaseManager.pushNew("BattleEndPhase",!1),T.phaseManager.pushNew("MysteryEncounterRewardsPhase",R),L.doContinueEncounter||T.phaseManager.pushNew("EggLapsePhase"))}r(Xv,"handleMysteryEncounterBattleFailed");function Te(R=!0,e=!0,I=750){return new Promise(L=>{const N=T.currentBattle.mysteryEncounter.introVisuals,S=T.getEnemyField();S&&(T.currentBattle.enemyParty=[]),N?(R||(N.setVisible(!0),N.x=244,N.y=60,N.alpha=0),T.tweens.add({targets:[N,S],x:`${R?"+":"-"}=16`,y:`${R?"-":"+"}=16`,alpha:R?0:1,ease:"Sine.easeInOut",duration:I,onComplete:r(()=>{R&&e&&(T.field.remove(N,!0),S.forEach(n=>{n.leaveField(!0,!0,!0)}),T.currentBattle.mysteryEncounter.introVisuals=void 0),L(!0)},"onComplete")})):L(!0)})}r(Te,"transitionMysteryEncounterIntroVisuals");function FZ(){const R=T.currentBattle.mysteryEncounter;T.currentBattle.isBattleMysteryEncounter()&&R&&R.encounterMode!==DO.NO_BATTLE&&!R.startOfBattleEffectsComplete&&(R.startOfBattleEffects.forEach(I=>{let L;I.sourcePokemon?L=I.sourcePokemon:SA(I.sourceBattlerIndex)?L=T.getEnemyField()[0]:I.sourceBattlerIndex===KE.ATTACKER?L=T.getEnemyField()[0]:I.sourceBattlerIndex===KE.ENEMY?L=T.getEnemyField()[0]:I.sourceBattlerIndex===KE.ENEMY_2?L=T.getEnemyField()[1]:I.sourceBattlerIndex===KE.PLAYER?L=T.getPlayerField()[0]:I.sourceBattlerIndex===KE.PLAYER_2&&(L=T.getPlayerField()[1]),T.phaseManager.pushNew("MovePhase",L,I.targets,I.move,I.followUp,I.ignorePp)}),T.phaseManager.pushNew("MysteryEncounterBattleStartCleanupPhase"),R.startOfBattleEffectsComplete=!0)}r(FZ,"handleMysteryEncounterBattleStartEffects");function YZ(){const R=T.currentBattle.mysteryEncounter;return T.currentBattle.isBattleMysteryEncounter()&&R&&R.onTurnStart?R.onTurnStart():!1}r(YZ,"handleMysteryEncounterTurnStartEffects");function uH(R,e=!1,I=!1){let L,N=!1;const S=pe.getEventEncounters();let n;if(S.length>0&&DA(2)===1){const C=He(S),o=YA(C.species).getWildSpeciesForLevel(R,!C.blockEvolution,e,T.gameMode);N=!0,L=YA(o),n=C.formIndex}else L=T.arena.randomSpecies(T.currentBattle.waveIndex,R,0,Jn(T.getPlayerParty()),e);const i=new oI(L,R,v.NONE,e);return n&&(i.formIndex=n),N&&i.trySetShinySeed(),I&&i.abilityIndex!==2&&i.species.abilityHidden&&i.tryRerollHiddenAbilitySeed(),i}r(uH,"getRandomEncounterSpecies");const MR="mysteryEncounters/darkDeal",Qv=[A.NECROZMA,A.COSMOG,A.COSMOEM,A.SOLGALEO,A.LUNALA,A.ETERNATUS,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.ROARING_MOON,A.KORAIDON,A.WALKING_WAKE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.IRON_VALIANT,A.MIRAIDON,A.IRON_LEAVES,A.IRON_BOULDER,A.IRON_CROWN,A.MEW,A.CELEBI,A.DEOXYS,A.JIRACHI,A.DARKRAI,A.PHIONE,A.MANAPHY,A.ARCEUS,A.SHAYMIN,A.VICTINI,A.MELOETTA,A.KELDEO,A.GENESECT,A.DIANCIE,A.HOOPA,A.VOLCANION,A.MAGEARNA,A.MARSHADOW,A.ZERAORA,A.ZARUDE,A.MELTAN,A.MELMETAL,A.PECHARUNT],Jv=qE.withEncounterType(WA.DARK_DEAL).withEncounterTier(xE.ROGUE).withIntroSpriteConfigs([{spriteKey:"dark_deal_scientist",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"dark_deal_porygon",fileRoot:"mystery-encounters",hasShadow:!0,repeat:!0}]).withIntroDialogue([{text:`${MR}:intro`},{speaker:`${MR}:speaker`,text:`${MR}:intro_dialogue`}]).withSceneWaveRangeRequirement(30,Pe[1]).withScenePartySizeRequirement(2,6,!0).withCatchAllowed(!0).setLocalizationKey(`${MR}`).withTitle(`${MR}:title`).withDescription(`${MR}:description`).withQuery(`${MR}:query`).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${MR}:option.1.label`,buttonTooltip:`${MR}:option.1.tooltip`,selected:[{speaker:`${MR}:speaker`,text:`${MR}:option.1.selected_dialogue`},{text:`${MR}:option.1.selected_message`}]}).withPreOptionPhase(async()=>{const R=iv(!0,!1,!0),e=R.getHeldItems().filter(L=>!(L instanceof VI));T.removePokemonFromPlayerParty(R);const I=T.currentBattle.mysteryEncounter;I.setDialogueToken("pokeName",R.getNameToRender()),I.misc={removedTypes:R.getTypes(),modifiers:e}}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;T.phaseManager.unshiftNew("ModifierRewardPhase",k.ROGUE_BALL);let e=R.misc.removedTypes;const I=T.gameMode.challenges.filter(o=>o.value&&o.id===QA.SINGLE_TYPE);T.gameMode.isChallenge&&I.length>0&&(e=I.map(o=>o.value-1));const L=R.misc.modifiers,N=DA(100),S=N>=65?6:N>=15?7:N>=5?8:[9,10],n=YA(PH(S,Qv,e)),i={species:n,isBoss:!0,modifierConfigs:L.map(o=>({modifier:o,stackCount:o.getStackCount()}))};!SA(n.forms)&&n.forms.length>0&&(i.formIndex=0),await se({pokemonConfigs:[i]})}).build()).withSimpleOption({buttonLabel:`${MR}:option.2.label`,buttonTooltip:`${MR}:option.2.tooltip`,selected:[{speaker:`${MR}:speaker`,text:`${MR}:option.2.selected`}]},async()=>(IE(!0),!0)).withOutroDialogue([{text:`${MR}:outro`}]).build(),hR="mysteryEncounters/departmentStoreSale",$v=qE.withEncounterType(WA.DEPARTMENT_STORE_SALE).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(Pe[0],100).withIntroSpriteConfigs([{spriteKey:"department_store_sale_lady",fileRoot:"mystery-encounters",hasShadow:!0,x:-20},{spriteKey:"",fileRoot:"",species:A.FURFROU,hasShadow:!0,repeat:!0,x:30}]).withIntroDialogue([{text:`${hR}:intro`},{text:`${hR}:intro_dialogue`,speaker:`${hR}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${hR}`).withTitle(`${hR}:title`).withDescription(`${hR}:description`).withQuery(`${hR}:query`).withSimpleOption({buttonLabel:`${hR}:option.1.label`,buttonTooltip:`${hR}:option.1.tooltip`},async()=>{const R=[];let e=0;for(;e<5;){const I=DA(5);I<2?R.push(k.TM_COMMON):I<4?R.push(k.TM_GREAT):R.push(k.TM_ULTRA),e++}TE({guaranteedModifierTypeFuncs:R,fillRemaining:!1}),IE()}).withSimpleOption({buttonLabel:`${hR}:option.2.label`,buttonTooltip:`${hR}:option.2.tooltip`},async()=>{const R=[];let e=0;for(;e<3;)DA(3)===0?R.push(k.PP_UP):R.push(k.BASE_STAT_BOOSTER),e++;TE({guaranteedModifierTypeFuncs:R,fillRemaining:!1}),IE()}).withSimpleOption({buttonLabel:`${hR}:option.3.label`,buttonTooltip:`${hR}:option.3.tooltip`},async()=>{const R=[];let e=0;for(;e<5;)DA(5)===0?R.push(k.DIRE_HIT):R.push(k.TEMP_STAT_STAGE_BOOSTER),e++;TE({guaranteedModifierTypeFuncs:R,fillRemaining:!1}),IE()}).withSimpleOption({buttonLabel:`${hR}:option.4.label`,buttonTooltip:`${hR}:option.4.tooltip`},async()=>{const R=[];let e=0;for(;e<4;){const I=DA(65);I<10?R.push(k.POKEBALL):I<40?R.push(k.GREAT_BALL):I<60?R.push(k.ULTRA_BALL):R.push(k.ROGUE_BALL),e++}TE({guaranteedModifierTypeFuncs:R,fillRemaining:!1}),IE()}).withOutroDialogue([{text:`${hR}:outro`}]).build(),Ge="mysteryEncounters/fieldTrip",qv=qE.withEncounterType(WA.FIELD_TRIP).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(Pe[0],100).withIntroSpriteConfigs([{spriteKey:"preschooler_m",fileRoot:"trainer",hasShadow:!0},{spriteKey:"field_trip_teacher",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"preschooler_f",fileRoot:"trainer",hasShadow:!0}]).withIntroDialogue([{text:`${Ge}:intro`},{text:`${Ge}:intro_dialogue`,speaker:`${Ge}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${Ge}`).withTitle(`${Ge}:title`).withDescription(`${Ge}:description`).withQuery(`${Ge}:query`).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${Ge}:option.1.label`,buttonTooltip:`${Ge}:option.1.tooltip`,secondOptionPrompt:`${Ge}:second_option_prompt`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(I=>I.moveset.map(L=>({label:L.getName(),handler:r(()=>(R.setDialogueToken("moveCategory",_.t(`${Ge}:physical`)),P_(I,L,G.PHYSICAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;if(R.misc.correctMove){const e=[Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.ATK]),Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.DEF]),Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.SPD]),Ue(k.DIRE_HIT),Ue(k.RARER_CANDY)];TE({guaranteedModifierTypeOptions:e,fillRemaining:!1})}IE(!R.misc.correctMove)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${Ge}:option.2.label`,buttonTooltip:`${Ge}:option.2.tooltip`,secondOptionPrompt:`${Ge}:second_option_prompt`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(I=>I.moveset.map(L=>({label:L.getName(),handler:r(()=>(R.setDialogueToken("moveCategory",_.t(`${Ge}:special`)),P_(I,L,G.SPECIAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;if(R.misc.correctMove){const e=[Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.SPATK]),Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.SPDEF]),Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.SPD]),Ue(k.DIRE_HIT),Ue(k.RARER_CANDY)];TE({guaranteedModifierTypeOptions:e,fillRemaining:!1})}IE(!R.misc.correctMove)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${Ge}:option.3.label`,buttonTooltip:`${Ge}:option.3.tooltip`,secondOptionPrompt:`${Ge}:second_option_prompt`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(I=>I.moveset.map(L=>({label:L.getName(),handler:r(()=>(R.setDialogueToken("moveCategory",_.t(`${Ge}:status`)),P_(I,L,G.STATUS),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;if(R.misc.correctMove){const e=[Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.ACC]),Ue(k.TEMP_STAT_STAGE_BOOSTER,[c.SPD]),Ue(k.GREAT_BALL),Ue(k.IV_SCANNER),Ue(k.RARER_CANDY)];TE({guaranteedModifierTypeOptions:e,fillRemaining:!1})}IE(!R.misc.correctMove)}).build()).build();function P_(R,e,I){const L=T.currentBattle.mysteryEncounter,N=e.getMove().category===I;L.setDialogueToken("pokeName",R.getNameToRender()),L.setDialogueToken("move",e.getName()),N?(L.selectedOption.dialogue.selected=[{text:`${Ge}:option.selected`},{text:`${Ge}:correct`,speaker:`${Ge}:speaker`},{text:`${Ge}:correct_exp`}],RO([R.id],100)):(L.selectedOption.dialogue.selected=[{text:`${Ge}:option.selected`},{text:`${Ge}:incorrect`,speaker:`${Ge}:speaker`},{text:`${Ge}:incorrect_exp`}],RO(T.getPlayerParty().map(S=>S.id),50)),L.misc={correctMove:N}}r(P_,"pokemonAndMoveChosen");const y3=[E.PLUCK,E.COVET,E.KNOCK_OFF,E.THIEF,E.TRICK,E.SWITCHEROO],V3=[E.CHARM,E.FLATTER,E.DRAGON_CHEER,E.ALLURING_VOICE,E.ATTRACT,E.SWEET_SCENT,E.CAPTIVATE,E.AROMATIC_MIST],T4=[E.AQUA_STEP,E.CLANGOROUS_SOUL,E.DRAGON_DANCE,E.FEATHER_DANCE,E.FIERY_DANCE,E.LUNAR_DANCE,E.PETAL_DANCE,E.REVELATION_DANCE,E.QUIVER_DANCE,E.SWORDS_DANCE,E.TEETER_DANCE,E.VICTORY_DANCE];E.FAKE_OUT,E.FOLLOW_ME,E.TAUNT,E.ROAR,E.TELEPORT,E.CHARM,E.FAKE_TEARS,E.TICKLE,E.CAPTIVATE,E.RAGE_POWDER,E.SUBSTITUTE,E.SHED_TAIL;E.PROTECT,E.WIDE_GUARD,E.MAX_GUARD,E.SAFEGUARD,E.REFLECT,E.BARRIER,E.QUICK_GUARD,E.FLOWER_SHIELD,E.KINGS_SHIELD,E.CRAFTY_SHIELD,E.SPIKY_SHIELD,E.OBSTRUCT,E.DETECT;const zv=[E.BIND,E.CLAMP,E.INFESTATION,E.SAND_TOMB,E.SNAP_TRAP,E.THUNDER_CAGE,E.WRAP,E.SPIRIT_SHACKLE,E.MEAN_LOOK,E.JAW_LOCK,E.BLOCK,E.SPIDER_WEB,E.ANCHOR_SHOT,E.OCTOLOCK,E.PURSUIT,E.CONSTRICT,E.BEAT_UP,E.COIL,E.WRING_OUT,E.STRING_SHOT],jv=[O.INTIMIDATE,O.ARENA_TRAP,O.SHADOW_TAG,O.SUCTION_CUPS,O.STICKY_HOLD],A8=[O.FLAME_BODY,O.FLASH_FIRE,O.WELL_BAKED_BODY,O.HEATPROOF,O.THERMAL_EXCHANGE,O.THICK_FAT,O.WATER_BUBBLE,O.MAGMA_ARMOR,O.WATER_VEIL,O.STEAM_ENGINE,O.PRIMORDIAL_SEA],lm=class lm{constructor(e){var L,N,S,n,i,C,o;const I=e instanceof mr?e:void 0;this.id=e.id,this.player=(I==null?void 0:I.isPlayer())??e.player,this.species=(I==null?void 0:I.species.speciesId)??e.species,this.nickname=((L=I==null?void 0:I.summonData.illusion)==null?void 0:L.basePokemon.nickname)??e.nickname,this.formIndex=Math.max(Math.min(e.formIndex,YA(this.species).forms.length-1),0),this.abilityIndex=e.abilityIndex,this.passive=e.passive,this.shiny=((N=I==null?void 0:I.summonData.illusion)==null?void 0:N.basePokemon.shiny)??e.shiny,this.variant=((S=I==null?void 0:I.summonData.illusion)==null?void 0:S.basePokemon.variant)??e.variant,this.pokeball=e.pokeball??MA.POKEBALL,this.level=e.level,this.exp=e.exp,this.levelExp=e.levelExp,this.gender=e.gender,this.hp=e.hp,this.stats=e.stats,this.ivs=e.ivs,this.nature=e.nature??ZA.HARDY,this.moveset=e.moveset.map(l=>pA.loadMove(l)),this.status=e.status?new pL(e.status.effect,e.status.toxicTurnCount,e.status.sleepTurnsRemaining):null,this.friendship=e.friendship??YA(this.species).baseFriendship,this.metLevel=e.metLevel||5,this.metBiome=e.metBiome??-1,this.metSpecies=e.metSpecies,this.metWave=e.metWave??(this.metBiome===-1?-1:0),this.luck=e.luck??(e.shiny?e.variant+1:0),this.pauseEvolutions=!!e.pauseEvolutions,this.pokerus=!!e.pokerus,this.usedTMs=e.usedTMs??[],this.evoCounter=e.evoCounter??0,this.teraType=e.teraType,this.isTerastallized=!!e.isTerastallized,this.stellarTypesBoosted=e.stellarTypesBoosted??[],this.natureOverride=e.natureOverride,this.mysteryEncounterPokemonData=e.mysteryEncounterPokemonData?new fO(e.mysteryEncounterPokemonData):null,this.fusionMysteryEncounterPokemonData=e.fusionMysteryEncounterPokemonData?new fO(e.fusionMysteryEncounterPokemonData):null,this.fusionSpecies=((n=I==null?void 0:I.fusionSpecies)==null?void 0:n.speciesId)??e.fusionSpecies,this.fusionFormIndex=e.fusionFormIndex,this.fusionAbilityIndex=e.fusionAbilityIndex,this.fusionShiny=((i=I==null?void 0:I.summonData.illusion)==null?void 0:i.basePokemon.fusionShiny)??e.fusionShiny,this.fusionVariant=((C=I==null?void 0:I.summonData.illusion)==null?void 0:C.basePokemon.fusionVariant)??e.fusionVariant,this.fusionGender=e.fusionGender,this.fusionLuck=e.fusionLuck??(e.fusionShiny?e.fusionVariant+1:0),this.fusionTeraType=e.fusionTeraType??0,this.boss=e instanceof oI&&!!e.bossSegments||!this.player&&!!e.boss,this.bossSegments=e.bossSegments??0,this.summonData=new LS(e.summonData),this.battleData=new NS(e.battleData),this.summonDataSpeciesFormIndex=((o=I==null?void 0:I.summonData.speciesForm)==null?void 0:o.formIndex)??e.summonDataSpeciesFormIndex,this.customPokemonData=new fO(e.customPokemonData),this.fusionCustomPokemonData=new fO(e.fusionCustomPokemonData)}toPokemon(e,I=0,L=!1){const N=YA(this.species),S=this.player?T.addPlayerPokemon(N,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this,n=>{this.nickname&&(n.nickname=this.nickname)}):T.addEnemyPokemon(N,this.level,e===yE.TRAINER?!L||!(I%2)?v.TRAINER:v.TRAINER_PARTNER:v.NONE,this.boss,!1,this);return this.summonData.speciesForm&&(S.summonData.speciesForm=sC(this.summonData.speciesForm.speciesId,this.summonDataSpeciesFormIndex)),S}};r(lm,"PokemonData");let dO=lm;const dR="mysteryEncounters/fightOrFlight",E8=qE.withEncounterType(WA.FIGHT_OR_FLIGHT).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${dR}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=xr(vr),I=uH(e,!0);R.setDialogueToken("enemyPokemon",I.getNameToRender());const L={pokemonConfigs:[{level:e,species:I.species,dataSource:new dO(I),isBoss:!0,tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(C=>{le(`${dR}:option.1.stat_boost`),T.phaseManager.unshiftNew("StatStageChangePhase",C.getBattlerIndex(),!0,[DA(4,1)],2)},"mysteryEncounterBattleEffects")}]};R.enemyPartyConfigs=[L];const N=T.currentBattle.waveIndex>160?p.MASTER:T.currentBattle.waveIndex>120?p.ROGUE:T.currentBattle.waveIndex>40?p.ULTRA:p.GREAT;t_(T.getPlayerParty(),cE.PLAYER,0);let S=null;for(;!S||S.type.id.includes("TM_")||S.type.id==="CANDY_JAR";)S=B3(1,T.getPlayerParty(),[],{guaranteedModifierTiers:[N],allowLuckUpgrades:!1})[0];R.setDialogueToken("itemName",S.type.name),R.misc=S;const{spriteKey:n,fileRoot:i}=N_(I);return R.spriteConfigs=[{spriteKey:S.type.iconImage,fileRoot:"items",hasShadow:!1,x:35,y:-5,scale:.75,isItem:!0,disableAnimation:!0},{spriteKey:n,fileRoot:i,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:I.shiny,variant:I.variant}],!0}).setLocalizationKey(`${dR}`).withTitle(`${dR}:title`).withDescription(`${dR}:description`).withQuery(`${dR}:query`).withSimpleOption({buttonLabel:`${dR}:option.1.label`,buttonTooltip:`${dR}:option.1.tooltip`,selected:[{text:`${dR}:option.1.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter.misc;TE({guaranteedModifierTypeOptions:[R],fillRemaining:!1}),await se(T.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new Jt(y3,!0)).withDialogue({buttonLabel:`${dR}:option.2.label`,buttonTooltip:`${dR}:option.2.tooltip`,disabledButtonTooltip:`${dR}:option.2.disabled_tooltip`,selected:[{text:`${dR}:option.2.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=T.currentBattle.mysteryEncounter.misc;TE({guaranteedModifierTypeOptions:[e],fillRemaining:!1});const I=R.options[1].primaryPokemon;RO(I.id,R.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),IE()}).build()).withSimpleOption({buttonLabel:`${dR}:option.3.label`,buttonTooltip:`${dR}:option.3.tooltip`,selected:[{text:`${dR}:option.3.selected`}]},async()=>(IE(!0),!0)).build(),s4=E.SURF,a4=E.FLY,n4=25,OR="mysteryEncounters/lostAtSea",e8=qE.withEncounterType(WA.LOST_AT_SEA).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withIntroSpriteConfigs([{spriteKey:"lost_at_sea_buoy",fileRoot:"mystery-encounters",hasShadow:!1,x:20,y:3}]).withIntroDialogue([{text:`${OR}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter;return R.setDialogueToken("damagePercentage",String(n4)),R.setDialogueToken("option1RequiredMove",new pA(s4).getName()),R.setDialogueToken("option2RequiredMove",new pA(a4).getName()),!0}).setLocalizationKey(`${OR}`).withTitle(`${OR}:title`).withDescription(`${OR}:description`).withQuery(`${OR}:query`).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(s4).withDialogue({buttonLabel:`${OR}:option.1.label`,disabledButtonLabel:`${OR}:option.1.label_disabled`,buttonTooltip:`${OR}:option.1.tooltip`,disabledButtonTooltip:`${OR}:option.1.tooltip_disabled`,selected:[{text:`${OR}:option.1.selected`}]}).withOptionPhase(async()=>r4()).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(a4).withDialogue({buttonLabel:`${OR}:option.2.label`,disabledButtonLabel:`${OR}:option.2.label_disabled`,buttonTooltip:`${OR}:option.2.tooltip`,disabledButtonTooltip:`${OR}:option.2.tooltip_disabled`,selected:[{text:`${OR}:option.2.selected`}]}).withOptionPhase(async()=>r4()).build()).withSimpleOption({buttonLabel:`${OR}:option.3.label`,buttonTooltip:`${OR}:option.3.tooltip`,selected:[{text:`${OR}:option.3.selected`}]},async()=>{const R=T.getPlayerParty().filter(e=>e.isAllowedInBattle());for(const e of R){const I=n4/100,L=Math.floor(e.getMaxHp()*I);HH(e,L)}return IE(),!0}).withOutroDialogue([{text:`${OR}:outro`}]).build();function r4(){var I,L;const R=YA(A.LAPRAS),{mysteryEncounter:e}=T.currentBattle;return(L=(I=e==null?void 0:e.selectedOption)==null?void 0:I.primaryPokemon)!=null&&L.id?RO(e.selectedOption.primaryPokemon.id,R.baseExp,!0):console.warn("Lost at sea: No guide pokemon found but pokemon guides player. huh!?"),IE(),!0}r(r4,"handlePokemonGuidingYouPhase");const qR="mysteryEncounters/mysteriousChallengers",R8=qE.withEncounterType(WA.MYSTERIOUS_CHALLENGERS).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(...Pe).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${qR}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=T.arena.randomTrainerType(T.currentBattle.waveIndex),I=he[e].clone();let L=!1;I.hasGenders&&(L=!!DA(2));const N=I.getSpriteKey(L,I.doubleOnly);R.enemyPartyConfigs.push({trainerConfig:I,female:L});let S=0,n=T.arena.randomTrainerType(T.currentBattle.waveIndex);for(;S<5&&n===e;)n=T.arena.randomTrainerType(T.currentBattle.waveIndex),S++;const i=new Oe(new dA(1,HA.STRONGER,!1,!0),new dA(Math.min(Math.ceil(T.currentBattle.waveIndex/20),5),HA.AVERAGE,!1,!0)),C=he[n].clone();C.setPartyTemplates(i),L=!1,C.hasGenders&&(L=!!DA(2));const o=C.getSpriteKey(L,C.doubleOnly);R.enemyPartyConfigs.push({trainerConfig:C,levelAdditiveModifier:1,female:L});const l=T.arena.randomTrainerType(T.currentBattle.waveIndex,!0),H=PA.ELITE_FOUR,P=he[l].clone();P.title=he[l].title,P.setPartyTemplates(H),P.partyTemplateFunc=null,L=!1,P.hasGenders&&(L=!!DA(2));const K=P.getSpriteKey(L,P.doubleOnly);return R.enemyPartyConfigs.push({trainerConfig:P,levelAdditiveModifier:1.5,female:L}),R.spriteConfigs=[{spriteKey:N,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:o,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:K,fileRoot:"trainer",hasShadow:!0,tint:1}],!0}).setLocalizationKey(`${qR}`).withTitle(`${qR}:title`).withDescription(`${qR}:description`).withQuery(`${qR}:query`).withSimpleOption({buttonLabel:`${qR}:option.1.label`,buttonTooltip:`${qR}:option.1.tooltip`,selected:[{text:`${qR}:option.selected`}]},async()=>{const e=T.currentBattle.mysteryEncounter.enemyPartyConfigs[0];TE({guaranteedModifierTypeFuncs:[k.TM_COMMON,k.TM_GREAT,k.MEMORY_MUSHROOM],fillRemaining:!0});let I;T.executeWithSeedOffset(()=>{I=se(e)},T.currentBattle.waveIndex*10),await I}).withSimpleOption({buttonLabel:`${qR}:option.2.label`,buttonTooltip:`${qR}:option.2.tooltip`,selected:[{text:`${qR}:option.selected`}]},async()=>{const e=T.currentBattle.mysteryEncounter.enemyPartyConfigs[1];TE({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],fillRemaining:!0});let I;T.executeWithSeedOffset(()=>{I=se(e)},T.currentBattle.waveIndex*100),await I}).withSimpleOption({buttonLabel:`${qR}:option.3.label`,buttonTooltip:`${qR}:option.3.tooltip`,selected:[{text:`${qR}:option.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs[2];R.expMultiplier=.9,TE({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.GREAT],fillRemaining:!0});let I;T.executeWithSeedOffset(()=>{I=se(e)},T.currentBattle.waveIndex*1e3),await I}).withOutroDialogue([{text:`${qR}:outro`}]).build(),pR="mysteryEncounters/mysteriousChest",rT=100,i4=30,iT=25,Ti=30,H_=10,C4=5,O8=qE.withEncounterType(WA.MYSTERIOUS_CHEST).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withScenePartySizeRequirement(2,6,!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withIntroSpriteConfigs([{spriteKey:"mysterious_chest_blue",fileRoot:"mystery-encounters",hasShadow:!0,y:8,yShadow:6,alpha:1,disableAnimation:!0},{spriteKey:"mysterious_chest_red",fileRoot:"mystery-encounters",hasShadow:!1,y:8,yShadow:6,alpha:0,disableAnimation:!0}]).withIntroDialogue([{text:`${pR}:intro`}]).setLocalizationKey(`${pR}`).withTitle(`${pR}:title`).withDescription(`${pR}:description`).withQuery(`${pR}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e={levelAdditiveModifier:.5,disableSwitch:!0,pokemonConfigs:[{species:YA(A.GIMMIGHOUL),formIndex:0,isBoss:!0,moveSet:[E.NASTY_PLOT,E.SHADOW_BALL,E.POWER_GEM,E.THIEF]}]};return R.enemyPartyConfigs=[e],R.setDialogueToken("gimmighoulName",YA(A.GIMMIGHOUL).getName()),R.setDialogueToken("trapPercent",i4.toString()),R.setDialogueToken("commonPercent",iT.toString()),R.setDialogueToken("ultraPercent",Ti.toString()),R.setDialogueToken("roguePercent",H_.toString()),R.setDialogueToken("masterPercent",C4.toString()),!0}).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${pR}:option.1.label`,buttonTooltip:`${pR}:option.1.tooltip`,selected:[{text:`${pR}:option.1.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.introVisuals,I=DA(rT);if(R.misc={roll:I},I<i4){const L=e.getSpriteAtIndex(0);e.getSpriteAtIndex(1)[0].setAlpha(1),L[0].setAlpha(.001)}e.spriteConfigs[0].disableAnimation=!1,e.spriteConfigs[1].disableAnimation=!1,e.playAnim()}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.roll;if(e>=rT-iT)TE({guaranteedModifierTiers:[p.COMMON,p.COMMON,p.GREAT,p.GREAT]}),le(`${pR}:option.1.normal`),IE();else if(e>=rT-iT-Ti)TE({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.ULTRA]}),le(`${pR}:option.1.good`),IE();else if(e>=rT-iT-Ti-H_)TE({guaranteedModifierTiers:[p.ROGUE,p.ROGUE]}),le(`${pR}:option.1.great`),IE();else if(e>=rT-iT-Ti-H_-C4)TE({guaranteedModifierTiers:[p.MASTER]}),le(`${pR}:option.1.amazing`),IE();else{const I=GH(!0,!1);h3(I),R.setDialogueToken("pokeName",I.getNameToRender()),await HE(`${pR}:option.1.bad`),T.getPokemonAllowedInBattle().length===0?(T.phaseManager.clearPhaseQueue(),T.phaseManager.unshiftNew("GameOverPhase")):(await Te(!0,!0,500),TE({fillRemaining:!0}),await se(R.enemyPartyConfigs[0]))}}).build()).withSimpleOption({buttonLabel:`${pR}:option.2.label`,buttonTooltip:`${pR}:option.2.tooltip`,selected:[{text:`${pR}:option.2.selected`}]},async()=>(IE(!0),!0)).build(),Ze="mysteryEncounters/shadyVitaminDealer",U4=1.5,I8=5,t8=qE.withEncounterType(WA.SHADY_VITAMIN_DEALER).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withSceneRequirement(new UI(0,U4)).withPrimaryPokemonHealthRatioRequirement([.51,1]).withIntroSpriteConfigs([{spriteKey:A.KROOKODILE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:12,y:-5,yShadow:-5},{spriteKey:"shady_vitamin_dealer",fileRoot:"mystery-encounters",hasShadow:!0,x:-12,y:3,yShadow:3}]).withIntroDialogue([{text:`${Ze}:intro`},{text:`${Ze}:intro_dialogue`,speaker:`${Ze}:speaker`}]).setLocalizationKey(`${Ze}`).withTitle(`${Ze}:title`).withDescription(`${Ze}:description`).withQuery(`${Ze}:query`).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,U4).withDialogue({buttonLabel:`${Ze}:option.1.label`,buttonTooltip:`${Ze}:option.1.tooltip`,selected:[{text:`${Ze}:option.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>{YO(-R.options[0].requirements[0].requiredMoney);const N=[qA(k.BASE_STAT_BOOSTER),qA(k.BASE_STAT_BOOSTER)];R.setDialogueToken("boost1",N[0].name),R.setDialogueToken("boost2",N[1].name),R.misc={chosenPokemon:L,modifiers:N}},"onPokemonSelected"),void 0,r(L=>L.isAllowedInChallenge()?R.pokemonMeetsPrimaryRequirements(L)?null:eR(`${Ze}:invalid_selection`)??null:_.t("partyUiHandler:cantBeUsed",{pokemonName:L.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.chosenPokemon,I=R.misc.modifiers;for(const L of I)await MO(e,L);IE(!0)}).withPostOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.chosenPokemon;HH(e,Math.floor(e.getMaxHp()/2));const I=e.nature;let L=DA(25);for(;L===I;)L=DA(25);e.setCustomNature(L),R.setDialogueToken("newNature",kt(L)),le(`${Ze}:cheap_side_effects`),RO([e.id],100),await e.updateInfo()}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,I8).withDialogue({buttonLabel:`${Ze}:option.2.label`,buttonTooltip:`${Ze}:option.2.tooltip`,selected:[{text:`${Ze}:option.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>{YO(-R.options[1].requirements[0].requiredMoney);const N=[qA(k.BASE_STAT_BOOSTER),qA(k.BASE_STAT_BOOSTER)];R.setDialogueToken("boost1",N[0].name),R.setDialogueToken("boost2",N[1].name),R.misc={chosenPokemon:L,modifiers:N}},"onPokemonSelected"),void 0,r(L=>YL(L,`${Ze}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.chosenPokemon,I=R.misc.modifiers;for(const L of I)await MO(e,L);IE(!0)}).withPostOptionPhase(async()=>{const e=T.currentBattle.mysteryEncounter.misc.chosenPokemon;le(`${Ze}:no_bad_effects`),RO([e.id],100),await e.updateInfo()}).build()).withSimpleOption({buttonLabel:`${Ze}:option.3.label`,buttonTooltip:`${Ze}:option.3.tooltip`,selected:[{text:`${Ze}:option.3.selected`,speaker:`${Ze}:speaker`}]},async()=>(IE(!0),!0)).build(),gR="mysteryEncounters/slumberingSnorlax",L8=qE.withEncounterType(WA.SLUMBERING_SNORLAX).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(15,150).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:A.SNORLAX.toString(),fileRoot:"pokemon",hasShadow:!0,tint:.25,scale:1.25,repeat:!0,y:5}]).withIntroDialogue([{text:`${gR}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,L={levelAdditiveModifier:.5,pokemonConfigs:[{species:YA(A.SNORLAX),isBoss:!0,shiny:!1,status:[J.SLEEP,6],nature:ZA.DOCILE,moveSet:[E.BODY_SLAM,E.CRUNCH,E.SLEEP_TALK,E.REST],modifierConfigs:[{modifier:qA(k.BERRY,[EE.SITRUS])},{modifier:qA(k.BERRY,[EE.ENIGMA])},{modifier:qA(k.BASE_STAT_BOOSTER,[c.HP])},{modifier:qA(k.SOOTHE_BELL),stackCount:DA(2,0)},{modifier:qA(k.LUCKY_EGG),stackCount:DA(2,0)}],customPokemonData:new fO({spriteScale:1.25}),aiType:bI.SMART}]};return R.enemyPartyConfigs=[L],Zr([E.SNORE]),R.setDialogueToken("snorlaxName",YA(A.SNORLAX).getName()),!0}).setLocalizationKey(`${gR}`).withTitle(`${gR}:title`).withDescription(`${gR}:description`).withQuery(`${gR}:query`).withSimpleOption({buttonLabel:`${gR}:option.1.label`,buttonTooltip:`${gR}:option.1.tooltip`,selected:[{text:`${gR}:option.1.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter;TE({guaranteedModifierTypeFuncs:[k.LEFTOVERS],fillRemaining:!0}),R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[KE.PLAYER],move:new pA(E.SNORE),ignorePp:!0}),await se(R.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${gR}:option.2.label`,buttonTooltip:`${gR}:option.2.tooltip`,selected:[{text:`${gR}:option.2.selected`}]},async()=>{T.phaseManager.unshiftNew("PartyHealPhase",!0),le(`${gR}:option.2.rest_result`),IE()}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new Jt(y3,!0)).withDialogue({buttonLabel:`${gR}:option.3.label`,buttonTooltip:`${gR}:option.3.tooltip`,disabledButtonTooltip:`${gR}:option.3.disabled_tooltip`,selected:[{text:`${gR}:option.3.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;TE({guaranteedModifierTypeFuncs:[k.LEFTOVERS],fillRemaining:!1}),RO(R.primaryPokemon.id,YA(A.SNORLAX).baseExp),IE()}).build()).build(),N8=Object.freeze({ABILITY_1:1,ABILITY_2:2,ABILITY_HIDDEN:4}),Be="mysteryEncounters/trainingSession",S8=qE.withEncounterType(WA.TRAINING_SESSION).withEncounterTier(xE.ULTRA).withSceneWaveRangeRequirement(...Pe).withScenePartySizeRequirement(2,6,!0).withFleeAllowed(!1).withHideWildIntroMessage(!0).withPreventGameStatsUpdates(!0).withIntroSpriteConfigs([{spriteKey:"training_session_gear",fileRoot:"mystery-encounters",hasShadow:!0,y:6,x:5,yShadow:-2}]).withIntroDialogue([{text:`${Be}:intro`}]).setLocalizationKey(`${Be}`).withTitle(`${Be}:title`).withDescription(`${Be}:description`).withQuery(`${Be}:query`).withOption(iE.newOptionWithMode(rE.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${Be}:option.1.label`,buttonTooltip:`${Be}:option.1.tooltip`,selected:[{text:`${Be}:option.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>{R.misc={playerPokemon:L}},"onPokemonSelected"),void 0,r(L=>YL(L,`${Be}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.playerPokemon,I=Math.min(2+Math.floor(T.currentBattle.waveIndex/50),5),L=new xT,N=u_(e,I,L);T.removePokemonFromPlayerParty(e,!1),TE({fillRemaining:!0},void 0,r(()=>{R.setDialogueToken("stat1","-"),R.setDialogueToken("stat2","-");let n=[];e.ivs.forEach((C,o)=>{C<31&&n.push({iv:C,index:o})});let i=0;for(;n.length>0&&i<2;){n=gI(n);const C=n.pop();let o=C.iv;i===0?R.setDialogueToken("stat1",_.t(aR(C.index))??""):R.setDialogueToken("stat2",_.t(aR(C.index))??""),C.iv<=21&&C.iv-1%5===0&&(o+=1),o+=C.iv<=10?10:C.iv<=20?5:3,o=Math.min(o,31),e.ivs[C.index]=o,i++}i>0&&(e.calculateStats(),T.gameData.updateSpeciesDexIvs(e.species.getRootSpeciesId(!0),e.ivs),T.gameData.setPokemonCaught(e,!1)),T.getPlayerParty().push(e);for(const C of L.value)C.pokemonId=e.id,T.addModifier(C,!0,!1,!1,!0);T.updateModifiers(!0),le(`${Be}:option.1.finished`)},"onBeforeRewardsPhase")),await se(N)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${Be}:option.2.label`,buttonTooltip:`${Be}:option.2.tooltip`,secondOptionPrompt:`${Be}:option.2.select_prompt`,selected:[{text:`${Be}:option.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=new Array(25).fill(null).map((N,S)=>S);return RR(r(N=>e.map(S=>({label:kt(S,!0,!0,!0,T.uiTheme),handler:r(()=>(R.setDialogueToken("nature",kt(S)),R.misc={playerPokemon:N,chosenNature:S},!0),"handler")})),"onPokemonSelected"),void 0,r(N=>YL(N,`${Be}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.playerPokemon,I=Math.min(2+Math.floor(T.currentBattle.waveIndex/40),6),L=new xT,N=u_(e,I,L);T.removePokemonFromPlayerParty(e,!1),TE({fillRemaining:!0},void 0,r(()=>{le(`${Be}:option.2.finished`),e.setCustomNature(R.misc.chosenNature),T.gameData.unlockSpeciesNature(e.species,R.misc.chosenNature),T.getPlayerParty().push(e);for(const n of L.value)n.pokemonId=e.id,T.addModifier(n,!0,!1,!1,!0);T.updateModifiers(!0)},"onBeforeRewardsPhase")),await se(N)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${Be}:option.3.label`,buttonTooltip:`${Be}:option.3.tooltip`,secondOptionPrompt:`${Be}:option.3.select_prompt`,selected:[{text:`${Be}:option.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>{const N=L.getFusionSpeciesForm()?L.getFusionSpeciesForm():L.getSpeciesForm(),S=N.getAbilityCount(),n=new Array(S).fill(null).map((C,o)=>fe[N.getAbility(o)]),i=[];return n.forEach((C,o)=>{if(!i.some(l=>l.label===C.name)){const l={label:C.name,handler:r(()=>(R.setDialogueToken("ability",C.name),R.misc={playerPokemon:L,abilityIndex:o},!0),"handler"),onHover:r(()=>{HE(C.description,0,0,!1)},"onHover")};i.push(l)}}),i},"onPokemonSelected"),void 0,r(L=>YL(L,`${Be}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.playerPokemon,I=Math.min(2+Math.floor(T.currentBattle.waveIndex/30),6),L=new xT,N=u_(e,I,L);N.pokemonConfigs[0].tags=[d.MYSTERY_ENCOUNTER_POST_SUMMON],T.removePokemonFromPlayerParty(e,!1),TE({fillRemaining:!0},void 0,r(()=>{var i,C;le(`${Be}:option.3.finished`);const n=R.misc.abilityIndex;if(e.getFusionSpeciesForm()){e.fusionAbilityIndex=n;const o=(i=e.fusionSpecies)==null?void 0:i.getRootSpeciesId();!SA(o)&&FR.hasOwnProperty(o)&&T.gameData.dexData[o].caughtAttr&&(T.gameData.starterData[o].abilityAttr|=e.fusionAbilityIndex!==1||(C=e.fusionSpecies)!=null&&C.ability2?1<<e.fusionAbilityIndex:N8.ABILITY_HIDDEN)}else e.abilityIndex=n;e.calculateStats(),T.gameData.setPokemonCaught(e,!1),T.getPlayerParty().push(e);for(const o of L.value)o.pokemonId=e.id,T.addModifier(o,!0,!1,!1,!0);T.updateModifiers(!0)},"onBeforeRewardsPhase")),await se(N)}).build()).withSimpleOption({buttonLabel:`${Be}:option.4.label`,buttonTooltip:`${Be}:option.4.tooltip`,selected:[{text:`${Be}:option.4.selected`}]},async()=>(IE(!0),!0)).build();function u_(R,e,I){R.resetSummonData(),I.value=R.getHeldItems();const L=I.value.map(S=>({modifier:S.clone(),isTransferable:!1,stackCount:S.stackCount})),N=new dO(R);return{pokemonConfigs:[{species:R.species,isBoss:!0,bossSegments:e,formIndex:R.formIndex,level:R.level,dataSource:N,modifierConfigs:L}]}}r(u_,"getEnemyConfig");const _m=class _m{constructor(){this.value=[]}};r(_m,"ModifiersHolder");let xT=_m;const cH=[A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.ROARING_MOON,A.WALKING_WAKE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.IRON_VALIANT,A.IRON_LEAVES,A.IRON_BOULDER,A.IRON_CROWN],T8=[A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON],oe="mysteryEncounters/safariZone",SS=[512,184,768],o4=2,M4=3,s8=qE.withEncounterType(WA.SAFARI_ZONE).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(...Pe).withSceneRequirement(new UI(0,o4)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"safari_zone",fileRoot:"mystery-encounters",hasShadow:!1,x:4,y:6}]).withIntroDialogue([{text:`${oe}:intro`}]).setLocalizationKey(`${oe}`).withTitle(`${oe}:title`).withDescription(`${oe}:description`).withQuery(`${oe}:query`).withOnInit(()=>{var R;return(R=T.currentBattle.mysteryEncounter)==null||R.setDialogueToken("numEncounters",M4.toString()),!0}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withSceneRequirement(new UI(0,o4)).withDialogue({buttonLabel:`${oe}:option.1.label`,buttonTooltip:`${oe}:option.1.tooltip`,selected:[{text:`${oe}:option.1.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return R.continuousEncounter=!0,R.misc={safariPokemonRemaining:M4},YO(-R.options[0].requirements[0].requiredMoney),T.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),T.loadSe("PRSFX- Sludge Bomb2","battle_anims","PRSFX- Sludge Bomb2.wav"),T.loadSe("PRSFX- Taunt2","battle_anims","PRSFX- Taunt2.wav"),T.loadAtlas("safari_zone_bait","mystery-encounters"),T.loadAtlas("safari_zone_mud","mystery-encounters"),T.currentBattle.enemyParty=[],await Te(),await cl(),yr({overrideOptions:Vr,hideDescription:!0}),!0}).build()).withSimpleOption({buttonLabel:`${oe}:option.2.label`,buttonTooltip:`${oe}:option.2.tooltip`,selected:[{text:`${oe}:option.2.selected`}]},async()=>(IE(!0),!0)).build(),Vr=[iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${oe}:safari.1.label`,buttonTooltip:`${oe}:safari.1.tooltip`,selected:[{text:`${oe}:safari.1.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.pokemon;return await a8(e)?R.misc.safariPokemonRemaining>0?(await cl(),yr({overrideOptions:Vr,startingCursorIndex:0,hideDescription:!0})):(R.continuousEncounter=!1,IE(!0)):await c_(0),!0}).build(),iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${oe}:safari.2.label`,buttonTooltip:`${oe}:safari.2.tooltip`,selected:[{text:`${oe}:safari.2.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter.misc.pokemon;return await n8(R),l4(2),D4(1,8)?await HE(eR(`${oe}:safari.eating`)??"",null,1e3,!1):await HE(eR(`${oe}:safari.busy_eating`)??"",null,1e3,!1),await c_(1),!0}).build(),iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${oe}:safari.3.label`,buttonTooltip:`${oe}:safari.3.tooltip`,selected:[{text:`${oe}:safari.3.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter.misc.pokemon;return await r8(R),D4(-2),l4(-1,8)?await HE(eR(`${oe}:safari.angry`)??"",null,1e3,!1):await HE(eR(`${oe}:safari.beside_itself_angry`)??"",null,1e3,!1),await c_(2),!0}).build(),iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${oe}:safari.4.label`,buttonTooltip:`${oe}:safari.4.tooltip`}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.pokemon;return await lv(e),R.misc.safariPokemonRemaining>0?(await cl(),yr({overrideOptions:Vr,startingCursorIndex:3,hideDescription:!0})):(R.continuousEncounter=!1,IE(!0)),!0}).build()];async function cl(){const R=T.currentBattle.mysteryEncounter;R.setDialogueToken("remainingCount",R.misc.safariPokemonRemaining),T.phaseManager.queueMessage(eR(`${oe}:safari.remaining_count`)??"",null,!0);let e,I;T.executeWithSeedOffset(()=>{e=C8();const N=T.currentBattle.getLevelForWave();if(e=YA(e.getWildSpeciesForLevel(N,!0,!1,T.gameMode)),I=T.addEnemyPokemon(e,N,v.NONE,!1),I.shiny||I.trySetShinySeed(),I.species.abilityHidden){const S=I.species.ability2?2:1;if(I.abilityIndex<S){const n=new VA(256);T.applyModifiers(aI,!0,n),!DA(n.value)&&(I.abilityIndex=S)}}I.calculateStats(),T.currentBattle.enemyParty.unshift(I)},T.currentBattle.waveIndex*1e3*R.misc.safariPokemonRemaining),T.gameData.setPokemonSeen(I,!0),await I.loadAssets(),R.misc.catchStage=0,R.misc.fleeStage=0,R.misc.pokemon=I,R.misc.safariPokemonRemaining-=1,T.phaseManager.unshiftNew("SummonPhase",0,!1),R.setDialogueToken("pokemonName",Q(I)),T.findModifier(N=>N instanceof vS)&&T.phaseManager.pushNew("ScanIvsPhase",I.getBattlerIndex())}r(cl,"summonSafariPokemon");function a8(R){const e=R.species.catchRate,I=T.currentBattle.mysteryEncounter.misc.catchStage,L=(2+Math.min(Math.max(I,0),6))/(2-Math.max(Math.min(I,0),-6)),S=Math.round(e*1.5*L),n=Math.round(1048560/Math.sqrt(Math.sqrt(16711680/S)));return Mv(R,MA.POKEBALL,n)}r(a8,"throwPokeball");async function n8(R){const e=R.y,I=R.getFieldPositionOffset(),L=T.addFieldSprite(91,105,"safari_zone_bait","0001.png");return L.setOrigin(.5,.625),T.field.add(L),new Promise(N=>{T.trainer.setTexture(`trainer_${T.gameData.gender===de.FEMALE?"f":"m"}_back_pb`),T.time.delayedCall(SS[0],()=>{T.playSound("se/pb_throw"),T.trainer.setFrame("2"),T.time.delayedCall(SS[1],()=>{T.trainer.setFrame("3"),T.time.delayedCall(SS[2],()=>{T.trainer.setTexture(`trainer_${T.gameData.gender===de.FEMALE?"f":"m"}_back`)})}),T.tweens.add({targets:L,x:{value:210+I[0],ease:"Linear"},y:{value:55+I[1],ease:"Cubic.easeOut"},duration:500,onComplete:r(()=>{let S=1;T.time.delayedCall(768,()=>{T.tweens.add({targets:R,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:e-5,loop:6,onStart:r(()=>{T.playSound("battle_anims/PRSFX- Bug Bite"),L.setFrame("0002.png")},"onStart"),onLoop:r(()=>{S%2===0&&T.playSound("battle_anims/PRSFX- Bug Bite"),S===4&&L.setFrame("0003.png"),S++},"onLoop"),onComplete:r(()=>{T.time.delayedCall(256,()=>{L.destroy(),N(!0)})},"onComplete")})})},"onComplete")})})})}r(n8,"throwBait");async function r8(R){const e=R.y,I=R.getFieldPositionOffset(),L=T.addFieldSprite(91,115,"safari_zone_mud","0001.png");return L.setOrigin(.5,.625),T.field.add(L),new Promise(N=>{T.trainer.setTexture(`trainer_${T.gameData.gender===de.FEMALE?"f":"m"}_back_pb`),T.time.delayedCall(SS[0],()=>{T.playSound("se/pb_throw"),T.trainer.setFrame("2"),T.time.delayedCall(SS[1],()=>{T.trainer.setFrame("3"),T.time.delayedCall(SS[2],()=>{T.trainer.setTexture(`trainer_${T.gameData.gender===de.FEMALE?"f":"m"}_back`)})}),T.tweens.add({targets:L,x:{value:230+I[0],ease:"Linear"},y:{value:55+I[1],ease:"Cubic.easeOut"},duration:500,onComplete:r(()=>{T.playSound("battle_anims/PRSFX- Sludge Bomb2"),L.setFrame("0002.png"),T.time.delayedCall(200,()=>{L.setFrame("0003.png"),T.time.delayedCall(400,()=>{L.setFrame("0004.png")})}),T.tweens.add({targets:L,alpha:0,ease:"Cubic.easeIn",duration:1e3,onComplete:r(()=>{L.destroy(),T.tweens.add({targets:R,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:e-20,loop:1,onStart:r(()=>{T.playSound("battle_anims/PRSFX- Taunt2")},"onStart"),onLoop:r(()=>{T.playSound("battle_anims/PRSFX- Taunt2")},"onLoop"),onComplete:r(()=>{N(!0)},"onComplete")})},"onComplete")})},"onComplete")})})})}r(r8,"throwMud");function i8(R,e){const I=R.species.catchRate,L=(2+Math.min(Math.max(e,0),6))/(2-Math.max(Math.min(e,0),-6)),N=(255*255-I*I)/255/2*L;return DA(256)<N}r(i8,"isPokemonFlee");function D4(R,e){if(e&&DA(10)>=e)return!1;const I=T.currentBattle.mysteryEncounter.misc.fleeStage??0;return T.currentBattle.mysteryEncounter.misc.fleeStage=Math.min(Math.max(I+R,-6),6),!0}r(D4,"tryChangeFleeStage");function l4(R,e){if(e&&DA(10)>=e)return!1;const I=T.currentBattle.mysteryEncounter.misc.catchStage??0;return T.currentBattle.mysteryEncounter.misc.catchStage=Math.min(Math.max(I+R,-6),6),!0}r(l4,"tryChangeCatchStage");async function c_(R){const e=T.getEnemyParty();if(e.length>1){for(let S=1;S<e.length;S++)e[S].destroy();T.currentBattle.enemyParty=e.slice(0,1)}const I=T.currentBattle.mysteryEncounter,L=I.misc.pokemon;i8(L,I.misc.fleeStage)?(await Dv(L),I.misc.safariPokemonRemaining>0?(await cl(),yr({overrideOptions:Vr,startingCursorIndex:R,hideDescription:!0})):(I.continuousEncounter=!1,IE(!0))):(T.phaseManager.queueMessage(eR(`${oe}:safari.watching`)??"",0,null,1e3),yr({overrideOptions:Vr,startingCursorIndex:R,hideDescription:!0}))}r(c_,"doEndTurn");function C8(){return YA(PH([0,5],cH,void 0,!1,!1,!1))}r(C8,"getSafariSpeciesSpawn");const _R="mysteryEncounters/fieryFallout",U8=20,o8=qE.withEncounterType(WA.FIERY_FALLOUT).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(40,Pe[1]).withCatchAllowed(!0).withIntroSpriteConfigs([]).withAnimations(KO.MAGMA_BG,KO.MAGMA_SPOUT).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroDialogue([{text:`${_R}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=YA(A.VOLCARONA),I={pokemonConfigs:[{species:e,isBoss:!1,gender:mA.MALE,tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(N=>{T.phaseManager.unshiftNew("StatStageChangePhase",N.getBattlerIndex(),!0,[c.SPDEF,c.SPD],1)},"mysteryEncounterBattleEffects")},{species:e,isBoss:!1,gender:mA.FEMALE,tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(N=>{T.phaseManager.unshiftNew("StatStageChangePhase",N.getBattlerIndex(),!0,[c.SPDEF,c.SPD],1)},"mysteryEncounterBattleEffects")}],doubleBattle:!0,disableSwitch:!0};R.enemyPartyConfigs=[I],R.spriteConfigs=[{spriteKey:"",fileRoot:"",species:A.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:-20,startFrame:20},{spriteKey:"",fileRoot:"",species:A.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:20}],Zr([E.FIRE_SPIN,E.QUIVER_DANCE]);const L=T.getEnemyPokemon();return T.arena.trySetWeather(Z.SUNNY,L),R.setDialogueToken("volcaronaName",YA(A.VOLCARONA).getName()),!0}).withOnVisualsStart(()=>{new Et(KO.MAGMA_BG,T.getPlayerPokemon(),T.getPlayerPokemon()).playWithoutTargets(200,70,2,3);const e=new Et(KO.MAGMA_SPOUT,T.getPlayerPokemon(),T.getPlayerPokemon());return e.playWithoutTargets(80,100,2),T.time.delayedCall(600,()=>{e.playWithoutTargets(-20,100,2)}),T.time.delayedCall(1200,()=>{e.playWithoutTargets(140,150,2)}),!0}).setLocalizationKey(`${_R}`).withTitle(`${_R}:title`).withDescription(`${_R}:description`).withQuery(`${_R}:query`).withSimpleOption({buttonLabel:`${_R}:option.1.label`,buttonTooltip:`${_R}:option.1.tooltip`,selected:[{text:`${_R}:option.1.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter;TE({fillRemaining:!0},void 0,()=>_4()),R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[KE.PLAYER],move:new pA(E.FIRE_SPIN),ignorePp:!0},{sourceBattlerIndex:KE.ENEMY_2,targets:[KE.PLAYER_2],move:new pA(E.FIRE_SPIN),ignorePp:!0}),await se(T.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${_R}:option.2.label`,buttonTooltip:`${_R}:option.2.tooltip`,selected:[{text:`${_R}:option.2.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter,e=T.getPlayerParty().filter(L=>L.isAllowedInBattle()&&!L.getTypes().includes(t.FIRE));for(const L of e){const N=U8/100,S=Math.floor(L.getMaxHp()*N);HH(L,S)}const I=e.filter(L=>SA(L.status)||SA(L.status.effect)||L.status.effect===J.NONE);if((I==null?void 0:I.length)>0){const L=DA(I.length),N=I[L];N.trySetStatus(J.BURN)&&(R.setDialogueToken("burnedPokemon",N.getNameToRender()),R.setDialogueToken("abilityName",fe[O.HEATPROOF].name),le(`${_R}:option.2.target_burned`),p3(N,O.HEATPROOF))}IE(!0)}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(tN.Some(new RT(t.FIRE,!0,1),new ll(A8,!0))).withDialogue({buttonLabel:`${_R}:option.3.label`,buttonTooltip:`${_R}:option.3.tooltip`,disabledButtonTooltip:`${_R}:option.3.disabled_tooltip`,selected:[{text:`${_R}:option.3.selected`}]}).withPreOptionPhase(async()=>{Te(!1,!1,2e3)}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;await Te(),TE({fillRemaining:!0},void 0,()=>{_4()});const e=R.options[2].primaryPokemon;RO([e.id],YA(A.VOLCARONA).baseExp*2),IE()}).build()).build();function _4(){var e;const R=(e=T.getPlayerParty())==null?void 0:e[0];if(R){let I=qA(k.ATTACK_TYPE_BOOSTER);I||(I=qA(k.ATTACK_TYPE_BOOSTER,[t.FIRE])),MO(R,I);const L=T.currentBattle.mysteryEncounter;L.setDialogueToken("itemName",I.name),L.setDialogueToken("leadPokemon",R.getNameToRender()),le(`${_R}:found_item`)}}r(_4,"giveLeadPokemonAttackTypeBoostItem");const TO="mysteryEncounters/theStrongStuff",G4=15,P4=10,M8=qE.withEncounterType(WA.THE_STRONG_STUFF).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withScenePartySizeRequirement(3,6).withMaxAllowedEncounters(1).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"berry_juice",fileRoot:"items",hasShadow:!0,isItem:!0,scale:1.25,x:-15,y:3,disableAnimation:!0},{spriteKey:A.SHUCKLE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,scale:1.25,x:20,y:10,yShadow:7}]).withIntroDialogue([{text:`${TO}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e={levelAdditiveModifier:1,disableSwitch:!0,pokemonConfigs:[{species:YA(A.SHUCKLE),isBoss:!0,bossSegments:5,shiny:!1,customPokemonData:new fO({spriteScale:1.25}),nature:ZA.HARDY,moveSet:[E.INFESTATION,E.SALT_CURE,E.GASTRO_ACID,E.HEAL_ORDER],modifierConfigs:[{modifier:qA(k.BERRY,[EE.SITRUS])},{modifier:qA(k.BERRY,[EE.ENIGMA])},{modifier:qA(k.BERRY,[EE.APICOT])},{modifier:qA(k.BERRY,[EE.GANLON])},{modifier:qA(k.BERRY,[EE.LUM]),stackCount:2}],tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(I=>{le(`${TO}:option.2.stat_boost`),T.phaseManager.unshiftNew("StatStageChangePhase",I.getBattlerIndex(),!0,[c.DEF,c.SPDEF],1)},"mysteryEncounterBattleEffects")}]};return R.enemyPartyConfigs=[e],Zr([E.GASTRO_ACID,E.STEALTH_ROCK]),R.setDialogueToken("shuckleName",YA(A.SHUCKLE).getName()),!0}).setLocalizationKey(`${TO}`).withTitle(`${TO}:title`).withDescription(`${TO}:description`).withQuery(`${TO}:query`).withSimpleOption({buttonLabel:`${TO}:option.1.label`,buttonTooltip:`${TO}:option.1.tooltip`,selected:[{text:`${TO}:option.1.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter;return T.time.delayedCall(750,()=>{Te(!0,!0,50)}),T.getPlayerParty().slice(0).sort((I,L)=>{const N=I.getSpeciesForm().getBaseStatTotal();return L.getSpeciesForm().getBaseStatTotal()-N}).forEach((I,L)=>{L<2?(e4(I,-G4),R.setDialogueToken("highBstPokemon"+(L+1),I.getNameToRender())):e4(I,P4)}),R.setDialogueToken("reductionValue",G4.toString()),R.setDialogueToken("increaseValue",P4.toString()),await HE(`${TO}:option.1.selected_2`,null,void 0,!0),R.dialogue.outro=[{text:`${TO}:outro`}],TE({fillRemaining:!0}),IE(!0),!0}).withSimpleOption({buttonLabel:`${TO}:option.2.label`,buttonTooltip:`${TO}:option.2.tooltip`,selected:[{text:`${TO}:option.2.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter;TE({guaranteedModifierTypeFuncs:[k.SOUL_DEW],fillRemaining:!0}),R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[KE.PLAYER],move:new pA(E.GASTRO_ACID),ignorePp:!0},{sourceBattlerIndex:KE.ENEMY,targets:[KE.PLAYER],move:new pA(E.STEALTH_ROCK),ignorePp:!0}),R.dialogue.outro=[],await Te(!0,!0,500),await se(R.enemyPartyConfigs[0])}).build(),DR="mysteryEncounters/thePokemonSalesman",si=4,D8=100,l8=50,_8=qE.withEncounterType(WA.THE_POKEMON_SALESMAN).withEncounterTier(xE.ULTRA).withSceneWaveRangeRequirement(...Pe).withSceneRequirement(new UI(0,si)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"pokemon_salesman",fileRoot:"mystery-encounters",hasShadow:!0}]).withIntroDialogue([{text:`${DR}:intro`},{text:`${DR}:intro_dialogue`,speaker:`${DR}:speaker`}]).setLocalizationKey(`${DR}`).withTitle(`${DR}:title`).withDescription(`${DR}:description`).withQuery(`${DR}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter;let e=H4(),I=0;for(;(SA(e.abilityHidden)||e.abilityHidden===O.NONE)&&I<5;)e=H4(),I++;const L=DA(D8),N=pe.getEventEncounters().filter(H=>!YA(H.species).legendary&&!YA(H.species).subLegendary&&!YA(H.species).mythical&&!cH.includes(H.species)&&!T8.includes(H.species));let S;if(L===0||(SA(e.abilityHidden)||e.abilityHidden===O.NONE)&&N.length===0)e=YA(A.MAGIKARP),S=new IL(e,5,2,void 0,void 0,!0);else if(N.length>0&&(L<=l8||SA(e.abilityHidden)||e.abilityHidden===O.NONE)){I=0;do{const H=He(N);if(e=YA(H.species),S=new IL(e,5,e.abilityHidden===O.NONE?void 0:2,H.formIndex),S.trySetShinySeed(),S.trySetShinySeed(),S.trySetShinySeed(),S.shiny||S.abilityIndex===2)break;I++}while(I<6);if(!S.shiny&&S.abilityIndex!==2)if(N.some(H=>!!YA(H.species).abilityHidden)){N.filter(P=>!!YA(P.species).abilityHidden);const H=He(N);e=YA(H.species),S=new IL(e,5,2,H.formIndex),S.trySetShinySeed(),S.trySetShinySeed(),S.trySetShinySeed()}else e=YA(A.MAGIKARP),S=new IL(e,5,2,void 0,void 0,!0)}else S=new IL(e,5,2,e.formIndex);S.generateAndPopulateMoveset();const{spriteKey:n,fileRoot:i}=N_(S);R.spriteConfigs.push({spriteKey:n,fileRoot:i,hasShadow:!0,repeat:!0,isPokemon:!0,isShiny:S.shiny,variant:S.variant});const C=FR[e.speciesId];let o=si*(Math.max(C,2.5)/5);S.shiny&&(o=si,S.abilityIndex=0,R.dialogue.encounterOptionsDialogue.description=`${DR}:description_shiny`,R.options[0].dialogue.buttonTooltip=`${DR}:option.1.tooltip_shiny`);const l=T.getWaveMoneyAmount(o);return R.setDialogueToken("purchasePokemon",S.getNameToRender()),R.setDialogueToken("price",l.toString()),R.misc={price:l,pokemon:S},S.calculateStats(),!0}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withHasDexProgress(!0).withSceneMoneyRequirement(0,si).withDialogue({buttonLabel:`${DR}:option.1.label`,buttonTooltip:`${DR}:option.1.tooltip`,selected:[{text:`${DR}:option.1.selected_message`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.price,I=R.misc.pokemon;YO(-e,!0,!1),await FI(`${DR}:option.1.selected_dialogue`,`${DR}:speaker`),await Te();const L=new dO(I);L.player=!1,await eT(L.toPokemon(),null,MA.POKEBALL,!0,!0),IE(!0)}).build()).withSimpleOption({buttonLabel:`${DR}:option.2.label`,buttonTooltip:`${DR}:option.2.tooltip`,selected:[{text:`${DR}:option.2.selected`}]},async()=>(IE(!0),!0)).build();function H4(){return YA(PH([0,5],cH,void 0,!1,!1,!1))}r(H4,"getSalesmanSpeciesOffer");const qe="mysteryEncounters/anOfferYouCantRefuse",G8=10,P8=30,H8=qE.withEncounterType(WA.AN_OFFER_YOU_CANT_REFUSE).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(...Pe).withScenePartySizeRequirement(2,6,!0).withIntroSpriteConfigs([{spriteKey:A.LIEPARD.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:0,y:-4,yShadow:-4},{spriteKey:"rich_kid_m",fileRoot:"trainer",hasShadow:!0,x:2,y:5,yShadow:5}]).withIntroDialogue([{text:`${qe}:intro`},{text:`${qe}:intro_dialogue`,speaker:`${qe}:speaker`}]).setLocalizationKey(`${qe}`).withTitle(`${qe}:title`).withDescription(`${qe}:description`).withQuery(`${qe}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=Uv(!0,!0),I=e.getSpeciesForm().getRootSpeciesId(),L=FR[I]??1,N=Math.max(P8/10*L,G8),S=T.getWaveMoneyAmount(N);if(R.setDialogueToken("strongestPokemon",e.getNameToRender()),R.setDialogueToken("price",S.toString()),R.misc={pokemon:e,price:S},R.options[1].primaryPokemonRequirements[0].meetsRequirement()){const C=R.dialogueTokens.option2PrimaryAbility,o=R.dialogueTokens.option2PrimaryMove;C?R.setDialogueToken("moveOrAbility",C):o&&R.setDialogueToken("moveOrAbility",o)}const i=qA(k.SHINY_CHARM);return R.setDialogueToken("itemName",(i==null?void 0:i.name)??_.t("modifierType:ModifierType.SHINY_CHARM.name")),R.setDialogueToken("liepardName",YA(A.LIEPARD).getName()),!0}).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${qe}:option.1.label`,buttonTooltip:`${qe}:option.1.tooltip`,selected:[{text:`${qe}:option.1.selected`,speaker:`${qe}:speaker`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return YO(R.misc.price),T.removePokemonFromPlayerParty(R.misc.pokemon),!0}).withOptionPhase(async()=>{T.phaseManager.unshiftNew("ModifierRewardPhase",k.SHINY_CHARM),IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(tN.Some(new Jt(zv,!0),new ll(jv,!0))).withDialogue({buttonLabel:`${qe}:option.2.label`,buttonTooltip:`${qe}:option.2.tooltip`,disabledButtonTooltip:`${qe}:option.2.tooltip_disabled`,selected:[{speaker:`${qe}:speaker`,text:`${qe}:option.2.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;YO(R.misc.price),RO(R.options[1].primaryPokemon.id,YA(A.LIEPARD).baseExp,!0),IE(!0)}).build()).withSimpleOption({buttonLabel:`${qe}:option.3.label`,buttonTooltip:`${qe}:option.3.tooltip`,selected:[{speaker:`${qe}:speaker`,text:`${qe}:option.3.selected`}]},async()=>(IE(!0),!0)).build(),IR="mysteryEncounters/delibirdy",B_=["BerryModifier","PokemonInstantReviveModifier"],K_=["BerryModifier","PokemonInstantReviveModifier","TerastallizeModifier","PokemonBaseStatModifier","PokemonBaseStatTotalModifier"],u4=2,Ct=r(()=>{const R=pe.getDelibirdyBuff();if(R.length>0){const e=R.filter(I=>{const L=qA(k[I]),N=T.findModifier(S=>S.type.id===(L==null?void 0:L.id));return!(N&&N.getStackCount()>=N.getMaxStackCount())});e.length>0?T.phaseManager.unshiftNew("ModifierRewardPhase",k[He(e)]):T.phaseManager.unshiftNew("ModifierRewardPhase",k.VOUCHER)}},"doEventReward"),u8=qE.withEncounterType(WA.DELIBIRDY).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(...Pe).withSceneRequirement(new UI(0,u4)).withPrimaryPokemonRequirement(tN.Some(new ht(B_),new ht(K_,1,!0))).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:A.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:38,scale:.94},{spriteKey:"",fileRoot:"",species:A.DELIBIRD,hasShadow:!0,repeat:!0,scale:1.06},{spriteKey:"",fileRoot:"",species:A.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:65,x:1,y:5,yShadow:5}]).withIntroDialogue([{text:`${IR}:intro`}]).setLocalizationKey(`${IR}`).withTitle(`${IR}:title`).withDescription(`${IR}:description`).withQuery(`${IR}:query`).withOutroDialogue([{text:`${IR}:outro`}]).withOnInit(()=>(T.currentBattle.mysteryEncounter.setDialogueToken("delibirdName",YA(A.DELIBIRD).getName()),T.loadBgm("mystery_encounter_delibirdy","mystery_encounter_delibirdy.mp3"),!0)).withOnVisualsStart(()=>(T.fadeAndSwitchBgm("mystery_encounter_delibirdy"),!0)).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,u4).withDialogue({buttonLabel:`${IR}:option.1.label`,buttonTooltip:`${IR}:option.1.tooltip`,selected:[{text:`${IR}:option.1.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return YO(-R.options[0].requirements[0].requiredMoney,!0,!1),!0}).withOptionPhase(async()=>{const R=T.findModifier(e=>e instanceof XO);if(R&&R.getStackCount()>=R.getMaxStackCount()){const e=qA(k.SHELL_BELL);await MO(T.getPlayerPokemon(),e),T.playSound("item_fanfare"),await HE(_.t("battle:rewardGain",{modifierName:e.name}),null,void 0,!0),Ct()}else T.phaseManager.unshiftNew("ModifierRewardPhase",k.AMULET_COIN),Ct();IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new ht(B_)).withDialogue({buttonLabel:`${IR}:option.2.label`,buttonTooltip:`${IR}:option.2.tooltip`,secondOptionPrompt:`${IR}:option.2.select_prompt`,selected:[{text:`${IR}:option.2.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>L.getHeldItems().filter(S=>B_.some(n=>S.constructor.name===n)&&S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(R.setDialogueToken("chosenItem",S.type.name),R.misc={chosenPokemon:L,chosenModifier:S},!0),"handler")})),"onPokemonSelected"),void 0,r(L=>R.options[1].pokemonMeetsPrimaryRequirements(L)?null:eR(`${IR}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.chosenModifier,I=R.misc.chosenPokemon;if(e instanceof ce){const L=T.findModifier(N=>N instanceof Rt);if(L&&L.getStackCount()>=L.getMaxStackCount()){const N=qA(k.SHELL_BELL);await MO(T.getPlayerPokemon(),N),T.playSound("item_fanfare"),await HE(_.t("battle:rewardGain",{modifierName:N.name}),null,void 0,!0),Ct()}else T.phaseManager.unshiftNew("ModifierRewardPhase",k.CANDY_JAR),Ct()}else{const L=T.findModifier(N=>N instanceof Vt);if(L&&L.getStackCount()>=L.getMaxStackCount()){const N=qA(k.SHELL_BELL);await MO(T.getPlayerPokemon(),N),T.playSound("item_fanfare"),await HE(_.t("battle:rewardGain",{modifierName:N.name}),null,void 0,!0),Ct()}else T.phaseManager.unshiftNew("ModifierRewardPhase",k.BERRY_POUCH),Ct()}I.loseHeldItem(e,!1),IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new ht(K_,1,!0)).withDialogue({buttonLabel:`${IR}:option.3.label`,buttonTooltip:`${IR}:option.3.tooltip`,secondOptionPrompt:`${IR}:option.3.select_prompt`,selected:[{text:`${IR}:option.3.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>L.getHeldItems().filter(S=>!K_.some(n=>S.constructor.name===n)&&S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(R.setDialogueToken("chosenItem",S.type.name),R.misc={chosenPokemon:L,chosenModifier:S},!0),"handler")})),"onPokemonSelected"),void 0,r(L=>R.options[2].pokemonMeetsPrimaryRequirements(L)?null:eR(`${IR}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.chosenModifier,I=R.misc.chosenPokemon,L=T.findModifier(N=>N instanceof dS);if(L&&L.getStackCount()>=L.getMaxStackCount()){const N=qA(k.SHELL_BELL);await MO(T.getPlayerParty()[0],N),T.playSound("item_fanfare"),await HE(_.t("battle:rewardGain",{modifierName:N.name}),null,void 0,!0),Ct()}else T.phaseManager.unshiftNew("ModifierRewardPhase",k.HEALING_CHARM),Ct();I.loseHeldItem(e,!1),IE(!0)}).build()).build(),mR="mysteryEncounters/absoluteAvarice",c8=qE.withEncounterType(WA.ABSOLUTE_AVARICE).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(20,180).withSceneRequirement(new Dl("BerryModifier",6)).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:A.GREEDENT,hasShadow:!0,alpha:.001,repeat:!0,x:-5},{spriteKey:"",fileRoot:"",species:A.GREEDENT,hasShadow:!1,repeat:!0,x:-5},{spriteKey:"lum_berry",fileRoot:"items",isItem:!0,x:7,y:-14,hidden:!0,disableAnimation:!0},{spriteKey:"salac_berry",fileRoot:"items",isItem:!0,x:2,y:4,hidden:!0,disableAnimation:!0},{spriteKey:"lansat_berry",fileRoot:"items",isItem:!0,x:32,y:5,hidden:!0,disableAnimation:!0},{spriteKey:"liechi_berry",fileRoot:"items",isItem:!0,x:6,y:-5,hidden:!0,disableAnimation:!0},{spriteKey:"sitrus_berry",fileRoot:"items",isItem:!0,x:7,y:8,hidden:!0,disableAnimation:!0},{spriteKey:"enigma_berry",fileRoot:"items",isItem:!0,x:26,y:-4,hidden:!0,disableAnimation:!0},{spriteKey:"leppa_berry",fileRoot:"items",isItem:!0,x:16,y:-27,hidden:!0,disableAnimation:!0},{spriteKey:"petaya_berry",fileRoot:"items",isItem:!0,x:30,y:-17,hidden:!0,disableAnimation:!0},{spriteKey:"ganlon_berry",fileRoot:"items",isItem:!0,x:16,y:-11,hidden:!0,disableAnimation:!0},{spriteKey:"apicot_berry",fileRoot:"items",isItem:!0,x:14,y:-2,hidden:!0,disableAnimation:!0},{spriteKey:"starf_berry",fileRoot:"items",isItem:!0,x:18,y:9,hidden:!0,disableAnimation:!0}]).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${mR}:intro`}]).setLocalizationKey(`${mR}`).withTitle(`${mR}:title`).withDescription(`${mR}:description`).withQuery(`${mR}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter;T.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),T.loadSe("Follow Me","battle_anims","Follow Me.mp3");const e=T.findModifiers(n=>n instanceof ce),I=new Map;T.getPlayerParty().forEach(n=>{const i=e.filter(C=>C.pokemonId===n.id);(i==null?void 0:i.length)>0&&I.set(n.id,i)}),R.misc={berryItemsMap:I};const L=[];e.forEach(n=>{for(let i=0;i<n.stackCount;i++){const C=qA(k.BERRY,[n.berryType]);L.push({modifier:C})}});const N=T.currentBattle.waveIndex<50?[c.SPDEF]:[c.SPDEF,c.SPD],S={levelAdditiveModifier:1,pokemonConfigs:[{species:YA(A.GREEDENT),isBoss:!0,bossSegments:3,shiny:!1,moveSet:[E.THRASH,E.CRUNCH,E.BODY_PRESS,E.SLACK_OFF],modifierConfigs:L,tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(n=>{le(`${mR}:option.1.boss_enraged`),T.phaseManager.unshiftNew("StatStageChangePhase",n.getBattlerIndex(),!0,N,1)},"mysteryEncounterBattleEffects")}]};return R.enemyPartyConfigs=[S],R.setDialogueToken("greedentName",YA(A.GREEDENT).getName()),!0}).withOnVisualsStart(()=>(B8(),c4(),T.findModifiers(e=>e instanceof ce).forEach(e=>{T.removeModifier(e)}),T.updateModifiers(!0),!0)).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${mR}:option.1.label`,buttonTooltip:`${mR}:option.1.tooltip`,selected:[{text:`${mR}:option.1.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=qA(k.REVIVER_SEED);R.setDialogueToken("foodReward",(e==null?void 0:e.name)??_.t("modifierType:ModifierType.REVIVER_SEED.name")),TE({fillRemaining:!0},void 0,r(()=>{T.getPlayerParty().forEach(N=>{const S=N.getHeldItems();if(e&&!S.some(n=>n instanceof YS)){const n=e.newModifier(N);T.addModifier(n,!1,!1,!1,!0)}}),le(`${mR}:option.1.food_stash`)},"givePartyPokemonReviverSeeds")),R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[KE.ENEMY],move:new pA(E.STUFF_CHEEKS),ignorePp:!0}),await Te(!0,!0,500),await se(R.enemyPartyConfigs[0])}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${mR}:option.2.label`,buttonTooltip:`${mR}:option.2.tooltip`,selected:[{text:`${mR}:option.2.selected`}]}).withOptionPhase(async()=>{const e=T.currentBattle.mysteryEncounter.misc.berryItemsMap;T.getPlayerParty().forEach(L=>{const N=e.get(L.id),S=[];N==null||N.forEach(i=>S.push(...new Array(i.stackCount).fill(i.berryType)));const n=Math.floor((S.length??0)*2/5);if(n>0)for(let i=0;i<n;i++){Phaser.Math.RND.shuffle(S);const C=S.pop(),o=qA(k.BERRY,[C]);MO(L,o)}}),await T.updateModifiers(!0),await Te(!0,!0,500),IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${mR}:option.3.label`,buttonTooltip:`${mR}:option.3.tooltip`,selected:[{text:`${mR}:option.3.selected`}]}).withPreOptionPhase(async()=>(K8(),c4(!0),!0)).withOptionPhase(async()=>{const R=GH(!1,!0).level-2,e=new oI(YA(A.GREEDENT),R,v.NONE,!1,!0);e.moveset=[new pA(E.THRASH),new pA(E.BODY_PRESS),new pA(E.STUFF_CHEEKS),new pA(E.SLACK_OFF)],e.passive=!0,await Te(!0,!0,500),await eT(e,null,MA.POKEBALL,!1),IE(!0)}).build()).build();function B8(){var L;const I=(L=T.currentBattle.mysteryEncounter.introVisuals)==null?void 0:L.getSpriteAtIndex(1);T.playSound("battle_anims/Follow Me"),T.tweens.chain({targets:I,tweens:[{duration:500,ease:"Cubic.easeOut",y:"+=75",x:"-=65",scale:1.1},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(we(2)>0?"-=":"+=")+5,y:(we(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(we(2)>0?"-=":"+=")+5,y:(we(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(we(2)>0?"-=":"+=")+5,y:(we(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(we(2)>0?"-=":"+=")+5,y:(we(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(we(2)>0?"-=":"+=")+5,y:(we(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(we(2)>0?"-=":"+=")+5,y:(we(2)>0?"-=":"+=")+5},{duration:500,ease:"Cubic.easeOut",y:"-=75",x:"+=65",scale:1},{duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1}]})}r(B8,"doGreedentSpriteSteal");function K8(){var I;const R=(I=T.currentBattle.mysteryEncounter.introVisuals)==null?void 0:I.getSpriteAtIndex(1);let e=1;T.tweens.add({targets:R,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:"-=8",loop:5,onStart:r(()=>{T.playSound("battle_anims/PRSFX- Bug Bite")},"onStart"),onLoop:r(()=>{e%2===0&&T.playSound("battle_anims/PRSFX- Bug Bite"),e++},"onLoop")})}r(K8,"doGreedentEatBerries");function c4(R=!1){let I=["starf","sitrus","lansat","salac","apicot","enigma","liechi","ganlon","lum","petaya","leppa"];R&&(I=I.reverse());const L=T.currentBattle.mysteryEncounter;I.forEach((N,S)=>{var l;const n=L.spriteConfigs.findIndex(H=>{var P;return(P=H.spriteKey)==null?void 0:P.includes(N)});let i,C;const o=(l=L.introVisuals)==null?void 0:l.getSpriteAtIndex(n);o&&(i=o[0],C=o[1]),T.time.delayedCall(150*S+400,()=>{i&&i.setVisible(!R),C&&C.setVisible(!R),N==="petaya"&&i&&C&&!R&&T.time.delayedCall(200,()=>{f8([i,C],30,500)})})})}r(c4,"doBerrySpritePile");function f8(R,e,I){let L=1,N=e;const S=r(()=>{T.tweens.add({targets:R,y:"+="+N,x:{value:"+="+L*L*10,ease:"Linear"},duration:L*I,ease:"Cubic.easeIn",onComplete:r(()=>{L=L>.01?L*.5:0,L&&(N=N*L,T.tweens.add({targets:R,y:"-="+N,x:{value:"+="+L*L*10,ease:"Linear"},duration:L*I,ease:"Cubic.easeOut",onComplete:r(()=>S(),"onComplete")}))},"onComplete")})},"doBounce");S()}r(f8,"doBerryBounce");const yR="mysteryEncounters/aTrainersTest",F8=qE.withEncounterType(WA.A_TRAINERS_TEST).withEncounterTier(xE.ROGUE).withSceneWaveRangeRequirement(100,Pe[1]).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${yR}:intro`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter;let e,I,L;switch(DA(5)){case 1:e=U.CHERYL,I=YI(A.BLISSEY),L="cheryl";break;case 2:e=U.MARLEY,I=YI(A.ARCANINE),L="marley";break;case 3:e=U.MIRA,I=YI(A.ALAKAZAM,!1,1),L="mira";break;case 4:e=U.RILEY,I=YI(A.LUCARIO,!1,1),L="riley";break;default:e=U.BUCK,I=YI(A.CLAYDOL),L="buck";break}R.dialogue.intro=[{speaker:`trainerNames:${L}`,text:`${yR}:${L}.intro_dialogue`}],R.options[0].dialogue.selected=[{speaker:`trainerNames:${L}`,text:`${yR}:${L}.accept`}],R.options[1].dialogue.selected=[{speaker:`trainerNames:${L}`,text:`${yR}:${L}.decline`}],R.setDialogueToken("statTrainerName",_.t(`trainerNames:${L}`));const N=`${_.t(`${yR}:title`)}:
${_.t(`trainerNames:${L}`)}`;R.misc={trainerType:e,trainerNameKey:L,trainerEggDescription:N};const S=he[e].clone(),n=S.getSpriteKey();return R.enemyPartyConfigs.push({levelAdditiveModifier:1,trainerConfig:S}),R.spriteConfigs=[{spriteKey:I.spriteKey,fileRoot:I.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:22,y:-2,yShadow:-2},{spriteKey:n,fileRoot:"trainer",hasShadow:!0,disableAnimation:!0,x:-24,y:4,yShadow:4}],!0}).setLocalizationKey(`${yR}`).withTitle(`${yR}:title`).withDescription(`${yR}:description`).withQuery(`${yR}:query`).withIntroDialogue().withSimpleOption({buttonLabel:`${yR}:option.1.label`,buttonTooltip:`${yR}:option.1.tooltip`},async()=>{const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs[0];await Te();const I={pulled:!1,sourceType:AR.EVENT,eggDescriptor:R.misc.trainerEggDescription,tier:B.EPIC};R.setDialogueToken("eggType",_.t(`${yR}:eggTypes.epic`)),TE({guaranteedModifierTypeFuncs:[k.SACRED_ASH],guaranteedModifierTiers:[p.ROGUE,p.ULTRA],fillRemaining:!0},[I]),await se(e)}).withSimpleOption({buttonLabel:`${yR}:option.2.label`,buttonTooltip:`${yR}:option.2.tooltip`},async()=>{const R=T.currentBattle.mysteryEncounter;T.phaseManager.unshiftNew("PartyHealPhase",!0);const e={pulled:!1,sourceType:AR.EVENT,eggDescriptor:R.misc.trainerEggDescription,tier:B.RARE};R.setDialogueToken("eggType",_.t(`${yR}:eggTypes.rare`)),TE({fillRemaining:!1,rerollMultiplier:-1},[e]),IE()}).withOutroDialogue([{text:`${yR}:outro`}]).build(),pO="mysteryEncounters/trashToTreasure",B4=700,K4=2.5,Y8=qE.withEncounterType(WA.TRASH_TO_TREASURE).withEncounterTier(xE.ULTRA).withSceneWaveRangeRequirement(60,Pe[1]).withMaxAllowedEncounters(1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:A.GARBODOR.toString()+"-gigantamax",fileRoot:"pokemon",hasShadow:!1,disableAnimation:!0,scale:1.5,y:8,tint:.4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${pO}:intro`}]).setLocalizationKey(`${pO}`).withTitle(`${pO}:title`).withDescription(`${pO}:description`).withQuery(`${pO}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,L={levelAdditiveModifier:.5,pokemonConfigs:[{species:YA(A.GARBODOR),isBoss:!0,shiny:!1,formIndex:1,bossSegmentModifier:1,moveSet:[E.GUNK_SHOT,E.STOMPING_TANTRUM,E.HAMMER_ARM,E.PAYBACK],modifierConfigs:[{modifier:qA(k.BERRY)},{modifier:qA(k.BERRY)},{modifier:qA(k.BERRY)},{modifier:qA(k.BERRY)},{modifier:qA(k.BASE_STAT_BOOSTER)},{modifier:qA(k.BASE_STAT_BOOSTER)},{modifier:qA(k.TOXIC_ORB),stackCount:DA(2,0)},{modifier:qA(k.SOOTHE_BELL),stackCount:DA(2,1)},{modifier:qA(k.LUCKY_EGG),stackCount:DA(3,1)},{modifier:qA(k.GOLDEN_EGG),stackCount:DA(2,0)}]}],disableSwitch:!0};return R.enemyPartyConfigs=[L],Zr([E.TOXIC,E.STOCKPILE]),T.loadSe("PRSFX- Dig2","battle_anims","PRSFX- Dig2.wav"),T.loadSe("PRSFX- Venom Drench","battle_anims","PRSFX- Venom Drench.wav"),R.setDialogueToken("costMultiplier",K4.toString()),!0}).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${pO}:option.1.label`,buttonTooltip:`${pO}:option.1.tooltip`,selected:[{text:`${pO}:option.1.selected`}]}).withPreOptionPhase(async()=>{h8()}).withOptionPhase(async()=>{await Te(),await W8();const R=qA(k.MYSTERY_ENCOUNTER_BLACK_SLUDGE,[K4]),e=R==null?void 0:R.newModifier();e&&(await T.addModifier(e,!1,!1,!1,!0),T.playSound("battle_anims/PRSFX- Venom Drench",{volume:2}),await HE(_.t("battle:rewardGain",{modifierName:e.type.name}),null,void 0,!0)),IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${pO}:option.2.label`,buttonTooltip:`${pO}:option.2.tooltip`,selected:[{text:`${pO}:option.2.selected`}]}).withOptionPhase(async()=>{T.setFieldScale(.75),await HE(`${pO}:option.2.selected_2`),await Te();const R=T.currentBattle.mysteryEncounter;TE({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.GREAT],fillRemaining:!0}),R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[KE.PLAYER],move:new pA(E.TOXIC),ignorePp:!0},{sourceBattlerIndex:KE.ENEMY,targets:[KE.ENEMY],move:new pA(E.STOCKPILE),ignorePp:!0}),await se(R.enemyPartyConfigs[0])}).build()).build();async function W8(){const R=qA(k.SHELL_BELL),e=qA(k.LEFTOVERS),I=T.getPlayerParty();for(const L of I){const S=T.findModifiers(n=>n instanceof GE&&n.pokemonId===L.id,!0).find(n=>n instanceof bL);if(!S||S.getStackCount()<S.getMaxStackCount()){await MO(L,e);break}}for(const L of I){const S=T.findModifiers(n=>n instanceof GE&&n.pokemonId===L.id,!0).find(n=>n instanceof bL);if(!S||S.getStackCount()<S.getMaxStackCount()){await MO(L,e);break}}T.playSound("item_fanfare"),await HE(_.t("battle:rewardGainCount",{modifierName:e.name,count:2}),null,void 0,!0);for(const L of I){const S=T.findModifiers(n=>n instanceof GE&&n.pokemonId===L.id,!0).find(n=>n instanceof kL);if(!S||S.getStackCount()<S.getMaxStackCount()){await MO(L,R);break}}T.playSound("item_fanfare"),await HE(_.t("battle:rewardGainCount",{modifierName:R.name,count:1}),null,void 0,!0)}r(W8,"tryApplyDigRewardItems");function h8(){T.playSound("battle_anims/PRSFX- Dig2"),T.time.delayedCall(B4,()=>{T.playSound("battle_anims/PRSFX- Dig2"),T.playSound("battle_anims/PRSFX- Venom Drench",{volume:2})}),T.time.delayedCall(B4*2,()=>{T.playSound("battle_anims/PRSFX- Dig2")})}r(h8,"doGarbageDig");const tR="mysteryEncounters/berriesAbound",d8=qE.withEncounterType(WA.BERRIES_ABOUND).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${tR}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=xr(vr),I=uH(e,!0);R.setDialogueToken("enemyPokemon",Q(I));const L={pokemonConfigs:[{level:e,species:I.species,dataSource:new dO(I),isBoss:!0}]};R.enemyPartyConfigs=[L];const N=T.currentBattle.waveIndex>160?7:T.currentBattle.waveIndex>120?5:T.currentBattle.waveIndex>40?4:2;t_(T.getPlayerParty(),cE.PLAYER,0),R.misc={numBerries:N};const{spriteKey:S,fileRoot:n}=N_(I);R.spriteConfigs=[{spriteKey:"berries_abound_bush",fileRoot:"mystery-encounters",x:25,y:-6,yShadow:-7,disableAnimation:!0,hasShadow:!0},{spriteKey:S,fileRoot:n,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:I.shiny,variant:I.variant}];const i=Cv(BT[c.SPD],!0,!1);return R.misc.fastestPokemon=i,R.misc.enemySpeed=I.getStat(c.SPD),R.setDialogueToken("fastestPokemon",i.getNameToRender()),!0}).setLocalizationKey(`${tR}`).withTitle(`${tR}:title`).withDescription(`${tR}:description`).withQuery(`${tR}:query`).withSimpleOption({buttonLabel:`${tR}:option.1.label`,buttonTooltip:`${tR}:option.1.tooltip`,selected:[{text:`${tR}:option.1.selected`}]},async()=>{const e=T.currentBattle.mysteryEncounter.misc.numBerries,I=r(()=>{const N=_.t(`${tR}:berries`);T.playSound("item_fanfare"),le(_.t("battle:rewardGainCount",{modifierName:N,count:e}));for(let S=0;S<e;S++)f_()},"doBerryRewards"),L=[];for(let N=0;N<5;N++){const S=Ue(k.BERRY);S&&L.push(S)}TE({guaranteedModifierTypeOptions:L,fillRemaining:!1},void 0,I),await se(T.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${tR}:option.2.label`,buttonTooltip:`${tR}:option.2.tooltip`}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.fastestPokemon,I=R.misc.enemySpeed,L=e.getStat(c.SPD)/(I*1.1),N=R.misc.numBerries,S=[];for(let C=0;C<5;C++){const o=Ue(k.BERRY);o&&S.push(o)}if(L<1){const C=r(()=>{const H=_.t(`${tR}:berries`);T.playSound("item_fanfare"),le(_.t("battle:rewardGainCount",{modifierName:H,count:N}));for(let P=0;P<N;P++)f_()},"doBerryRewards"),o=T.currentBattle.waveIndex<50?[c.DEF,c.SPDEF,c.SPD]:[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],l=T.currentBattle.mysteryEncounter.enemyPartyConfigs[0];l.pokemonConfigs[0].tags=[d.MYSTERY_ENCOUNTER_POST_SUMMON],l.pokemonConfigs[0].mysteryEncounterBattleEffects=H=>{le(`${tR}:option.2.boss_enraged`),T.phaseManager.unshiftNew("StatStageChangePhase",H.getBattlerIndex(),!0,o,1)},TE({guaranteedModifierTypeOptions:S,fillRemaining:!1},void 0,C),await HE(`${tR}:option.2.selected_bad`),await se(l);return}const n=Math.max(Math.min(Math.round((L-1)/.08),N),2);R.setDialogueToken("numBerries",String(n));const i=r(()=>{const C=_.t(`${tR}:berries`);T.playSound("item_fanfare"),le(_.t("battle:rewardGainCount",{modifierName:C,count:n}));for(let o=0;o<n;o++)f_(e)},"doFasterBerryRewards");RO(e.id,R.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),TE({guaranteedModifierTypeOptions:S,fillRemaining:!1},void 0,i),await HE(`${tR}:option.2.selected`),IE()}).build()).withSimpleOption({buttonLabel:`${tR}:option.3.label`,buttonTooltip:`${tR}:option.3.tooltip`,selected:[{text:`${tR}:option.3.selected`}]},async()=>(IE(!0),!0)).build();function f_(R){const e=DA(Object.keys(EE).filter(N=>!Number.isNaN(Number(N))).length),I=qA(k.BERRY,[e]),L=T.getPlayerParty();if(R){const N=T.findModifier(S=>S instanceof ce&&S.pokemonId===R.id&&S.berryType===e,!0);if(!N||N.getStackCount()<N.getMaxStackCount()){MO(R,I);return}}for(const N of L){const S=T.findModifier(n=>n instanceof ce&&n.pokemonId===N.id&&n.berryType===e,!0);if(!S||S.getStackCount()<S.getMaxStackCount()){MO(N,I);return}}}r(f_,"tryGiveBerry");const Re="mysteryEncounters/clowningAround",f4=[O.STURDY,O.PICKUP,O.INTIMIDATE,O.GUTS,O.DROUGHT,O.DRIZZLE,O.SNOW_WARNING,O.SAND_STREAM,O.ELECTRIC_SURGE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.MISTY_SURGE,O.MAGICIAN,O.SHEER_FORCE,O.PRANKSTER],p8=qE.withEncounterType(WA.CLOWNING_AROUND).withEncounterTier(xE.ULTRA).withDisallowedChallenges(QA.SINGLE_TYPE).withSceneWaveRangeRequirement(80,Pe[1]).withAnimations(KO.SMOKESCREEN).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:A.MR_MIME.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:-25,tint:.3,y:-3,yShadow:-3},{spriteKey:A.BLACEPHALON.toString(),fileRoot:"pokemon/exp",hasShadow:!0,repeat:!0,x:25,tint:.3,y:-3,yShadow:-3},{spriteKey:"harlequin",fileRoot:"trainer",hasShadow:!0,x:0,y:2,yShadow:2}]).withIntroDialogue([{text:`${Re}:intro`},{text:`${Re}:intro_dialogue`,speaker:`${Re}:speaker`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=U.HARLEQUIN,I=he[e].clone(),L=new Oe(new dA(1,HA.STRONG),new dA(1,HA.STRONGER));I.setPartyTemplates(L),I.setDoubleOnly(),I.partyTemplateFunc=null;const N=f4[DA(f4.length)];R.setDialogueToken("ability",fe[N].name),R.misc={ability:N};const S=DA(18);let n=DA(17);return n>=S&&n++,R.enemyPartyConfigs.push({trainerConfig:I,pokemonConfigs:[{species:YA(A.MR_MIME),isBoss:!0,moveSet:[E.TEETER_DANCE,E.ALLY_SWITCH,E.DAZZLING_GLEAM,E.PSYCHIC]},{species:YA(A.BLACEPHALON),customPokemonData:new fO({ability:N,types:[S,n]}),isBoss:!0,moveSet:[E.TRICK,E.HYPNOSIS,E.SHADOW_BALL,E.MIND_BLOWN]}],doubleBattle:!0}),Zr([E.ROLE_PLAY,E.TAUNT]),R.setDialogueToken("blacephalonName",YA(A.BLACEPHALON).getName()),!0}).setLocalizationKey(`${Re}`).withTitle(`${Re}:title`).withDescription(`${Re}:description`).withQuery(`${Re}:query`).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${Re}:option.1.label`,buttonTooltip:`${Re}:option.1.tooltip`,selected:[{text:`${Re}:option.1.selected`,speaker:`${Re}:speaker`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs[0];TE({fillRemaining:!0}),R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[KE.ENEMY_2],move:new pA(E.ROLE_PLAY),ignorePp:!0},{sourceBattlerIndex:KE.ENEMY_2,targets:[KE.PLAYER],move:new pA(E.TAUNT),ignorePp:!0},{sourceBattlerIndex:KE.ENEMY_2,targets:[KE.PLAYER_2],move:new pA(E.TAUNT),ignorePp:!0}),await Te(),await se(e)}).withPostOptionPhase(async()=>(await g8()&&await HE(`${Re}:option.1.ability_gained`),T.tweens.add({targets:T.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:250}),new Et(KO.SMOKESCREEN,T.getPlayerPokemon(),T.getPlayerPokemon()).playWithoutTargets(230,40,2),!0)).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${Re}:option.2.label`,buttonTooltip:`${Re}:option.2.tooltip`,selected:[{text:`${Re}:option.2.selected`,speaker:`${Re}:speaker`},{text:`${Re}:option.2.selected_2`},{text:`${Re}:option.2.selected_3`,speaker:`${Re}:speaker`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=T.getPlayerParty();let I=e[0],L=I.getHeldItems().filter(C=>C.isTransferable&&!(C instanceof ce)).reduce((C,o)=>C+o.stackCount,0);for(const C of e){const o=C.getHeldItems().filter(l=>l.isTransferable&&!(l instanceof ce)).reduce((l,H)=>l+H.stackCount,0);o>L&&(I=C,L=o)}R.setDialogueToken("switchPokemon",I.getNameToRender());const N=I.getHeldItems();let S=0;for(const C of N.filter(o=>o instanceof ce))S+=C.stackCount,T.removeModifier(C);F_(I,S,"Berries");let n=0,i=0;for(const C of N.filter(o=>o.isTransferable&&!(o instanceof ce))){const o=C.type.withTierFromPool(cE.PLAYER,e),l=o.tier??p.ULTRA;o.id==="GOLDEN_EGG"||l===p.ROGUE?(i+=C.stackCount,T.removeModifier(C)):(o.id==="LUCKY_EGG"||o.id==="SOOTHE_BELL"||l===p.ULTRA)&&(n+=C.stackCount,T.removeModifier(C))}F_(I,n,p.ULTRA),F_(I,i,p.ROGUE)}).withOptionPhase(async()=>{IE(!0)}).withPostOptionPhase(async()=>{new Et(KO.SMOKESCREEN,T.getPlayerPokemon(),T.getPlayerPokemon()).playWithoutTargets(230,40,2),await Te(!0,!0,200)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${Re}:option.3.label`,buttonTooltip:`${Re}:option.3.tooltip`,selected:[{text:`${Re}:option.3.selected`,speaker:`${Re}:speaker`},{text:`${Re}:option.3.selected_2`},{text:`${Re}:option.3.selected_3`,speaker:`${Re}:speaker`}]}).withPreOptionPhase(async()=>{for(const R of T.getPlayerParty()){const e=R.getTypes(!1,!1,!0);let I=R.moveset.filter(S=>S&&!e.includes(S.getMove().type)&&S.getMove().category!==G.STATUS).map(S=>S.getMove().type);(I==null?void 0:I.length)>0&&(I=[...new Set(I)].sort(),I=gI(I));const L=[t.UNKNOWN];let N=null;for(;N===null||N===L[0]||e.includes(N);)I.length>0?N=I.pop()??null:N=DA(18);L.push(N),R.customPokemonData.types=L,R.isFusion()&&(R.fusionCustomPokemonData||(R.fusionCustomPokemonData=new fO),R.fusionCustomPokemonData.types=L)}}).withOptionPhase(async()=>{IE(!0)}).withPostOptionPhase(async()=>{new Et(KO.SMOKESCREEN,T.getPlayerPokemon(),T.getPlayerPokemon()).playWithoutTargets(230,40,2),await Te(!0,!0,200)}).build()).withOutroDialogue([{text:`${Re}:outro`}]).build();async function g8(){return new Promise(async R=>{await FI(`${Re}:option.1.apply_ability_dialogue`,`${Re}:speaker`),await HE(`${Re}:option.1.apply_ability_message`),T.ui.setMode(hE.MESSAGE).then(()=>{w3(R)})})}r(g8,"handleSwapAbility");function w3(R){HE(`${Re}:option.1.ability_prompt`,null,500,!1);const I={options:[{label:_.t("menu:yes"),handler:r(()=>(m8(R),!0),"handler")},{label:_.t("menu:no"),handler:r(()=>(R(!1),!0),"handler")}],maxOptions:7,yOffset:0};T.ui.setModeWithoutClear(hE.OPTION_SELECT,I,null,!0)}r(w3,"displayYesNoOptions");function m8(R){RR(r(L=>{const N=T.currentBattle.mysteryEncounter;p3(L,N.misc.ability),N.setDialogueToken("chosenPokemon",L.getNameToRender()),T.ui.setMode(hE.MESSAGE).then(()=>R(!0))},"onPokemonSelected"),r(()=>{T.ui.setMode(hE.MESSAGE).then(()=>{w3(R)})},"onPokemonNotSelected"))}r(m8,"onYesAbilitySwap");function F_(R,e,I){const L=[[k.REVIVER_SEED,1],[k.GOLDEN_PUNCH,5],[k.ATTACK_TYPE_BOOSTER,99],[k.QUICK_CLAW,3],[k.WIDE_LENS,3]],N=[[k.LEFTOVERS,4],[k.SHELL_BELL,4],[k.SOUL_DEW,10],[k.SCOPE_LENS,1],[k.BATON,1],[k.FOCUS_BAND,5],[k.KINGS_ROCK,3],[k.GRIP_CLAW,5]],S=[[EE.APICOT,3],[EE.ENIGMA,2],[EE.GANLON,3],[EE.LANSAT,3],[EE.LEPPA,2],[EE.LIECHI,3],[EE.LUM,2],[EE.PETAYA,3],[EE.SALAC,2],[EE.SITRUS,2],[EE.STARF,3]];let n;I==="Berries"?n=S:n=I===p.ULTRA?L:N;for(let i=0;i<e;i++){if(n.length===0)return;const C=DA(n.length),o=n[C];let l;I==="Berries"?l=qA(k.BERRY,[o[0]]):l=qA(o[0]),MO(R,l),o[1]--,o[1]<=0&&n.splice(C,1)}}r(F_,"generateItemsOfTier");const bE="mysteryEncounters/partTimer",y8=qE.withEncounterType(WA.PART_TIMER).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withIntroSpriteConfigs([{spriteKey:"part_timer_crate",fileRoot:"mystery-encounters",hasShadow:!1,y:6,x:15},{spriteKey:"worker_f",fileRoot:"trainer",hasShadow:!0,x:-18,y:4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${bE}:intro`},{speaker:`${bE}:speaker`,text:`${bE}:intro_dialogue`}]).withOnInit(()=>(T.loadSe("PRSFX- Horn Drill1","battle_anims","PRSFX- Horn Drill1.wav"),T.loadSe("PRSFX- Horn Drill3","battle_anims","PRSFX- Horn Drill3.wav"),T.loadSe("PRSFX- Guillotine2","battle_anims","PRSFX- Guillotine2.wav"),T.loadSe("PRSFX- Heavy Slam2","battle_anims","PRSFX- Heavy Slam2.wav"),T.loadSe("PRSFX- Agility","battle_anims","PRSFX- Agility.wav"),T.loadSe("PRSFX- Extremespeed1","battle_anims","PRSFX- Extremespeed1.wav"),T.loadSe("PRSFX- Accelerock1","battle_anims","PRSFX- Accelerock1.wav"),T.loadSe("PRSFX- Captivate","battle_anims","PRSFX- Captivate.wav"),T.loadSe("PRSFX- Attract2","battle_anims","PRSFX- Attract2.wav"),T.loadSe("PRSFX- Aurora Veil2","battle_anims","PRSFX- Aurora Veil2.wav"),!0)).setLocalizationKey(`${bE}`).withTitle(`${bE}:title`).withDescription(`${bE}:description`).withQuery(`${bE}:query`).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${bE}:option.1.label`,buttonTooltip:`${bE}:option.1.tooltip`,selected:[{text:`${bE}:option.1.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>{R.setDialogueToken("selectedPokemon",L.getNameToRender());const N=Math.floor((2*90+16)*L.level*.01)+5,S=(L.getStat(c.SPD)-N)/N,n=Math.min(Math.max(2.5*(1+S),1),4);R.misc={moneyMultiplier:n};for(const i of L.moveset)if(i){const C=i.getMovePp()-2;i.ppUsed=i.ppUsed<C?C:i.ppUsed}RO(L.id,100),Te(!0,!1),w8()},"onPokemonSelected"),void 0,r(L=>YL(L,`${bE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await Te(!1,!1);const R=T.currentBattle.mysteryEncounter.misc.moneyMultiplier;R>2.5?await FI(`${bE}:job_complete_good`,`${bE}:speaker`):await FI(`${bE}:job_complete_bad`,`${bE}:speaker`);const e=T.getWaveMoneyAmount(R);YO(e,!0,!1),await HE(_.t("mysteryEncounterMessages:receive_money",{amount:e})),await HE(`${bE}:pokemon_tired`),TE({fillRemaining:!0}),IE()}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${bE}:option.2.label`,buttonTooltip:`${bE}:option.2.tooltip`,selected:[{text:`${bE}:option.2.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>{R.setDialogueToken("selectedPokemon",L.getNameToRender());const N=Math.floor((2*75+16)*L.level*.01)+L.level+10,S=Math.floor((2*75+16)*L.level*.01)+5,n=N+1.5*(S*2),C=(L.getStat(c.HP)+1.5*(L.getStat(c.ATK)+L.getStat(c.DEF))-n)/n,o=Math.min(Math.max(2.5*(1+C),1),4);R.misc={moneyMultiplier:o};for(const l of L.moveset)if(l){const H=l.getMovePp()-2;l.ppUsed=l.ppUsed<H?H:l.ppUsed}RO(L.id,100),Te(!0,!1),V8()},"onPokemonSelected"),void 0,r(L=>YL(L,`${bE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await Te(!1,!1);const R=T.currentBattle.mysteryEncounter.misc.moneyMultiplier;R>2.5?await FI(`${bE}:job_complete_good`,`${bE}:speaker`):await FI(`${bE}:job_complete_bad`,`${bE}:speaker`);const e=T.getWaveMoneyAmount(R);YO(e,!0,!1),await HE(_.t("mysteryEncounterMessages:receive_money",{amount:e})),await HE(`${bE}:pokemon_tired`),TE({fillRemaining:!0}),IE()}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new Jt(V3,!0)).withDialogue({buttonLabel:`${bE}:option.3.label`,buttonTooltip:`${bE}:option.3.tooltip`,disabledButtonTooltip:`${bE}:option.3.disabled_tooltip`,selected:[{text:`${bE}:option.3.selected`}]}).withPreOptionPhase(async()=>{var I;const R=T.currentBattle.mysteryEncounter,e=(I=R.selectedOption)==null?void 0:I.primaryPokemon;R.setDialogueToken("selectedPokemon",e.getNameToRender());for(const L of e.moveset)if(L){const N=L.getMovePp()-2;L.ppUsed=L.ppUsed<N?N:L.ppUsed}return RO(e.id,100),Te(!0,!1),v8(),!0}).withOptionPhase(async()=>{await Te(!1,!1),await FI(`${bE}:job_complete_good`,`${bE}:speaker`);const R=T.getWaveMoneyAmount(2.5);YO(R,!0,!1),await HE(_.t("mysteryEncounterMessages:receive_money",{amount:R})),await HE(`${bE}:pokemon_tired`),TE({fillRemaining:!0}),IE()}).build()).withOutroDialogue([{speaker:`${bE}:speaker`,text:`${bE}:outro`}]).build();function V8(){T.playSound("battle_anims/PRSFX- Horn Drill1"),T.playSound("battle_anims/PRSFX- Horn Drill1"),T.time.delayedCall(1e3,()=>{T.playSound("battle_anims/PRSFX- Guillotine2")}),T.time.delayedCall(2e3,()=>{T.playSound("battle_anims/PRSFX- Heavy Slam2")}),T.time.delayedCall(2500,()=>{T.playSound("battle_anims/PRSFX- Guillotine2")})}r(V8,"doStrongWorkSfx");function w8(){T.playSound("battle_anims/PRSFX- Accelerock1"),T.time.delayedCall(1500,()=>{T.playSound("battle_anims/PRSFX- Extremespeed1")}),T.time.delayedCall(2e3,()=>{T.playSound("battle_anims/PRSFX- Extremespeed1")}),T.time.delayedCall(2250,()=>{T.playSound("battle_anims/PRSFX- Agility")})}r(w8,"doDeliverySfx");function v8(){T.playSound("battle_anims/PRSFX- Captivate"),T.time.delayedCall(1500,()=>{T.playSound("battle_anims/PRSFX- Attract2")}),T.time.delayedCall(2e3,()=>{T.playSound("battle_anims/PRSFX- Aurora Veil2")}),T.time.delayedCall(3e3,()=>{T.playSound("battle_anims/PRSFX- Attract2")})}r(v8,"doSalesSfx");const rR="mysteryEncounters/dancingLessons",x8=[s.VOLCANO,s.BEACH,s.ISLAND,s.WASTELAND,s.MOUNTAIN,s.BADLANDS,s.DESERT],Z8=[s.CONSTRUCTION_SITE,s.POWER_PLANT,s.FACTORY,s.LABORATORY,s.SLUM,s.METROPOLIS,s.DOJO],b8=[s.JUNGLE,s.FAIRY_CAVE,s.MEADOW,s.PLAINS,s.GRASS,s.TALL_GRASS,s.FOREST],k8=[s.RUINS,s.SWAMP,s.CAVE,s.ABYSS,s.GRAVEYARD,s.LAKE,s.TEMPLE],X8=qE.withEncounterType(WA.DANCING_LESSONS).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(...Pe).withIntroSpriteConfigs([]).withAnimations(KO.DANCE).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withOnVisualsStart(()=>{const R=T.getEnemyPokemon();return new Et(KO.DANCE,R,T.getPlayerPokemon()).play(!1,()=>{R.shiny&&R.sparkle()}),!0}).withIntroDialogue([{text:`${rR}:intro`}]).setLocalizationKey(`${rR}`).withTitle(`${rR}:title`).withDescription(`${rR}:description`).withQuery(`${rR}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=YA(A.ORICORIO),I=xr(vr),L=new oI(e,I,v.NONE,!1);L.moveset.some(C=>C&&C.getMove().id===E.REVELATION_DANCE)||(L.moveset.length<4?L.moveset.push(new pA(E.REVELATION_DANCE)):L.moveset[0]=new pA(E.REVELATION_DANCE));const N=T.arena.biomeType;x8.includes(N)?L.formIndex=0:Z8.includes(N)?L.formIndex=1:b8.includes(N)?L.formIndex=2:k8.includes(N)?L.formIndex=3:L.formIndex=0;const S=new dO(L),n=T.addEnemyPokemon(e,I,v.NONE,!1,!1,S);for(const C of T.getEnemyParty())C.leaveField(!0,!0,!0);T.currentBattle.enemyParty=[n],T.field.add(n),n.x-=300,R.loadAssets.push(n.loadAssets());const i={pokemonConfigs:[{species:e,dataSource:S,isBoss:!0,tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(C=>{le(`${rR}:option.1.boss_enraged`),T.phaseManager.unshiftNew("StatStageChangePhase",C.getBattlerIndex(),!0,[c.ATK,c.DEF,c.SPATK,c.SPDEF],1)},"mysteryEncounterBattleEffects")}]};return R.enemyPartyConfigs=[i],R.misc={oricorioData:S},R.setDialogueToken("oricorioName",YA(A.ORICORIO).getName()),!0}).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${rR}:option.1.label`,buttonTooltip:`${rR}:option.1.tooltip`,selected:[{text:`${rR}:option.1.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[KE.PLAYER],move:new pA(E.REVELATION_DANCE),ignorePp:!0}),await Y_(),TE({guaranteedModifierTypeFuncs:[k.BATON],fillRemaining:!0}),await se(R.enemyPartyConfigs[0])}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${rR}:option.2.label`,buttonTooltip:`${rR}:option.2.tooltip`,selected:[{text:`${rR}:option.2.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(I=>{R.setDialogueToken("selectedPokemon",I.getNameToRender()),T.phaseManager.unshiftNew("LearnMovePhase",T.getPlayerParty().indexOf(I),E.REVELATION_DANCE),new Et(KO.DANCE,T.getEnemyPokemon(),T.getPlayerPokemon()).play()},"onPokemonSelected"))}).withOptionPhase(async()=>{await Y_(),IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new Jt(T4,!0)).withDialogue({buttonLabel:`${rR}:option.3.label`,buttonTooltip:`${rR}:option.3.tooltip`,disabledButtonTooltip:`${rR}:option.3.disabled_tooltip`,secondOptionPrompt:`${rR}:option.3.select_prompt`,selected:[{text:`${rR}:option.3.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>L.moveset.filter(N=>N&&T4.includes(N.getMove().id)).map(N=>({label:N.getName(),handler:r(()=>(R.setDialogueToken("selectedPokemon",L.getNameToRender()),R.setDialogueToken("selectedMove",N.getName()),R.misc.selectedMove=N,!0),"handler")})),"onPokemonSelected"),void 0,r(L=>L.isAllowedInBattle()?R.options[2].pokemonMeetsPrimaryRequirements(L)?null:eR(`${rR}:invalid_selection`)??null:_.t("partyUiHandler:cantBeUsed",{pokemonName:L.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{var L;const R=T.currentBattle.mysteryEncounter,e=R.misc.oricorioData.toPokemon();e.passive=!0;const I=(L=R.misc.selectedMove)==null?void 0:L.getMove().id;e.moveset.some(N=>N.getMove().id===I)||(e.moveset.length<4?e.moveset.push(new pA(I)):e.moveset[3]=new pA(I)),await Y_(),await eT(e,null,MA.POKEBALL,!1),IE(!0)}).build()).build();function Y_(){return new Promise(R=>{const e=T.getEnemyParty()[0];T.tweens.add({targets:e,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:r(()=>{T.field.remove(e,!0),R()},"onComplete")})})}r(Y_,"hideOricorioPokemon");var v3=(R=>(R[R.CENTER=0]="CENTER",R[R.LEFT=1]="LEFT",R[R.RIGHT=2]="RIGHT",R))(v3||{});function RH(R,e,I){return new Promise(L=>{const N=T.fieldUI.getByName("Dream Background"),S=T.add.image(0,0,"default_bg");S.setOrigin(0,0),S.setVisible(!1),N.add(S);let n,i,C,o;const l=I===0?0:I===2?100:-100,H=I!==0?-15:0,P=r(()=>{const K=T.addPokemonSprite(R,S.displayWidth/2+l,S.displayHeight/2+H,"pkmn__sub");return K.setPipeline(T.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),K},"getPokemonSprite");N.add(n=P()),N.add(i=P()),N.add(C=P()),N.add(o=P()),n.setAlpha(0),i.setAlpha(0),i.setTintFill(16777215),C.setVisible(!1),o.setVisible(!1),o.setTintFill(16777215),[n,i,C,o].map(K=>{const f=R.getSpriteKey(!0);try{K.play(f)}catch(h){console.error(`Failed to play animation for ${f}`,h)}K.setPipeline(T.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:Zt(R.getTeraType()),isTerastallized:R.isTerastallized}),K.setPipelineData("ignoreTimeTint",!0),K.setPipelineData("spriteKey",R.getSpriteKey()),K.setPipelineData("shiny",R.shiny),K.setPipelineData("variant",R.variant),["spriteColors","fusionSpriteColors"].map(h=>{R.summonData.speciesForm&&(h+="Base"),K.pipelineData[h]=R.getSprite().pipelineData[h]})}),[C,o].map(K=>{const f=e.getSpriteKey(!0);try{K.play(f)}catch(h){console.error(`Failed to play animation for ${f}`,h)}K.setPipelineData("ignoreTimeTint",!0),K.setPipelineData("spriteKey",e.getSpriteKey()),K.setPipelineData("shiny",e.shiny),K.setPipelineData("variant",e.variant),["spriteColors","fusionSpriteColors"].map(h=>{e.summonData.speciesForm&&(h+="Base"),K.pipelineData[h]=e.getSprite().pipelineData[h]})}),T.tweens.add({targets:n,alpha:1,ease:"Cubic.easeInOut",duration:2e3,onComplete:r(()=>{Q8(S,N,l,H),T.tweens.addCounter({from:0,to:1,duration:1e3,onUpdate:r(K=>{i.setAlpha(K.getValue())},"onUpdate"),onComplete:r(()=>{n.setVisible(!1),T.time.delayedCall(700,()=>{J8(S,N,l,H),T.time.delayedCall(1e3,()=>{o.setScale(.25),o.setVisible(!0),x3(1.5,6,i,o).then(()=>{C.setVisible(!0),$8(S,N,l,H),T.time.delayedCall(900,()=>{T.tweens.add({targets:o,alpha:0,duration:1500,delay:150,easing:"Sine.easeIn",onComplete:r(()=>{T.time.delayedCall(3e3,()=>{L(),T.tweens.add({targets:C,alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:r(()=>{R.destroy(),e.setVisible(!1),e.setAlpha(1)},"onComplete")})})},"onComplete")})})})})})},"onComplete")})},"onComplete")})})}r(RH,"doPokemonTransformationSequence");function Q8(R,e,I,L){let N=0;T.tweens.addCounter({repeat:64,duration:xR(1),onRepeat:r(()=>{if(N<64){if(!(N&7))for(let S=0;S<4;S++)q8((N&120)*2+S*64,R,e,I,L);N++}},"onRepeat")})}r(Q8,"doSpiralUpward");function J8(R,e,I,L){let N=0;T.tweens.addCounter({repeat:96,duration:xR(1),onRepeat:r(()=>{if(N<96){if(N<6)for(let S=0;S<9;S++)z8(S*16,R,e,I,L);N++}},"onRepeat")})}r(J8,"doArcDownward");function x3(R,e,I,L){return new Promise(N=>{const S=R===e;T.tweens.add({targets:I,scale:.25,ease:"Cubic.easeInOut",duration:500/R,yoyo:!S}),T.tweens.add({targets:L,scale:1,ease:"Cubic.easeInOut",duration:500/R,yoyo:!S,onComplete:r(()=>{R<e?x3(R+.5,e,I,L).then(n=>N(n)):(I.setVisible(!1),N(!0))},"onComplete")})})}r(x3,"doCycle");function $8(R,e,I,L){let N=0;T.tweens.addCounter({repeat:48,duration:xR(1),onRepeat:r(()=>{if(N){if(N===32)for(let S=0;S<16;S++)F4(S*16,8,R,e,I,L)}else for(let S=0;S<16;S++)F4(S*16,4,R,e,I,L);N++},"onRepeat")})}r($8,"doCircleInward");function q8(R,e,I,L,N){const S=e.displayWidth/2+L,n=T.add.image(S,0,"evo_sparkle");I.add(n);let i=0,C=48;const o=T.tweens.addCounter({repeat:-1,duration:xR(1),onRepeat:r(()=>{l()},"onRepeat")}),l=r(()=>{!i||n.y>8?(n.setPosition(S,88-i*i/80+N),n.y+=gr(R,C)/4,n.x+=L_(R,C),n.setScale(1-i/80),R+=4,i&1&&C--,i++):(n.destroy(),o.remove())},"updateParticle");l()}r(q8,"doSpiralUpwardParticle");function z8(R,e,I,L,N){const S=e.displayWidth/2+L,n=T.add.image(S,0,"evo_sparkle");n.setScale(.5),I.add(n);let i=0,C=8;const o=T.tweens.addCounter({repeat:-1,duration:xR(1),onRepeat:r(()=>{l()},"onRepeat")}),l=r(()=>{!i||n.y<88?(n.setPosition(S,8+i*i/5+N),n.y+=gr(R,C)/4,n.x+=L_(R,C),C=8+gr(i*4,40),i++):(n.destroy(),o.remove())},"updateParticle");l()}r(z8,"doArcDownParticle");function F4(R,e,I,L,N,S){const n=I.displayWidth/2+N,i=I.displayHeight/2+S,C=T.add.image(n,i,"evo_sparkle");L.add(C);let o=120;const l=T.tweens.addCounter({repeat:-1,duration:xR(1),onRepeat:r(()=>{H()},"onRepeat")}),H=r(()=>{o>8?(C.setPosition(n,i),C.y+=gr(R,o),C.x+=L_(R,o),o-=e,R+=4):(C.destroy(),l.remove())},"updateParticle");H()}r(F4,"doCircleInwardParticle");const LR="mysteryEncounters/weirdDream",j8=[A.ETERNATUS,A.NIHILEGO,A.BUZZWOLE,A.PHEROMOSA,A.XURKITREE,A.CELESTEELA,A.KARTANA,A.GUZZLORD,A.POIPOLE,A.NAGANADEL,A.STAKATAKA,A.BLACEPHALON,A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.ROARING_MOON,A.WALKING_WAKE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.IRON_VALIANT,A.IRON_LEAVES,A.IRON_BOULDER,A.IRON_CROWN,A.COSMOG,A.MELTAN,A.KUBFU,A.COSMOEM,A.POIPOLE,A.TERAPAGOS,A.TYPE_NULL,A.CALYREX,A.NAGANADEL,A.URSHIFU,A.OGERPON,A.OKIDOGI,A.MUNKIDORI,A.FEZANDIPITI],Bl=600,br=570,Z3=20,Ax=10,Ex=[90,110],ex=[40,50],Rx=qE.withEncounterType(WA.WEIRD_DREAM).withEncounterTier(xE.ROGUE).withDisallowedChallenges(QA.SINGLE_TYPE,QA.SINGLE_GENERATION).withSceneWaveRangeRequirement(30,140).withIntroSpriteConfigs([{spriteKey:"weird_dream_woman",fileRoot:"mystery-encounters",hasShadow:!0,y:11,yShadow:6,x:4}]).withIntroDialogue([{text:`${LR}:intro`},{speaker:`${LR}:speaker`,text:`${LR}:intro_dialogue`}]).setLocalizationKey(`${LR}`).withTitle(`${LR}:title`).withDescription(`${LR}:description`).withQuery(`${LR}:query`).withOnInit(()=>{T.loadBgm("mystery_encounter_weird_dream","mystery_encounter_weird_dream.mp3");const R=Ox(),e=R.map(I=>I.newPokemon.loadAssets());return T.currentBattle.mysteryEncounter.misc={teamTransformations:R,loadAssets:e},!0}).withOnVisualsStart(()=>(T.fadeAndSwitchBgm("mystery_encounter_weird_dream"),!0)).withOption(iE.newOptionWithMode(rE.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${LR}:option.1.label`,buttonTooltip:`${LR}:option.1.tooltip`,selected:[{text:`${LR}:option.1.selected`}]}).withPreOptionPhase(async()=>{T.time.delayedCall(1e3,()=>{Lx()});for(const R of T.currentBattle.mysteryEncounter.misc.teamTransformations)T.removePokemonFromPlayerParty(R.previousPokemon,!1),T.getPlayerParty().push(R.newPokemon)}).withOptionPhase(async()=>{const R=HE(`${LR}:option.1.cutscene`);await Promise.all(T.currentBattle.mysteryEncounter.misc.loadAssets);const e=T.currentBattle.mysteryEncounter.misc.teamTransformations;if(e.length<=3)for(const I of e){const L=I.previousPokemon,N=I.newPokemon;await RH(L,N,v3.CENTER)}else await Sx(e);await R,Nx(),await HE(`${LR}:option.1.dream_complete`),await Ix(e),TE({guaranteedModifierTypeFuncs:[k.MEMORY_MUSHROOM,k.ROGUE_BALL,k.MINT,k.MINT,k.MINT],fillRemaining:!1}),IE(!0)}).build()).withSimpleOption({buttonLabel:`${LR}:option.2.label`,buttonTooltip:`${LR}:option.2.tooltip`,selected:[{text:`${LR}:option.2.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter.misc.teamTransformations,e=[];for(const n of R){const i=n.newPokemon,C=n.previousPokemon;await b3(C,i,i.species.getRootSpeciesId(),!0);const o=new dO(i);o.player=!1;const l=[];for(const P of n.heldItems)l.push({modifier:P.clone(),stackCount:P.getStackCount(),isTransferable:!1});if(k3(i)){const P=X3(i);l.push({modifier:qA(k.MYSTERY_ENCOUNTER_OLD_GATEAU,[Z3,P]),stackCount:1,isTransferable:!1})}const H={species:n.newSpecies,isBoss:i.getSpeciesForm().getBaseStatTotal()>br,level:C.level,dataSource:o,modifierConfigs:l};e.push(H)}const I=T.gameData.gender??de.UNSET,L=he[I===de.FEMALE?U.FUTURE_SELF_F:U.FUTURE_SELF_M].clone();L.setPartyTemplates(new dA(R.length,HA.STRONG));const N={trainerConfig:L,pokemonConfigs:e,female:I===de.FEMALE},S=r(()=>{const n=T.getPlayerParty().filter(i=>!i.passive);if((n==null?void 0:n.length)>0){const i=n[DA(n.length)];i.passive=!0,i.updateInfo(!0)}},"onBeforeRewards");TE({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],fillRemaining:!1},void 0,S),await HE(`${LR}:option.2.selected_2`,null,void 0,!0),await se(N)}).withSimpleOption({buttonLabel:`${LR}:option.3.label`,buttonTooltip:`${LR}:option.3.tooltip`,selected:[{text:`${LR}:option.3.selected`}]},async()=>{for(const R of T.getPlayerParty())R.level=Math.max(Math.ceil((100-Ax)/100*R.level),1),R.exp=BO(R.level,R.species.growthRate),R.levelExp=0,R.calculateStats(),R.getBattleInfo().setLevel(R.level),await R.updateInfo();return IE(!0),!0}).build();function Ox(){const R=T.getPlayerParty(),e=R.map(i=>i.species),I=R.map(i=>({previousPokemon:i}));let L=!1,N=!1;const S=R.length,n=gI(R.slice(0));for(let i=0;i<S;i++){const C=n[i],o=I.findIndex(f=>f.previousPokemon.id===C.id);I[o].heldItems=C.getHeldItems().filter(f=>!(f instanceof VI));const l=C.getSpeciesForm().getBaseStatTotal();let H;i<2?H=Ex:H=ex;const P=tx(l,H,L,N,e),K=P.getBaseStatTotal();K>Bl&&(L=!0),K<=Bl&&K>=br&&(N=!0),I[o].newSpecies=P,""+JSON.stringify(P),e.push(P)}for(const i of I){const C=DA(i.newSpecies.getAbilityCount());i.newPokemon=T.addPlayerPokemon(i.newSpecies,i.previousPokemon.level,C,void 0)}return I}r(Ox,"getTeamTransformations");async function Ix(R){var L;let e=!1;for(const N of R){const S=N.previousPokemon,n=N.newPokemon,i=n.species.getRootSpeciesId();await b3(S,n,i)&&(e=!0);for(const C of N.heldItems)C.pokemonId=n.id,T.addModifier(C,!1,!1,!1,!0);if(k3(n)){const C=X3(n),o=(L=k.MYSTERY_ENCOUNTER_OLD_GATEAU().generateType(T.getPlayerParty(),[Z3,C]))==null?void 0:L.withIdFromFunc(k.MYSTERY_ENCOUNTER_OLD_GATEAU),l=o==null?void 0:o.newModifier(n);l&&T.addModifier(l,!1,!1,!1,!0)}n.calculateStats(),await n.updateInfo()}const I=T.getPlayerParty().filter(N=>!N.passive);if((I==null?void 0:I.length)>0){const N=I[DA(I.length)];N.passive=!0,await N.updateInfo(!0)}e&&T.playSound("level_up_fanfare")}r(Ix,"doNewTeamPostProcess");async function b3(R,e,I,L=!1){let N=!1;if(e.species.abilityHidden){const o=e.species.ability2?2:1;if(e.abilityIndex<o){const l=new VA(256);T.applyModifiers(aI,!0,l),!DA(l.value)&&(e.abilityIndex=o)}}e.ivs=e.ivs.map(o=>{const l=DA(31);return l>o?l:o}),e.nature=[ZA.HARDY,ZA.DOCILE,ZA.BASHFUL,ZA.QUIRKY,ZA.SERIOUS][DA(5)],!L&&(e.getSpeciesForm().getBaseStatTotal()<=br||e.isShiny())&&(e.getSpeciesForm().abilityHidden&&e.abilityIndex===e.getSpeciesForm().getAbilityCount()-1&&T.validateAchv(YE.HIDDEN_ABILITY),e.species.subLegendary&&T.validateAchv(YE.CATCH_SUB_LEGENDARY),e.species.legendary&&T.validateAchv(YE.CATCH_LEGENDARY),e.species.mythical&&T.validateAchv(YE.CATCH_MYTHICAL),T.gameData.updateSpeciesDexIvs(e.species.getRootSpeciesId(!0),e.ivs),await T.gameData.setPokemonCaught(e,!0,!1,!1)&&(N=!0,await HE(_.t("battle:addedAsAStarter",{pokemonName:YA(I).getName()})))),e.pokerus=R.pokerus,e.luck=R.getLuck(),e.ivs=e.ivs.map((o,l)=>R.ivs[l]>o?R.ivs[l]:o),!L&&T.gameData.dexData[I].caughtAttr&&T.gameData.addStarterCandy(YA(I),1),e.generateAndPopulateMoveset();const S=e.moveset;e.moveset=R.moveset.slice(0);const n=await Tx(e,I,L);sx(e,S,n);const i=[t.UNKNOWN];let C=DA(18);for(;C===i[0];)C=DA(18);return i.push(C),e.customPokemonData.types=i,e.passive=R.passive,N}r(b3,"postProcessTransformedPokemon");function k3(R){return R.getSpeciesForm().getBaseStatTotal()<br}r(k3,"shouldGetOldGateau");function X3(R){const e=[],I=R.getSpeciesForm().baseStats.slice(0);return e.push(I[c.HP]<I[c.SPD]?c.HP:c.SPD),e.push(I[c.ATK]<I[c.SPATK]?c.ATK:c.SPATK),e.push(I[c.DEF]<I[c.SPDEF]?c.DEF:c.SPDEF),e}r(X3,"getOldGateauBoostedStats");function tx(R,e,I,L,N){let S;for(;SA(S);){const n=R+e[1],i=Math.max(R+e[0],0);let C=hL.filter(o=>{const l=o.getBaseStatTotal(),H=l>=i&&l<=n,P=(!L||l<br||l>Bl)&&(!I||l<=Bl);return H&&P&&!j8.includes(o.speciesId)});if((C==null?void 0:C.length)>20)for(C=gI(C),S=C.pop();SA(S)||N.includes(S);)S=C.pop();else e[0]-=10,e[1]+=10}return S}r(tx,"getTransformedSpecies");function Lx(){const R=T.add.container(0,-T.game.canvas.height/6);R.name="Dream Background";const e=T.add.rectangle(0,0,T.game.canvas.width/6,T.game.canvas.height/6,0);e.setName("Black Background"),e.setOrigin(0,0),R.add(e),e.setVisible(!0);const I=T.add.video(0,0,"evo_bg").stop();I.setLoop(!0),I.setOrigin(0,0),I.setScale(.4359673025),R.add(I),T.fieldUI.add(R),T.fieldUI.bringToTop(R),I.play(),R.setVisible(!0),R.alpha=0,T.tweens.add({targets:R,alpha:1,duration:3e3,ease:"Sine.easeInOut"})}r(Lx,"doShowDreamBackground");function Nx(){const R=T.fieldUI.getByName("Dream Background");T.tweens.add({targets:R,alpha:0,duration:3e3,ease:"Sine.easeInOut",onComplete:r(()=>{T.fieldUI.remove(R,!0)},"onComplete")})}r(Nx,"doHideDreamBackground");function Sx(R){return new Promise(e=>{const I=[];for(let S=0;S<3;S++){const n=S*4e3;T.time.delayedCall(n,()=>{const i=R[S],C=i.previousPokemon,o=i.newPokemon,l=S,H=RH(C,o,l).then(()=>{if(R.length>S+3){const P=R[S+3],K=P.previousPokemon,f=P.newPokemon;I.push(RH(K,f,l))}});I.push(H)})}const L=setInterval(N,500);async function N(){I.length===R.length&&(clearInterval(L),await Promise.all(I),e())}r(N,"checkAllPromisesExist")})}r(Sx,"doSideBySideTransformations");async function Tx(R,e,I=!1){var S;let L=null;const N=(S=R.getEggMoves())==null?void 0:S.slice(0);if(N){const n=gI([0,1,2,3]);let i=n.pop(),C=SA(i)?null:N[i],o=0;for(;o<3&&(!C||R.moveset.some(l=>l.moveId===C));)i=n.pop(),C=SA(i)?null:N[i],o++;C&&(R.moveset.some(l=>l.moveId===C)||(R.moveset.length<4?R.moveset.push(new pA(C)):(L=DA(4),R.moveset[L]=new pA(C))),!I&&!SA(i)&&T.gameData.dexData[e].caughtAttr&&await T.gameData.setEggMoveUnlocked(YA(e),i,!0))}return L}r(Tx,"addEggMoveToNewPokemonMoveset");function sx(R,e,I){let L=null;for(const N of e)if((N==null?void 0:N.getMove().type)===R.getTypes()[0]&&!R.moveset.some(S=>S.moveId===N.moveId)){L=N;break}if(!L){for(const N of e)if(!R.moveset.some(S=>S.moveId===N.moveId)){L=N;break}}if(L)if(R.moveset.length<4)R.moveset.push(L);else{let N=DA(4);for(;I!==null&&N===I;)N=DA(4);R.moveset[N]=L}}r(sx,"addFavoredMoveToNewPokemonMoveset");const SR="mysteryEncounters/theWinstrateChallenge",ax=qE.withEncounterType(WA.THE_WINSTRATE_CHALLENGE).withEncounterTier(xE.ROGUE).withSceneWaveRangeRequirement(100,Pe[1]).withIntroSpriteConfigs([{spriteKey:"vito",fileRoot:"trainer",hasShadow:!1,x:16,y:-4},{spriteKey:"vivi",fileRoot:"trainer",hasShadow:!1,x:-14,y:-4},{spriteKey:"victor",fileRoot:"trainer",hasShadow:!0,x:-32},{spriteKey:"victoria",fileRoot:"trainer",hasShadow:!0,x:40},{spriteKey:"vicky",fileRoot:"trainer",hasShadow:!0,x:3,y:5,yShadow:5}]).withIntroDialogue([{text:`${SR}:intro`},{speaker:`${SR}:speaker`,text:`${SR}:intro_dialogue`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter;return R.enemyPartyConfigs.push(ox()),R.enemyPartyConfigs.push(Ux()),R.enemyPartyConfigs.push(Cx()),R.enemyPartyConfigs.push(ix()),R.enemyPartyConfigs.push(rx()),!0}).setLocalizationKey(`${SR}`).withTitle(`${SR}:title`).withDescription(`${SR}:description`).withQuery(`${SR}:query`).withSimpleOption({buttonLabel:`${SR}:option.1.label`,buttonTooltip:`${SR}:option.1.tooltip`,selected:[{speaker:`${SR}:speaker`,text:`${SR}:option.1.selected`}]},async()=>{T.currentBattle.mysteryEncounter.doContinueEncounter=async()=>{await nx()},await Te(!0,!1),await OH()}).withSimpleOption({buttonLabel:`${SR}:option.2.label`,buttonTooltip:`${SR}:option.2.tooltip`,selected:[{speaker:`${SR}:speaker`,text:`${SR}:option.2.selected`}]},async()=>{T.phaseManager.unshiftNew("PartyHealPhase",!0),TE({guaranteedModifierTypeFuncs:[k.RARER_CANDY],fillRemaining:!1}),IE()}).build();async function OH(){const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs.pop();if(e)await se(e);else{await Te(!1,!1),await FI(`${SR}:victory`,`${SR}:speaker`);const I=k.VOUCHER_PREMIUM().newModifier();T.addModifier(I),T.playSound("item_fanfare"),await HE(_.t("battle:rewardGain",{modifierName:I==null?void 0:I.type.name})),await FI(`${SR}:victory_2`,`${SR}:speaker`),T.ui.clearText();const L=Ue(k.MYSTERY_ENCOUNTER_MACHO_BRACE);L.type.tier=p.MASTER,TE({guaranteedModifierTypeOptions:[L],fillRemaining:!1}),R.doContinueEncounter=void 0,IE(!1,DO.NO_BATTLE)}}r(OH,"spawnNextTrainerOrEndEncounter");function nx(){return new Promise(async R=>{if(T.currentBattle.mysteryEncounter.enemyPartyConfigs.length===0){const e=T.currentBattle.trainer;e&&T.tweens.add({targets:e,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:r(()=>{T.field.remove(e,!0)},"onComplete")}),await OH(),R()}else{T.arena.resetArenaEffects();const e=T.getPlayerField();for(const L of e)L.lapseTag(d.COMMANDED);e.forEach((L,N)=>T.phaseManager.unshiftNew("ReturnPhase",N));for(const L of T.getPlayerParty())L.species.speciesId===A.EISCUE&&L.hasAbility(O.ICE_FACE)&&L.formIndex===1&&T.triggerPokemonFormChange(L,DE),L.resetBattleAndWaveData(),SV("PostBattleInitAbAttr",L);T.phaseManager.unshiftNew("ShowTrainerPhase");const I=T.currentBattle.trainer;T.currentBattle.trainer=null,await OH(),I&&T.tweens.add({targets:I,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:r(()=>{T.field.remove(I,!0),R()},"onComplete")})}})}r(nx,"endTrainerBattleAndShowDialogue");function rx(){return{trainerType:U.VICTOR,pokemonConfigs:[{species:YA(A.SWELLOW),isBoss:!1,abilityIndex:0,nature:ZA.ADAMANT,moveSet:[E.FACADE,E.BRAVE_BIRD,E.PROTECT,E.QUICK_ATTACK],modifierConfigs:[{modifier:qA(k.FLAME_ORB),isTransferable:!1},{modifier:qA(k.FOCUS_BAND),stackCount:2,isTransferable:!1}]},{species:YA(A.OBSTAGOON),isBoss:!1,abilityIndex:1,nature:ZA.ADAMANT,moveSet:[E.FACADE,E.OBSTRUCT,E.NIGHT_SLASH,E.FIRE_PUNCH],modifierConfigs:[{modifier:qA(k.FLAME_ORB),isTransferable:!1},{modifier:qA(k.LEFTOVERS),stackCount:2,isTransferable:!1}]}]}}r(rx,"getVictorTrainerConfig");function ix(){return{trainerType:U.VICTORIA,pokemonConfigs:[{species:YA(A.ROSERADE),isBoss:!1,abilityIndex:0,nature:ZA.CALM,moveSet:[E.SYNTHESIS,E.SLUDGE_BOMB,E.GIGA_DRAIN,E.SLEEP_POWDER],modifierConfigs:[{modifier:qA(k.SOUL_DEW),isTransferable:!1},{modifier:qA(k.QUICK_CLAW),stackCount:2,isTransferable:!1}]},{species:YA(A.GARDEVOIR),isBoss:!1,formIndex:1,nature:ZA.TIMID,moveSet:[E.PSYSHOCK,E.MOONBLAST,E.SHADOW_BALL,E.WILL_O_WISP],modifierConfigs:[{modifier:qA(k.ATTACK_TYPE_BOOSTER,[t.PSYCHIC]),stackCount:1,isTransferable:!1},{modifier:qA(k.ATTACK_TYPE_BOOSTER,[t.FAIRY]),stackCount:1,isTransferable:!1}]}]}}r(ix,"getVictoriaTrainerConfig");function Cx(){return{trainerType:U.VIVI,pokemonConfigs:[{species:YA(A.SEAKING),isBoss:!1,abilityIndex:3,nature:ZA.ADAMANT,moveSet:[E.WATERFALL,E.MEGAHORN,E.KNOCK_OFF,E.REST],modifierConfigs:[{modifier:qA(k.BERRY,[EE.LUM]),stackCount:2,isTransferable:!1},{modifier:qA(k.BASE_STAT_BOOSTER,[c.HP]),stackCount:4,isTransferable:!1}]},{species:YA(A.BRELOOM),isBoss:!1,abilityIndex:1,nature:ZA.JOLLY,moveSet:[E.SPORE,E.SWORDS_DANCE,E.SEED_BOMB,E.DRAIN_PUNCH],modifierConfigs:[{modifier:qA(k.BASE_STAT_BOOSTER,[c.HP]),stackCount:4,isTransferable:!1},{modifier:qA(k.TOXIC_ORB),isTransferable:!1}]},{species:YA(A.CAMERUPT),isBoss:!1,formIndex:1,nature:ZA.CALM,moveSet:[E.EARTH_POWER,E.FIRE_BLAST,E.YAWN,E.PROTECT],modifierConfigs:[{modifier:qA(k.QUICK_CLAW),stackCount:3,isTransferable:!1}]}]}}r(Cx,"getViviTrainerConfig");function Ux(){return{trainerType:U.VICKY,pokemonConfigs:[{species:YA(A.MEDICHAM),isBoss:!1,formIndex:1,nature:ZA.IMPISH,moveSet:[E.AXE_KICK,E.ICE_PUNCH,E.ZEN_HEADBUTT,E.BULLET_PUNCH],modifierConfigs:[{modifier:qA(k.SHELL_BELL),isTransferable:!1}]}]}}r(Ux,"getVickyTrainerConfig");function ox(){return{trainerType:U.VITO,pokemonConfigs:[{species:YA(A.HISUI_ELECTRODE),isBoss:!1,abilityIndex:0,nature:ZA.MODEST,moveSet:[E.THUNDERBOLT,E.GIGA_DRAIN,E.FOUL_PLAY,E.THUNDER_WAVE],modifierConfigs:[{modifier:qA(k.BASE_STAT_BOOSTER,[c.SPD]),stackCount:2,isTransferable:!1}]},{species:YA(A.SWALOT),isBoss:!1,abilityIndex:2,nature:ZA.QUIET,moveSet:[E.SLUDGE_BOMB,E.GIGA_DRAIN,E.ICE_BEAM,E.EARTHQUAKE],modifierConfigs:[{modifier:qA(k.BERRY,[EE.SITRUS]),stackCount:2},{modifier:qA(k.BERRY,[EE.APICOT]),stackCount:2},{modifier:qA(k.BERRY,[EE.GANLON]),stackCount:2},{modifier:qA(k.BERRY,[EE.STARF]),stackCount:2},{modifier:qA(k.BERRY,[EE.SALAC]),stackCount:2},{modifier:qA(k.BERRY,[EE.LUM]),stackCount:2},{modifier:qA(k.BERRY,[EE.LANSAT]),stackCount:2},{modifier:qA(k.BERRY,[EE.LIECHI]),stackCount:2},{modifier:qA(k.BERRY,[EE.PETAYA]),stackCount:2},{modifier:qA(k.BERRY,[EE.ENIGMA]),stackCount:2},{modifier:qA(k.BERRY,[EE.LEPPA]),stackCount:2}]},{species:YA(A.DODRIO),isBoss:!1,abilityIndex:2,nature:ZA.JOLLY,moveSet:[E.DRILL_PECK,E.QUICK_ATTACK,E.THRASH,E.KNOCK_OFF],modifierConfigs:[{modifier:qA(k.KINGS_ROCK),stackCount:2,isTransferable:!1}]},{species:YA(A.ALAKAZAM),isBoss:!1,formIndex:1,nature:ZA.BOLD,moveSet:[E.PSYCHIC,E.SHADOW_BALL,E.FOCUS_BLAST,E.THUNDERBOLT],modifierConfigs:[{modifier:qA(k.WIDE_LENS),stackCount:2,isTransferable:!1}]},{species:YA(A.DARMANITAN),isBoss:!1,abilityIndex:0,nature:ZA.IMPISH,moveSet:[E.EARTHQUAKE,E.U_TURN,E.FLARE_BLITZ,E.ROCK_SLIDE],modifierConfigs:[{modifier:qA(k.QUICK_CLAW),stackCount:2,isTransferable:!1}]}]}}r(ox,"getVitoTrainerConfig");const CR="mysteryEncounters/teleportingHijinks",W_=1.75,Mx=[s.SPACE,s.FAIRY_CAVE,s.LABORATORY,s.ISLAND,s.WASTELAND,s.DOJO],Dx=[t.ELECTRIC,t.STEEL],lx=qE.withEncounterType(WA.TELEPORTING_HIJINKS).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withSceneRequirement(new X0([1,2,3],10)).withSceneRequirement(new UI(0,W_)).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"teleporting_hijinks_teleporter",fileRoot:"mystery-encounters",hasShadow:!0,x:4,y:4,yShadow:1}]).withIntroDialogue([{text:`${CR}:intro`}]).setLocalizationKey(`${CR}`).withTitle(`${CR}:title`).withDescription(`${CR}:description`).withQuery(`${CR}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=T.getWaveMoneyAmount(W_);return R.setDialogueToken("price",e.toString()),R.misc={price:e},!0}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,W_).withDialogue({buttonLabel:`${CR}:option.1.label`,buttonTooltip:`${CR}:option.1.tooltip`,selected:[{text:`${CR}:option.1.selected`}]}).withPreOptionPhase(async()=>{YO(-T.currentBattle.mysteryEncounter.misc.price,!0,!1)}).withOptionPhase(async()=>{const R=await Y4();TE({fillRemaining:!0}),await se(R)}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPokemonTypeRequirement(Dx,!0,1).withDialogue({buttonLabel:`${CR}:option.2.label`,buttonTooltip:`${CR}:option.2.tooltip`,disabledButtonTooltip:`${CR}:option.2.disabled_tooltip`,selected:[{text:`${CR}:option.2.selected`}]}).withOptionPhase(async()=>{const R=await Y4();TE({fillRemaining:!0}),RO(T.currentBattle.mysteryEncounter.selectedOption.primaryPokemon.id,100),await se(R)}).build()).withSimpleOption({buttonLabel:`${CR}:option.3.label`,buttonTooltip:`${CR}:option.3.tooltip`,selected:[{text:`${CR}:option.3.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter,e=xr(vr),I=T.arena.randomSpecies(T.currentBattle.waveIndex,e,0,Jn(T.getPlayerParty()),!0),L=new oI(I,e,v.NONE,!0);R.setDialogueToken("enemyPokemon",Q(L));const N={pokemonConfigs:[{level:e,species:I,dataSource:new dO(L),isBoss:!0}]},S=Ue(k.ATTACK_TYPE_BOOSTER,[t.STEEL]),n=Ue(k.ATTACK_TYPE_BOOSTER,[t.ELECTRIC]);TE({guaranteedModifierTypeOptions:[S,n],fillRemaining:!0}),await Te(!0,!0),await se(N)}).build();async function Y4(){const R=T.currentBattle.mysteryEncounter,e=Mx.filter(C=>T.arena.biomeType!==C),I=e[DA(e.length)];await HE(`${CR}:transport`),await Promise.all([_x(I),Te()]),T.updateBiomeWaveText(),T.playBgm(),await HE(`${CR}:attacked`);const L=xr(vr),N=T.arena.randomSpecies(T.currentBattle.waveIndex,L,0,Jn(T.getPlayerParty()),!0),S=new oI(N,L,v.NONE,!0);R.setDialogueToken("enemyPokemon",Q(S));const n=T.currentBattle.waveIndex<50?[c.DEF,c.SPDEF,c.SPD]:[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD];return{pokemonConfigs:[{level:L,species:N,dataSource:new dO(S),isBoss:!0,tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(C=>{le(`${CR}:boss_enraged`),T.phaseManager.unshiftNew("StatStageChangePhase",C.getBattlerIndex(),!0,n,1)},"mysteryEncounterBattleEffects")}]}}r(Y4,"doBiomeTransitionDialogueAndBattleInit");async function _x(R){return new Promise(e=>{T.tweens.add({targets:[T.arenaEnemy,T.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:r(()=>{T.newArena(R);const L=`${oH(R)}_bg`;T.arenaBgTransition.setTexture(L),T.arenaBgTransition.setAlpha(0),T.arenaBgTransition.setVisible(!0),T.arenaPlayerTransition.setBiome(R),T.arenaPlayerTransition.setAlpha(0),T.arenaPlayerTransition.setVisible(!0),T.tweens.add({targets:[T.arenaPlayer,T.arenaBgTransition,T.arenaPlayerTransition],duration:1e3,ease:"Sine.easeInOut",alpha:r(N=>N===T.arenaPlayer?0:1,"alpha"),onComplete:r(()=>{T.arenaBg.setTexture(L),T.arenaPlayer.setBiome(R),T.arenaPlayer.setAlpha(1),T.arenaEnemy.setBiome(R),T.arenaEnemy.setAlpha(1),T.arenaNextEnemy.setBiome(R),T.arenaBgTransition.setVisible(!1),T.arenaPlayerTransition.setVisible(!1),T.lastEnemyTrainer&&T.lastEnemyTrainer.destroy(),e(),T.tweens.add({targets:T.arenaEnemy,x:"-=300"})},"onComplete")})},"onComplete")})})}r(_x,"animateBiomeChange");const wE="mysteryEncounters/bugTypeSuperfan",h_=[A.PARASECT,A.VENOMOTH,A.LEDIAN,A.ARIADOS,A.YANMA,A.BEAUTIFLY,A.DUSTOX,A.MASQUERAIN,A.NINJASK,A.VOLBEAT,A.ILLUMISE,A.ANORITH,A.KRICKETUNE,A.WORMADAM,A.MOTHIM,A.SKORUPI,A.JOLTIK,A.LARVESTA,A.VIVILLON,A.CHARJABUG,A.RIBOMBEE,A.SPIDOPS,A.LOKIX],jt=[A.SCYTHER,A.PINSIR,A.HERACROSS,A.FORRETRESS,A.SCIZOR,A.SHUCKLE,A.SHEDINJA,A.ARMALDO,A.VESPIQUEN,A.DRAPION,A.YANMEGA,A.LEAVANNY,A.SCOLIPEDE,A.CRUSTLE,A.ESCAVALIER,A.ACCELGOR,A.GALVANTULA,A.VIKAVOLT,A.ARAQUANID,A.ORBEETLE,A.CENTISKORCH,A.FROSMOTH,A.KLEAVOR],Gx=[{species:A.PINSIR,formIndex:1},{species:A.SCIZOR,formIndex:1},{species:A.HERACROSS,formIndex:1},{species:A.ORBEETLE,formIndex:1},{species:A.CENTISKORCH,formIndex:1},{species:A.DURANT},{species:A.VOLCARONA},{species:A.GOLISOPOD}],W4=[A.GENESECT,A.SLITHER_WING,A.BUZZWOLE,A.PHEROMOSA],h4=[E.MEGAHORN,E.ATTACK_ORDER,E.BUG_BITE,E.FIRST_IMPRESSION,E.LUNGE],d4=[E.SILVER_WIND,E.SIGNAL_BEAM,E.BUG_BUZZ,E.POLLEN_PUFF,E.STRUGGLE_BUG],p4=[E.STRING_SHOT,E.DEFEND_ORDER,E.RAGE_POWDER,E.STICKY_WEB,E.SILK_TRAP],g4=[E.LEECH_LIFE,E.U_TURN,E.HEAL_ORDER,E.QUIVER_DANCE,E.INFESTATION],Ut=[30,50,70,100,120,140,160],Px=qE.withEncounterType(WA.BUG_TYPE_SUPERFAN).withEncounterTier(xE.GREAT).withPrimaryPokemonRequirement(tN.Some(new ht(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new _l(t.BUG,1),new RT(t.BUG,!1,1))).withMaxAllowedEncounters(1).withSceneWaveRangeRequirement(...Pe).withIntroSpriteConfigs([]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${wE}:intro`},{speaker:`${wE}:speaker`,text:`${wE}:intro_dialogue`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=Hx(T.currentBattle.waveIndex),I=e.getSpriteKey();R.enemyPartyConfigs.push({trainerConfig:e,female:!0});let L,N;T.currentBattle.waveIndex<Ut[3]?(L=YI(A.BEEDRILL,!1),N=YI(A.BUTTERFREE,!1)):(L=YI(A.BEEDRILL,!1,1),N=YI(A.BUTTERFREE,!1,1)),R.spriteConfigs=[{spriteKey:L.spriteKey,fileRoot:L.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:-30,tint:.15,y:-4,yShadow:-4},{spriteKey:N.spriteKey,fileRoot:N.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:30,tint:.15,y:-4,yShadow:-4},{spriteKey:I,fileRoot:"trainer",hasShadow:!0,x:4,y:7,yShadow:7}];const n=[qA(k.QUICK_CLAW),qA(k.GRIP_CLAW),qA(k.ATTACK_TYPE_BOOSTER,[t.BUG])].map(i=>(i==null?void 0:i.name)??"unknown").join("/");return R.setDialogueToken("requiredBugItems",n),!0}).setLocalizationKey(`${wE}`).withTitle(`${wE}:title`).withDescription(`${wE}:description`).withQuery(`${wE}:query`).withSimpleOption({buttonLabel:`${wE}:option.1.label`,buttonTooltip:`${wE}:option.1.tooltip`,selected:[{speaker:`${wE}:speaker`,text:`${wE}:option.1.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs[0],I=[];I.push(new pA(h4[DA(h4.length)])),I.push(new pA(d4[DA(d4.length)])),I.push(new pA(p4[DA(p4.length)])),I.push(new pA(g4[DA(g4.length)])),R.misc={moveTutorOptions:I},R.onRewards=ux,TE({fillRemaining:!0}),await Te(!0,!0),await se(e)}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new RT(t.BUG,!1,1)).withDialogue({buttonLabel:`${wE}:option.2.label`,buttonTooltip:`${wE}:option.2.tooltip`,disabledButtonTooltip:`${wE}:option.2.disabled_tooltip`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=T.getPlayerParty().filter(L=>L.isOfType(t.BUG,!0)).length,I=_.t(`${wE}:numBugTypes`,{count:e});if(R.setDialogueToken("numBugTypes",I),e<2)TE({guaranteedModifierTypeFuncs:[k.SUPER_LURE,k.GREAT_BALL],fillRemaining:!1}),R.selectedOption.dialogue.selected=[{speaker:`${wE}:speaker`,text:`${wE}:option.2.selected_0_to_1`}];else if(e<4)TE({guaranteedModifierTypeFuncs:[k.QUICK_CLAW,k.MAX_LURE,k.ULTRA_BALL],fillRemaining:!1}),R.selectedOption.dialogue.selected=[{speaker:`${wE}:speaker`,text:`${wE}:option.2.selected_2_to_3`}];else if(e<6)TE({guaranteedModifierTypeFuncs:[k.GRIP_CLAW,k.MAX_LURE,k.ROGUE_BALL],fillRemaining:!1}),R.selectedOption.dialogue.selected=[{speaker:`${wE}:speaker`,text:`${wE}:option.2.selected_4_to_5`}];else{const L=[Ue(k.MASTER_BALL)],N=[];T.findModifier(o=>o instanceof yL)||L.push(Ue(k.MEGA_BRACELET)),T.findModifier(o=>o instanceof VL)||L.push(Ue(k.DYNAMAX_BAND));const S=Ue(k.EVOLUTION_ITEM);S&&N.push(S);const n=Ue(k.RARE_EVOLUTION_ITEM);n&&N.push(n);const i=Ue(k.FORM_CHANGE_ITEM);i&&N.push(i);const C=Ue(k.RARE_FORM_CHANGE_ITEM);C&&N.push(C),N.length>0&&L.push(N[DA(N.length)]),TE({guaranteedModifierTypeOptions:L,fillRemaining:!1}),R.selectedOption.dialogue.selected=[{speaker:`${wE}:speaker`,text:`${wE}:option.2.selected_6`}]}}).withOptionPhase(async()=>{IE()}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(tN.Some(new ht(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new _l(t.BUG,1))).withDialogue({buttonLabel:`${wE}:option.3.label`,buttonTooltip:`${wE}:option.3.tooltip`,disabledButtonTooltip:`${wE}:option.3.disabled_tooltip`,selected:[{text:`${wE}:option.3.selected`},{speaker:`${wE}:speaker`,text:`${wE}:option.3.selected_dialogue`}],secondOptionPrompt:`${wE}:option.3.select_prompt`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>L.getHeldItems().filter(S=>(S instanceof ZL||S instanceof JL||S instanceof sI&&S.type.moveType===t.BUG)&&S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(R.setDialogueToken("selectedItem",S.type.name),R.misc={chosenPokemon:L,chosenModifier:S},!0),"handler")})),"onPokemonSelected"),void 0,r(L=>L.getHeldItems().some(S=>S instanceof ZL||S instanceof JL||S instanceof sI&&S.type.moveType===t.BUG)?null:eR(`${wE}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.chosenModifier;R.misc.chosenPokemon.loseHeldItem(e,!1),T.updateModifiers(!0,!0);const L=Ue(k.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET);L.type.tier=p.ROGUE,TE({guaranteedModifierTypeOptions:[L],guaranteedModifierTypeFuncs:[k.REVIVER_SEED],fillRemaining:!1}),IE(!0)}).build()).withOutroDialogue([{text:`${wE}:outro`}]).build();function Hx(R){const e=he[U.BUG_TYPE_SUPERFAN].clone();e.name=_.t("trainerNames:bug_type_superfan");let I=Gx.slice(0);I=gI(I);const L=I.pop();if(R<Ut[0])e.setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0)).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0));else if(R<Ut[1])e.setPartyTemplates(new dA(3,HA.AVERAGE)).setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0)).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0)).setPartyMemberFunc(2,W(h_,v.TRAINER,!0));else if(R<Ut[2])e.setPartyTemplates(new dA(4,HA.AVERAGE)).setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0)).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0)).setPartyMemberFunc(2,W(h_,v.TRAINER,!0)).setPartyMemberFunc(3,W(jt,v.TRAINER,!0));else if(R<Ut[3])e.setPartyTemplates(new dA(5,HA.AVERAGE)).setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0)).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0)).setPartyMemberFunc(2,W(h_,v.TRAINER,!0)).setPartyMemberFunc(3,W(jt,v.TRAINER,!0)).setPartyMemberFunc(4,W(jt,v.TRAINER,!0));else if(R<Ut[4])e.setPartyTemplates(new dA(5,HA.AVERAGE)).setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(2,W(jt,v.TRAINER,!0)).setPartyMemberFunc(3,W(jt,v.TRAINER,!0)).setPartyMemberFunc(4,W([L.species],v.TRAINER,!0,N=>{SA(L.formIndex)||(N.formIndex=L.formIndex,N.generateAndPopulateMoveset(),N.generateName())}));else if(R<Ut[5]){I=gI(I);const N=I.pop();e.setPartyTemplates(new dA(5,HA.AVERAGE)).setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0,S=>{S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0,S=>{S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(2,W(jt,v.TRAINER,!0)).setPartyMemberFunc(3,W([L.species],v.TRAINER,!0,S=>{SA(L.formIndex)||(S.formIndex=L.formIndex,S.generateAndPopulateMoveset(),S.generateName())})).setPartyMemberFunc(4,W([N.species],v.TRAINER,!0,S=>{SA(N.formIndex)||(S.formIndex=N.formIndex,S.generateAndPopulateMoveset(),S.generateName())}))}else if(R<Ut[6])e.setPartyTemplates(new Oe(new dA(4,HA.AVERAGE),new dA(1,HA.STRONG))).setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(2,W(jt,v.TRAINER,!0)).setPartyMemberFunc(3,W([L.species],v.TRAINER,!0,N=>{SA(L.formIndex)||(N.formIndex=L.formIndex,N.generateAndPopulateMoveset(),N.generateName())})).setPartyMemberFunc(4,W(W4,v.TRAINER,!0));else{I=gI(I);const N=I.pop();e.setPartyTemplates(new Oe(new dA(4,HA.AVERAGE),new dA(1,HA.STRONG))).setPartyMemberFunc(0,W([A.BEEDRILL],v.TRAINER,!0,S=>{S.setBoss(!0,2),S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(1,W([A.BUTTERFREE],v.TRAINER,!0,S=>{S.setBoss(!0,2),S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(2,W([L.species],v.TRAINER,!0,S=>{SA(L.formIndex)||(S.formIndex=L.formIndex,S.generateAndPopulateMoveset(),S.generateName())})).setPartyMemberFunc(3,W([N.species],v.TRAINER,!0,S=>{SA(N.formIndex)||(S.formIndex=N.formIndex,S.generateAndPopulateMoveset(),S.generateName())})).setPartyMemberFunc(4,W(W4,v.TRAINER,!0))}return e}r(Hx,"getTrainerConfigForWave");function ux(){return new Promise(async R=>{const e=T.currentBattle.mysteryEncounter.misc.moveTutorOptions;await FI(`${wE}:battle_won`,`${wE}:speaker`);const I=1,L=new JS({delayVisibility:!1,scale:I,onSide:!0,right:!0,x:1,y:-JS.getHeight(I,!0)-1,width:T.game.canvas.width/6-2});T.ui.add(L);const N=e.map(i=>({label:i.getName(),handler:r(()=>(L.active=!1,L.setVisible(!1),!0),"handler"),onHover:r(()=>{L.active=!0,L.show(FA[i.moveId])},"onHover")})),S=r(()=>{L.active=!1,L.setVisible(!1)},"onHoverOverCancel"),n=await bv(N,`${wE}:teach_move_prompt`,void 0,S);n||(L.active=!1,L.setVisible(!1)),n&&n.selectedOptionIndex<e.length&&T.phaseManager.unshiftNew("LearnMovePhase",n.selectedPokemonIndex,e[n.selectedOptionIndex].moveId),R()})}r(ux,"doBugTypeMoveTutor");const ke="mysteryEncounters/funAndGames",cx=qE.withEncounterType(WA.FUN_AND_GAMES).withEncounterTier(xE.GREAT).withSceneWaveRangeRequirement(...Pe).withSceneRequirement(new UI(0,1.5)).withAutoHideIntroVisuals(!1).withSkipEnemyBattleTurns(!0).withSkipToFightInput(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"fun_and_games_game",fileRoot:"mystery-encounters",hasShadow:!1,x:0,y:6},{spriteKey:"fun_and_games_wobbuffet",fileRoot:"mystery-encounters",hasShadow:!0,x:-28,y:6,yShadow:6},{spriteKey:"fun_and_games_man",fileRoot:"mystery-encounters",hasShadow:!0,x:40,y:6,yShadow:6}]).withIntroDialogue([{speaker:`${ke}:speaker`,text:`${ke}:intro_dialogue`}]).setLocalizationKey(`${ke}`).withTitle(`${ke}:title`).withDescription(`${ke}:description`).withQuery(`${ke}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter;return T.loadBgm("mystery_encounter_fun_and_games","mystery_encounter_fun_and_games.mp3"),R.setDialogueToken("wobbuffetName",YA(A.WOBBUFFET).getName()),!0}).withOnVisualsStart(()=>(T.fadeAndSwitchBgm("mystery_encounter_fun_and_games"),!0)).withOption(iE.newOptionWithMode(rE.DISABLED_OR_DEFAULT).withSceneRequirement(new UI(0,1.5)).withDialogue({buttonLabel:`${ke}:option.1.label`,buttonTooltip:`${ke}:option.1.tooltip`,selected:[{text:`${ke}:option.1.selected`}]}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>{R.misc={playerPokemon:L}},"onPokemonSelected"),void 0,r(L=>YL(L,`${ke}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;R.misc.turnsRemaining=3;const e=R.options[0].requirements[0].requiredMoney;return YO(-e,!0,!1),await HE(_.t("mysteryEncounterMessages:paid_money",{amount:e})),R.onTurnStart=Kx,R.doContinueEncounter=Q3,Yx(),await Bx(),await fx(),!0}).build()).withSimpleOption({buttonLabel:`${ke}:option.2.label`,buttonTooltip:`${ke}:option.2.tooltip`,selected:[{text:`${ke}:option.2.selected`}]},async()=>(await Te(!0,!0),IE(!0),!0)).build();async function Bx(){return new Promise(async R=>{const e=T.currentBattle.mysteryEncounter,I=e.misc.playerPokemon,L=T.getPlayerParty(),N=L.indexOf(I);if(N!==0){const l=L[0];L[0]=I,L[N]=l}let S;T.ui.showText(_.t("battle:playerGo",{pokemonName:Q(I)})),T.pbTray.hide(),T.trainer.setTexture(`trainer_${T.gameData.gender===de.FEMALE?"f":"m"}_back_pb`),T.time.delayedCall(562,()=>{T.trainer.setFrame("2"),T.time.delayedCall(64,()=>{T.trainer.setFrame("3")})}),T.tweens.add({targets:T.trainer,x:-36,duration:1e3,onComplete:r(()=>T.trainer.setVisible(!1),"onComplete")}),T.time.delayedCall(750,()=>{S=Fx(I)});const n=YA(A.WOBBUFFET);T.currentBattle.enemyParty=[];const i=T.addEnemyPokemon(n,e.misc.playerPokemon.level,v.NONE,!1,!0);i.ivs=[0,0,0,0,0,0],i.setNature(ZA.MILD),i.setAlpha(0),i.setVisible(!1),i.calculateStats(),T.currentBattle.enemyParty[0]=i,T.gameData.setPokemonSeen(i,!0),await i.loadAssets();const C=setInterval(o,500);async function o(){S&&(clearInterval(C),await S,R())}r(o,"checkPlayerAnimationPromise")})}r(Bx,"summonPlayerPokemon");function Q3(){return new Promise(async R=>{const e=T.getEnemyPokemon();if(!e||e.isFainted(!0)||e.hp===0){e&&(e.hideInfo(),e.leaveField()),Te(!0,!0),T.currentBattle.enemyParty=[],T.currentBattle.mysteryEncounter.doContinueEncounter=void 0,IE(!0),await HE(`${ke}:ko`);const I=T.getWaveMoneyAmount(1.5);YO(-I,!0,!1)}R()})}r(Q3,"handleLoseMinigame");function Kx(){const R=T.currentBattle.mysteryEncounter,e=T.getEnemyPokemon();if(!e)return Q3(),!0;if(R.misc.turnsRemaining<=0){const I=e.hp/e.getMaxHp();let L,N=!1;return I<.03?(TE({guaranteedModifierTypeFuncs:[k.MULTI_LENS],fillRemaining:!1}),L=`${ke}:best_result`):I<.15?(TE({guaranteedModifierTypeFuncs:[k.SCOPE_LENS],fillRemaining:!1}),L=`${ke}:great_result`):I<.33?(TE({guaranteedModifierTypeFuncs:[k.WIDE_LENS],fillRemaining:!1}),L=`${ke}:good_result`):(N=!0,L=`${ke}:bad_result`),e.hideInfo(),e.leaveField(),T.currentBattle.enemyParty=[],T.currentBattle.mysteryEncounter.doContinueEncounter=void 0,IE(N),le(`${ke}:end_game`),le(L),!0}return R.misc.turnsRemaining<3&&le(`${ke}:charging_continue`),le(`${ke}:turn_remaining_${R.misc.turnsRemaining}`),R.misc.turnsRemaining--,!1}r(Kx,"handleNextTurn");async function fx(){const R=T.getEnemyPokemon();T.add.existing(R),T.field.add(R);const e=T.getPlayerPokemon();e!=null&&e.isOnField()&&T.field.moveBelow(R,e),R.showInfo(),T.time.delayedCall(1e3,()=>{R.cry()}),R.resetSummonData(),T.currentBattle.mysteryEncounter.misc.wobbuffetHealth=R.hp}r(fx,"showWobbuffetHealthBar");function Fx(R){return new Promise(e=>{const I=T.addFieldSprite(36,80,"pb",lS(R.pokeball));I.setVisible(!1),I.setOrigin(.5,.625),T.field.add(I),R.setFieldPosition(vO.CENTER,0);const L=R.getFieldPositionOffset();I.setVisible(!0),T.tweens.add({targets:I,duration:650,x:100+L[0]}),T.tweens.add({targets:I,duration:150,ease:"Cubic.easeOut",y:70+L[1],onComplete:r(()=>{T.tweens.add({targets:I,duration:500,ease:"Cubic.easeIn",angle:1440,y:132+L[1],onComplete:r(()=>{T.playSound("se/pb_rel"),I.destroy(),T.add.existing(R),T.field.add(R),F3(R.x,R.y-16,R.pokeball),T.updateModifiers(!0),T.updateFieldScale(),R.showInfo(),R.playAnim(),R.setVisible(!0),R.getSprite().setVisible(!0),R.setScale(.5),R.tint(_S(R.pokeball)),R.untint(250,"Sine.easeIn"),T.updateFieldScale(),T.tweens.add({targets:R,duration:250,ease:"Sine.easeIn",scale:R.getSpriteScale(),onComplete:r(()=>{R.cry(R.getHpRatio()>.25?void 0:{rate:.85}),R.getSprite().clearTint(),R.resetSummonData(),T.time.delayedCall(1e3,()=>{R.isShiny()&&T.phaseManager.unshiftNew("ShinySparklePhase",R.getBattlerIndex()),R.resetTurnData(),T.triggerPokemonFormChange(R,UO,!0),T.phaseManager.pushNew("PostSummonPhase",R.getBattlerIndex()),e()})},"onComplete")})},"onComplete")})},"onComplete")})})}r(Fx,"summonPlayerPokemonAnimation");function Yx(){var L,N,S;const R=(L=T.currentBattle.mysteryEncounter.introVisuals)==null?void 0:L.getSpriteAtIndex(0)[0],e=(N=T.currentBattle.mysteryEncounter.introVisuals)==null?void 0:N.getSpriteAtIndex(1)[0],I=(S=T.currentBattle.mysteryEncounter.introVisuals)==null?void 0:S.getSpriteAtIndex(2)[0];T.tweens.add({targets:I,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750}),T.tweens.add({targets:[e,R],x:"+=16",ease:"Sine.easeInOut",duration:750})}r(Yx,"hideShowmanIntroSprite");const lR="mysteryEncounters/uncommonBreed",Wx=qE.withEncounterType(WA.UNCOMMON_BREED).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${lR}:intro`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=GH(!1,!0).level-2,I=uH(e,!0,!0),L=I.getEggMoves();if(L){const C=DA(4),o=L[C];R.misc={eggMove:o,pokemon:I},I.moveset.length<4?I.moveset.push(new pA(o)):I.moveset[0]=new pA(o)}else R.misc.pokemon=I;const N=T.currentBattle.waveIndex<50?[c.DEF,c.SPDEF,c.SPD]:[c.ATK,c.DEF,c.SPATK,c.SPDEF,c.SPD],S={pokemonConfigs:[{level:e,species:I.species,dataSource:new dO(I),isBoss:!1,tags:[d.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(C=>{le(`${lR}:option.1.stat_boost`),T.phaseManager.unshiftNew("StatStageChangePhase",C.getBattlerIndex(),!0,N,1)},"mysteryEncounterBattleEffects")}]};R.enemyPartyConfigs=[S];const{spriteKey:n,fileRoot:i}=N_(I);return R.spriteConfigs=[{spriteKey:n,fileRoot:i,hasShadow:!0,x:-5,repeat:!0,isPokemon:!0,isShiny:I.shiny,variant:I.variant}],R.setDialogueToken("enemyPokemon",I.getNameToRender()),T.loadSe("PRSFX- Spotlight2","battle_anims","PRSFX- Spotlight2.wav"),!0}).withOnVisualsStart(()=>{const R=T.currentBattle.mysteryEncounter,e=R.introVisuals.getSprites();return T.tweens.add({targets:e,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1,onComplete:r(()=>{var I;return(I=R.introVisuals)==null?void 0:I.playShinySparkles()},"onComplete")}),T.time.delayedCall(500,()=>T.playSound("battle_anims/PRSFX- Spotlight2")),!0}).setLocalizationKey(`${lR}`).withTitle(`${lR}:title`).withDescription(`${lR}:description`).withQuery(`${lR}:query`).withSimpleOption({buttonLabel:`${lR}:option.1.label`,buttonTooltip:`${lR}:option.1.tooltip`,selected:[{text:`${lR}:option.1.selected`}]},async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.eggMove;if(!SA(e)){const I=new pA(e),N=I.getMove().is("SelfStatusMove")?KE.ENEMY:KE.PLAYER;R.startOfBattleEffects.push({sourceBattlerIndex:KE.ENEMY,targets:[N],move:I,ignorePp:!0})}TE({fillRemaining:!0}),await se(R.enemyPartyConfigs[0])}).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withSceneRequirement(new Dl("BerryModifier",4)).withDialogue({buttonLabel:`${lR}:option.2.label`,buttonTooltip:`${lR}:option.2.tooltip`,disabledButtonTooltip:`${lR}:option.2.disabled_tooltip`,selected:[{text:`${lR}:option.2.selected`}]}).withOptionPhase(async()=>{const R=T.findModifiers(L=>L instanceof ce);for(let L=0;L<4;L++){const N=DA(R.length),S=R[N];S.stackCount--,S.stackCount===0&&(T.removeModifier(S),R.splice(N,1))}await T.updateModifiers(!0,!0);const e=T.currentBattle.mysteryEncounter,I=e.misc.pokemon;m4(I,e.misc.eggMove),await eT(I,null,MA.POKEBALL,!1),TE({fillRemaining:!0}),IE()}).build()).withOption(iE.newOptionWithMode(rE.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new Jt(V3,!0)).withDialogue({buttonLabel:`${lR}:option.3.label`,buttonTooltip:`${lR}:option.3.tooltip`,disabledButtonTooltip:`${lR}:option.3.disabled_tooltip`,selected:[{text:`${lR}:option.3.selected`}]}).withOptionPhase(async()=>{var I,L;const R=T.currentBattle.mysteryEncounter,e=R.misc.pokemon;m4(e,R.misc.eggMove),e.ivs=e.ivs.map(N=>{const S=DA(31);return S>N?S:N}),await eT(e,null,MA.POKEBALL,!1),(L=(I=R.selectedOption)==null?void 0:I.primaryPokemon)!=null&&L.id&&RO(R.selectedOption.primaryPokemon.id,e.getExpValue(),!1),TE({fillRemaining:!0}),IE()}).build()).build();function m4(R,e){const I=R.getEggMoves();if(I){let L=I[DA(4)];for(;L===e;)L=I[DA(4)];R.moveset.length<4?R.moveset.push(new pA(L)):R.moveset[1]=new pA(L)}}r(m4,"givePokemonExtraEggMove");const ye="mysteryEncounters/globalTradeSystem",hx=512,dx=4096,px={1:[A.RATTATA,A.PIDGEY,A.WEEDLE],2:[A.SENTRET,A.HOOTHOOT,A.LEDYBA],3:[A.POOCHYENA,A.ZIGZAGOON,A.TAILLOW],4:[A.BIDOOF,A.STARLY,A.KRICKETOT],5:[A.PATRAT,A.PURRLOIN,A.PIDOVE],6:[A.BUNNELBY,A.LITLEO,A.SCATTERBUG],7:[A.PIKIPEK,A.YUNGOOS,A.ROCKRUFF],8:[A.SKWOVET,A.WOOLOO,A.ROOKIDEE],9:[A.LECHONK,A.FIDOUGH,A.TAROUNTULA]},gx=[A.GREAT_TUSK,A.SCREAM_TAIL,A.BRUTE_BONNET,A.FLUTTER_MANE,A.SLITHER_WING,A.SANDY_SHOCKS,A.ROARING_MOON,A.WALKING_WAKE,A.GOUGING_FIRE,A.RAGING_BOLT,A.IRON_TREADS,A.IRON_BUNDLE,A.IRON_HANDS,A.IRON_JUGULIS,A.IRON_MOTH,A.IRON_THORNS,A.IRON_VALIANT,A.IRON_LEAVES,A.IRON_BOULDER,A.IRON_CROWN],mx=qE.withEncounterType(WA.GLOBAL_TRADE_SYSTEM).withEncounterTier(xE.COMMON).withSceneWaveRangeRequirement(...Pe).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"global_trade_system",fileRoot:"mystery-encounters",hasShadow:!0,disableAnimation:!0,x:3,y:5,yShadow:1}]).withIntroDialogue([{text:`${ye}:intro`}]).setLocalizationKey(`${ye}`).withTitle(`${ye}:title`).withDescription(`${ye}:description`).withQuery(`${ye}:query`).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter;let e;T.musicPreference===WT.GENFIVE?(e="mystery_encounter_gen_5_gts",T.loadBgm(e,`${e}.mp3`)):(e="mystery_encounter_gen_6_gts",T.loadBgm(e,`${e}.mp3`));const I=yx();return R.misc={tradeOptionsMap:I,bgmKey:e},!0}).withOnVisualsStart(()=>(T.fadeAndSwitchBgm(T.currentBattle.mysteryEncounter.misc.bgmKey),!0)).withOption(iE.newOptionWithMode(rE.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${ye}:option.1.label`,buttonTooltip:`${ye}:option.1.tooltip`,secondOptionPrompt:`${ye}:option.1.trade_options_prompt`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(I=>{const N=R.misc.tradeOptionsMap.get(I.id);return N?N.map(S=>({label:S.getNameToRender(),handler:r(()=>(R.setDialogueToken("tradedPokemon",I.getNameToRender()),R.setDialogueToken("received",S.getNameToRender()),R.misc.tradedPokemon=I,R.misc.receivedPokemon=S,!0),"handler"),onHover:r(()=>{const i=S.species.forms&&S.species.forms.length>S.formIndex?S.species.forms[S.formIndex].formName:null,C=`${_.t("pokemonInfoContainer:ability")} ${S.getAbility().name}${S.getGender()!==mA.GENDERLESS?`     |     ${_.t("pokemonInfoContainer:gender")} ${$s(S.getGender())}`:""}`,o=_.t("pokemonInfoContainer:nature")+" "+kt(S.getNature())+(i?`     |     ${_.t("pokemonInfoContainer:form")} ${i}`:"");HE(`${C}
${o}`,0,0,!1)},"onHover")})):[]},"onPokemonSelected"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.tradedPokemon,I=R.misc.receivedPokemon,L=e.getHeldItems().filter(i=>!(i instanceof VI)&&!(i instanceof mt)),N=d_();R.setDialogueToken("tradeTrainerName",N.trim()),T.removePokemonFromPlayerParty(e,!1),I.passive=e.passive,I.pokeball=we(4);const S=new dO(I),n=T.addPlayerPokemon(I.species,I.level,S.abilityIndex,S.formIndex,S.gender,S.shiny,S.variant,S.ivs,S.nature,S);T.getPlayerParty().push(n),await n.loadAssets();for(const i of L)i.pokemonId=n.id,T.addModifier(i,!0,!1,!1,!0);await y4(),await w4(e,n),await HE(`${ye}:trade_received`,null,0,!0,4e3),T.playBgm(R.misc.bgmKey),await I4(n),await V4(),e.destroy(),IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${ye}:option.2.label`,buttonTooltip:`${ye}:option.2.tooltip`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(I=>{const L=J3(T.getPlayerParty().map(n=>n.species)),N=new oI(L,I.level,v.NONE,!1);if(!N.shiny){const n=new VA(hx);pe.isEventActive()&&(n.value*=pe.getShinyMultiplier()),T.applyModifiers(vt,!0,n);const i=Math.min(n.value,dx);N.trySetShinySeed(i,!1)}const S=N.species.ability2?2:1;if(N.species.abilityHidden&&N.abilityIndex<S){const n=new VA(64);T.applyModifiers(aI,!0,n),!DA(n.value)&&(N.abilityIndex=S)}if(!N.shiny&&(!N.species.abilityHidden||N.abilityIndex<S)){const n=N.getEggMoves();if(n){const i=n[DA(3)];if(!N.moveset.some(C=>C.moveId===i))if(N.moveset.length<4)N.moveset.push(new pA(i));else{const C=DA(4);N.moveset[C]=new pA(i)}}}R.setDialogueToken("tradedPokemon",I.getNameToRender()),R.setDialogueToken("received",N.getNameToRender()),R.misc.tradedPokemon=I,R.misc.receivedPokemon=N},"onPokemonSelected"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.tradedPokemon,I=R.misc.receivedPokemon,L=e.getHeldItems().filter(i=>!(i instanceof VI)&&!(i instanceof mt)),N=d_();R.setDialogueToken("tradeTrainerName",N.trim()),T.removePokemonFromPlayerParty(e,!1),I.passive=e.passive,I.pokeball=we(4);const S=new dO(I),n=T.addPlayerPokemon(I.species,I.level,S.abilityIndex,S.formIndex,S.gender,S.shiny,S.variant,S.ivs,S.nature,S);T.getPlayerParty().push(n),await n.loadAssets();for(const i of L)i.pokemonId=n.id,T.addModifier(i,!0,!1,!1,!0);await y4(),await w4(e,n),await HE(`${ye}:trade_received`,null,0,!0,4e3),T.playBgm(R.misc.bgmKey),await I4(n),await V4(),e.destroy(),IE(!0)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${ye}:option.3.label`,buttonTooltip:`${ye}:option.3.tooltip`,secondOptionPrompt:`${ye}:option.3.trade_options_prompt`}).withPreOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter;return RR(r(L=>L.getHeldItems().filter(S=>S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(R.setDialogueToken("chosenItem",S.type.name),R.misc.chosenModifier=S,R.misc.chosenPokemon=L,!0),"handler")})),"onPokemonSelected"),void 0,r(L=>L.getHeldItems().filter(S=>S.isTransferable).length>0?null:eR(`${ye}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.misc.chosenModifier,I=T.getPlayerParty(),L=R.misc.chosenPokemon,N=e.type.withTierFromPool(cE.PLAYER,I);let S=N.tier??p.GREAT;N.id==="WHITE_HERB"?S=p.GREAT:N.id==="LUCKY_EGG"?S=p.ULTRA:N.id==="GOLDEN_EGG"&&(S=p.ROGUE),S<p.MASTER&&S++,t_(I,cE.PLAYER,0);let n=null;for(;!n||n.type.id.includes("TM_");)n=B3(1,I,[],{guaranteedModifierTiers:[S],allowLuckUpgrades:!1})[0];R.setDialogueToken("itemName",n.type.name),TE({guaranteedModifierTypeOptions:[n],fillRemaining:!1}),L.loseHeldItem(e,!1),await T.updateModifiers(!0,!0);const i=d_();R.setDialogueToken("tradeTrainerName",i.trim()),await HE(`${ye}:item_trade_selected`),IE()}).build()).withSimpleOption({buttonLabel:`${ye}:option.4.label`,buttonTooltip:`${ye}:option.4.tooltip`,selected:[{text:`${ye}:option.4.selected`}]},async()=>(IE(!0),!0)).build();function yx(){const R=new Map,e=T.getPlayerParty().map(I=>I.species);for(const I of T.getPlayerParty())if(I.species.legendary||I.species.subLegendary||I.species.mythical){const L=I.species.generation,N=px[L].map(S=>{const n=YA(S);return new oI(n,5,v.NONE,!1)});R.set(I.id,N)}else{const L=I.getSpeciesForm().getBaseStatTotal(),N=[];for(let S=0;S<3;S++){const n=J3(e,L);e.push(n),N.push(n)}R.set(I.id,N.map(S=>new oI(S,I.level,v.NONE,!1)))}return R}r(yx,"getPokemonTradeOptions");function J3(R,e){let I,L=9999,N=0;for(e&&(L=e+100,N=e-100);SA(I);){let S=hL.filter(n=>{const i=n.legendary||n.subLegendary||n.mythical,C=n.getBaseStatTotal(),o=C>=N&&C<=L;return!i&&o&&!gx.includes(n.speciesId)});if((S==null?void 0:S.length)>20)for(S=gI(S),I=S.pop();SA(I)||R.includes(I);)I=S.pop();else N-=10,L+=10}return I}r(J3,"generateTradeOption");function y4(){return new Promise(R=>{const e=T.add.container(0,-T.game.canvas.height/6);e.setName("Trade Background");const I=T.add.rectangle(0,0,T.game.canvas.width/6,T.game.canvas.height/6,0);I.setName("Black Background"),I.setOrigin(0,0),I.setVisible(!1),e.add(I);const L=T.add.image(0,0,"default_bg");L.setName("Trade Background Image"),L.setOrigin(0,0),e.add(L),T.fieldUI.add(e),T.fieldUI.bringToTop(e),e.setVisible(!0),e.alpha=0,T.tweens.add({targets:e,alpha:1,duration:500,ease:"Sine.easeInOut",onComplete:r(()=>{R()},"onComplete")})})}r(y4,"showTradeBackground");function V4(){return new Promise(R=>{const e=T.fieldUI.getByName("Trade Background");T.tweens.add({targets:e,alpha:0,duration:1e3,ease:"Sine.easeInOut",onComplete:r(()=>{T.fieldUI.remove(e,!0),R()},"onComplete")})})}r(V4,"hideTradeBackground");function w4(R,e){return new Promise(I=>{const L=T.fieldUI.getByName("Trade Background"),N=L.getByName("Trade Background Image");let S,n,i,C;const o=r(()=>{const f=T.addPokemonSprite(R,N.displayWidth/2,N.displayHeight/2,"pkmn__sub");return f.setPipeline(T.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),f},"getPokemonSprite");L.add(S=o()),L.add(n=o()),L.add(i=o()),L.add(C=o()),S.setAlpha(0),n.setAlpha(0),n.setTintFill(_S(R.pokeball)),i.setVisible(!1),C.setVisible(!1),C.setTintFill(_S(e.pokeball)),[S,n].map(f=>{const h=R.getSpriteKey(!0);try{f.play(h)}catch(F){console.error(`Failed to play animation for ${h}`,F)}f.setPipeline(T.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:Zt(R.getTeraType()),isTerastallized:R.isTerastallized}),f.setPipelineData("ignoreTimeTint",!0),f.setPipelineData("spriteKey",R.getSpriteKey()),f.setPipelineData("shiny",R.shiny),f.setPipelineData("variant",R.variant),["spriteColors","fusionSpriteColors"].map(F=>{R.summonData.speciesForm&&(F+="Base"),f.pipelineData[F]=R.getSprite().pipelineData[F]})}),[i,C].map(f=>{const h=e.getSpriteKey(!0);try{f.play(h)}catch(F){console.error(`Failed to play animation for ${h}`,F)}f.setPipeline(T.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:Zt(R.getTeraType()),isTerastallized:R.isTerastallized}),f.setPipelineData("ignoreTimeTint",!0),f.setPipelineData("spriteKey",e.getSpriteKey()),f.setPipelineData("shiny",e.shiny),f.setPipelineData("variant",e.variant),["spriteColors","fusionSpriteColors"].map(F=>{e.summonData.speciesForm&&(F+="Base"),f.pipelineData[F]=e.getSprite().pipelineData[F]})});const l=lS(R.pokeball),H=T.add.sprite(N.displayWidth/2,N.displayHeight/2,"pb",l);H.setVisible(!1),L.add(H);const P=lS(e.pokeball),K=T.add.sprite(N.displayWidth/2,N.displayHeight/2,"pb",P);K.setVisible(!1),L.add(K),T.tweens.add({targets:S,alpha:1,ease:"Cubic.easeInOut",duration:500,onComplete:r(async()=>{T.fadeOutBgm(1e3,!1),await HE(`${ye}:pokemon_trade_selected`),R.cry(),T.playBgm("evolution"),await HE(`${ye}:pokemon_trade_goodbye`),H.setAlpha(0),H.setVisible(!0),T.tweens.add({targets:H,alpha:1,ease:"Cubic.easeInOut",duration:250,onComplete:r(()=>{H.setTexture("pb",`${l}_opening`),T.time.delayedCall(17,()=>H.setTexture("pb",`${l}_open`)),T.playSound("se/pb_rel"),n.setVisible(!0),T.tweens.add({targets:[n,S],duration:500,ease:"Sine.easeIn",scale:.25,onComplete:r(()=>{S.setVisible(!1),H.setTexture("pb",`${l}_opening`),n.setVisible(!1),T.playSound("se/pb_catch"),T.time.delayedCall(17,()=>H.setTexture("pb",`${l}`)),T.tweens.add({targets:H,y:"+=10",duration:200,delay:250,ease:"Cubic.easeIn",onComplete:r(()=>{T.playSound("se/pb_bounce_1"),T.tweens.add({targets:H,y:"-=100",duration:200,delay:1e3,ease:"Cubic.easeInOut",onStart:r(()=>{T.playSound("se/pb_throw")},"onStart"),onComplete:r(async()=>{await Vx(S,i),await wx(e,i,C,K,P),I()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}r(w4,"doPokemonTradeSequence");function Vx(R,e){return new Promise(I=>{const L=T.fieldUI.getByName("Trade Background"),N=L.getByName("Trade Background Image");L.getByName("Black Background").setVisible(!0),L.bringToTop(R),L.bringToTop(e),R.x=N.displayWidth/4,R.y=200,R.scale=1,R.setVisible(!0),e.x=N.displayWidth*3/4,e.y=-200,e.scale=1,e.setVisible(!0);const n=300,i=750,C=1e3;T.tweens.add({targets:N,alpha:0,ease:"Cubic.easeInOut",duration:n,onComplete:r(()=>{T.tweens.add({targets:[e,R],y:N.displayWidth/2-100,ease:"Cubic.easeInOut",duration:C*3,onComplete:r(()=>{T.tweens.add({targets:e,x:N.displayWidth/4,ease:"Cubic.easeInOut",duration:C/2,delay:i}),T.tweens.add({targets:R,x:N.displayWidth*3/4,ease:"Cubic.easeInOut",duration:C/2,delay:i,onComplete:r(()=>{T.tweens.add({targets:e,y:"+=200",ease:"Cubic.easeInOut",duration:C*2,delay:i}),T.tweens.add({targets:R,y:"-=200",ease:"Cubic.easeInOut",duration:C*2,delay:i,onComplete:r(()=>{T.tweens.add({targets:N,alpha:1,ease:"Cubic.easeInOut",duration:n,onComplete:r(()=>{I()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}r(Vx,"doPokemonTradeFlyBySequence");function wx(R,e,I,L,N){return new Promise(S=>{const n=T.fieldUI.getByName("Trade Background"),i=n.getByName("Trade Background Image");e.setVisible(!1),e.x=i.displayWidth/2,e.y=i.displayHeight/2,I.setVisible(!1),I.x=i.displayWidth/2,I.y=i.displayHeight/2,L.setVisible(!0),L.x=i.displayWidth/2,L.y=i.displayHeight/2-100;let C;R.shiny&&(C=T.add.sprite(e.x,e.y,"shiny"),C.setVisible(!1),n.add(C));const o=1e3;T.playSound("se/pb_throw"),T.tweens.add({targets:L,y:"+=100",ease:"Cubic.easeInOut",duration:o,onComplete:r(()=>{T.playSound("se/pb_bounce_1"),T.time.delayedCall(100,()=>T.playSound("se/pb_bounce_1")),T.time.delayedCall(2e3,()=>{T.playSound("se/pb_rel"),T.fadeOutBgm(500,!1),R.cry(),I.scale=.25,I.alpha=1,e.setVisible(!0),e.scale=.25,I.alpha=1,I.setVisible(!0),L.setTexture("pb",`${N}_opening`),T.time.delayedCall(17,()=>L.setTexture("pb",`${N}_open`)),T.tweens.add({targets:e,duration:250,ease:"Sine.easeOut",scale:1}),T.tweens.add({targets:I,duration:250,ease:"Sine.easeOut",scale:1,alpha:0,onComplete:r(()=>{R.shiny&&T.time.delayedCall(500,()=>{_H(C,R.variant)}),L.destroy(),T.time.delayedCall(2e3,()=>S())},"onComplete")})})},"onComplete")})})}r(wx,"doTradeReceivedSequence");function d_(){const R=U.YOUNGSTER-U.ACE_TRAINER+1,e=`trainersCommon:${U[we(R)+1]}`,I=_.exists(`${e}.MALE`)?we(2)===0?".MALE":".FEMALE":"",L=He(Object.keys(_.t(`${e}${I}`,{returnObjects:!0}))),S=_.t(`${e}${I}.${L}`).split(" & ");return S[we(S.length)]}r(d_,"generateRandomTraderName");const fE="mysteryEncounters/theExpertPokemonBreeder",_I="trainerNames:expert_pokemon_breeder",NI=45,II=60,SI=75,vx=20,Gm=class Gm{constructor(e,I){this.species=e,this.evolution=I}};r(Gm,"BreederSpeciesEvolution");let $E=Gm;const xx=[[A.MUNCHLAX,new $E(A.SNORLAX,II)],[A.HAPPINY,new $E(A.CHANSEY,NI),new $E(A.BLISSEY,SI)],[A.MAGBY,new $E(A.MAGMAR,NI),new $E(A.MAGMORTAR,SI)],[A.ELEKID,new $E(A.ELECTABUZZ,NI),new $E(A.ELECTIVIRE,SI)],[A.RIOLU,new $E(A.LUCARIO,II)],[A.BUDEW,new $E(A.ROSELIA,NI),new $E(A.ROSERADE,SI)],[A.TOXEL,new $E(A.TOXTRICITY,II)],[A.MIME_JR,new $E(A.GALAR_MR_MIME,NI),new $E(A.MR_RIME,SI)]],Zx=[[A.PICHU,new $E(A.PIKACHU,NI),new $E(A.RAICHU,SI)],[A.PICHU,new $E(A.PIKACHU,NI),new $E(A.ALOLA_RAICHU,SI)],[A.SMOOCHUM,new $E(A.JYNX,II)],[A.TYROGUE,new $E(A.HITMONLEE,II)],[A.TYROGUE,new $E(A.HITMONCHAN,II)],[A.TYROGUE,new $E(A.HITMONTOP,II)],[A.IGGLYBUFF,new $E(A.JIGGLYPUFF,NI),new $E(A.WIGGLYTUFF,SI)],[A.AZURILL,new $E(A.MARILL,NI),new $E(A.AZUMARILL,SI)],[A.WYNAUT,new $E(A.WOBBUFFET,II)],[A.CHINGLING,new $E(A.CHIMECHO,II)],[A.BONSLY,new $E(A.SUDOWOODO,II)],[A.MANTYKE,new $E(A.MANTINE,II)]],bx=qE.withEncounterType(WA.THE_EXPERT_POKEMON_BREEDER).withEncounterTier(xE.ULTRA).withSceneWaveRangeRequirement(25,180).withScenePartySizeRequirement(4,6,!0).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${fE}:intro`},{speaker:_I,text:`${fE}:intro_dialogue`}]).withOnInit(()=>{const R=T.currentBattle.mysteryEncounter,e=T.currentBattle.waveIndex;R.enemyPartyConfigs=[kx()];const I=e<NI?A.CLEFFA:e<SI?A.CLEFAIRY:A.CLEFABLE;R.spriteConfigs=[{spriteKey:I.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:14,y:-2,yShadow:-2},{spriteKey:"expert_pokemon_breeder",fileRoot:"trainer",hasShadow:!0,x:-14,y:4,yShadow:2}];let L=T.getPlayerParty().slice(0);L=L.filter(F=>F.isAllowedInBattle()).sort((F,w)=>F.friendship-w.friendship);const N=L[0],S=L[1],n=L[2];R.setDialogueToken("pokemon1Name",N.getNameToRender()),R.setDialogueToken("pokemon2Name",S.getNameToRender()),R.setDialogueToken("pokemon3Name",n.getNameToRender());const[i,C]=p_(N);let o=eR(`${fE}:option.1.tooltip_base`);if(C>0){const F=_.t(`${fE}:numEggs`,{count:C,rarity:_.t("egg:greatTier")});o+=_.t(`${fE}:eggs_tooltip`,{eggs:F}),R.setDialogueToken("pokemon1RareEggs",F)}if(i>0){const F=_.t(`${fE}:numEggs`,{count:i,rarity:_.t("egg:defaultTier")});o+=_.t(`${fE}:eggs_tooltip`,{eggs:F}),R.setDialogueToken("pokemon1CommonEggs",F)}R.options[0].dialogue.buttonTooltip=o;const[l,H]=p_(S);let P=eR(`${fE}:option.2.tooltip_base`);if(H>0){const F=_.t(`${fE}:numEggs`,{count:H,rarity:_.t("egg:greatTier")});P+=_.t(`${fE}:eggs_tooltip`,{eggs:F}),R.setDialogueToken("pokemon2RareEggs",F)}if(l>0){const F=_.t(`${fE}:numEggs`,{count:l,rarity:_.t("egg:defaultTier")});P+=_.t(`${fE}:eggs_tooltip`,{eggs:F}),R.setDialogueToken("pokemon2CommonEggs",F)}R.options[1].dialogue.buttonTooltip=P;const[K,f]=p_(n);let h=eR(`${fE}:option.3.tooltip_base`);if(f>0){const F=_.t(`${fE}:numEggs`,{count:f,rarity:_.t("egg:greatTier")});h+=_.t(`${fE}:eggs_tooltip`,{eggs:F}),R.setDialogueToken("pokemon3RareEggs",F)}if(K>0){const F=_.t(`${fE}:numEggs`,{count:K,rarity:_.t("egg:defaultTier")});h+=_.t(`${fE}:eggs_tooltip`,{eggs:F}),R.setDialogueToken("pokemon3CommonEggs",F)}return R.options[2].dialogue.buttonTooltip=h,R.misc={pokemon1:N,pokemon1CommonEggs:i,pokemon1RareEggs:C,pokemon2:S,pokemon2CommonEggs:l,pokemon2RareEggs:H,pokemon3:n,pokemon3CommonEggs:K,pokemon3RareEggs:f},!0}).setLocalizationKey(`${fE}`).withTitle(`${fE}:title`).withDescription(`${fE}:description`).withQuery(`${fE}:query`).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${fE}:option.1.label`,selected:[{speaker:_I,text:`${fE}:option.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs[0],{pokemon1:I,pokemon1CommonEggs:L,pokemon1RareEggs:N}=R.misc;R.misc.chosenPokemon=I,R.setDialogueToken("chosenPokemon",I.getNameToRender());const S=g_(L,N);TE({guaranteedModifierTypeFuncs:[k.SOOTHE_BELL],fillRemaining:!0},S,()=>V_()),m_(R,I),R.dialogue.outro=[{speaker:_I,text:`${fE}:outro`}],R.dialogueTokens.hasOwnProperty("pokemon1CommonEggs")&&R.dialogue.outro.push({text:_.t(`${fE}:gained_eggs`,{numEggs:R.dialogueTokens.pokemon1CommonEggs})}),R.dialogueTokens.hasOwnProperty("pokemon1RareEggs")&&R.dialogue.outro.push({text:_.t(`${fE}:gained_eggs`,{numEggs:R.dialogueTokens.pokemon1RareEggs})}),R.onGameOver=y_,await se(e)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${fE}:option.2.label`,selected:[{speaker:_I,text:`${fE}:option.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs[0],{pokemon2:I,pokemon2CommonEggs:L,pokemon2RareEggs:N}=R.misc;R.misc.chosenPokemon=I,R.setDialogueToken("chosenPokemon",I.getNameToRender());const S=g_(L,N);TE({guaranteedModifierTypeFuncs:[k.SOOTHE_BELL],fillRemaining:!0},S,()=>V_()),m_(R,I),R.dialogue.outro=[{speaker:_I,text:`${fE}:outro`}],R.dialogueTokens.hasOwnProperty("pokemon2CommonEggs")&&R.dialogue.outro.push({text:_.t(`${fE}:gained_eggs`,{numEggs:R.dialogueTokens.pokemon2CommonEggs})}),R.dialogueTokens.hasOwnProperty("pokemon2RareEggs")&&R.dialogue.outro.push({text:_.t(`${fE}:gained_eggs`,{numEggs:R.dialogueTokens.pokemon2RareEggs})}),R.onGameOver=y_,await se(e)}).build()).withOption(iE.newOptionWithMode(rE.DEFAULT).withDialogue({buttonLabel:`${fE}:option.3.label`,selected:[{speaker:_I,text:`${fE}:option.selected`}]}).withOptionPhase(async()=>{const R=T.currentBattle.mysteryEncounter,e=R.enemyPartyConfigs[0],{pokemon3:I,pokemon3CommonEggs:L,pokemon3RareEggs:N}=R.misc;R.misc.chosenPokemon=I,R.setDialogueToken("chosenPokemon",I.getNameToRender());const S=g_(L,N);TE({guaranteedModifierTypeFuncs:[k.SOOTHE_BELL],fillRemaining:!0},S,()=>V_()),m_(R,I),R.dialogue.outro=[{speaker:_I,text:`${fE}:outro`}],R.dialogueTokens.hasOwnProperty("pokemon3CommonEggs")&&R.dialogue.outro.push({text:_.t(`${fE}:gained_eggs`,{numEggs:R.dialogueTokens.pokemon3CommonEggs})}),R.dialogueTokens.hasOwnProperty("pokemon3RareEggs")&&R.dialogue.outro.push({text:_.t(`${fE}:gained_eggs`,{numEggs:R.dialogueTokens.pokemon3RareEggs})}),R.onGameOver=y_,await se(e)}).build()).withOutroDialogue([{speaker:_I,text:`${fE}:outro`}]).build();function kx(){const R=T.currentBattle.waveIndex,e=he[U.EXPERT_POKEMON_BREEDER].clone();e.name=_.t(_I);const I=R<NI?A.CLEFFA:R<SI?A.CLEFAIRY:A.CLEFABLE,L={trainerType:U.EXPERT_POKEMON_BREEDER,pokemonConfigs:[{nickname:_.t(`${fE}:cleffa_1_nickname`,{speciesName:YA(I).getName()}),species:YA(I),isBoss:!1,abilityIndex:1,shiny:!1,nature:ZA.ADAMANT,moveSet:[E.FIRE_PUNCH,E.ICE_PUNCH,E.THUNDER_PUNCH,E.METEOR_MASH],ivs:[31,31,31,31,31,31],tera:t.FAIRY}]};if(T.arena.biomeType===s.SPACE)L.pokemonConfigs.push({nickname:_.t(`${fE}:cleffa_2_nickname`,{speciesName:YA(I).getName()}),species:YA(I),isBoss:!1,abilityIndex:1,shiny:!0,variant:1,nature:ZA.MODEST,moveSet:[E.MOONBLAST,E.MYSTICAL_FIRE,E.ICE_BEAM,E.THUNDERBOLT],ivs:[31,31,31,31,31,31]},{nickname:_.t(`${fE}:cleffa_3_nickname`,{speciesName:YA(I).getName()}),species:YA(I),isBoss:!1,abilityIndex:2,shiny:!0,variant:2,nature:ZA.BOLD,moveSet:[E.TRI_ATTACK,E.STORED_POWER,E.TAKE_HEART,E.MOONLIGHT],ivs:[31,31,31,31,31,31]});else{const N=v4(xx,R),S=v4(Zx,R);L.pokemonConfigs.push({species:YA(N),isBoss:!1,ivs:[31,31,31,31,31,31]},{species:YA(S),isBoss:!1,ivs:[31,31,31,31,31,31]})}return L}r(kx,"getPartyConfig");function v4(R,e){const L=gI(R.slice(0)).pop().slice(0);let N=L.pop();for(;N instanceof $E&&N.evolution>e;)N=L.pop();return N instanceof $E?N.species:N}r(v4,"getSpeciesFromPool");function p_(R){const e=R.getSpeciesForm().getBaseStatTotal(),I=Math.min(Math.max(Math.floor((680-e)/20),1),18),L=R.species.getRootSpeciesId();let N=0;if(FR.hasOwnProperty(L)){const C=FR[L];N=Math.min(Math.max(Math.floor(7-C)*2,0),12)}let S=Math.min(N+I,30),n=Math.min(S,5);S-=n;const i=Math.floor(S/4);return n+=S%4,[n,i]}r(p_,"calculateEggRewardsForPokemon");function g_(R,e){const I=_.t(`${fE}:title`),L=[];if(R>0)for(let N=0;N<R;N++)L.push({pulled:!1,sourceType:AR.EVENT,eggDescriptor:I,tier:B.COMMON});if(e>0)for(let N=0;N<e;N++)L.push({pulled:!1,sourceType:AR.EVENT,eggDescriptor:I,tier:B.RARE});return L}r(g_,"getEggOptions");function m_(R,e){const I=T.getPlayerParty(),L=I.indexOf(e);I[L]=I[0],I[0]=e,R.misc.originalParty=T.getPlayerParty().slice(1),R.misc.originalPartyHeldItems=R.misc.originalParty.map(N=>N.getHeldItems()),T.party=[e]}r(m_,"removePokemonFromPartyAndStoreHeldItems");function $3(){const R=T.currentBattle.mysteryEncounter;T.getPlayerParty().push(...R.misc.originalParty);const e=R.misc.originalPartyHeldItems;for(const I of e)for(const L of I)T.addModifier(L,!0,!1,!1,!0);T.updateModifiers(!0)}r($3,"restorePartyAndHeldItems");function y_(){const R=T.currentBattle.mysteryEncounter;R.dialogue.outro=[{speaker:_I,text:`${fE}:outro_failed`}],$3();const e=R.misc.chosenPokemon;e.friendship=0,R.doEncounterRewards=void 0,R.misc.encounterFailed=!0,T.playBgm(T.arena.bgm),T.phaseManager.clearPhaseQueue(),T.phaseManager.clearPhaseQueueSplice();const I=T.getEnemyPokemon();return I&&(T.playSound("se/pb_rel"),I.hideInfo(),I.tint(_S(I.pokeball),1,250,"Sine.easeIn"),T.tweens.add({targets:I,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:r(()=>{I.leaveField(!0,!0,!0)},"onComplete")})),T.time.delayedCall(250,()=>{var S,n;const L=(S=T.currentBattle.trainer)==null?void 0:S.getSprites(),N=(n=T.currentBattle.trainer)==null?void 0:n.getTintSprites();if(L&&N)for(let i=0;i<L.length;i++)L[i].setVisible(!0),N[i].setVisible(!0),L[i].clearTint(),N[i].clearTint();T.tweens.add({targets:T.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}),Xv(!0),!1}r(y_,"onGameOver");function V_(){const R=T.currentBattle.mysteryEncounter;R.misc.encounterFailed||(R.misc.chosenPokemon.addFriendship(vx),$3())}r(V_,"doPostEncounterCleanup");const Xx=[s.SEA,s.SEABED,s.BADLANDS,s.DESERT,s.ICE_CAVE,s.VOLCANO,s.WASTELAND,s.ABYSS,s.SPACE,s.END],Qx=[s.TOWN,s.PLAINS,s.GRASS,s.TALL_GRASS,s.METROPOLIS,s.FOREST,s.SWAMP,s.BEACH,s.LAKE,s.MOUNTAIN,s.CAVE,s.MEADOW,s.POWER_PLANT,s.GRAVEYARD,s.DOJO,s.FACTORY,s.RUINS,s.CONSTRUCTION_SITE,s.JUNGLE,s.FAIRY_CAVE,s.TEMPLE,s.SLUM,s.SNOWY_FOREST,s.ISLAND,s.LABORATORY],Jx=[s.TOWN,s.PLAINS,s.GRASS,s.TALL_GRASS,s.METROPOLIS,s.FOREST,s.SWAMP,s.BEACH,s.LAKE,s.MOUNTAIN,s.BADLANDS,s.CAVE,s.DESERT,s.ICE_CAVE,s.MEADOW,s.POWER_PLANT,s.GRAVEYARD,s.DOJO,s.FACTORY,s.RUINS,s.CONSTRUCTION_SITE,s.JUNGLE,s.FAIRY_CAVE,s.TEMPLE,s.SLUM,s.SNOWY_FOREST,s.ISLAND,s.LABORATORY],$x=[s.TOWN,s.PLAINS,s.GRASS,s.TALL_GRASS,s.METROPOLIS,s.BEACH,s.LAKE,s.MEADOW,s.POWER_PLANT,s.GRAVEYARD,s.DOJO,s.FACTORY,s.CONSTRUCTION_SITE,s.SLUM,s.ISLAND],Ae={},qx=[],zx=[WA.DANCING_LESSONS],jx=[WA.MYSTERIOUS_CHALLENGERS,WA.SHADY_VITAMIN_DEALER,WA.THE_POKEMON_SALESMAN,WA.THE_WINSTRATE_CHALLENGE,WA.THE_EXPERT_POKEMON_BREEDER],A7=[WA.DEPARTMENT_STORE_SALE,WA.PART_TIMER,WA.FUN_AND_GAMES,WA.GLOBAL_TRADE_SYSTEM],E7=[WA.FIGHT_OR_FLIGHT,WA.DARK_DEAL,WA.MYSTERIOUS_CHEST,WA.TRAINING_SESSION,WA.DELIBIRDY,WA.A_TRAINERS_TEST,WA.TRASH_TO_TREASURE,WA.BERRIES_ABOUND,WA.CLOWNING_AROUND,WA.WEIRD_DREAM,WA.TELEPORTING_HIJINKS,WA.BUG_TYPE_SUPERFAN,WA.UNCOMMON_BREED],CT=new Map([[s.TOWN,[]],[s.PLAINS,[WA.SLUMBERING_SNORLAX]],[s.GRASS,[WA.SLUMBERING_SNORLAX,WA.ABSOLUTE_AVARICE]],[s.TALL_GRASS,[WA.SLUMBERING_SNORLAX,WA.ABSOLUTE_AVARICE]],[s.METROPOLIS,[]],[s.FOREST,[WA.SAFARI_ZONE,WA.ABSOLUTE_AVARICE]],[s.SEA,[WA.LOST_AT_SEA]],[s.SWAMP,[WA.SAFARI_ZONE]],[s.BEACH,[]],[s.LAKE,[]],[s.SEABED,[]],[s.MOUNTAIN,[]],[s.BADLANDS,[WA.DANCING_LESSONS]],[s.CAVE,[WA.THE_STRONG_STUFF]],[s.DESERT,[WA.DANCING_LESSONS]],[s.ICE_CAVE,[]],[s.MEADOW,[]],[s.POWER_PLANT,[]],[s.VOLCANO,[WA.FIERY_FALLOUT,WA.DANCING_LESSONS]],[s.GRAVEYARD,[]],[s.DOJO,[]],[s.FACTORY,[]],[s.RUINS,[]],[s.WASTELAND,[WA.DANCING_LESSONS]],[s.ABYSS,[WA.DANCING_LESSONS]],[s.SPACE,[WA.THE_EXPERT_POKEMON_BREEDER]],[s.CONSTRUCTION_SITE,[]],[s.JUNGLE,[WA.SAFARI_ZONE]],[s.FAIRY_CAVE,[]],[s.TEMPLE,[]],[s.SLUM,[]],[s.SNOWY_FOREST,[]],[s.ISLAND,[]],[s.LABORATORY,[]]]);function e7(){Ae[WA.MYSTERIOUS_CHALLENGERS]=R8,Ae[WA.MYSTERIOUS_CHEST]=O8,Ae[WA.DARK_DEAL]=Jv,Ae[WA.FIGHT_OR_FLIGHT]=E8,Ae[WA.TRAINING_SESSION]=S8,Ae[WA.SLUMBERING_SNORLAX]=L8,Ae[WA.DEPARTMENT_STORE_SALE]=$v,Ae[WA.SHADY_VITAMIN_DEALER]=t8,Ae[WA.FIELD_TRIP]=qv,Ae[WA.SAFARI_ZONE]=s8,Ae[WA.LOST_AT_SEA]=e8,Ae[WA.FIERY_FALLOUT]=o8,Ae[WA.THE_STRONG_STUFF]=M8,Ae[WA.THE_POKEMON_SALESMAN]=_8,Ae[WA.AN_OFFER_YOU_CANT_REFUSE]=H8,Ae[WA.DELIBIRDY]=u8,Ae[WA.ABSOLUTE_AVARICE]=c8,Ae[WA.A_TRAINERS_TEST]=F8,Ae[WA.TRASH_TO_TREASURE]=Y8,Ae[WA.BERRIES_ABOUND]=d8,Ae[WA.CLOWNING_AROUND]=p8,Ae[WA.PART_TIMER]=y8,Ae[WA.DANCING_LESSONS]=X8,Ae[WA.WEIRD_DREAM]=Rx,Ae[WA.THE_WINSTRATE_CHALLENGE]=ax,Ae[WA.TELEPORTING_HIJINKS]=lx,Ae[WA.BUG_TYPE_SUPERFAN]=Px,Ae[WA.FUN_AND_GAMES]=cx,Ae[WA.UNCOMMON_BREED]=Wx,Ae[WA.GLOBAL_TRADE_SYSTEM]=mx,Ae[WA.THE_EXPERT_POKEMON_BREEDER]=bx,qx.forEach(e=>{Xx.forEach(I=>{const L=CT.get(I);L&&!L.includes(e)&&L.push(e)})}),zx.forEach(e=>{Qx.forEach(I=>{const L=CT.get(I);L&&!L.includes(e)&&L.push(e)})}),jx.forEach(e=>{Jx.forEach(I=>{const L=CT.get(I);L&&!L.includes(e)&&L.push(e)})}),A7.forEach(e=>{$x.forEach(I=>{const L=CT.get(I);L&&!L.includes(e)&&L.push(e)})});let R="";CT.forEach((e,I)=>{E7.forEach(L=>{e.includes(L)||e.push(L)}),R+=`${J4(I).toUpperCase()}: [${e.map(L=>WA[L].toString().toLowerCase()).sort().join(", ")}]
`})}r(e7,"initMysteryEncounters");var BH=(R=>(R[R.ENDLESS_MODE=0]="ENDLESS_MODE",R[R.MINI_BLACK_HOLE=1]="MINI_BLACK_HOLE",R[R.SPLICED_ENDLESS_MODE=2]="SPLICED_ENDLESS_MODE",R[R.EVIOLITE=3]="EVIOLITE",R))(BH||{});function R7(){oN[p.COMMON]=[new _A(k.BERRY,1)].map(R=>(R.setTier(p.COMMON),R)),oN[p.GREAT]=[new _A(k.BASE_STAT_BOOSTER,1)].map(R=>(R.setTier(p.GREAT),R)),oN[p.ULTRA]=[new _A(k.ATTACK_TYPE_BOOSTER,10),new _A(k.WHITE_HERB,0)].map(R=>(R.setTier(p.ULTRA),R)),oN[p.ROGUE]=[new _A(k.LUCKY_EGG,4)].map(R=>(R.setTier(p.ROGUE),R)),oN[p.MASTER]=[new _A(k.GOLDEN_EGG,1)].map(R=>(R.setTier(p.MASTER),R))}r(R7,"initWildModifierPool");function O7(){tT[p.COMMON]=[new _A(k.POKEBALL,()=>kr(MA.POKEBALL)?0:6,6),new _A(k.RARE_CANDY,2),new _A(k.POTION,R=>Math.min(R.filter(I=>I.getInverseHp()>=10&&I.getHpRatio()<=.875&&!I.isFainted()).length,3)*3,9),new _A(k.SUPER_POTION,R=>Math.min(R.filter(I=>I.getInverseHp()>=25&&I.getHpRatio()<=.75&&!I.isFainted()).length,3),3),new _A(k.ETHER,R=>Math.min(R.filter(I=>I.hp&&!I.getHeldItems().some(L=>L instanceof ce&&L.berryType===EE.LEPPA)&&I.getMoveset().filter(L=>L.ppUsed&&L.getMovePp()-L.ppUsed<=5&&L.ppUsed>Math.floor(L.getMovePp()/2)).length).length,3)*3,9),new _A(k.MAX_ETHER,R=>Math.min(R.filter(I=>I.hp&&!I.getHeldItems().some(L=>L instanceof ce&&L.berryType===EE.LEPPA)&&I.getMoveset().filter(L=>L.ppUsed&&L.getMovePp()-L.ppUsed<=5&&L.ppUsed>Math.floor(L.getMovePp()/2)).length).length,3),3),new _A(k.LURE,KH(10,2)),new _A(k.TEMP_STAT_STAGE_BOOSTER,4),new _A(k.BERRY,2),new _A(k.TM_COMMON,2)].map(R=>(R.setTier(p.COMMON),R))}r(O7,"initCommonModifierPool");function I7(){tT[p.GREAT]=[new _A(k.GREAT_BALL,()=>kr(MA.GREAT_BALL)?0:6,6),new _A(k.PP_UP,2),new _A(k.FULL_HEAL,R=>Math.min(R.filter(I=>I.hp&&!!I.status&&!I.getHeldItems().some(L=>{var N;return L instanceof yt?L.getStatusEffect()===((N=I.status)==null?void 0:N.effect):!1})).length,3)*6,18),new _A(k.REVIVE,R=>Math.min(R.filter(I=>I.isFainted()).length,3)*9,27),new _A(k.MAX_REVIVE,R=>Math.min(R.filter(I=>I.isFainted()).length,3)*3,9),new _A(k.SACRED_ASH,R=>R.filter(e=>e.isFainted()).length>=Math.ceil(R.length/2)?1:0,1),new _A(k.HYPER_POTION,R=>Math.min(R.filter(I=>I.getInverseHp()>=100&&I.getHpRatio()<=.625&&!I.isFainted()).length,3)*3,9),new _A(k.MAX_POTION,R=>Math.min(R.filter(I=>I.getInverseHp()>=100&&I.getHpRatio()<=.5&&!I.isFainted()).length,3),3),new _A(k.FULL_RESTORE,R=>{const e=Math.min(R.filter(L=>L.hp&&!!L.status&&!L.getHeldItems().some(N=>{var S;return N instanceof yt?N.getStatusEffect()===((S=L.status)==null?void 0:S.effect):!1})).length,3);return Math.floor((Math.min(R.filter(L=>L.getInverseHp()>=100&&L.getHpRatio()<=.5&&!L.isFainted()).length,3)+e)/2)},3),new _A(k.ELIXIR,R=>Math.min(R.filter(I=>I.hp&&!I.getHeldItems().some(L=>L instanceof ce&&L.berryType===EE.LEPPA)&&I.getMoveset().filter(L=>L.ppUsed&&L.getMovePp()-L.ppUsed<=5&&L.ppUsed>Math.floor(L.getMovePp()/2)).length).length,3)*3,9),new _A(k.MAX_ELIXIR,R=>Math.min(R.filter(I=>I.hp&&!I.getHeldItems().some(L=>L instanceof ce&&L.berryType===EE.LEPPA)&&I.getMoveset().filter(L=>L.ppUsed&&L.getMovePp()-L.ppUsed<=5&&L.ppUsed>Math.floor(L.getMovePp()/2)).length).length,3),3),new _A(k.DIRE_HIT,4),new _A(k.SUPER_LURE,KH(15,4)),new _A(k.NUGGET,KI(5)),new _A(k.SPECIES_STAT_BOOSTER,4),new _A(k.EVOLUTION_ITEM,()=>Math.min(Math.ceil(T.currentBattle.waveIndex/15),8),8),new _A(k.MAP,()=>T.gameMode.isClassic&&T.currentBattle.waveIndex<180?2:0,2),new _A(k.SOOTHE_BELL,2),new _A(k.TM_GREAT,3),new _A(k.MEMORY_MUSHROOM,R=>{if(!R.find(I=>I.getLearnableLevelMoves().length))return 0;const e=R.map(I=>I.level).reduce((I,L)=>Math.max(I,L),1);return Math.min(Math.ceil(e/20),4)},4),new _A(k.BASE_STAT_BOOSTER,3),new _A(k.TERA_SHARD,R=>R.filter(e=>!(e.hasSpecies(A.TERAPAGOS)||e.hasSpecies(A.OGERPON)||e.hasSpecies(A.SHEDINJA))).length>0?1:0),new _A(k.DNA_SPLICERS,R=>{if(R.filter(e=>!e.fusionSpecies).length>1){if(T.gameMode.isSplicedOnly)return 4;if(T.gameMode.isClassic&&pe.areFusionsBoosted())return 2}return 0},4),new _A(k.VOUCHER,(R,e)=>T.gameMode.isDaily?0:Math.max(1-e,0),1)].map(R=>(R.setTier(p.GREAT),R))}r(I7,"initGreatModifierPool");function t7(){tT[p.ULTRA]=[new _A(k.ULTRA_BALL,()=>kr(MA.ULTRA_BALL)?0:15,15),new _A(k.MAX_LURE,KH(30,4)),new _A(k.BIG_NUGGET,KI(12)),new _A(k.PP_MAX,3),new _A(k.MINT,4),new _A(k.RARE_EVOLUTION_ITEM,()=>Math.min(Math.ceil(T.currentBattle.waveIndex/15)*4,32),32),new _A(k.FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(T.currentBattle.waveIndex/50),4)*6,24),new _A(k.AMULET_COIN,KI(3)),new _A(k.EVIOLITE,R=>{const{gameMode:e,gameData:I}=T;return(e.isDaily||!e.isFreshStartChallenge()&&I.isUnlocked(BH.EVIOLITE))&&R.some(L=>!L.isMax()&&(L.getSpeciesForm(!0).speciesId in lE||L.isFusion()&&L.getFusionSpeciesForm(!0).speciesId in lE)?!L.getHeldItems().some(N=>N.type.id==="EVIOLITE"):!1)?10:0}),new _A(k.RARE_SPECIES_STAT_BOOSTER,12),new _A(k.LEEK,R=>{const e=[A.FARFETCHD,A.GALAR_FARFETCHD,A.SIRFETCHD];return R.some(I=>!I.getHeldItems().some(L=>L instanceof fS)&&(e.includes(I.getSpeciesForm(!0).speciesId)||I.isFusion()&&e.includes(I.getFusionSpeciesForm(!0).speciesId)))?12:0},12),new _A(k.TOXIC_ORB,R=>R.some(e=>{if(!e.getHeldItems().some(L=>L.type.id==="FLAME_ORB"||L.type.id==="TOXIC_ORB")){const L=e.getMoveset(!0).filter(i=>!SA(i)).map(i=>i.moveId),N=e.canSetStatus(J.TOXIC,!0,!0,null,!0),S=[E.FACADE,E.PSYCHO_SHIFT].some(i=>L.includes(i)),n=[].some(i=>L.includes(i));if(N){const i=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(l=>e.hasAbility(l,!1,!0)),C=[O.TOXIC_BOOST,O.POISON_HEAL].some(l=>e.hasAbility(l,!1,!0)),o=[O.FLARE_BOOST].some(l=>e.hasAbility(l,!1,!0));return C||i&&!o||S}return n}return!1})?10:0,10),new _A(k.FLAME_ORB,R=>R.some(e=>{if(!e.getHeldItems().some(L=>L.type.id==="FLAME_ORB"||L.type.id==="TOXIC_ORB")){const L=e.getMoveset(!0).filter(i=>!SA(i)).map(i=>i.moveId),N=e.canSetStatus(J.BURN,!0,!0,null,!0),S=[E.FACADE,E.PSYCHO_SHIFT].some(i=>L.includes(i)),n=[].some(i=>L.includes(i));if(N){const i=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(l=>e.hasAbility(l,!1,!0)),C=[O.FLARE_BOOST].some(l=>e.hasAbility(l,!1,!0)),o=[O.TOXIC_BOOST,O.POISON_HEAL].some(l=>e.hasAbility(l,!1,!0));return C||i&&!o||S}return n}return!1})?10:0,10),new _A(k.MYSTICAL_ROCK,R=>R.some(e=>{let I=!1;for(const L of e.getHeldItems())if(L.type.id==="MYSTICAL_ROCK"){I=L.getStackCount()===L.getMaxStackCount();break}if(!I){const L=e.getMoveset(!0).map(n=>n.moveId),N=[O.DROUGHT,O.ORICHALCUM_PULSE,O.DRIZZLE,O.SAND_STREAM,O.SAND_SPIT,O.SNOW_WARNING,O.ELECTRIC_SURGE,O.HADRON_ENGINE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.SEED_SOWER,O.MISTY_SURGE].some(n=>e.hasAbility(n,!1,!0)),S=[E.SUNNY_DAY,E.RAIN_DANCE,E.SANDSTORM,E.SNOWSCAPE,E.HAIL,E.CHILLY_RECEPTION,E.ELECTRIC_TERRAIN,E.PSYCHIC_TERRAIN,E.GRASSY_TERRAIN,E.MISTY_TERRAIN].some(n=>L.includes(n));return N||S}return!1})?10:0,10),new _A(k.REVIVER_SEED,4),new _A(k.CANDY_JAR,KI(5)),new _A(k.ATTACK_TYPE_BOOSTER,9),new _A(k.TM_ULTRA,11),new _A(k.RARER_CANDY,4),new _A(k.GOLDEN_PUNCH,KI(2)),new _A(k.IV_SCANNER,KI(4)),new _A(k.EXP_CHARM,KI(8)),new _A(k.EXP_SHARE,KI(10)),new _A(k.TERA_ORB,()=>T.gameMode.isClassic?0:Math.min(Math.max(Math.floor(T.currentBattle.waveIndex/50)*2,1),4),4),new _A(k.QUICK_CLAW,3),new _A(k.WIDE_LENS,7)].map(R=>(R.setTier(p.ULTRA),R))}r(t7,"initUltraModifierPool");function L7(){tT[p.ROGUE]=[new _A(k.ROGUE_BALL,()=>kr(MA.ROGUE_BALL)?0:16,16),new _A(k.RELIC_GOLD,KI(2)),new _A(k.LEFTOVERS,3),new _A(k.SHELL_BELL,3),new _A(k.BERRY_POUCH,4),new _A(k.GRIP_CLAW,5),new _A(k.SCOPE_LENS,4),new _A(k.BATON,2),new _A(k.SOUL_DEW,7),new _A(k.CATCHING_CHARM,()=>T.gameMode.isClassic?0:4,4),new _A(k.ABILITY_CHARM,q3(189,6)),new _A(k.FOCUS_BAND,5),new _A(k.KINGS_ROCK,3),new _A(k.LOCK_CAPSULE,()=>T.gameMode.isClassic?0:3),new _A(k.SUPER_EXP_CHARM,KI(8)),new _A(k.RARE_FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(T.currentBattle.waveIndex/50),4)*6,24),new _A(k.MEGA_BRACELET,()=>Math.min(Math.ceil(T.currentBattle.waveIndex/50),4)*9,36),new _A(k.DYNAMAX_BAND,()=>Math.min(Math.ceil(T.currentBattle.waveIndex/50),4)*9,36),new _A(k.VOUCHER_PLUS,(R,e)=>T.gameMode.isDaily?0:Math.max(3-e*1,0),3)].map(R=>(R.setTier(p.ROGUE),R))}r(L7,"initRogueModifierPool");function N7(){tT[p.MASTER]=[new _A(k.MASTER_BALL,()=>kr(MA.MASTER_BALL)?0:24,24),new _A(k.SHINY_CHARM,14),new _A(k.HEALING_CHARM,18),new _A(k.MULTI_LENS,18),new _A(k.VOUCHER_PREMIUM,(R,e)=>!T.gameMode.isDaily&&!T.gameMode.isEndless&&!T.gameMode.isSplicedOnly?Math.max(5-e*2,0):0,5),new _A(k.DNA_SPLICERS,R=>!(T.gameMode.isClassic&&pe.areFusionsBoosted())&&!T.gameMode.isSplicedOnly&&R.filter(e=>!e.fusionSpecies).length>1?24:0,24),new _A(k.MINI_BLACK_HOLE,()=>T.gameMode.isDaily||!T.gameMode.isFreshStartChallenge()&&T.gameData.isUnlocked(BH.MINI_BLACK_HOLE)?1:0,1)].map(R=>(R.setTier(p.MASTER),R))}r(N7,"initMasterModifierPool");function S7(){MN[p.COMMON]=[new _A(k.BERRY,8),new _A(k.BASE_STAT_BOOSTER,3)].map(R=>(R.setTier(p.COMMON),R)),MN[p.GREAT]=[new _A(k.BASE_STAT_BOOSTER,3)].map(R=>(R.setTier(p.GREAT),R)),MN[p.ULTRA]=[new _A(k.ATTACK_TYPE_BOOSTER,10),new _A(k.WHITE_HERB,0)].map(R=>(R.setTier(p.ULTRA),R)),MN[p.ROGUE]=[new _A(k.FOCUS_BAND,2),new _A(k.LUCKY_EGG,4),new _A(k.QUICK_CLAW,1),new _A(k.GRIP_CLAW,1),new _A(k.WIDE_LENS,1)].map(R=>(R.setTier(p.ROGUE),R)),MN[p.MASTER]=[new _A(k.KINGS_ROCK,1),new _A(k.LEFTOVERS,1),new _A(k.SHELL_BELL,1),new _A(k.SCOPE_LENS,1)].map(R=>(R.setTier(p.MASTER),R))}r(S7,"initTrainerModifierPool");function T7(){DN[p.COMMON]=[new _A(k.ENEMY_DAMAGE_BOOSTER,9),new _A(k.ENEMY_DAMAGE_REDUCTION,9),new _A(k.ENEMY_ATTACK_POISON_CHANCE,3),new _A(k.ENEMY_ATTACK_PARALYZE_CHANCE,3),new _A(k.ENEMY_ATTACK_BURN_CHANCE,3),new _A(k.ENEMY_STATUS_EFFECT_HEAL_CHANCE,9),new _A(k.ENEMY_ENDURE_CHANCE,4),new _A(k.ENEMY_FUSED_CHANCE,1)].map(R=>(R.setTier(p.COMMON),R)),DN[p.GREAT]=[new _A(k.ENEMY_DAMAGE_BOOSTER,5),new _A(k.ENEMY_DAMAGE_REDUCTION,5),new _A(k.ENEMY_STATUS_EFFECT_HEAL_CHANCE,5),new _A(k.ENEMY_ENDURE_CHANCE,5),new _A(k.ENEMY_FUSED_CHANCE,1)].map(R=>(R.setTier(p.GREAT),R)),DN[p.ULTRA]=[new _A(k.ENEMY_DAMAGE_BOOSTER,10),new _A(k.ENEMY_DAMAGE_REDUCTION,10),new _A(k.ENEMY_HEAL,10),new _A(k.ENEMY_STATUS_EFFECT_HEAL_CHANCE,10),new _A(k.ENEMY_ENDURE_CHANCE,10),new _A(k.ENEMY_FUSED_CHANCE,5)].map(R=>(R.setTier(p.ULTRA),R)),DN[p.ROGUE]=[].map(R=>(R.setTier(p.ROGUE),R)),DN[p.MASTER]=[].map(R=>(R.setTier(p.MASTER),R))}r(T7,"initEnemyBuffModifierPool");function s7(){lN[p.COMMON]=[new _A(k.BASE_STAT_BOOSTER,1),new _A(k.BERRY,3)].map(R=>(R.setTier(p.COMMON),R)),lN[p.GREAT]=[new _A(k.ATTACK_TYPE_BOOSTER,5)].map(R=>(R.setTier(p.GREAT),R)),lN[p.ULTRA]=[new _A(k.REVIVER_SEED,4),new _A(k.SOOTHE_BELL,1),new _A(k.SOUL_DEW,1),new _A(k.GOLDEN_PUNCH,1)].map(R=>(R.setTier(p.ULTRA),R)),lN[p.ROGUE]=[new _A(k.GRIP_CLAW,5),new _A(k.BATON,2),new _A(k.FOCUS_BAND,5),new _A(k.QUICK_CLAW,3),new _A(k.KINGS_ROCK,3)].map(R=>(R.setTier(p.ROGUE),R)),lN[p.MASTER]=[new _A(k.LEFTOVERS,1),new _A(k.SHELL_BELL,1)].map(R=>(R.setTier(p.MASTER),R))}r(s7,"initDailyStarterModifierPool");function a7(){O7(),I7(),t7(),L7(),N7(),R7(),S7(),T7(),s7()}r(a7,"initModifierPools");function q3(R,e){return()=>{const I=T.gameMode,L=T.currentBattle.waveIndex;return I.isClassic&&L>=R?0:e}}r(q3,"skipInClassicAfterWave");function KI(R){return q3(199,R)}r(KI,"skipInLastClassicWaveOrDefault");function KH(R,e){return()=>{const I=T.getModifiers(GS);return!(T.gameMode.isClassic&&T.currentBattle.waveIndex===199)&&(I.length===0||I.filter(L=>L.getMaxBattles()===R&&L.getBattleCount()>=R*.6).length===0)?e:0}}r(KH,"lureWeightFunc");function kr(R){return T.gameMode.isClassic&&T.pokeballCounts[R]>=T3}r(kr,"hasMaximumBalls");const tL=class tL extends QP{constructor(){super(tL.KEY),this.LOAD_EVENTS=Phaser.Loader.Events,Phaser.Plugins.PluginCache.register("Loader",XP,"load")}preload(){Ky(),this.load.manifest=this.game.manifest,this.loadImage("loading_bg","arenas"),this.loadImage("logo",""),this.loadAtlas("bg","ui"),this.loadAtlas("prompt","ui"),this.loadImage("candy","ui"),this.loadImage("candy_overlay","ui"),this.loadImage("friendship","ui"),this.loadImage("friendship_overlay","ui"),this.loadImage("cursor","ui"),this.loadImage("cursor_reverse","ui");for(const I of nR(MH))for(let L=1;L<=5;L++)this.loadImage(`window_${L}${YT(I)}`,"ui/windows");this.loadAtlas("namebox","ui"),this.loadImage("pbinfo_player","ui"),this.loadImage("pbinfo_player_stats","ui"),this.loadImage("pbinfo_player_mini","ui"),this.loadImage("pbinfo_player_mini_stats","ui"),this.loadAtlas("pbinfo_player_type","ui"),this.loadAtlas("pbinfo_player_type1","ui"),this.loadAtlas("pbinfo_player_type2","ui"),this.loadImage("pbinfo_enemy_mini","ui"),this.loadImage("pbinfo_enemy_mini_stats","ui"),this.loadImage("pbinfo_enemy_boss","ui"),this.loadImage("pbinfo_enemy_boss_stats","ui"),this.loadAtlas("pbinfo_enemy_type","ui"),this.loadAtlas("pbinfo_enemy_type1","ui"),this.loadAtlas("pbinfo_enemy_type2","ui"),this.loadAtlas("pbinfo_stat","ui"),this.loadAtlas("pbinfo_stat_numbers","ui"),this.loadImage("overlay_lv","ui"),this.loadAtlas("numbers","ui"),this.loadAtlas("numbers_red","ui"),this.loadAtlas("overlay_hp","ui"),this.loadAtlas("overlay_hp_boss","ui"),this.loadImage("overlay_exp","ui"),this.loadImage("icon_owned","ui"),this.loadImage("icon_egg_move","ui"),this.loadImage("ability_bar_left","ui"),this.loadImage("ability_bar_right","ui"),this.loadImage("bgm_bar","ui"),this.loadImage("party_exp_bar","ui"),this.loadImage("achv_bar","ui"),this.loadImage("achv_bar_2","ui"),this.loadImage("achv_bar_3","ui"),this.loadImage("achv_bar_4","ui"),this.loadImage("achv_bar_5","ui"),this.loadImage("shiny_star","ui","shiny.png"),this.loadImage("shiny_star_1","ui","shiny_1.png"),this.loadImage("shiny_star_2","ui","shiny_2.png"),this.loadImage("shiny_star_small","ui","shiny_small.png"),this.loadImage("shiny_star_small_1","ui","shiny_small_1.png"),this.loadImage("shiny_star_small_2","ui","shiny_small_2.png"),this.loadImage("favorite","ui","favorite.png"),this.loadImage("passive_bg","ui","passive_bg.png"),this.loadAtlas("shiny_icons","ui"),this.loadImage("ha_capsule","ui","ha_capsule.png"),this.loadImage("champion_ribbon","ui","champion_ribbon.png"),this.loadImage("icon_spliced","ui"),this.loadImage("icon_lock","ui","icon_lock.png"),this.loadImage("icon_stop","ui","icon_stop.png"),this.loadImage("icon_tera","ui"),this.loadImage("cursor_tera","ui"),this.loadImage("type_tera","ui"),this.loadAtlas("type_bgs","ui"),this.loadAtlas("button_tera","ui"),this.loadImage("mystery_egg","ui"),this.loadImage("normal_memory","ui"),this.loadImage("dawn_icon_fg","ui"),this.loadImage("dawn_icon_mg","ui"),this.loadImage("dawn_icon_bg","ui"),this.loadImage("day_icon_fg","ui"),this.loadImage("day_icon_mg","ui"),this.loadImage("day_icon_bg","ui"),this.loadImage("dusk_icon_fg","ui"),this.loadImage("dusk_icon_mg","ui"),this.loadImage("dusk_icon_bg","ui"),this.loadImage("night_icon_fg","ui"),this.loadImage("night_icon_mg","ui"),this.loadImage("night_icon_bg","ui"),this.loadImage("pb_tray_overlay_player","ui"),this.loadImage("pb_tray_overlay_enemy","ui"),this.loadAtlas("pb_tray_ball","ui"),this.loadImage("party_bg","ui"),this.loadImage("party_bg_double","ui"),this.loadAtlas("party_slot_main","ui"),this.loadAtlas("party_slot","ui"),this.loadImage("party_slot_overlay_lv","ui"),this.loadImage("party_slot_hp_bar","ui"),this.loadAtlas("party_slot_hp_overlay","ui"),this.loadAtlas("party_pb","ui"),this.loadAtlas("party_cancel","ui"),this.loadImage("summary_bg","ui"),this.loadImage("summary_overlay_shiny","ui"),this.loadImage("summary_profile","ui"),this.loadImage("summary_profile_prompt_z","ui"),this.loadImage("summary_profile_prompt_a","ui"),this.loadImage("summary_profile_ability","ui"),this.loadImage("summary_profile_passive","ui"),this.loadImage("summary_status","ui"),this.loadImage("summary_stats","ui"),this.loadImage("summary_stats_overlay_exp","ui"),this.loadImage("summary_moves","ui"),this.loadImage("summary_moves_effect","ui"),this.loadImage("summary_moves_overlay_row","ui"),this.loadImage("summary_moves_overlay_pp","ui"),this.loadAtlas("summary_moves_cursor","ui");for(let I=1;I<=3;I++)this.loadImage(`summary_tabs_${I}`,"ui");this.loadImage("scroll_bar","ui"),this.loadImage("scroll_bar_handle","ui"),this.loadImage("starter_container_bg","ui"),this.loadImage("starter_select_bg","ui"),this.loadImage("pokedex_summary_bg","ui"),this.loadImage("select_cursor","ui"),this.loadImage("select_cursor_highlight","ui"),this.loadImage("select_cursor_highlight_thick","ui"),this.loadImage("select_cursor_pokerus","ui"),this.loadImage("select_gen_cursor","ui"),this.loadImage("select_gen_cursor_highlight","ui"),this.loadImage("saving_icon","ui"),this.loadImage("discord","ui"),this.loadImage("google","ui"),this.loadImage("settings_icon","ui"),this.loadImage("link_icon","ui"),this.loadImage("unlink_icon","ui"),this.loadImage("default_bg","arenas"),nR(s).map(I=>{const L=s[I].toLowerCase(),N=L==="end",S=`${L}_a`,n=`${L}_b`;if(this.loadImage(`${L}_bg`,"arenas"),N?this.loadAtlas(S,"arenas"):this.loadImage(S,"arenas"),N?this.loadAtlas(n,"arenas"):this.loadImage(n,"arenas"),C3(I))for(let i=1;i<=3;i++){const C=i===3&&["power_plant","end"].find(l=>l===L),o=`${L}_b_${i}`;C?this.loadAtlas(o,"arenas"):this.loadImage(o,"arenas")}}),this.load.bitmapFont("item-count","fonts/item-count.png","fonts/item-count.xml"),this.loadAtlas("trainer_m_back","trainer"),this.loadAtlas("trainer_m_back_pb","trainer"),this.loadAtlas("trainer_f_back","trainer"),this.loadAtlas("trainer_f_back_pb","trainer"),this.loadAtlas("c_rival_m","character","rival_m"),this.loadAtlas("c_rival_f","character","rival_f"),this.loadImage("pkmn__back__sub","pokemon/back","sub.png"),this.loadImage("pkmn__sub","pokemon","sub.png"),this.loadAtlas("battle_stats","effects"),this.loadAtlas("shiny","effects"),this.loadAtlas("shiny_2","effects"),this.loadAtlas("shiny_3","effects"),this.loadImage("tera","effects"),this.loadAtlas("pb_particles","effects"),this.loadImage("evo_sparkle","effects"),this.loadAtlas("tera_sparkle","effects"),this.load.video("evo_bg","images/effects/evo_bg.mp4",!0),this.loadAtlas("pb",""),this.loadAtlas("items",""),this.loadAtlas("types","");const e=_.resolvedLanguage;if(e!=="en"?fy(e)?(this.loadAtlas(`statuses_${e}`,""),this.loadAtlas(`types_${e}`,"")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")),pe.activeEventHasBanner()){const I=pe.getEventBannerLangs();e&&I.includes(e)?this.loadImage(`${pe.getEventBannerFilename()}-${e}`,"events"):this.loadImage(`${pe.getEventBannerFilename()}-en`,"events")}this.loadAtlas("statuses",""),this.loadAtlas("categories",""),this.loadAtlas("egg","egg"),this.loadAtlas("egg_crack","egg"),this.loadAtlas("egg_icons","egg"),this.loadAtlas("egg_shard","egg"),this.loadAtlas("egg_lightrays","egg");for(const I of sS(k4)){const L=I.toLowerCase();this.loadImage(`gacha_${L}`,"egg"),this.loadAtlas(`gacha_underlay_${L}`,"egg")}this.loadImage("gacha_glass","egg"),this.loadImage("gacha_eggs","egg"),this.loadAtlas("gacha_hatch","egg"),this.loadImage("gacha_knob","egg"),this.loadImage("egg_list_bg","ui"),this.loadImage("egg_summary_bg","ui"),this.loadImage("end_m","cg"),this.loadImage("end_f","cg");for(let I=0;I<10;I++)this.loadAtlas(`pokemon_icons_${I}`,""),I&&this.loadAtlas(`pokemon_icons_${I}v`,"");this.loadImage("encounter_radar","mystery-encounters"),this.loadAtlas("dualshock","inputs"),this.loadAtlas("xbox","inputs"),this.loadAtlas("keyboard","inputs"),this.loadSe("select","ui"),this.loadSe("menu_open","ui"),this.loadSe("error","ui"),this.loadSe("hit"),this.loadSe("hit_strong"),this.loadSe("hit_weak"),this.loadSe("stat_up"),this.loadSe("stat_down"),this.loadSe("faint"),this.loadSe("flee"),this.loadSe("low_hp"),this.loadSe("exp"),this.loadSe("level_up"),this.loadSe("sparkle"),this.loadSe("restore"),this.loadSe("shine"),this.loadSe("shing"),this.loadSe("charge"),this.loadSe("beam"),this.loadSe("upgrade"),this.loadSe("buy"),this.loadSe("achv"),this.loadSe("pb_rel"),this.loadSe("pb_throw"),this.loadSe("pb_bounce_1"),this.loadSe("pb_bounce_2"),this.loadSe("pb_move"),this.loadSe("pb_catch"),this.loadSe("pb_lock"),this.loadSe("crit_throw"),this.loadSe("pb_tray_enter"),this.loadSe("pb_tray_ball"),this.loadSe("pb_tray_empty"),this.loadSe("egg_crack"),this.loadSe("egg_hatch"),this.loadSe("gacha_dial"),this.loadSe("gacha_running"),this.loadSe("gacha_dispense"),this.loadSe("PRSFX- Transform","battle_anims"),this.loadBgm("menu"),this.loadBgm("level_up_fanfare","bw/level_up_fanfare.mp3"),this.loadBgm("item_fanfare","bw/item_fanfare.mp3"),this.loadBgm("minor_fanfare","bw/minor_fanfare.mp3"),this.loadBgm("heal","bw/heal.mp3"),this.loadBgm("victory_trainer","bw/victory_trainer.mp3"),this.loadBgm("victory_team_plasma","bw/victory_team_plasma.mp3"),this.loadBgm("victory_gym","bw/victory_gym.mp3"),this.loadBgm("victory_champion","bw/victory_champion.mp3"),this.loadBgm("evolution","bw/evolution.mp3"),this.loadBgm("evolution_fanfare","bw/evolution_fanfare.mp3"),this.load.plugin("rextexteditplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rextexteditplugin.min.js",!0),this.loadLoadingScreen(),Ov(),a7(),Av(),Ev(),Tv(),dy(),py(),gy(),kV(),Sv(),AV(),z6(),Nv(),p6(),e7()}loadLoadingScreen(){const e=Fy(),I=[],L=this.add.image(0,0,"");L.setOrigin(0,0),L.setScale(6),L.setVisible(!1);const N=this.add.graphics();N.lineStyle(4,16711935,1).setDepth(10);const S=this.add.graphics(),n=this.add.graphics();n.lineStyle(5,16711935,1),n.fillStyle(2236962,.8);const i=this.cameras.main.width,C=this.cameras.main.height,o=i/2,l=C/2,H=this.add.image(o,240,"");H.setVisible(!1),H.setOrigin(.5,.5),H.setScale(4);const P=this.make.text({x:o,y:l-24,text:"0%",style:{font:"72px emerald",color:"#ffffff"}});P.setOrigin(.5,.5);const K=this.make.text({x:o,y:l+48,text:"",style:{font:"48px emerald",color:"#ffffff"}});K.setOrigin(.5,.5);const f=this.make.text({x:o,y:K.y+152,text:_.t("menu:disclaimer"),style:{font:"72px emerald",color:"#DA3838"}});f.setOrigin(.5,.5);const h=this.make.text({x:o,y:f.y+120,text:_.t("menu:disclaimerDescription"),style:{font:"48px emerald",color:"#ffffff",align:"center"}});h.setOrigin(.5,.5),I.push(L,N,S,n,H,P,K,f,h),e||I.map(w=>w.setVisible(!1));const F=this.add.video(0,0);F.once(Phaser.GameObjects.Events.VIDEO_COMPLETE,w=>{this.tweens.add({targets:F,duration:500,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>w.destroy(),"onComplete")});for(const m of I)m.setVisible(!0)}),F.setOrigin(0,0),F.setScale(3),this.load.once(this.LOAD_EVENTS.START,()=>{var w,m;F.loadURL("images/intro_dark.mp4",!0),e&&((w=F.video)==null||w.setAttribute("webkit-playsinline","webkit-playsinline"),(m=F.video)==null||m.setAttribute("playsinline","playsinline")),F.play()}),this.load.on(this.LOAD_EVENTS.PROGRESS,w=>{P.setText(`${Math.floor(w*100)}%`),S.clear(),S.fillStyle(16777215,.8),S.fillRect(o-320,360,640*w,64)}),this.load.on(this.LOAD_EVENTS.FILE_COMPLETE,w=>{switch(K.setText(_.t("menu:loadingAsset",{assetName:w})),w){case"loading_bg":L.setTexture("loading_bg"),e&&L.setVisible(!0);break;case"logo":H.setTexture("logo"),e&&H.setVisible(!0);break}}),this.load.on(this.LOAD_EVENTS.COMPLETE,()=>{for(const w of I)w.destroy();F.destroy()})}get gameHeight(){return this.game.config.height}get gameWidth(){return this.game.config.width}async create(){this.events.once(Phaser.Scenes.Events.DESTROY,()=>this.handleDestroy()),this.scene.start("battle")}handleDestroy(){console.debug(`Destroying ${tL.KEY} scene`),this.load.off(this.LOAD_EVENTS.PROGRESS),this.load.off(this.LOAD_EVENTS.FILE_COMPLETE),this.load.off(this.LOAD_EVENTS.COMPLETE),this.children.removeAll(!0),console.debug(`Destroyed ${tL.KEY} scene`)}};r(tL,"LoadingScene"),tL.KEY="loading";let IH=tL;const WZ=Object.freeze(Object.defineProperty({__proto__:null,LoadingScene:IH},Symbol.toStringTag,{value:"Module"}));export{C7 as $,i0 as A,yE as B,pI as C,vR as D,O as E,N8 as F,qi as G,yS as H,jI as I,rv as J,D7 as K,ma as L,C0 as M,U0 as N,aE as O,BT as P,Yy as Q,hL as R,lT as S,XA as T,hE as U,FR as V,MH as W,ji as X,MT as Y,sZ as Z,G7 as _,zL as a,J4 as a$,U7 as a0,o7 as a1,sC as a2,Fe as a3,fe as a4,rN as a5,fI as a6,X4 as a7,D as a8,M7 as a9,NZ as aA,FO as aB,Oi as aC,de as aD,r0 as aE,P3 as aF,k4 as aG,zi as aH,B as aI,c7 as aJ,YA as aK,S4 as aL,nZ as aM,s as aN,xm as aO,vm as aP,_7 as aQ,XV as aR,HA as aS,M as aT,IL as aU,iZ as aV,d6 as aW,CZ as aX,me as aY,RZ as aZ,PE as a_,KZ as aa,xt as ab,YE as ac,mA as ad,$s as ae,aS as af,kt as ag,km as ah,aZ as ai,eH as aj,AR as ak,Ke as al,jL as am,KE as an,LI as ao,H7 as ap,Ee as aq,kA as ar,Y6 as as,a3 as at,i3 as au,QA as av,te as aw,j6 as ax,xo as ay,u7 as az,oE as b,cE as b$,PZ as b0,HZ as b1,n3 as b2,r3 as b3,I_ as b4,ZC as b5,pe as b6,Jm as b7,rE as b8,eR as b9,rZ as bA,dO as bB,he as bC,wP as bD,Z as bE,vP as bF,bA as bG,yI as bH,vC as bI,xa as bJ,J as bK,ZA as bL,P7 as bM,mr as bN,b0 as bO,dt as bP,_E as bQ,I6 as bR,W6 as bS,t0 as bT,gV as bU,PN as bV,hA as bW,CA as bX,zP as bY,p as bZ,t_ as b_,kI as ba,xE as bb,lE as bc,TT as bd,a as be,ne as bf,E4 as bg,z2 as bh,Si as bi,oZ as bj,Xe as bk,_e as bl,nC as bm,OG as bn,EZ as bo,R2 as bp,cO as bq,eC as br,fO as bs,pA as bt,BH as bu,SZ as bv,LZ as bw,R0 as bx,TZ as by,h6 as bz,IG as c,k as c$,DZ as c0,wI as c1,A0 as c2,bP as c3,PV as c4,eZ as c5,_S as c6,F3 as c7,VV as c8,W3 as c9,v as cA,p7 as cB,wV as cC,vV as cD,cZ as cE,fZ as cF,wS as cG,vS as cH,f7 as cI,ft as cJ,EC as cK,b as cL,gr as cM,L_ as cN,Fa as cO,BA as cP,YS as cQ,UO as cR,Z7 as cS,h7 as cT,d7 as cU,uZ as cV,eA as cW,Q7 as cX,s3 as cY,JE as cZ,U as c_,av as ca,SE as cb,iV as cc,c as cd,XC as ce,x7 as cf,gt as cg,bC as ch,jP as ci,ce as cj,jE as ck,qP as cl,d as cm,ER as cn,vO as co,DO as cp,WO as cq,MA as cr,yC as cs,xO as ct,_H as cu,I2 as cv,q7 as cw,j7 as cx,ya as cy,BZ as cz,nS as d,B3 as d$,UH as d0,L3 as d1,N3 as d2,ea as d3,dT as d4,XO as d5,VC as d6,X7 as d7,De as d8,AA as d9,J7 as dA,jm as dB,Y7 as dC,GV as dD,eP as dE,rV as dF,KP as dG,Yt as dH,dS as dI,BN as dJ,$t as dK,dL,MI as dM,_V as dN,EL as dO,g7 as dP,Va as dQ,a_ as dR,Ua as dS,pa as dT,LO as dU,F0 as dV,_0 as dW,o0 as dX,ko as dY,$L as dZ,qL as d_,Ce as da,tZ as db,hI as dc,Ot as dd,vI as de,sP as df,W7 as dg,kL as dh,F7 as di,oa as dj,MS as dk,JA as dl,GC as dm,lC as dn,CS as dp,k7 as dq,iC as dr,sV as ds,ta as dt,ba as du,cN as dv,QL as dw,nV as dx,JL as dy,Te as dz,kn as e,ca as e$,Xo as e0,Jo as e1,AC as e2,aP as e3,m7 as e4,cG as e5,b7 as e6,y7 as e7,Ma as e8,oH as e9,OZ as eA,kP as eB,S6 as eC,O2 as eD,$7 as eE,z7 as eF,qy as eG,l7 as eH,oO as eI,t6 as eJ,oI as eK,xC as eL,GS as eM,k2 as eN,SV as eO,zm as eP,N2 as eQ,Jn as eR,st as eS,uN as eT,n0 as eU,VI as eV,GZ as eW,pt as eX,IO as eY,wt as eZ,Ka as e_,_Z as ea,L2 as eb,bL as ec,va as ed,Za as ee,w7 as ef,yt as eg,t2 as eh,FZ as ei,YZ as ej,ZL as ek,kv as el,NE as em,V7 as en,B7 as eo,v7 as ep,K7 as eq,e0 as er,E0 as es,QP as et,rI as eu,WT as ev,tG as ew,aH as ex,AZ as ey,IH as ez,Zt as f,XE as f0,lZ as f1,aA as f2,TG as f3,Wa as f4,ha as f5,fa as f6,i7 as f7,wL as f8,Ya as f9,Ae as fa,j0 as fb,CT as fc,WA as fd,e_ as fe,WZ as ff,aR as g,t as h,Q as i,wr as j,YR as k,HS as l,JS as m,G as n,IZ as o,E_ as p,YN as q,GE as r,MZ as s,OM as t,FA as u,oT as v,lS as w,ZP as x,UZ as y,lI as z};
